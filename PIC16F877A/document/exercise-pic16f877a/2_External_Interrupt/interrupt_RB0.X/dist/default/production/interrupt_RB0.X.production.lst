

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 22 07:54:02 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0088                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  0006                     	;# 
   185  0007                     	;# 
   186  0008                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  0087                     	;# 
   217  0088                     	;# 
   218  0089                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0009                     _PORTEbits	set	9
   239  0043                     _RD3	set	67
   240  0042                     _RD2	set	66
   241  0047                     _RD7	set	71
   242  0046                     _RD6	set	70
   243  0045                     _RD5	set	69
   244  0044                     _RD4	set	68
   245  0059                     _INTF	set	89
   246  005F                     _GIE	set	95
   247  005C                     _INTE	set	92
   248  0088                     _TRISD	set	136
   249  0089                     _TRISEbits	set	137
   250  009F                     _ADCON1	set	159
   251  0443                     _TRISD3	set	1091
   252  0442                     _TRISD2	set	1090
   253                           
   254                           	psect	strings
   255  033A                     __pstrings:
   256  033A                     stringtab:
   257  033A                     __stringtab:
   258  033A                     stringcode:	
   259                           ;	String table - string pointers are 1 byte each
   260                           
   261  033A                     stringdir:
   262  033A  3003               	movlw	high stringdir
   263  033B  008A               	movwf	10
   264  033C  0804               	movf	4,w
   265  033D  0A84               	incf	4,f
   266  033E  0782               	addwf	2,f
   267  033F                     __stringbase:
   268  033F  3400               	retlw	0
   269  0340                     __end_of__stringtab:
   270  0340                     STR_2:
   271  0340  3443               	retlw	67	;'C'
   272  0341  346F               	retlw	111	;'o'
   273  0342  3475               	retlw	117	;'u'
   274  0343  346E               	retlw	110	;'n'
   275  0344  3474               	retlw	116	;'t'
   276  0345  3465               	retlw	101	;'e'
   277  0346  3472               	retlw	114	;'r'
   278  0347  343A               	retlw	58	;':'
   279  0348  3420               	retlw	32	;' '
   280  0349  3400               	retlw	0
   281  034A                     STR_1:
   282  034A  3452               	retlw	82	;'R'
   283  034B  3455               	retlw	85	;'U'
   284  034C  344E               	retlw	78	;'N'
   285  034D  342E               	retlw	46	;'.'
   286  034E  342E               	retlw	46	;'.'
   287  034F  342E               	retlw	46	;'.'
   288  0350  342E               	retlw	46	;'.'
   289  0351  3400               	retlw	0
   290  034E                     
   291                           	psect	cinit
   292  000F                     start_initialization:	
   293                           ; #config settings
   294                           
   295  000F                     __initialization:
   296                           
   297                           ; Clear objects allocated to BANK0
   298  000F  1283               	bcf	3,5	;RP0=0, select bank0
   299  0010  1303               	bcf	3,6	;RP1=0, select bank0
   300  0011  01A7               	clrf	__pbssBANK0& (0+127)
   301  0012  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   302  0013  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   303  0014  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   304  0015  01AB               	clrf	(__pbssBANK0+4)& (0+127)
   305  0016  01AC               	clrf	(__pbssBANK0+5)& (0+127)
   306  0017                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  0017                     __end_of__initialization:
   310  0017  0183               	clrf	3
   311  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssBANK0
   314  0027                     __pbssBANK0:
   315  0027                     _Digit:
   316  0027                     	ds	4
   317  002B                     _number:
   318  002B                     	ds	2
   319                           
   320                           	psect	cstackCOMMON
   321  0070                     __pcstackCOMMON:
   322  0070                     ?_LCD_Init:
   323  0070                     ?_LCD_Write_String:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_LCD_Write_Char:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_ExtInt:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_ISR:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_ISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_LCD_DATA:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_LCD_CMD:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ??_ExtInt:
   351  0072                     ??_LCD_DATA:	
   352                           ; 1 bytes @ 0x2
   353                           
   354  0072                     ?___lwdiv:	
   355                           ; 1 bytes @ 0x2
   356                           
   357  0072                     ?___lwmod:	
   358                           ; 2 bytes @ 0x2
   359                           
   360  0072                     LCD_DATA@Data:	
   361                           ; 2 bytes @ 0x2
   362                           
   363  0072                     ___lwdiv@divisor:	
   364                           ; 1 bytes @ 0x2
   365                           
   366  0072                     ___lwmod@divisor:	
   367                           ; 2 bytes @ 0x2
   368                           
   369                           
   370                           ; 2 bytes @ 0x2
   371  0072                     	ds	1
   372  0073                     ??_LCD_Write_Char:
   373  0073                     ??_LCD_CMD:	
   374                           ; 1 bytes @ 0x3
   375                           
   376                           
   377                           ; 1 bytes @ 0x3
   378  0073                     	ds	1
   379  0074                     ___lwdiv@dividend:
   380  0074                     ___lwmod@dividend:	
   381                           ; 2 bytes @ 0x4
   382                           
   383                           
   384                           ; 2 bytes @ 0x4
   385  0074                     	ds	1
   386  0075                     LCD_CMD@CMD:
   387  0075                     LCD_Write_Char@Low4:	
   388                           ; 1 bytes @ 0x5
   389                           
   390                           
   391                           ; 1 bytes @ 0x5
   392  0075                     	ds	1
   393  0076                     ??_LCD_Init:
   394  0076                     ?_LCD_Set_Cursor:	
   395                           ; 1 bytes @ 0x6
   396                           
   397  0076                     ??___lwdiv:	
   398                           ; 1 bytes @ 0x6
   399                           
   400  0076                     ??___lwmod:	
   401                           ; 1 bytes @ 0x6
   402                           
   403  0076                     LCD_Set_Cursor@c:	
   404                           ; 1 bytes @ 0x6
   405                           
   406  0076                     LCD_Write_Char@High4:	
   407                           ; 1 bytes @ 0x6
   408                           
   409  0076                     ___lwmod@counter:	
   410                           ; 1 bytes @ 0x6
   411                           
   412  0076                     ___lwdiv@quotient:	
   413                           ; 1 bytes @ 0x6
   414                           
   415                           
   416                           ; 2 bytes @ 0x6
   417  0076                     	ds	1
   418  0077                     ??_LCD_Set_Cursor:
   419  0077                     LCD_Write_Char@Data:	
   420                           ; 1 bytes @ 0x7
   421                           
   422                           
   423                           ; 1 bytes @ 0x7
   424  0077                     	ds	1
   425  0078                     ??_LCD_Write_String:
   426  0078                     LCD_Set_Cursor@r:	
   427                           ; 1 bytes @ 0x8
   428                           
   429  0078                     ___lwdiv@counter:	
   430                           ; 1 bytes @ 0x8
   431                           
   432  0078                     LCD_Write_String@i:	
   433                           ; 1 bytes @ 0x8
   434                           
   435                           
   436                           ; 2 bytes @ 0x8
   437  0078                     	ds	1
   438  0079                     LCD_Set_Cursor@Low4:
   439                           
   440                           ; 1 bytes @ 0x9
   441  0079                     	ds	1
   442  007A                     LCD_Set_Cursor@High4:
   443  007A                     LCD_Write_String@str:	
   444                           ; 1 bytes @ 0xA
   445                           
   446                           
   447                           ; 1 bytes @ 0xA
   448  007A                     	ds	1
   449  007B                     LCD_Set_Cursor@Temp:
   450                           
   451                           ; 1 bytes @ 0xB
   452  007B                     	ds	1
   453                           
   454                           	psect	cstackBANK0
   455  0020                     __pcstackBANK0:
   456  0020                     ??_main:
   457                           
   458                           ; 1 bytes @ 0x0
   459  0020                     	ds	3
   460  0023                     main@i:
   461                           
   462                           ; 2 bytes @ 0x3
   463  0023                     	ds	2
   464  0025                     main@k:
   465                           
   466                           ; 2 bytes @ 0x5
   467  0025                     	ds	2
   468                           
   469                           	psect	maintext
   470  001B                     __pmaintext:	
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 38 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  k               2    5[BANK0 ] unsigned int 
   481 ;;  i               2    3[BANK0 ] unsigned int 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B00/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       4       0       0       0
   493 ;;      Temps:          0       3       0       0       0
   494 ;;      Totals:         0       7       0       0       0
   495 ;;Total ram usage:        7 bytes
   496 ;; Hardware stack levels required when called:    4
   497 ;; This function calls:
   498 ;;		_ExtInt
   499 ;;		_LCD_Init
   500 ;;		_LCD_Set_Cursor
   501 ;;		_LCD_Write_Char
   502 ;;		_LCD_Write_String
   503 ;;		___lwdiv
   504 ;;		___lwmod
   505 ;; This function is called by:
   506 ;;		Startup code after reset
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _main
   512  001B                     _main:
   513  001B                     l1102:	
   514                           ;incstack = 0
   515                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   516                           
   517                           
   518                           ;main.c: 40:     ADCON1=0x07;
   519  001B  3007               	movlw	7
   520  001C  1683               	bsf	3,5	;RP0=1, select bank1
   521  001D  1303               	bcf	3,6	;RP1=0, select bank1
   522  001E  009F               	movwf	31	;volatile
   523  001F                     l1104:
   524                           
   525                           ;main.c: 41:     TRISEbits.TRISE2=0;
   526  001F  1109               	bcf	9,2	;volatile
   527  0020                     l1106:
   528                           
   529                           ;main.c: 42:     PORTEbits.RE2=1;
   530  0020  1283               	bcf	3,5	;RP0=0, select bank0
   531  0021  1303               	bcf	3,6	;RP1=0, select bank0
   532  0022  1509               	bsf	9,2	;volatile
   533  0023                     l1108:
   534  0023                     l1110:
   535  0023                     l1112:
   536                           
   537                           ;main.c: 46:     ExtInt();
   538  0023  120A  118A  2352  120A  118A  	fcall	_ExtInt
   539                           
   540                           ;main.c: 48:     LCD_Init();
   541  0028  120A  118A  211E  120A  118A  	fcall	_LCD_Init
   542  002D                     l1114:
   543                           
   544                           ;main.c: 49:     LCD_Set_Cursor(1,1);
   545  002D  01F6               	clrf	LCD_Set_Cursor@c
   546  002E  0AF6               	incf	LCD_Set_Cursor@c,f
   547  002F  3001               	movlw	1
   548  0030  120A  118A  21D8  120A  118A  	fcall	_LCD_Set_Cursor
   549  0035                     l1116:
   550                           
   551                           ;main.c: 50:     LCD_Write_String("RUN....");
   552  0035  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   553  0036  120A  118A  22D9  120A  118A  	fcall	_LCD_Write_String
   554  003B                     l1118:
   555                           
   556                           ;main.c: 51:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   557  003B  3015               	movlw	21
   558  003C  1283               	bcf	3,5	;RP0=0, select bank0
   559  003D  1303               	bcf	3,6	;RP1=0, select bank0
   560  003E  00A2               	movwf	??_main+2
   561  003F  304B               	movlw	75
   562  0040  00A1               	movwf	??_main+1
   563  0041  30BD               	movlw	189
   564  0042  00A0               	movwf	??_main
   565  0043                     u597:
   566  0043  0BA0               	decfsz	??_main,f
   567  0044  2843               	goto	u597
   568  0045  0BA1               	decfsz	??_main+1,f
   569  0046  2843               	goto	u597
   570  0047  0BA2               	decfsz	??_main+2,f
   571  0048  2843               	goto	u597
   572  0049  284A               	nop2
   573  004A                     l1120:
   574                           
   575                           ;main.c: 53:     LCD_Set_Cursor(2,1);
   576  004A  01F6               	clrf	LCD_Set_Cursor@c
   577  004B  0AF6               	incf	LCD_Set_Cursor@c,f
   578  004C  3002               	movlw	2
   579  004D  120A  118A  21D8  120A  118A  	fcall	_LCD_Set_Cursor
   580  0052                     l1122:
   581                           
   582                           ;main.c: 54:     LCD_Write_String("Counter: ");
   583  0052  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   584  0053  120A  118A  22D9  120A  118A  	fcall	_LCD_Write_String
   585  0058                     l1124:
   586                           
   587                           ;main.c: 55:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   588  0058  3015               	movlw	21
   589  0059  1283               	bcf	3,5	;RP0=0, select bank0
   590  005A  1303               	bcf	3,6	;RP1=0, select bank0
   591  005B  00A2               	movwf	??_main+2
   592  005C  304B               	movlw	75
   593  005D  00A1               	movwf	??_main+1
   594  005E  30BD               	movlw	189
   595  005F  00A0               	movwf	??_main
   596  0060                     u607:
   597  0060  0BA0               	decfsz	??_main,f
   598  0061  2860               	goto	u607
   599  0062  0BA1               	decfsz	??_main+1,f
   600  0063  2860               	goto	u607
   601  0064  0BA2               	decfsz	??_main+2,f
   602  0065  2860               	goto	u607
   603  0066  2867               	nop2
   604  0067                     l1126:
   605                           
   606                           ;main.c: 58:     {;main.c: 59:         Digit[0]=number/1000;
   607  0067  30E8               	movlw	232
   608  0068  00F2               	movwf	___lwdiv@divisor
   609  0069  3003               	movlw	3
   610  006A  00F3               	movwf	___lwdiv@divisor+1
   611  006B  1283               	bcf	3,5	;RP0=0, select bank0
   612  006C  1303               	bcf	3,6	;RP1=0, select bank0
   613  006D  082C               	movf	_number+1,w
   614  006E  00F5               	movwf	___lwdiv@dividend+1
   615  006F  082B               	movf	_number,w
   616  0070  00F4               	movwf	___lwdiv@dividend
   617  0071  120A  118A  2229  120A  118A  	fcall	___lwdiv
   618  0076  0872               	movf	?___lwdiv,w
   619  0077  00FF               	movwf	btemp+1
   620  0078  087F               	movf	btemp+1,w
   621  0079  1283               	bcf	3,5	;RP0=0, select bank0
   622  007A  1303               	bcf	3,6	;RP1=0, select bank0
   623  007B  00A7               	movwf	_Digit
   624  007C                     l1128:
   625                           
   626                           ;main.c: 60:         k=number%1000;
   627  007C  30E8               	movlw	232
   628  007D  00F2               	movwf	___lwmod@divisor
   629  007E  3003               	movlw	3
   630  007F  00F3               	movwf	___lwmod@divisor+1
   631  0080  082C               	movf	_number+1,w
   632  0081  00F5               	movwf	___lwmod@dividend+1
   633  0082  082B               	movf	_number,w
   634  0083  00F4               	movwf	___lwmod@dividend
   635  0084  120A  118A  226D  120A  118A  	fcall	___lwmod
   636  0089  0873               	movf	?___lwmod+1,w
   637  008A  1283               	bcf	3,5	;RP0=0, select bank0
   638  008B  1303               	bcf	3,6	;RP1=0, select bank0
   639  008C  00A6               	movwf	main@k+1
   640  008D  0872               	movf	?___lwmod,w
   641  008E  00A5               	movwf	main@k
   642  008F                     l1130:
   643                           
   644                           ;main.c: 61:         Digit[1]=k/100;
   645  008F  3064               	movlw	100
   646  0090  00F2               	movwf	___lwdiv@divisor
   647  0091  3000               	movlw	0
   648  0092  00F3               	movwf	___lwdiv@divisor+1
   649  0093  0826               	movf	main@k+1,w
   650  0094  00F5               	movwf	___lwdiv@dividend+1
   651  0095  0825               	movf	main@k,w
   652  0096  00F4               	movwf	___lwdiv@dividend
   653  0097  120A  118A  2229  120A  118A  	fcall	___lwdiv
   654  009C  0872               	movf	?___lwdiv,w
   655  009D  00FF               	movwf	btemp+1
   656  009E  087F               	movf	btemp+1,w
   657  009F  1283               	bcf	3,5	;RP0=0, select bank0
   658  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   659  00A1  00A8               	movwf	_Digit+1
   660  00A2                     l1132:
   661                           
   662                           ;main.c: 62:         k=k%100;
   663  00A2  3064               	movlw	100
   664  00A3  00F2               	movwf	___lwmod@divisor
   665  00A4  3000               	movlw	0
   666  00A5  00F3               	movwf	___lwmod@divisor+1
   667  00A6  0826               	movf	main@k+1,w
   668  00A7  00F5               	movwf	___lwmod@dividend+1
   669  00A8  0825               	movf	main@k,w
   670  00A9  00F4               	movwf	___lwmod@dividend
   671  00AA  120A  118A  226D  120A  118A  	fcall	___lwmod
   672  00AF  0873               	movf	?___lwmod+1,w
   673  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   674  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   675  00B2  00A6               	movwf	main@k+1
   676  00B3  0872               	movf	?___lwmod,w
   677  00B4  00A5               	movwf	main@k
   678  00B5                     l1134:
   679                           
   680                           ;main.c: 63:         Digit[2]=k/10;
   681  00B5  300A               	movlw	10
   682  00B6  00F2               	movwf	___lwdiv@divisor
   683  00B7  3000               	movlw	0
   684  00B8  00F3               	movwf	___lwdiv@divisor+1
   685  00B9  0826               	movf	main@k+1,w
   686  00BA  00F5               	movwf	___lwdiv@dividend+1
   687  00BB  0825               	movf	main@k,w
   688  00BC  00F4               	movwf	___lwdiv@dividend
   689  00BD  120A  118A  2229  120A  118A  	fcall	___lwdiv
   690  00C2  0872               	movf	?___lwdiv,w
   691  00C3  00FF               	movwf	btemp+1
   692  00C4  087F               	movf	btemp+1,w
   693  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   694  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   695  00C7  00A9               	movwf	_Digit+2
   696  00C8                     l1136:
   697                           
   698                           ;main.c: 64:         Digit[3]=k%10;
   699  00C8  300A               	movlw	10
   700  00C9  00F2               	movwf	___lwmod@divisor
   701  00CA  3000               	movlw	0
   702  00CB  00F3               	movwf	___lwmod@divisor+1
   703  00CC  0826               	movf	main@k+1,w
   704  00CD  00F5               	movwf	___lwmod@dividend+1
   705  00CE  0825               	movf	main@k,w
   706  00CF  00F4               	movwf	___lwmod@dividend
   707  00D0  120A  118A  226D  120A  118A  	fcall	___lwmod
   708  00D5  0872               	movf	?___lwmod,w
   709  00D6  00FF               	movwf	btemp+1
   710  00D7  087F               	movf	btemp+1,w
   711  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   712  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   713  00DA  00AA               	movwf	_Digit+3
   714  00DB                     l1138:
   715                           
   716                           ;main.c: 66:         LCD_Set_Cursor(2,10);
   717  00DB  300A               	movlw	10
   718  00DC  00FF               	movwf	btemp+1
   719  00DD  087F               	movf	btemp+1,w
   720  00DE  00F6               	movwf	LCD_Set_Cursor@c
   721  00DF  3002               	movlw	2
   722  00E0  120A  118A  21D8  120A  118A  	fcall	_LCD_Set_Cursor
   723  00E5                     l1140:
   724                           
   725                           ;main.c: 67:         for(i=0; i<4; i++)
   726  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   727  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   728  00E7  01A3               	clrf	main@i
   729  00E8  01A4               	clrf	main@i+1
   730  00E9                     l1146:
   731                           
   732                           ;main.c: 68:             LCD_Write_Char(Digit[i]+0x30);
   733  00E9  0823               	movf	main@i,w
   734  00EA  3E27               	addlw	(low (_Digit| 0))& (0+255)
   735  00EB  0084               	movwf	4
   736  00EC  1383               	bcf	3,7	;select IRP bank0
   737  00ED  0800               	movf	0,w
   738  00EE  3E30               	addlw	48
   739  00EF  120A  118A  2185  120A  118A  	fcall	_LCD_Write_Char
   740  00F4                     l1148:
   741  00F4  3001               	movlw	1
   742  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   743  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   744  00F7  07A3               	addwf	main@i,f
   745  00F8  1803               	skipnc
   746  00F9  0AA4               	incf	main@i+1,f
   747  00FA  3000               	movlw	0
   748  00FB  07A4               	addwf	main@i+1,f
   749  00FC                     l1150:
   750  00FC  3000               	movlw	0
   751  00FD  0224               	subwf	main@i+1,w
   752  00FE  3004               	movlw	4
   753  00FF  1903               	skipnz
   754  0100  0223               	subwf	main@i,w
   755  0101  1C03               	skipc
   756  0102  2904               	goto	u581
   757  0103  2905               	goto	u580
   758  0104                     u581:
   759  0104  28E9               	goto	l1146
   760  0105                     u580:
   761  0105                     l1152:
   762                           
   763                           ;main.c: 69:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   764  0105  3015               	movlw	21
   765  0106  1283               	bcf	3,5	;RP0=0, select bank0
   766  0107  1303               	bcf	3,6	;RP1=0, select bank0
   767  0108  00A2               	movwf	??_main+2
   768  0109  304B               	movlw	75
   769  010A  00A1               	movwf	??_main+1
   770  010B  30BD               	movlw	189
   771  010C  00A0               	movwf	??_main
   772  010D                     u617:
   773  010D  0BA0               	decfsz	??_main,f
   774  010E  290D               	goto	u617
   775  010F  0BA1               	decfsz	??_main+1,f
   776  0110  290D               	goto	u617
   777  0111  0BA2               	decfsz	??_main+2,f
   778  0112  290D               	goto	u617
   779  0113  2914               	nop2
   780  0114                     l1154:
   781                           
   782                           ;main.c: 70:         LCD_Write_String("...");
   783  0114  300F               	movlw	(low (((STR_1+4)-__stringbase)| (0+32768)))& (0+255)
   784  0115  120A  118A  22D9  120A  118A  	fcall	_LCD_Write_String
   785  011A  2867               	goto	l1126
   786  011B  120A  118A  280C   	ljmp	start
   787  011E                     __end_of_main:
   788                           
   789                           	psect	text1
   790  026D                     __ptext1:	
   791 ;; *************** function ___lwmod *****************
   792 ;; Defined at:
   793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  divisor         2    2[COMMON] unsigned int 
   796 ;;  dividend        2    4[COMMON] unsigned int 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  counter         1    6[COMMON] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  2    2[COMMON] unsigned int 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, btemp+1
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         4       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0
   811 ;;      Totals:         5       0       0       0       0
   812 ;;Total ram usage:        5 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    1
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function ___lwmod
   824  026D                     ___lwmod:
   825  026D                     l1066:	
   826                           ;incstack = 0
   827                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   828                           
   829  026D  0872               	movf	___lwmod@divisor,w
   830  026E  0473               	iorwf	___lwmod@divisor+1,w
   831  026F  1903               	btfsc	3,2
   832  0270  2A72               	goto	u471
   833  0271  2A73               	goto	u470
   834  0272                     u471:
   835  0272  2AA2               	goto	l1084
   836  0273                     u470:
   837  0273                     l1068:
   838  0273  01F6               	clrf	___lwmod@counter
   839  0274  0AF6               	incf	___lwmod@counter,f
   840  0275  2A81               	goto	l1074
   841  0276                     l1070:
   842  0276  3001               	movlw	1
   843  0277                     u485:
   844  0277  1003               	clrc
   845  0278  0DF2               	rlf	___lwmod@divisor,f
   846  0279  0DF3               	rlf	___lwmod@divisor+1,f
   847  027A  3EFF               	addlw	-1
   848  027B  1D03               	skipz
   849  027C  2A77               	goto	u485
   850  027D                     l1072:
   851  027D  3001               	movlw	1
   852  027E  00FF               	movwf	btemp+1
   853  027F  087F               	movf	btemp+1,w
   854  0280  07F6               	addwf	___lwmod@counter,f
   855  0281                     l1074:
   856  0281  1FF3               	btfss	___lwmod@divisor+1,7
   857  0282  2A84               	goto	u491
   858  0283  2A85               	goto	u490
   859  0284                     u491:
   860  0284  2A76               	goto	l1070
   861  0285                     u490:
   862  0285                     l1076:
   863  0285  0873               	movf	___lwmod@divisor+1,w
   864  0286  0275               	subwf	___lwmod@dividend+1,w
   865  0287  1D03               	skipz
   866  0288  2A8B               	goto	u505
   867  0289  0872               	movf	___lwmod@divisor,w
   868  028A  0274               	subwf	___lwmod@dividend,w
   869  028B                     u505:
   870  028B  1C03               	skipc
   871  028C  2A8E               	goto	u501
   872  028D  2A8F               	goto	u500
   873  028E                     u501:
   874  028E  2A95               	goto	l1080
   875  028F                     u500:
   876  028F                     l1078:
   877  028F  0872               	movf	___lwmod@divisor,w
   878  0290  02F4               	subwf	___lwmod@dividend,f
   879  0291  0873               	movf	___lwmod@divisor+1,w
   880  0292  1C03               	skipc
   881  0293  03F5               	decf	___lwmod@dividend+1,f
   882  0294  02F5               	subwf	___lwmod@dividend+1,f
   883  0295                     l1080:
   884  0295  3001               	movlw	1
   885  0296                     u515:
   886  0296  1003               	clrc
   887  0297  0CF3               	rrf	___lwmod@divisor+1,f
   888  0298  0CF2               	rrf	___lwmod@divisor,f
   889  0299  3EFF               	addlw	-1
   890  029A  1D03               	skipz
   891  029B  2A96               	goto	u515
   892  029C                     l1082:
   893  029C  3001               	movlw	1
   894  029D  02F6               	subwf	___lwmod@counter,f
   895  029E  1D03               	btfss	3,2
   896  029F  2AA1               	goto	u521
   897  02A0  2AA2               	goto	u520
   898  02A1                     u521:
   899  02A1  2A85               	goto	l1076
   900  02A2                     u520:
   901  02A2                     l1084:
   902  02A2  0875               	movf	___lwmod@dividend+1,w
   903  02A3  00F3               	movwf	?___lwmod+1
   904  02A4  0874               	movf	___lwmod@dividend,w
   905  02A5  00F2               	movwf	?___lwmod
   906  02A6                     l474:
   907  02A6  0008               	return
   908  02A7                     __end_of___lwmod:
   909                           
   910                           	psect	text2
   911  0229                     __ptext2:	
   912 ;; *************** function ___lwdiv *****************
   913 ;; Defined at:
   914 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  divisor         2    2[COMMON] unsigned int 
   917 ;;  dividend        2    4[COMMON] unsigned int 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  quotient        2    6[COMMON] unsigned int 
   920 ;;  counter         1    8[COMMON] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  2    2[COMMON] unsigned int 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, btemp+1
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         4       0       0       0       0
   931 ;;      Locals:         3       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         7       0       0       0       0
   934 ;;Total ram usage:        7 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function ___lwdiv
   946  0229                     ___lwdiv:
   947  0229                     l1040:	
   948                           ;incstack = 0
   949                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   950                           
   951  0229  01F6               	clrf	___lwdiv@quotient
   952  022A  01F7               	clrf	___lwdiv@quotient+1
   953  022B                     l1042:
   954  022B  0872               	movf	___lwdiv@divisor,w
   955  022C  0473               	iorwf	___lwdiv@divisor+1,w
   956  022D  1903               	btfsc	3,2
   957  022E  2A30               	goto	u401
   958  022F  2A31               	goto	u400
   959  0230                     u401:
   960  0230  2A68               	goto	l1062
   961  0231                     u400:
   962  0231                     l1044:
   963  0231  01F8               	clrf	___lwdiv@counter
   964  0232  0AF8               	incf	___lwdiv@counter,f
   965  0233  2A3F               	goto	l1050
   966  0234                     l1046:
   967  0234  3001               	movlw	1
   968  0235                     u415:
   969  0235  1003               	clrc
   970  0236  0DF2               	rlf	___lwdiv@divisor,f
   971  0237  0DF3               	rlf	___lwdiv@divisor+1,f
   972  0238  3EFF               	addlw	-1
   973  0239  1D03               	skipz
   974  023A  2A35               	goto	u415
   975  023B                     l1048:
   976  023B  3001               	movlw	1
   977  023C  00FF               	movwf	btemp+1
   978  023D  087F               	movf	btemp+1,w
   979  023E  07F8               	addwf	___lwdiv@counter,f
   980  023F                     l1050:
   981  023F  1FF3               	btfss	___lwdiv@divisor+1,7
   982  0240  2A42               	goto	u421
   983  0241  2A43               	goto	u420
   984  0242                     u421:
   985  0242  2A34               	goto	l1046
   986  0243                     u420:
   987  0243                     l1052:
   988  0243  3001               	movlw	1
   989  0244                     u435:
   990  0244  1003               	clrc
   991  0245  0DF6               	rlf	___lwdiv@quotient,f
   992  0246  0DF7               	rlf	___lwdiv@quotient+1,f
   993  0247  3EFF               	addlw	-1
   994  0248  1D03               	skipz
   995  0249  2A44               	goto	u435
   996  024A  0873               	movf	___lwdiv@divisor+1,w
   997  024B  0275               	subwf	___lwdiv@dividend+1,w
   998  024C  1D03               	skipz
   999  024D  2A50               	goto	u445
  1000  024E  0872               	movf	___lwdiv@divisor,w
  1001  024F  0274               	subwf	___lwdiv@dividend,w
  1002  0250                     u445:
  1003  0250  1C03               	skipc
  1004  0251  2A53               	goto	u441
  1005  0252  2A54               	goto	u440
  1006  0253                     u441:
  1007  0253  2A5B               	goto	l1058
  1008  0254                     u440:
  1009  0254                     l1054:
  1010  0254  0872               	movf	___lwdiv@divisor,w
  1011  0255  02F4               	subwf	___lwdiv@dividend,f
  1012  0256  0873               	movf	___lwdiv@divisor+1,w
  1013  0257  1C03               	skipc
  1014  0258  03F5               	decf	___lwdiv@dividend+1,f
  1015  0259  02F5               	subwf	___lwdiv@dividend+1,f
  1016  025A                     l1056:
  1017  025A  1476               	bsf	___lwdiv@quotient,0
  1018  025B                     l1058:
  1019  025B  3001               	movlw	1
  1020  025C                     u455:
  1021  025C  1003               	clrc
  1022  025D  0CF3               	rrf	___lwdiv@divisor+1,f
  1023  025E  0CF2               	rrf	___lwdiv@divisor,f
  1024  025F  3EFF               	addlw	-1
  1025  0260  1D03               	skipz
  1026  0261  2A5C               	goto	u455
  1027  0262                     l1060:
  1028  0262  3001               	movlw	1
  1029  0263  02F8               	subwf	___lwdiv@counter,f
  1030  0264  1D03               	btfss	3,2
  1031  0265  2A67               	goto	u461
  1032  0266  2A68               	goto	u460
  1033  0267                     u461:
  1034  0267  2A43               	goto	l1052
  1035  0268                     u460:
  1036  0268                     l1062:
  1037  0268  0877               	movf	___lwdiv@quotient+1,w
  1038  0269  00F3               	movwf	?___lwdiv+1
  1039  026A  0876               	movf	___lwdiv@quotient,w
  1040  026B  00F2               	movwf	?___lwdiv
  1041  026C                     l464:
  1042  026C  0008               	return
  1043  026D                     __end_of___lwdiv:
  1044                           
  1045                           	psect	text3
  1046  02D9                     __ptext3:	
  1047 ;; *************** function _LCD_Write_String *****************
  1048 ;; Defined at:
  1049 ;;		line 128 in file "lcd.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  str             1    wreg     PTR unsigned char 
  1052 ;;		 -> STR_3(4), STR_2(10), STR_1(8), 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  str             1   10[COMMON] PTR unsigned char 
  1055 ;;		 -> STR_3(4), STR_2(10), STR_1(8), 
  1056 ;;  i               2    8[COMMON] int 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         3       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         3       0       0       0       0
  1070 ;;Total ram usage:        3 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    3
  1073 ;; This function calls:
  1074 ;;		_LCD_Write_Char
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _LCD_Write_String
  1082  02D9                     _LCD_Write_String:
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1086                           ;LCD_Write_String@str stored from wreg
  1087  02D9  00FA               	movwf	LCD_Write_String@str
  1088  02DA                     l1032:
  1089                           
  1090                           ;lcd.c: 128: void LCD_Write_String(char *str);lcd.c: 129: {;lcd.c: 130:   int i;;lcd.c: 
      +                          131:   for(i=0;str[i]!='\0';i++)
  1091  02DA  01F8               	clrf	LCD_Write_String@i
  1092  02DB  01F9               	clrf	LCD_Write_String@i+1
  1093  02DC  2AF0               	goto	l1038
  1094  02DD                     l1034:
  1095                           
  1096                           ;lcd.c: 132:     LCD_Write_Char(str[i]);
  1097  02DD  0878               	movf	LCD_Write_String@i,w
  1098  02DE  077A               	addwf	LCD_Write_String@str,w
  1099  02DF  0084               	movwf	4
  1100  02E0  120A  118A  233A  120A  118A  	fcall	stringdir
  1101  02E5  120A  118A  2185  120A  118A  	fcall	_LCD_Write_Char
  1102  02EA                     l1036:
  1103  02EA  3001               	movlw	1
  1104  02EB  07F8               	addwf	LCD_Write_String@i,f
  1105  02EC  1803               	skipnc
  1106  02ED  0AF9               	incf	LCD_Write_String@i+1,f
  1107  02EE  3000               	movlw	0
  1108  02EF  07F9               	addwf	LCD_Write_String@i+1,f
  1109  02F0                     l1038:
  1110  02F0  0878               	movf	LCD_Write_String@i,w
  1111  02F1  077A               	addwf	LCD_Write_String@str,w
  1112  02F2  0084               	movwf	4
  1113  02F3  120A  118A  233A  120A  118A  	fcall	stringdir
  1114  02F8  3A00               	xorlw	0
  1115  02F9  1D03               	skipz
  1116  02FA  2AFC               	goto	u391
  1117  02FB  2AFD               	goto	u390
  1118  02FC                     u391:
  1119  02FC  2ADD               	goto	l1034
  1120  02FD                     u390:
  1121  02FD                     l100:
  1122  02FD  0008               	return
  1123  02FE                     __end_of_LCD_Write_String:
  1124                           
  1125                           	psect	text4
  1126  0185                     __ptext4:	
  1127 ;; *************** function _LCD_Write_Char *****************
  1128 ;; Defined at:
  1129 ;;		line 109 in file "lcd.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  Data            1    wreg     unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  Data            1    7[COMMON] unsigned char 
  1134 ;;  High4           1    6[COMMON] unsigned char 
  1135 ;;  Low4            1    5[COMMON] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         3       0       0       0       0
  1147 ;;      Temps:          2       0       0       0       0
  1148 ;;      Totals:         5       0       0       0       0
  1149 ;;Total ram usage:        5 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    2
  1152 ;; This function calls:
  1153 ;;		_LCD_DATA
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;;		_LCD_Write_String
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _LCD_Write_Char
  1162  0185                     _LCD_Write_Char:
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1166                           ;LCD_Write_Char@Data stored from wreg
  1167  0185  00F7               	movwf	LCD_Write_Char@Data
  1168  0186                     l940:
  1169                           
  1170                           ;lcd.c: 109: void LCD_Write_Char(char Data);lcd.c: 110: {;lcd.c: 111:   char Low4,High4;
      +                          ;lcd.c: 112:   Low4 = Data & 0x0F;
  1171  0186  0877               	movf	LCD_Write_Char@Data,w
  1172  0187  390F               	andlw	15
  1173  0188  00FF               	movwf	btemp+1
  1174  0189  087F               	movf	btemp+1,w
  1175  018A  00F5               	movwf	LCD_Write_Char@Low4
  1176                           
  1177                           ;lcd.c: 113:   High4 = Data & 0xF0;
  1178  018B  0877               	movf	LCD_Write_Char@Data,w
  1179  018C  39F0               	andlw	240
  1180  018D  00FF               	movwf	btemp+1
  1181  018E  087F               	movf	btemp+1,w
  1182  018F  00F6               	movwf	LCD_Write_Char@High4
  1183  0190                     l942:
  1184                           
  1185                           ;lcd.c: 114:   RD2 = 1;
  1186  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0192  1508               	bsf	8,2	;volatile
  1189  0193                     l944:
  1190                           
  1191                           ;lcd.c: 115:   LCD_DATA(High4>>4);
  1192  0193  0876               	movf	LCD_Write_Char@High4,w
  1193  0194  00F3               	movwf	??_LCD_Write_Char
  1194  0195  3004               	movlw	4
  1195  0196                     u345:
  1196  0196  1003               	clrc
  1197  0197  0CF3               	rrf	??_LCD_Write_Char,f
  1198  0198  3EFF               	addlw	-1
  1199  0199  1D03               	skipz
  1200  019A  2996               	goto	u345
  1201  019B  0873               	movf	??_LCD_Write_Char,w
  1202  019C  120A  118A  22FE  120A  118A  	fcall	_LCD_DATA
  1203  01A1                     l946:
  1204                           
  1205                           ;lcd.c: 116:   RD3 = 1;
  1206  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1207  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1208  01A3  1588               	bsf	8,3	;volatile
  1209  01A4                     l948:
  1210                           
  1211                           ;lcd.c: 117:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  1212  01A4  3003               	movlw	3
  1213  01A5  00F4               	movwf	??_LCD_Write_Char+1
  1214  01A6  3097               	movlw	151
  1215  01A7  00F3               	movwf	??_LCD_Write_Char
  1216  01A8                     u627:
  1217  01A8  0BF3               	decfsz	??_LCD_Write_Char,f
  1218  01A9  29A8               	goto	u627
  1219  01AA  0BF4               	decfsz	??_LCD_Write_Char+1,f
  1220  01AB  29A8               	goto	u627
  1221  01AC  29AD               	nop2
  1222  01AD                     l950:
  1223                           
  1224                           ;lcd.c: 118:   RD3 = 0;
  1225  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1226  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1227  01AF  1188               	bcf	8,3	;volatile
  1228  01B0                     l952:
  1229                           
  1230                           ;lcd.c: 119:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  1231  01B0  3003               	movlw	3
  1232  01B1  00F4               	movwf	??_LCD_Write_Char+1
  1233  01B2  3097               	movlw	151
  1234  01B3  00F3               	movwf	??_LCD_Write_Char
  1235  01B4                     u637:
  1236  01B4  0BF3               	decfsz	??_LCD_Write_Char,f
  1237  01B5  29B4               	goto	u637
  1238  01B6  0BF4               	decfsz	??_LCD_Write_Char+1,f
  1239  01B7  29B4               	goto	u637
  1240  01B8  29B9               	nop2
  1241  01B9                     l954:
  1242                           
  1243                           ;lcd.c: 120:   LCD_DATA(Low4);
  1244  01B9  0875               	movf	LCD_Write_Char@Low4,w
  1245  01BA  120A  118A  22FE  120A  118A  	fcall	_LCD_DATA
  1246  01BF                     l956:
  1247                           
  1248                           ;lcd.c: 121:   RD3 = 1;
  1249  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1250  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1251  01C1  1588               	bsf	8,3	;volatile
  1252  01C2                     l958:
  1253                           
  1254                           ;lcd.c: 122:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  1255  01C2  3003               	movlw	3
  1256  01C3  00F4               	movwf	??_LCD_Write_Char+1
  1257  01C4  3097               	movlw	151
  1258  01C5  00F3               	movwf	??_LCD_Write_Char
  1259  01C6                     u647:
  1260  01C6  0BF3               	decfsz	??_LCD_Write_Char,f
  1261  01C7  29C6               	goto	u647
  1262  01C8  0BF4               	decfsz	??_LCD_Write_Char+1,f
  1263  01C9  29C6               	goto	u647
  1264  01CA  29CB               	nop2
  1265  01CB                     l960:
  1266                           
  1267                           ;lcd.c: 123:   RD3 = 0;
  1268  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01CD  1188               	bcf	8,3	;volatile
  1271  01CE                     l962:
  1272                           
  1273                           ;lcd.c: 124:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  1274  01CE  3003               	movlw	3
  1275  01CF  00F4               	movwf	??_LCD_Write_Char+1
  1276  01D0  3097               	movlw	151
  1277  01D1  00F3               	movwf	??_LCD_Write_Char
  1278  01D2                     u657:
  1279  01D2  0BF3               	decfsz	??_LCD_Write_Char,f
  1280  01D3  29D2               	goto	u657
  1281  01D4  0BF4               	decfsz	??_LCD_Write_Char+1,f
  1282  01D5  29D2               	goto	u657
  1283  01D6  29D7               	nop2
  1284  01D7                     l94:
  1285  01D7  0008               	return
  1286  01D8                     __end_of_LCD_Write_Char:
  1287                           
  1288                           	psect	text5
  1289  01D8                     __ptext5:	
  1290 ;; *************** function _LCD_Set_Cursor *****************
  1291 ;; Defined at:
  1292 ;;		line 60 in file "lcd.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  r               1    wreg     unsigned char 
  1295 ;;  c               1    6[COMMON] unsigned char 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  r               1    8[COMMON] unsigned char 
  1298 ;;  Temp            1   11[COMMON] unsigned char 
  1299 ;;  High4           1   10[COMMON] unsigned char 
  1300 ;;  Low4            1    9[COMMON] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         1       0       0       0       0
  1311 ;;      Locals:         4       0       0       0       0
  1312 ;;      Temps:          1       0       0       0       0
  1313 ;;      Totals:         6       0       0       0       0
  1314 ;;Total ram usage:        6 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    3
  1317 ;; This function calls:
  1318 ;;		_LCD_CMD
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _LCD_Set_Cursor
  1326  01D8                     _LCD_Set_Cursor:
  1327                           
  1328                           ;incstack = 0
  1329                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1330                           ;LCD_Set_Cursor@r stored from wreg
  1331  01D8  00F8               	movwf	LCD_Set_Cursor@r
  1332  01D9                     l1012:
  1333                           
  1334                           ;lcd.c: 60: void LCD_Set_Cursor(unsigned char r, unsigned char c);lcd.c: 61: {;lcd.c: 62
      +                          :   unsigned char Temp,Low4,High4;;lcd.c: 63:   if(r == 1)
  1335  01D9  0378               	decf	LCD_Set_Cursor@r,w
  1336  01DA  1D03               	btfss	3,2
  1337  01DB  29DD               	goto	u351
  1338  01DC  29DE               	goto	u350
  1339  01DD                     u351:
  1340  01DD  2A00               	goto	l1022
  1341  01DE                     u350:
  1342  01DE                     l1014:
  1343                           
  1344                           ;lcd.c: 64:   {;lcd.c: 65:     Temp = 0x80 + c - 1;
  1345  01DE  0876               	movf	LCD_Set_Cursor@c,w
  1346  01DF  3E7F               	addlw	127
  1347  01E0  00FF               	movwf	btemp+1
  1348  01E1  087F               	movf	btemp+1,w
  1349  01E2  00FB               	movwf	LCD_Set_Cursor@Temp
  1350                           
  1351                           ;lcd.c: 66:     High4 = Temp >> 4;
  1352  01E3  087B               	movf	LCD_Set_Cursor@Temp,w
  1353  01E4  00F7               	movwf	??_LCD_Set_Cursor
  1354  01E5  3004               	movlw	4
  1355  01E6                     u365:
  1356  01E6  1003               	clrc
  1357  01E7  0CF7               	rrf	??_LCD_Set_Cursor,f
  1358  01E8  3EFF               	addlw	-1
  1359  01E9  1D03               	skipz
  1360  01EA  29E6               	goto	u365
  1361  01EB  0877               	movf	??_LCD_Set_Cursor,w
  1362  01EC  00FF               	movwf	btemp+1
  1363  01ED  087F               	movf	btemp+1,w
  1364  01EE  00FA               	movwf	LCD_Set_Cursor@High4
  1365  01EF                     l1016:
  1366                           
  1367                           ;lcd.c: 67:     Low4 = Temp & 0x0F;
  1368  01EF  087B               	movf	LCD_Set_Cursor@Temp,w
  1369  01F0  390F               	andlw	15
  1370  01F1  00FF               	movwf	btemp+1
  1371  01F2  087F               	movf	btemp+1,w
  1372  01F3  00F9               	movwf	LCD_Set_Cursor@Low4
  1373  01F4                     l1018:
  1374                           
  1375                           ;lcd.c: 68:     LCD_CMD(High4);
  1376  01F4  087A               	movf	LCD_Set_Cursor@High4,w
  1377  01F5  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1378  01FA                     l1020:
  1379                           
  1380                           ;lcd.c: 69:     LCD_CMD(Low4);
  1381  01FA  0879               	movf	LCD_Set_Cursor@Low4,w
  1382  01FB  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1383  0200                     l1022:
  1384                           
  1385                           ;lcd.c: 71:   if(r == 2)
  1386  0200  3002               	movlw	2
  1387  0201  0678               	xorwf	LCD_Set_Cursor@r,w
  1388  0202  1D03               	btfss	3,2
  1389  0203  2A05               	goto	u371
  1390  0204  2A06               	goto	u370
  1391  0205                     u371:
  1392  0205  2A28               	goto	l88
  1393  0206                     u370:
  1394  0206                     l1024:
  1395                           
  1396                           ;lcd.c: 72:   {;lcd.c: 73:     Temp = 0xC0 + c - 1;
  1397  0206  0876               	movf	LCD_Set_Cursor@c,w
  1398  0207  3EBF               	addlw	191
  1399  0208  00FF               	movwf	btemp+1
  1400  0209  087F               	movf	btemp+1,w
  1401  020A  00FB               	movwf	LCD_Set_Cursor@Temp
  1402                           
  1403                           ;lcd.c: 74:     High4 = Temp >> 4;
  1404  020B  087B               	movf	LCD_Set_Cursor@Temp,w
  1405  020C  00F7               	movwf	??_LCD_Set_Cursor
  1406  020D  3004               	movlw	4
  1407  020E                     u385:
  1408  020E  1003               	clrc
  1409  020F  0CF7               	rrf	??_LCD_Set_Cursor,f
  1410  0210  3EFF               	addlw	-1
  1411  0211  1D03               	skipz
  1412  0212  2A0E               	goto	u385
  1413  0213  0877               	movf	??_LCD_Set_Cursor,w
  1414  0214  00FF               	movwf	btemp+1
  1415  0215  087F               	movf	btemp+1,w
  1416  0216  00FA               	movwf	LCD_Set_Cursor@High4
  1417  0217                     l1026:
  1418                           
  1419                           ;lcd.c: 75:     Low4 = Temp & 0x0F;
  1420  0217  087B               	movf	LCD_Set_Cursor@Temp,w
  1421  0218  390F               	andlw	15
  1422  0219  00FF               	movwf	btemp+1
  1423  021A  087F               	movf	btemp+1,w
  1424  021B  00F9               	movwf	LCD_Set_Cursor@Low4
  1425  021C                     l1028:
  1426                           
  1427                           ;lcd.c: 76:     LCD_CMD(High4);
  1428  021C  087A               	movf	LCD_Set_Cursor@High4,w
  1429  021D  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1430  0222                     l1030:
  1431                           
  1432                           ;lcd.c: 77:     LCD_CMD(Low4);
  1433  0222  0879               	movf	LCD_Set_Cursor@Low4,w
  1434  0223  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1435  0228                     l88:
  1436  0228  0008               	return
  1437  0229                     __end_of_LCD_Set_Cursor:
  1438                           
  1439                           	psect	text6
  1440  011E                     __ptext6:	
  1441 ;; *************** function _LCD_Init *****************
  1442 ;; Defined at:
  1443 ;;		line 85 in file "lcd.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0
  1459 ;;      Temps:          2       0       0       0       0
  1460 ;;      Totals:         2       0       0       0       0
  1461 ;;Total ram usage:        2 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    3
  1464 ;; This function calls:
  1465 ;;		_LCD_CMD
  1466 ;;		_LCD_DATA
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _LCD_Init
  1474  011E                     _LCD_Init:
  1475  011E                     l976:	
  1476                           ;incstack = 0
  1477                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1478                           
  1479                           
  1480                           ;lcd.c: 88:   TRISD = 0x00;
  1481  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1482  011F  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0120  0188               	clrf	8	;volatile
  1484  0121                     l978:
  1485                           
  1486                           ;lcd.c: 89:   TRISD2 = 0;
  1487  0121  1108               	bcf	8,2	;volatile
  1488  0122                     l980:
  1489                           
  1490                           ;lcd.c: 90:   TRISD3 = 0;
  1491  0122  1188               	bcf	8,3	;volatile
  1492  0123                     l982:
  1493                           
  1494                           ;lcd.c: 92:   LCD_DATA(0x00);
  1495  0123  3000               	movlw	0
  1496  0124  120A  118A  22FE  120A  118A  	fcall	_LCD_DATA
  1497  0129                     l984:
  1498                           
  1499                           ;lcd.c: 93:   _delay((unsigned long)((30)*(16000000/4000.0)));
  1500  0129  309C               	movlw	156
  1501  012A  00F7               	movwf	??_LCD_Init+1
  1502  012B  30D7               	movlw	215
  1503  012C  00F6               	movwf	??_LCD_Init
  1504  012D                     u667:
  1505  012D  0BF6               	decfsz	??_LCD_Init,f
  1506  012E  292D               	goto	u667
  1507  012F  0BF7               	decfsz	??_LCD_Init+1,f
  1508  0130  292D               	goto	u667
  1509  0131                     l986:
  1510                           
  1511                           ;lcd.c: 94:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  1512  0131  3003               	movlw	3
  1513  0132  00F7               	movwf	??_LCD_Init+1
  1514  0133  3097               	movlw	151
  1515  0134  00F6               	movwf	??_LCD_Init
  1516  0135                     u677:
  1517  0135  0BF6               	decfsz	??_LCD_Init,f
  1518  0136  2935               	goto	u677
  1519  0137  0BF7               	decfsz	??_LCD_Init+1,f
  1520  0138  2935               	goto	u677
  1521  0139  293A               	nop2
  1522  013A                     l988:
  1523                           
  1524                           ;lcd.c: 95:   LCD_CMD(0x03);
  1525  013A  3003               	movlw	3
  1526  013B  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1527  0140                     l990:
  1528                           
  1529                           ;lcd.c: 96:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1530  0140  301A               	movlw	26
  1531  0141  00F7               	movwf	??_LCD_Init+1
  1532  0142  30F8               	movlw	248
  1533  0143  00F6               	movwf	??_LCD_Init
  1534  0144                     u687:
  1535  0144  0BF6               	decfsz	??_LCD_Init,f
  1536  0145  2944               	goto	u687
  1537  0146  0BF7               	decfsz	??_LCD_Init+1,f
  1538  0147  2944               	goto	u687
  1539  0148  0000               	nop
  1540  0149                     l992:
  1541                           
  1542                           ;lcd.c: 97:   LCD_CMD(0x03);
  1543  0149  3003               	movlw	3
  1544  014A  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1545  014F                     l994:
  1546                           
  1547                           ;lcd.c: 98:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  1548  014F  30C7               	movlw	199
  1549  0150  00F6               	movwf	??_LCD_Init
  1550  0151                     u697:
  1551  0151  0BF6               	decfsz	??_LCD_Init,f
  1552  0152  2951               	goto	u697
  1553  0153  2954               	nop2
  1554  0154                     l996:
  1555                           
  1556                           ;lcd.c: 99:   LCD_CMD(0x03);
  1557  0154  3003               	movlw	3
  1558  0155  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1559  015A                     l998:
  1560                           
  1561                           ;lcd.c: 100:   LCD_CMD(0x02);
  1562  015A  3002               	movlw	2
  1563  015B  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1564  0160                     l1000:
  1565                           
  1566                           ;lcd.c: 101:   LCD_CMD(0x02);
  1567  0160  3002               	movlw	2
  1568  0161  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1569  0166                     l1002:
  1570                           
  1571                           ;lcd.c: 102:   LCD_CMD(0x08);
  1572  0166  3008               	movlw	8
  1573  0167  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1574  016C                     l1004:
  1575                           
  1576                           ;lcd.c: 103:   LCD_CMD(0x00);
  1577  016C  3000               	movlw	0
  1578  016D  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1579  0172                     l1006:
  1580                           
  1581                           ;lcd.c: 104:   LCD_CMD(0x0C);
  1582  0172  300C               	movlw	12
  1583  0173  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1584  0178                     l1008:
  1585                           
  1586                           ;lcd.c: 105:   LCD_CMD(0x00);
  1587  0178  3000               	movlw	0
  1588  0179  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1589  017E                     l1010:
  1590                           
  1591                           ;lcd.c: 106:   LCD_CMD(0x06);
  1592  017E  3006               	movlw	6
  1593  017F  120A  118A  2320  120A  118A  	fcall	_LCD_CMD
  1594  0184                     l91:
  1595  0184  0008               	return
  1596  0185                     __end_of_LCD_Init:
  1597                           
  1598                           	psect	text7
  1599  0320                     __ptext7:	
  1600 ;; *************** function _LCD_CMD *****************
  1601 ;; Defined at:
  1602 ;;		line 36 in file "lcd.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  CMD             1    wreg     unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  CMD             1    5[COMMON] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         1       0       0       0       0
  1618 ;;      Temps:          2       0       0       0       0
  1619 ;;      Totals:         3       0       0       0       0
  1620 ;;Total ram usage:        3 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    2
  1623 ;; This function calls:
  1624 ;;		_LCD_DATA
  1625 ;; This function is called by:
  1626 ;;		_LCD_Set_Cursor
  1627 ;;		_LCD_Init
  1628 ;;		_LCD_Clear
  1629 ;;		_LCD_SL
  1630 ;;		_LCD_SR
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _LCD_CMD
  1636  0320                     _LCD_CMD:
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1640                           ;LCD_CMD@CMD stored from wreg
  1641  0320  00F5               	movwf	LCD_CMD@CMD
  1642  0321                     l964:
  1643                           
  1644                           ;lcd.c: 36: void LCD_CMD(unsigned char CMD);lcd.c: 37: {;lcd.c: 39:   RD2 = 0;
  1645  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0323  1108               	bcf	8,2	;volatile
  1648  0324                     l966:
  1649                           
  1650                           ;lcd.c: 41:   LCD_DATA(CMD);
  1651  0324  0875               	movf	LCD_CMD@CMD,w
  1652  0325  120A  118A  22FE  120A  118A  	fcall	_LCD_DATA
  1653  032A                     l968:
  1654                           
  1655                           ;lcd.c: 43:   RD3 = 1;
  1656  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1657  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1658  032C  1588               	bsf	8,3	;volatile
  1659  032D                     l970:
  1660                           
  1661                           ;lcd.c: 44:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  1662  032D  3003               	movlw	3
  1663  032E  00F4               	movwf	??_LCD_CMD+1
  1664  032F  3097               	movlw	151
  1665  0330  00F3               	movwf	??_LCD_CMD
  1666  0331                     u707:
  1667  0331  0BF3               	decfsz	??_LCD_CMD,f
  1668  0332  2B31               	goto	u707
  1669  0333  0BF4               	decfsz	??_LCD_CMD+1,f
  1670  0334  2B31               	goto	u707
  1671  0335  2B36               	nop2
  1672  0336                     l972:
  1673                           
  1674                           ;lcd.c: 45:   RD3 = 0;
  1675  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0338  1188               	bcf	8,3	;volatile
  1678  0339                     l80:
  1679  0339  0008               	return
  1680  033A                     __end_of_LCD_CMD:
  1681                           
  1682                           	psect	text8
  1683  02FE                     __ptext8:	
  1684 ;; *************** function _LCD_DATA *****************
  1685 ;; Defined at:
  1686 ;;		line 9 in file "lcd.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  Data            1    wreg     unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  Data            1    2[COMMON] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         1       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0
  1703 ;;      Totals:         1       0       0       0       0
  1704 ;;Total ram usage:        1 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_LCD_CMD
  1711 ;;		_LCD_Init
  1712 ;;		_LCD_Write_Char
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _LCD_DATA
  1718  02FE                     _LCD_DATA:
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _LCD_DATA: [wreg]
  1722                           ;LCD_DATA@Data stored from wreg
  1723  02FE  00F2               	movwf	LCD_DATA@Data
  1724  02FF                     l930:
  1725                           
  1726                           ;lcd.c: 9: void LCD_DATA(unsigned char Data);lcd.c: 10: {;lcd.c: 11:   if(Data & 1)
  1727  02FF  1C72               	btfss	LCD_DATA@Data,0
  1728  0300  2B02               	goto	u301
  1729  0301  2B03               	goto	u300
  1730  0302                     u301:
  1731  0302  2B07               	goto	l69
  1732  0303                     u300:
  1733  0303                     l932:
  1734                           
  1735                           ;lcd.c: 12:     RD4 = 1;
  1736  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0305  1608               	bsf	8,4	;volatile
  1739  0306  2B0A               	goto	l70
  1740  0307                     l69:	
  1741                           ;lcd.c: 13:   else
  1742                           
  1743                           
  1744                           ;lcd.c: 14:     RD4 = 0;
  1745  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0309  1208               	bcf	8,4	;volatile
  1748  030A                     l70:
  1749                           
  1750                           ;lcd.c: 16:   if(Data & 2)
  1751  030A  1CF2               	btfss	LCD_DATA@Data,1
  1752  030B  2B0D               	goto	u311
  1753  030C  2B0E               	goto	u310
  1754  030D                     u311:
  1755  030D  2B10               	goto	l71
  1756  030E                     u310:
  1757  030E                     l934:
  1758                           
  1759                           ;lcd.c: 17:     RD5 = 1;
  1760  030E  1688               	bsf	8,5	;volatile
  1761  030F  2B11               	goto	l72
  1762  0310                     l71:	
  1763                           ;lcd.c: 18:   else
  1764                           
  1765                           
  1766                           ;lcd.c: 19:     RD5 = 0;
  1767  0310  1288               	bcf	8,5	;volatile
  1768  0311                     l72:
  1769                           
  1770                           ;lcd.c: 21:   if(Data & 4)
  1771  0311  1D72               	btfss	LCD_DATA@Data,2
  1772  0312  2B14               	goto	u321
  1773  0313  2B15               	goto	u320
  1774  0314                     u321:
  1775  0314  2B17               	goto	l73
  1776  0315                     u320:
  1777  0315                     l936:
  1778                           
  1779                           ;lcd.c: 22:     RD6 = 1;
  1780  0315  1708               	bsf	8,6	;volatile
  1781  0316  2B18               	goto	l74
  1782  0317                     l73:	
  1783                           ;lcd.c: 23:   else
  1784                           
  1785                           
  1786                           ;lcd.c: 24:     RD6 = 0;
  1787  0317  1308               	bcf	8,6	;volatile
  1788  0318                     l74:
  1789                           
  1790                           ;lcd.c: 26:   if(Data & 8)
  1791  0318  1DF2               	btfss	LCD_DATA@Data,3
  1792  0319  2B1B               	goto	u331
  1793  031A  2B1C               	goto	u330
  1794  031B                     u331:
  1795  031B  2B1E               	goto	l75
  1796  031C                     u330:
  1797  031C                     l938:
  1798                           
  1799                           ;lcd.c: 27:     RD7 = 1;
  1800  031C  1788               	bsf	8,7	;volatile
  1801  031D  2B1F               	goto	l77
  1802  031E                     l75:	
  1803                           ;lcd.c: 28:   else
  1804                           
  1805                           
  1806                           ;lcd.c: 29:     RD7 = 0;
  1807  031E  1388               	bcf	8,7	;volatile
  1808  031F                     l77:
  1809  031F  0008               	return
  1810  0320                     __end_of_LCD_DATA:
  1811                           
  1812                           	psect	text9
  1813  0352                     __ptext9:	
  1814 ;; *************** function _ExtInt *****************
  1815 ;; Defined at:
  1816 ;;		line 17 in file "main.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		None
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0
  1833 ;;      Totals:         0       0       0       0       0
  1834 ;;Total ram usage:        0 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _ExtInt
  1846  0352                     _ExtInt:
  1847  0352                     l974:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _ExtInt: []
  1850                           
  1851                           
  1852                           ;main.c: 20:     INTE=1;
  1853  0352  160B               	bsf	11,4	;volatile
  1854                           
  1855                           ;main.c: 21:     GIE=1;
  1856  0353  178B               	bsf	11,7	;volatile
  1857  0354                     l29:
  1858  0354  0008               	return
  1859  0355                     __end_of_ExtInt:
  1860                           
  1861                           	psect	text10
  1862  02A7                     __ptext10:	
  1863 ;; *************** function _ISR *****************
  1864 ;; Defined at:
  1865 ;;		line 24 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          2       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		Interrupt level 1
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _ISR
  1894  02A7                     _ISR:
  1895  02A7                     i1l1088:
  1896                           
  1897                           ;main.c: 26:     if(INTE&&INTF)
  1898  02A7  1E0B               	btfss	11,4	;volatile
  1899  02A8  2AAA               	goto	u53_21
  1900  02A9  2AAB               	goto	u53_20
  1901  02AA                     u53_21:
  1902  02AA  2AD2               	goto	i1l36
  1903  02AB                     u53_20:
  1904  02AB                     i1l1090:
  1905  02AB  1C8B               	btfss	11,1	;volatile
  1906  02AC  2AAE               	goto	u54_21
  1907  02AD  2AAF               	goto	u54_20
  1908  02AE                     u54_21:
  1909  02AE  2AD2               	goto	i1l36
  1910  02AF                     u54_20:
  1911  02AF                     i1l1092:
  1912                           
  1913                           ;main.c: 27:     {;main.c: 28:         INTF=0;
  1914  02AF  108B               	bcf	11,1	;volatile
  1915  02B0                     i1l1094:
  1916                           
  1917                           ;main.c: 29:         PORTEbits.RE2=~PORTEbits.RE2;
  1918  02B0  1003               	clrc
  1919  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1920  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1921  02B3  1D09               	btfss	9,2	;volatile
  1922  02B4  1403               	setc
  1923  02B5  1803               	btfsc	3,0
  1924  02B6  2AB8               	goto	u55_21
  1925  02B7  2ABC               	goto	u55_20
  1926  02B8                     u55_21:
  1927  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1928  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1929  02BA  1509               	bsf	9,2	;volatile
  1930  02BB  2ABF               	goto	u56_24
  1931  02BC                     u55_20:
  1932  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1933  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1934  02BE  1109               	bcf	9,2	;volatile
  1935  02BF                     u56_24:
  1936  02BF                     i1l1096:
  1937                           
  1938                           ;main.c: 30:         number++;
  1939  02BF  3001               	movlw	1
  1940  02C0  07AB               	addwf	_number,f
  1941  02C1  1803               	skipnc
  1942  02C2  0AAC               	incf	_number+1,f
  1943  02C3  3000               	movlw	0
  1944  02C4  07AC               	addwf	_number+1,f
  1945  02C5                     i1l1098:
  1946                           
  1947                           ;main.c: 31:         if(number>10)
  1948  02C5  3000               	movlw	0
  1949  02C6  022C               	subwf	_number+1,w
  1950  02C7  300B               	movlw	11
  1951  02C8  1903               	skipnz
  1952  02C9  022B               	subwf	_number,w
  1953  02CA  1C03               	skipc
  1954  02CB  2ACD               	goto	u57_21
  1955  02CC  2ACE               	goto	u57_20
  1956  02CD                     u57_21:
  1957  02CD  2AD2               	goto	i1l36
  1958  02CE                     u57_20:
  1959  02CE                     i1l1100:
  1960                           
  1961                           ;main.c: 32:             number=1;
  1962  02CE  3001               	movlw	1
  1963  02CF  00AB               	movwf	_number
  1964  02D0  3000               	movlw	0
  1965  02D1  00AC               	movwf	_number+1
  1966  02D2                     i1l36:
  1967  02D2  0871               	movf	??_ISR+1,w
  1968  02D3  008A               	movwf	10
  1969  02D4  0E70               	swapf	??_ISR^(0+4294967168),w
  1970  02D5  0083               	movwf	3
  1971  02D6  0EFE               	swapf	btemp,f
  1972  02D7  0E7E               	swapf	btemp,w
  1973  02D8  0009               	retfie
  1974  02D9                     __end_of_ISR:
  1975  007E                     btemp	set	126	;btemp
  1976  007E                     wtemp0	set	126
  1977                           
  1978                           	psect	intentry
  1979  0004                     __pintentry:	
  1980                           ;incstack = 0
  1981                           ; Regs used in _ISR: [wreg+status,0]
  1982                           
  1983  0004                     interrupt_function:
  1984  007E                     saved_w	set	btemp
  1985  0004  00FE               	movwf	btemp
  1986  0005  0E03               	swapf	3,w
  1987  0006  00F0               	movwf	??_ISR
  1988  0007  080A               	movf	10,w
  1989  0008  00F1               	movwf	??_ISR+1
  1990  0009  120A  118A  2AA7   	ljmp	_ISR
  1991                           
  1992                           	psect	config
  1993                           
  1994                           ;Config register CONFIG @ 0x2007
  1995                           ;	Oscillator Selection bits
  1996                           ;	FOSC = HS, HS oscillator
  1997                           ;	Watchdog Timer Enable bit
  1998                           ;	WDTE = OFF, WDT disabled
  1999                           ;	Power-up Timer Enable bit
  2000                           ;	PWRTE = ON, PWRT enabled
  2001                           ;	Brown-out Reset Enable bit
  2002                           ;	BOREN = ON, BOR enabled
  2003                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2004                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2005                           ;	Data EEPROM Memory Code Protection bit
  2006                           ;	CPD = OFF, Data EEPROM code protection off
  2007                           ;	Flash Program Memory Write Enable bits
  2008                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2009                           ;	In-Circuit Debugger Mode bit
  2010                           ;	DEBUG = 0x1, unprogrammed default
  2011                           ;	Flash Program Memory Code Protection bit
  2012                           ;	CP = OFF, Code protection off
  2013  2007                     	org	8199
  2014  2007  3F72               	dw	16242

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      7      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[4]), STR_2(CODE[10]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2744
                                              0 BANK0      7     7      0
                             _ExtInt
                           _LCD_Init
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     367
                                              8 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     178
                                              3 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       6     5      1     608
                                              6 COMMON     6     5      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ExtInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ExtInt
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_DATA
   _LCD_Write_Char
     _LCD_DATA
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA
   ___lwdiv
   ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 22 07:54:02 2021

                        pc 0002                         l29 0354                         l70 030A  
                       l71 0310                         l72 0311                         l80 0339  
                       l73 0317                         l74 0318                         l75 031E  
                       l91 0184                         l77 031F                         l69 0307  
                       l94 01D7                         l88 0228                         fsr 0004  
                      l100 02FD                        l464 026C                        l474 02A6  
                      l930 02FF                        l932 0303                        l940 0186  
                      l934 030E                        l950 01AD                        l942 0190  
                      l936 0315                        l960 01CB                        l952 01B0  
                      l944 0193                        l938 031C                        l970 032D  
                      l962 01CE                        l954 01B9                        l946 01A1  
                      l972 0336                        l964 0321                        l980 0122  
                      l956 01BF                        l948 01A4                        l974 0352  
                      l966 0324                        l990 0140                        l982 0123  
                      l958 01C2                        l968 032A                        l992 0149  
                      l984 0129                        l976 011E                        l994 014F  
                      l986 0131                        l978 0121                        _GIE 005F  
                      l996 0154                        l988 013A                        l998 015A  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u300 0303                        u301 0302                        u310 030E  
                      u311 030D                        u320 0315                        u400 0231  
                      u321 0314                        u401 0230                        u330 031C  
                      u331 031B                        u420 0243                        u500 028F  
                      u421 0242                        u501 028E                        u350 01DE  
                      u351 01DD                        u415 0235                        u440 0254  
                      u520 02A2                        u345 0196                        u441 0253  
                      u521 02A1                        u505 028B                        u370 0206  
                      u371 0205                        u435 0244                        u515 0296  
                      u460 0268                        _ISR 02A7                        u365 01E6  
                      u461 0267                        u445 0250                        u390 02FD  
                      u470 0273                        u391 02FC                        u455 025C  
                      u471 0272                        u607 0060                        u385 020E  
                      u617 010D                        u490 0285                        u707 0331  
                      u627 01A8                        u491 0284                        u580 0105  
                      u637 01B4                        u485 0277                        u581 0104  
                      u647 01C6                        u657 01D2                        u667 012D  
                      u677 0135                        u597 0043                        u687 0144  
                      u697 0151                        fsr0 0004                        indf 0000  
          __end_of_LCD_CMD 033A                       ?_ISR 0070             _LCD_Set_Cursor 01D8  
                     l1000 0160                       l1010 017E                       l1002 0166  
                     l1004 016C                       l1020 01FA                       l1012 01D9  
                     l1006 0172                       l1030 0222                       l1014 01DE  
                     l1022 0200                       l1110 0023                       l1102 001B  
                     l1008 0178                       l1024 0206                       l1016 01EF  
                     l1032 02DA                       l1040 0229                       l1120 004A  
                     l1112 0023                       l1104 001F                       l1026 0217  
                     l1018 01F4                       l1034 02DD                       l1050 023F  
                     l1042 022B                       l1130 008F                       l1122 0052  
                     l1114 002D                       l1106 0020                       l1028 021C  
                     l1036 02EA                       l1060 0262                       l1052 0243  
                     l1044 0231                       l1140 00E5                       l1132 00A2  
                     l1124 0058                       l1116 0035                       l1108 0023  
                     l1038 02F0                       l1054 0254                       l1046 0234  
                     l1062 0268                       l1070 0276                       l1150 00FC  
                     l1134 00B5                       l1126 0067                       l1118 003B  
                     l1056 025A                       l1048 023B                       l1080 0295  
                     l1072 027D                       l1152 0105                       l1136 00C8  
                     l1128 007C                       l1058 025B                       l1082 029C  
                     l1074 0281                       l1066 026D                       l1154 0114  
                     l1146 00E9                       l1138 00DB                       l1076 0285  
                     l1068 0273                       l1084 02A2                       l1148 00F4  
                     l1078 028F        LCD_Write_String@str 007A                       STR_1 034A  
                     STR_2 0340                       STR_3 034E                       _INTE 005C  
                     _INTF 0059                       i1l36 02D2          ?_LCD_Write_String 0070  
                     _main 001B                       btemp 007E                       start 000C  
       ??_LCD_Write_String 0078                      ??_ISR 0070           __end_of_LCD_DATA 0320  
         __end_of_LCD_Init 0185                      ?_main 0070            __end_of___lwdiv 026D  
          __end_of___lwmod 02A7                      u53_20 02AB                      u53_21 02AA  
                    u54_20 02AF                      u54_21 02AE                      u55_20 02BC  
                    u55_21 02B8                      u56_24 02BF                      u57_20 02CE  
                    u57_21 02CD                      _TRISD 0088                      _Digit 0027  
   __end_of_LCD_Set_Cursor 0229                      main@i 0023                      main@k 0025  
                    pclath 000A                      status 0003                      wtemp0 007E  
           _LCD_Write_Char 0185            __initialization 000F               __end_of_main 011E  
                   ??_main 0020                  ??_LCD_CMD 0073            ?_LCD_Set_Cursor 0076  
                   _ADCON1 009F                     i1l1100 02CE                     i1l1090 02AB  
                   i1l1092 02AF                     i1l1094 02B0                     i1l1096 02BF  
                   i1l1088 02A7                     i1l1098 02C5                     _TRISD2 0442  
                   _TRISD3 0443     __end_of_LCD_Write_Char 01D8                     _ExtInt 0352  
                ??___lwdiv 0076                  ??___lwmod 0076                     _number 002B  
                   saved_w 007E            LCD_Set_Cursor@c 0076            LCD_Set_Cursor@r 0078  
                ?_LCD_DATA 0070    __end_of__initialization 0017                  ?_LCD_Init 0070  
          ?_LCD_Write_Char 0070             __pcstackCOMMON 0070                 __pbssBANK0 0027  
               ??_LCD_DATA 0072                 ??_LCD_Init 0076                    ?_ExtInt 0070  
               __pmaintext 001B                 __pintentry 0004  __size_of_LCD_Write_String 0025  
                  _LCD_CMD 0320                 __stringtab 033A            __size_of_ExtInt 0003  
                  ___lwdiv 0229                    ___lwmod 026D           ??_LCD_Set_Cursor 0077  
                  __ptext1 026D                    __ptext2 0229                    __ptext3 02D9  
                  __ptext4 0185                    __ptext5 01D8                    __ptext6 011E  
                  __ptext7 0320                    __ptext8 02FE                    __ptext9 0352  
             __size_of_ISR 0032       end_of_initialization 0017                  _PORTEbits 0009  
               LCD_CMD@CMD 0075                  _TRISEbits 0089          LCD_Write_String@i 0078  
         ??_LCD_Write_Char 0073          __size_of_LCD_DATA 0022          __size_of_LCD_Init 0067  
           __end_of_ExtInt 0355           _LCD_Write_String 02D9        start_initialization 000F  
              __end_of_ISR 02D9                   ??_ExtInt 0072                   ?_LCD_CMD 0070  
                ___latbits 0002              __pcstackBANK0 0020           ___lwdiv@dividend 0074  
                 ?___lwdiv 0072                   ?___lwmod 0072                  __pstrings 033A  
         ___lwdiv@quotient 0076                   _LCD_DATA 02FE          interrupt_function 0004  
                 _LCD_Init 011E                __stringbase 033F           __size_of_LCD_CMD 001A  
 __end_of_LCD_Write_String 02FE        LCD_Write_Char@High4 0076           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0340            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0078                   __ptext10 02A7    __size_of_LCD_Set_Cursor 0051  
            __size_of_main 0103        LCD_Set_Cursor@High4 007A         LCD_Write_Char@Data 0077  
       LCD_Write_Char@Low4 0075                   intlevel1 0000           ___lwmod@dividend 0074  
                stringcode 033A    __size_of_LCD_Write_Char 0053         LCD_Set_Cursor@Low4 0079  
       LCD_Set_Cursor@Temp 007B               LCD_DATA@Data 0072            ___lwmod@divisor 0072  
          ___lwmod@counter 0076                   stringdir 033A                   stringtab 033A  
