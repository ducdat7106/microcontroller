

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 28 08:01:14 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  0087                     	;# 
   234  0088                     	;# 
   235  0089                     	;# 
   236  008C                     	;# 
   237  008D                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  010F                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0006                     	;# 
   262  0007                     	;# 
   263  0008                     	;# 
   264  0009                     	;# 
   265  000A                     	;# 
   266  000B                     	;# 
   267  000C                     	;# 
   268  000D                     	;# 
   269  000E                     	;# 
   270  000E                     	;# 
   271  000F                     	;# 
   272  0010                     	;# 
   273  0011                     	;# 
   274  0012                     	;# 
   275  0013                     	;# 
   276  0014                     	;# 
   277  0015                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  001A                     	;# 
   284  001B                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001D                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  0081                     	;# 
   291  0085                     	;# 
   292  0086                     	;# 
   293  0087                     	;# 
   294  0088                     	;# 
   295  0089                     	;# 
   296  008C                     	;# 
   297  008D                     	;# 
   298  008E                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  018C                     	;# 
   434  018D                     	;# 
   435                           
   436                           	psect	idataBANK0
   437  0094                     __pidataBANK0:
   438                           
   439                           ;initializer for _BackLight_State
   440  0094  3408               	retlw	8
   441                           
   442                           ;initializer for _user1
   443  0095  3432               	retlw	50
   444  0096  3433               	retlw	51
   445  0097  3434               	retlw	52
   446  0098  3435               	retlw	53
   447  0006                     _PORTB	set	6
   448  0013                     _SSPBUF	set	19
   449  0014                     _SSPCON	set	20
   450  000B                     _INTCONbits	set	11
   451  0037                     _RB7	set	55
   452  0036                     _RB6	set	54
   453  0035                     _RB5	set	53
   454  0034                     _RB4	set	52
   455  0033                     _RB3	set	51
   456  0032                     _RB2	set	50
   457  0031                     _RB1	set	49
   458  0030                     _RB0	set	48
   459  0063                     _SSPIF	set	99
   460  0081                     _OPTION_REGbits	set	129
   461  0086                     _TRISB	set	134
   462  0093                     _SSPADD	set	147
   463  0094                     _SSPSTAT	set	148
   464  0091                     _SSPCON2	set	145
   465  009F                     _ADCON1	set	159
   466  048B                     _RCEN	set	1163
   467  048E                     _ACKSTAT	set	1166
   468  048C                     _ACKEN	set	1164
   469  048D                     _ACKDT	set	1165
   470  048A                     _PEN	set	1162
   471  0489                     _RSEN	set	1161
   472  0488                     _SEN	set	1160
   473  043C                     _TRISC4	set	1084
   474  043B                     _TRISC3	set	1083
   475  010C                     _EEDATA	set	268
   476  010D                     _EEADR	set	269
   477  018D                     _EECON2	set	397
   478  018C                     _EECON1bits	set	396
   479                           
   480                           	psect	strings
   481  0003                     __pstrings:
   482  0003                     stringtab:
   483  0003                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0003  1BFF               	btfsc	btemp+1,7
   487  0004  280D               	ljmp	stringcode
   488  0005  1383               	bcf	3,7
   489  0006  187F               	btfsc	btemp+1,0
   490  0007  1783               	bsf	3,7
   491  0008  0800               	movf	0,w
   492  0009  0A84               	incf	4,f
   493  000A  1903               	skipnz
   494  000B  0AFF               	incf	btemp+1,f
   495  000C  0008               	return
   496  000D                     stringcode:
   497  000D                     stringdir:
   498  000D  3000               	movlw	high stringdir
   499  000E  008A               	movwf	10
   500  000F  0804               	movf	4,w
   501  0010  0A84               	incf	4,f
   502  0011  0782               	addwf	2,f
   503  0012                     __stringbase:
   504  0012  3400               	retlw	0
   505  0013                     __end_of__stringtab:
   506  0013                     STR_3:
   507  0013  3445               	retlw	69	;'E'
   508  0014  346E               	retlw	110	;'n'
   509  0015  3474               	retlw	116	;'t'
   510  0016  3465               	retlw	101	;'e'
   511  0017  3472               	retlw	114	;'r'
   512  0018  3420               	retlw	32	;' '
   513  0019  344E               	retlw	78	;'N'
   514  001A  3465               	retlw	101	;'e'
   515  001B  3477               	retlw	119	;'w'
   516  001C  3420               	retlw	32	;' '
   517  001D  3443               	retlw	67	;'C'
   518  001E  346F               	retlw	111	;'o'
   519  001F  3464               	retlw	100	;'d'
   520  0020  3465               	retlw	101	;'e'
   521  0021  343A               	retlw	58	;':'
   522  0022  3400               	retlw	0
   523  0023                     STR_9:
   524  0023  3457               	retlw	87	;'W'
   525  0024  3472               	retlw	114	;'r'
   526  0025  346F               	retlw	111	;'o'
   527  0026  346E               	retlw	110	;'n'
   528  0027  3467               	retlw	103	;'g'
   529  0028  3420               	retlw	32	;' '
   530  0029  3450               	retlw	80	;'P'
   531  002A  3461               	retlw	97	;'a'
   532  002B  3473               	retlw	115	;'s'
   533  002C  3473               	retlw	115	;'s'
   534  002D  3477               	retlw	119	;'w'
   535  002E  346F               	retlw	111	;'o'
   536  002F  3472               	retlw	114	;'r'
   537  0030  3464               	retlw	100	;'d'
   538  0031  3400               	retlw	0
   539  0032                     STR_1:
   540  0032  3444               	retlw	68	;'D'
   541  0033  346F               	retlw	111	;'o'
   542  0034  346F               	retlw	111	;'o'
   543  0035  3472               	retlw	114	;'r'
   544  0036  3420               	retlw	32	;' '
   545  0037  3453               	retlw	83	;'S'
   546  0038  3479               	retlw	121	;'y'
   547  0039  3473               	retlw	115	;'s'
   548  003A  3474               	retlw	116	;'t'
   549  003B  3465               	retlw	101	;'e'
   550  003C  346D               	retlw	109	;'m'
   551  003D  3420               	retlw	32	;' '
   552  003E  3431               	retlw	49	;'1'
   553  003F  3400               	retlw	0
   554  0040                     STR_6:
   555  0040  3449               	retlw	73	;'I'
   556  0041  346E               	retlw	110	;'n'
   557  0042  3470               	retlw	112	;'p'
   558  0043  3475               	retlw	117	;'u'
   559  0044  3474               	retlw	116	;'t'
   560  0045  3420               	retlw	32	;' '
   561  0046  344E               	retlw	78	;'N'
   562  0047  3475               	retlw	117	;'u'
   563  0048  346D               	retlw	109	;'m'
   564  0049  3462               	retlw	98	;'b'
   565  004A  3465               	retlw	101	;'e'
   566  004B  3472               	retlw	114	;'r'
   567  004C  343A               	retlw	58	;':'
   568  004D  3400               	retlw	0
   569  004E                     STR_4:
   570  004E  344E               	retlw	78	;'N'
   571  004F  3465               	retlw	101	;'e'
   572  0050  3477               	retlw	119	;'w'
   573  0051  3420               	retlw	32	;' '
   574  0052  3443               	retlw	67	;'C'
   575  0053  346F               	retlw	111	;'o'
   576  0054  3464               	retlw	100	;'d'
   577  0055  3465               	retlw	101	;'e'
   578  0056  3420               	retlw	32	;' '
   579  0057  3453               	retlw	83	;'S'
   580  0058  3465               	retlw	101	;'e'
   581  0059  3474               	retlw	116	;'t'
   582  005A  3400               	retlw	0
   583  005B                     STR_2:
   584  005B  3443               	retlw	67	;'C'
   585  005C  3448               	retlw	72	;'H'
   586  005D  3441               	retlw	65	;'A'
   587  005E  344E               	retlw	78	;'N'
   588  005F  3447               	retlw	71	;'G'
   589  0060  3445               	retlw	69	;'E'
   590  0061  3420               	retlw	32	;' '
   591  0062  3443               	retlw	67	;'C'
   592  0063  344F               	retlw	79	;'O'
   593  0064  3444               	retlw	68	;'D'
   594  0065  3445               	retlw	69	;'E'
   595  0066  3400               	retlw	0
   596  0067                     STR_8:
   597  0067  3444               	retlw	68	;'D'
   598  0068  346F               	retlw	111	;'o'
   599  0069  346F               	retlw	111	;'o'
   600  006A  3472               	retlw	114	;'r'
   601  006B  3420               	retlw	32	;' '
   602  006C  3443               	retlw	67	;'C'
   603  006D  346C               	retlw	108	;'l'
   604  006E  346F               	retlw	111	;'o'
   605  006F  3473               	retlw	115	;'s'
   606  0070  3465               	retlw	101	;'e'
   607  0071  3400               	retlw	0
   608  0072                     STR_7:
   609  0072  3444               	retlw	68	;'D'
   610  0073  346F               	retlw	111	;'o'
   611  0074  346F               	retlw	111	;'o'
   612  0075  3472               	retlw	114	;'r'
   613  0076  3420               	retlw	32	;' '
   614  0077  346F               	retlw	111	;'o'
   615  0078  3470               	retlw	112	;'p'
   616  0079  3465               	retlw	101	;'e'
   617  007A  346E               	retlw	110	;'n'
   618  007B  3400               	retlw	0
   619  007C                     STR_5:
   620  007C  3450               	retlw	80	;'P'
   621  007D  3472               	retlw	114	;'r'
   622  007E  3465               	retlw	101	;'e'
   623  007F  3473               	retlw	115	;'s'
   624  0080  3473               	retlw	115	;'s'
   625  0081  3420               	retlw	32	;' '
   626  0082  3443               	retlw	67	;'C'
   627  0083  3420               	retlw	32	;' '
   628  0084  3400               	retlw	0
   629                           
   630                           	psect	cinit
   631  07D5                     start_initialization:	
   632                           ; #config settings
   633                           
   634  07D5                     __initialization:
   635                           
   636                           ; Initialize objects allocated to BANK0
   637  07D5  120A  118A  2094  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   638  07DA  00C8               	movwf	__pdataBANK0& (0+127)
   639  07DB  120A  118A  2095  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   640  07E0  00C9               	movwf	(__pdataBANK0+1)& (0+127)
   641  07E1  120A  118A  2096  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   642  07E6  00CA               	movwf	(__pdataBANK0+2)& (0+127)
   643  07E7  120A  118A  2097  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   644  07EC  00CB               	movwf	(__pdataBANK0+3)& (0+127)
   645  07ED  120A  118A  2098  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   646  07F2  00CC               	movwf	(__pdataBANK0+4)& (0+127)
   647                           
   648                           ; Clear objects allocated to BANK0
   649  07F3  1383               	bcf	3,7	;select IRP bank0
   650  07F4  3020               	movlw	low __pbssBANK0
   651  07F5  0084               	movwf	4
   652  07F6  3036               	movlw	low (__pbssBANK0+22)
   653  07F7  120A  118A  2099  120A  118A  	fcall	clear_ram0
   654  07FC                     end_of_initialization:	
   655                           ;End of C runtime variable initialization code
   656                           
   657  07FC                     __end_of__initialization:
   658  07FC  0183               	clrf	3
   659  07FD  120A  118A  29B5   	ljmp	_main	;jump to C main() function
   660                           
   661                           	psect	bssBANK0
   662  0020                     __pbssBANK0:
   663  0020                     _cnt:
   664  0020                     	ds	2
   665  0022                     _j:
   666  0022                     	ds	2
   667  0024                     _RS:
   668  0024                     	ds	1
   669  0025                     _w1:
   670  0025                     	ds	1
   671  0026                     _m:
   672  0026                     	ds	1
   673  0027                     _code1:
   674  0027                     	ds	15
   675                           
   676                           	psect	dataBANK0
   677  0048                     __pdataBANK0:
   678  0048                     _BackLight_State:
   679  0048                     	ds	1
   680  0049                     _user1:
   681  0049                     	ds	4
   682                           
   683                           	psect	clrtext
   684  0099                     clear_ram0:	
   685                           ;	Called with FSR containing the base address, and
   686                           ;	W with the last address+1
   687                           
   688  0099  0064               	clrwdt	;clear the watchdog before getting into this loop
   689  009A                     clrloop0:
   690  009A  0180               	clrf	0	;clear RAM location pointed to by FSR
   691  009B  0A84               	incf	4,f	;increment pointer
   692  009C  0604               	xorwf	4,w	;XOR with final address
   693  009D  1903               	btfsc	3,2	;have we reached the end yet?
   694  009E  3400               	retlw	0	;all done for this memory range, return
   695  009F  0604               	xorwf	4,w	;XOR again to restore value
   696  00A0  289A               	goto	clrloop0	;do the next byte
   697                           
   698                           	psect	cstackCOMMON
   699  0070                     __pcstackCOMMON:
   700  0070                     ?_Keypad_Init:
   701  0070                     ??_Keypad_Init:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_LCD_Clear:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_LOCK_Run:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_Keypad_Switch_Press_Scan:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_LCD_Write_Char:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_EEPROM_Read_Char:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ??_EEPROM_Read_Char:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_EEPROM_Write_Char:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_I2C_Start:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ??_I2C_Start:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_I2C_Write_Char:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_I2C_Write_Char:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_I2C_Stop:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_I2C_Stop:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_System_Init:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_main:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_LOCK_Enter:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_LOCK_Read:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_LOCK_Write:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_LOCK_Change:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_IO_Expander_Write:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_LCD_Write_4Bit:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_LCD_CMD:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_I2C_Wait:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ??_I2C_Wait:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_Keypad_Scanner:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??_Keypad_Scanner:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?___lldiv:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     EEPROM_Write_Char@Data:	
   786                           ; 4 bytes @ 0x0
   787                           
   788  0070                     EEPROM_Read_Char@Address:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     I2C_Write_Char@Data:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ___lldiv@divisor:	
   795                           ; 1 bytes @ 0x0
   796                           
   797                           
   798                           ; 4 bytes @ 0x0
   799  0070                     	ds	1
   800  0071                     ??_EEPROM_Write_Char:
   801  0071                     ??_IO_Expander_Write:	
   802                           ; 1 bytes @ 0x1
   803                           
   804  0071                     EEPROM_Write_Char@Address:	
   805                           ; 1 bytes @ 0x1
   806                           
   807  0071                     EEPROM_Read_Char@Data:	
   808                           ; 1 bytes @ 0x1
   809                           
   810  0071                     IO_Expander_Write@Data:	
   811                           ; 1 bytes @ 0x1
   812                           
   813                           
   814                           ; 1 bytes @ 0x1
   815  0071                     	ds	1
   816  0072                     ??_Keypad_Switch_Press_Scan:
   817  0072                     ??_LOCK_Read:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0072                     ??_LOCK_Write:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0072                     ??_LCD_Write_4Bit:	
   824                           ; 1 bytes @ 0x2
   825                           
   826  0072                     Keypad_Switch_Press_Scan@key:	
   827                           ; 1 bytes @ 0x2
   828                           
   829                           
   830                           ; 1 bytes @ 0x2
   831  0072                     	ds	1
   832  0073                     LCD_Write_4Bit@Nibble:
   833                           
   834                           ; 1 bytes @ 0x3
   835  0073                     	ds	1
   836  0074                     ??_LCD_Write_Char:
   837  0074                     ??_LCD_CMD:	
   838                           ; 1 bytes @ 0x4
   839                           
   840  0074                     ___lldiv@dividend:	
   841                           ; 1 bytes @ 0x4
   842                           
   843                           
   844                           ; 4 bytes @ 0x4
   845  0074                     	ds	1
   846  0075                     LCD_CMD@CMD:
   847  0075                     LCD_Write_Char@Data:	
   848                           ; 1 bytes @ 0x5
   849                           
   850                           
   851                           ; 1 bytes @ 0x5
   852  0075                     	ds	1
   853  0076                     ?_LCD_Set_Cursor:
   854  0076                     ?_LCD_Write_String:	
   855                           ; 1 bytes @ 0x6
   856                           
   857  0076                     ??_LCD_Clear:	
   858                           ; 1 bytes @ 0x6
   859                           
   860  0076                     LCD_Set_Cursor@COL:	
   861                           ; 1 bytes @ 0x6
   862                           
   863  0076                     LCD_Write_String@Str:	
   864                           ; 1 bytes @ 0x6
   865                           
   866                           
   867                           ; 2 bytes @ 0x6
   868  0076                     	ds	1
   869  0077                     ??_LCD_Set_Cursor:
   870                           
   871                           ; 1 bytes @ 0x7
   872  0077                     	ds	1
   873  0078                     ??_LCD_Write_String:
   874  0078                     ??___lldiv:	
   875                           ; 1 bytes @ 0x8
   876                           
   877                           
   878                           ; 1 bytes @ 0x8
   879  0078                     	ds	1
   880  0079                     LCD_Set_Cursor@ROW:
   881  0079                     ___lldiv@quotient:	
   882                           ; 1 bytes @ 0x9
   883                           
   884                           
   885                           ; 4 bytes @ 0x9
   886  0079                     	ds	1
   887  007A                     ??_LOCK_Enter:
   888                           
   889                           ; 1 bytes @ 0xA
   890  007A                     	ds	1
   891  007B                     LCD_Write_String@i:
   892                           
   893                           ; 2 bytes @ 0xB
   894  007B                     	ds	1
   895  007C                     LOCK_Enter@kp:
   896                           
   897                           ; 1 bytes @ 0xC
   898  007C                     	ds	1
   899  007D                     ___lldiv@counter:
   900                           
   901                           ; 1 bytes @ 0xD
   902  007D                     	ds	1
   903  007E                     ??_System_Init:
   904                           
   905                           	psect	cstackBANK0
   906  0036                     __pcstackBANK0:	
   907                           ; 1 bytes @ 0xE
   908                           
   909  0036                     ?_I2C_Master_Init:
   910  0036                     ??_LOCK_Change:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0036                     I2C_Master_Init@I2C_BaudRate:	
   914                           ; 1 bytes @ 0x0
   915                           
   916                           
   917                           ; 4 bytes @ 0x0
   918  0036                     	ds	3
   919  0039                     ??_LOCK_Run:
   920                           
   921                           ; 1 bytes @ 0x3
   922  0039                     	ds	1
   923  003A                     ??_I2C_Master_Init:
   924                           
   925                           ; 1 bytes @ 0x4
   926  003A                     	ds	4
   927  003E                     ?_LCD_Init:
   928  003E                     LCD_Init@I2C_BaudRate:	
   929                           ; 1 bytes @ 0x8
   930                           
   931                           
   932                           ; 4 bytes @ 0x8
   933  003E                     	ds	4
   934  0042                     ??_LCD_Init:
   935                           
   936                           ; 1 bytes @ 0xC
   937  0042                     	ds	3
   938  0045                     ??_main:
   939                           
   940                           ; 1 bytes @ 0xF
   941  0045                     	ds	3
   942                           
   943                           	psect	maintext
   944  01B5                     __pmaintext:	
   945 ;;
   946 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   947 ;;
   948 ;; *************** function _main *****************
   949 ;; Defined at:
   950 ;;		line 46 in file "main_khoa_cua.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : B00/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0
   966 ;;      Temps:          0       3       0       0       0
   967 ;;      Totals:         0       3       0       0       0
   968 ;;Total ram usage:        3 bytes
   969 ;; Hardware stack levels required when called:    9
   970 ;; This function calls:
   971 ;;		_LCD_Clear
   972 ;;		_LCD_Set_Cursor
   973 ;;		_LCD_Write_String
   974 ;;		_LOCK_Run
   975 ;;		_System_Init
   976 ;; This function is called by:
   977 ;;		Startup code after reset
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _main
   983  01B5                     _main:
   984  01B5                     l2263:	
   985                           ;incstack = 0
   986 ;; hardware stack exceeded
   987                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   988                           
   989                           
   990                           ;main_khoa_cua.c: 48:     System_Init();
   991  01B5  120A  118A  2112  120A  118A  	fcall	_System_Init
   992  01BA                     l2265:
   993                           
   994                           ;main_khoa_cua.c: 50:     LCD_Set_Cursor(2,4);
   995  01BA  3004               	movlw	4
   996  01BB  00FF               	movwf	btemp+1
   997  01BC  087F               	movf	btemp+1,w
   998  01BD  00F6               	movwf	LCD_Set_Cursor@COL
   999  01BE  3002               	movlw	2
  1000  01BF  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  1001  01C4                     l2267:
  1002                           
  1003                           ;main_khoa_cua.c: 51:     LCD_Write_String("Door System 1");
  1004  01C4  3020               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1005  01C5  00F6               	movwf	LCD_Write_String@Str
  1006  01C6  3080               	movlw	128
  1007  01C7  00F7               	movwf	LCD_Write_String@Str+1
  1008  01C8  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  1009  01CD                     l2269:
  1010                           
  1011                           ;main_khoa_cua.c: 52:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1012  01CD  3015               	movlw	21
  1013  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1014  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1015  01D0  00C7               	movwf	??_main+2
  1016  01D1  304B               	movlw	75
  1017  01D2  00C6               	movwf	??_main+1
  1018  01D3  30BD               	movlw	189
  1019  01D4  00C5               	movwf	??_main
  1020  01D5                     u1417:
  1021  01D5  0BC5               	decfsz	??_main,f
  1022  01D6  29D5               	goto	u1417
  1023  01D7  0BC6               	decfsz	??_main+1,f
  1024  01D8  29D5               	goto	u1417
  1025  01D9  0BC7               	decfsz	??_main+2,f
  1026  01DA  29D5               	goto	u1417
  1027  01DB  29DC               	nop2
  1028  01DC                     l2271:
  1029                           
  1030                           ;main_khoa_cua.c: 53:     LCD_Clear();
  1031  01DC  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  1032  01E1                     l2273:
  1033                           
  1034                           ;main_khoa_cua.c: 56:     {;main_khoa_cua.c: 57:         LOCK_Run();
  1035  01E1  120A  118A  269E  120A  118A  	fcall	_LOCK_Run
  1036  01E6  29E1               	goto	l2273
  1037  01E7  120A  118A  2800   	ljmp	start
  1038  01EA                     __end_of_main:
  1039                           
  1040                           	psect	text1
  1041  0112                     __ptext1:	
  1042 ;; *************** function _System_Init *****************
  1043 ;; Defined at:
  1044 ;;		line 37 in file "main_khoa_cua.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    6
  1065 ;; This function calls:
  1066 ;;		_Keypad_Init
  1067 ;;		_LCD_Init
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _System_Init
  1075  0112                     _System_Init:
  1076  0112                     l2161:	
  1077                           ;incstack = 0
  1078                           ; Regs used in _System_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1079                           
  1080                           
  1081                           ;main_khoa_cua.c: 39:     ADCON1 = 0x07;
  1082  0112  3007               	movlw	7
  1083  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1084  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1085  0115  009F               	movwf	31	;volatile
  1086  0116                     l2163:
  1087                           
  1088                           ;main_khoa_cua.c: 41:     Keypad_Init();
  1089  0116  120A  118A  20B3  120A  118A  	fcall	_Keypad_Init
  1090  011B                     l2165:
  1091                           
  1092                           ;main_khoa_cua.c: 43:     LCD_Init(100000);
  1093  011B  3000               	movlw	0
  1094  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1095  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1096  011E  00C1               	movwf	LCD_Init@I2C_BaudRate+3
  1097  011F  3001               	movlw	1
  1098  0120  00C0               	movwf	LCD_Init@I2C_BaudRate+2
  1099  0121  3086               	movlw	134
  1100  0122  00BF               	movwf	LCD_Init@I2C_BaudRate+1
  1101  0123  30A0               	movlw	160
  1102  0124  00BE               	movwf	LCD_Init@I2C_BaudRate
  1103  0125  120A  118A  25DA  120A  118A  	fcall	_LCD_Init
  1104  012A                     l39:
  1105  012A  0008               	return
  1106  012B                     __end_of_System_Init:
  1107                           
  1108                           	psect	text2
  1109  05DA                     __ptext2:	
  1110 ;; *************** function _LCD_Init *****************
  1111 ;; Defined at:
  1112 ;;		line 33 in file "i2c_lcd.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  I2C_BaudRate    4    8[BANK0 ] const unsigned long 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       4       0       0       0
  1127 ;;      Locals:         0       0       0       0       0
  1128 ;;      Temps:          0       3       0       0       0
  1129 ;;      Totals:         0       7       0       0       0
  1130 ;;Total ram usage:        7 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    5
  1133 ;; This function calls:
  1134 ;;		_I2C_Master_Init
  1135 ;;		_IO_Expander_Write
  1136 ;;		_LCD_CMD
  1137 ;; This function is called by:
  1138 ;;		_System_Init
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _LCD_Init
  1144  05DA                     _LCD_Init:
  1145  05DA                     l2071:	
  1146                           ;incstack = 0
  1147                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1148                           
  1149                           
  1150                           ;i2c_lcd.c: 33: void LCD_Init(const unsigned long I2C_BaudRate);i2c_lcd.c: 34: {;i2c_lcd
      +                          .c: 35:   I2C_Master_Init(I2C_BaudRate);
  1151  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1152  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1153  05DC  0841               	movf	LCD_Init@I2C_BaudRate+3,w
  1154  05DD  00B9               	movwf	I2C_Master_Init@I2C_BaudRate+3
  1155  05DE  0840               	movf	LCD_Init@I2C_BaudRate+2,w
  1156  05DF  00B8               	movwf	I2C_Master_Init@I2C_BaudRate+2
  1157  05E0  083F               	movf	LCD_Init@I2C_BaudRate+1,w
  1158  05E1  00B7               	movwf	I2C_Master_Init@I2C_BaudRate+1
  1159  05E2  083E               	movf	LCD_Init@I2C_BaudRate,w
  1160  05E3  00B6               	movwf	I2C_Master_Init@I2C_BaudRate
  1161  05E4  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Init
  1162  05E9                     l2073:
  1163                           
  1164                           ;i2c_lcd.c: 36:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1165  05E9  301A               	movlw	26
  1166  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1167  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1168  05EC  00C3               	movwf	??_LCD_Init+1
  1169  05ED  30F7               	movlw	247
  1170  05EE  00C2               	movwf	??_LCD_Init
  1171  05EF                     u1427:
  1172  05EF  0BC2               	decfsz	??_LCD_Init,f
  1173  05F0  2DEF               	goto	u1427
  1174  05F1  0BC3               	decfsz	??_LCD_Init+1,f
  1175  05F2  2DEF               	goto	u1427
  1176  05F3  2DF4               	nop2
  1177  05F4                     l2075:
  1178                           
  1179                           ;i2c_lcd.c: 38:   IO_Expander_Write(0x00);
  1180  05F4  3000               	movlw	0
  1181  05F5  120A  118A  212B  120A  118A  	fcall	_IO_Expander_Write
  1182  05FA                     l2077:
  1183                           
  1184                           ;i2c_lcd.c: 39:   _delay((unsigned long)((30)*(16000000/4000.0)));
  1185  05FA  309C               	movlw	156
  1186  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1187  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1188  05FD  00C3               	movwf	??_LCD_Init+1
  1189  05FE  30D6               	movlw	214
  1190  05FF  00C2               	movwf	??_LCD_Init
  1191  0600                     u1437:
  1192  0600  0BC2               	decfsz	??_LCD_Init,f
  1193  0601  2E00               	goto	u1437
  1194  0602  0BC3               	decfsz	??_LCD_Init+1,f
  1195  0603  2E00               	goto	u1437
  1196  0604  0000               	nop
  1197  0605                     l2079:
  1198                           
  1199                           ;i2c_lcd.c: 40:   LCD_CMD(0x03);
  1200  0605  3003               	movlw	3
  1201  0606  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1202  060B                     l2081:
  1203                           
  1204                           ;i2c_lcd.c: 41:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1205  060B  301A               	movlw	26
  1206  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1207  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1208  060E  00C3               	movwf	??_LCD_Init+1
  1209  060F  30F7               	movlw	247
  1210  0610  00C2               	movwf	??_LCD_Init
  1211  0611                     u1447:
  1212  0611  0BC2               	decfsz	??_LCD_Init,f
  1213  0612  2E11               	goto	u1447
  1214  0613  0BC3               	decfsz	??_LCD_Init+1,f
  1215  0614  2E11               	goto	u1447
  1216  0615  2E16               	nop2
  1217  0616                     l2083:
  1218                           
  1219                           ;i2c_lcd.c: 42:   LCD_CMD(0x03);
  1220  0616  3003               	movlw	3
  1221  0617  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1222  061C                     l2085:
  1223                           
  1224                           ;i2c_lcd.c: 43:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1225  061C  301A               	movlw	26
  1226  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1227  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1228  061F  00C3               	movwf	??_LCD_Init+1
  1229  0620  30F7               	movlw	247
  1230  0621  00C2               	movwf	??_LCD_Init
  1231  0622                     u1457:
  1232  0622  0BC2               	decfsz	??_LCD_Init,f
  1233  0623  2E22               	goto	u1457
  1234  0624  0BC3               	decfsz	??_LCD_Init+1,f
  1235  0625  2E22               	goto	u1457
  1236  0626  2E27               	nop2
  1237  0627                     l2087:
  1238                           
  1239                           ;i2c_lcd.c: 44:   LCD_CMD(0x03);
  1240  0627  3003               	movlw	3
  1241  0628  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1242  062D                     l2089:
  1243                           
  1244                           ;i2c_lcd.c: 45:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1245  062D  301A               	movlw	26
  1246  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1247  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0630  00C3               	movwf	??_LCD_Init+1
  1249  0631  30F7               	movlw	247
  1250  0632  00C2               	movwf	??_LCD_Init
  1251  0633                     u1467:
  1252  0633  0BC2               	decfsz	??_LCD_Init,f
  1253  0634  2E33               	goto	u1467
  1254  0635  0BC3               	decfsz	??_LCD_Init+1,f
  1255  0636  2E33               	goto	u1467
  1256  0637  2E38               	nop2
  1257  0638                     l2091:
  1258                           
  1259                           ;i2c_lcd.c: 46:   LCD_CMD(0x02);
  1260  0638  3002               	movlw	2
  1261  0639  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1262  063E                     l2093:
  1263                           
  1264                           ;i2c_lcd.c: 47:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1265  063E  301A               	movlw	26
  1266  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0641  00C3               	movwf	??_LCD_Init+1
  1269  0642  30F7               	movlw	247
  1270  0643  00C2               	movwf	??_LCD_Init
  1271  0644                     u1477:
  1272  0644  0BC2               	decfsz	??_LCD_Init,f
  1273  0645  2E44               	goto	u1477
  1274  0646  0BC3               	decfsz	??_LCD_Init+1,f
  1275  0647  2E44               	goto	u1477
  1276  0648  2E49               	nop2
  1277  0649                     l2095:
  1278                           
  1279                           ;i2c_lcd.c: 48:   LCD_CMD(0x20 | (2 << 2));
  1280  0649  3028               	movlw	40
  1281  064A  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1282  064F                     l2097:
  1283                           
  1284                           ;i2c_lcd.c: 49:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1285  064F  3002               	movlw	2
  1286  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0652  00C4               	movwf	??_LCD_Init+2
  1289  0653  3004               	movlw	4
  1290  0654  00C3               	movwf	??_LCD_Init+1
  1291  0655  30B9               	movlw	185
  1292  0656  00C2               	movwf	??_LCD_Init
  1293  0657                     u1487:
  1294  0657  0BC2               	decfsz	??_LCD_Init,f
  1295  0658  2E57               	goto	u1487
  1296  0659  0BC3               	decfsz	??_LCD_Init+1,f
  1297  065A  2E57               	goto	u1487
  1298  065B  0BC4               	decfsz	??_LCD_Init+2,f
  1299  065C  2E57               	goto	u1487
  1300  065D  2E5E               	nop2
  1301  065E                     l2099:
  1302                           
  1303                           ;i2c_lcd.c: 50:   LCD_CMD(0x0C);
  1304  065E  300C               	movlw	12
  1305  065F  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1306  0664                     l2101:
  1307                           
  1308                           ;i2c_lcd.c: 51:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1309  0664  3002               	movlw	2
  1310  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0667  00C4               	movwf	??_LCD_Init+2
  1313  0668  3004               	movlw	4
  1314  0669  00C3               	movwf	??_LCD_Init+1
  1315  066A  30B9               	movlw	185
  1316  066B  00C2               	movwf	??_LCD_Init
  1317  066C                     u1497:
  1318  066C  0BC2               	decfsz	??_LCD_Init,f
  1319  066D  2E6C               	goto	u1497
  1320  066E  0BC3               	decfsz	??_LCD_Init+1,f
  1321  066F  2E6C               	goto	u1497
  1322  0670  0BC4               	decfsz	??_LCD_Init+2,f
  1323  0671  2E6C               	goto	u1497
  1324  0672  2E73               	nop2
  1325  0673                     l2103:
  1326                           
  1327                           ;i2c_lcd.c: 52:   LCD_CMD(0x01);
  1328  0673  3001               	movlw	1
  1329  0674  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1330  0679                     l2105:
  1331                           
  1332                           ;i2c_lcd.c: 53:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1333  0679  3002               	movlw	2
  1334  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1335  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1336  067C  00C4               	movwf	??_LCD_Init+2
  1337  067D  3004               	movlw	4
  1338  067E  00C3               	movwf	??_LCD_Init+1
  1339  067F  30B9               	movlw	185
  1340  0680  00C2               	movwf	??_LCD_Init
  1341  0681                     u1507:
  1342  0681  0BC2               	decfsz	??_LCD_Init,f
  1343  0682  2E81               	goto	u1507
  1344  0683  0BC3               	decfsz	??_LCD_Init+1,f
  1345  0684  2E81               	goto	u1507
  1346  0685  0BC4               	decfsz	??_LCD_Init+2,f
  1347  0686  2E81               	goto	u1507
  1348  0687  2E88               	nop2
  1349  0688                     l2107:
  1350                           
  1351                           ;i2c_lcd.c: 54:   LCD_CMD(0x04 | 0x02);
  1352  0688  3006               	movlw	6
  1353  0689  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  1354  068E                     l2109:
  1355                           
  1356                           ;i2c_lcd.c: 55:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1357  068E  3002               	movlw	2
  1358  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1359  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0691  00C4               	movwf	??_LCD_Init+2
  1361  0692  3004               	movlw	4
  1362  0693  00C3               	movwf	??_LCD_Init+1
  1363  0694  30B9               	movlw	185
  1364  0695  00C2               	movwf	??_LCD_Init
  1365  0696                     u1517:
  1366  0696  0BC2               	decfsz	??_LCD_Init,f
  1367  0697  2E96               	goto	u1517
  1368  0698  0BC3               	decfsz	??_LCD_Init+1,f
  1369  0699  2E96               	goto	u1517
  1370  069A  0BC4               	decfsz	??_LCD_Init+2,f
  1371  069B  2E96               	goto	u1517
  1372  069C  2E9D               	nop2
  1373  069D                     l156:
  1374  069D  0008               	return
  1375  069E                     __end_of_LCD_Init:
  1376                           
  1377                           	psect	text3
  1378  0220                     __ptext3:	
  1379 ;; *************** function _I2C_Master_Init *****************
  1380 ;; Defined at:
  1381 ;;		line 3 in file "i2c_master.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  I2C_BaudRate    4    0[BANK0 ] const unsigned long 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       4       0       0       0
  1396 ;;      Locals:         0       0       0       0       0
  1397 ;;      Temps:          0       4       0       0       0
  1398 ;;      Totals:         0       8       0       0       0
  1399 ;;Total ram usage:        8 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		___lldiv
  1404 ;; This function is called by:
  1405 ;;		_LCD_Init
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function _I2C_Master_Init
  1411  0220                     _I2C_Master_Init:
  1412  0220                     l2059:	
  1413                           ;incstack = 0
  1414                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1415                           
  1416                           
  1417                           ;i2c_master.c: 3: void I2C_Master_Init(const unsigned long I2C_BaudRate);i2c_master.c: 4
      +                          : {;i2c_master.c: 8:  SSPCON = 0x28;
  1418  0220  3028               	movlw	40
  1419  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1420  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1421  0223  0094               	movwf	20	;volatile
  1422  0224                     l2061:
  1423                           
  1424                           ;i2c_master.c: 9:  SSPCON2 = 0x00;
  1425  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1427  0226  0191               	clrf	17	;volatile
  1428  0227                     l2063:
  1429                           
  1430                           ;i2c_master.c: 10:  SSPSTAT = 0x00;
  1431  0227  0194               	clrf	20	;volatile
  1432  0228                     l2065:
  1433                           
  1434                           ;i2c_master.c: 12:  SSPADD = (unsigned char)( 16000000/(4*I2C_BaudRate) ) - 1;
  1435  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1437  022A  0836               	movf	I2C_Master_Init@I2C_BaudRate,w
  1438  022B  00BA               	movwf	??_I2C_Master_Init
  1439  022C  0837               	movf	I2C_Master_Init@I2C_BaudRate+1,w
  1440  022D  00BB               	movwf	??_I2C_Master_Init+1
  1441  022E  0838               	movf	I2C_Master_Init@I2C_BaudRate+2,w
  1442  022F  00BC               	movwf	??_I2C_Master_Init+2
  1443  0230  0839               	movf	I2C_Master_Init@I2C_BaudRate+3,w
  1444  0231  00BD               	movwf	??_I2C_Master_Init+3
  1445  0232  3002               	movlw	2
  1446  0233                     u1215:
  1447  0233  1003               	clrc
  1448  0234  0DBA               	rlf	??_I2C_Master_Init,f
  1449  0235  0DBB               	rlf	??_I2C_Master_Init+1,f
  1450  0236  0DBC               	rlf	??_I2C_Master_Init+2,f
  1451  0237  0DBD               	rlf	??_I2C_Master_Init+3,f
  1452  0238                     u1210:
  1453  0238  3EFF               	addlw	-1
  1454  0239  1D03               	skipz
  1455  023A  2A33               	goto	u1215
  1456  023B  083D               	movf	??_I2C_Master_Init+3,w
  1457  023C  00F3               	movwf	___lldiv@divisor+3
  1458  023D  083C               	movf	??_I2C_Master_Init+2,w
  1459  023E  00F2               	movwf	___lldiv@divisor+2
  1460  023F  083B               	movf	??_I2C_Master_Init+1,w
  1461  0240  00F1               	movwf	___lldiv@divisor+1
  1462  0241  083A               	movf	??_I2C_Master_Init,w
  1463  0242  00F0               	movwf	___lldiv@divisor
  1464  0243  3000               	movlw	0
  1465  0244  00F7               	movwf	___lldiv@dividend+3
  1466  0245  30F4               	movlw	244
  1467  0246  00F6               	movwf	___lldiv@dividend+2
  1468  0247  3024               	movlw	36
  1469  0248  00F5               	movwf	___lldiv@dividend+1
  1470  0249  3000               	movlw	0
  1471  024A  00F4               	movwf	___lldiv@dividend
  1472  024B  120A  118A  2352  120A  118A  	fcall	___lldiv
  1473  0250  0870               	movf	?___lldiv,w
  1474  0251  3EFF               	addlw	255
  1475  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1476  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1477  0254  0093               	movwf	19	;volatile
  1478  0255                     l2067:
  1479                           
  1480                           ;i2c_master.c: 13:  TRISC3 = 1;
  1481  0255  1587               	bsf	7,3	;volatile
  1482  0256                     l2069:
  1483                           
  1484                           ;i2c_master.c: 14:  TRISC4 = 1;
  1485  0256  1607               	bsf	7,4	;volatile
  1486  0257                     l222:
  1487  0257  0008               	return
  1488  0258                     __end_of_I2C_Master_Init:
  1489                           
  1490                           	psect	text4
  1491  0352                     __ptext4:	
  1492 ;; *************** function ___lldiv *****************
  1493 ;; Defined at:
  1494 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  divisor         4    0[COMMON] unsigned long 
  1497 ;;  dividend        4    4[COMMON] unsigned long 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  quotient        4    9[COMMON] unsigned long 
  1500 ;;  counter         1   13[COMMON] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  4    0[COMMON] unsigned long 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, btemp+1
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         8       0       0       0       0
  1511 ;;      Locals:         5       0       0       0       0
  1512 ;;      Temps:          1       0       0       0       0
  1513 ;;      Totals:        14       0       0       0       0
  1514 ;;Total ram usage:       14 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_I2C_Master_Init
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function ___lldiv
  1525  0352                     ___lldiv:
  1526  0352                     l1947:	
  1527                           ;incstack = 0
  1528                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1529                           
  1530  0352  3000               	movlw	0
  1531  0353  00FC               	movwf	___lldiv@quotient+3
  1532  0354  3000               	movlw	0
  1533  0355  00FB               	movwf	___lldiv@quotient+2
  1534  0356  3000               	movlw	0
  1535  0357  00FA               	movwf	___lldiv@quotient+1
  1536  0358  3000               	movlw	0
  1537  0359  00F9               	movwf	___lldiv@quotient
  1538  035A  0873               	movf	___lldiv@divisor+3,w
  1539  035B  0472               	iorwf	___lldiv@divisor+2,w
  1540  035C  0471               	iorwf	___lldiv@divisor+1,w
  1541  035D  0470               	iorwf	___lldiv@divisor,w
  1542  035E  1903               	skipnz
  1543  035F  2B61               	goto	u1101
  1544  0360  2B62               	goto	u1100
  1545  0361                     u1101:
  1546  0361  2BAF               	goto	l1969
  1547  0362                     u1100:
  1548  0362                     l1949:
  1549  0362  01FD               	clrf	___lldiv@counter
  1550  0363  0AFD               	incf	___lldiv@counter,f
  1551  0364  2B72               	goto	l1955
  1552  0365                     l1951:
  1553  0365  3001               	movlw	1
  1554  0366  00F8               	movwf	??___lldiv
  1555  0367                     u1115:
  1556  0367  1003               	clrc
  1557  0368  0DF0               	rlf	___lldiv@divisor,f
  1558  0369  0DF1               	rlf	___lldiv@divisor+1,f
  1559  036A  0DF2               	rlf	___lldiv@divisor+2,f
  1560  036B  0DF3               	rlf	___lldiv@divisor+3,f
  1561  036C  0BF8               	decfsz	??___lldiv,f
  1562  036D  2B67               	goto	u1115
  1563  036E                     l1953:
  1564  036E  3001               	movlw	1
  1565  036F  00FF               	movwf	btemp+1
  1566  0370  087F               	movf	btemp+1,w
  1567  0371  07FD               	addwf	___lldiv@counter,f
  1568  0372                     l1955:
  1569  0372  1FF3               	btfss	___lldiv@divisor+3,7
  1570  0373  2B75               	goto	u1121
  1571  0374  2B76               	goto	u1120
  1572  0375                     u1121:
  1573  0375  2B65               	goto	l1951
  1574  0376                     u1120:
  1575  0376                     l1957:
  1576  0376  3001               	movlw	1
  1577  0377  00F8               	movwf	??___lldiv
  1578  0378                     u1135:
  1579  0378  1003               	clrc
  1580  0379  0DF9               	rlf	___lldiv@quotient,f
  1581  037A  0DFA               	rlf	___lldiv@quotient+1,f
  1582  037B  0DFB               	rlf	___lldiv@quotient+2,f
  1583  037C  0DFC               	rlf	___lldiv@quotient+3,f
  1584  037D  0BF8               	decfsz	??___lldiv,f
  1585  037E  2B78               	goto	u1135
  1586  037F                     l1959:
  1587  037F  0873               	movf	___lldiv@divisor+3,w
  1588  0380  0277               	subwf	___lldiv@dividend+3,w
  1589  0381  1D03               	skipz
  1590  0382  2B8D               	goto	u1145
  1591  0383  0872               	movf	___lldiv@divisor+2,w
  1592  0384  0276               	subwf	___lldiv@dividend+2,w
  1593  0385  1D03               	skipz
  1594  0386  2B8D               	goto	u1145
  1595  0387  0871               	movf	___lldiv@divisor+1,w
  1596  0388  0275               	subwf	___lldiv@dividend+1,w
  1597  0389  1D03               	skipz
  1598  038A  2B8D               	goto	u1145
  1599  038B  0870               	movf	___lldiv@divisor,w
  1600  038C  0274               	subwf	___lldiv@dividend,w
  1601  038D                     u1145:
  1602  038D  1C03               	skipc
  1603  038E  2B90               	goto	u1141
  1604  038F  2B91               	goto	u1140
  1605  0390                     u1141:
  1606  0390  2BA0               	goto	l1965
  1607  0391                     u1140:
  1608  0391                     l1961:
  1609  0391  0870               	movf	___lldiv@divisor,w
  1610  0392  02F4               	subwf	___lldiv@dividend,f
  1611  0393  0871               	movf	___lldiv@divisor+1,w
  1612  0394  1C03               	skipc
  1613  0395  0F71               	incfsz	___lldiv@divisor+1,w
  1614  0396  02F5               	subwf	___lldiv@dividend+1,f
  1615  0397  0872               	movf	___lldiv@divisor+2,w
  1616  0398  1C03               	skipc
  1617  0399  0F72               	incfsz	___lldiv@divisor+2,w
  1618  039A  02F6               	subwf	___lldiv@dividend+2,f
  1619  039B  0873               	movf	___lldiv@divisor+3,w
  1620  039C  1C03               	skipc
  1621  039D  0F73               	incfsz	___lldiv@divisor+3,w
  1622  039E  02F7               	subwf	___lldiv@dividend+3,f
  1623  039F                     l1963:
  1624  039F  1479               	bsf	___lldiv@quotient,0
  1625  03A0                     l1965:
  1626  03A0  3001               	movlw	1
  1627  03A1                     u1155:
  1628  03A1  1003               	clrc
  1629  03A2  0CF3               	rrf	___lldiv@divisor+3,f
  1630  03A3  0CF2               	rrf	___lldiv@divisor+2,f
  1631  03A4  0CF1               	rrf	___lldiv@divisor+1,f
  1632  03A5  0CF0               	rrf	___lldiv@divisor,f
  1633  03A6  3EFF               	addlw	-1
  1634  03A7  1D03               	skipz
  1635  03A8  2BA1               	goto	u1155
  1636  03A9                     l1967:
  1637  03A9  3001               	movlw	1
  1638  03AA  02FD               	subwf	___lldiv@counter,f
  1639  03AB  1D03               	btfss	3,2
  1640  03AC  2BAE               	goto	u1161
  1641  03AD  2BAF               	goto	u1160
  1642  03AE                     u1161:
  1643  03AE  2B76               	goto	l1957
  1644  03AF                     u1160:
  1645  03AF                     l1969:
  1646  03AF  087C               	movf	___lldiv@quotient+3,w
  1647  03B0  00F3               	movwf	?___lldiv+3
  1648  03B1  087B               	movf	___lldiv@quotient+2,w
  1649  03B2  00F2               	movwf	?___lldiv+2
  1650  03B3  087A               	movf	___lldiv@quotient+1,w
  1651  03B4  00F1               	movwf	?___lldiv+1
  1652  03B5  0879               	movf	___lldiv@quotient,w
  1653  03B6  00F0               	movwf	?___lldiv
  1654  03B7                     l477:
  1655  03B7  0008               	return
  1656  03B8                     __end_of___lldiv:
  1657                           
  1658                           	psect	text5
  1659  00B3                     __ptext5:	
  1660 ;; *************** function _Keypad_Init *****************
  1661 ;; Defined at:
  1662 ;;		line 4 in file "keypad_4x4.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_System_Init
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _Keypad_Init
  1691  00B3                     _Keypad_Init:
  1692  00B3                     l1345:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _Keypad_Init: [wreg+status,2]
  1695                           
  1696                           
  1697                           ;keypad_4x4.c: 6:     TRISB = 0xF0;
  1698  00B3  30F0               	movlw	240
  1699  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1700  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1701  00B6  0086               	movwf	6	;volatile
  1702  00B7                     l1347:
  1703                           
  1704                           ;keypad_4x4.c: 7:     PORTB = 0x00;
  1705  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1706  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1707  00B9  0186               	clrf	6	;volatile
  1708  00BA                     l1349:
  1709                           
  1710                           ;keypad_4x4.c: 8:     OPTION_REGbits.nRBPU = 0;
  1711  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1712  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1713  00BC  1381               	bcf	1,7	;volatile
  1714  00BD                     l282:
  1715  00BD  0008               	return
  1716  00BE                     __end_of_Keypad_Init:
  1717                           
  1718                           	psect	text6
  1719  069E                     __ptext6:	
  1720 ;; *************** function _LOCK_Run *****************
  1721 ;; Defined at:
  1722 ;;		line 167 in file "main_khoa_cua.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0
  1738 ;;      Temps:          0       3       0       0       0
  1739 ;;      Totals:         0       3       0       0       0
  1740 ;;Total ram usage:        3 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    8
  1743 ;; This function calls:
  1744 ;;		_LCD_Clear
  1745 ;;		_LCD_Set_Cursor
  1746 ;;		_LCD_Write_String
  1747 ;;		_LOCK_Change
  1748 ;;		_LOCK_Enter
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _LOCK_Run
  1756  069E                     _LOCK_Run:
  1757  069E                     l78:	
  1758                           ;incstack = 0
  1759 ;; hardware stack exceeded
  1760                           ; Regs used in _LOCK_Run: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1761                           ;main_khoa_cua.c: 169:  L2: LCD_Clear();
  1762                           
  1763  069E                     l2167:
  1764  069E  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  1765  06A3                     l2169:
  1766                           
  1767                           ;main_khoa_cua.c: 170:     LCD_Set_Cursor(2,3);
  1768  06A3  3003               	movlw	3
  1769  06A4  00FF               	movwf	btemp+1
  1770  06A5  087F               	movf	btemp+1,w
  1771  06A6  00F6               	movwf	LCD_Set_Cursor@COL
  1772  06A7  3002               	movlw	2
  1773  06A8  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  1774  06AD                     l2171:
  1775                           
  1776                           ;main_khoa_cua.c: 171:     LCD_Write_String("Press C ");
  1777  06AD  306A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1778  06AE  00F6               	movwf	LCD_Write_String@Str
  1779  06AF  3080               	movlw	128
  1780  06B0  00F7               	movwf	LCD_Write_String@Str+1
  1781  06B1  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  1782  06B6                     l2173:
  1783                           
  1784                           ;main_khoa_cua.c: 173:     m=0;
  1785  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1786  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1787  06B8  01A6               	clrf	_m
  1788  06B9                     l2175:
  1789                           
  1790                           ;main_khoa_cua.c: 175:     LOCK_Enter();
  1791  06B9  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  1792  06BE                     l2177:
  1793                           
  1794                           ;main_khoa_cua.c: 176:     if(code1[0] == 43)
  1795  06BE  302B               	movlw	43
  1796  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1797  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1798  06C1  0627               	xorwf	_code1,w
  1799  06C2  1D03               	btfss	3,2
  1800  06C3  2EC5               	goto	u1221
  1801  06C4  2EC6               	goto	u1220
  1802  06C5                     u1221:
  1803  06C5  2FD4               	goto	l86
  1804  06C6                     u1220:
  1805  06C6                     l2179:
  1806                           
  1807                           ;main_khoa_cua.c: 177:     {;main_khoa_cua.c: 178:         LCD_Clear();
  1808  06C6  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  1809  06CB                     l2181:
  1810                           
  1811                           ;main_khoa_cua.c: 179:         LCD_Set_Cursor(1,1);
  1812  06CB  01F6               	clrf	LCD_Set_Cursor@COL
  1813  06CC  0AF6               	incf	LCD_Set_Cursor@COL,f
  1814  06CD  3001               	movlw	1
  1815  06CE  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  1816  06D3                     l2183:
  1817                           
  1818                           ;main_khoa_cua.c: 180:         LCD_Write_String("Input Number:");
  1819  06D3  302E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1820  06D4  00F6               	movwf	LCD_Write_String@Str
  1821  06D5  3080               	movlw	128
  1822  06D6  00F7               	movwf	LCD_Write_String@Str+1
  1823  06D7  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  1824  06DC                     l2185:
  1825                           
  1826                           ;main_khoa_cua.c: 182:         m=0;
  1827  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1828  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1829  06DE  01A6               	clrf	_m
  1830  06DF                     l2187:
  1831                           
  1832                           ;main_khoa_cua.c: 184:         LOCK_Enter();
  1833  06DF  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  1834  06E4                     l2189:
  1835                           
  1836                           ;main_khoa_cua.c: 185:         LOCK_Enter();
  1837  06E4  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  1838  06E9                     l2191:
  1839                           
  1840                           ;main_khoa_cua.c: 186:         LOCK_Enter();
  1841  06E9  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  1842  06EE                     l2193:
  1843                           
  1844                           ;main_khoa_cua.c: 187:         LOCK_Enter();
  1845  06EE  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  1846  06F3                     l2195:
  1847                           
  1848                           ;main_khoa_cua.c: 188:         LOCK_Enter();
  1849  06F3  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  1850  06F8                     l2197:
  1851                           
  1852                           ;main_khoa_cua.c: 190:         if(code1[0] == '1' && code1[1] == '2' && code1[2] == '3' 
      +                          && code1[3] == '4' && code1[4] == '5' )
  1853  06F8  3031               	movlw	49
  1854  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1855  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1856  06FB  0627               	xorwf	_code1,w
  1857  06FC  1D03               	btfss	3,2
  1858  06FD  2EFF               	goto	u1231
  1859  06FE  2F00               	goto	u1230
  1860  06FF                     u1231:
  1861  06FF  2F2B               	goto	l2213
  1862  0700                     u1230:
  1863  0700                     l2199:
  1864  0700  3032               	movlw	50
  1865  0701  0628               	xorwf	_code1+1,w
  1866  0702  1D03               	btfss	3,2
  1867  0703  2F05               	goto	u1241
  1868  0704  2F06               	goto	u1240
  1869  0705                     u1241:
  1870  0705  2F2B               	goto	l2213
  1871  0706                     u1240:
  1872  0706                     l2201:
  1873  0706  3033               	movlw	51
  1874  0707  0629               	xorwf	_code1+2,w
  1875  0708  1D03               	btfss	3,2
  1876  0709  2F0B               	goto	u1251
  1877  070A  2F0C               	goto	u1250
  1878  070B                     u1251:
  1879  070B  2F2B               	goto	l2213
  1880  070C                     u1250:
  1881  070C                     l2203:
  1882  070C  3034               	movlw	52
  1883  070D  062A               	xorwf	_code1+3,w
  1884  070E  1D03               	btfss	3,2
  1885  070F  2F11               	goto	u1261
  1886  0710  2F12               	goto	u1260
  1887  0711                     u1261:
  1888  0711  2F2B               	goto	l2213
  1889  0712                     u1260:
  1890  0712                     l2205:
  1891  0712  3035               	movlw	53
  1892  0713  062B               	xorwf	_code1+4,w
  1893  0714  1D03               	btfss	3,2
  1894  0715  2F17               	goto	u1271
  1895  0716  2F18               	goto	u1270
  1896  0717                     u1271:
  1897  0717  2F2B               	goto	l2213
  1898  0718                     u1270:
  1899  0718                     l2207:
  1900                           
  1901                           ;main_khoa_cua.c: 191:         {;main_khoa_cua.c: 192:             LOCK_Enter();
  1902  0718  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  1903  071D                     l2209:
  1904                           
  1905                           ;main_khoa_cua.c: 193:             if(code1[5] == 61)
  1906  071D  303D               	movlw	61
  1907  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1908  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0720  062C               	xorwf	_code1+5,w
  1910  0721  1D03               	btfss	3,2
  1911  0722  2F24               	goto	u1281
  1912  0723  2F25               	goto	u1280
  1913  0724                     u1281:
  1914  0724  2FC1               	goto	l2247
  1915  0725                     u1280:
  1916  0725                     l2211:
  1917                           
  1918                           ;main_khoa_cua.c: 194:             {;main_khoa_cua.c: 195:                 LOCK_Change()
      +                          ;
  1919  0725  120A  118A  2459  120A  118A  	fcall	_LOCK_Change
  1920                           
  1921                           ;main_khoa_cua.c: 196:                 goto L2;
  1922  072A  2E9E               	goto	l78
  1923  072B                     l2213:
  1924  072B  0827               	movf	_code1,w
  1925  072C  0649               	xorwf	_user1,w
  1926  072D  1D03               	skipz
  1927  072E  2F30               	goto	u1291
  1928  072F  2F31               	goto	u1290
  1929  0730                     u1291:
  1930  0730  2F96               	goto	l2237
  1931  0731                     u1290:
  1932  0731                     l2215:
  1933  0731  0828               	movf	_code1+1,w
  1934  0732  064A               	xorwf	_user1+1,w
  1935  0733  1D03               	skipz
  1936  0734  2F36               	goto	u1301
  1937  0735  2F37               	goto	u1300
  1938  0736                     u1301:
  1939  0736  2F96               	goto	l2237
  1940  0737                     u1300:
  1941  0737                     l2217:
  1942  0737  0829               	movf	_code1+2,w
  1943  0738  064B               	xorwf	_user1+2,w
  1944  0739  1D03               	skipz
  1945  073A  2F3C               	goto	u1311
  1946  073B  2F3D               	goto	u1310
  1947  073C                     u1311:
  1948  073C  2F96               	goto	l2237
  1949  073D                     u1310:
  1950  073D                     l2219:
  1951  073D  082A               	movf	_code1+3,w
  1952  073E  064C               	xorwf	_user1+3,w
  1953  073F  1D03               	skipz
  1954  0740  2F42               	goto	u1321
  1955  0741  2F43               	goto	u1320
  1956  0742                     u1321:
  1957  0742  2F96               	goto	l2237
  1958  0743                     u1320:
  1959  0743                     l2221:
  1960  0743  303D               	movlw	61
  1961  0744  062B               	xorwf	_code1+4,w
  1962  0745  1D03               	btfss	3,2
  1963  0746  2F48               	goto	u1331
  1964  0747  2F49               	goto	u1330
  1965  0748                     u1331:
  1966  0748  2F96               	goto	l2237
  1967  0749                     u1330:
  1968  0749                     l2223:
  1969                           
  1970                           ;main_khoa_cua.c: 201:         {;main_khoa_cua.c: 202:             LCD_Clear();
  1971  0749  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  1972  074E                     l2225:
  1973                           
  1974                           ;main_khoa_cua.c: 203:             LCD_Set_Cursor(1,4);
  1975  074E  3004               	movlw	4
  1976  074F  00FF               	movwf	btemp+1
  1977  0750  087F               	movf	btemp+1,w
  1978  0751  00F6               	movwf	LCD_Set_Cursor@COL
  1979  0752  3001               	movlw	1
  1980  0753  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  1981  0758                     l2227:
  1982                           
  1983                           ;main_khoa_cua.c: 204:             LCD_Write_String("Door open");
  1984  0758  3060               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1985  0759  00F6               	movwf	LCD_Write_String@Str
  1986  075A  3080               	movlw	128
  1987  075B  00F7               	movwf	LCD_Write_String@Str+1
  1988  075C  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  1989  0761                     l2229:
  1990                           
  1991                           ;main_khoa_cua.c: 205:             _delay((unsigned long)((3000)*(16000000/4000.0)));
  1992  0761  303D               	movlw	61
  1993  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0764  00BB               	movwf	??_LOCK_Run+2
  1996  0765  30E1               	movlw	225
  1997  0766  00BA               	movwf	??_LOCK_Run+1
  1998  0767  303F               	movlw	63
  1999  0768  00B9               	movwf	??_LOCK_Run
  2000  0769                     u1527:
  2001  0769  0BB9               	decfsz	??_LOCK_Run,f
  2002  076A  2F69               	goto	u1527
  2003  076B  0BBA               	decfsz	??_LOCK_Run+1,f
  2004  076C  2F69               	goto	u1527
  2005  076D  0BBB               	decfsz	??_LOCK_Run+2,f
  2006  076E  2F69               	goto	u1527
  2007  076F                     l2231:
  2008                           
  2009                           ;main_khoa_cua.c: 229:             LCD_Clear();
  2010  076F  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  2011  0774                     l2233:
  2012                           
  2013                           ;main_khoa_cua.c: 230:             LCD_Set_Cursor(1,4);
  2014  0774  3004               	movlw	4
  2015  0775  00FF               	movwf	btemp+1
  2016  0776  087F               	movf	btemp+1,w
  2017  0777  00F6               	movwf	LCD_Set_Cursor@COL
  2018  0778  3001               	movlw	1
  2019  0779  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  2020  077E                     l2235:
  2021                           
  2022                           ;main_khoa_cua.c: 231:             LCD_Write_String("Door Close");
  2023  077E  3055               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2024  077F  00F6               	movwf	LCD_Write_String@Str
  2025  0780  3080               	movlw	128
  2026  0781  00F7               	movwf	LCD_Write_String@Str+1
  2027  0782  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  2028                           
  2029                           ;main_khoa_cua.c: 232:              _delay((unsigned long)((3000)*(16000000/4000.0)));
  2030  0787  303D               	movlw	61
  2031  0788  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0789  1303               	bcf	3,6	;RP1=0, select bank0
  2033  078A  00BB               	movwf	??_LOCK_Run+2
  2034  078B  30E1               	movlw	225
  2035  078C  00BA               	movwf	??_LOCK_Run+1
  2036  078D  303F               	movlw	63
  2037  078E  00B9               	movwf	??_LOCK_Run
  2038  078F                     u1537:
  2039  078F  0BB9               	decfsz	??_LOCK_Run,f
  2040  0790  2F8F               	goto	u1537
  2041  0791  0BBA               	decfsz	??_LOCK_Run+1,f
  2042  0792  2F8F               	goto	u1537
  2043  0793  0BBB               	decfsz	??_LOCK_Run+2,f
  2044  0794  2F8F               	goto	u1537
  2045                           
  2046                           ;main_khoa_cua.c: 257:         }
  2047  0795  2FC1               	goto	l2247
  2048  0796                     l2237:
  2049                           
  2050                           ;main_khoa_cua.c: 259:         {;main_khoa_cua.c: 260:             cnt++;
  2051  0796  3001               	movlw	1
  2052  0797  07A0               	addwf	_cnt,f
  2053  0798  1803               	skipnc
  2054  0799  0AA1               	incf	_cnt+1,f
  2055  079A  3000               	movlw	0
  2056  079B  07A1               	addwf	_cnt+1,f
  2057  079C                     l2239:
  2058                           
  2059                           ;main_khoa_cua.c: 261:             LCD_Clear();
  2060  079C  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  2061  07A1                     l2241:
  2062                           
  2063                           ;main_khoa_cua.c: 262:             LCD_Set_Cursor(1,1);
  2064  07A1  01F6               	clrf	LCD_Set_Cursor@COL
  2065  07A2  0AF6               	incf	LCD_Set_Cursor@COL,f
  2066  07A3  3001               	movlw	1
  2067  07A4  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  2068  07A9                     l2243:
  2069                           
  2070                           ;main_khoa_cua.c: 263:             LCD_Write_String("Wrong Password");
  2071  07A9  3011               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2072  07AA  00F6               	movwf	LCD_Write_String@Str
  2073  07AB  3080               	movlw	128
  2074  07AC  00F7               	movwf	LCD_Write_String@Str+1
  2075  07AD  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  2076  07B2                     l2245:
  2077                           
  2078                           ;main_khoa_cua.c: 264:             _delay((unsigned long)((2000)*(16000000/4000.0)));
  2079  07B2  3029               	movlw	41
  2080  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2081  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  2082  07B5  00BB               	movwf	??_LOCK_Run+2
  2083  07B6  3096               	movlw	150
  2084  07B7  00BA               	movwf	??_LOCK_Run+1
  2085  07B8  307E               	movlw	126
  2086  07B9  00B9               	movwf	??_LOCK_Run
  2087  07BA                     u1547:
  2088  07BA  0BB9               	decfsz	??_LOCK_Run,f
  2089  07BB  2FBA               	goto	u1547
  2090  07BC  0BBA               	decfsz	??_LOCK_Run+1,f
  2091  07BD  2FBA               	goto	u1547
  2092  07BE  0BBB               	decfsz	??_LOCK_Run+2,f
  2093  07BF  2FBA               	goto	u1547
  2094  07C0  0000               	nop
  2095  07C1                     l2247:
  2096                           
  2097                           ;main_khoa_cua.c: 267:         if(cnt>=3)
  2098  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  2099  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  2100  07C3  0821               	movf	_cnt+1,w
  2101  07C4  3A80               	xorlw	128
  2102  07C5  00FF               	movwf	btemp+1
  2103  07C6  3080               	movlw	128
  2104  07C7  027F               	subwf	btemp+1,w
  2105  07C8  1D03               	skipz
  2106  07C9  2FCC               	goto	u1345
  2107  07CA  3003               	movlw	3
  2108  07CB  0220               	subwf	_cnt,w
  2109  07CC                     u1345:
  2110  07CC  1C03               	skipc
  2111  07CD  2FCF               	goto	u1341
  2112  07CE  2FD0               	goto	u1340
  2113  07CF                     u1341:
  2114  07CF  2FD4               	goto	l86
  2115  07D0                     u1340:
  2116  07D0                     l2249:
  2117                           
  2118                           ;main_khoa_cua.c: 268:             cnt=0;
  2119  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2120  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2121  07D2  01A0               	clrf	_cnt
  2122  07D3  01A1               	clrf	_cnt+1
  2123  07D4                     l86:
  2124  07D4  0008               	return
  2125  07D5                     __end_of_LOCK_Run:
  2126                           
  2127                           	psect	text7
  2128  0459                     __ptext7:	
  2129 ;; *************** function _LOCK_Change *****************
  2130 ;; Defined at:
  2131 ;;		line 130 in file "main_khoa_cua.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2145 ;;      Params:         0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0
  2147 ;;      Temps:          0       3       0       0       0
  2148 ;;      Totals:         0       3       0       0       0
  2149 ;;Total ram usage:        3 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    7
  2152 ;; This function calls:
  2153 ;;		_LCD_Clear
  2154 ;;		_LCD_Set_Cursor
  2155 ;;		_LCD_Write_String
  2156 ;;		_LOCK_Enter
  2157 ;;		_LOCK_Read
  2158 ;;		_LOCK_Write
  2159 ;; This function is called by:
  2160 ;;		_LOCK_Run
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _LOCK_Change
  2166  0459                     _LOCK_Change:
  2167  0459                     l2111:	
  2168                           ;incstack = 0
  2169 ;; hardware stack exceeded
  2170                           ; Regs used in _LOCK_Change: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2171                           
  2172                           
  2173                           ;main_khoa_cua.c: 132:     LCD_Clear();
  2174  0459  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  2175  045E                     l2113:
  2176                           
  2177                           ;main_khoa_cua.c: 133:     LCD_Set_Cursor(1,1);
  2178  045E  01F6               	clrf	LCD_Set_Cursor@COL
  2179  045F  0AF6               	incf	LCD_Set_Cursor@COL,f
  2180  0460  3001               	movlw	1
  2181  0461  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  2182  0466                     l2115:
  2183                           
  2184                           ;main_khoa_cua.c: 134:     LCD_Write_String( "CHANGE CODE" );
  2185  0466  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2186  0467  00F6               	movwf	LCD_Write_String@Str
  2187  0468  3080               	movlw	128
  2188  0469  00F7               	movwf	LCD_Write_String@Str+1
  2189  046A  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  2190  046F                     l2117:
  2191                           
  2192                           ;main_khoa_cua.c: 135:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2193  046F  3015               	movlw	21
  2194  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0472  00B8               	movwf	??_LOCK_Change+2
  2197  0473  304B               	movlw	75
  2198  0474  00B7               	movwf	??_LOCK_Change+1
  2199  0475  30BD               	movlw	189
  2200  0476  00B6               	movwf	??_LOCK_Change
  2201  0477                     u1557:
  2202  0477  0BB6               	decfsz	??_LOCK_Change,f
  2203  0478  2C77               	goto	u1557
  2204  0479  0BB7               	decfsz	??_LOCK_Change+1,f
  2205  047A  2C77               	goto	u1557
  2206  047B  0BB8               	decfsz	??_LOCK_Change+2,f
  2207  047C  2C77               	goto	u1557
  2208  047D  2C7E               	nop2
  2209  047E                     l2119:
  2210                           
  2211                           ;main_khoa_cua.c: 137:     LCD_Clear();
  2212  047E  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  2213  0483                     l2121:
  2214                           
  2215                           ;main_khoa_cua.c: 138:     LCD_Set_Cursor(1,1);
  2216  0483  01F6               	clrf	LCD_Set_Cursor@COL
  2217  0484  0AF6               	incf	LCD_Set_Cursor@COL,f
  2218  0485  3001               	movlw	1
  2219  0486  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  2220  048B                     l2123:
  2221                           
  2222                           ;main_khoa_cua.c: 139:     LCD_Write_String( "Enter New Code:" );
  2223  048B  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2224  048C  00F6               	movwf	LCD_Write_String@Str
  2225  048D  3080               	movlw	128
  2226  048E  00F7               	movwf	LCD_Write_String@Str+1
  2227  048F  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  2228  0494                     l2125:
  2229                           
  2230                           ;main_khoa_cua.c: 141:     m = 0;
  2231  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0496  01A6               	clrf	_m
  2234  0497                     l2127:
  2235                           
  2236                           ;main_khoa_cua.c: 143:     LOCK_Enter();
  2237  0497  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  2238  049C                     l2129:
  2239                           
  2240                           ;main_khoa_cua.c: 144:     LOCK_Enter();
  2241  049C  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  2242  04A1                     l2131:
  2243                           
  2244                           ;main_khoa_cua.c: 145:     LOCK_Enter();
  2245  04A1  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  2246  04A6                     l2133:
  2247                           
  2248                           ;main_khoa_cua.c: 146:     LOCK_Enter();
  2249  04A6  120A  118A  23B8  120A  118A  	fcall	_LOCK_Enter
  2250  04AB                     l2135:
  2251                           
  2252                           ;main_khoa_cua.c: 149:     LOCK_Write();
  2253  04AB  120A  118A  22F4  120A  118A  	fcall	_LOCK_Write
  2254  04B0                     l2137:
  2255                           
  2256                           ;main_khoa_cua.c: 150:     LOCK_Read();
  2257  04B0  120A  118A  229A  120A  118A  	fcall	_LOCK_Read
  2258  04B5                     l2139:
  2259                           
  2260                           ;main_khoa_cua.c: 152:     LCD_Clear();
  2261  04B5  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  2262  04BA                     l2141:
  2263                           
  2264                           ;main_khoa_cua.c: 153:     LCD_Set_Cursor(1,1);
  2265  04BA  01F6               	clrf	LCD_Set_Cursor@COL
  2266  04BB  0AF6               	incf	LCD_Set_Cursor@COL,f
  2267  04BC  3001               	movlw	1
  2268  04BD  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  2269  04C2                     l2143:
  2270                           
  2271                           ;main_khoa_cua.c: 154:     LCD_Write_String("New Code Set");
  2272  04C2  303C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2273  04C3  00F6               	movwf	LCD_Write_String@Str
  2274  04C4  3080               	movlw	128
  2275  04C5  00F7               	movwf	LCD_Write_String@Str+1
  2276  04C6  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  2277  04CB                     l2145:
  2278                           
  2279                           ;main_khoa_cua.c: 155:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2280  04CB  3029               	movlw	41
  2281  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2282  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2283  04CE  00B8               	movwf	??_LOCK_Change+2
  2284  04CF  3096               	movlw	150
  2285  04D0  00B7               	movwf	??_LOCK_Change+1
  2286  04D1  307E               	movlw	126
  2287  04D2  00B6               	movwf	??_LOCK_Change
  2288  04D3                     u1567:
  2289  04D3  0BB6               	decfsz	??_LOCK_Change,f
  2290  04D4  2CD3               	goto	u1567
  2291  04D5  0BB7               	decfsz	??_LOCK_Change+1,f
  2292  04D6  2CD3               	goto	u1567
  2293  04D7  0BB8               	decfsz	??_LOCK_Change+2,f
  2294  04D8  2CD3               	goto	u1567
  2295  04D9  0000               	nop
  2296  04DA                     l2147:
  2297                           
  2298                           ;main_khoa_cua.c: 156:     LCD_Clear();
  2299  04DA  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  2300  04DF                     l2149:
  2301                           
  2302                           ;main_khoa_cua.c: 158:     LCD_Set_Cursor(1,1);
  2303  04DF  01F6               	clrf	LCD_Set_Cursor@COL
  2304  04E0  0AF6               	incf	LCD_Set_Cursor@COL,f
  2305  04E1  3001               	movlw	1
  2306  04E2  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  2307  04E7                     l2151:
  2308                           
  2309                           ;main_khoa_cua.c: 159:     LCD_Write_String(code1);
  2310  04E7  3027               	movlw	(low (_code1| 0))& (0+255)
  2311  04E8  00F6               	movwf	LCD_Write_String@Str
  2312  04E9  3000               	movlw	0
  2313  04EA  00F7               	movwf	LCD_Write_String@Str+1
  2314  04EB  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  2315  04F0                     l2153:
  2316                           
  2317                           ;main_khoa_cua.c: 161:     LCD_Set_Cursor(2,1);
  2318  04F0  01F6               	clrf	LCD_Set_Cursor@COL
  2319  04F1  0AF6               	incf	LCD_Set_Cursor@COL,f
  2320  04F2  3002               	movlw	2
  2321  04F3  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  2322  04F8                     l2155:
  2323                           
  2324                           ;main_khoa_cua.c: 162:     LCD_Write_String(user1);
  2325  04F8  3049               	movlw	(low (_user1| 0))& (0+255)
  2326  04F9  00F6               	movwf	LCD_Write_String@Str
  2327  04FA  3000               	movlw	0
  2328  04FB  00F7               	movwf	LCD_Write_String@Str+1
  2329  04FC  120A  118A  2258  120A  118A  	fcall	_LCD_Write_String
  2330  0501                     l2157:
  2331                           
  2332                           ;main_khoa_cua.c: 163:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2333  0501  3015               	movlw	21
  2334  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0504  00B8               	movwf	??_LOCK_Change+2
  2337  0505  304B               	movlw	75
  2338  0506  00B7               	movwf	??_LOCK_Change+1
  2339  0507  30BD               	movlw	189
  2340  0508  00B6               	movwf	??_LOCK_Change
  2341  0509                     u1577:
  2342  0509  0BB6               	decfsz	??_LOCK_Change,f
  2343  050A  2D09               	goto	u1577
  2344  050B  0BB7               	decfsz	??_LOCK_Change+1,f
  2345  050C  2D09               	goto	u1577
  2346  050D  0BB8               	decfsz	??_LOCK_Change+2,f
  2347  050E  2D09               	goto	u1577
  2348  050F  2D10               	nop2
  2349  0510                     l2159:
  2350                           
  2351                           ;main_khoa_cua.c: 164:     LCD_Clear();
  2352  0510  120A  118A  20DB  120A  118A  	fcall	_LCD_Clear
  2353  0515                     l75:
  2354  0515  0008               	return
  2355  0516                     __end_of_LOCK_Change:
  2356                           
  2357                           	psect	text8
  2358  02F4                     __ptext8:	
  2359 ;; *************** function _LOCK_Write *****************
  2360 ;; Defined at:
  2361 ;;		line 116 in file "main_khoa_cua.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0
  2377 ;;      Temps:          2       0       0       0       0
  2378 ;;      Totals:         2       0       0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    1
  2382 ;; This function calls:
  2383 ;;		_EEPROM_Write_Char
  2384 ;; This function is called by:
  2385 ;;		_LOCK_Change
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _LOCK_Write
  2391  02F4                     _LOCK_Write:
  2392  02F4                     l2045:	
  2393                           ;incstack = 0
  2394                           ; Regs used in _LOCK_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2395                           
  2396                           
  2397                           ;main_khoa_cua.c: 118:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2398  02F4  3068               	movlw	104
  2399  02F5  00F3               	movwf	??_LOCK_Write+1
  2400  02F6  30E4               	movlw	228
  2401  02F7  00F2               	movwf	??_LOCK_Write
  2402  02F8                     u1587:
  2403  02F8  0BF2               	decfsz	??_LOCK_Write,f
  2404  02F9  2AF8               	goto	u1587
  2405  02FA  0BF3               	decfsz	??_LOCK_Write+1,f
  2406  02FB  2AF8               	goto	u1587
  2407  02FC  0000               	nop
  2408  02FD                     l2047:
  2409                           
  2410                           ;main_khoa_cua.c: 119:     EEPROM_Write_Char(0x00,code1[0]);
  2411  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2412  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2413  02FF  0827               	movf	_code1,w
  2414  0300  00FF               	movwf	btemp+1
  2415  0301  087F               	movf	btemp+1,w
  2416  0302  00F0               	movwf	EEPROM_Write_Char@Data
  2417  0303  3000               	movlw	0
  2418  0304  120A  118A  2161  120A  118A  	fcall	_EEPROM_Write_Char
  2419  0309                     l2049:
  2420                           
  2421                           ;main_khoa_cua.c: 120:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2422  0309  3068               	movlw	104
  2423  030A  00F3               	movwf	??_LOCK_Write+1
  2424  030B  30E4               	movlw	228
  2425  030C  00F2               	movwf	??_LOCK_Write
  2426  030D                     u1597:
  2427  030D  0BF2               	decfsz	??_LOCK_Write,f
  2428  030E  2B0D               	goto	u1597
  2429  030F  0BF3               	decfsz	??_LOCK_Write+1,f
  2430  0310  2B0D               	goto	u1597
  2431  0311  0000               	nop
  2432                           
  2433                           ;main_khoa_cua.c: 121:     EEPROM_Write_Char(0x01,code1[1]);
  2434  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0314  0828               	movf	_code1+1,w
  2437  0315  00FF               	movwf	btemp+1
  2438  0316  087F               	movf	btemp+1,w
  2439  0317  00F0               	movwf	EEPROM_Write_Char@Data
  2440  0318  3001               	movlw	1
  2441  0319  120A  118A  2161  120A  118A  	fcall	_EEPROM_Write_Char
  2442  031E                     l2051:
  2443                           
  2444                           ;main_khoa_cua.c: 122:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2445  031E  3068               	movlw	104
  2446  031F  00F3               	movwf	??_LOCK_Write+1
  2447  0320  30E4               	movlw	228
  2448  0321  00F2               	movwf	??_LOCK_Write
  2449  0322                     u1607:
  2450  0322  0BF2               	decfsz	??_LOCK_Write,f
  2451  0323  2B22               	goto	u1607
  2452  0324  0BF3               	decfsz	??_LOCK_Write+1,f
  2453  0325  2B22               	goto	u1607
  2454  0326  0000               	nop
  2455  0327                     l2053:
  2456                           
  2457                           ;main_khoa_cua.c: 123:     EEPROM_Write_Char(0x02,code1[2]);
  2458  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0329  0829               	movf	_code1+2,w
  2461  032A  00FF               	movwf	btemp+1
  2462  032B  087F               	movf	btemp+1,w
  2463  032C  00F0               	movwf	EEPROM_Write_Char@Data
  2464  032D  3002               	movlw	2
  2465  032E  120A  118A  2161  120A  118A  	fcall	_EEPROM_Write_Char
  2466                           
  2467                           ;main_khoa_cua.c: 124:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2468  0333  3068               	movlw	104
  2469  0334  00F3               	movwf	??_LOCK_Write+1
  2470  0335  30E4               	movlw	228
  2471  0336  00F2               	movwf	??_LOCK_Write
  2472  0337                     u1617:
  2473  0337  0BF2               	decfsz	??_LOCK_Write,f
  2474  0338  2B37               	goto	u1617
  2475  0339  0BF3               	decfsz	??_LOCK_Write+1,f
  2476  033A  2B37               	goto	u1617
  2477  033B  0000               	nop
  2478  033C                     l2055:
  2479                           
  2480                           ;main_khoa_cua.c: 125:     EEPROM_Write_Char(0x03,code1[3]);
  2481  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2482  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2483  033E  082A               	movf	_code1+3,w
  2484  033F  00FF               	movwf	btemp+1
  2485  0340  087F               	movf	btemp+1,w
  2486  0341  00F0               	movwf	EEPROM_Write_Char@Data
  2487  0342  3003               	movlw	3
  2488  0343  120A  118A  2161  120A  118A  	fcall	_EEPROM_Write_Char
  2489  0348                     l2057:
  2490                           
  2491                           ;main_khoa_cua.c: 126:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2492  0348  3068               	movlw	104
  2493  0349  00F3               	movwf	??_LOCK_Write+1
  2494  034A  30E4               	movlw	228
  2495  034B  00F2               	movwf	??_LOCK_Write
  2496  034C                     u1627:
  2497  034C  0BF2               	decfsz	??_LOCK_Write,f
  2498  034D  2B4C               	goto	u1627
  2499  034E  0BF3               	decfsz	??_LOCK_Write+1,f
  2500  034F  2B4C               	goto	u1627
  2501  0350  0000               	nop
  2502  0351                     l72:
  2503  0351  0008               	return
  2504  0352                     __end_of_LOCK_Write:
  2505                           
  2506                           	psect	text9
  2507  0161                     __ptext9:	
  2508 ;; *************** function _EEPROM_Write_Char *****************
  2509 ;; Defined at:
  2510 ;;		line 4 in file "eeprom_internal.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  Address         1    wreg     unsigned char 
  2513 ;;  Data            1    0[COMMON] unsigned char 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  Address         1    1[COMMON] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         1       0       0       0       0
  2526 ;;      Locals:         1       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0
  2528 ;;      Totals:         2       0       0       0       0
  2529 ;;Total ram usage:        2 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_LOCK_Write
  2535 ;;		_EEPROM_Write_String
  2536 ;;		_EEPROM_Write_N_Bytes
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function _EEPROM_Write_Char
  2542  0161                     _EEPROM_Write_Char:
  2543                           
  2544                           ;incstack = 0
  2545                           ; Regs used in _EEPROM_Write_Char: [wreg]
  2546                           ;EEPROM_Write_Char@Address stored from wreg
  2547  0161  00F1               	movwf	EEPROM_Write_Char@Address
  2548  0162                     l1929:
  2549  0162                     l101:	
  2550                           ;eeprom_internal.c: 4: void EEPROM_Write_Char(uint8_t Address, uint8_t Data);eeprom_inte
      +                          rnal.c: 5: {;eeprom_internal.c: 6:  while(EECON1bits.WR);
  2551                           
  2552  0162  1683               	bsf	3,5	;RP0=1, select bank3
  2553  0163  1703               	bsf	3,6	;RP1=1, select bank3
  2554  0164  188C               	btfsc	12,1	;volsfr
  2555  0165  2967               	goto	u1091
  2556  0166  2968               	goto	u1090
  2557  0167                     u1091:
  2558  0167  2962               	goto	l101
  2559  0168                     u1090:
  2560  0168                     l1931:
  2561                           
  2562                           ;eeprom_internal.c: 7:  EEADR = Address;
  2563  0168  0871               	movf	EEPROM_Write_Char@Address,w
  2564  0169  1283               	bcf	3,5	;RP0=0, select bank2
  2565  016A  1703               	bsf	3,6	;RP1=1, select bank2
  2566  016B  008D               	movwf	13	;volatile
  2567                           
  2568                           ;eeprom_internal.c: 8:  EEDATA = Data;
  2569  016C  0870               	movf	EEPROM_Write_Char@Data,w
  2570  016D  008C               	movwf	12	;volatile
  2571  016E                     l1933:
  2572                           
  2573                           ;eeprom_internal.c: 9:  EECON1bits.EEPGD = 0;
  2574  016E  1683               	bsf	3,5	;RP0=1, select bank3
  2575  016F  1703               	bsf	3,6	;RP1=1, select bank3
  2576  0170  138C               	bcf	12,7	;volsfr
  2577  0171                     l1935:
  2578                           
  2579                           ;eeprom_internal.c: 10:  EECON1bits.WREN = 1;
  2580  0171  150C               	bsf	12,2	;volsfr
  2581  0172                     l1937:
  2582                           
  2583                           ;eeprom_internal.c: 11:  INTCONbits.GIE = 0;
  2584  0172  138B               	bcf	11,7	;volatile
  2585                           
  2586                           ;eeprom_internal.c: 12:  EECON2 = 0x55;
  2587  0173  3055               	movlw	85
  2588  0174  008D               	movwf	13	;volsfr
  2589                           
  2590                           ;eeprom_internal.c: 13:  EECON2 = 0xAA;
  2591  0175  30AA               	movlw	170
  2592  0176  008D               	movwf	13	;volsfr
  2593  0177                     l1939:
  2594                           
  2595                           ;eeprom_internal.c: 14:  EECON1bits.WR = 1;
  2596  0177  148C               	bsf	12,1	;volsfr
  2597  0178                     l1941:
  2598                           
  2599                           ;eeprom_internal.c: 15:  INTCONbits.GIE = 1;
  2600  0178  178B               	bsf	11,7	;volatile
  2601  0179                     l1943:
  2602                           
  2603                           ;eeprom_internal.c: 16:  EECON1bits.WREN = 0;
  2604  0179  110C               	bcf	12,2	;volsfr
  2605  017A                     l1945:
  2606                           
  2607                           ;eeprom_internal.c: 17:  EECON1bits.WR = 0;
  2608  017A  108C               	bcf	12,1	;volsfr
  2609  017B                     l104:
  2610  017B  0008               	return
  2611  017C                     __end_of_EEPROM_Write_Char:
  2612                           
  2613                           	psect	text10
  2614  029A                     __ptext10:	
  2615 ;; *************** function _LOCK_Read *****************
  2616 ;; Defined at:
  2617 ;;		line 103 in file "main_khoa_cua.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, btemp+1, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2631 ;;      Params:         0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0
  2633 ;;      Temps:          2       0       0       0       0
  2634 ;;      Totals:         2       0       0       0       0
  2635 ;;Total ram usage:        2 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    1
  2638 ;; This function calls:
  2639 ;;		_EEPROM_Read_Char
  2640 ;; This function is called by:
  2641 ;;		_LOCK_Change
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _LOCK_Read
  2647  029A                     _LOCK_Read:
  2648  029A                     l2031:	
  2649                           ;incstack = 0
  2650                           ; Regs used in _LOCK_Read: [wreg+btemp+1+pclath+cstack]
  2651                           
  2652                           
  2653                           ;main_khoa_cua.c: 105:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2654  029A  3068               	movlw	104
  2655  029B  00F3               	movwf	??_LOCK_Read+1
  2656  029C  30E4               	movlw	228
  2657  029D  00F2               	movwf	??_LOCK_Read
  2658  029E                     u1637:
  2659  029E  0BF2               	decfsz	??_LOCK_Read,f
  2660  029F  2A9E               	goto	u1637
  2661  02A0  0BF3               	decfsz	??_LOCK_Read+1,f
  2662  02A1  2A9E               	goto	u1637
  2663  02A2  0000               	nop
  2664  02A3                     l2033:
  2665                           
  2666                           ;main_khoa_cua.c: 106:     user1[0] = EEPROM_Read_Char(0x00);
  2667  02A3  3000               	movlw	0
  2668  02A4  120A  118A  20EC  120A  118A  	fcall	_EEPROM_Read_Char
  2669  02A9  00FF               	movwf	btemp+1
  2670  02AA  087F               	movf	btemp+1,w
  2671  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2672  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2673  02AD  00C9               	movwf	_user1
  2674  02AE                     l2035:
  2675                           
  2676                           ;main_khoa_cua.c: 107:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2677  02AE  3068               	movlw	104
  2678  02AF  00F3               	movwf	??_LOCK_Read+1
  2679  02B0  30E4               	movlw	228
  2680  02B1  00F2               	movwf	??_LOCK_Read
  2681  02B2                     u1647:
  2682  02B2  0BF2               	decfsz	??_LOCK_Read,f
  2683  02B3  2AB2               	goto	u1647
  2684  02B4  0BF3               	decfsz	??_LOCK_Read+1,f
  2685  02B5  2AB2               	goto	u1647
  2686  02B6  0000               	nop
  2687                           
  2688                           ;main_khoa_cua.c: 108:     user1[1] = EEPROM_Read_Char(0x01);
  2689  02B7  3001               	movlw	1
  2690  02B8  120A  118A  20EC  120A  118A  	fcall	_EEPROM_Read_Char
  2691  02BD  00FF               	movwf	btemp+1
  2692  02BE  087F               	movf	btemp+1,w
  2693  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2694  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2695  02C1  00CA               	movwf	_user1+1
  2696  02C2                     l2037:
  2697                           
  2698                           ;main_khoa_cua.c: 109:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2699  02C2  3068               	movlw	104
  2700  02C3  00F3               	movwf	??_LOCK_Read+1
  2701  02C4  30E4               	movlw	228
  2702  02C5  00F2               	movwf	??_LOCK_Read
  2703  02C6                     u1657:
  2704  02C6  0BF2               	decfsz	??_LOCK_Read,f
  2705  02C7  2AC6               	goto	u1657
  2706  02C8  0BF3               	decfsz	??_LOCK_Read+1,f
  2707  02C9  2AC6               	goto	u1657
  2708  02CA  0000               	nop
  2709  02CB                     l2039:
  2710                           
  2711                           ;main_khoa_cua.c: 110:     user1[2] = EEPROM_Read_Char(0x02);
  2712  02CB  3002               	movlw	2
  2713  02CC  120A  118A  20EC  120A  118A  	fcall	_EEPROM_Read_Char
  2714  02D1  00FF               	movwf	btemp+1
  2715  02D2  087F               	movf	btemp+1,w
  2716  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2717  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2718  02D5  00CB               	movwf	_user1+2
  2719                           
  2720                           ;main_khoa_cua.c: 111:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2721  02D6  3068               	movlw	104
  2722  02D7  00F3               	movwf	??_LOCK_Read+1
  2723  02D8  30E4               	movlw	228
  2724  02D9  00F2               	movwf	??_LOCK_Read
  2725  02DA                     u1667:
  2726  02DA  0BF2               	decfsz	??_LOCK_Read,f
  2727  02DB  2ADA               	goto	u1667
  2728  02DC  0BF3               	decfsz	??_LOCK_Read+1,f
  2729  02DD  2ADA               	goto	u1667
  2730  02DE  0000               	nop
  2731  02DF                     l2041:
  2732                           
  2733                           ;main_khoa_cua.c: 112:     user1[3] = EEPROM_Read_Char(0x03);
  2734  02DF  3003               	movlw	3
  2735  02E0  120A  118A  20EC  120A  118A  	fcall	_EEPROM_Read_Char
  2736  02E5  00FF               	movwf	btemp+1
  2737  02E6  087F               	movf	btemp+1,w
  2738  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2739  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2740  02E9  00CC               	movwf	_user1+3
  2741  02EA                     l2043:
  2742                           
  2743                           ;main_khoa_cua.c: 113:     _delay((unsigned long)((20)*(16000000/4000.0)));
  2744  02EA  3068               	movlw	104
  2745  02EB  00F3               	movwf	??_LOCK_Read+1
  2746  02EC  30E4               	movlw	228
  2747  02ED  00F2               	movwf	??_LOCK_Read
  2748  02EE                     u1677:
  2749  02EE  0BF2               	decfsz	??_LOCK_Read,f
  2750  02EF  2AEE               	goto	u1677
  2751  02F0  0BF3               	decfsz	??_LOCK_Read+1,f
  2752  02F1  2AEE               	goto	u1677
  2753  02F2  0000               	nop
  2754  02F3                     l69:
  2755  02F3  0008               	return
  2756  02F4                     __end_of_LOCK_Read:
  2757                           
  2758                           	psect	text11
  2759  00EC                     __ptext11:	
  2760 ;; *************** function _EEPROM_Read_Char *****************
  2761 ;; Defined at:
  2762 ;;		line 95 in file "eeprom_internal.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  Address         1    wreg     unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  Address         1    0[COMMON] unsigned char 
  2767 ;;  Data            1    1[COMMON] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      unsigned char 
  2770 ;; Registers used:
  2771 ;;		wreg, btemp+1
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       0       0       0       0
  2778 ;;      Locals:         2       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0
  2780 ;;      Totals:         2       0       0       0       0
  2781 ;;Total ram usage:        2 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_LOCK_Read
  2787 ;;		_EEPROM_Read_String
  2788 ;;		_EEPROM_Read_N_Bytes
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           
  2793                           ;psect for function _EEPROM_Read_Char
  2794  00EC                     _EEPROM_Read_Char:
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in _EEPROM_Read_Char: [wreg+btemp+1]
  2798                           ;EEPROM_Read_Char@Address stored from wreg
  2799  00EC  00F0               	movwf	EEPROM_Read_Char@Address
  2800  00ED                     l1917:
  2801                           
  2802                           ;eeprom_internal.c: 95: uint8_t EEPROM_Read_Char(uint8_t Address);eeprom_internal.c: 96:
      +                           {;eeprom_internal.c: 97:  uint8_t Data;;eeprom_internal.c: 98:  EEADR = Address;
  2803  00ED  0870               	movf	EEPROM_Read_Char@Address,w
  2804  00EE  1283               	bcf	3,5	;RP0=0, select bank2
  2805  00EF  1703               	bsf	3,6	;RP1=1, select bank2
  2806  00F0  008D               	movwf	13	;volatile
  2807  00F1                     l1919:
  2808                           
  2809                           ;eeprom_internal.c: 99:  EECON1bits.EEPGD = 0;
  2810  00F1  1683               	bsf	3,5	;RP0=1, select bank3
  2811  00F2  1703               	bsf	3,6	;RP1=1, select bank3
  2812  00F3  138C               	bcf	12,7	;volsfr
  2813  00F4                     l1921:
  2814                           
  2815                           ;eeprom_internal.c: 100:  EECON1bits.RD = 1;
  2816  00F4  140C               	bsf	12,0	;volsfr
  2817  00F5                     l1923:
  2818                           
  2819                           ;eeprom_internal.c: 101:  Data = EEDATA;
  2820  00F5  1283               	bcf	3,5	;RP0=0, select bank2
  2821  00F6  1703               	bsf	3,6	;RP1=1, select bank2
  2822  00F7  080C               	movf	12,w	;volatile
  2823  00F8  00FF               	movwf	btemp+1
  2824  00F9  087F               	movf	btemp+1,w
  2825  00FA  00F1               	movwf	EEPROM_Read_Char@Data
  2826  00FB                     l1925:
  2827                           
  2828                           ;eeprom_internal.c: 102:  return Data;
  2829  00FB  0871               	movf	EEPROM_Read_Char@Data,w
  2830  00FC                     l119:
  2831  00FC  0008               	return
  2832  00FD                     __end_of_EEPROM_Read_Char:
  2833                           
  2834                           	psect	text12
  2835  03B8                     __ptext12:	
  2836 ;; *************** function _LOCK_Enter *****************
  2837 ;; Defined at:
  2838 ;;		line 63 in file "main_khoa_cua.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  kp              1   12[COMMON] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         0       0       0       0       0
  2853 ;;      Locals:         1       0       0       0       0
  2854 ;;      Temps:          2       0       0       0       0
  2855 ;;      Totals:         3       0       0       0       0
  2856 ;;Total ram usage:        3 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    6
  2859 ;; This function calls:
  2860 ;;		_Keypad_Switch_Press_Scan
  2861 ;;		_LCD_Set_Cursor
  2862 ;;		_LCD_Write_Char
  2863 ;; This function is called by:
  2864 ;;		_LOCK_Change
  2865 ;;		_LOCK_Run
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           
  2870                           ;psect for function _LOCK_Enter
  2871  03B8                     _LOCK_Enter:
  2872  03B8                     l1985:	
  2873                           ;incstack = 0
  2874                           ; Regs used in _LOCK_Enter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2875                           
  2876  03B8                     l1987:
  2877                           
  2878                           ;main_khoa_cua.c: 71:        kp = Keypad_Switch_Press_Scan();
  2879  03B8  120A  118A  20FD  120A  118A  	fcall	_Keypad_Switch_Press_Scan
  2880  03BD  00FF               	movwf	btemp+1
  2881  03BE  087F               	movf	btemp+1,w
  2882  03BF  00FC               	movwf	LOCK_Enter@kp
  2883  03C0                     l1989:
  2884                           
  2885                           ;main_khoa_cua.c: 72:     }while (kp == 'n');
  2886  03C0  306E               	movlw	110
  2887  03C1  067C               	xorwf	LOCK_Enter@kp,w
  2888  03C2  1903               	btfsc	3,2
  2889  03C3  2BC5               	goto	u1201
  2890  03C4  2BC6               	goto	u1200
  2891  03C5                     u1201:
  2892  03C5  2BB8               	goto	l1987
  2893  03C6                     u1200:
  2894  03C6  2C03               	goto	l2017
  2895  03C7                     l1991:
  2896  03C7  3031               	movlw	49
  2897  03C8  00FF               	movwf	btemp+1
  2898  03C9  087F               	movf	btemp+1,w
  2899  03CA  00FC               	movwf	LOCK_Enter@kp
  2900  03CB  2C31               	goto	l2019
  2901  03CC                     l1993:
  2902  03CC  3032               	movlw	50
  2903  03CD  00FF               	movwf	btemp+1
  2904  03CE  087F               	movf	btemp+1,w
  2905  03CF  00FC               	movwf	LOCK_Enter@kp
  2906  03D0  2C31               	goto	l2019
  2907  03D1                     l1995:
  2908  03D1  3033               	movlw	51
  2909  03D2  00FF               	movwf	btemp+1
  2910  03D3  087F               	movf	btemp+1,w
  2911  03D4  00FC               	movwf	LOCK_Enter@kp
  2912  03D5  2C31               	goto	l2019
  2913  03D6                     l1997:
  2914  03D6  3034               	movlw	52
  2915  03D7  00FF               	movwf	btemp+1
  2916  03D8  087F               	movf	btemp+1,w
  2917  03D9  00FC               	movwf	LOCK_Enter@kp
  2918  03DA  2C31               	goto	l2019
  2919  03DB                     l1999:
  2920  03DB  3035               	movlw	53
  2921  03DC  00FF               	movwf	btemp+1
  2922  03DD  087F               	movf	btemp+1,w
  2923  03DE  00FC               	movwf	LOCK_Enter@kp
  2924  03DF  2C31               	goto	l2019
  2925  03E0                     l2001:
  2926  03E0  3036               	movlw	54
  2927  03E1  00FF               	movwf	btemp+1
  2928  03E2  087F               	movf	btemp+1,w
  2929  03E3  00FC               	movwf	LOCK_Enter@kp
  2930  03E4  2C31               	goto	l2019
  2931  03E5                     l2003:
  2932  03E5  3037               	movlw	55
  2933  03E6  00FF               	movwf	btemp+1
  2934  03E7  087F               	movf	btemp+1,w
  2935  03E8  00FC               	movwf	LOCK_Enter@kp
  2936  03E9  2C31               	goto	l2019
  2937  03EA                     l2005:
  2938  03EA  3038               	movlw	56
  2939  03EB  00FF               	movwf	btemp+1
  2940  03EC  087F               	movf	btemp+1,w
  2941  03ED  00FC               	movwf	LOCK_Enter@kp
  2942  03EE  2C31               	goto	l2019
  2943  03EF                     l2007:
  2944  03EF  3039               	movlw	57
  2945  03F0  00FF               	movwf	btemp+1
  2946  03F1  087F               	movf	btemp+1,w
  2947  03F2  00FC               	movwf	LOCK_Enter@kp
  2948  03F3  2C31               	goto	l2019
  2949  03F4                     l2009:
  2950  03F4  302B               	movlw	43
  2951  03F5  00FF               	movwf	btemp+1
  2952  03F6  087F               	movf	btemp+1,w
  2953  03F7  00FC               	movwf	LOCK_Enter@kp
  2954  03F8  2C31               	goto	l2019
  2955  03F9                     l2011:
  2956  03F9  3030               	movlw	48
  2957  03FA  00FF               	movwf	btemp+1
  2958  03FB  087F               	movf	btemp+1,w
  2959  03FC  00FC               	movwf	LOCK_Enter@kp
  2960  03FD  2C31               	goto	l2019
  2961  03FE                     l2013:
  2962  03FE  303D               	movlw	61
  2963  03FF  00FF               	movwf	btemp+1
  2964  0400  087F               	movf	btemp+1,w
  2965  0401  00FC               	movwf	LOCK_Enter@kp
  2966  0402  2C31               	goto	l2019
  2967  0403                     l2017:
  2968  0403  087C               	movf	LOCK_Enter@kp,w
  2969  0404  00FA               	movwf	??_LOCK_Enter
  2970  0405  01FB               	clrf	??_LOCK_Enter+1
  2971                           
  2972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2973                           ; Switch size 1, requested type "simple"
  2974                           ; Number of cases is 1, Range of values is 0 to 0
  2975                           ; switch strategies available:
  2976                           ; Name         Instructions Cycles
  2977                           ; simple_byte            4     3 (average)
  2978                           ; direct_byte           11     8 (fixed)
  2979                           ; jumptable            260     6 (fixed)
  2980                           ;	Chosen strategy is simple_byte
  2981  0406  087B               	movf	??_LOCK_Enter+1,w
  2982  0407  3A00               	xorlw	0	; case 0
  2983  0408  1903               	skipnz
  2984  0409  2C0B               	goto	l2399
  2985  040A  2C31               	goto	l2019
  2986  040B                     l2399:
  2987                           
  2988                           ; Switch size 1, requested type "simple"
  2989                           ; Number of cases is 12, Range of values is 48 to 67
  2990                           ; switch strategies available:
  2991                           ; Name         Instructions Cycles
  2992                           ; simple_byte           37    19 (average)
  2993                           ; direct_byte           71    11 (fixed)
  2994                           ; jumptable            263     9 (fixed)
  2995                           ;	Chosen strategy is simple_byte
  2996  040B  087A               	movf	??_LOCK_Enter,w
  2997  040C  3A30               	xorlw	48	; case 48
  2998  040D  1903               	skipnz
  2999  040E  2BF9               	goto	l2011
  3000  040F  3A01               	xorlw	1	; case 49
  3001  0410  1903               	skipnz
  3002  0411  2BC7               	goto	l1991
  3003  0412  3A03               	xorlw	3	; case 50
  3004  0413  1903               	skipnz
  3005  0414  2BCC               	goto	l1993
  3006  0415  3A01               	xorlw	1	; case 51
  3007  0416  1903               	skipnz
  3008  0417  2BD1               	goto	l1995
  3009  0418  3A07               	xorlw	7	; case 52
  3010  0419  1903               	skipnz
  3011  041A  2BD6               	goto	l1997
  3012  041B  3A01               	xorlw	1	; case 53
  3013  041C  1903               	skipnz
  3014  041D  2BDB               	goto	l1999
  3015  041E  3A03               	xorlw	3	; case 54
  3016  041F  1903               	skipnz
  3017  0420  2BE0               	goto	l2001
  3018  0421  3A01               	xorlw	1	; case 55
  3019  0422  1903               	skipnz
  3020  0423  2BE5               	goto	l2003
  3021  0424  3A0F               	xorlw	15	; case 56
  3022  0425  1903               	skipnz
  3023  0426  2BEA               	goto	l2005
  3024  0427  3A01               	xorlw	1	; case 57
  3025  0428  1903               	skipnz
  3026  0429  2BEF               	goto	l2007
  3027  042A  3A04               	xorlw	4	; case 61
  3028  042B  1903               	skipnz
  3029  042C  2BFE               	goto	l2013
  3030  042D  3A7E               	xorlw	126	; case 67
  3031  042E  1903               	skipnz
  3032  042F  2BF4               	goto	l2009
  3033  0430  2C31               	goto	l2019
  3034  0431                     l2019:
  3035                           
  3036                           ;main_khoa_cua.c: 95:     code1[m] = kp;
  3037  0431  087C               	movf	LOCK_Enter@kp,w
  3038  0432  00FF               	movwf	btemp+1
  3039  0433  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0434  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0435  0826               	movf	_m,w
  3042  0436  3E27               	addlw	(low (_code1| 0))& (0+255)
  3043  0437  0084               	movwf	4
  3044  0438  087F               	movf	btemp+1,w
  3045  0439  1383               	bcf	3,7	;select IRP bank0
  3046  043A  0080               	movwf	0
  3047  043B                     l2021:
  3048                           
  3049                           ;main_khoa_cua.c: 96:     LCD_Set_Cursor(2, m+1);
  3050  043B  0826               	movf	_m,w
  3051  043C  3E01               	addlw	1
  3052  043D  00FF               	movwf	btemp+1
  3053  043E  087F               	movf	btemp+1,w
  3054  043F  00F6               	movwf	LCD_Set_Cursor@COL
  3055  0440  3002               	movlw	2
  3056  0441  120A  118A  21EA  120A  118A  	fcall	_LCD_Set_Cursor
  3057  0446                     l2023:
  3058                           
  3059                           ;main_khoa_cua.c: 97:     LCD_Write_Char(code1[m]);
  3060  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0448  0826               	movf	_m,w
  3063  0449  3E27               	addlw	(low (_code1| 0))& (0+255)
  3064  044A  0084               	movwf	4
  3065  044B  1383               	bcf	3,7	;select IRP bank0
  3066  044C  0800               	movf	0,w
  3067  044D  120A  118A  2198  120A  118A  	fcall	_LCD_Write_Char
  3068  0452                     l2025:
  3069                           
  3070                           ;main_khoa_cua.c: 98:     m++;
  3071  0452  3001               	movlw	1
  3072  0453  00FF               	movwf	btemp+1
  3073  0454  087F               	movf	btemp+1,w
  3074  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0457  07A6               	addwf	_m,f
  3077  0458                     l66:
  3078  0458  0008               	return
  3079  0459                     __end_of_LOCK_Enter:
  3080                           
  3081                           	psect	text13
  3082  01EA                     __ptext13:	
  3083 ;; *************** function _LCD_Set_Cursor *****************
  3084 ;; Defined at:
  3085 ;;		line 77 in file "i2c_lcd.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  ROW             1    wreg     unsigned char 
  3088 ;;  COL             1    6[COMMON] unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  ROW             1    9[COMMON] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         1       0       0       0       0
  3101 ;;      Locals:         1       0       0       0       0
  3102 ;;      Temps:          2       0       0       0       0
  3103 ;;      Totals:         4       0       0       0       0
  3104 ;;Total ram usage:        4 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    5
  3107 ;; This function calls:
  3108 ;;		_LCD_CMD
  3109 ;; This function is called by:
  3110 ;;		_main
  3111 ;;		_LOCK_Enter
  3112 ;;		_LOCK_Change
  3113 ;;		_LOCK_Run
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _LCD_Set_Cursor
  3119  01EA                     _LCD_Set_Cursor:
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3123                           ;LCD_Set_Cursor@ROW stored from wreg
  3124  01EA  00F9               	movwf	LCD_Set_Cursor@ROW
  3125  01EB                     l1887:
  3126                           
  3127                           ;i2c_lcd.c: 77: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);i2c_lcd.c: 78:
      +                           {;i2c_lcd.c: 79:   switch(ROW)
  3128  01EB  2A0C               	goto	l1897
  3129  01EC                     l1889:
  3130                           
  3131                           ;i2c_lcd.c: 82:       LCD_CMD(0xC0 + COL-1);
  3132  01EC  0876               	movf	LCD_Set_Cursor@COL,w
  3133  01ED  3EBF               	addlw	191
  3134  01EE  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  3135                           
  3136                           ;i2c_lcd.c: 83:       break;
  3137  01F3  2A1F               	goto	l174
  3138  01F4                     l1891:
  3139                           
  3140                           ;i2c_lcd.c: 85:       LCD_CMD(0x94 + COL-1);
  3141  01F4  0876               	movf	LCD_Set_Cursor@COL,w
  3142  01F5  3E93               	addlw	147
  3143  01F6  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  3144                           
  3145                           ;i2c_lcd.c: 86:       break;
  3146  01FB  2A1F               	goto	l174
  3147  01FC                     l1893:
  3148                           
  3149                           ;i2c_lcd.c: 88:       LCD_CMD(0xD4 + COL-1);
  3150  01FC  0876               	movf	LCD_Set_Cursor@COL,w
  3151  01FD  3ED3               	addlw	211
  3152  01FE  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  3153                           
  3154                           ;i2c_lcd.c: 89:       break;
  3155  0203  2A1F               	goto	l174
  3156  0204                     l1895:
  3157                           
  3158                           ;i2c_lcd.c: 92:       LCD_CMD(0x80 + COL-1);
  3159  0204  0876               	movf	LCD_Set_Cursor@COL,w
  3160  0205  3E7F               	addlw	127
  3161  0206  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  3162                           
  3163                           ;i2c_lcd.c: 93:   }
  3164  020B  2A1F               	goto	l174
  3165  020C                     l1897:
  3166  020C  0879               	movf	LCD_Set_Cursor@ROW,w
  3167  020D  00F7               	movwf	??_LCD_Set_Cursor
  3168  020E  01F8               	clrf	??_LCD_Set_Cursor+1
  3169                           
  3170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3171                           ; Switch size 1, requested type "simple"
  3172                           ; Number of cases is 1, Range of values is 0 to 0
  3173                           ; switch strategies available:
  3174                           ; Name         Instructions Cycles
  3175                           ; simple_byte            4     3 (average)
  3176                           ; direct_byte           11     8 (fixed)
  3177                           ; jumptable            260     6 (fixed)
  3178                           ;	Chosen strategy is simple_byte
  3179  020F  0878               	movf	??_LCD_Set_Cursor+1,w
  3180  0210  3A00               	xorlw	0	; case 0
  3181  0211  1903               	skipnz
  3182  0212  2A14               	goto	l2401
  3183  0213  2A04               	goto	l1895
  3184  0214                     l2401:
  3185                           
  3186                           ; Switch size 1, requested type "simple"
  3187                           ; Number of cases is 3, Range of values is 2 to 4
  3188                           ; switch strategies available:
  3189                           ; Name         Instructions Cycles
  3190                           ; simple_byte           10     6 (average)
  3191                           ; direct_byte           20    11 (fixed)
  3192                           ; jumptable            263     9 (fixed)
  3193                           ;	Chosen strategy is simple_byte
  3194  0214  0877               	movf	??_LCD_Set_Cursor,w
  3195  0215  3A02               	xorlw	2	; case 2
  3196  0216  1903               	skipnz
  3197  0217  29EC               	goto	l1889
  3198  0218  3A01               	xorlw	1	; case 3
  3199  0219  1903               	skipnz
  3200  021A  29F4               	goto	l1891
  3201  021B  3A07               	xorlw	7	; case 4
  3202  021C  1903               	skipnz
  3203  021D  29FC               	goto	l1893
  3204  021E  2A04               	goto	l1895
  3205  021F                     l174:
  3206  021F  0008               	return
  3207  0220                     __end_of_LCD_Set_Cursor:
  3208                           
  3209                           	psect	text14
  3210  00FD                     __ptext14:	
  3211 ;; *************** function _Keypad_Switch_Press_Scan *****************
  3212 ;; Defined at:
  3213 ;;		line 50 in file "keypad_4x4.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  key             1    2[COMMON] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      unsigned char 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         0       0       0       0       0
  3228 ;;      Locals:         1       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0
  3230 ;;      Totals:         1       0       0       0       0
  3231 ;;Total ram usage:        1 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    1
  3234 ;; This function calls:
  3235 ;;		_Keypad_Scanner
  3236 ;; This function is called by:
  3237 ;;		_LOCK_Enter
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _Keypad_Switch_Press_Scan
  3243  00FD                     _Keypad_Switch_Press_Scan:
  3244  00FD                     l1903:	
  3245                           ;incstack = 0
  3246                           ; Regs used in _Keypad_Switch_Press_Scan: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3247                           
  3248                           
  3249                           ;keypad_4x4.c: 52:     char key = 'n';
  3250  00FD  306E               	movlw	110
  3251  00FE  00FF               	movwf	btemp+1
  3252  00FF  087F               	movf	btemp+1,w
  3253  0100  00F2               	movwf	Keypad_Switch_Press_Scan@key
  3254                           
  3255                           ;keypad_4x4.c: 53:     while(key == 'n')
  3256  0101  290A               	goto	l1907
  3257  0102                     l1905:
  3258                           
  3259                           ;keypad_4x4.c: 54:         key = Keypad_Scanner();
  3260  0102  120A  118A  2516  120A  118A  	fcall	_Keypad_Scanner
  3261  0107  00FF               	movwf	btemp+1
  3262  0108  087F               	movf	btemp+1,w
  3263  0109  00F2               	movwf	Keypad_Switch_Press_Scan@key
  3264  010A                     l1907:
  3265                           
  3266                           ;keypad_4x4.c: 53:     while(key == 'n')
  3267  010A  306E               	movlw	110
  3268  010B  0672               	xorwf	Keypad_Switch_Press_Scan@key,w
  3269  010C  1903               	btfsc	3,2
  3270  010D  290F               	goto	u1071
  3271  010E  2910               	goto	u1070
  3272  010F                     u1071:
  3273  010F  2902               	goto	l1905
  3274  0110                     u1070:
  3275  0110                     l1909:
  3276                           
  3277                           ;keypad_4x4.c: 55:     return key;
  3278  0110  0872               	movf	Keypad_Switch_Press_Scan@key,w
  3279  0111                     l355:
  3280  0111  0008               	return
  3281  0112                     __end_of_Keypad_Switch_Press_Scan:
  3282                           
  3283                           	psect	text15
  3284  0516                     __ptext15:	
  3285 ;; *************** function _Keypad_Scanner *****************
  3286 ;; Defined at:
  3287 ;;		line 16 in file "keypad_4x4.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  k               2    0        int 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      unsigned char 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         2       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         2       0       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_Keypad_Switch_Press_Scan
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _Keypad_Scanner
  3316  0516                     _Keypad_Scanner:
  3317  0516                     l1709:	
  3318                           ;incstack = 0
  3319                           ; Regs used in _Keypad_Scanner: [wreg+status,2]
  3320                           
  3321  0516                     l1711:
  3322                           
  3323                           ;keypad_4x4.c: 19:     RB0 = 0; RB1 = 1; RB2 = 1; RB3 = 1;
  3324  0516  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0517  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0518  1006               	bcf	6,0	;volatile
  3327  0519                     l1713:
  3328  0519  1486               	bsf	6,1	;volatile
  3329  051A                     l1715:
  3330  051A  1506               	bsf	6,2	;volatile
  3331  051B                     l1717:
  3332  051B  1586               	bsf	6,3	;volatile
  3333  051C                     l1719:
  3334                           
  3335                           ;keypad_4x4.c: 20:     if (RB4 == 0) { while (RB4==0) k=1; return '7'; }
  3336  051C  1A06               	btfsc	6,4	;volatile
  3337  051D  2D1F               	goto	u751
  3338  051E  2D20               	goto	u750
  3339  051F                     u751:
  3340  051F  2D27               	goto	l285
  3341  0520                     u750:
  3342  0520  2D21               	goto	l1725
  3343  0521                     l1723:
  3344  0521                     l1725:
  3345  0521  1E06               	btfss	6,4	;volatile
  3346  0522  2D24               	goto	u761
  3347  0523  2D25               	goto	u760
  3348  0524                     u761:
  3349  0524  2D21               	goto	l1723
  3350  0525                     u760:
  3351  0525                     l1727:
  3352  0525  3037               	movlw	55
  3353  0526  2DD9               	goto	l289
  3354  0527                     l285:
  3355                           
  3356                           ;keypad_4x4.c: 21:     if (RB5 == 0) { while (RB5==0) k=1; return '8'; }
  3357  0527  1A86               	btfsc	6,5	;volatile
  3358  0528  2D2A               	goto	u771
  3359  0529  2D2B               	goto	u770
  3360  052A                     u771:
  3361  052A  2D32               	goto	l290
  3362  052B                     u770:
  3363  052B  2D2C               	goto	l1735
  3364  052C                     l1733:
  3365  052C                     l1735:
  3366  052C  1E86               	btfss	6,5	;volatile
  3367  052D  2D2F               	goto	u781
  3368  052E  2D30               	goto	u780
  3369  052F                     u781:
  3370  052F  2D2C               	goto	l1733
  3371  0530                     u780:
  3372  0530                     l1737:
  3373  0530  3038               	movlw	56
  3374  0531  2DD9               	goto	l289
  3375  0532                     l290:
  3376                           
  3377                           ;keypad_4x4.c: 22:     if (RB6 == 0) { while (RB6==0) k=1; return '9'; }
  3378  0532  1B06               	btfsc	6,6	;volatile
  3379  0533  2D35               	goto	u791
  3380  0534  2D36               	goto	u790
  3381  0535                     u791:
  3382  0535  2D3D               	goto	l294
  3383  0536                     u790:
  3384  0536  2D37               	goto	l1745
  3385  0537                     l1743:
  3386  0537                     l1745:
  3387  0537  1F06               	btfss	6,6	;volatile
  3388  0538  2D3A               	goto	u801
  3389  0539  2D3B               	goto	u800
  3390  053A                     u801:
  3391  053A  2D37               	goto	l1743
  3392  053B                     u800:
  3393  053B                     l1747:
  3394  053B  3039               	movlw	57
  3395  053C  2DD9               	goto	l289
  3396  053D                     l294:
  3397                           
  3398                           ;keypad_4x4.c: 23:     if (RB7 == 0) { while (RB7==0) k=1; return '/'; }
  3399  053D  1B86               	btfsc	6,7	;volatile
  3400  053E  2D40               	goto	u811
  3401  053F  2D41               	goto	u810
  3402  0540                     u811:
  3403  0540  2D48               	goto	l298
  3404  0541                     u810:
  3405  0541  2D42               	goto	l1755
  3406  0542                     l1753:
  3407  0542                     l1755:
  3408  0542  1F86               	btfss	6,7	;volatile
  3409  0543  2D45               	goto	u821
  3410  0544  2D46               	goto	u820
  3411  0545                     u821:
  3412  0545  2D42               	goto	l1753
  3413  0546                     u820:
  3414  0546                     l1757:
  3415  0546  302F               	movlw	47
  3416  0547  2DD9               	goto	l289
  3417  0548                     l298:
  3418                           
  3419                           ;keypad_4x4.c: 25:     RB0 = 1; RB1 = 0; RB2 = 1; RB3 = 1;
  3420  0548  1406               	bsf	6,0	;volatile
  3421  0549  1086               	bcf	6,1	;volatile
  3422  054A  1506               	bsf	6,2	;volatile
  3423  054B  1586               	bsf	6,3	;volatile
  3424                           
  3425                           ;keypad_4x4.c: 26:     if (RB4 == 0) { while (RB4==0) k=1; return '4'; }
  3426  054C  1A06               	btfsc	6,4	;volatile
  3427  054D  2D4F               	goto	u831
  3428  054E  2D50               	goto	u830
  3429  054F                     u831:
  3430  054F  2D57               	goto	l302
  3431  0550                     u830:
  3432  0550  2D51               	goto	l1765
  3433  0551                     l1763:
  3434  0551                     l1765:
  3435  0551  1E06               	btfss	6,4	;volatile
  3436  0552  2D54               	goto	u841
  3437  0553  2D55               	goto	u840
  3438  0554                     u841:
  3439  0554  2D51               	goto	l1763
  3440  0555                     u840:
  3441  0555                     l1767:
  3442  0555  3034               	movlw	52
  3443  0556  2DD9               	goto	l289
  3444  0557                     l302:
  3445                           
  3446                           ;keypad_4x4.c: 27:     if (RB5 == 0) { while (RB5==0) k=1; return '5'; }
  3447  0557  1A86               	btfsc	6,5	;volatile
  3448  0558  2D5A               	goto	u851
  3449  0559  2D5B               	goto	u850
  3450  055A                     u851:
  3451  055A  2D62               	goto	l306
  3452  055B                     u850:
  3453  055B  2D5C               	goto	l1775
  3454  055C                     l1773:
  3455  055C                     l1775:
  3456  055C  1E86               	btfss	6,5	;volatile
  3457  055D  2D5F               	goto	u861
  3458  055E  2D60               	goto	u860
  3459  055F                     u861:
  3460  055F  2D5C               	goto	l1773
  3461  0560                     u860:
  3462  0560                     l1777:
  3463  0560  3035               	movlw	53
  3464  0561  2DD9               	goto	l289
  3465  0562                     l306:
  3466                           
  3467                           ;keypad_4x4.c: 28:     if (RB6 == 0) { while (RB6==0) k=1; return '6'; }
  3468  0562  1B06               	btfsc	6,6	;volatile
  3469  0563  2D65               	goto	u871
  3470  0564  2D66               	goto	u870
  3471  0565                     u871:
  3472  0565  2D6D               	goto	l310
  3473  0566                     u870:
  3474  0566  2D67               	goto	l1785
  3475  0567                     l1783:
  3476  0567                     l1785:
  3477  0567  1F06               	btfss	6,6	;volatile
  3478  0568  2D6A               	goto	u881
  3479  0569  2D6B               	goto	u880
  3480  056A                     u881:
  3481  056A  2D67               	goto	l1783
  3482  056B                     u880:
  3483  056B                     l1787:
  3484  056B  3036               	movlw	54
  3485  056C  2DD9               	goto	l289
  3486  056D                     l310:
  3487                           
  3488                           ;keypad_4x4.c: 29:     if (RB7 == 0) { while (RB7==0) k=1; return 'x'; }
  3489  056D  1B86               	btfsc	6,7	;volatile
  3490  056E  2D70               	goto	u891
  3491  056F  2D71               	goto	u890
  3492  0570                     u891:
  3493  0570  2D78               	goto	l314
  3494  0571                     u890:
  3495  0571  2D72               	goto	l1795
  3496  0572                     l1793:
  3497  0572                     l1795:
  3498  0572  1F86               	btfss	6,7	;volatile
  3499  0573  2D75               	goto	u901
  3500  0574  2D76               	goto	u900
  3501  0575                     u901:
  3502  0575  2D72               	goto	l1793
  3503  0576                     u900:
  3504  0576                     l1797:
  3505  0576  3078               	movlw	120
  3506  0577  2DD9               	goto	l289
  3507  0578                     l314:
  3508                           
  3509                           ;keypad_4x4.c: 31:     RB0 = 1; RB1 = 1; RB2 = 0; RB3 = 1;
  3510  0578  1406               	bsf	6,0	;volatile
  3511  0579  1486               	bsf	6,1	;volatile
  3512  057A  1106               	bcf	6,2	;volatile
  3513  057B  1586               	bsf	6,3	;volatile
  3514                           
  3515                           ;keypad_4x4.c: 32:     if (RB4 == 0) { while (RB4==0) k=1; return '1'; }
  3516  057C  1A06               	btfsc	6,4	;volatile
  3517  057D  2D7F               	goto	u911
  3518  057E  2D80               	goto	u910
  3519  057F                     u911:
  3520  057F  2D87               	goto	l318
  3521  0580                     u910:
  3522  0580  2D81               	goto	l1805
  3523  0581                     l1803:
  3524  0581                     l1805:
  3525  0581  1E06               	btfss	6,4	;volatile
  3526  0582  2D84               	goto	u921
  3527  0583  2D85               	goto	u920
  3528  0584                     u921:
  3529  0584  2D81               	goto	l1803
  3530  0585                     u920:
  3531  0585                     l1807:
  3532  0585  3031               	movlw	49
  3533  0586  2DD9               	goto	l289
  3534  0587                     l318:
  3535                           
  3536                           ;keypad_4x4.c: 33:     if (RB5 == 0) { while (RB5==0) k=1; return '2'; }
  3537  0587  1A86               	btfsc	6,5	;volatile
  3538  0588  2D8A               	goto	u931
  3539  0589  2D8B               	goto	u930
  3540  058A                     u931:
  3541  058A  2D92               	goto	l322
  3542  058B                     u930:
  3543  058B  2D8C               	goto	l1815
  3544  058C                     l1813:
  3545  058C                     l1815:
  3546  058C  1E86               	btfss	6,5	;volatile
  3547  058D  2D8F               	goto	u941
  3548  058E  2D90               	goto	u940
  3549  058F                     u941:
  3550  058F  2D8C               	goto	l1813
  3551  0590                     u940:
  3552  0590                     l1817:
  3553  0590  3032               	movlw	50
  3554  0591  2DD9               	goto	l289
  3555  0592                     l322:
  3556                           
  3557                           ;keypad_4x4.c: 34:     if (RB6 == 0) { while (RB6==0) k=1; return '3'; }
  3558  0592  1B06               	btfsc	6,6	;volatile
  3559  0593  2D95               	goto	u951
  3560  0594  2D96               	goto	u950
  3561  0595                     u951:
  3562  0595  2D9D               	goto	l326
  3563  0596                     u950:
  3564  0596  2D97               	goto	l1825
  3565  0597                     l1823:
  3566  0597                     l1825:
  3567  0597  1F06               	btfss	6,6	;volatile
  3568  0598  2D9A               	goto	u961
  3569  0599  2D9B               	goto	u960
  3570  059A                     u961:
  3571  059A  2D97               	goto	l1823
  3572  059B                     u960:
  3573  059B                     l1827:
  3574  059B  3033               	movlw	51
  3575  059C  2DD9               	goto	l289
  3576  059D                     l326:
  3577                           
  3578                           ;keypad_4x4.c: 35:     if (RB7 == 0) { while (RB7==0) k=1; return '-'; }
  3579  059D  1B86               	btfsc	6,7	;volatile
  3580  059E  2DA0               	goto	u971
  3581  059F  2DA1               	goto	u970
  3582  05A0                     u971:
  3583  05A0  2DA8               	goto	l330
  3584  05A1                     u970:
  3585  05A1  2DA2               	goto	l1835
  3586  05A2                     l1833:
  3587  05A2                     l1835:
  3588  05A2  1F86               	btfss	6,7	;volatile
  3589  05A3  2DA5               	goto	u981
  3590  05A4  2DA6               	goto	u980
  3591  05A5                     u981:
  3592  05A5  2DA2               	goto	l1833
  3593  05A6                     u980:
  3594  05A6                     l1837:
  3595  05A6  302D               	movlw	45
  3596  05A7  2DD9               	goto	l289
  3597  05A8                     l330:
  3598                           
  3599                           ;keypad_4x4.c: 37:     RB0 = 1; RB1 = 1; RB2 = 1; RB3 = 0;
  3600  05A8  1406               	bsf	6,0	;volatile
  3601  05A9  1486               	bsf	6,1	;volatile
  3602  05AA  1506               	bsf	6,2	;volatile
  3603  05AB  1186               	bcf	6,3	;volatile
  3604                           
  3605                           ;keypad_4x4.c: 38:     if (RB4 == 0) { while (RB4==0) k=1; return 'C'; }
  3606  05AC  1A06               	btfsc	6,4	;volatile
  3607  05AD  2DAF               	goto	u991
  3608  05AE  2DB0               	goto	u990
  3609  05AF                     u991:
  3610  05AF  2DB7               	goto	l334
  3611  05B0                     u990:
  3612  05B0  2DB1               	goto	l1845
  3613  05B1                     l1843:
  3614  05B1                     l1845:
  3615  05B1  1E06               	btfss	6,4	;volatile
  3616  05B2  2DB4               	goto	u1001
  3617  05B3  2DB5               	goto	u1000
  3618  05B4                     u1001:
  3619  05B4  2DB1               	goto	l1843
  3620  05B5                     u1000:
  3621  05B5                     l1847:
  3622  05B5  3043               	movlw	67
  3623  05B6  2DD9               	goto	l289
  3624  05B7                     l334:
  3625                           
  3626                           ;keypad_4x4.c: 39:     if (RB5 == 0) { while (RB5==0) k=1; return '0'; }
  3627  05B7  1A86               	btfsc	6,5	;volatile
  3628  05B8  2DBA               	goto	u1011
  3629  05B9  2DBB               	goto	u1010
  3630  05BA                     u1011:
  3631  05BA  2DC2               	goto	l338
  3632  05BB                     u1010:
  3633  05BB  2DBC               	goto	l1855
  3634  05BC                     l1853:
  3635  05BC                     l1855:
  3636  05BC  1E86               	btfss	6,5	;volatile
  3637  05BD  2DBF               	goto	u1021
  3638  05BE  2DC0               	goto	u1020
  3639  05BF                     u1021:
  3640  05BF  2DBC               	goto	l1853
  3641  05C0                     u1020:
  3642  05C0                     l1857:
  3643  05C0  3030               	movlw	48
  3644  05C1  2DD9               	goto	l289
  3645  05C2                     l338:
  3646                           
  3647                           ;keypad_4x4.c: 40:     if (RB6 == 0) { while (RB6==0) k=1; return '='; }
  3648  05C2  1B06               	btfsc	6,6	;volatile
  3649  05C3  2DC5               	goto	u1031
  3650  05C4  2DC6               	goto	u1030
  3651  05C5                     u1031:
  3652  05C5  2DCD               	goto	l342
  3653  05C6                     u1030:
  3654  05C6  2DC7               	goto	l1865
  3655  05C7                     l1863:
  3656  05C7                     l1865:
  3657  05C7  1F06               	btfss	6,6	;volatile
  3658  05C8  2DCA               	goto	u1041
  3659  05C9  2DCB               	goto	u1040
  3660  05CA                     u1041:
  3661  05CA  2DC7               	goto	l1863
  3662  05CB                     u1040:
  3663  05CB                     l1867:
  3664  05CB  303D               	movlw	61
  3665  05CC  2DD9               	goto	l289
  3666  05CD                     l342:
  3667                           
  3668                           ;keypad_4x4.c: 41:     if (RB7 == 0) { while (RB7==0) k=1; return '+'; }
  3669  05CD  1B86               	btfsc	6,7	;volatile
  3670  05CE  2DD0               	goto	u1051
  3671  05CF  2DD1               	goto	u1050
  3672  05D0                     u1051:
  3673  05D0  2DD8               	goto	l1881
  3674  05D1                     u1050:
  3675  05D1  2DD2               	goto	l1875
  3676  05D2                     l1873:
  3677  05D2                     l1875:
  3678  05D2  1F86               	btfss	6,7	;volatile
  3679  05D3  2DD5               	goto	u1061
  3680  05D4  2DD6               	goto	u1060
  3681  05D5                     u1061:
  3682  05D5  2DD2               	goto	l1873
  3683  05D6                     u1060:
  3684  05D6                     l1877:
  3685  05D6  302B               	movlw	43
  3686  05D7  2DD9               	goto	l289
  3687  05D8                     l1881:
  3688  05D8                     l1883:
  3689                           
  3690                           ;keypad_4x4.c: 45:     return 'n';
  3691  05D8  306E               	movlw	110
  3692  05D9                     l289:
  3693  05D9  0008               	return
  3694  05DA                     __end_of_Keypad_Scanner:
  3695                           
  3696                           	psect	text16
  3697  0258                     __ptext16:	
  3698 ;; *************** function _LCD_Write_String *****************
  3699 ;; Defined at:
  3700 ;;		line 67 in file "i2c_lcd.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  Str             2    6[COMMON] PTR unsigned char 
  3703 ;;		 -> STR_9(15), STR_8(11), STR_7(10), STR_6(14), 
  3704 ;;		 -> STR_5(9), STR_4(13), STR_3(16), STR_2(12), 
  3705 ;;		 -> user1(4), code1(15), STR_1(14), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  i               2   11[COMMON] int 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         2       0       0       0       0
  3718 ;;      Locals:         2       0       0       0       0
  3719 ;;      Temps:          3       0       0       0       0
  3720 ;;      Totals:         7       0       0       0       0
  3721 ;;Total ram usage:        7 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    5
  3724 ;; This function calls:
  3725 ;;		_LCD_Write_Char
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;;		_LOCK_Change
  3729 ;;		_LOCK_Run
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _LCD_Write_String
  3735  0258                     _LCD_Write_String:
  3736  0258                     l1973:	
  3737                           ;incstack = 0
  3738 ;; using string table level
  3739                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3740                           
  3741                           
  3742                           ;i2c_lcd.c: 67: void LCD_Write_String(char* Str);i2c_lcd.c: 68: {;i2c_lcd.c: 69:   for(i
      +                          nt i=0; Str[i]!='\0'; i++)
  3743  0258  01FB               	clrf	LCD_Write_String@i
  3744  0259  01FC               	clrf	LCD_Write_String@i+1
  3745  025A  2A7D               	goto	l1979
  3746  025B                     l1975:
  3747                           
  3748                           ;i2c_lcd.c: 70:     LCD_Write_Char(Str[i]);
  3749  025B  087B               	movf	LCD_Write_String@i,w
  3750  025C  0776               	addwf	LCD_Write_String@Str,w
  3751  025D  00F9               	movwf	??_LCD_Write_String+1
  3752  025E  0877               	movf	LCD_Write_String@Str+1,w
  3753  025F  00F8               	movwf	??_LCD_Write_String
  3754  0260  1803               	skipnc
  3755  0261  0AF8               	incf	??_LCD_Write_String,f
  3756  0262  1FFB               	btfss	LCD_Write_String@i,7
  3757  0263  2A65               	goto	u1170
  3758  0264  03F8               	decf	??_LCD_Write_String,f
  3759  0265                     u1170:
  3760  0265  0878               	movf	??_LCD_Write_String,w
  3761  0266  00FA               	movwf	??_LCD_Write_String+2
  3762  0267  087A               	movf	??_LCD_Write_String+2,w
  3763  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3764  0269  1303               	bcf	3,6	;RP1=0, select bank0
  3765  026A  00FF               	movwf	btemp+1
  3766  026B  0879               	movf	??_LCD_Write_String+1,w
  3767  026C  0084               	movwf	4
  3768  026D  120A  118A  2003  120A  118A  	fcall	stringtab
  3769  0272  120A  118A  2198  120A  118A  	fcall	_LCD_Write_Char
  3770  0277                     l1977:
  3771  0277  3001               	movlw	1
  3772  0278  07FB               	addwf	LCD_Write_String@i,f
  3773  0279  1803               	skipnc
  3774  027A  0AFC               	incf	LCD_Write_String@i+1,f
  3775  027B  3000               	movlw	0
  3776  027C  07FC               	addwf	LCD_Write_String@i+1,f
  3777  027D                     l1979:
  3778  027D  087B               	movf	LCD_Write_String@i,w
  3779  027E  0776               	addwf	LCD_Write_String@Str,w
  3780  027F  00F9               	movwf	??_LCD_Write_String+1
  3781  0280  0877               	movf	LCD_Write_String@Str+1,w
  3782  0281  00F8               	movwf	??_LCD_Write_String
  3783  0282  1803               	skipnc
  3784  0283  0AF8               	incf	??_LCD_Write_String,f
  3785  0284  1FFB               	btfss	LCD_Write_String@i,7
  3786  0285  2A87               	goto	u1180
  3787  0286  03F8               	decf	??_LCD_Write_String,f
  3788  0287                     u1180:
  3789  0287  0878               	movf	??_LCD_Write_String,w
  3790  0288  00FA               	movwf	??_LCD_Write_String+2
  3791  0289  087A               	movf	??_LCD_Write_String+2,w
  3792  028A  1283               	bcf	3,5	;RP0=0, select bank0
  3793  028B  1303               	bcf	3,6	;RP1=0, select bank0
  3794  028C  00FF               	movwf	btemp+1
  3795  028D  0879               	movf	??_LCD_Write_String+1,w
  3796  028E  0084               	movwf	4
  3797  028F  120A  118A  2003  120A  118A  	fcall	stringtab
  3798  0294  3A00               	xorlw	0
  3799  0295  1D03               	skipz
  3800  0296  2A98               	goto	u1191
  3801  0297  2A99               	goto	u1190
  3802  0298                     u1191:
  3803  0298  2A5B               	goto	l1975
  3804  0299                     u1190:
  3805  0299                     l165:
  3806  0299  0008               	return
  3807  029A                     __end_of_LCD_Write_String:
  3808                           
  3809                           	psect	text17
  3810  0198                     __ptext17:	
  3811 ;; *************** function _LCD_Write_Char *****************
  3812 ;; Defined at:
  3813 ;;		line 60 in file "i2c_lcd.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  Data            1    wreg     unsigned char 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  Data            1    5[COMMON] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         0       0       0       0       0
  3828 ;;      Locals:         1       0       0       0       0
  3829 ;;      Temps:          1       0       0       0       0
  3830 ;;      Totals:         2       0       0       0       0
  3831 ;;Total ram usage:        2 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    4
  3834 ;; This function calls:
  3835 ;;		_LCD_Write_4Bit
  3836 ;; This function is called by:
  3837 ;;		_LOCK_Enter
  3838 ;;		_LCD_Write_String
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           
  3843                           ;psect for function _LCD_Write_Char
  3844  0198                     _LCD_Write_Char:
  3845                           
  3846                           ;incstack = 0
  3847                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3848                           ;LCD_Write_Char@Data stored from wreg
  3849  0198  00F5               	movwf	LCD_Write_Char@Data
  3850  0199                     l1913:
  3851                           
  3852                           ;i2c_lcd.c: 60: void LCD_Write_Char(char Data);i2c_lcd.c: 61: {;i2c_lcd.c: 62:   RS = 1;
  3853  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3854  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3855  019B  01A4               	clrf	_RS
  3856  019C  0AA4               	incf	_RS,f
  3857  019D                     l1915:
  3858                           
  3859                           ;i2c_lcd.c: 63:   LCD_Write_4Bit(Data & 0xF0);
  3860  019D  0875               	movf	LCD_Write_Char@Data,w
  3861  019E  39F0               	andlw	240
  3862  019F  120A  118A  2146  120A  118A  	fcall	_LCD_Write_4Bit
  3863                           
  3864                           ;i2c_lcd.c: 64:   LCD_Write_4Bit((Data << 4) & 0xF0);
  3865  01A4  0875               	movf	LCD_Write_Char@Data,w
  3866  01A5  00F4               	movwf	??_LCD_Write_Char
  3867  01A6  3003               	movlw	3
  3868  01A7                     u1085:
  3869  01A7  1003               	clrc
  3870  01A8  0DF4               	rlf	??_LCD_Write_Char,f
  3871  01A9  3EFF               	addlw	-1
  3872  01AA  1D03               	skipz
  3873  01AB  29A7               	goto	u1085
  3874  01AC  1003               	clrc
  3875  01AD  0D74               	rlf	??_LCD_Write_Char,w
  3876  01AE  39F0               	andlw	240
  3877  01AF  120A  118A  2146  120A  118A  	fcall	_LCD_Write_4Bit
  3878  01B4                     l159:
  3879  01B4  0008               	return
  3880  01B5                     __end_of_LCD_Write_Char:
  3881                           
  3882                           	psect	text18
  3883  00DB                     __ptext18:	
  3884 ;; *************** function _LCD_Clear *****************
  3885 ;; Defined at:
  3886 ;;		line 120 in file "i2c_lcd.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3900 ;;      Params:         0       0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0
  3902 ;;      Temps:          1       0       0       0       0
  3903 ;;      Totals:         1       0       0       0       0
  3904 ;;Total ram usage:        1 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    5
  3907 ;; This function calls:
  3908 ;;		_LCD_CMD
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;;		_LOCK_Change
  3912 ;;		_LOCK_Run
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function _LCD_Clear
  3918  00DB                     _LCD_Clear:
  3919  00DB                     l1981:	
  3920                           ;incstack = 0
  3921                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3922                           
  3923                           
  3924                           ;i2c_lcd.c: 122:     LCD_CMD(0x00);
  3925  00DB  3000               	movlw	0
  3926  00DC  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  3927                           
  3928                           ;i2c_lcd.c: 123:     LCD_CMD(0x01);
  3929  00E1  3001               	movlw	1
  3930  00E2  120A  118A  217C  120A  118A  	fcall	_LCD_CMD
  3931  00E7                     l1983:
  3932                           
  3933                           ;i2c_lcd.c: 124:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3934  00E7  3035               	movlw	53
  3935  00E8  00F6               	movwf	??_LCD_Clear
  3936  00E9                     u1687:
  3937  00E9  0BF6               	decfsz	??_LCD_Clear,f
  3938  00EA  28E9               	goto	u1687
  3939  00EB                     l189:
  3940  00EB  0008               	return
  3941  00EC                     __end_of_LCD_Clear:
  3942                           
  3943                           	psect	text19
  3944  017C                     __ptext19:	
  3945 ;; *************** function _LCD_CMD *****************
  3946 ;; Defined at:
  3947 ;;		line 25 in file "i2c_lcd.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  CMD             1    wreg     unsigned char 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  CMD             1    5[COMMON] unsigned char 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       0       0       0       0
  3962 ;;      Locals:         1       0       0       0       0
  3963 ;;      Temps:          1       0       0       0       0
  3964 ;;      Totals:         2       0       0       0       0
  3965 ;;Total ram usage:        2 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    4
  3968 ;; This function calls:
  3969 ;;		_LCD_Write_4Bit
  3970 ;; This function is called by:
  3971 ;;		_LCD_Init
  3972 ;;		_LCD_Set_Cursor
  3973 ;;		_LCD_Clear
  3974 ;;		_LCD_SL
  3975 ;;		_LCD_SR
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           
  3980                           ;psect for function _LCD_CMD
  3981  017C                     _LCD_CMD:
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3985                           ;LCD_CMD@CMD stored from wreg
  3986  017C  00F5               	movwf	LCD_CMD@CMD
  3987  017D                     l1703:
  3988                           
  3989                           ;i2c_lcd.c: 25: void LCD_CMD(unsigned char CMD);i2c_lcd.c: 26: {;i2c_lcd.c: 27:   RS = 0
      +                          ;
  3990  017D  1283               	bcf	3,5	;RP0=0, select bank0
  3991  017E  1303               	bcf	3,6	;RP1=0, select bank0
  3992  017F  01A4               	clrf	_RS
  3993  0180                     l1705:
  3994                           
  3995                           ;i2c_lcd.c: 28:   LCD_Write_4Bit(CMD & 0xF0);
  3996  0180  0875               	movf	LCD_CMD@CMD,w
  3997  0181  39F0               	andlw	240
  3998  0182  120A  118A  2146  120A  118A  	fcall	_LCD_Write_4Bit
  3999  0187                     l1707:
  4000                           
  4001                           ;i2c_lcd.c: 29:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  4002  0187  0875               	movf	LCD_CMD@CMD,w
  4003  0188  00F4               	movwf	??_LCD_CMD
  4004  0189  3003               	movlw	3
  4005  018A                     u745:
  4006  018A  1003               	clrc
  4007  018B  0DF4               	rlf	??_LCD_CMD,f
  4008  018C  3EFF               	addlw	-1
  4009  018D  1D03               	skipz
  4010  018E  298A               	goto	u745
  4011  018F  1003               	clrc
  4012  0190  0D74               	rlf	??_LCD_CMD,w
  4013  0191  39F0               	andlw	240
  4014  0192  120A  118A  2146  120A  118A  	fcall	_LCD_Write_4Bit
  4015  0197                     l153:
  4016  0197  0008               	return
  4017  0198                     __end_of_LCD_CMD:
  4018                           
  4019                           	psect	text20
  4020  0146                     __ptext20:	
  4021 ;; *************** function _LCD_Write_4Bit *****************
  4022 ;; Defined at:
  4023 ;;		line 16 in file "i2c_lcd.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  Nibble          1    wreg     unsigned char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  Nibble          1    3[COMMON] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       0       0       0       0
  4038 ;;      Locals:         1       0       0       0       0
  4039 ;;      Temps:          1       0       0       0       0
  4040 ;;      Totals:         2       0       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    3
  4044 ;; This function calls:
  4045 ;;		_IO_Expander_Write
  4046 ;; This function is called by:
  4047 ;;		_LCD_CMD
  4048 ;;		_LCD_Write_Char
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _LCD_Write_4Bit
  4054  0146                     _LCD_Write_4Bit:
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4058                           ;LCD_Write_4Bit@Nibble stored from wreg
  4059  0146  00F3               	movwf	LCD_Write_4Bit@Nibble
  4060  0147                     l1697:
  4061                           
  4062                           ;i2c_lcd.c: 16: void LCD_Write_4Bit(unsigned char Nibble);i2c_lcd.c: 17: {;i2c_lcd.c: 19
      +                          :   Nibble |= RS;
  4063  0147  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0148  1303               	bcf	3,6	;RP1=0, select bank0
  4065  0149  0824               	movf	_RS,w
  4066  014A  00FF               	movwf	btemp+1
  4067  014B  087F               	movf	btemp+1,w
  4068  014C  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  4069  014D                     l1699:
  4070                           
  4071                           ;i2c_lcd.c: 20:   IO_Expander_Write(Nibble | 0x04);
  4072  014D  0873               	movf	LCD_Write_4Bit@Nibble,w
  4073  014E  3804               	iorlw	4
  4074  014F  120A  118A  212B  120A  118A  	fcall	_IO_Expander_Write
  4075  0154                     l1701:
  4076                           
  4077                           ;i2c_lcd.c: 21:   IO_Expander_Write(Nibble & 0xFB);
  4078  0154  0873               	movf	LCD_Write_4Bit@Nibble,w
  4079  0155  39FB               	andlw	251
  4080  0156  120A  118A  212B  120A  118A  	fcall	_IO_Expander_Write
  4081                           
  4082                           ;i2c_lcd.c: 22:   _delay((unsigned long)((50)*(16000000/4000000.0)));
  4083  015B  3042               	movlw	66
  4084  015C  00F2               	movwf	??_LCD_Write_4Bit
  4085  015D                     u1697:
  4086  015D  0BF2               	decfsz	??_LCD_Write_4Bit,f
  4087  015E  295D               	goto	u1697
  4088  015F  0000               	nop
  4089  0160                     l150:
  4090  0160  0008               	return
  4091  0161                     __end_of_LCD_Write_4Bit:
  4092                           
  4093                           	psect	text21
  4094  012B                     __ptext21:	
  4095 ;; *************** function _IO_Expander_Write *****************
  4096 ;; Defined at:
  4097 ;;		line 8 in file "i2c_lcd.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  Data            1    wreg     unsigned char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  Data            1    1[COMMON] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         0       0       0       0       0
  4112 ;;      Locals:         1       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0
  4114 ;;      Totals:         1       0       0       0       0
  4115 ;;Total ram usage:        1 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    2
  4118 ;; This function calls:
  4119 ;;		_I2C_Start
  4120 ;;		_I2C_Stop
  4121 ;;		_I2C_Write_Char
  4122 ;; This function is called by:
  4123 ;;		_LCD_Write_4Bit
  4124 ;;		_LCD_Init
  4125 ;;		_Backlight
  4126 ;;		_noBacklight
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           
  4131                           ;psect for function _IO_Expander_Write
  4132  012B                     _IO_Expander_Write:
  4133                           
  4134                           ;incstack = 0
  4135                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  4136                           ;IO_Expander_Write@Data stored from wreg
  4137  012B  00F1               	movwf	IO_Expander_Write@Data
  4138  012C                     l1695:
  4139                           
  4140                           ;i2c_lcd.c: 8: void IO_Expander_Write(unsigned char Data);i2c_lcd.c: 9: {;i2c_lcd.c: 10:
      +                             I2C_Start();
  4141  012C  120A  118A  20A1  120A  118A  	fcall	_I2C_Start
  4142                           
  4143                           ;i2c_lcd.c: 11:   I2C_Write_Char(0x4E);
  4144  0131  304E               	movlw	78
  4145  0132  120A  118A  20CB  120A  118A  	fcall	_I2C_Write_Char
  4146                           
  4147                           ;i2c_lcd.c: 12:   I2C_Write_Char(Data | BackLight_State);
  4148  0137  0871               	movf	IO_Expander_Write@Data,w
  4149  0138  1283               	bcf	3,5	;RP0=0, select bank0
  4150  0139  1303               	bcf	3,6	;RP1=0, select bank0
  4151  013A  0448               	iorwf	_BackLight_State,w
  4152  013B  120A  118A  20CB  120A  118A  	fcall	_I2C_Write_Char
  4153                           
  4154                           ;i2c_lcd.c: 13:   I2C_Stop();
  4155  0140  120A  118A  20AA  120A  118A  	fcall	_I2C_Stop
  4156  0145                     l147:
  4157  0145  0008               	return
  4158  0146                     __end_of_IO_Expander_Write:
  4159                           
  4160                           	psect	text22
  4161  00CB                     __ptext22:	
  4162 ;; *************** function _I2C_Write_Char *****************
  4163 ;; Defined at:
  4164 ;;		line 76 in file "i2c_master.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  Data            1    wreg     unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  Data            1    0[COMMON] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      unsigned char 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       0       0       0       0
  4179 ;;      Locals:         1       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0
  4181 ;;      Totals:         1       0       0       0       0
  4182 ;;Total ram usage:        1 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    1
  4185 ;; This function calls:
  4186 ;;		_I2C_Wait
  4187 ;; This function is called by:
  4188 ;;		_IO_Expander_Write
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _I2C_Write_Char
  4194  00CB                     _I2C_Write_Char:
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _I2C_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4198                           ;I2C_Write_Char@Data stored from wreg
  4199  00CB  00F0               	movwf	I2C_Write_Char@Data
  4200  00CC                     l1687:
  4201                           
  4202                           ;i2c_master.c: 76: unsigned char I2C_Write_Char(unsigned char Data);i2c_master.c: 77: {;
      +                          i2c_master.c: 79:   I2C_Wait();
  4203  00CC  120A  118A  20BE  120A  118A  	fcall	_I2C_Wait
  4204  00D1                     l1689:
  4205                           
  4206                           ;i2c_master.c: 80:   SSPBUF = Data;
  4207  00D1  0870               	movf	I2C_Write_Char@Data,w
  4208  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  4209  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  4210  00D4  0093               	movwf	19	;volatile
  4211  00D5                     l246:	
  4212                           ;i2c_master.c: 81:   while(!SSPIF);
  4213                           
  4214  00D5  1D8C               	btfss	12,3	;volatile
  4215  00D6  28D8               	goto	u731
  4216  00D7  28D9               	goto	u730
  4217  00D8                     u731:
  4218  00D8  28D5               	goto	l246
  4219  00D9                     u730:
  4220  00D9                     l248:
  4221                           
  4222                           ;i2c_master.c: 82:   SSPIF = 0;
  4223  00D9  118C               	bcf	12,3	;volatile
  4224  00DA                     l249:	
  4225                           ;i2c_master.c: 83:   return ACKSTAT;;	Return value of _I2C_Write_Char is never used
  4226                           
  4227  00DA  0008               	return
  4228  00DB                     __end_of_I2C_Write_Char:
  4229                           
  4230                           	psect	text23
  4231  00AA                     __ptext23:	
  4232 ;; *************** function _I2C_Stop *****************
  4233 ;; Defined at:
  4234 ;;		line 49 in file "i2c_master.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0
  4251 ;;      Totals:         0       0       0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    1
  4255 ;; This function calls:
  4256 ;;		_I2C_Wait
  4257 ;; This function is called by:
  4258 ;;		_IO_Expander_Write
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _I2C_Stop
  4264  00AA                     _I2C_Stop:
  4265  00AA                     l1691:	
  4266                           ;incstack = 0
  4267                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  4268                           
  4269                           
  4270                           ;i2c_master.c: 52:  I2C_Wait();
  4271  00AA  120A  118A  20BE  120A  118A  	fcall	_I2C_Wait
  4272  00AF                     l1693:
  4273                           
  4274                           ;i2c_master.c: 53:  PEN = 1;
  4275  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  4276  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  4277  00B1  1511               	bsf	17,2	;volatile
  4278  00B2                     l237:
  4279  00B2  0008               	return
  4280  00B3                     __end_of_I2C_Stop:
  4281                           
  4282                           	psect	text24
  4283  00A1                     __ptext24:	
  4284 ;; *************** function _I2C_Start *****************
  4285 ;; Defined at:
  4286 ;;		line 31 in file "i2c_master.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, pclath, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0
  4303 ;;      Totals:         0       0       0       0       0
  4304 ;;Total ram usage:        0 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    1
  4307 ;; This function calls:
  4308 ;;		_I2C_Wait
  4309 ;; This function is called by:
  4310 ;;		_IO_Expander_Write
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _I2C_Start
  4316  00A1                     _I2C_Start:
  4317  00A1                     l1683:	
  4318                           ;incstack = 0
  4319                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  4320                           
  4321                           
  4322                           ;i2c_master.c: 34:  I2C_Wait();
  4323  00A1  120A  118A  20BE  120A  118A  	fcall	_I2C_Wait
  4324  00A6                     l1685:
  4325                           
  4326                           ;i2c_master.c: 35:  SEN = 1;
  4327  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  4328  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  4329  00A8  1411               	bsf	17,0	;volatile
  4330  00A9                     l231:
  4331  00A9  0008               	return
  4332  00AA                     __end_of_I2C_Start:
  4333                           
  4334                           	psect	text25
  4335  00BE                     __ptext25:	
  4336 ;; *************** function _I2C_Wait *****************
  4337 ;; Defined at:
  4338 ;;		line 23 in file "i2c_master.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;		None
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4352 ;;      Params:         0       0       0       0       0
  4353 ;;      Locals:         0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0
  4355 ;;      Totals:         0       0       0       0       0
  4356 ;;Total ram usage:        0 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_I2C_Start
  4362 ;;		_I2C_Stop
  4363 ;;		_I2C_Write_Char
  4364 ;;		_I2C_Restart
  4365 ;;		_I2C_ACK
  4366 ;;		_I2C_NACK
  4367 ;;		_I2C_Read_Char
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           
  4372                           ;psect for function _I2C_Wait
  4373  00BE                     _I2C_Wait:
  4374  00BE                     l1679:	
  4375                           ;incstack = 0
  4376                           ; Regs used in _I2C_Wait: [wreg+status,2]
  4377                           
  4378  00BE                     l225:	
  4379                           ;i2c_master.c: 25:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4380                           
  4381  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  4382  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  4383  00C0  1914               	btfsc	20,2	;volatile
  4384  00C1  28C3               	goto	u711
  4385  00C2  28C4               	goto	u710
  4386  00C3                     u711:
  4387  00C3  28BE               	goto	l225
  4388  00C4                     u710:
  4389  00C4                     l1681:
  4390  00C4  0811               	movf	17,w	;volatile
  4391  00C5  391F               	andlw	31
  4392  00C6  1D03               	btfss	3,2
  4393  00C7  28C9               	goto	u721
  4394  00C8  28CA               	goto	u720
  4395  00C9                     u721:
  4396  00C9  28BE               	goto	l225
  4397  00CA                     u720:
  4398  00CA                     l228:
  4399  00CA  0008               	return
  4400  00CB                     __end_of_I2C_Wait:
  4401  007E                     btemp	set	126	;btemp
  4402  007E                     wtemp0	set	126
  4403                           
  4404                           	psect	config
  4405                           
  4406                           ;Config register CONFIG @ 0x2007
  4407                           ;	Oscillator Selection bits
  4408                           ;	FOSC = HS, HS oscillator
  4409                           ;	Watchdog Timer Enable bit
  4410                           ;	WDTE = OFF, WDT disabled
  4411                           ;	Power-up Timer Enable bit
  4412                           ;	PWRTE = ON, PWRT enabled
  4413                           ;	Brown-out Reset Enable bit
  4414                           ;	BOREN = ON, BOR enabled
  4415                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4416                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4417                           ;	Data EEPROM Memory Code Protection bit
  4418                           ;	CPD = OFF, Data EEPROM code protection off
  4419                           ;	Flash Program Memory Write Enable bits
  4420                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4421                           ;	In-Circuit Debugger Mode bit
  4422                           ;	DEBUG = 0x1, unprogrammed default
  4423                           ;	Flash Program Memory Code Protection bit
  4424                           ;	CP = OFF, Code protection off
  4425  2007                     	org	8199
  4426  2007  3FF2               	dw	16370

Data Sizes:
    Strings     114
    Constant    0
    Data        5
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[15]), STR_8(CODE[11]), STR_7(CODE[10]), STR_6(CODE[14]), 
		 -> STR_5(CODE[9]), STR_4(CODE[13]), STR_3(CODE[16]), STR_2(CODE[12]), 
		 -> user1(BANK0[4]), code1(BANK0[15]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _LOCK_Run->_LCD_Write_String
    _LOCK_Run->_LOCK_Enter
    _LOCK_Change->_LCD_Write_String
    _LOCK_Change->_LOCK_Enter
    _LOCK_Write->_EEPROM_Write_Char
    _LOCK_Read->_EEPROM_Read_Char
    _LOCK_Enter->_LCD_Set_Cursor
    _LCD_Set_Cursor->_LCD_CMD
    _Keypad_Switch_Press_Scan->_Keypad_Scanner
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Write_Char

Critical Paths under _main in BANK0

    _System_Init->_LCD_Init
    _LCD_Init->_I2C_Master_Init
    _LOCK_Run->_LOCK_Change

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11137
                                             15 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                           _LOCK_Run
                        _System_Init
 ---------------------------------------------------------------------------------
 (1) _System_Init                                          0     0      0     687
                        _Keypad_Init
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             7     3      4     687
                                              8 BANK0      7     3      4
                    _I2C_Master_Init
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LOCK_Run                                             3     3      0    8103
                                              3 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                        _LOCK_Change
                         _LOCK_Enter
 ---------------------------------------------------------------------------------
 (2) _LOCK_Change                                          3     3      0    4324
                                              0 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                         _LOCK_Enter
                          _LOCK_Read
                         _LOCK_Write
 ---------------------------------------------------------------------------------
 (3) _LOCK_Write                                           2     2      0     500
                                              2 COMMON     2     2      0
                  _EEPROM_Write_Char
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write_Char                                    2     1      1     500
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _LOCK_Read                                            2     2      0      45
                                              2 COMMON     2     2      0
                   _EEPROM_Read_Char
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read_Char                                     2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LOCK_Enter                                           3     3      0    1432
                                             10 COMMON     3     3      0
           _Keypad_Switch_Press_Scan
                     _LCD_Set_Cursor
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       4     3      1    1155
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _Keypad_Switch_Press_Scan                             1     1      0      64
                                              2 COMMON     1     1      0
                     _Keypad_Scanner
 ---------------------------------------------------------------------------------
 (4) _Keypad_Scanner                                       2     2      0      18
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     7     5      2    1059
                                              6 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            1     1      0     133
                                              6 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
 ---------------------------------------------------------------------------------
 (6) _I2C_Write_Char                                       1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Start
             _I2C_Wait
           _I2C_Stop
             _I2C_Wait
           _I2C_Write_Char
             _I2C_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Start
             _I2C_Wait
           _I2C_Stop
             _I2C_Wait
           _I2C_Write_Char
             _I2C_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Start
             _I2C_Wait
           _I2C_Stop
             _I2C_Wait
           _I2C_Write_Char
             _I2C_Wait
   _LOCK_Run
     _LCD_Clear
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Wait
             _I2C_Stop
               _I2C_Wait
             _I2C_Write_Char
               _I2C_Wait
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Wait
             _I2C_Stop
               _I2C_Wait
             _I2C_Write_Char
               _I2C_Wait
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Wait
             _I2C_Stop
               _I2C_Wait
             _I2C_Write_Char
               _I2C_Wait
     _LOCK_Change
       _LCD_Clear
         _LCD_CMD
           _LCD_Write_4Bit
             _IO_Expander_Write
               _I2C_Start
                 _I2C_Wait
               _I2C_Stop
                 _I2C_Wait
               _I2C_Write_Char
                 _I2C_Wait
       _LCD_Set_Cursor
         _LCD_CMD
           _LCD_Write_4Bit
             _IO_Expander_Write
               _I2C_Start
                 _I2C_Wait
               _I2C_Stop
                 _I2C_Wait
               _I2C_Write_Char
                 _I2C_Wait
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Write_4Bit
             _IO_Expander_Write
               _I2C_Start
                 _I2C_Wait
               _I2C_Stop
                 _I2C_Wait
               _I2C_Write_Char
                 _I2C_Wait
       _LOCK_Enter
         _Keypad_Switch_Press_Scan
           _Keypad_Scanner
         _LCD_Set_Cursor
           _LCD_CMD
             _LCD_Write_4Bit
               _IO_Expander_Write
                 _I2C_Start
                   _I2C_Wait
                 _I2C_Stop
                   _I2C_Wait
                 _I2C_Write_Char
                   _I2C_Wait
         _LCD_Write_Char
           _LCD_Write_4Bit
             _IO_Expander_Write
               _I2C_Start
                 _I2C_Wait
               _I2C_Stop
                 _I2C_Wait
               _I2C_Write_Char
                 _I2C_Wait
       _LOCK_Read
         _EEPROM_Read_Char
       _LOCK_Write
         _EEPROM_Write_Char
     _LOCK_Enter
       _Keypad_Switch_Press_Scan
         _Keypad_Scanner
       _LCD_Set_Cursor
         _LCD_CMD
           _LCD_Write_4Bit
             _IO_Expander_Write
               _I2C_Start
                 _I2C_Wait
               _I2C_Stop
                 _I2C_Wait
               _I2C_Write_Char
                 _I2C_Wait
       _LCD_Write_Char
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Wait
             _I2C_Stop
               _I2C_Wait
             _I2C_Write_Char
               _I2C_Wait
   _System_Init
     _Keypad_Init
     _LCD_Init
       _I2C_Master_Init
         ___lldiv
       _IO_Expander_Write
         _I2C_Start
           _I2C_Wait
         _I2C_Stop
           _I2C_Wait
         _I2C_Write_Char
           _I2C_Wait
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Start
               _I2C_Wait
             _I2C_Stop
               _I2C_Wait
             _I2C_Write_Char
               _I2C_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      2D       5       56.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 28 08:01:14 2021

                                _j 0022                                  _m 0026  
                                pc 0002                 __size_of_I2C_Start 0009  
                               l39 012A                                 l72 0351  
                               l66 0458                                 l75 0515  
                               l69 02F3                                 l86 07D4  
                               l78 069E                                 _RS 0024  
                               _w1 0025                                 fsr 0004  
                              l101 0162                                l104 017B  
                              l150 0160                                l310 056D  
                              l302 0557                                l222 0257  
                              l231 00A9                                l119 00FC  
                              l225 00BE                                l153 0197  
                              l330 05A8                                l322 0592  
                              l314 0578                                l306 0562  
                              l147 0145                                l228 00CA  
                              l156 069D                                l237 00B2  
                              l165 0299                                l246 00D5  
                              l342 05CD                                l334 05B7  
                              l326 059D                                l318 0587  
                              l174 021F                                l159 01B4  
                              l248 00D9                                l249 00DA  
                              l338 05C2                                l290 0532  
                              l282 00BD                                l355 0111  
                              l189 00EB                                l285 0527  
                              l294 053D                                l289 05D9  
                              l298 0548                                l477 03B7  
                              _RB0 0030                                _RB1 0031  
                              _RB2 0032                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _RB6 0036                                _RB7 0037  
                              _PEN 048A                                u710 00C4  
                              u711 00C3                                u720 00CA  
                              u800 053B                                u721 00C9  
                              u801 053A                                u730 00D9  
                              u810 0541                                u731 00D8  
                              u811 0540                                u900 0576  
                              u820 0546                                _SEN 0488  
                              u901 0575                                u821 0545  
                              u910 0580                                u830 0550  
                              u750 0520                                u911 057F  
                              u831 054F                                u751 051F  
                              u920 0585                                u840 0555  
                              u760 0525                                u745 018A  
                              u921 0584                                u841 0554  
                              u761 0524                                u930 058B  
                              u850 055B                                u770 052B  
                              u931 058A                                u851 055A  
                              u771 052A                                u940 0590  
                              u860 0560                                u780 0530  
                              u941 058F                                u861 055F  
                              u781 052F                                u950 0596  
                              u870 0566                                u790 0536  
                              u951 0595                                u871 0565  
                              u791 0535                                u960 059B  
                              u880 056B                                u961 059A  
                              u881 056A                                u970 05A1  
                              u890 0571                                u971 05A0  
                              u891 0570                                u980 05A6  
                              u981 05A5                                u990 05B0  
                              u991 05AF                                _cnt 0020  
        __end_of_EEPROM_Write_Char 017C                                fsr0 0004  
                              indf 0000                        ?_LOCK_Enter 0070  
                  __end_of_LCD_CMD 0198                LCD_Write_String@Str 0076  
                   _LCD_Set_Cursor 01EA                        ?_LOCK_Write 0070  
                             l2001 03E0                               l2011 03F9  
                             l2003 03E5                               l2021 043B  
                             l2013 03FE                               l2005 03EA  
                             l2101 0664                               l2023 0446  
                             l2007 03EF                               l2031 029A  
                             l2111 0459                               l2103 0673  
                             l2025 0452                               l2009 03F4  
                             l2017 0403                               l2041 02DF  
                             l2033 02A3                               l2121 0483  
                             l2113 045E                               l2201 0706  
                             l2105 0679                               l2019 0431  
                             l2043 02EA                               l2035 02AE  
                             l2051 031E                               l2131 04A1  
                             l2123 048B                               l2115 0466  
                             l2211 0725                               l2203 070C  
                             l2107 0688                               l2037 02C2  
                             l2053 0327                               l2045 02F4  
                             l2141 04BA                               l2133 04A6  
                             l2125 0494                               l2117 046F  
                             l2221 0743                               l2205 0712  
                             l2213 072B                               l2061 0224  
                             l2109 068E                               l2039 02CB  
                             l2055 033C                               l2047 02FD  
                             l2151 04E7                               l2143 04C2  
                             l2135 04AB                               l2127 0497  
                             l2119 047E                               l2231 076F  
                             l2223 0749                               l2215 0731  
                             l2207 0718                               l2063 0227  
                             l2071 05DA                               l2401 0214  
                             l2057 0348                               l2049 0309  
                             l2153 04F0                               l2145 04CB  
                             l2137 04B0                               l2129 049C  
                             l2241 07A1                               l2233 0774  
                             l2225 074E                               l2217 0737  
                             l2209 071D                               l1345 00B3  
                             l2065 0228                               l2081 060B  
                             l2073 05E9                               l2161 0112  
                             l2155 04F8                               l2147 04DA  
                             l2139 04B5                               l2243 07A9  
                             l2235 077E                               l2227 0758  
                             l2219 073D                               l2171 06AD  
                             l1347 00B7                               l2067 0255  
                             l2059 0220                               l2091 0638  
                             l2083 0616                               l2075 05F4  
                             l2163 0116                               l1701 0154  
                             l2157 0501                               l2149 04DF  
                             l2245 07B2                               l2229 0761  
                             l2237 0796                               l2181 06CB  
                             l2173 06B6                               l1349 00BA  
                             l2069 0256                               l2093 063E  
                             l2085 061C                               l2077 05FA  
                             l2165 011B                               l1703 017D  
                             l1711 0516                               l2159 0510  
                             l2239 079C                               l2247 07C1  
                             l2191 06E9                               l2183 06D3  
                             l2175 06B9                               l2167 069E  
                             l2095 0649                               l2087 0627  
                             l2079 0605                               l2271 01DC  
                             l2263 01B5                               l1705 0180  
                             l1713 0519                               l2249 07D0  
                             l2193 06EE                               l2185 06DC  
                             l2177 06BE                               l2169 06A3  
                             l2097 064F                               l2089 062D  
                             l2273 01E1                               l2265 01BA  
                             l1707 0187                               l1803 0581  
                             l1723 0521                               l1715 051A  
                             l2195 06F3                               l2187 06DF  
                             l2179 06C6                               l2099 065E  
                             l2267 01C4                               l1813 058C  
                             l1805 0581                               l1733 052C  
                             l1725 0521                               l1717 051B  
                             l1709 0516                               l2197 06F8  
                             l2189 06E4                               l2269 01CD  
                             l1823 0597                               l1815 058C  
                             l1807 0585                               l1743 0537  
                             l1735 052C                               l1727 0525  
                             l1719 051C                               l1903 00FD  
                             l2199 0700                               l1681 00C4  
                             l1913 0199                               l1833 05A2  
                             l1825 0597                               l1817 0590  
                             l1753 0542                               l1745 0537  
                             l1737 0530                               l1905 0102  
                             l1921 00F4                               l1683 00A1  
                             l1691 00AA                               l1915 019D  
                             l1843 05B1                               l1835 05A2  
                             l1827 059B                               l1763 0551  
                             l1755 0542                               l1747 053B  
                             l1907 010A                               l1923 00F5  
                             l1931 0168                               l1685 00A6  
                             l1693 00AF                               l1853 05BC  
                             l1845 05B1                               l1837 05A6  
                             l1773 055C                               l1765 0551  
                             l1757 0546                               l1909 0110  
                             l1925 00FB                               l1917 00ED  
                             l1941 0178                               l1933 016E  
                             l1679 00BE                               l1687 00CC  
                             l1695 012C                               l1863 05C7  
                             l1855 05BC                               l1847 05B5  
                             l1783 0567                               l1775 055C  
                             l1767 0555                               l2399 040B  
                             l1919 00F1                               l1943 0179  
                             l1935 0171                               l1951 0365  
                             l1689 00D1                               l1697 0147  
                             l1873 05D2                               l1881 05D8  
                             l1865 05C7                               l1857 05C0  
                             l1793 0572                               l1785 0567  
                             l1777 0560                               l1945 017A  
                             l1937 0172                               l1929 0162  
                             l1961 0391                               l1953 036E  
                             l1699 014D                               l1883 05D8  
                             l1875 05D2                               l1867 05CB  
                             l1795 0572                               l1787 056B  
                             l1891 01F4                               l1939 0177  
                             l1963 039F                               l1955 0372  
                             l1947 0352                               l1981 00DB  
                             l1973 0258                               l1877 05D6  
                             l1797 0576                               l1893 01FC  
                             l1965 03A0                               l1957 0376  
                             l1949 0362                               l1983 00E7  
                             l1975 025B                               l1895 0204  
                             l1887 01EB                               l1991 03C7  
                             l1967 03A9                               l1959 037F  
                             l1977 0277                               l1889 01EC  
                             l1897 020C                               l1993 03CC  
                             l1985 03B8                               l1969 03AF  
                             l1979 027D                               l1995 03D1  
                             l1987 03B8                               l1997 03D6  
                             l1989 03C0                               l1999 03DB  
                             STR_1 0032                               STR_2 005B  
                             STR_3 0013                               STR_4 004E  
                             STR_5 007C                               STR_6 0040  
                             STR_7 0072                               STR_8 0067  
                             STR_9 0023                               u1000 05B5  
                             u1001 05B4                               u1010 05BB  
                             u1011 05BA                               u1020 05C0  
                             u1100 0362                               u1021 05BF  
                             u1101 0361                               u1030 05C6  
                             u1031 05C5                               u1040 05CB  
                             u1200 03C6                               u1120 0376  
                             u1041 05CA                               u1201 03C5  
                             u1121 0375                               u1050 05D1  
                             u1210 0238                               u1051 05D0  
                             u1115 0367                               u1060 05D6  
                             u1300 0737                               u1220 06C6  
                             u1140 0391                               u1061 05D5  
                             u1301 0736                               u1221 06C5  
                             u1141 0390                               u1070 0110  
                             u1310 073D                               u1230 0700  
                             u1071 010F                               u1311 073C  
                             u1231 06FF                               u1135 0378  
                             u1215 0233                               u1320 0743  
                             u1240 0706                               u1160 03AF  
                             u1321 0742                               u1241 0705  
                             u1161 03AE                               u1145 038D  
                             u1170 0265                               u1090 0168  
                             u1330 0749                               u1250 070C  
                             u1091 0167                               u1331 0748  
                             u1251 070B                               u1155 03A1  
                             u1180 0287                               u1340 07D0  
                             u1260 0712                               u1085 01A7  
                             u1341 07CF                               u1261 0711  
                             u1190 0299                               u1270 0718  
                             u1191 0298                               u1271 0717  
                             u1280 0725                               u1345 07CC  
                             u1281 0724                               u1417 01D5  
                             u1290 0731                               u1291 0730  
                             u1507 0681                               u1427 05EF  
                             u1517 0696                               u1437 0600  
                             u1607 0322                               u1527 0769  
                             u1447 0611                               u1617 0337  
                             u1537 078F                               u1457 0622  
                             u1627 034C                               u1547 07BA  
                             u1467 0633                               u1637 029E  
                             u1557 0477                               u1477 0644  
                             u1647 02B2                               u1567 04D3  
                             u1487 0657                               u1657 02C6  
                             u1577 0509                               u1497 066C  
                             u1667 02DA                               u1587 02F8  
                             u1677 02EE                               u1597 030D  
                             u1687 00E9                               u1697 015D  
                             _RCEN 048B                               _RSEN 0489  
                ?_LCD_Write_String 0076                               _main 01B5  
               __size_of_LCD_Clear 0011                               btemp 007E  
                 __end_of_I2C_Wait 00CB                   __end_of_I2C_Stop 00B3  
                             start 0000                 ??_LCD_Write_String 0078  
             __size_of_System_Init 0019               LCD_Write_4Bit@Nibble 0073  
                     ?_LOCK_Change 0070                 __size_of_LOCK_Read 005A  
                 __end_of_LCD_Init 069E                   ?_I2C_Master_Init 0036  
      Keypad_Switch_Press_Scan@key 0072                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                            _EEADR 010D                   __end_of_LOCK_Run 07D5  
                  __end_of___lldiv 03B8                      ??_Keypad_Init 0070  
                            _PORTB 0006                              _TRISB 0086  
                            _SSPIF 0063             __end_of_LCD_Set_Cursor 0220  
                            _code1 0027                              _user1 0049  
            EEPROM_Write_Char@Data 0070                  __end_of_I2C_Start 00AA  
                            pclath 000A                              status 0003  
                            wtemp0 007E                     _LCD_Write_4Bit 0146  
                   _LCD_Write_Char 0198                    __initialization 07D5  
                     __end_of_main 01EA                  _IO_Expander_Write 012B  
              __size_of_LOCK_Enter 00A1                __size_of_LOCK_Write 005E  
         __end_of_EEPROM_Read_Char 00FD                 ?_IO_Expander_Write 0070  
                           ??_main 0045                  __end_of_LCD_Clear 00EC  
                        ??_LCD_CMD 0074         __size_of_EEPROM_Write_Char 001B  
          __size_of_Keypad_Scanner 00C4                ??_IO_Expander_Write 0071  
                  ?_LCD_Set_Cursor 0076                             _ADCON1 009F  
                __end_of_LOCK_Read 02F4                             _EEDATA 010C  
                           _EECON2 018D                __end_of_Keypad_Init 00BE  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013             __end_of_LCD_Write_4Bit 0161  
           __end_of_LCD_Write_Char 01B5          __end_of_IO_Expander_Write 0146  
                        ??___lldiv 0078                          ?_I2C_Wait 0070  
                        ?_I2C_Stop 0070  __size_of_Keypad_Switch_Press_Scan 0015  
        ?_Keypad_Switch_Press_Scan 0070            __end_of__initialization 07FC  
                        ?_LCD_Init 003E                    ?_LCD_Write_4Bit 0070  
                  ?_LCD_Write_Char 0070                          ?_LOCK_Run 0070  
                   __pcstackCOMMON 0070                       __pidataBANK0 0094  
             __size_of_LOCK_Change 00BD                     _OPTION_REGbits 0081  
                      _Keypad_Init 00B3                         ??_I2C_Wait 0070  
                       ??_I2C_Stop 0070                       ??_LOCK_Enter 007A  
                     ??_LOCK_Write 0072                         __pbssBANK0 0020  
                       ??_LCD_Init 0042                         ??_LOCK_Run 0039  
       __size_of_IO_Expander_Write 001B                         __pmaintext 01B5  
          __size_of_I2C_Write_Char 0010                 __end_of_LOCK_Enter 0459  
                          _ACKSTAT 048E          __size_of_LCD_Write_String 0042  
               __end_of_LOCK_Write 0352                            _LCD_CMD 017C  
                   _Keypad_Scanner 0516               LCD_Init@I2C_BaudRate 003E  
                     LOCK_Enter@kp 007C                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0003  
                    ??_System_Init 007E                          _I2C_Start 00A1  
                          ___lldiv 0352             __end_of_Keypad_Scanner 05DA  
                 ??_LCD_Set_Cursor 0077                            __ptext1 0112  
                          __ptext2 05DA                            __ptext3 0220  
                          __ptext4 0352                            __ptext5 00B3  
                          __ptext6 069E                            __ptext7 0459  
                          __ptext8 02F4                            __ptext9 0161  
                ?_EEPROM_Read_Char 0070                 ??_EEPROM_Read_Char 0070  
         __size_of_I2C_Master_Init 0038                          _LCD_Clear 00DB  
                          clrloop0 009A               end_of_initialization 07FC  
                        _LOCK_Read 029A                         ?_I2C_Start 0070  
                  ___lldiv@divisor 0070                    ___lldiv@counter 007D  
              __end_of_System_Init 012B                    ?_Keypad_Scanner 0070  
 __end_of_Keypad_Switch_Press_Scan 0112                         LCD_CMD@CMD 0075  
                       ?_LCD_Clear 0070                  __size_of_I2C_Wait 000D  
                __size_of_I2C_Stop 0009                   ??_LCD_Write_4Bit 0072  
                LCD_Write_String@i 007B                   ??_LCD_Write_Char 0074  
                       ?_LOCK_Read 0070                  __size_of_LCD_Init 00C4  
                __size_of_LOCK_Run 0137                     _I2C_Write_Char 00CB  
                 _LCD_Write_String 0258                       ?_Keypad_Init 0070  
              start_initialization 07D5                  ??_I2C_Master_Init 003A  
                      ??_I2C_Start 0070                        _System_Init 0112  
           __end_of_I2C_Write_Char 00DB                      ??_LOCK_Change 0036  
                      __pdataBANK0 0048                           ?_LCD_CMD 0070  
                        ___latbits 0002                      __pcstackBANK0 0036  
         _Keypad_Switch_Press_Scan 00FD                        ??_LCD_Clear 0076  
                      ??_LOCK_Read 0072              IO_Expander_Write@Data 0071  
                  ?_I2C_Write_Char 0070                           ?___lldiv 0070  
                        __pstrings 0003                __end_of_LOCK_Change 0516  
                         _I2C_Wait 00BE                           _I2C_Stop 00AA  
        __size_of_EEPROM_Read_Char 0011                           _LCD_Init 05DA  
                        clear_ram0 0099                           _LOCK_Run 069E  
                 ??_Keypad_Scanner 0070                        __stringbase 0012  
                 __size_of_LCD_CMD 001C               __size_of_Keypad_Init 000B  
         __end_of_LCD_Write_String 029A                         _EECON1bits 018C  
                      _LOCK_Change 0459                   __size_of___lldiv 0066  
               __end_of__stringtab 0013                    _I2C_Master_Init 0220  
                         __ptext10 029A                           __ptext11 00EC  
                         __ptext20 0146                           __ptext12 03B8  
                         __ptext21 012B                           __ptext13 01EA  
                         __ptext22 00CB                           __ptext14 00FD  
                         __ptext23 00AA                           __ptext15 0516  
                         __ptext24 00A1                           __ptext16 0258  
                         __ptext25 00BE                           __ptext17 0198  
                         __ptext18 00DB                           __ptext19 017C  
          __size_of_LCD_Set_Cursor 0036            EEPROM_Read_Char@Address 0070  
                  _BackLight_State 0048                      __size_of_main 0035  
             EEPROM_Read_Char@Data 0071                       ?_System_Init 0070  
       ??_Keypad_Switch_Press_Scan 0072           EEPROM_Write_Char@Address 0071  
                       _INTCONbits 000B                 LCD_Write_Char@Data 0075  
                       _LOCK_Enter 03B8                         _LOCK_Write 02F4  
                 _EEPROM_Read_Char 00EC                   ___lldiv@dividend 0074  
                 ??_I2C_Write_Char 0070                          stringcode 000D  
          __size_of_LCD_Write_4Bit 001B        I2C_Master_Init@I2C_BaudRate 0036  
          __size_of_LCD_Write_Char 001D            __end_of_I2C_Master_Init 0258  
                 ___lldiv@quotient 0079                           stringdir 000D  
                         stringtab 0003                  LCD_Set_Cursor@COL 0076  
                _EEPROM_Write_Char 0161                  LCD_Set_Cursor@ROW 0079  
               ?_EEPROM_Write_Char 0070                 I2C_Write_Char@Data 0070  
              ??_EEPROM_Write_Char 0071  
