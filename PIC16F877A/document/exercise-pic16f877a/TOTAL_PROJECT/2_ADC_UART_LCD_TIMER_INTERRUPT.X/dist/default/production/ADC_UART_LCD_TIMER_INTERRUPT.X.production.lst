

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 30 15:56:34 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  001D                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  0081                     	;# 
   234  0085                     	;# 
   235  0086                     	;# 
   236  0087                     	;# 
   237  0088                     	;# 
   238  0089                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  0091                     	;# 
   243  0092                     	;# 
   244  0093                     	;# 
   245  0094                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258                           
   259                           	psect	idataBANK0
   260  07F9                     __pidataBANK0:
   261                           
   262                           ;initializer for _a
   263  07F9  340A               	retlw	10
   264  07FA  3400               	retlw	0
   265                           
   266                           	psect	idataBANK2
   267  0ADB                     __pidataBANK2:
   268                           
   269                           ;initializer for ___cgram
   270  0ADB  340C               	retlw	12
   271  0ADC  3412               	retlw	18
   272  0ADD  3412               	retlw	18
   273  0ADE  340C               	retlw	12
   274  0ADF  3400               	retlw	0
   275  0AE0  3400               	retlw	0
   276  0AE1  3400               	retlw	0
   277  0AE2  3400               	retlw	0
   278  0AE3  3400               	retlw	0
   279  0AE4  3404               	retlw	4
   280  0AE5  340E               	retlw	14
   281  0AE6  341F               	retlw	31
   282  0AE7  340E               	retlw	14
   283  0AE8  3404               	retlw	4
   284  0AE9  3400               	retlw	0
   285  0AEA  3400               	retlw	0
   286  0AEB  3404               	retlw	4
   287  0AEC  3404               	retlw	4
   288  0AED  3404               	retlw	4
   289  0AEE  3404               	retlw	4
   290  0AEF  341F               	retlw	31
   291  0AF0  340E               	retlw	14
   292  0AF1  3404               	retlw	4
   293  0AF2  3400               	retlw	0
   294  0AF3  340A               	retlw	10
   295  0AF4  3415               	retlw	21
   296  0AF5  3411               	retlw	17
   297  0AF6  340A               	retlw	10
   298  0AF7  3404               	retlw	4
   299  0AF8  3400               	retlw	0
   300  0AF9  3400               	retlw	0
   301  0AFA  3400               	retlw	0
   302  0AFB  340A               	retlw	10
   303  0AFC  341F               	retlw	31
   304  0AFD  341F               	retlw	31
   305  0AFE  340E               	retlw	14
   306  0AFF  3404               	retlw	4
   307  0B00  3400               	retlw	0
   308  0B01  3400               	retlw	0
   309  0B02  3400               	retlw	0
   310  0B03  3400               	retlw	0
   311  0B04  3400               	retlw	0
   312  0B05  3400               	retlw	0
   313  0B06  3400               	retlw	0
   314  0B07  3400               	retlw	0
   315  0B08  3400               	retlw	0
   316  0B09  3400               	retlw	0
   317  0B0A  3400               	retlw	0
   318  0B0B  3400               	retlw	0
   319  0B0C  3400               	retlw	0
   320  0B0D  3400               	retlw	0
   321  0B0E  3400               	retlw	0
   322  0B0F  3400               	retlw	0
   323  0B10  3400               	retlw	0
   324  0B11  3400               	retlw	0
   325  0B12  3400               	retlw	0
   326  0B13  3400               	retlw	0
   327  0B14  3400               	retlw	0
   328  0B15  3400               	retlw	0
   329  0B16  3400               	retlw	0
   330  0B17  3400               	retlw	0
   331  0B18  3400               	retlw	0
   332  0B19  3400               	retlw	0
   333  0B1A  3400               	retlw	0
   334  000E                     _TMR1	set	14
   335  0008                     _PORTD	set	8
   336  0009                     _PORTEbits	set	9
   337  001A                     _RCREG	set	26
   338  0019                     _TXREG	set	25
   339  001E                     _ADRESH	set	30
   340  001F                     _ADCON0	set	31
   341  0045                     _RD5	set	69
   342  0046                     _RD6	set	70
   343  0044                     _RD4	set	68
   344  0085                     _T1CKPS1	set	133
   345  0084                     _T1CKPS0	set	132
   346  0083                     _T1OSCEN	set	131
   347  0082                     _T1SYNC	set	130
   348  0081                     _TMR1CS	set	129
   349  0080                     _TMR1ON	set	128
   350  0060                     _TMR1IF	set	96
   351  0065                     _RCIF	set	101
   352  00C1                     _OERR	set	193
   353  00C6                     _RX9	set	198
   354  00C4                     _CREN	set	196
   355  005F                     _GIE	set	95
   356  005E                     _PEIE	set	94
   357  00C7                     _SPEN	set	199
   358  00FA                     _GO_DONE	set	250
   359  00F8                     _ADON	set	248
   360  00FD                     _CHS2	set	253
   361  00FC                     _CHS1	set	252
   362  00FB                     _CHS0	set	251
   363  0088                     _TRISDbits	set	136
   364  0088                     _TRISD	set	136
   365  0089                     _TRISEbits	set	137
   366  0099                     _SPBRG	set	153
   367  009E                     _ADRESL	set	158
   368  009F                     _ADCON1	set	159
   369  0460                     _TMR1IE	set	1120
   370  04C1                     _TRMT	set	1217
   371  04C6                     _TX9	set	1222
   372  04C5                     _TXEN	set	1221
   373  0465                     _RCIE	set	1125
   374  043E                     _TRISC6	set	1086
   375  043F                     _TRISC7	set	1087
   376  04C4                     _SYNC	set	1220
   377  04C2                     _BRGH	set	1218
   378                           
   379                           	psect	strings
   380  0800                     __pstrings:
   381  0800                     stringtab:
   382  0800                     __stringtab:
   383  0800                     stringcode:	
   384                           ;	String table - string pointers are 1 byte each
   385                           
   386  0800                     stringdir:
   387  0800  3008               	movlw	high stringdir
   388  0801  008A               	movwf	10
   389  0802  0804               	movf	4,w
   390  0803  0A84               	incf	4,f
   391  0804  0782               	addwf	2,f
   392  0805                     __stringbase:
   393  0805  3400               	retlw	0
   394  0806                     __end_of__stringtab:
   395  0806                     STR_3:
   396  0806  3444               	retlw	68	;'D'
   397  0807  346F               	retlw	111	;'o'
   398  0808  3420               	retlw	32	;' '
   399  0809  3455               	retlw	85	;'U'
   400  080A  342F               	retlw	47	;'/'
   401  080B  3449               	retlw	73	;'I'
   402  080C  342E               	retlw	46	;'.'
   403  080D  342E               	retlw	46	;'.'
   404  080E  342E               	retlw	46	;'.'
   405  080F  342E               	retlw	46	;'.'
   406  0810  3400               	retlw	0
   407  0811                     STR_1:
   408  0811  3453               	retlw	83	;'S'
   409  0812  3461               	retlw	97	;'a'
   410  0813  346E               	retlw	110	;'n'
   411  0814  3467               	retlw	103	;'g'
   412  0815  3400               	retlw	0
   413  0816                     STR_4:
   414  0816  3449               	retlw	73	;'I'
   415  0817  343D               	retlw	61	;'='
   416  0818  3420               	retlw	32	;' '
   417  0819  3400               	retlw	0
   418  081A                     STR_5:
   419  081A  3455               	retlw	85	;'U'
   420  081B  343D               	retlw	61	;'='
   421  081C  3420               	retlw	32	;' '
   422  081D  3400               	retlw	0
   423  081E                     STR_2:
   424  081E  3454               	retlw	84	;'T'
   425  081F  3461               	retlw	97	;'a'
   426  0820  3474               	retlw	116	;'t'
   427  0821  3400               	retlw	0
   428  0816                     
   429                           	psect	cinit
   430  0015                     start_initialization:	
   431                           ; #config settings
   432                           
   433  0015                     __initialization:
   434                           
   435                           ; Initialize objects allocated to BANK2
   436  0015  1783               	bsf	3,7	;select IRP bank2
   437  0016  3050               	movlw	low (__pdataBANK2+64)
   438  0017  00FD               	movwf	btemp+-1
   439  0018  300A               	movlw	high __pidataBANK2
   440  0019  00FE               	movwf	btemp
   441  001A  30DB               	movlw	low __pidataBANK2
   442  001B  00FF               	movwf	btemp+1
   443  001C  3010               	movlw	low __pdataBANK2
   444  001D  0084               	movwf	4
   445  001E  120A  158A  21E4  120A  118A  	fcall	init_ram0
   446                           
   447                           ; Initialize objects allocated to BANK0
   448  0023  120A  118A  27F9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   449  0028  00D8               	movwf	__pdataBANK0& (0+127)
   450  0029  120A  118A  27FA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   451  002E  00D9               	movwf	(__pdataBANK0+1)& (0+127)
   452                           
   453                           ; Clear objects allocated to BANK3
   454  002F  3090               	movlw	low __pbssBANK3
   455  0030  0084               	movwf	4
   456  0031  30C2               	movlw	low (__pbssBANK3+50)
   457  0032  120A  158A  21CF  120A  118A  	fcall	clear_ram0
   458                           
   459                           ; Clear objects allocated to BANK1
   460  0037  1383               	bcf	3,7	;select IRP bank0
   461  0038  30CB               	movlw	low __pbssBANK1
   462  0039  0084               	movwf	4
   463  003A  30E0               	movlw	low (__pbssBANK1+21)
   464  003B  120A  158A  21CF  120A  118A  	fcall	clear_ram0
   465                           
   466                           ; Clear objects allocated to BANK0
   467  0040  303E               	movlw	low __pbssBANK0
   468  0041  0084               	movwf	4
   469  0042  3058               	movlw	low (__pbssBANK0+26)
   470  0043  120A  158A  21CF  120A  118A  	fcall	clear_ram0
   471  0048                     end_of_initialization:	
   472                           ;End of C runtime variable initialization code
   473                           
   474  0048                     __end_of__initialization:
   475  0048  0183               	clrf	3
   476  0049  120A  118A  2BAD   	ljmp	_main	;jump to C main() function
   477                           
   478                           	psect	bssBANK0
   479  003E                     __pbssBANK0:
   480  003E                     _dienap:
   481  003E                     	ds	4
   482  0042                     _dong:
   483  0042                     	ds	4
   484  0046                     display@F1096:
   485  0046                     	ds	3
   486  0049                     _count_s:
   487  0049                     	ds	2
   488  004B                     _count:
   489  004B                     	ds	2
   490  004D                     _i:
   491  004D                     	ds	2
   492  004F                     _check_sang:
   493  004F                     	ds	1
   494  0050                     _in_count:
   495  0050                     	ds	1
   496  0051                     _do_dienap:
   497  0051                     	ds	1
   498  0052                     _in_buffer:
   499  0052                     	ds	6
   500                           
   501                           	psect	dataBANK0
   502  0058                     __pdataBANK0:
   503  0058                     _a:
   504  0058                     	ds	2
   505                           
   506                           	psect	bssBANK1
   507  00CB                     __pbssBANK1:
   508  00CB                     _commbuffer:
   509  00CB                     	ds	10
   510  00D5                     LCDWriteInt@F912:
   511  00D5                     	ds	5
   512  00DA                     main@F1087:
   513  00DA                     	ds	3
   514  00DD                     _count1:
   515  00DD                     	ds	2
   516  00DF                     _adc_ok:
   517  00DF                     	ds	1
   518                           
   519                           	psect	bssBANK3
   520  0190                     __pbssBANK3:
   521  0190                     _str:
   522  0190                     	ds	50
   523                           
   524                           	psect	dataBANK2
   525  0110                     __pdataBANK2:
   526  0110                     ___cgram:
   527  0110                     	ds	64
   528                           
   529                           	psect	inittext
   530  09E0                     init_fetch0:	
   531                           ;	Called with low address in FSR and high address in W
   532                           
   533  09E0  087E               	movf	btemp,w
   534  09E1  008A               	movwf	10
   535  09E2  087F               	movf	btemp+1,w
   536  09E3  0082               	movwf	2
   537  09E4                     init_ram0:	
   538                           ;Called with:
   539                           ;	high address of idata address in btemp 
   540                           ;	low address of idata address in btemp+1 
   541                           ;	low address of data in FSR
   542                           ;	high address + 1 of data in btemp-1
   543                           
   544  09E4  120A  158A  21E0  120A  158A  	fcall	init_fetch0
   545  09E9  0080               	movwf	0
   546  09EA  0A84               	incf	4,f
   547  09EB  0804               	movf	4,w
   548  09EC  067D               	xorwf	btemp+-1,w
   549  09ED  1903               	btfsc	3,2
   550  09EE  3400               	retlw	0
   551  09EF  0AFF               	incf	btemp+1,f
   552  09F0  1903               	btfsc	3,2
   553  09F1  0AFE               	incf	btemp,f
   554  09F2  29E4               	goto	init_ram0
   555                           
   556                           	psect	clrtext
   557  09CF                     clear_ram0:	
   558                           ;	Called with FSR containing the base address, and
   559                           ;	W with the last address+1
   560                           
   561  09CF  0064               	clrwdt	;clear the watchdog before getting into this loop
   562  09D0                     clrloop0:
   563  09D0  0180               	clrf	0	;clear RAM location pointed to by FSR
   564  09D1  0A84               	incf	4,f	;increment pointer
   565  09D2  0604               	xorwf	4,w	;XOR with final address
   566  09D3  1903               	btfsc	3,2	;have we reached the end yet?
   567  09D4  3400               	retlw	0	;all done for this memory range, return
   568  09D5  0604               	xorwf	4,w	;XOR again to restore value
   569  09D6  29D0               	goto	clrloop0	;do the next byte
   570                           
   571                           	psect	cstackBANK1
   572  00A0                     __pcstackBANK1:
   573  00A0                     ??_TIMER1_Init:
   574  00A0                     ??_LCDBusyLoop:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  00A0                     ??_ADC_Init:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  00A0                     ?___awdiv:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  00A0                     ?___awmod:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  00A0                     ?___lwmod:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  00A0                     ?___aldiv:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  00A0                     ?___fltol:	
   593                           ; 4 bytes @ 0x0
   594                           
   595  00A0                     ___awdiv@divisor:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  00A0                     ___awmod@divisor:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  00A0                     ___lwmod@divisor:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  00A0                     ___aldiv@divisor:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  00A0                     ___fltol@f1:	
   608                           ; 4 bytes @ 0x0
   609                           
   610                           
   611                           ; 4 bytes @ 0x0
   612  00A0                     	ds	1
   613  00A1                     LCDBusyLoop@busy:
   614                           
   615                           ; 1 bytes @ 0x1
   616  00A1                     	ds	1
   617  00A2                     LCDBusyLoop@temp:
   618  00A2                     ___awdiv@dividend:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  00A2                     ___awmod@dividend:	
   622                           ; 2 bytes @ 0x2
   623                           
   624  00A2                     ___lwmod@dividend:	
   625                           ; 2 bytes @ 0x2
   626                           
   627                           
   628                           ; 2 bytes @ 0x2
   629  00A2                     	ds	1
   630  00A3                     LCDBusyLoop@status:
   631                           
   632                           ; 1 bytes @ 0x3
   633  00A3                     	ds	1
   634  00A4                     ?_LCDByte:
   635  00A4                     ??___awdiv:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  00A4                     ??___awmod:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  00A4                     ??___fltol:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  00A4                     ??___lwmod:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  00A4                     LCDByte@isdata:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  00A4                     ___awdiv@counter:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  00A4                     ___awmod@counter:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  00A4                     ___lwmod@counter:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  00A4                     ___aldiv@dividend:	
   660                           ; 1 bytes @ 0x4
   661                           
   662                           
   663                           ; 4 bytes @ 0x4
   664  00A4                     	ds	1
   665  00A5                     ??_LCDByte:
   666  00A5                     ?___lwdiv:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  00A5                     ___awdiv@sign:	
   670                           ; 2 bytes @ 0x5
   671                           
   672  00A5                     ___awmod@sign:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  00A5                     ___lwdiv@divisor:	
   676                           ; 1 bytes @ 0x5
   677                           
   678                           
   679                           ; 2 bytes @ 0x5
   680  00A5                     	ds	1
   681  00A6                     LCDByte@hn:
   682  00A6                     ___awdiv@quotient:	
   683                           ; 1 bytes @ 0x6
   684                           
   685                           
   686                           ; 2 bytes @ 0x6
   687  00A6                     	ds	1
   688  00A7                     LCDByte@ln:
   689  00A7                     ___lwdiv@dividend:	
   690                           ; 1 bytes @ 0x7
   691                           
   692                           
   693                           ; 2 bytes @ 0x7
   694  00A7                     	ds	1
   695  00A8                     ??___aldiv:
   696  00A8                     LCDByte@c:	
   697                           ; 1 bytes @ 0x8
   698                           
   699  00A8                     ___fltol@sign1:	
   700                           ; 1 bytes @ 0x8
   701                           
   702                           
   703                           ; 1 bytes @ 0x8
   704  00A8                     	ds	1
   705  00A9                     ??___lwdiv:
   706  00A9                     LCDByte@temp:	
   707                           ; 1 bytes @ 0x9
   708                           
   709  00A9                     ___aldiv@counter:	
   710                           ; 1 bytes @ 0x9
   711                           
   712  00A9                     ___fltol@exp1:	
   713                           ; 1 bytes @ 0x9
   714                           
   715  00A9                     ___lwdiv@counter:	
   716                           ; 1 bytes @ 0x9
   717                           
   718                           
   719                           ; 1 bytes @ 0x9
   720  00A9                     	ds	1
   721  00AA                     ??_LCDInit:
   722  00AA                     ?_LCDGotoXY:	
   723                           ; 1 bytes @ 0xA
   724                           
   725  00AA                     ??_LCDWriteString:	
   726                           ; 1 bytes @ 0xA
   727                           
   728  00AA                     LCDWriteString@cc:	
   729                           ; 1 bytes @ 0xA
   730                           
   731  00AA                     LCDGotoXY@y:	
   732                           ; 1 bytes @ 0xA
   733                           
   734  00AA                     ___aldiv@sign:	
   735                           ; 1 bytes @ 0xA
   736                           
   737  00AA                     ___lwdiv@quotient:	
   738                           ; 1 bytes @ 0xA
   739                           
   740                           
   741                           ; 2 bytes @ 0xA
   742  00AA                     	ds	1
   743  00AB                     ??_LCDGotoXY:
   744  00AB                     LCDWriteString@msg:	
   745                           ; 1 bytes @ 0xB
   746                           
   747  00AB                     ___aldiv@quotient:	
   748                           ; 1 bytes @ 0xB
   749                           
   750                           
   751                           ; 4 bytes @ 0xB
   752  00AB                     	ds	1
   753  00AC                     ??_UART_Write_data:
   754  00AC                     LCDInit@style:	
   755                           ; 1 bytes @ 0xC
   756                           
   757                           
   758                           ; 1 bytes @ 0xC
   759  00AC                     	ds	1
   760  00AD                     LCDInit@__i:
   761  00AD                     LCDGotoXY@x:	
   762                           ; 1 bytes @ 0xD
   763                           
   764                           
   765                           ; 1 bytes @ 0xD
   766  00AD                     	ds	1
   767  00AE                     UART_Write_data@Value:
   768                           
   769                           ; 1 bytes @ 0xE
   770  00AE                     	ds	1
   771  00AF                     ?_UART_Init:
   772  00AF                     UART_Write_data@k:	
   773                           ; 1 bytes @ 0xF
   774                           
   775  00AF                     UART_Init@baudrate:	
   776                           ; 2 bytes @ 0xF
   777                           
   778                           
   779                           ; 4 bytes @ 0xF
   780  00AF                     	ds	2
   781  00B1                     UART_Write_data@i:
   782                           
   783                           ; 1 bytes @ 0x11
   784  00B1                     	ds	2
   785  00B3                     ??_UART_Init:
   786                           
   787                           ; 1 bytes @ 0x13
   788  00B3                     	ds	12
   789  00BF                     UART_Init@x:
   790                           
   791                           ; 2 bytes @ 0x1F
   792  00BF                     	ds	2
   793  00C1                     ??_main:
   794                           
   795                           ; 1 bytes @ 0x21
   796  00C1                     	ds	3
   797  00C4                     _main$911:
   798                           
   799                           ; 2 bytes @ 0x24
   800  00C4                     	ds	2
   801  00C6                     main@digit:
   802                           
   803                           ; 3 bytes @ 0x26
   804  00C6                     	ds	3
   805  00C9                     main@adc_value:
   806                           
   807                           ; 2 bytes @ 0x29
   808  00C9                     	ds	2
   809                           
   810                           	psect	cstackCOMMON
   811  0070                     __pcstackCOMMON:
   812  0070                     ?_TIMER1_Init:
   813  0070                     ?_LCDInit:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_LCDWriteString:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_UART_Write_data:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_LCDBusyLoop:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_ADC_Init:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_ISR:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_main:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_strncmp:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?__Umul8_16:	
   838                           ; 2 bytes @ 0x0
   839                           
   840  0070                     ?_ADC_Read:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0070                     __Umul8_16@multiplicand:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0070                     strncmp@s2:	
   847                           ; 1 bytes @ 0x0
   848                           
   849                           
   850                           ; 1 bytes @ 0x0
   851  0070                     	ds	1
   852  0071                     strncmp@len:
   853                           
   854                           ; 2 bytes @ 0x1
   855  0071                     	ds	1
   856  0072                     ??__Umul8_16:
   857  0072                     ??_ADC_Read:	
   858                           ; 1 bytes @ 0x2
   859                           
   860                           
   861                           ; 1 bytes @ 0x2
   862  0072                     	ds	1
   863  0073                     ??_strncmp:
   864                           
   865                           ; 1 bytes @ 0x3
   866  0073                     	ds	1
   867  0074                     ADC_Read@value:
   868  0074                     __Umul8_16@product:	
   869                           ; 2 bytes @ 0x4
   870                           
   871                           
   872                           ; 2 bytes @ 0x4
   873  0074                     	ds	1
   874  0075                     strncmp@s1:
   875                           
   876                           ; 1 bytes @ 0x5
   877  0075                     	ds	1
   878  0076                     ADC_Read@Channel:
   879  0076                     __Umul8_16@word_mpld:	
   880                           ; 1 bytes @ 0x6
   881                           
   882                           
   883                           ; 2 bytes @ 0x6
   884  0076                     	ds	1
   885  0077                     ?___xxtofl:
   886  0077                     ___xxtofl@val:	
   887                           ; 4 bytes @ 0x7
   888                           
   889                           
   890                           ; 4 bytes @ 0x7
   891  0077                     	ds	1
   892  0078                     __Umul8_16@multiplier:
   893                           
   894                           ; 1 bytes @ 0x8
   895  0078                     	ds	1
   896  0079                     ??___flmul:
   897                           
   898                           ; 1 bytes @ 0x9
   899  0079                     	ds	5
   900                           
   901                           	psect	cstackBANK0
   902  0020                     __pcstackBANK0:
   903  0020                     ??___xxtofl:
   904  0020                     ?___flmul:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0020                     ___flmul@b:	
   908                           ; 4 bytes @ 0x0
   909                           
   910                           
   911                           ; 4 bytes @ 0x0
   912  0020                     	ds	4
   913  0024                     ___xxtofl@sign:
   914  0024                     ___flmul@a:	
   915                           ; 1 bytes @ 0x4
   916                           
   917                           
   918                           ; 4 bytes @ 0x4
   919  0024                     	ds	1
   920  0025                     ___xxtofl@exp:
   921                           
   922                           ; 1 bytes @ 0x5
   923  0025                     	ds	1
   924  0026                     ___xxtofl@arg:
   925                           
   926                           ; 4 bytes @ 0x6
   927  0026                     	ds	2
   928  0028                     ___flmul@sign:
   929                           
   930                           ; 1 bytes @ 0x8
   931  0028                     	ds	1
   932  0029                     ___flmul@grs:
   933                           
   934                           ; 4 bytes @ 0x9
   935  0029                     	ds	4
   936  002D                     ___flmul@aexp:
   937                           
   938                           ; 1 bytes @ 0xD
   939  002D                     	ds	1
   940  002E                     ___flmul@bexp:
   941                           
   942                           ; 1 bytes @ 0xE
   943  002E                     	ds	1
   944  002F                     ___flmul@prod:
   945                           
   946                           ; 4 bytes @ 0xF
   947  002F                     	ds	4
   948  0033                     ___flmul@temp:
   949                           
   950                           ; 2 bytes @ 0x13
   951  0033                     	ds	2
   952  0035                     ??_ISR:
   953                           
   954                           ; 1 bytes @ 0x15
   955  0035                     	ds	8
   956  003D                     ISR@ch:
   957                           
   958                           ; 1 bytes @ 0x1D
   959  003D                     	ds	1
   960                           
   961                           	psect	maintext
   962  03AD                     __pmaintext:	
   963 ;;
   964 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   965 ;;
   966 ;; *************** function _main *****************
   967 ;; Defined at:
   968 ;;		line 109 in file "main.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  digit           3   38[BANK1 ] unsigned char [3]
   973 ;;  adc_value       2   41[BANK1 ] unsigned int 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : B00/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       7       0       0
   985 ;;      Temps:          0       0       3       0       0
   986 ;;      Totals:         0       0      10       0       0
   987 ;;Total ram usage:       10 bytes
   988 ;; Hardware stack levels required when called:    6
   989 ;; This function calls:
   990 ;;		_ADC_Init
   991 ;;		_LCDByte
   992 ;;		_LCDGotoXY
   993 ;;		_LCDInit
   994 ;;		_LCDWriteString
   995 ;;		_TIMER1_Init
   996 ;;		_UART_Init
   997 ;;		_UART_Write_data
   998 ;;		___fltol
   999 ;;		___lwdiv
  1000 ;;		___lwmod
  1001 ;; This function is called by:
  1002 ;;		Startup code after reset
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _main
  1008  03AD                     _main:
  1009  03AD                     l3270:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1012                           
  1013                           
  1014                           ;main.c: 111:    unsigned char digit[3] = {0, 0, 0};
  1015  03AD  3000               	movlw	0
  1016  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1017  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1018  03B0  00C6               	movwf	main@digit^(0+128)
  1019  03B1  3000               	movlw	0
  1020  03B2  00C7               	movwf	(main@digit+1)^(0+128)
  1021  03B3  3000               	movlw	0
  1022  03B4  00C8               	movwf	(main@digit+2)^(0+128)
  1023  03B5                     l3272:
  1024  03B5                     l3274:
  1025                           
  1026                           ;main.c: 116:     TRISEbits.TRISE2 =0;
  1027  03B5  1109               	bcf	9,2	;volatile
  1028  03B6                     l3276:
  1029                           
  1030                           ;main.c: 117:     PORTEbits.RE2=0;
  1031  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1032  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1033  03B8  1109               	bcf	9,2	;volatile
  1034  03B9                     l3278:
  1035                           
  1036                           ;main.c: 118:     ADC_Init();
  1037  03B9  120A  158A  21D7  120A  118A  	fcall	_ADC_Init
  1038  03BE                     l3280:
  1039                           
  1040                           ;main.c: 119:     TIMER1_Init();
  1041  03BE  120A  158A  21F3  120A  118A  	fcall	_TIMER1_Init
  1042  03C3                     l3282:
  1043                           
  1044                           ;main.c: 121:     LCDInit(0B00000000);
  1045  03C3  3000               	movlw	0
  1046  03C4  120A  158A  246A  120A  118A  	fcall	_LCDInit
  1047  03C9                     l3284:
  1048                           
  1049                           ;main.c: 122:     (LCDByte(0b00000001,0));
  1050  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1051  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1052  03CB  01A4               	clrf	LCDByte@isdata^(0+128)
  1053  03CC  3001               	movlw	1
  1054  03CD  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1055  03D2                     l3286:
  1056                           
  1057                           ;main.c: 124:     UART_Init(9600);
  1058  03D2  3000               	movlw	0
  1059  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  1060  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  1061  03D5  00B2               	movwf	(UART_Init@baudrate+3)^(0+128)
  1062  03D6  3000               	movlw	0
  1063  03D7  00B1               	movwf	(UART_Init@baudrate+2)^(0+128)
  1064  03D8  3025               	movlw	37
  1065  03D9  00B0               	movwf	(UART_Init@baudrate+1)^(0+128)
  1066  03DA  3080               	movlw	128
  1067  03DB  00AF               	movwf	UART_Init@baudrate^(0+128)
  1068  03DC  120A  118A  26D4  120A  118A  	fcall	_UART_Init
  1069  03E1                     l3288:
  1070                           
  1071                           ;main.c: 126:     LCDGotoXY(0,0);
  1072  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  1073  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  1074  03E3  01AA               	clrf	LCDGotoXY@y^(0+128)
  1075  03E4  3000               	movlw	0
  1076  03E5  120A  158A  222F  120A  118A  	fcall	_LCDGotoXY
  1077  03EA                     l3290:
  1078                           
  1079                           ;main.c: 127:     LCDWriteString("Do U/I....");
  1080  03EA  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1081  03EB  120A  158A  253C  120A  118A  	fcall	_LCDWriteString
  1082  03F0                     l3292:
  1083                           
  1084                           ;main.c: 128:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1085  03F0  3015               	movlw	21
  1086  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  1087  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  1088  03F3  00C3               	movwf	(??_main^(0+128)+2)
  1089  03F4  304B               	movlw	75
  1090  03F5  00C2               	movwf	(??_main^(0+128)+1)
  1091  03F6  30BD               	movlw	189
  1092  03F7  00C1               	movwf	??_main^(0+128)
  1093  03F8                     u3927:
  1094  03F8  0BC1               	decfsz	??_main^(0+128),f
  1095  03F9  2BF8               	goto	u3927
  1096  03FA  0BC2               	decfsz	(??_main^(0+128)+1),f
  1097  03FB  2BF8               	goto	u3927
  1098  03FC  0BC3               	decfsz	(??_main^(0+128)+2),f
  1099  03FD  2BF8               	goto	u3927
  1100  03FE  2BFF               	nop2
  1101  03FF                     l3294:
  1102                           
  1103                           ;main.c: 129:     (LCDByte(0b00000001,0));
  1104  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0401  01A4               	clrf	LCDByte@isdata^(0+128)
  1107  0402  3001               	movlw	1
  1108  0403  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1109  0408                     l3296:
  1110                           
  1111                           ;main.c: 132:     {;main.c: 136:         if(adc_ok && count1==25)
  1112  0408  1683               	bsf	3,5	;RP0=1, select bank1
  1113  0409  1303               	bcf	3,6	;RP1=0, select bank1
  1114  040A  085F               	movf	_adc_ok^(0+128),w
  1115  040B  1903               	btfsc	3,2
  1116  040C  2C0E               	goto	u3821
  1117  040D  2C0F               	goto	u3820
  1118  040E                     u3821:
  1119  040E  2C08               	goto	l3296
  1120  040F                     u3820:
  1121  040F                     l3298:
  1122  040F  3019               	movlw	25
  1123  0410  065D               	xorwf	_count1^(0+128),w
  1124  0411  045E               	iorwf	(_count1+1)^(0+128),w
  1125  0412  1D03               	btfss	3,2
  1126  0413  2C15               	goto	u3831
  1127  0414  2C16               	goto	u3830
  1128  0415                     u3831:
  1129  0415  2C08               	goto	l3296
  1130  0416                     u3830:
  1131  0416                     l3300:
  1132                           
  1133                           ;main.c: 137:     {;main.c: 138:         count1=0;
  1134  0416  01DD               	clrf	_count1^(0+128)
  1135  0417  01DE               	clrf	(_count1+1)^(0+128)
  1136  0418                     l3302:
  1137                           
  1138                           ;main.c: 139:         adc_value = (unsigned int)dong;
  1139  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1141  041A  0845               	movf	_dong+3,w
  1142  041B  1683               	bsf	3,5	;RP0=1, select bank1
  1143  041C  1303               	bcf	3,6	;RP1=0, select bank1
  1144  041D  00A3               	movwf	(___fltol@f1+3)^(0+128)
  1145  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1146  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0420  0844               	movf	_dong+2,w
  1148  0421  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0422  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0423  00A2               	movwf	(___fltol@f1+2)^(0+128)
  1151  0424  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0425  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0426  0843               	movf	_dong+1,w
  1154  0427  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0428  1303               	bcf	3,6	;RP1=0, select bank1
  1156  0429  00A1               	movwf	(___fltol@f1+1)^(0+128)
  1157  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1158  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1159  042C  0842               	movf	_dong,w
  1160  042D  1683               	bsf	3,5	;RP0=1, select bank1
  1161  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1162  042F  00A0               	movwf	___fltol@f1^(0+128)
  1163  0430  120A  158A  25A9  120A  118A  	fcall	___fltol
  1164  0435  1683               	bsf	3,5	;RP0=1, select bank1
  1165  0436  1303               	bcf	3,6	;RP1=0, select bank1
  1166  0437  0821               	movf	(?___fltol+1)^(0+128),w
  1167  0438  00CA               	movwf	(main@adc_value+1)^(0+128)
  1168  0439  0820               	movf	?___fltol^(0+128),w
  1169  043A  00C9               	movwf	main@adc_value^(0+128)
  1170  043B                     l3304:
  1171                           
  1172                           ;main.c: 140:         digit[2] = adc_value/100;
  1173  043B  3064               	movlw	100
  1174  043C  00A5               	movwf	___lwdiv@divisor^(0+128)
  1175  043D  3000               	movlw	0
  1176  043E  00A6               	movwf	(___lwdiv@divisor^(0+128)+1)
  1177  043F  084A               	movf	(main@adc_value+1)^(0+128),w
  1178  0440  00A8               	movwf	(___lwdiv@dividend+1)^(0+128)
  1179  0441  0849               	movf	main@adc_value^(0+128),w
  1180  0442  00A7               	movwf	___lwdiv@dividend^(0+128)
  1181  0443  120A  118A  27B3  120A  118A  	fcall	___lwdiv
  1182  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1184  044A  0825               	movf	?___lwdiv^(0+128),w
  1185  044B  00FF               	movwf	btemp+1
  1186  044C  087F               	movf	btemp+1,w
  1187  044D  00C8               	movwf	(main@digit^(0+128)+2)
  1188  044E                     l3306:
  1189                           
  1190                           ;main.c: 141:         digit[1] = (adc_value%100)/10;
  1191  044E  300A               	movlw	10
  1192  044F  00A5               	movwf	___lwdiv@divisor^(0+128)
  1193  0450  3000               	movlw	0
  1194  0451  00A6               	movwf	(___lwdiv@divisor^(0+128)+1)
  1195  0452  084A               	movf	(main@adc_value+1)^(0+128),w
  1196  0453  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1197  0454  0849               	movf	main@adc_value^(0+128),w
  1198  0455  00A2               	movwf	___lwmod@dividend^(0+128)
  1199  0456  3064               	movlw	100
  1200  0457  00A0               	movwf	___lwmod@divisor^(0+128)
  1201  0458  3000               	movlw	0
  1202  0459  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1203  045A  120A  158A  229F  120A  118A  	fcall	___lwmod
  1204  045F  1683               	bsf	3,5	;RP0=1, select bank1
  1205  0460  1303               	bcf	3,6	;RP1=0, select bank1
  1206  0461  0821               	movf	(?___lwmod+1)^(0+128),w
  1207  0462  00A8               	movwf	(___lwdiv@dividend+1)^(0+128)
  1208  0463  0820               	movf	?___lwmod^(0+128),w
  1209  0464  00A7               	movwf	___lwdiv@dividend^(0+128)
  1210  0465  120A  118A  27B3  120A  118A  	fcall	___lwdiv
  1211  046A  1683               	bsf	3,5	;RP0=1, select bank1
  1212  046B  1303               	bcf	3,6	;RP1=0, select bank1
  1213  046C  0825               	movf	?___lwdiv^(0+128),w
  1214  046D  00FF               	movwf	btemp+1
  1215  046E  087F               	movf	btemp+1,w
  1216  046F  00C7               	movwf	(main@digit^(0+128)+1)
  1217  0470                     l3308:
  1218                           
  1219                           ;main.c: 142:         digit[1] = (adc_value%100)%10;
  1220  0470  084A               	movf	(main@adc_value+1)^(0+128),w
  1221  0471  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1222  0472  0849               	movf	main@adc_value^(0+128),w
  1223  0473  00A2               	movwf	___lwmod@dividend^(0+128)
  1224  0474  3064               	movlw	100
  1225  0475  00A0               	movwf	___lwmod@divisor^(0+128)
  1226  0476  3000               	movlw	0
  1227  0477  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1228  0478  120A  158A  229F  120A  118A  	fcall	___lwmod
  1229  047D  1683               	bsf	3,5	;RP0=1, select bank1
  1230  047E  1303               	bcf	3,6	;RP1=0, select bank1
  1231  047F  0821               	movf	(?___lwmod+1)^(0+128),w
  1232  0480  00C5               	movwf	(_main$911+1)^(0+128)
  1233  0481  0820               	movf	?___lwmod^(0+128),w
  1234  0482  00C4               	movwf	_main$911^(0+128)
  1235  0483                     l3310:
  1236                           
  1237                           ;main.c: 142:         digit[1] = (adc_value%100)%10;
  1238  0483  300A               	movlw	10
  1239  0484  00A0               	movwf	___lwmod@divisor^(0+128)
  1240  0485  3000               	movlw	0
  1241  0486  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1242  0487  0845               	movf	(_main$911+1)^(0+128),w
  1243  0488  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1244  0489  0844               	movf	_main$911^(0+128),w
  1245  048A  00A2               	movwf	___lwmod@dividend^(0+128)
  1246  048B  120A  158A  229F  120A  118A  	fcall	___lwmod
  1247  0490  1683               	bsf	3,5	;RP0=1, select bank1
  1248  0491  1303               	bcf	3,6	;RP1=0, select bank1
  1249  0492  0820               	movf	?___lwmod^(0+128),w
  1250  0493  00FF               	movwf	btemp+1
  1251  0494  087F               	movf	btemp+1,w
  1252  0495  00C7               	movwf	(main@digit^(0+128)+1)
  1253  0496                     l3312:
  1254                           
  1255                           ;main.c: 143:         UART_Write_data(adc_value);
  1256  0496  0849               	movf	main@adc_value^(0+128),w
  1257  0497  120A  158A  2625  120A  118A  	fcall	_UART_Write_data
  1258  049C                     l3314:
  1259                           
  1260                           ;main.c: 145:         LCDGotoXY(0, 1);
  1261  049C  1683               	bsf	3,5	;RP0=1, select bank1
  1262  049D  1303               	bcf	3,6	;RP1=0, select bank1
  1263  049E  01AA               	clrf	LCDGotoXY@y^(0+128)
  1264  049F  0AAA               	incf	LCDGotoXY@y^(0+128),f
  1265  04A0  3000               	movlw	0
  1266  04A1  120A  158A  222F  120A  118A  	fcall	_LCDGotoXY
  1267  04A6                     l3316:
  1268                           
  1269                           ;main.c: 146:         LCDWriteString("I= ");
  1270  04A6  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1271  04A7  120A  158A  253C  120A  118A  	fcall	_LCDWriteString
  1272  04AC                     l3318:
  1273                           
  1274                           ;main.c: 147:         (LCDByte(digit[2]+0x30,1));
  1275  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  1276  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  1277  04AE  01A4               	clrf	LCDByte@isdata^(0+128)
  1278  04AF  0AA4               	incf	LCDByte@isdata^(0+128),f
  1279  04B0  0848               	movf	(main@digit^(0+128)+2),w
  1280  04B1  3E30               	addlw	48
  1281  04B2  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1282  04B7                     l3320:
  1283                           
  1284                           ;main.c: 148:         (LCDByte('.',1));
  1285  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  1286  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  1287  04B9  01A4               	clrf	LCDByte@isdata^(0+128)
  1288  04BA  0AA4               	incf	LCDByte@isdata^(0+128),f
  1289  04BB  302E               	movlw	46
  1290  04BC  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1291  04C1                     l3322:
  1292                           
  1293                           ;main.c: 149:         (LCDByte(digit[1]+0x30,1));
  1294  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  1295  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  1296  04C3  01A4               	clrf	LCDByte@isdata^(0+128)
  1297  04C4  0AA4               	incf	LCDByte@isdata^(0+128),f
  1298  04C5  0847               	movf	(main@digit^(0+128)+1),w
  1299  04C6  3E30               	addlw	48
  1300  04C7  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1301  04CC                     l3324:
  1302                           
  1303                           ;main.c: 150:         (LCDByte(digit[0]+0x30,1));
  1304  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1305  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1306  04CE  01A4               	clrf	LCDByte@isdata^(0+128)
  1307  04CF  0AA4               	incf	LCDByte@isdata^(0+128),f
  1308  04D0  0846               	movf	main@digit^(0+128),w
  1309  04D1  3E30               	addlw	48
  1310  04D2  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1311  04D7                     l3326:
  1312                           
  1313                           ;main.c: 152:         adc_value = (unsigned int)dienap;
  1314  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1315  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1316  04D9  0841               	movf	_dienap+3,w
  1317  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  1318  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  1319  04DC  00A3               	movwf	(___fltol@f1+3)^(0+128)
  1320  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1321  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1322  04DF  0840               	movf	_dienap+2,w
  1323  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  1324  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  1325  04E2  00A2               	movwf	(___fltol@f1+2)^(0+128)
  1326  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1327  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1328  04E5  083F               	movf	_dienap+1,w
  1329  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  1330  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  1331  04E8  00A1               	movwf	(___fltol@f1+1)^(0+128)
  1332  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1333  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1334  04EB  083E               	movf	_dienap,w
  1335  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  1336  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  1337  04EE  00A0               	movwf	___fltol@f1^(0+128)
  1338  04EF  120A  158A  25A9  120A  118A  	fcall	___fltol
  1339  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  1340  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  1341  04F6  0821               	movf	(?___fltol+1)^(0+128),w
  1342  04F7  00CA               	movwf	(main@adc_value+1)^(0+128)
  1343  04F8  0820               	movf	?___fltol^(0+128),w
  1344  04F9  00C9               	movwf	main@adc_value^(0+128)
  1345  04FA                     l3328:
  1346                           
  1347                           ;main.c: 153:         digit[2] = adc_value/100;
  1348  04FA  3064               	movlw	100
  1349  04FB  00A5               	movwf	___lwdiv@divisor^(0+128)
  1350  04FC  3000               	movlw	0
  1351  04FD  00A6               	movwf	(___lwdiv@divisor^(0+128)+1)
  1352  04FE  084A               	movf	(main@adc_value+1)^(0+128),w
  1353  04FF  00A8               	movwf	(___lwdiv@dividend+1)^(0+128)
  1354  0500  0849               	movf	main@adc_value^(0+128),w
  1355  0501  00A7               	movwf	___lwdiv@dividend^(0+128)
  1356  0502  120A  118A  27B3  120A  118A  	fcall	___lwdiv
  1357  0507  1683               	bsf	3,5	;RP0=1, select bank1
  1358  0508  1303               	bcf	3,6	;RP1=0, select bank1
  1359  0509  0825               	movf	?___lwdiv^(0+128),w
  1360  050A  00FF               	movwf	btemp+1
  1361  050B  087F               	movf	btemp+1,w
  1362  050C  00C8               	movwf	(main@digit^(0+128)+2)
  1363  050D                     l3330:
  1364                           
  1365                           ;main.c: 154:         digit[1] = (adc_value%100)/10;
  1366  050D  300A               	movlw	10
  1367  050E  00A5               	movwf	___lwdiv@divisor^(0+128)
  1368  050F  3000               	movlw	0
  1369  0510  00A6               	movwf	(___lwdiv@divisor^(0+128)+1)
  1370  0511  084A               	movf	(main@adc_value+1)^(0+128),w
  1371  0512  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1372  0513  0849               	movf	main@adc_value^(0+128),w
  1373  0514  00A2               	movwf	___lwmod@dividend^(0+128)
  1374  0515  3064               	movlw	100
  1375  0516  00A0               	movwf	___lwmod@divisor^(0+128)
  1376  0517  3000               	movlw	0
  1377  0518  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1378  0519  120A  158A  229F  120A  118A  	fcall	___lwmod
  1379  051E  1683               	bsf	3,5	;RP0=1, select bank1
  1380  051F  1303               	bcf	3,6	;RP1=0, select bank1
  1381  0520  0821               	movf	(?___lwmod+1)^(0+128),w
  1382  0521  00A8               	movwf	(___lwdiv@dividend+1)^(0+128)
  1383  0522  0820               	movf	?___lwmod^(0+128),w
  1384  0523  00A7               	movwf	___lwdiv@dividend^(0+128)
  1385  0524  120A  118A  27B3  120A  118A  	fcall	___lwdiv
  1386  0529  1683               	bsf	3,5	;RP0=1, select bank1
  1387  052A  1303               	bcf	3,6	;RP1=0, select bank1
  1388  052B  0825               	movf	?___lwdiv^(0+128),w
  1389  052C  00FF               	movwf	btemp+1
  1390  052D  087F               	movf	btemp+1,w
  1391  052E  00C7               	movwf	(main@digit^(0+128)+1)
  1392  052F                     l3332:
  1393                           
  1394                           ;main.c: 155:         digit[1] = (adc_value%100)%10;
  1395  052F  084A               	movf	(main@adc_value+1)^(0+128),w
  1396  0530  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1397  0531  0849               	movf	main@adc_value^(0+128),w
  1398  0532  00A2               	movwf	___lwmod@dividend^(0+128)
  1399  0533  3064               	movlw	100
  1400  0534  00A0               	movwf	___lwmod@divisor^(0+128)
  1401  0535  3000               	movlw	0
  1402  0536  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1403  0537  120A  158A  229F  120A  118A  	fcall	___lwmod
  1404  053C  1683               	bsf	3,5	;RP0=1, select bank1
  1405  053D  1303               	bcf	3,6	;RP1=0, select bank1
  1406  053E  0821               	movf	(?___lwmod+1)^(0+128),w
  1407  053F  00C5               	movwf	(_main$911+1)^(0+128)
  1408  0540  0820               	movf	?___lwmod^(0+128),w
  1409  0541  00C4               	movwf	_main$911^(0+128)
  1410  0542                     l3334:
  1411                           
  1412                           ;main.c: 155:         digit[1] = (adc_value%100)%10;
  1413  0542  300A               	movlw	10
  1414  0543  00A0               	movwf	___lwmod@divisor^(0+128)
  1415  0544  3000               	movlw	0
  1416  0545  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1417  0546  0845               	movf	(_main$911+1)^(0+128),w
  1418  0547  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1419  0548  0844               	movf	_main$911^(0+128),w
  1420  0549  00A2               	movwf	___lwmod@dividend^(0+128)
  1421  054A  120A  158A  229F  120A  118A  	fcall	___lwmod
  1422  054F  1683               	bsf	3,5	;RP0=1, select bank1
  1423  0550  1303               	bcf	3,6	;RP1=0, select bank1
  1424  0551  0820               	movf	?___lwmod^(0+128),w
  1425  0552  00FF               	movwf	btemp+1
  1426  0553  087F               	movf	btemp+1,w
  1427  0554  00C7               	movwf	(main@digit^(0+128)+1)
  1428  0555                     l3336:
  1429                           
  1430                           ;main.c: 156:         UART_Write_data(adc_value);
  1431  0555  0849               	movf	main@adc_value^(0+128),w
  1432  0556  120A  158A  2625  120A  118A  	fcall	_UART_Write_data
  1433  055B                     l3338:
  1434                           
  1435                           ;main.c: 158:         LCDGotoXY(0, 1);
  1436  055B  1683               	bsf	3,5	;RP0=1, select bank1
  1437  055C  1303               	bcf	3,6	;RP1=0, select bank1
  1438  055D  01AA               	clrf	LCDGotoXY@y^(0+128)
  1439  055E  0AAA               	incf	LCDGotoXY@y^(0+128),f
  1440  055F  3000               	movlw	0
  1441  0560  120A  158A  222F  120A  118A  	fcall	_LCDGotoXY
  1442  0565                     l3340:
  1443                           
  1444                           ;main.c: 159:         LCDWriteString("U= ");
  1445  0565  3015               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1446  0566  120A  158A  253C  120A  118A  	fcall	_LCDWriteString
  1447  056B                     l3342:
  1448                           
  1449                           ;main.c: 160:         (LCDByte(digit[2]+0x30,1));
  1450  056B  1683               	bsf	3,5	;RP0=1, select bank1
  1451  056C  1303               	bcf	3,6	;RP1=0, select bank1
  1452  056D  01A4               	clrf	LCDByte@isdata^(0+128)
  1453  056E  0AA4               	incf	LCDByte@isdata^(0+128),f
  1454  056F  0848               	movf	(main@digit^(0+128)+2),w
  1455  0570  3E30               	addlw	48
  1456  0571  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1457  0576                     l3344:
  1458                           
  1459                           ;main.c: 161:         (LCDByte('.',1));
  1460  0576  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0577  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0578  01A4               	clrf	LCDByte@isdata^(0+128)
  1463  0579  0AA4               	incf	LCDByte@isdata^(0+128),f
  1464  057A  302E               	movlw	46
  1465  057B  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1466  0580                     l3346:
  1467                           
  1468                           ;main.c: 162:         (LCDByte(digit[1]+0x30,1));
  1469  0580  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0581  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0582  01A4               	clrf	LCDByte@isdata^(0+128)
  1472  0583  0AA4               	incf	LCDByte@isdata^(0+128),f
  1473  0584  0847               	movf	(main@digit^(0+128)+1),w
  1474  0585  3E30               	addlw	48
  1475  0586  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1476  058B                     l3348:
  1477                           
  1478                           ;main.c: 163:         (LCDByte(digit[0]+0x30,1));
  1479  058B  1683               	bsf	3,5	;RP0=1, select bank1
  1480  058C  1303               	bcf	3,6	;RP1=0, select bank1
  1481  058D  01A4               	clrf	LCDByte@isdata^(0+128)
  1482  058E  0AA4               	incf	LCDByte@isdata^(0+128),f
  1483  058F  0846               	movf	main@digit^(0+128),w
  1484  0590  3E30               	addlw	48
  1485  0591  120A  158A  2361  120A  118A  	fcall	_LCDByte
  1486  0596  2C08               	goto	l3296
  1487  0597  120A  118A  2812   	ljmp	start
  1488  059A                     __end_of_main:
  1489                           
  1490                           	psect	text1
  1491  0DA9                     __ptext1:	
  1492 ;; *************** function ___fltol *****************
  1493 ;; Defined at:
  1494 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  f1              4    0[BANK1 ] void 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  exp1            1    9[BANK1 ] unsigned char 
  1499 ;;  sign1           1    8[BANK1 ] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  4    0[BANK1 ] long 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, btemp+1
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       4       0       0
  1510 ;;      Locals:         0       0       2       0       0
  1511 ;;      Temps:          0       0       4       0       0
  1512 ;;      Totals:         0       0      10       0       0
  1513 ;;Total ram usage:       10 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    3
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;;		_display
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function ___fltol
  1526  0DA9                     ___fltol:
  1527  0DA9                     l3232:	
  1528                           ;incstack = 0
  1529                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  1530                           
  1531  0DA9  1003               	clrc
  1532  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  1533  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  1534  0DAC  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  1535  0DAD  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  1536  0DAE  00FF               	movwf	btemp+1
  1537  0DAF  087F               	movf	btemp+1,w
  1538  0DB0  00A9               	movwf	___fltol@exp1^(0+128)
  1539  0DB1  0829               	movf	___fltol@exp1^(0+128),w
  1540  0DB2  1D03               	btfss	3,2
  1541  0DB3  2DB5               	goto	u3721
  1542  0DB4  2DB6               	goto	u3720
  1543  0DB5                     u3721:
  1544  0DB5  2DBF               	goto	l3238
  1545  0DB6                     u3720:
  1546  0DB6                     l3234:
  1547  0DB6  3000               	movlw	0
  1548  0DB7  00A3               	movwf	(?___fltol+3)^(0+128)
  1549  0DB8  3000               	movlw	0
  1550  0DB9  00A2               	movwf	(?___fltol+2)^(0+128)
  1551  0DBA  3000               	movlw	0
  1552  0DBB  00A1               	movwf	(?___fltol+1)^(0+128)
  1553  0DBC  3000               	movlw	0
  1554  0DBD  00A0               	movwf	?___fltol^(0+128)
  1555  0DBE  2E24               	goto	l551
  1556  0DBF                     l3238:
  1557  0DBF  0820               	movf	___fltol@f1^(0+128),w
  1558  0DC0  00A4               	movwf	??___fltol^(0+128)
  1559  0DC1  0821               	movf	(___fltol@f1+1)^(0+128),w
  1560  0DC2  00A5               	movwf	(??___fltol^(0+128)+1)
  1561  0DC3  0822               	movf	(___fltol@f1+2)^(0+128),w
  1562  0DC4  00A6               	movwf	(??___fltol^(0+128)+2)
  1563  0DC5  0823               	movf	(___fltol@f1+3)^(0+128),w
  1564  0DC6  00A7               	movwf	(??___fltol^(0+128)+3)
  1565  0DC7  301F               	movlw	31
  1566  0DC8                     u3735:
  1567  0DC8  1003               	clrc
  1568  0DC9  0CA7               	rrf	(??___fltol^(0+128)+3),f
  1569  0DCA  0CA6               	rrf	(??___fltol^(0+128)+2),f
  1570  0DCB  0CA5               	rrf	(??___fltol^(0+128)+1),f
  1571  0DCC  0CA4               	rrf	??___fltol^(0+128),f
  1572  0DCD                     u3730:
  1573  0DCD  3EFF               	addlw	-1
  1574  0DCE  1D03               	skipz
  1575  0DCF  2DC8               	goto	u3735
  1576  0DD0  0824               	movf	??___fltol^(0+128),w
  1577  0DD1  00FF               	movwf	btemp+1
  1578  0DD2  087F               	movf	btemp+1,w
  1579  0DD3  00A8               	movwf	___fltol@sign1^(0+128)
  1580  0DD4                     l3240:
  1581  0DD4  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  1582  0DD5                     l3242:
  1583  0DD5  30FF               	movlw	255
  1584  0DD6  05A0               	andwf	___fltol@f1^(0+128),f
  1585  0DD7  30FF               	movlw	255
  1586  0DD8  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  1587  0DD9  30FF               	movlw	255
  1588  0DDA  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  1589  0DDB  3000               	movlw	0
  1590  0DDC  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  1591  0DDD                     l3244:
  1592  0DDD  3096               	movlw	150
  1593  0DDE  02A9               	subwf	___fltol@exp1^(0+128),f
  1594  0DDF                     l3246:
  1595  0DDF  1FA9               	btfss	___fltol@exp1^(0+128),7
  1596  0DE0  2DE2               	goto	u3741
  1597  0DE1  2DE3               	goto	u3740
  1598  0DE2                     u3741:
  1599  0DE2  2DFD               	goto	l3258
  1600  0DE3                     u3740:
  1601  0DE3                     l3248:
  1602  0DE3  0829               	movf	___fltol@exp1^(0+128),w
  1603  0DE4  3A80               	xorlw	128
  1604  0DE5  3E97               	addlw	151
  1605  0DE6  1803               	skipnc
  1606  0DE7  2DE9               	goto	u3751
  1607  0DE8  2DEA               	goto	u3750
  1608  0DE9                     u3751:
  1609  0DE9  2DEB               	goto	l3254
  1610  0DEA                     u3750:
  1611  0DEA  2DB6               	goto	l3234
  1612  0DEB                     l3254:
  1613  0DEB  3001               	movlw	1
  1614  0DEC                     u3765:
  1615  0DEC  1003               	clrc
  1616  0DED  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  1617  0DEE  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  1618  0DEF  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  1619  0DF0  0CA0               	rrf	___fltol@f1^(0+128),f
  1620  0DF1  3EFF               	addlw	-1
  1621  0DF2  1D03               	skipz
  1622  0DF3  2DEC               	goto	u3765
  1623  0DF4                     l3256:
  1624  0DF4  3001               	movlw	1
  1625  0DF5  00FF               	movwf	btemp+1
  1626  0DF6  087F               	movf	btemp+1,w
  1627  0DF7  07A9               	addwf	___fltol@exp1^(0+128),f
  1628  0DF8  1D03               	btfss	3,2
  1629  0DF9  2DFB               	goto	u3771
  1630  0DFA  2DFC               	goto	u3770
  1631  0DFB                     u3771:
  1632  0DFB  2DEB               	goto	l3254
  1633  0DFC                     u3770:
  1634  0DFC  2E14               	goto	l3266
  1635  0DFD                     l3258:
  1636  0DFD  3020               	movlw	32
  1637  0DFE  0229               	subwf	___fltol@exp1^(0+128),w
  1638  0DFF  1C03               	skipc
  1639  0E00  2E02               	goto	u3781
  1640  0E01  2E03               	goto	u3780
  1641  0E02                     u3781:
  1642  0E02  2E0F               	goto	l558
  1643  0E03                     u3780:
  1644  0E03  2DB6               	goto	l3234
  1645  0E04                     l3264:
  1646  0E04  3001               	movlw	1
  1647  0E05  00A4               	movwf	??___fltol^(0+128)
  1648  0E06                     u3795:
  1649  0E06  1003               	clrc
  1650  0E07  0DA0               	rlf	___fltol@f1^(0+128),f
  1651  0E08  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  1652  0E09  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  1653  0E0A  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  1654  0E0B  0BA4               	decfsz	??___fltol^(0+128),f
  1655  0E0C  2E06               	goto	u3795
  1656  0E0D  3001               	movlw	1
  1657  0E0E  02A9               	subwf	___fltol@exp1^(0+128),f
  1658  0E0F                     l558:
  1659  0E0F  0829               	movf	___fltol@exp1^(0+128),w
  1660  0E10  1D03               	btfss	3,2
  1661  0E11  2E13               	goto	u3801
  1662  0E12  2E14               	goto	u3800
  1663  0E13                     u3801:
  1664  0E13  2E04               	goto	l3264
  1665  0E14                     u3800:
  1666  0E14                     l3266:
  1667  0E14  0828               	movf	___fltol@sign1^(0+128),w
  1668  0E15  1903               	btfsc	3,2
  1669  0E16  2E18               	goto	u3811
  1670  0E17  2E19               	goto	u3810
  1671  0E18                     u3811:
  1672  0E18  2E24               	goto	l561
  1673  0E19                     u3810:
  1674  0E19                     l3268:
  1675  0E19  09A0               	comf	___fltol@f1^(0+128),f
  1676  0E1A  09A1               	comf	(___fltol@f1+1)^(0+128),f
  1677  0E1B  09A2               	comf	(___fltol@f1+2)^(0+128),f
  1678  0E1C  09A3               	comf	(___fltol@f1+3)^(0+128),f
  1679  0E1D  0AA0               	incf	___fltol@f1^(0+128),f
  1680  0E1E  1903               	skipnz
  1681  0E1F  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  1682  0E20  1903               	skipnz
  1683  0E21  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  1684  0E22  1903               	skipnz
  1685  0E23  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  1686  0E24                     l561:
  1687  0E24                     l551:
  1688  0E24  0008               	return
  1689  0E25                     __end_of___fltol:
  1690                           
  1691                           	psect	text2
  1692  0E25                     __ptext2:	
  1693 ;; *************** function _UART_Write_data *****************
  1694 ;; Defined at:
  1695 ;;		line 194 in file "main.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  Value           1    wreg     unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  Value           1   14[BANK1 ] unsigned char 
  1700 ;;  k               2   15[BANK1 ] unsigned int 
  1701 ;;  i               1   17[BANK1 ] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       4       0       0
  1713 ;;      Temps:          0       0       2       0       0
  1714 ;;      Totals:         0       0       6       0       0
  1715 ;;Total ram usage:        6 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    4
  1718 ;; This function calls:
  1719 ;;		___awdiv
  1720 ;;		___awmod
  1721 ;;		___lwdiv
  1722 ;;		___lwmod
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;;		_display
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _UART_Write_data
  1731  0E25                     _UART_Write_data:
  1732                           
  1733                           ;incstack = 0
  1734                           ; Regs used in _UART_Write_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1735                           ;UART_Write_data@Value stored from wreg
  1736  0E25  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0E26  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0E27  00AE               	movwf	UART_Write_data@Value^(0+128)
  1739  0E28                     l3210:
  1740                           
  1741                           ;main.c: 194: void UART_Write_data(unsigned char Value);main.c: 195: {;main.c: 196:     
      +                          unsigned char i;;main.c: 197:     unsigned int k;;main.c: 199:  commbuffer[0]='{';
  1742  0E28  307B               	movlw	123
  1743  0E29  00FF               	movwf	btemp+1
  1744  0E2A  087F               	movf	btemp+1,w
  1745  0E2B  00CB               	movwf	_commbuffer^(0+128)
  1746  0E2C                     l3212:
  1747                           
  1748                           ;main.c: 200:  commbuffer[1]=Value/100+0x30;
  1749  0E2C  3064               	movlw	100
  1750  0E2D  00A0               	movwf	___awdiv@divisor^(0+128)
  1751  0E2E  3000               	movlw	0
  1752  0E2F  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1753  0E30  082E               	movf	UART_Write_data@Value^(0+128),w
  1754  0E31  00AC               	movwf	??_UART_Write_data^(0+128)
  1755  0E32  01AD               	clrf	(??_UART_Write_data^(0+128)+1)
  1756  0E33  082C               	movf	??_UART_Write_data^(0+128),w
  1757  0E34  00A2               	movwf	___awdiv@dividend^(0+128)
  1758  0E35  082D               	movf	(??_UART_Write_data+1)^(0+128),w
  1759  0E36  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  1760  0E37  120A  158A  24D3  120A  158A  	fcall	___awdiv
  1761  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  1762  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  1763  0E3E  0820               	movf	?___awdiv^(0+128),w
  1764  0E3F  3E30               	addlw	48
  1765  0E40  00FF               	movwf	btemp+1
  1766  0E41  087F               	movf	btemp+1,w
  1767  0E42  00CC               	movwf	(_commbuffer^(0+128)+1)
  1768  0E43                     l3214:
  1769                           
  1770                           ;main.c: 201:     commbuffer[2]='.';
  1771  0E43  302E               	movlw	46
  1772  0E44  00FF               	movwf	btemp+1
  1773  0E45  087F               	movf	btemp+1,w
  1774  0E46  00CD               	movwf	(_commbuffer^(0+128)+2)
  1775                           
  1776                           ;main.c: 202:     k=Value%100;
  1777  0E47  3064               	movlw	100
  1778  0E48  00A0               	movwf	___awmod@divisor^(0+128)
  1779  0E49  3000               	movlw	0
  1780  0E4A  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  1781  0E4B  082E               	movf	UART_Write_data@Value^(0+128),w
  1782  0E4C  00AC               	movwf	??_UART_Write_data^(0+128)
  1783  0E4D  01AD               	clrf	(??_UART_Write_data^(0+128)+1)
  1784  0E4E  082C               	movf	??_UART_Write_data^(0+128),w
  1785  0E4F  00A2               	movwf	___awmod@dividend^(0+128)
  1786  0E50  082D               	movf	(??_UART_Write_data+1)^(0+128),w
  1787  0E51  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  1788  0E52  120A  158A  240F  120A  158A  	fcall	___awmod
  1789  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0E59  0821               	movf	(?___awmod+1)^(0+128),w
  1792  0E5A  00B0               	movwf	(UART_Write_data@k+1)^(0+128)
  1793  0E5B  0820               	movf	?___awmod^(0+128),w
  1794  0E5C  00AF               	movwf	UART_Write_data@k^(0+128)
  1795                           
  1796                           ;main.c: 203:  commbuffer[3]=k/10+0x30;
  1797  0E5D  300A               	movlw	10
  1798  0E5E  00A5               	movwf	___lwdiv@divisor^(0+128)
  1799  0E5F  3000               	movlw	0
  1800  0E60  00A6               	movwf	(___lwdiv@divisor^(0+128)+1)
  1801  0E61  0830               	movf	(UART_Write_data@k+1)^(0+128),w
  1802  0E62  00A8               	movwf	(___lwdiv@dividend+1)^(0+128)
  1803  0E63  082F               	movf	UART_Write_data@k^(0+128),w
  1804  0E64  00A7               	movwf	___lwdiv@dividend^(0+128)
  1805  0E65  120A  118A  27B3  120A  158A  	fcall	___lwdiv
  1806  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0E6C  0825               	movf	?___lwdiv^(0+128),w
  1809  0E6D  3E30               	addlw	48
  1810  0E6E  00FF               	movwf	btemp+1
  1811  0E6F  087F               	movf	btemp+1,w
  1812  0E70  00CE               	movwf	(_commbuffer^(0+128)+3)
  1813                           
  1814                           ;main.c: 204:  commbuffer[4]=k%10+0x30;
  1815  0E71  300A               	movlw	10
  1816  0E72  00A0               	movwf	___lwmod@divisor^(0+128)
  1817  0E73  3000               	movlw	0
  1818  0E74  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1819  0E75  0830               	movf	(UART_Write_data@k+1)^(0+128),w
  1820  0E76  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1821  0E77  082F               	movf	UART_Write_data@k^(0+128),w
  1822  0E78  00A2               	movwf	___lwmod@dividend^(0+128)
  1823  0E79  120A  158A  229F  120A  158A  	fcall	___lwmod
  1824  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  1825  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  1826  0E80  0820               	movf	?___lwmod^(0+128),w
  1827  0E81  3E30               	addlw	48
  1828  0E82  00FF               	movwf	btemp+1
  1829  0E83  087F               	movf	btemp+1,w
  1830  0E84  00CF               	movwf	(_commbuffer^(0+128)+4)
  1831  0E85                     l3216:
  1832                           
  1833                           ;main.c: 205:  commbuffer[5]='}';
  1834  0E85  307D               	movlw	125
  1835  0E86  00FF               	movwf	btemp+1
  1836  0E87  087F               	movf	btemp+1,w
  1837  0E88  00D0               	movwf	(_commbuffer^(0+128)+5)
  1838  0E89                     l3218:
  1839                           
  1840                           ;main.c: 206:     commbuffer[6]='\r';
  1841  0E89  300D               	movlw	13
  1842  0E8A  00FF               	movwf	btemp+1
  1843  0E8B  087F               	movf	btemp+1,w
  1844  0E8C  00D1               	movwf	(_commbuffer^(0+128)+6)
  1845  0E8D                     l3220:
  1846                           
  1847                           ;main.c: 208:    for(i=0;i<7;i++)
  1848  0E8D  01B1               	clrf	UART_Write_data@i^(0+128)
  1849  0E8E                     l3226:
  1850                           
  1851                           ;main.c: 209:     {;main.c: 210:       TXREG=commbuffer[i];
  1852  0E8E  0831               	movf	UART_Write_data@i^(0+128),w
  1853  0E8F  3ECB               	addlw	(low (_commbuffer| 0))& (0+255)
  1854  0E90  0084               	movwf	4
  1855  0E91  1383               	bcf	3,7	;select IRP bank1
  1856  0E92  0800               	movf	0,w
  1857  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0E95  0099               	movwf	25	;volatile
  1860  0E96                     l201:	
  1861                           ;main.c: 211:       while(TRMT==0);
  1862                           
  1863  0E96  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0E97  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0E98  1C98               	btfss	24,1	;volatile
  1866  0E99  2E9B               	goto	u3701
  1867  0E9A  2E9C               	goto	u3700
  1868  0E9B                     u3701:
  1869  0E9B  2E96               	goto	l201
  1870  0E9C                     u3700:
  1871  0E9C                     l3228:
  1872                           
  1873                           ;main.c: 212:     }
  1874  0E9C  3001               	movlw	1
  1875  0E9D  00FF               	movwf	btemp+1
  1876  0E9E  087F               	movf	btemp+1,w
  1877  0E9F  07B1               	addwf	UART_Write_data@i^(0+128),f
  1878  0EA0                     l3230:
  1879  0EA0  3007               	movlw	7
  1880  0EA1  0231               	subwf	UART_Write_data@i^(0+128),w
  1881  0EA2  1C03               	skipc
  1882  0EA3  2EA5               	goto	u3711
  1883  0EA4  2EA6               	goto	u3710
  1884  0EA5                     u3711:
  1885  0EA5  2E8E               	goto	l3226
  1886  0EA6                     u3710:
  1887  0EA6                     l204:
  1888  0EA6  0008               	return
  1889  0EA7                     __end_of_UART_Write_data:
  1890                           
  1891                           	psect	text3
  1892  0A9F                     __ptext3:	
  1893 ;; *************** function ___lwmod *****************
  1894 ;; Defined at:
  1895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  divisor         2    0[BANK1 ] unsigned int 
  1898 ;;  dividend        2    2[BANK1 ] unsigned int 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  counter         1    4[BANK1 ] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  2    0[BANK1 ] unsigned int 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, btemp+1
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       4       0       0
  1911 ;;      Locals:         0       0       1       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       0       5       0       0
  1914 ;;Total ram usage:        5 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;;		_UART_Write_data
  1922 ;;		_display
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function ___lwmod
  1928  0A9F                     ___lwmod:
  1929  0A9F                     l3056:	
  1930                           ;incstack = 0
  1931                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1932                           
  1933  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0AA0  1303               	bcf	3,6	;RP1=0, select bank1
  1935  0AA1  0820               	movf	___lwmod@divisor^(0+128),w
  1936  0AA2  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  1937  0AA3  1903               	btfsc	3,2
  1938  0AA4  2AA6               	goto	u3501
  1939  0AA5  2AA7               	goto	u3500
  1940  0AA6                     u3501:
  1941  0AA6  2AD6               	goto	l3074
  1942  0AA7                     u3500:
  1943  0AA7                     l3058:
  1944  0AA7  01A4               	clrf	___lwmod@counter^(0+128)
  1945  0AA8  0AA4               	incf	___lwmod@counter^(0+128),f
  1946  0AA9  2AB5               	goto	l3064
  1947  0AAA                     l3060:
  1948  0AAA  3001               	movlw	1
  1949  0AAB                     u3515:
  1950  0AAB  1003               	clrc
  1951  0AAC  0DA0               	rlf	___lwmod@divisor^(0+128),f
  1952  0AAD  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  1953  0AAE  3EFF               	addlw	-1
  1954  0AAF  1D03               	skipz
  1955  0AB0  2AAB               	goto	u3515
  1956  0AB1                     l3062:
  1957  0AB1  3001               	movlw	1
  1958  0AB2  00FF               	movwf	btemp+1
  1959  0AB3  087F               	movf	btemp+1,w
  1960  0AB4  07A4               	addwf	___lwmod@counter^(0+128),f
  1961  0AB5                     l3064:
  1962  0AB5  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  1963  0AB6  2AB8               	goto	u3521
  1964  0AB7  2AB9               	goto	u3520
  1965  0AB8                     u3521:
  1966  0AB8  2AAA               	goto	l3060
  1967  0AB9                     u3520:
  1968  0AB9                     l3066:
  1969  0AB9  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  1970  0ABA  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  1971  0ABB  1D03               	skipz
  1972  0ABC  2ABF               	goto	u3535
  1973  0ABD  0820               	movf	___lwmod@divisor^(0+128),w
  1974  0ABE  0222               	subwf	___lwmod@dividend^(0+128),w
  1975  0ABF                     u3535:
  1976  0ABF  1C03               	skipc
  1977  0AC0  2AC2               	goto	u3531
  1978  0AC1  2AC3               	goto	u3530
  1979  0AC2                     u3531:
  1980  0AC2  2AC9               	goto	l3070
  1981  0AC3                     u3530:
  1982  0AC3                     l3068:
  1983  0AC3  0820               	movf	___lwmod@divisor^(0+128),w
  1984  0AC4  02A2               	subwf	___lwmod@dividend^(0+128),f
  1985  0AC5  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  1986  0AC6  1C03               	skipc
  1987  0AC7  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  1988  0AC8  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  1989  0AC9                     l3070:
  1990  0AC9  3001               	movlw	1
  1991  0ACA                     u3545:
  1992  0ACA  1003               	clrc
  1993  0ACB  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  1994  0ACC  0CA0               	rrf	___lwmod@divisor^(0+128),f
  1995  0ACD  3EFF               	addlw	-1
  1996  0ACE  1D03               	skipz
  1997  0ACF  2ACA               	goto	u3545
  1998  0AD0                     l3072:
  1999  0AD0  3001               	movlw	1
  2000  0AD1  02A4               	subwf	___lwmod@counter^(0+128),f
  2001  0AD2  1D03               	btfss	3,2
  2002  0AD3  2AD5               	goto	u3551
  2003  0AD4  2AD6               	goto	u3550
  2004  0AD5                     u3551:
  2005  0AD5  2AB9               	goto	l3066
  2006  0AD6                     u3550:
  2007  0AD6                     l3074:
  2008  0AD6  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  2009  0AD7  00A1               	movwf	(?___lwmod+1)^(0+128)
  2010  0AD8  0822               	movf	___lwmod@dividend^(0+128),w
  2011  0AD9  00A0               	movwf	?___lwmod^(0+128)
  2012  0ADA                     l647:
  2013  0ADA  0008               	return
  2014  0ADB                     __end_of___lwmod:
  2015                           
  2016                           	psect	text4
  2017  07B3                     __ptext4:	
  2018 ;; *************** function ___lwdiv *****************
  2019 ;; Defined at:
  2020 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  divisor         2    5[BANK1 ] unsigned int 
  2023 ;;  dividend        2    7[BANK1 ] unsigned int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  quotient        2   10[BANK1 ] unsigned int 
  2026 ;;  counter         1    9[BANK1 ] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  2    5[BANK1 ] unsigned int 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, btemp+1
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       4       0       0
  2037 ;;      Locals:         0       0       3       0       0
  2038 ;;      Temps:          0       0       0       0       0
  2039 ;;      Totals:         0       0       7       0       0
  2040 ;;Total ram usage:        7 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    3
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;;		_UART_Write_data
  2048 ;;		_display
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function ___lwdiv
  2054  07B3                     ___lwdiv:
  2055  07B3                     l3030:	
  2056                           ;incstack = 0
  2057                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2058                           
  2059  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  2060  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  2061  07B5  01AA               	clrf	___lwdiv@quotient^(0+128)
  2062  07B6  01AB               	clrf	(___lwdiv@quotient+1)^(0+128)
  2063  07B7                     l3032:
  2064  07B7  0825               	movf	___lwdiv@divisor^(0+128),w
  2065  07B8  0426               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  2066  07B9  1903               	btfsc	3,2
  2067  07BA  2FBC               	goto	u3431
  2068  07BB  2FBD               	goto	u3430
  2069  07BC                     u3431:
  2070  07BC  2FF4               	goto	l3052
  2071  07BD                     u3430:
  2072  07BD                     l3034:
  2073  07BD  01A9               	clrf	___lwdiv@counter^(0+128)
  2074  07BE  0AA9               	incf	___lwdiv@counter^(0+128),f
  2075  07BF  2FCB               	goto	l3040
  2076  07C0                     l3036:
  2077  07C0  3001               	movlw	1
  2078  07C1                     u3445:
  2079  07C1  1003               	clrc
  2080  07C2  0DA5               	rlf	___lwdiv@divisor^(0+128),f
  2081  07C3  0DA6               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2082  07C4  3EFF               	addlw	-1
  2083  07C5  1D03               	skipz
  2084  07C6  2FC1               	goto	u3445
  2085  07C7                     l3038:
  2086  07C7  3001               	movlw	1
  2087  07C8  00FF               	movwf	btemp+1
  2088  07C9  087F               	movf	btemp+1,w
  2089  07CA  07A9               	addwf	___lwdiv@counter^(0+128),f
  2090  07CB                     l3040:
  2091  07CB  1FA6               	btfss	(___lwdiv@divisor+1)^(0+128),7
  2092  07CC  2FCE               	goto	u3451
  2093  07CD  2FCF               	goto	u3450
  2094  07CE                     u3451:
  2095  07CE  2FC0               	goto	l3036
  2096  07CF                     u3450:
  2097  07CF                     l3042:
  2098  07CF  3001               	movlw	1
  2099  07D0                     u3465:
  2100  07D0  1003               	clrc
  2101  07D1  0DAA               	rlf	___lwdiv@quotient^(0+128),f
  2102  07D2  0DAB               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2103  07D3  3EFF               	addlw	-1
  2104  07D4  1D03               	skipz
  2105  07D5  2FD0               	goto	u3465
  2106  07D6  0826               	movf	(___lwdiv@divisor+1)^(0+128),w
  2107  07D7  0228               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2108  07D8  1D03               	skipz
  2109  07D9  2FDC               	goto	u3475
  2110  07DA  0825               	movf	___lwdiv@divisor^(0+128),w
  2111  07DB  0227               	subwf	___lwdiv@dividend^(0+128),w
  2112  07DC                     u3475:
  2113  07DC  1C03               	skipc
  2114  07DD  2FDF               	goto	u3471
  2115  07DE  2FE0               	goto	u3470
  2116  07DF                     u3471:
  2117  07DF  2FE7               	goto	l3048
  2118  07E0                     u3470:
  2119  07E0                     l3044:
  2120  07E0  0825               	movf	___lwdiv@divisor^(0+128),w
  2121  07E1  02A7               	subwf	___lwdiv@dividend^(0+128),f
  2122  07E2  0826               	movf	(___lwdiv@divisor+1)^(0+128),w
  2123  07E3  1C03               	skipc
  2124  07E4  03A8               	decf	(___lwdiv@dividend+1)^(0+128),f
  2125  07E5  02A8               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2126  07E6                     l3046:
  2127  07E6  142A               	bsf	___lwdiv@quotient^(0+128),0
  2128  07E7                     l3048:
  2129  07E7  3001               	movlw	1
  2130  07E8                     u3485:
  2131  07E8  1003               	clrc
  2132  07E9  0CA6               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2133  07EA  0CA5               	rrf	___lwdiv@divisor^(0+128),f
  2134  07EB  3EFF               	addlw	-1
  2135  07EC  1D03               	skipz
  2136  07ED  2FE8               	goto	u3485
  2137  07EE                     l3050:
  2138  07EE  3001               	movlw	1
  2139  07EF  02A9               	subwf	___lwdiv@counter^(0+128),f
  2140  07F0  1D03               	btfss	3,2
  2141  07F1  2FF3               	goto	u3491
  2142  07F2  2FF4               	goto	u3490
  2143  07F3                     u3491:
  2144  07F3  2FCF               	goto	l3042
  2145  07F4                     u3490:
  2146  07F4                     l3052:
  2147  07F4  082B               	movf	(___lwdiv@quotient+1)^(0+128),w
  2148  07F5  00A6               	movwf	(?___lwdiv+1)^(0+128)
  2149  07F6  082A               	movf	___lwdiv@quotient^(0+128),w
  2150  07F7  00A5               	movwf	?___lwdiv^(0+128)
  2151  07F8                     l637:
  2152  07F8  0008               	return
  2153  07F9                     __end_of___lwdiv:
  2154                           
  2155                           	psect	text5
  2156  0C0F                     __ptext5:	
  2157 ;; *************** function ___awmod *****************
  2158 ;; Defined at:
  2159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  divisor         2    0[BANK1 ] int 
  2162 ;;  dividend        2    2[BANK1 ] int 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  sign            1    5[BANK1 ] unsigned char 
  2165 ;;  counter         1    4[BANK1 ] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2    0[BANK1 ] int 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, btemp+1
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2175 ;;      Params:         0       0       4       0       0
  2176 ;;      Locals:         0       0       2       0       0
  2177 ;;      Temps:          0       0       0       0       0
  2178 ;;      Totals:         0       0       6       0       0
  2179 ;;Total ram usage:        6 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    3
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_UART_Write_data
  2186 ;;		_LCDWriteInt
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function ___awmod
  2192  0C0F                     ___awmod:
  2193  0C0F                     l2992:	
  2194                           ;incstack = 0
  2195                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2196                           
  2197  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0C10  1303               	bcf	3,6	;RP1=0, select bank1
  2199  0C11  01A5               	clrf	___awmod@sign^(0+128)
  2200  0C12                     l2994:
  2201  0C12  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  2202  0C13  2C15               	goto	u3341
  2203  0C14  2C16               	goto	u3340
  2204  0C15                     u3341:
  2205  0C15  2C1D               	goto	l3000
  2206  0C16                     u3340:
  2207  0C16                     l2996:
  2208  0C16  09A2               	comf	___awmod@dividend^(0+128),f
  2209  0C17  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2210  0C18  0AA2               	incf	___awmod@dividend^(0+128),f
  2211  0C19  1903               	skipnz
  2212  0C1A  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2213  0C1B                     l2998:
  2214  0C1B  01A5               	clrf	___awmod@sign^(0+128)
  2215  0C1C  0AA5               	incf	___awmod@sign^(0+128),f
  2216  0C1D                     l3000:
  2217  0C1D  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2218  0C1E  2C20               	goto	u3351
  2219  0C1F  2C21               	goto	u3350
  2220  0C20                     u3351:
  2221  0C20  2C26               	goto	l3004
  2222  0C21                     u3350:
  2223  0C21                     l3002:
  2224  0C21  09A0               	comf	___awmod@divisor^(0+128),f
  2225  0C22  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  2226  0C23  0AA0               	incf	___awmod@divisor^(0+128),f
  2227  0C24  1903               	skipnz
  2228  0C25  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  2229  0C26                     l3004:
  2230  0C26  0820               	movf	___awmod@divisor^(0+128),w
  2231  0C27  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  2232  0C28  1903               	btfsc	3,2
  2233  0C29  2C2B               	goto	u3361
  2234  0C2A  2C2C               	goto	u3360
  2235  0C2B                     u3361:
  2236  0C2B  2C5B               	goto	l3022
  2237  0C2C                     u3360:
  2238  0C2C                     l3006:
  2239  0C2C  01A4               	clrf	___awmod@counter^(0+128)
  2240  0C2D  0AA4               	incf	___awmod@counter^(0+128),f
  2241  0C2E  2C3A               	goto	l3012
  2242  0C2F                     l3008:
  2243  0C2F  3001               	movlw	1
  2244  0C30                     u3375:
  2245  0C30  1003               	clrc
  2246  0C31  0DA0               	rlf	___awmod@divisor^(0+128),f
  2247  0C32  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  2248  0C33  3EFF               	addlw	-1
  2249  0C34  1D03               	skipz
  2250  0C35  2C30               	goto	u3375
  2251  0C36                     l3010:
  2252  0C36  3001               	movlw	1
  2253  0C37  00FF               	movwf	btemp+1
  2254  0C38  087F               	movf	btemp+1,w
  2255  0C39  07A4               	addwf	___awmod@counter^(0+128),f
  2256  0C3A                     l3012:
  2257  0C3A  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2258  0C3B  2C3D               	goto	u3381
  2259  0C3C  2C3E               	goto	u3380
  2260  0C3D                     u3381:
  2261  0C3D  2C2F               	goto	l3008
  2262  0C3E                     u3380:
  2263  0C3E                     l3014:
  2264  0C3E  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2265  0C3F  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  2266  0C40  1D03               	skipz
  2267  0C41  2C44               	goto	u3395
  2268  0C42  0820               	movf	___awmod@divisor^(0+128),w
  2269  0C43  0222               	subwf	___awmod@dividend^(0+128),w
  2270  0C44                     u3395:
  2271  0C44  1C03               	skipc
  2272  0C45  2C47               	goto	u3391
  2273  0C46  2C48               	goto	u3390
  2274  0C47                     u3391:
  2275  0C47  2C4E               	goto	l3018
  2276  0C48                     u3390:
  2277  0C48                     l3016:
  2278  0C48  0820               	movf	___awmod@divisor^(0+128),w
  2279  0C49  02A2               	subwf	___awmod@dividend^(0+128),f
  2280  0C4A  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2281  0C4B  1C03               	skipc
  2282  0C4C  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  2283  0C4D  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  2284  0C4E                     l3018:
  2285  0C4E  3001               	movlw	1
  2286  0C4F                     u3405:
  2287  0C4F  1003               	clrc
  2288  0C50  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  2289  0C51  0CA0               	rrf	___awmod@divisor^(0+128),f
  2290  0C52  3EFF               	addlw	-1
  2291  0C53  1D03               	skipz
  2292  0C54  2C4F               	goto	u3405
  2293  0C55                     l3020:
  2294  0C55  3001               	movlw	1
  2295  0C56  02A4               	subwf	___awmod@counter^(0+128),f
  2296  0C57  1D03               	btfss	3,2
  2297  0C58  2C5A               	goto	u3411
  2298  0C59  2C5B               	goto	u3410
  2299  0C5A                     u3411:
  2300  0C5A  2C3E               	goto	l3014
  2301  0C5B                     u3410:
  2302  0C5B                     l3022:
  2303  0C5B  0825               	movf	___awmod@sign^(0+128),w
  2304  0C5C  1903               	btfsc	3,2
  2305  0C5D  2C5F               	goto	u3421
  2306  0C5E  2C60               	goto	u3420
  2307  0C5F                     u3421:
  2308  0C5F  2C65               	goto	l3026
  2309  0C60                     u3420:
  2310  0C60                     l3024:
  2311  0C60  09A2               	comf	___awmod@dividend^(0+128),f
  2312  0C61  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2313  0C62  0AA2               	incf	___awmod@dividend^(0+128),f
  2314  0C63  1903               	skipnz
  2315  0C64  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2316  0C65                     l3026:
  2317  0C65  0823               	movf	(___awmod@dividend+1)^(0+128),w
  2318  0C66  00A1               	movwf	(?___awmod+1)^(0+128)
  2319  0C67  0822               	movf	___awmod@dividend^(0+128),w
  2320  0C68  00A0               	movwf	?___awmod^(0+128)
  2321  0C69                     l531:
  2322  0C69  0008               	return
  2323  0C6A                     __end_of___awmod:
  2324                           
  2325                           	psect	text6
  2326  0CD3                     __ptext6:	
  2327 ;; *************** function ___awdiv *****************
  2328 ;; Defined at:
  2329 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  divisor         2    0[BANK1 ] int 
  2332 ;;  dividend        2    2[BANK1 ] int 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  quotient        2    6[BANK1 ] int 
  2335 ;;  sign            1    5[BANK1 ] unsigned char 
  2336 ;;  counter         1    4[BANK1 ] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  2    0[BANK1 ] int 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, btemp+1
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         0       0       4       0       0
  2347 ;;      Locals:         0       0       4       0       0
  2348 ;;      Temps:          0       0       0       0       0
  2349 ;;      Totals:         0       0       8       0       0
  2350 ;;Total ram usage:        8 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    3
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_UART_Write_data
  2357 ;;		_LCDWriteInt
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function ___awdiv
  2363  0CD3                     ___awdiv:
  2364  0CD3                     l2948:	
  2365                           ;incstack = 0
  2366                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2367                           
  2368  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0CD5  01A5               	clrf	___awdiv@sign^(0+128)
  2371  0CD6                     l2950:
  2372  0CD6  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  2373  0CD7  2CD9               	goto	u3241
  2374  0CD8  2CDA               	goto	u3240
  2375  0CD9                     u3241:
  2376  0CD9  2CE1               	goto	l2956
  2377  0CDA                     u3240:
  2378  0CDA                     l2952:
  2379  0CDA  09A0               	comf	___awdiv@divisor^(0+128),f
  2380  0CDB  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  2381  0CDC  0AA0               	incf	___awdiv@divisor^(0+128),f
  2382  0CDD  1903               	skipnz
  2383  0CDE  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  2384  0CDF                     l2954:
  2385  0CDF  01A5               	clrf	___awdiv@sign^(0+128)
  2386  0CE0  0AA5               	incf	___awdiv@sign^(0+128),f
  2387  0CE1                     l2956:
  2388  0CE1  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  2389  0CE2  2CE4               	goto	u3251
  2390  0CE3  2CE5               	goto	u3250
  2391  0CE4                     u3251:
  2392  0CE4  2CEE               	goto	l2962
  2393  0CE5                     u3250:
  2394  0CE5                     l2958:
  2395  0CE5  09A2               	comf	___awdiv@dividend^(0+128),f
  2396  0CE6  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  2397  0CE7  0AA2               	incf	___awdiv@dividend^(0+128),f
  2398  0CE8  1903               	skipnz
  2399  0CE9  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  2400  0CEA                     l2960:
  2401  0CEA  3001               	movlw	1
  2402  0CEB  00FF               	movwf	btemp+1
  2403  0CEC  087F               	movf	btemp+1,w
  2404  0CED  06A5               	xorwf	___awdiv@sign^(0+128),f
  2405  0CEE                     l2962:
  2406  0CEE  01A6               	clrf	___awdiv@quotient^(0+128)
  2407  0CEF  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  2408  0CF0                     l2964:
  2409  0CF0  0820               	movf	___awdiv@divisor^(0+128),w
  2410  0CF1  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  2411  0CF2  1903               	btfsc	3,2
  2412  0CF3  2CF5               	goto	u3261
  2413  0CF4  2CF6               	goto	u3260
  2414  0CF5                     u3261:
  2415  0CF5  2D2D               	goto	l2984
  2416  0CF6                     u3260:
  2417  0CF6                     l2966:
  2418  0CF6  01A4               	clrf	___awdiv@counter^(0+128)
  2419  0CF7  0AA4               	incf	___awdiv@counter^(0+128),f
  2420  0CF8  2D04               	goto	l2972
  2421  0CF9                     l2968:
  2422  0CF9  3001               	movlw	1
  2423  0CFA                     u3275:
  2424  0CFA  1003               	clrc
  2425  0CFB  0DA0               	rlf	___awdiv@divisor^(0+128),f
  2426  0CFC  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  2427  0CFD  3EFF               	addlw	-1
  2428  0CFE  1D03               	skipz
  2429  0CFF  2CFA               	goto	u3275
  2430  0D00                     l2970:
  2431  0D00  3001               	movlw	1
  2432  0D01  00FF               	movwf	btemp+1
  2433  0D02  087F               	movf	btemp+1,w
  2434  0D03  07A4               	addwf	___awdiv@counter^(0+128),f
  2435  0D04                     l2972:
  2436  0D04  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  2437  0D05  2D07               	goto	u3281
  2438  0D06  2D08               	goto	u3280
  2439  0D07                     u3281:
  2440  0D07  2CF9               	goto	l2968
  2441  0D08                     u3280:
  2442  0D08                     l2974:
  2443  0D08  3001               	movlw	1
  2444  0D09                     u3295:
  2445  0D09  1003               	clrc
  2446  0D0A  0DA6               	rlf	___awdiv@quotient^(0+128),f
  2447  0D0B  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  2448  0D0C  3EFF               	addlw	-1
  2449  0D0D  1D03               	skipz
  2450  0D0E  2D09               	goto	u3295
  2451  0D0F  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  2452  0D10  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  2453  0D11  1D03               	skipz
  2454  0D12  2D15               	goto	u3305
  2455  0D13  0820               	movf	___awdiv@divisor^(0+128),w
  2456  0D14  0222               	subwf	___awdiv@dividend^(0+128),w
  2457  0D15                     u3305:
  2458  0D15  1C03               	skipc
  2459  0D16  2D18               	goto	u3301
  2460  0D17  2D19               	goto	u3300
  2461  0D18                     u3301:
  2462  0D18  2D20               	goto	l2980
  2463  0D19                     u3300:
  2464  0D19                     l2976:
  2465  0D19  0820               	movf	___awdiv@divisor^(0+128),w
  2466  0D1A  02A2               	subwf	___awdiv@dividend^(0+128),f
  2467  0D1B  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  2468  0D1C  1C03               	skipc
  2469  0D1D  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  2470  0D1E  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  2471  0D1F                     l2978:
  2472  0D1F  1426               	bsf	___awdiv@quotient^(0+128),0
  2473  0D20                     l2980:
  2474  0D20  3001               	movlw	1
  2475  0D21                     u3315:
  2476  0D21  1003               	clrc
  2477  0D22  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  2478  0D23  0CA0               	rrf	___awdiv@divisor^(0+128),f
  2479  0D24  3EFF               	addlw	-1
  2480  0D25  1D03               	skipz
  2481  0D26  2D21               	goto	u3315
  2482  0D27                     l2982:
  2483  0D27  3001               	movlw	1
  2484  0D28  02A4               	subwf	___awdiv@counter^(0+128),f
  2485  0D29  1D03               	btfss	3,2
  2486  0D2A  2D2C               	goto	u3321
  2487  0D2B  2D2D               	goto	u3320
  2488  0D2C                     u3321:
  2489  0D2C  2D08               	goto	l2974
  2490  0D2D                     u3320:
  2491  0D2D                     l2984:
  2492  0D2D  0825               	movf	___awdiv@sign^(0+128),w
  2493  0D2E  1903               	btfsc	3,2
  2494  0D2F  2D31               	goto	u3331
  2495  0D30  2D32               	goto	u3330
  2496  0D31                     u3331:
  2497  0D31  2D37               	goto	l2988
  2498  0D32                     u3330:
  2499  0D32                     l2986:
  2500  0D32  09A6               	comf	___awdiv@quotient^(0+128),f
  2501  0D33  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  2502  0D34  0AA6               	incf	___awdiv@quotient^(0+128),f
  2503  0D35  1903               	skipnz
  2504  0D36  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  2505  0D37                     l2988:
  2506  0D37  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  2507  0D38  00A1               	movwf	(?___awdiv+1)^(0+128)
  2508  0D39  0826               	movf	___awdiv@quotient^(0+128),w
  2509  0D3A  00A0               	movwf	?___awdiv^(0+128)
  2510  0D3B                     l518:
  2511  0D3B  0008               	return
  2512  0D3C                     __end_of___awdiv:
  2513                           
  2514                           	psect	text7
  2515  06D4                     __ptext7:	
  2516 ;; *************** function _UART_Init *****************
  2517 ;; Defined at:
  2518 ;;		line 20 in file "./uart.h"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  baudrate        4   15[BANK1 ] const long 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  x               2   31[BANK1 ] unsigned int 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      unsigned char 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       4       0       0
  2533 ;;      Locals:         0       0       2       0       0
  2534 ;;      Temps:          0       0      12       0       0
  2535 ;;      Totals:         0       0      18       0       0
  2536 ;;Total ram usage:       18 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    4
  2539 ;; This function calls:
  2540 ;;		___aldiv
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function _UART_Init
  2548  06D4                     _UART_Init:
  2549  06D4                     l3080:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2552                           
  2553                           
  2554                           ;./uart.h: 20: char UART_Init(const long int baudrate);./uart.h: 21: {;./uart.h: 22:  un
      +                          signed int x;;./uart.h: 24:  x = (16000000 - baudrate*64)/(baudrate*64);
  2555  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  2556  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  2557  06D6  082F               	movf	UART_Init@baudrate^(0+128),w
  2558  06D7  00B3               	movwf	??_UART_Init^(0+128)
  2559  06D8  0830               	movf	(UART_Init@baudrate+1)^(0+128),w
  2560  06D9  00B4               	movwf	(??_UART_Init^(0+128)+1)
  2561  06DA  0831               	movf	(UART_Init@baudrate+2)^(0+128),w
  2562  06DB  00B5               	movwf	(??_UART_Init^(0+128)+2)
  2563  06DC  0832               	movf	(UART_Init@baudrate+3)^(0+128),w
  2564  06DD  00B6               	movwf	(??_UART_Init^(0+128)+3)
  2565  06DE  3006               	movlw	6
  2566  06DF                     u3565:
  2567  06DF  1003               	clrc
  2568  06E0  0DB3               	rlf	??_UART_Init^(0+128),f
  2569  06E1  0DB4               	rlf	(??_UART_Init^(0+128)+1),f
  2570  06E2  0DB5               	rlf	(??_UART_Init^(0+128)+2),f
  2571  06E3  0DB6               	rlf	(??_UART_Init^(0+128)+3),f
  2572  06E4                     u3560:
  2573  06E4  3EFF               	addlw	-1
  2574  06E5  1D03               	skipz
  2575  06E6  2EDF               	goto	u3565
  2576  06E7  0836               	movf	(??_UART_Init+3)^(0+128),w
  2577  06E8  00A3               	movwf	(___aldiv@divisor+3)^(0+128)
  2578  06E9  0835               	movf	(??_UART_Init+2)^(0+128),w
  2579  06EA  00A2               	movwf	(___aldiv@divisor+2)^(0+128)
  2580  06EB  0834               	movf	(??_UART_Init+1)^(0+128),w
  2581  06EC  00A1               	movwf	(___aldiv@divisor+1)^(0+128)
  2582  06ED  0833               	movf	??_UART_Init^(0+128),w
  2583  06EE  00A0               	movwf	___aldiv@divisor^(0+128)
  2584  06EF  082F               	movf	UART_Init@baudrate^(0+128),w
  2585  06F0  00B7               	movwf	(??_UART_Init+4)^(0+128)
  2586  06F1  0830               	movf	(UART_Init@baudrate+1)^(0+128),w
  2587  06F2  00B8               	movwf	((??_UART_Init+4)^(0+128)+1)
  2588  06F3  0831               	movf	(UART_Init@baudrate+2)^(0+128),w
  2589  06F4  00B9               	movwf	((??_UART_Init+4)^(0+128)+2)
  2590  06F5  0832               	movf	(UART_Init@baudrate+3)^(0+128),w
  2591  06F6  00BA               	movwf	((??_UART_Init+4)^(0+128)+3)
  2592  06F7  3006               	movlw	6
  2593  06F8                     u3575:
  2594  06F8  1003               	clrc
  2595  06F9  0DB7               	rlf	(??_UART_Init+4)^(0+128),f
  2596  06FA  0DB8               	rlf	((??_UART_Init+4)^(0+128)+1),f
  2597  06FB  0DB9               	rlf	((??_UART_Init+4)^(0+128)+2),f
  2598  06FC  0DBA               	rlf	((??_UART_Init+4)^(0+128)+3),f
  2599  06FD                     u3570:
  2600  06FD  3EFF               	addlw	-1
  2601  06FE  1D03               	skipz
  2602  06FF  2EF8               	goto	u3575
  2603  0700  3000               	movlw	0
  2604  0701  00BB               	movwf	(??_UART_Init+8)^(0+128)
  2605  0702  3024               	movlw	36
  2606  0703  00BC               	movwf	((??_UART_Init+8)^(0+128)+1)
  2607  0704  30F4               	movlw	244
  2608  0705  00BD               	movwf	((??_UART_Init+8)^(0+128)+2)
  2609  0706  3000               	movlw	0
  2610  0707  00BE               	movwf	((??_UART_Init+8)^(0+128)+3)
  2611  0708  0837               	movf	(??_UART_Init+4)^(0+128),w
  2612  0709  02BB               	subwf	(??_UART_Init+8)^(0+128),f
  2613  070A  0838               	movf	(??_UART_Init+5)^(0+128),w
  2614  070B  1C03               	skipc
  2615  070C  0F38               	incfsz	(??_UART_Init+5)^(0+128),w
  2616  070D  2F0F               	goto	u3581
  2617  070E  2F10               	goto	u3582
  2618  070F                     u3581:
  2619  070F  02BC               	subwf	((??_UART_Init+8)^(0+128)+1),f
  2620  0710                     u3582:
  2621  0710  0839               	movf	(??_UART_Init+6)^(0+128),w
  2622  0711  1C03               	skipc
  2623  0712  0F39               	incfsz	(??_UART_Init+6)^(0+128),w
  2624  0713  2F15               	goto	u3583
  2625  0714  2F16               	goto	u3584
  2626  0715                     u3583:
  2627  0715  02BD               	subwf	((??_UART_Init+8)^(0+128)+2),f
  2628  0716                     u3584:
  2629  0716  083A               	movf	(??_UART_Init+7)^(0+128),w
  2630  0717  1C03               	skipc
  2631  0718  0F3A               	incfsz	(??_UART_Init+7)^(0+128),w
  2632  0719  2F1B               	goto	u3585
  2633  071A  2F1C               	goto	u3586
  2634  071B                     u3585:
  2635  071B  02BE               	subwf	((??_UART_Init+8)^(0+128)+3),f
  2636  071C                     u3586:
  2637  071C  083E               	movf	(??_UART_Init+11)^(0+128),w
  2638  071D  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  2639  071E  083D               	movf	(??_UART_Init+10)^(0+128),w
  2640  071F  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  2641  0720  083C               	movf	(??_UART_Init+9)^(0+128),w
  2642  0721  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  2643  0722  083B               	movf	(??_UART_Init+8)^(0+128),w
  2644  0723  00A4               	movwf	___aldiv@dividend^(0+128)
  2645  0724  120A  158A  26A7  120A  118A  	fcall	___aldiv
  2646  0729  1683               	bsf	3,5	;RP0=1, select bank1
  2647  072A  1303               	bcf	3,6	;RP1=0, select bank1
  2648  072B  0821               	movf	(?___aldiv+1)^(0+128),w
  2649  072C  00C0               	movwf	(UART_Init@x+1)^(0+128)
  2650  072D  0820               	movf	?___aldiv^(0+128),w
  2651  072E  00BF               	movwf	UART_Init@x^(0+128)
  2652  072F                     l3082:
  2653                           
  2654                           ;./uart.h: 25:  if(x>255)
  2655  072F  3001               	movlw	1
  2656  0730  0240               	subwf	(UART_Init@x+1)^(0+128),w
  2657  0731  3000               	movlw	0
  2658  0732  1903               	skipnz
  2659  0733  023F               	subwf	UART_Init@x^(0+128),w
  2660  0734  1C03               	skipc
  2661  0735  2F37               	goto	u3591
  2662  0736  2F38               	goto	u3590
  2663  0737                     u3591:
  2664  0737  2F92               	goto	l3088
  2665  0738                     u3590:
  2666  0738                     l3084:
  2667                           
  2668                           ;./uart.h: 26:  {;./uart.h: 27:   x = (16000000 - baudrate*16)/(baudrate*16);
  2669  0738  082F               	movf	UART_Init@baudrate^(0+128),w
  2670  0739  00B3               	movwf	??_UART_Init^(0+128)
  2671  073A  0830               	movf	(UART_Init@baudrate+1)^(0+128),w
  2672  073B  00B4               	movwf	(??_UART_Init^(0+128)+1)
  2673  073C  0831               	movf	(UART_Init@baudrate+2)^(0+128),w
  2674  073D  00B5               	movwf	(??_UART_Init^(0+128)+2)
  2675  073E  0832               	movf	(UART_Init@baudrate+3)^(0+128),w
  2676  073F  00B6               	movwf	(??_UART_Init^(0+128)+3)
  2677  0740  3004               	movlw	4
  2678  0741                     u3605:
  2679  0741  1003               	clrc
  2680  0742  0DB3               	rlf	??_UART_Init^(0+128),f
  2681  0743  0DB4               	rlf	(??_UART_Init^(0+128)+1),f
  2682  0744  0DB5               	rlf	(??_UART_Init^(0+128)+2),f
  2683  0745  0DB6               	rlf	(??_UART_Init^(0+128)+3),f
  2684  0746                     u3600:
  2685  0746  3EFF               	addlw	-1
  2686  0747  1D03               	skipz
  2687  0748  2F41               	goto	u3605
  2688  0749  0836               	movf	(??_UART_Init+3)^(0+128),w
  2689  074A  00A3               	movwf	(___aldiv@divisor+3)^(0+128)
  2690  074B  0835               	movf	(??_UART_Init+2)^(0+128),w
  2691  074C  00A2               	movwf	(___aldiv@divisor+2)^(0+128)
  2692  074D  0834               	movf	(??_UART_Init+1)^(0+128),w
  2693  074E  00A1               	movwf	(___aldiv@divisor+1)^(0+128)
  2694  074F  0833               	movf	??_UART_Init^(0+128),w
  2695  0750  00A0               	movwf	___aldiv@divisor^(0+128)
  2696  0751  082F               	movf	UART_Init@baudrate^(0+128),w
  2697  0752  00B7               	movwf	(??_UART_Init+4)^(0+128)
  2698  0753  0830               	movf	(UART_Init@baudrate+1)^(0+128),w
  2699  0754  00B8               	movwf	((??_UART_Init+4)^(0+128)+1)
  2700  0755  0831               	movf	(UART_Init@baudrate+2)^(0+128),w
  2701  0756  00B9               	movwf	((??_UART_Init+4)^(0+128)+2)
  2702  0757  0832               	movf	(UART_Init@baudrate+3)^(0+128),w
  2703  0758  00BA               	movwf	((??_UART_Init+4)^(0+128)+3)
  2704  0759  3004               	movlw	4
  2705  075A                     u3615:
  2706  075A  1003               	clrc
  2707  075B  0DB7               	rlf	(??_UART_Init+4)^(0+128),f
  2708  075C  0DB8               	rlf	((??_UART_Init+4)^(0+128)+1),f
  2709  075D  0DB9               	rlf	((??_UART_Init+4)^(0+128)+2),f
  2710  075E  0DBA               	rlf	((??_UART_Init+4)^(0+128)+3),f
  2711  075F                     u3610:
  2712  075F  3EFF               	addlw	-1
  2713  0760  1D03               	skipz
  2714  0761  2F5A               	goto	u3615
  2715  0762  3000               	movlw	0
  2716  0763  00BB               	movwf	(??_UART_Init+8)^(0+128)
  2717  0764  3024               	movlw	36
  2718  0765  00BC               	movwf	((??_UART_Init+8)^(0+128)+1)
  2719  0766  30F4               	movlw	244
  2720  0767  00BD               	movwf	((??_UART_Init+8)^(0+128)+2)
  2721  0768  3000               	movlw	0
  2722  0769  00BE               	movwf	((??_UART_Init+8)^(0+128)+3)
  2723  076A  0837               	movf	(??_UART_Init+4)^(0+128),w
  2724  076B  02BB               	subwf	(??_UART_Init+8)^(0+128),f
  2725  076C  0838               	movf	(??_UART_Init+5)^(0+128),w
  2726  076D  1C03               	skipc
  2727  076E  0F38               	incfsz	(??_UART_Init+5)^(0+128),w
  2728  076F  2F71               	goto	u3621
  2729  0770  2F72               	goto	u3622
  2730  0771                     u3621:
  2731  0771  02BC               	subwf	((??_UART_Init+8)^(0+128)+1),f
  2732  0772                     u3622:
  2733  0772  0839               	movf	(??_UART_Init+6)^(0+128),w
  2734  0773  1C03               	skipc
  2735  0774  0F39               	incfsz	(??_UART_Init+6)^(0+128),w
  2736  0775  2F77               	goto	u3623
  2737  0776  2F78               	goto	u3624
  2738  0777                     u3623:
  2739  0777  02BD               	subwf	((??_UART_Init+8)^(0+128)+2),f
  2740  0778                     u3624:
  2741  0778  083A               	movf	(??_UART_Init+7)^(0+128),w
  2742  0779  1C03               	skipc
  2743  077A  0F3A               	incfsz	(??_UART_Init+7)^(0+128),w
  2744  077B  2F7D               	goto	u3625
  2745  077C  2F7E               	goto	u3626
  2746  077D                     u3625:
  2747  077D  02BE               	subwf	((??_UART_Init+8)^(0+128)+3),f
  2748  077E                     u3626:
  2749  077E  083E               	movf	(??_UART_Init+11)^(0+128),w
  2750  077F  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  2751  0780  083D               	movf	(??_UART_Init+10)^(0+128),w
  2752  0781  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  2753  0782  083C               	movf	(??_UART_Init+9)^(0+128),w
  2754  0783  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  2755  0784  083B               	movf	(??_UART_Init+8)^(0+128),w
  2756  0785  00A4               	movwf	___aldiv@dividend^(0+128)
  2757  0786  120A  158A  26A7  120A  118A  	fcall	___aldiv
  2758  078B  1683               	bsf	3,5	;RP0=1, select bank1
  2759  078C  1303               	bcf	3,6	;RP1=0, select bank1
  2760  078D  0821               	movf	(?___aldiv+1)^(0+128),w
  2761  078E  00C0               	movwf	(UART_Init@x+1)^(0+128)
  2762  078F  0820               	movf	?___aldiv^(0+128),w
  2763  0790  00BF               	movwf	UART_Init@x^(0+128)
  2764  0791                     l3086:
  2765                           
  2766                           ;./uart.h: 28:   BRGH = 1;
  2767  0791  1518               	bsf	24,2	;volatile
  2768  0792                     l3088:
  2769                           
  2770                           ;./uart.h: 31:  if(x<255)
  2771  0792  3000               	movlw	0
  2772  0793  0240               	subwf	(UART_Init@x+1)^(0+128),w
  2773  0794  30FF               	movlw	255
  2774  0795  1903               	skipnz
  2775  0796  023F               	subwf	UART_Init@x^(0+128),w
  2776  0797  1803               	skipnc
  2777  0798  2F9A               	goto	u3631
  2778  0799  2F9B               	goto	u3630
  2779  079A                     u3631:
  2780  079A  2FB2               	goto	l110
  2781  079B                     u3630:
  2782  079B                     l3090:
  2783                           
  2784                           ;./uart.h: 32:  {;./uart.h: 33:    SPBRG = x;
  2785  079B  083F               	movf	UART_Init@x^(0+128),w
  2786  079C  0099               	movwf	25	;volatile
  2787  079D                     l3092:
  2788                           
  2789                           ;./uart.h: 36:    SYNC = 0;
  2790  079D  1218               	bcf	24,4	;volatile
  2791  079E                     l3094:
  2792                           
  2793                           ;./uart.h: 37:    SPEN = 1;
  2794  079E  1283               	bcf	3,5	;RP0=0, select bank0
  2795  079F  1303               	bcf	3,6	;RP1=0, select bank0
  2796  07A0  1798               	bsf	24,7	;volatile
  2797  07A1                     l3096:
  2798                           
  2799                           ;./uart.h: 40:    TRISC7 = 1;
  2800  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  2801  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  2802  07A3  1787               	bsf	7,7	;volatile
  2803  07A4                     l3098:
  2804                           
  2805                           ;./uart.h: 41:   TRISC6 = 1;
  2806  07A4  1707               	bsf	7,6	;volatile
  2807  07A5                     l3100:
  2808                           
  2809                           ;./uart.h: 48:  RCIE = 1;
  2810  07A5  168C               	bsf	12,5	;volatile
  2811  07A6                     l3102:
  2812                           
  2813                           ;./uart.h: 49:  PEIE = 1;
  2814  07A6  170B               	bsf	11,6	;volatile
  2815  07A7                     l3104:
  2816                           
  2817                           ;./uart.h: 50:  GIE = 1;
  2818  07A7  178B               	bsf	11,7	;volatile
  2819  07A8                     l3106:
  2820                           
  2821                           ;./uart.h: 53:   CREN = 1;
  2822  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2823  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2824  07AA  1618               	bsf	24,4	;volatile
  2825  07AB                     l3108:
  2826                           
  2827                           ;./uart.h: 54:    TXEN = 1;
  2828  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  2829  07AC  1303               	bcf	3,6	;RP1=0, select bank1
  2830  07AD  1698               	bsf	24,5	;volatile
  2831  07AE                     l3110:
  2832                           
  2833                           ;./uart.h: 57:     TX9 = 0;
  2834  07AE  1318               	bcf	24,6	;volatile
  2835  07AF                     l3112:
  2836                           
  2837                           ;./uart.h: 58:     RX9 = 0;
  2838  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  2839  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  2840  07B1  1318               	bcf	24,6	;volatile
  2841  07B2                     l110:
  2842  07B2  0008               	return
  2843  07B3                     __end_of_UART_Init:
  2844                           
  2845                           	psect	text8
  2846  0EA7                     __ptext8:	
  2847 ;; *************** function ___aldiv *****************
  2848 ;; Defined at:
  2849 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  divisor         4    0[BANK1 ] long 
  2852 ;;  dividend        4    4[BANK1 ] long 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  quotient        4   11[BANK1 ] long 
  2855 ;;  sign            1   10[BANK1 ] unsigned char 
  2856 ;;  counter         1    9[BANK1 ] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  4    0[BANK1 ] long 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0, btemp+1
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2866 ;;      Params:         0       0       8       0       0
  2867 ;;      Locals:         0       0       6       0       0
  2868 ;;      Temps:          0       0       1       0       0
  2869 ;;      Totals:         0       0      15       0       0
  2870 ;;Total ram usage:       15 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    3
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_UART_Init
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           
  2881                           ;psect for function ___aldiv
  2882  0EA7                     ___aldiv:
  2883  0EA7                     l2906:	
  2884                           ;incstack = 0
  2885                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  2886                           
  2887  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  2888  0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  2889  0EA9  01AA               	clrf	___aldiv@sign^(0+128)
  2890  0EAA                     l2908:
  2891  0EAA  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  2892  0EAB  2EAD               	goto	u3141
  2893  0EAC  2EAE               	goto	u3140
  2894  0EAD                     u3141:
  2895  0EAD  2EBB               	goto	l430
  2896  0EAE                     u3140:
  2897  0EAE                     l2910:
  2898  0EAE  09A0               	comf	___aldiv@divisor^(0+128),f
  2899  0EAF  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  2900  0EB0  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  2901  0EB1  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  2902  0EB2  0AA0               	incf	___aldiv@divisor^(0+128),f
  2903  0EB3  1903               	skipnz
  2904  0EB4  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  2905  0EB5  1903               	skipnz
  2906  0EB6  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  2907  0EB7  1903               	skipnz
  2908  0EB8  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  2909  0EB9  01AA               	clrf	___aldiv@sign^(0+128)
  2910  0EBA  0AAA               	incf	___aldiv@sign^(0+128),f
  2911  0EBB                     l430:
  2912  0EBB  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  2913  0EBC  2EBE               	goto	u3151
  2914  0EBD  2EBF               	goto	u3150
  2915  0EBE                     u3151:
  2916  0EBE  2ECE               	goto	l2916
  2917  0EBF                     u3150:
  2918  0EBF                     l2912:
  2919  0EBF  09A4               	comf	___aldiv@dividend^(0+128),f
  2920  0EC0  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  2921  0EC1  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  2922  0EC2  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  2923  0EC3  0AA4               	incf	___aldiv@dividend^(0+128),f
  2924  0EC4  1903               	skipnz
  2925  0EC5  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  2926  0EC6  1903               	skipnz
  2927  0EC7  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  2928  0EC8  1903               	skipnz
  2929  0EC9  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  2930  0ECA                     l2914:
  2931  0ECA  3001               	movlw	1
  2932  0ECB  00FF               	movwf	btemp+1
  2933  0ECC  087F               	movf	btemp+1,w
  2934  0ECD  06AA               	xorwf	___aldiv@sign^(0+128),f
  2935  0ECE                     l2916:
  2936  0ECE  3000               	movlw	0
  2937  0ECF  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  2938  0ED0  3000               	movlw	0
  2939  0ED1  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  2940  0ED2  3000               	movlw	0
  2941  0ED3  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  2942  0ED4  3000               	movlw	0
  2943  0ED5  00AB               	movwf	___aldiv@quotient^(0+128)
  2944  0ED6                     l2918:
  2945  0ED6  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  2946  0ED7  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  2947  0ED8  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  2948  0ED9  0420               	iorwf	___aldiv@divisor^(0+128),w
  2949  0EDA  1903               	skipnz
  2950  0EDB  2EDD               	goto	u3161
  2951  0EDC  2EDE               	goto	u3160
  2952  0EDD                     u3161:
  2953  0EDD  2F2B               	goto	l2940
  2954  0EDE                     u3160:
  2955  0EDE                     l2920:
  2956  0EDE  01A9               	clrf	___aldiv@counter^(0+128)
  2957  0EDF  0AA9               	incf	___aldiv@counter^(0+128),f
  2958  0EE0  2EEE               	goto	l2926
  2959  0EE1                     l2922:
  2960  0EE1  3001               	movlw	1
  2961  0EE2  00A8               	movwf	??___aldiv^(0+128)
  2962  0EE3                     u3175:
  2963  0EE3  1003               	clrc
  2964  0EE4  0DA0               	rlf	___aldiv@divisor^(0+128),f
  2965  0EE5  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  2966  0EE6  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  2967  0EE7  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  2968  0EE8  0BA8               	decfsz	??___aldiv^(0+128),f
  2969  0EE9  2EE3               	goto	u3175
  2970  0EEA                     l2924:
  2971  0EEA  3001               	movlw	1
  2972  0EEB  00FF               	movwf	btemp+1
  2973  0EEC  087F               	movf	btemp+1,w
  2974  0EED  07A9               	addwf	___aldiv@counter^(0+128),f
  2975  0EEE                     l2926:
  2976  0EEE  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  2977  0EEF  2EF1               	goto	u3181
  2978  0EF0  2EF2               	goto	u3180
  2979  0EF1                     u3181:
  2980  0EF1  2EE1               	goto	l2922
  2981  0EF2                     u3180:
  2982  0EF2                     l2928:
  2983  0EF2  3001               	movlw	1
  2984  0EF3  00A8               	movwf	??___aldiv^(0+128)
  2985  0EF4                     u3195:
  2986  0EF4  1003               	clrc
  2987  0EF5  0DAB               	rlf	___aldiv@quotient^(0+128),f
  2988  0EF6  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  2989  0EF7  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  2990  0EF8  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  2991  0EF9  0BA8               	decfsz	??___aldiv^(0+128),f
  2992  0EFA  2EF4               	goto	u3195
  2993  0EFB                     l2930:
  2994  0EFB  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  2995  0EFC  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  2996  0EFD  1D03               	skipz
  2997  0EFE  2F09               	goto	u3205
  2998  0EFF  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  2999  0F00  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  3000  0F01  1D03               	skipz
  3001  0F02  2F09               	goto	u3205
  3002  0F03  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  3003  0F04  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  3004  0F05  1D03               	skipz
  3005  0F06  2F09               	goto	u3205
  3006  0F07  0820               	movf	___aldiv@divisor^(0+128),w
  3007  0F08  0224               	subwf	___aldiv@dividend^(0+128),w
  3008  0F09                     u3205:
  3009  0F09  1C03               	skipc
  3010  0F0A  2F0C               	goto	u3201
  3011  0F0B  2F0D               	goto	u3200
  3012  0F0C                     u3201:
  3013  0F0C  2F1C               	goto	l2936
  3014  0F0D                     u3200:
  3015  0F0D                     l2932:
  3016  0F0D  0820               	movf	___aldiv@divisor^(0+128),w
  3017  0F0E  02A4               	subwf	___aldiv@dividend^(0+128),f
  3018  0F0F  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  3019  0F10  1C03               	skipc
  3020  0F11  0F21               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3021  0F12  02A5               	subwf	(___aldiv@dividend+1)^(0+128),f
  3022  0F13  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  3023  0F14  1C03               	skipc
  3024  0F15  0F22               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3025  0F16  02A6               	subwf	(___aldiv@dividend+2)^(0+128),f
  3026  0F17  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  3027  0F18  1C03               	skipc
  3028  0F19  0F23               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3029  0F1A  02A7               	subwf	(___aldiv@dividend+3)^(0+128),f
  3030  0F1B                     l2934:
  3031  0F1B  142B               	bsf	___aldiv@quotient^(0+128),0
  3032  0F1C                     l2936:
  3033  0F1C  3001               	movlw	1
  3034  0F1D                     u3215:
  3035  0F1D  1003               	clrc
  3036  0F1E  0CA3               	rrf	(___aldiv@divisor+3)^(0+128),f
  3037  0F1F  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  3038  0F20  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  3039  0F21  0CA0               	rrf	___aldiv@divisor^(0+128),f
  3040  0F22  3EFF               	addlw	-1
  3041  0F23  1D03               	skipz
  3042  0F24  2F1D               	goto	u3215
  3043  0F25                     l2938:
  3044  0F25  3001               	movlw	1
  3045  0F26  02A9               	subwf	___aldiv@counter^(0+128),f
  3046  0F27  1D03               	btfss	3,2
  3047  0F28  2F2A               	goto	u3221
  3048  0F29  2F2B               	goto	u3220
  3049  0F2A                     u3221:
  3050  0F2A  2EF2               	goto	l2928
  3051  0F2B                     u3220:
  3052  0F2B                     l2940:
  3053  0F2B  082A               	movf	___aldiv@sign^(0+128),w
  3054  0F2C  1903               	btfsc	3,2
  3055  0F2D  2F2F               	goto	u3231
  3056  0F2E  2F30               	goto	u3230
  3057  0F2F                     u3231:
  3058  0F2F  2F3B               	goto	l2944
  3059  0F30                     u3230:
  3060  0F30                     l2942:
  3061  0F30  09AB               	comf	___aldiv@quotient^(0+128),f
  3062  0F31  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  3063  0F32  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  3064  0F33  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  3065  0F34  0AAB               	incf	___aldiv@quotient^(0+128),f
  3066  0F35  1903               	skipnz
  3067  0F36  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  3068  0F37  1903               	skipnz
  3069  0F38  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  3070  0F39  1903               	skipnz
  3071  0F3A  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  3072  0F3B                     l2944:
  3073  0F3B  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  3074  0F3C  00A3               	movwf	(?___aldiv+3)^(0+128)
  3075  0F3D  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  3076  0F3E  00A2               	movwf	(?___aldiv+2)^(0+128)
  3077  0F3F  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  3078  0F40  00A1               	movwf	(?___aldiv+1)^(0+128)
  3079  0F41  082B               	movf	___aldiv@quotient^(0+128),w
  3080  0F42  00A0               	movwf	?___aldiv^(0+128)
  3081  0F43                     l440:
  3082  0F43  0008               	return
  3083  0F44                     __end_of___aldiv:
  3084                           
  3085                           	psect	text9
  3086  09F3                     __ptext9:	
  3087 ;; *************** function _TIMER1_Init *****************
  3088 ;; Defined at:
  3089 ;;		line 174 in file "main.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		None
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       0       0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    3
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _TIMER1_Init
  3119  09F3                     _TIMER1_Init:
  3120  09F3                     l3116:	
  3121                           ;incstack = 0
  3122                           ; Regs used in _TIMER1_Init: []
  3123                           
  3124                           
  3125                           ;main.c: 176:     TMR1ON=1;
  3126  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3127  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3128  09F5  1410               	bsf	16,0	;volatile
  3129                           
  3130                           ;main.c: 178:     TMR1CS=0;
  3131  09F6  1090               	bcf	16,1	;volatile
  3132                           
  3133                           ;main.c: 180:     T1SYNC=1;
  3134  09F7  1510               	bsf	16,2	;volatile
  3135                           
  3136                           ;main.c: 182:     T1OSCEN=0;
  3137  09F8  1190               	bcf	16,3	;volatile
  3138                           
  3139                           ;main.c: 184:     T1CKPS0 = 1;
  3140  09F9  1610               	bsf	16,4	;volatile
  3141                           
  3142                           ;main.c: 185:     T1CKPS1 = 1;
  3143  09FA  1690               	bsf	16,5	;volatile
  3144                           
  3145                           ;main.c: 187:     TMR1 = 65036;
  3146  09FB  30FE               	movlw	254
  3147  09FC  008F               	movwf	15	;volatile
  3148  09FD  300C               	movlw	12
  3149  09FE  008E               	movwf	14	;volatile
  3150                           
  3151                           ;main.c: 188:     TMR1IE=1;
  3152  09FF  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0A00  1303               	bcf	3,6	;RP1=0, select bank1
  3154  0A01  140C               	bsf	12,0	;volatile
  3155                           
  3156                           ;main.c: 189:     TMR1IF=0;
  3157  0A02  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0A03  1303               	bcf	3,6	;RP1=0, select bank0
  3159  0A04  100C               	bcf	12,0	;volatile
  3160                           
  3161                           ;main.c: 190:     GIE=1;
  3162  0A05  178B               	bsf	11,7	;volatile
  3163                           
  3164                           ;main.c: 191:     PEIE=1;
  3165  0A06  170B               	bsf	11,6	;volatile
  3166  0A07                     l196:
  3167  0A07  0008               	return
  3168  0A08                     __end_of_TIMER1_Init:
  3169                           
  3170                           	psect	text10
  3171  0D3C                     __ptext10:	
  3172 ;; *************** function _LCDWriteString *****************
  3173 ;; Defined at:
  3174 ;;		line 210 in file "lcd_hd44780_pic16.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  msg             1    wreg     PTR const unsigned char 
  3177 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  3178 ;;		 -> STR_3(11), 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  msg             1   11[BANK1 ] PTR const unsigned char 
  3181 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  3182 ;;		 -> STR_3(11), 
  3183 ;;  cc              1   10[BANK1 ] char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       0       0       0       0
  3194 ;;      Locals:         0       0       2       0       0
  3195 ;;      Temps:          0       0       0       0       0
  3196 ;;      Totals:         0       0       2       0       0
  3197 ;;Total ram usage:        2 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    5
  3200 ;; This function calls:
  3201 ;;		_LCDByte
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;;		_display
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _LCDWriteString
  3210  0D3C                     _LCDWriteString:
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3214                           ;LCDWriteString@msg stored from wreg
  3215  0D3C  1683               	bsf	3,5	;RP0=1, select bank1
  3216  0D3D  1303               	bcf	3,6	;RP1=0, select bank1
  3217  0D3E  00AB               	movwf	LCDWriteString@msg^(0+128)
  3218  0D3F                     l3186:
  3219                           
  3220                           ;lcd_hd44780_pic16.c: 210: void LCDWriteString(const char *msg);lcd_hd44780_pic16.c: 211
      +                          : {;lcd_hd44780_pic16.c: 240:  while(*msg!='\0')
  3221  0D3F  2D9C               	goto	l3208
  3222  0D40                     l3188:
  3223                           
  3224                           ;lcd_hd44780_pic16.c: 241:  {;lcd_hd44780_pic16.c: 243:  if(*msg=='%')
  3225  0D40  082B               	movf	LCDWriteString@msg^(0+128),w
  3226  0D41  0084               	movwf	4
  3227  0D42  120A  158A  2000  120A  158A  	fcall	stringdir
  3228  0D47  3A25               	xorlw	37
  3229  0D48  1D03               	skipz
  3230  0D49  2D4B               	goto	u3661
  3231  0D4A  2D4C               	goto	u3660
  3232  0D4B                     u3661:
  3233  0D4B  2D88               	goto	l3204
  3234  0D4C                     u3660:
  3235  0D4C                     l3190:
  3236                           
  3237                           ;lcd_hd44780_pic16.c: 244:  {;lcd_hd44780_pic16.c: 245:   msg++;
  3238  0D4C  3001               	movlw	1
  3239  0D4D  00FF               	movwf	btemp+1
  3240  0D4E  087F               	movf	btemp+1,w
  3241  0D4F  07AB               	addwf	LCDWriteString@msg^(0+128),f
  3242  0D50                     l3192:
  3243                           
  3244                           ;lcd_hd44780_pic16.c: 246:   int8_t cc=*msg-'0';
  3245  0D50  082B               	movf	LCDWriteString@msg^(0+128),w
  3246  0D51  0084               	movwf	4
  3247  0D52  120A  158A  2000  120A  158A  	fcall	stringdir
  3248  0D57  3ED0               	addlw	-48
  3249  0D58  00FF               	movwf	btemp+1
  3250  0D59  087F               	movf	btemp+1,w
  3251  0D5A  00AA               	movwf	LCDWriteString@cc^(0+128)
  3252  0D5B                     l3194:
  3253                           
  3254                           ;lcd_hd44780_pic16.c: 248:   if(cc>=0 && cc<=7)
  3255  0D5B  1BAA               	btfsc	LCDWriteString@cc^(0+128),7
  3256  0D5C  2D5E               	goto	u3671
  3257  0D5D  2D5F               	goto	u3670
  3258  0D5E                     u3671:
  3259  0D5E  2D6F               	goto	l3200
  3260  0D5F                     u3670:
  3261  0D5F                     l3196:
  3262  0D5F  082A               	movf	LCDWriteString@cc^(0+128),w
  3263  0D60  3A80               	xorlw	128
  3264  0D61  3E78               	addlw	-136
  3265  0D62  1803               	skipnc
  3266  0D63  2D65               	goto	u3681
  3267  0D64  2D66               	goto	u3680
  3268  0D65                     u3681:
  3269  0D65  2D6F               	goto	l3200
  3270  0D66                     u3680:
  3271  0D66                     l3198:
  3272                           
  3273                           ;lcd_hd44780_pic16.c: 249:   {;lcd_hd44780_pic16.c: 250:    (LCDByte(cc,1));
  3274  0D66  01A4               	clrf	LCDByte@isdata^(0+128)
  3275  0D67  0AA4               	incf	LCDByte@isdata^(0+128),f
  3276  0D68  082A               	movf	LCDWriteString@cc^(0+128),w
  3277  0D69  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3278                           
  3279                           ;lcd_hd44780_pic16.c: 251:   }
  3280  0D6E  2D96               	goto	l3206
  3281  0D6F                     l3200:
  3282                           
  3283                           ;lcd_hd44780_pic16.c: 253:   {;lcd_hd44780_pic16.c: 254:    (LCDByte('%',1));
  3284  0D6F  01A4               	clrf	LCDByte@isdata^(0+128)
  3285  0D70  0AA4               	incf	LCDByte@isdata^(0+128),f
  3286  0D71  3025               	movlw	37
  3287  0D72  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3288  0D77                     l3202:
  3289                           
  3290                           ;lcd_hd44780_pic16.c: 255:    (LCDByte(*msg,1));
  3291  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  3293  0D79  01A4               	clrf	LCDByte@isdata^(0+128)
  3294  0D7A  0AA4               	incf	LCDByte@isdata^(0+128),f
  3295  0D7B  082B               	movf	LCDWriteString@msg^(0+128),w
  3296  0D7C  0084               	movwf	4
  3297  0D7D  120A  158A  2000  120A  158A  	fcall	stringdir
  3298  0D82  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3299  0D87  2D96               	goto	l3206
  3300  0D88                     l3204:
  3301                           
  3302                           ;lcd_hd44780_pic16.c: 259:  {;lcd_hd44780_pic16.c: 260:   (LCDByte(*msg,1));
  3303  0D88  01A4               	clrf	LCDByte@isdata^(0+128)
  3304  0D89  0AA4               	incf	LCDByte@isdata^(0+128),f
  3305  0D8A  082B               	movf	LCDWriteString@msg^(0+128),w
  3306  0D8B  0084               	movwf	4
  3307  0D8C  120A  158A  2000  120A  158A  	fcall	stringdir
  3308  0D91  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3309  0D96                     l3206:
  3310                           
  3311                           ;lcd_hd44780_pic16.c: 262:  msg++;
  3312  0D96  3001               	movlw	1
  3313  0D97  00FF               	movwf	btemp+1
  3314  0D98  087F               	movf	btemp+1,w
  3315  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  3317  0D9B  07AB               	addwf	LCDWriteString@msg^(0+128),f
  3318  0D9C                     l3208:
  3319                           
  3320                           ;lcd_hd44780_pic16.c: 240:  while(*msg!='\0')
  3321  0D9C  082B               	movf	LCDWriteString@msg^(0+128),w
  3322  0D9D  0084               	movwf	4
  3323  0D9E  120A  158A  2000  120A  158A  	fcall	stringdir
  3324  0DA3  3A00               	xorlw	0
  3325  0DA4  1D03               	skipz
  3326  0DA5  2DA7               	goto	u3691
  3327  0DA6  2DA8               	goto	u3690
  3328  0DA7                     u3691:
  3329  0DA7  2D40               	goto	l3188
  3330  0DA8                     u3690:
  3331  0DA8                     l253:
  3332  0DA8  0008               	return
  3333  0DA9                     __end_of_LCDWriteString:
  3334                           
  3335                           	psect	text11
  3336  0C6A                     __ptext11:	
  3337 ;; *************** function _LCDInit *****************
  3338 ;; Defined at:
  3339 ;;		line 152 in file "lcd_hd44780_pic16.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  style           1    wreg     unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  style           1   12[BANK1 ] unsigned char 
  3344 ;;  __i             1   13[BANK1 ] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       0       0       0
  3355 ;;      Locals:         0       0       2       0       0
  3356 ;;      Temps:          0       0       2       0       0
  3357 ;;      Totals:         0       0       4       0       0
  3358 ;;Total ram usage:        4 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    5
  3361 ;; This function calls:
  3362 ;;		_LCDBusyLoop
  3363 ;;		_LCDByte
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _LCDInit
  3371  0C6A                     _LCDInit:
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3375                           ;LCDInit@style stored from wreg
  3376  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0C6B  1303               	bcf	3,6	;RP1=0, select bank1
  3378  0C6C  00AC               	movwf	LCDInit@style^(0+128)
  3379  0C6D                     l3118:
  3380                           
  3381                           ;lcd_hd44780_pic16.c: 152: void LCDInit(uint8_t style);lcd_hd44780_pic16.c: 153: {;lcd_h
      +                          d44780_pic16.c: 168:   _delay((unsigned long)((30)*(16000000/4000.0)));
  3382  0C6D  309C               	movlw	156
  3383  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0C70  00AB               	movwf	(??_LCDInit^(0+128)+1)
  3386  0C71  30D6               	movlw	214
  3387  0C72  00AA               	movwf	??_LCDInit^(0+128)
  3388  0C73                     u3937:
  3389  0C73  0BAA               	decfsz	??_LCDInit^(0+128),f
  3390  0C74  2C73               	goto	u3937
  3391  0C75  0BAB               	decfsz	(??_LCDInit^(0+128)+1),f
  3392  0C76  2C73               	goto	u3937
  3393  0C77  0000               	nop
  3394  0C78                     l3120:
  3395                           
  3396                           ;lcd_hd44780_pic16.c: 171:  TRISD&=(~(0x0F<<0));
  3397  0C78  30F0               	movlw	240
  3398  0C79  00FF               	movwf	btemp+1
  3399  0C7A  087F               	movf	btemp+1,w
  3400  0C7B  1683               	bsf	3,5	;RP0=1, select bank1
  3401  0C7C  1303               	bcf	3,6	;RP1=0, select bank1
  3402  0C7D  0588               	andwf	8,f	;volatile
  3403  0C7E                     l3122:
  3404                           
  3405                           ;lcd_hd44780_pic16.c: 173:         TRISDbits.TRISD6=0;
  3406  0C7E  1308               	bcf	8,6	;volatile
  3407  0C7F                     l3124:
  3408                           
  3409                           ;lcd_hd44780_pic16.c: 174:         TRISDbits.TRISD4=0;
  3410  0C7F  1208               	bcf	8,4	;volatile
  3411  0C80                     l3126:
  3412                           
  3413                           ;lcd_hd44780_pic16.c: 175:         TRISDbits.TRISD5=0;
  3414  0C80  1288               	bcf	8,5	;volatile
  3415  0C81                     l3128:
  3416                           
  3417                           ;lcd_hd44780_pic16.c: 177:  PORTD&=(~(0x0F<<0));
  3418  0C81  30F0               	movlw	240
  3419  0C82  00FF               	movwf	btemp+1
  3420  0C83  087F               	movf	btemp+1,w
  3421  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0C86  0588               	andwf	8,f	;volatile
  3424  0C87                     l3130:
  3425                           
  3426                           ;lcd_hd44780_pic16.c: 179:         (RD6=0);
  3427  0C87  1308               	bcf	8,6	;volatile
  3428  0C88                     l3132:
  3429                           
  3430                           ;lcd_hd44780_pic16.c: 180:  (RD5=0);
  3431  0C88  1288               	bcf	8,5	;volatile
  3432  0C89                     l3134:
  3433                           
  3434                           ;lcd_hd44780_pic16.c: 181:  (RD4=0);
  3435  0C89  1208               	bcf	8,4	;volatile
  3436  0C8A                     l3136:
  3437                           
  3438                           ;lcd_hd44780_pic16.c: 184:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  3439  0C8A  2C8B               	nop2	;2 cycle nop
  3440  0C8B                     l3138:
  3441                           
  3442                           ;lcd_hd44780_pic16.c: 186:  (RD6=1);
  3443  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0C8D  1708               	bsf	8,6	;volatile
  3446  0C8E                     l3140:
  3447                           
  3448                           ;lcd_hd44780_pic16.c: 187:  PORTD|=((0b00000010)<<0);
  3449  0C8E  1488               	bsf	8,1	;volatile
  3450  0C8F                     l3142:
  3451                           
  3452                           ;lcd_hd44780_pic16.c: 188:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  3453  0C8F  2C90               	nop2	;2 cycle nop
  3454  0C90  2C91               	nop2	;2 cycle nop
  3455  0C91                     l3144:
  3456                           
  3457                           ;lcd_hd44780_pic16.c: 189:  (RD6=0);
  3458  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0C93  1308               	bcf	8,6	;volatile
  3461  0C94                     l3146:
  3462                           
  3463                           ;lcd_hd44780_pic16.c: 190:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  3464  0C94  2C95               	nop2	;2 cycle nop
  3465  0C95  2C96               	nop2	;2 cycle nop
  3466  0C96                     l3148:
  3467                           
  3468                           ;lcd_hd44780_pic16.c: 193:  LCDBusyLoop();
  3469  0C96  120A  158A  23B4  120A  158A  	fcall	_LCDBusyLoop
  3470  0C9B                     l3150:
  3471                           
  3472                           ;lcd_hd44780_pic16.c: 198:  (LCDByte(0b00101000,0));
  3473  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  3474  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  3475  0C9D  01A4               	clrf	LCDByte@isdata^(0+128)
  3476  0C9E  3028               	movlw	40
  3477  0C9F  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3478  0CA4                     l3152:
  3479                           
  3480                           ;lcd_hd44780_pic16.c: 199:         (LCDByte(0b00001100|style,0));
  3481  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  3482  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  3483  0CA6  01A4               	clrf	LCDByte@isdata^(0+128)
  3484  0CA7  082C               	movf	LCDInit@style^(0+128),w
  3485  0CA8  380C               	iorlw	12
  3486  0CA9  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3487  0CAE                     l3154:
  3488                           
  3489                           ;lcd_hd44780_pic16.c: 202:         (LCDByte(0b01000000,0));
  3490  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  3491  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  3492  0CB0  01A4               	clrf	LCDByte@isdata^(0+128)
  3493  0CB1  3040               	movlw	64
  3494  0CB2  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3495  0CB7                     l3156:
  3496                           
  3497                           ;lcd_hd44780_pic16.c: 204:  uint8_t __i;;lcd_hd44780_pic16.c: 205:  for(__i=0;__i<sizeof
      +                          (__cgram);__i++)
  3498  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0CB8  1303               	bcf	3,6	;RP1=0, select bank1
  3500  0CB9  01AD               	clrf	LCDInit@__i^(0+128)
  3501  0CBA                     l3162:
  3502                           
  3503                           ;lcd_hd44780_pic16.c: 206:   (LCDByte(__cgram[__i],1));
  3504  0CBA  01A4               	clrf	LCDByte@isdata^(0+128)
  3505  0CBB  0AA4               	incf	LCDByte@isdata^(0+128),f
  3506  0CBC  082D               	movf	LCDInit@__i^(0+128),w
  3507  0CBD  3E10               	addlw	(low (___cgram| (0+256)))& (0+255)
  3508  0CBE  0084               	movwf	4
  3509  0CBF  1783               	bsf	3,7	;select IRP bank2
  3510  0CC0  0800               	movf	0,w
  3511  0CC1  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3512  0CC6                     l3164:
  3513  0CC6  3001               	movlw	1
  3514  0CC7  00FF               	movwf	btemp+1
  3515  0CC8  087F               	movf	btemp+1,w
  3516  0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  3517  0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  3518  0CCB  07AD               	addwf	LCDInit@__i^(0+128),f
  3519  0CCC                     l3166:
  3520  0CCC  3040               	movlw	64
  3521  0CCD  022D               	subwf	LCDInit@__i^(0+128),w
  3522  0CCE  1C03               	skipc
  3523  0CCF  2CD1               	goto	u3641
  3524  0CD0  2CD2               	goto	u3640
  3525  0CD1                     u3641:
  3526  0CD1  2CBA               	goto	l3162
  3527  0CD2                     u3640:
  3528  0CD2                     l243:
  3529  0CD2  0008               	return
  3530  0CD3                     __end_of_LCDInit:
  3531                           
  3532                           	psect	text12
  3533  0A2F                     __ptext12:	
  3534 ;; *************** function _LCDGotoXY *****************
  3535 ;; Defined at:
  3536 ;;		line 311 in file "lcd_hd44780_pic16.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  x               1    wreg     unsigned char 
  3539 ;;  y               1   10[BANK1 ] unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  x               1   13[BANK1 ] unsigned char 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         0       0       1       0       0
  3552 ;;      Locals:         0       0       1       0       0
  3553 ;;      Temps:          0       0       2       0       0
  3554 ;;      Totals:         0       0       4       0       0
  3555 ;;Total ram usage:        4 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    5
  3558 ;; This function calls:
  3559 ;;		_LCDByte
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;;		_display
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function _LCDGotoXY
  3568  0A2F                     _LCDGotoXY:
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3572                           ;LCDGotoXY@x stored from wreg
  3573  0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  3574  0A30  1303               	bcf	3,6	;RP1=0, select bank1
  3575  0A31  00AD               	movwf	LCDGotoXY@x^(0+128)
  3576  0A32                     l3168:
  3577                           
  3578                           ;lcd_hd44780_pic16.c: 311: void LCDGotoXY(uint8_t x,uint8_t y);lcd_hd44780_pic16.c: 312:
      +                           {;lcd_hd44780_pic16.c: 313:   if(x>=20) return;
  3579  0A32  3014               	movlw	20
  3580  0A33  022D               	subwf	LCDGotoXY@x^(0+128),w
  3581  0A34  1C03               	skipc
  3582  0A35  2A37               	goto	u3651
  3583  0A36  2A38               	goto	u3650
  3584  0A37                     u3651:
  3585  0A37  2A45               	goto	l3178
  3586  0A38                     u3650:
  3587  0A38  2A63               	goto	l273
  3588  0A39                     l277:	
  3589                           ;lcd_hd44780_pic16.c: 321:   case 1:
  3590                           
  3591                           
  3592                           ;lcd_hd44780_pic16.c: 322:    x|=0b01000000;
  3593  0A39  172D               	bsf	LCDGotoXY@x^(0+128),6
  3594                           
  3595                           ;lcd_hd44780_pic16.c: 323:    break;
  3596  0A3A  2A5B               	goto	l276
  3597  0A3B                     l3172:
  3598                           
  3599                           ;lcd_hd44780_pic16.c: 325:    x+=0x14;
  3600  0A3B  3014               	movlw	20
  3601  0A3C  00FF               	movwf	btemp+1
  3602  0A3D  087F               	movf	btemp+1,w
  3603  0A3E  07AD               	addwf	LCDGotoXY@x^(0+128),f
  3604                           
  3605                           ;lcd_hd44780_pic16.c: 326:    break;
  3606  0A3F  2A5B               	goto	l276
  3607  0A40                     l3174:
  3608                           
  3609                           ;lcd_hd44780_pic16.c: 328:    x+=0x54;
  3610  0A40  3054               	movlw	84
  3611  0A41  00FF               	movwf	btemp+1
  3612  0A42  087F               	movf	btemp+1,w
  3613  0A43  07AD               	addwf	LCDGotoXY@x^(0+128),f
  3614                           
  3615                           ;lcd_hd44780_pic16.c: 329:    break;
  3616  0A44  2A5B               	goto	l276
  3617  0A45                     l3178:
  3618  0A45  082A               	movf	LCDGotoXY@y^(0+128),w
  3619  0A46  00AB               	movwf	??_LCDGotoXY^(0+128)
  3620  0A47  01AC               	clrf	(??_LCDGotoXY^(0+128)+1)
  3621                           
  3622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3623                           ; Switch size 1, requested type "simple"
  3624                           ; Number of cases is 1, Range of values is 0 to 0
  3625                           ; switch strategies available:
  3626                           ; Name         Instructions Cycles
  3627                           ; simple_byte            4     3 (average)
  3628                           ; direct_byte           11     8 (fixed)
  3629                           ; jumptable            260     6 (fixed)
  3630                           ;	Chosen strategy is simple_byte
  3631  0A48  082C               	movf	(??_LCDGotoXY+1)^(0+128),w
  3632  0A49  3A00               	xorlw	0	; case 0
  3633  0A4A  1903               	skipnz
  3634  0A4B  2A4D               	goto	l3488
  3635  0A4C  2A5B               	goto	l276
  3636  0A4D                     l3488:
  3637                           
  3638                           ; Switch size 1, requested type "simple"
  3639                           ; Number of cases is 4, Range of values is 0 to 3
  3640                           ; switch strategies available:
  3641                           ; Name         Instructions Cycles
  3642                           ; simple_byte           13     7 (average)
  3643                           ; direct_byte           20     8 (fixed)
  3644                           ; jumptable            260     6 (fixed)
  3645                           ;	Chosen strategy is simple_byte
  3646  0A4D  082B               	movf	??_LCDGotoXY^(0+128),w
  3647  0A4E  3A00               	xorlw	0	; case 0
  3648  0A4F  1903               	skipnz
  3649  0A50  2A5B               	goto	l276
  3650  0A51  3A01               	xorlw	1	; case 1
  3651  0A52  1903               	skipnz
  3652  0A53  2A39               	goto	l277
  3653  0A54  3A03               	xorlw	3	; case 2
  3654  0A55  1903               	skipnz
  3655  0A56  2A3B               	goto	l3172
  3656  0A57  3A01               	xorlw	1	; case 3
  3657  0A58  1903               	skipnz
  3658  0A59  2A40               	goto	l3174
  3659  0A5A  2A5B               	goto	l276
  3660  0A5B                     l276:
  3661                           
  3662                           ;lcd_hd44780_pic16.c: 352:  x|=0b10000000;
  3663  0A5B  17AD               	bsf	LCDGotoXY@x^(0+128),7
  3664  0A5C                     l3180:
  3665                           
  3666                           ;lcd_hd44780_pic16.c: 353:    (LCDByte(x,0));
  3667  0A5C  01A4               	clrf	LCDByte@isdata^(0+128)
  3668  0A5D  082D               	movf	LCDGotoXY@x^(0+128),w
  3669  0A5E  120A  158A  2361  120A  158A  	fcall	_LCDByte
  3670  0A63                     l273:
  3671  0A63  0008               	return
  3672  0A64                     __end_of_LCDGotoXY:
  3673                           
  3674                           	psect	text13
  3675  0B61                     __ptext13:	
  3676 ;; *************** function _LCDByte *****************
  3677 ;; Defined at:
  3678 ;;		line 39 in file "lcd_hd44780_pic16.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  c               1    wreg     unsigned char 
  3681 ;;  isdata          1    4[BANK1 ] unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  c               1    8[BANK1 ] unsigned char 
  3684 ;;  temp            1    9[BANK1 ] unsigned char 
  3685 ;;  ln              1    7[BANK1 ] unsigned char 
  3686 ;;  hn              1    6[BANK1 ] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3696 ;;      Params:         0       0       1       0       0
  3697 ;;      Locals:         0       0       4       0       0
  3698 ;;      Temps:          0       0       1       0       0
  3699 ;;      Totals:         0       0       6       0       0
  3700 ;;Total ram usage:        6 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    4
  3703 ;; This function calls:
  3704 ;;		_LCDBusyLoop
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;;		_LCDInit
  3708 ;;		_LCDWriteString
  3709 ;;		_LCDGotoXY
  3710 ;;		_display
  3711 ;;		_LCDWriteInt
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           
  3716                           ;psect for function _LCDByte
  3717  0B61                     _LCDByte:
  3718                           
  3719                           ;incstack = 0
  3720                           ; Regs used in _LCDByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3721                           ;LCDByte@c stored from wreg
  3722  0B61  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0B62  1303               	bcf	3,6	;RP1=0, select bank1
  3724  0B63  00A8               	movwf	LCDByte@c^(0+128)
  3725  0B64                     l2876:
  3726                           
  3727                           ;lcd_hd44780_pic16.c: 39: void LCDByte(uint8_t c,uint8_t isdata);lcd_hd44780_pic16.c: 40
      +                          : {;lcd_hd44780_pic16.c: 48: uint8_t hn,ln;;lcd_hd44780_pic16.c: 49: uint8_t temp;;lcd_h
      +                          d44780_pic16.c: 51: hn=c>>4;
  3728  0B64  0828               	movf	LCDByte@c^(0+128),w
  3729  0B65  00A5               	movwf	??_LCDByte^(0+128)
  3730  0B66  3004               	movlw	4
  3731  0B67                     u3125:
  3732  0B67  1003               	clrc
  3733  0B68  0CA5               	rrf	??_LCDByte^(0+128),f
  3734  0B69  3EFF               	addlw	-1
  3735  0B6A  1D03               	skipz
  3736  0B6B  2B67               	goto	u3125
  3737  0B6C  0825               	movf	??_LCDByte^(0+128),w
  3738  0B6D  00FF               	movwf	btemp+1
  3739  0B6E  087F               	movf	btemp+1,w
  3740  0B6F  00A6               	movwf	LCDByte@hn^(0+128)
  3741  0B70                     l2878:
  3742                           
  3743                           ;lcd_hd44780_pic16.c: 52: ln=(c & 0x0F);
  3744  0B70  0828               	movf	LCDByte@c^(0+128),w
  3745  0B71  390F               	andlw	15
  3746  0B72  00FF               	movwf	btemp+1
  3747  0B73  087F               	movf	btemp+1,w
  3748  0B74  00A7               	movwf	LCDByte@ln^(0+128)
  3749  0B75                     l2880:
  3750                           
  3751                           ;lcd_hd44780_pic16.c: 54: if(isdata==0)
  3752  0B75  0824               	movf	LCDByte@isdata^(0+128),w
  3753  0B76  1D03               	btfss	3,2
  3754  0B77  2B79               	goto	u3131
  3755  0B78  2B7A               	goto	u3130
  3756  0B79                     u3131:
  3757  0B79  2B7E               	goto	l231
  3758  0B7A                     u3130:
  3759  0B7A                     l2882:
  3760                           
  3761                           ;lcd_hd44780_pic16.c: 55:  (RD4=0);
  3762  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0B7C  1208               	bcf	8,4	;volatile
  3765  0B7D  2B81               	goto	l232
  3766  0B7E                     l231:	
  3767                           ;lcd_hd44780_pic16.c: 56: else
  3768                           
  3769                           
  3770                           ;lcd_hd44780_pic16.c: 57:  (RD4=1);
  3771  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0B80  1608               	bsf	8,4	;volatile
  3774  0B81                     l232:
  3775                           
  3776                           ;lcd_hd44780_pic16.c: 59: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  3777  0B81  2B82               	nop2	;2 cycle nop
  3778                           
  3779                           ;lcd_hd44780_pic16.c: 61: (RD6=1);
  3780  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0B84  1708               	bsf	8,6	;volatile
  3783  0B85                     l2884:
  3784                           
  3785                           ;lcd_hd44780_pic16.c: 65: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  3786  0B85  0808               	movf	8,w	;volatile
  3787  0B86  39F0               	andlw	240
  3788  0B87  1683               	bsf	3,5	;RP0=1, select bank1
  3789  0B88  1303               	bcf	3,6	;RP1=0, select bank1
  3790  0B89  0426               	iorwf	LCDByte@hn^(0+128),w
  3791  0B8A  00FF               	movwf	btemp+1
  3792  0B8B  087F               	movf	btemp+1,w
  3793  0B8C  00A9               	movwf	LCDByte@temp^(0+128)
  3794  0B8D                     l2886:
  3795                           
  3796                           ;lcd_hd44780_pic16.c: 66: PORTD=temp;
  3797  0B8D  0829               	movf	LCDByte@temp^(0+128),w
  3798  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0B90  0088               	movwf	8	;volatile
  3801  0B91                     l2888:
  3802                           
  3803                           ;lcd_hd44780_pic16.c: 68: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3804  0B91  2B92               	nop2	;2 cycle nop
  3805  0B92  2B93               	nop2	;2 cycle nop
  3806  0B93                     l2890:
  3807                           
  3808                           ;lcd_hd44780_pic16.c: 72: (RD6=0);
  3809  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0B95  1308               	bcf	8,6	;volatile
  3812  0B96                     l2892:
  3813                           
  3814                           ;lcd_hd44780_pic16.c: 74: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3815  0B96  2B97               	nop2	;2 cycle nop
  3816  0B97  2B98               	nop2	;2 cycle nop
  3817  0B98                     l2894:
  3818                           
  3819                           ;lcd_hd44780_pic16.c: 77: (RD6=1);
  3820  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0B9A  1708               	bsf	8,6	;volatile
  3823  0B9B                     l2896:
  3824                           
  3825                           ;lcd_hd44780_pic16.c: 79: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  3826  0B9B  0808               	movf	8,w	;volatile
  3827  0B9C  39F0               	andlw	240
  3828  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  3829  0B9E  1303               	bcf	3,6	;RP1=0, select bank1
  3830  0B9F  0427               	iorwf	LCDByte@ln^(0+128),w
  3831  0BA0  00FF               	movwf	btemp+1
  3832  0BA1  087F               	movf	btemp+1,w
  3833  0BA2  00A9               	movwf	LCDByte@temp^(0+128)
  3834                           
  3835                           ;lcd_hd44780_pic16.c: 81: PORTD=temp;
  3836  0BA3  0829               	movf	LCDByte@temp^(0+128),w
  3837  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  3838  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  3839  0BA6  0088               	movwf	8	;volatile
  3840  0BA7                     l2898:
  3841                           
  3842                           ;lcd_hd44780_pic16.c: 83: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3843  0BA7  2BA8               	nop2	;2 cycle nop
  3844  0BA8  2BA9               	nop2	;2 cycle nop
  3845  0BA9                     l2900:
  3846                           
  3847                           ;lcd_hd44780_pic16.c: 87: (RD6=0);
  3848  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0BAB  1308               	bcf	8,6	;volatile
  3851  0BAC                     l2902:
  3852                           
  3853                           ;lcd_hd44780_pic16.c: 89: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3854  0BAC  2BAD               	nop2	;2 cycle nop
  3855  0BAD  2BAE               	nop2	;2 cycle nop
  3856  0BAE                     l2904:
  3857                           
  3858                           ;lcd_hd44780_pic16.c: 91: LCDBusyLoop();
  3859  0BAE  120A  158A  23B4  120A  158A  	fcall	_LCDBusyLoop
  3860  0BB3                     l233:
  3861  0BB3  0008               	return
  3862  0BB4                     __end_of_LCDByte:
  3863                           
  3864                           	psect	text14
  3865  0BB4                     __ptext14:	
  3866 ;; *************** function _LCDBusyLoop *****************
  3867 ;; Defined at:
  3868 ;;		line 94 in file "lcd_hd44780_pic16.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  status          1    3[BANK1 ] unsigned char 
  3873 ;;  temp            1    2[BANK1 ] unsigned char 
  3874 ;;  busy            1    1[BANK1 ] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0, btemp+1
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       0       0
  3885 ;;      Locals:         0       0       3       0       0
  3886 ;;      Temps:          0       0       1       0       0
  3887 ;;      Totals:         0       0       4       0       0
  3888 ;;Total ram usage:        4 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    3
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_LCDByte
  3895 ;;		_LCDInit
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function _LCDBusyLoop
  3901  0BB4                     _LCDBusyLoop:
  3902  0BB4                     l2830:	
  3903                           ;incstack = 0
  3904                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0+btemp+1]
  3905                           
  3906  0BB4                     l2832:
  3907                           
  3908                           ;lcd_hd44780_pic16.c: 101:  TRISD|=(0x0f<<0);
  3909  0BB4  300F               	movlw	15
  3910  0BB5  00FF               	movwf	btemp+1
  3911  0BB6  087F               	movf	btemp+1,w
  3912  0BB7  1683               	bsf	3,5	;RP0=1, select bank1
  3913  0BB8  1303               	bcf	3,6	;RP1=0, select bank1
  3914  0BB9  0488               	iorwf	8,f	;volatile
  3915  0BBA                     l2834:
  3916                           
  3917                           ;lcd_hd44780_pic16.c: 104:  (RD5=1);
  3918  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0BBC  1688               	bsf	8,5	;volatile
  3921  0BBD                     l2836:
  3922                           
  3923                           ;lcd_hd44780_pic16.c: 105:  (RD4=0);
  3924  0BBD  1208               	bcf	8,4	;volatile
  3925  0BBE                     l2838:
  3926                           
  3927                           ;lcd_hd44780_pic16.c: 109:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  3928  0BBE  2BBF               	nop2	;2 cycle nop
  3929  0BBF                     l2840:
  3930                           
  3931                           ;lcd_hd44780_pic16.c: 113:  {;lcd_hd44780_pic16.c: 115:   (RD6=1);
  3932  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  3934  0BC1  1708               	bsf	8,6	;volatile
  3935  0BC2                     l2842:
  3936                           
  3937                           ;lcd_hd44780_pic16.c: 118:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  3938  0BC2  2BC3               	nop2	;2 cycle nop
  3939  0BC3                     l2844:
  3940                           
  3941                           ;lcd_hd44780_pic16.c: 120:   status=(PORTD>>0);
  3942  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0BC5  0808               	movf	8,w	;volatile
  3945  0BC6  00FF               	movwf	btemp+1
  3946  0BC7  087F               	movf	btemp+1,w
  3947  0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  3948  0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  3949  0BCA  00A3               	movwf	LCDBusyLoop@status^(0+128)
  3950  0BCB                     l2846:
  3951                           
  3952                           ;lcd_hd44780_pic16.c: 121:   status=status<<4;
  3953  0BCB  0823               	movf	LCDBusyLoop@status^(0+128),w
  3954  0BCC  00A0               	movwf	??_LCDBusyLoop^(0+128)
  3955  0BCD  3003               	movlw	3
  3956  0BCE                     u3105:
  3957  0BCE  1003               	clrc
  3958  0BCF  0DA0               	rlf	??_LCDBusyLoop^(0+128),f
  3959  0BD0  3EFF               	addlw	-1
  3960  0BD1  1D03               	skipz
  3961  0BD2  2BCE               	goto	u3105
  3962  0BD3  1003               	clrc
  3963  0BD4  0D20               	rlf	??_LCDBusyLoop^(0+128),w
  3964  0BD5  00FF               	movwf	btemp+1
  3965  0BD6  087F               	movf	btemp+1,w
  3966  0BD7  00A3               	movwf	LCDBusyLoop@status^(0+128)
  3967  0BD8                     l2848:
  3968                           
  3969                           ;lcd_hd44780_pic16.c: 123:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  3970  0BD8  2BD9               	nop2	;2 cycle nop
  3971  0BD9                     l2850:
  3972                           
  3973                           ;lcd_hd44780_pic16.c: 126:   (RD6=0);
  3974  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0BDB  1308               	bcf	8,6	;volatile
  3977  0BDC                     l2852:
  3978                           
  3979                           ;lcd_hd44780_pic16.c: 127:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  3980  0BDC  2BDD               	nop2	;2 cycle nop
  3981  0BDD  2BDE               	nop2	;2 cycle nop
  3982  0BDE                     l2854:
  3983                           
  3984                           ;lcd_hd44780_pic16.c: 129:   (RD6=1);
  3985  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0BE0  1708               	bsf	8,6	;volatile
  3988  0BE1                     l2856:
  3989                           
  3990                           ;lcd_hd44780_pic16.c: 130:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  3991  0BE1  2BE2               	nop2	;2 cycle nop
  3992  0BE2                     l2858:
  3993                           
  3994                           ;lcd_hd44780_pic16.c: 132:   temp=(PORTD>>0);
  3995  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0BE4  0808               	movf	8,w	;volatile
  3998  0BE5  00FF               	movwf	btemp+1
  3999  0BE6  087F               	movf	btemp+1,w
  4000  0BE7  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0BE8  1303               	bcf	3,6	;RP1=0, select bank1
  4002  0BE9  00A2               	movwf	LCDBusyLoop@temp^(0+128)
  4003  0BEA                     l2860:
  4004                           
  4005                           ;lcd_hd44780_pic16.c: 133:   temp&=0x0F;
  4006  0BEA  300F               	movlw	15
  4007  0BEB  00FF               	movwf	btemp+1
  4008  0BEC  087F               	movf	btemp+1,w
  4009  0BED  05A2               	andwf	LCDBusyLoop@temp^(0+128),f
  4010  0BEE                     l2862:
  4011                           
  4012                           ;lcd_hd44780_pic16.c: 135:   status=status|temp;
  4013  0BEE  0823               	movf	LCDBusyLoop@status^(0+128),w
  4014  0BEF  0422               	iorwf	LCDBusyLoop@temp^(0+128),w
  4015  0BF0  00FF               	movwf	btemp+1
  4016  0BF1  087F               	movf	btemp+1,w
  4017  0BF2  00A3               	movwf	LCDBusyLoop@status^(0+128)
  4018  0BF3                     l2864:
  4019                           
  4020                           ;lcd_hd44780_pic16.c: 137:   busy=status & 0b10000000;
  4021  0BF3  0823               	movf	LCDBusyLoop@status^(0+128),w
  4022  0BF4  3980               	andlw	128
  4023  0BF5  00FF               	movwf	btemp+1
  4024  0BF6  087F               	movf	btemp+1,w
  4025  0BF7  00A1               	movwf	LCDBusyLoop@busy^(0+128)
  4026  0BF8                     l2866:
  4027                           
  4028                           ;lcd_hd44780_pic16.c: 139:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  4029  0BF8  2BF9               	nop2	;2 cycle nop
  4030  0BF9                     l2868:
  4031                           
  4032                           ;lcd_hd44780_pic16.c: 141:                 (RD6=0);
  4033  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0BFB  1308               	bcf	8,6	;volatile
  4036  0BFC                     l2870:
  4037                           
  4038                           ;lcd_hd44780_pic16.c: 142:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  4039  0BFC  2BFD               	nop2	;2 cycle nop
  4040  0BFD  2BFE               	nop2	;2 cycle nop
  4041  0BFE                     l2872:
  4042                           
  4043                           ;lcd_hd44780_pic16.c: 143:  }while(busy);
  4044  0BFE  1683               	bsf	3,5	;RP0=1, select bank1
  4045  0BFF  1303               	bcf	3,6	;RP1=0, select bank1
  4046  0C00  0821               	movf	LCDBusyLoop@busy^(0+128),w
  4047  0C01  1D03               	btfss	3,2
  4048  0C02  2C04               	goto	u3111
  4049  0C03  2C05               	goto	u3110
  4050  0C04                     u3111:
  4051  0C04  2BBF               	goto	l2840
  4052  0C05                     u3110:
  4053  0C05                     l237:
  4054                           
  4055                           ;lcd_hd44780_pic16.c: 145:  (RD5=0);
  4056  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0C07  1288               	bcf	8,5	;volatile
  4059  0C08                     l2874:
  4060                           
  4061                           ;lcd_hd44780_pic16.c: 148:  TRISD&=(~(0x0F<<0));
  4062  0C08  30F0               	movlw	240
  4063  0C09  00FF               	movwf	btemp+1
  4064  0C0A  087F               	movf	btemp+1,w
  4065  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  4066  0C0C  1303               	bcf	3,6	;RP1=0, select bank1
  4067  0C0D  0588               	andwf	8,f	;volatile
  4068  0C0E                     l238:
  4069  0C0E  0008               	return
  4070  0C0F                     __end_of_LCDBusyLoop:
  4071                           
  4072                           	psect	text15
  4073  09D7                     __ptext15:	
  4074 ;; *************** function _ADC_Init *****************
  4075 ;; Defined at:
  4076 ;;		line 4 in file "./adc_thay_hai.h"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    3
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           
  4105                           ;psect for function _ADC_Init
  4106  09D7                     _ADC_Init:
  4107  09D7                     l3078:	
  4108                           ;incstack = 0
  4109                           ; Regs used in _ADC_Init: [wreg]
  4110                           
  4111                           
  4112                           ;./adc_thay_hai.h: 6:     ADCON1 = 0b11000100;
  4113  09D7  30C4               	movlw	196
  4114  09D8  1683               	bsf	3,5	;RP0=1, select bank1
  4115  09D9  1303               	bcf	3,6	;RP1=0, select bank1
  4116  09DA  009F               	movwf	31	;volatile
  4117                           
  4118                           ;./adc_thay_hai.h: 7:     ADCON0 =0x80;
  4119  09DB  3080               	movlw	128
  4120  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  4121  09DD  1303               	bcf	3,6	;RP1=0, select bank0
  4122  09DE  009F               	movwf	31	;volatile
  4123  09DF                     l95:
  4124  09DF  0008               	return
  4125  09E0                     __end_of_ADC_Init:
  4126                           
  4127                           	psect	text16
  4128  059A                     __ptext16:	
  4129 ;; *************** function _ISR *****************
  4130 ;; Defined at:
  4131 ;;		line 48 in file "main.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  ch              1   29[BANK0 ] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4145 ;;      Params:         0       0       0       0       0
  4146 ;;      Locals:         0       1       0       0       0
  4147 ;;      Temps:          0       8       0       0       0
  4148 ;;      Totals:         0       9       0       0       0
  4149 ;;Total ram usage:        9 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    2
  4152 ;; This function calls:
  4153 ;;		_ADC_Read
  4154 ;;		___flmul
  4155 ;;		___xxtofl
  4156 ;;		_strncmp
  4157 ;; This function is called by:
  4158 ;;		Interrupt level 1
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _ISR
  4164  059A                     _ISR:
  4165  059A                     i1l2550:
  4166                           
  4167                           ;main.c: 50:     char ch;;main.c: 52:     if(TMR1IE && TMR1IF)
  4168  059A  1683               	bsf	3,5	;RP0=1, select bank1
  4169  059B  1303               	bcf	3,6	;RP1=0, select bank1
  4170  059C  1C0C               	btfss	12,0	;volatile
  4171  059D  2D9F               	goto	u288_21
  4172  059E  2DA0               	goto	u288_20
  4173  059F                     u288_21:
  4174  059F  2E60               	goto	i1l2578
  4175  05A0                     u288_20:
  4176  05A0                     i1l2552:
  4177  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  4178  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  4179  05A2  1C0C               	btfss	12,0	;volatile
  4180  05A3  2DA5               	goto	u289_21
  4181  05A4  2DA6               	goto	u289_20
  4182  05A5                     u289_21:
  4183  05A5  2E60               	goto	i1l2578
  4184  05A6                     u289_20:
  4185  05A6                     i1l2554:
  4186                           
  4187                           ;main.c: 53:     {;main.c: 54:         TMR1 = 65036;
  4188  05A6  30FE               	movlw	254
  4189  05A7  008F               	movwf	15	;volatile
  4190  05A8  300C               	movlw	12
  4191  05A9  008E               	movwf	14	;volatile
  4192                           
  4193                           ;main.c: 55:         TMR1IF=0;
  4194  05AA  100C               	bcf	12,0	;volatile
  4195  05AB                     i1l2556:
  4196                           
  4197                           ;main.c: 57:         count++;
  4198  05AB  3001               	movlw	1
  4199  05AC  07CB               	addwf	_count,f
  4200  05AD  1803               	skipnc
  4201  05AE  0ACC               	incf	_count+1,f
  4202  05AF  3000               	movlw	0
  4203  05B0  07CC               	addwf	_count+1,f
  4204  05B1                     i1l2558:
  4205                           
  4206                           ;main.c: 58:         if(count == 20)
  4207  05B1  3014               	movlw	20
  4208  05B2  064B               	xorwf	_count,w
  4209  05B3  044C               	iorwf	_count+1,w
  4210  05B4  1D03               	btfss	3,2
  4211  05B5  2DB7               	goto	u290_21
  4212  05B6  2DB8               	goto	u290_20
  4213  05B7                     u290_21:
  4214  05B7  2E60               	goto	i1l2578
  4215  05B8                     u290_20:
  4216  05B8                     i1l2560:
  4217                           
  4218                           ;main.c: 59:         {;main.c: 60:             count++;
  4219  05B8  3001               	movlw	1
  4220  05B9  07CB               	addwf	_count,f
  4221  05BA  1803               	skipnc
  4222  05BB  0ACC               	incf	_count+1,f
  4223  05BC  3000               	movlw	0
  4224  05BD  07CC               	addwf	_count+1,f
  4225                           
  4226                           ;main.c: 61:             count1++;
  4227  05BE  3001               	movlw	1
  4228  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  4229  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  4230  05C1  07DD               	addwf	_count1^(0+128),f
  4231  05C2  1803               	skipnc
  4232  05C3  0ADE               	incf	(_count1+1)^(0+128),f
  4233  05C4  3000               	movlw	0
  4234  05C5  07DE               	addwf	(_count1+1)^(0+128),f
  4235  05C6                     i1l2562:
  4236                           
  4237                           ;main.c: 62:             if(do_dienap)
  4238  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  4239  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  4240  05C8  0851               	movf	_do_dienap,w
  4241  05C9  1903               	btfsc	3,2
  4242  05CA  2DCC               	goto	u291_21
  4243  05CB  2DCD               	goto	u291_20
  4244  05CC                     u291_21:
  4245  05CC  2E17               	goto	i1l2570
  4246  05CD                     u291_20:
  4247  05CD                     i1l2564:
  4248                           
  4249                           ;main.c: 63:             {;main.c: 64:                 dienap=(float)ADC_Read(0);
  4250  05CD  3000               	movlw	0
  4251  05CE  120A  158A  2264  120A  118A  	fcall	_ADC_Read
  4252  05D3  0870               	movf	?_ADC_Read,w
  4253  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  4254  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  4255  05D6  00B5               	movwf	??_ISR
  4256  05D7  0871               	movf	?_ADC_Read+1,w
  4257  05D8  00B6               	movwf	??_ISR+1
  4258  05D9  01B7               	clrf	??_ISR+2
  4259  05DA  01B8               	clrf	??_ISR+3
  4260  05DB  0838               	movf	??_ISR+3,w
  4261  05DC  00FA               	movwf	___xxtofl@val+3
  4262  05DD  0837               	movf	??_ISR+2,w
  4263  05DE  00F9               	movwf	___xxtofl@val+2
  4264  05DF  0836               	movf	??_ISR+1,w
  4265  05E0  00F8               	movwf	___xxtofl@val+1
  4266  05E1  0835               	movf	??_ISR,w
  4267  05E2  00F7               	movwf	___xxtofl@val
  4268  05E3  3000               	movlw	0
  4269  05E4  120A  158A  2744  120A  118A  	fcall	___xxtofl
  4270  05E9  087A               	movf	?___xxtofl+3,w
  4271  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4272  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  4273  05EC  00C1               	movwf	_dienap+3
  4274  05ED  0879               	movf	?___xxtofl+2,w
  4275  05EE  00C0               	movwf	_dienap+2
  4276  05EF  0878               	movf	?___xxtofl+1,w
  4277  05F0  00BF               	movwf	_dienap+1
  4278  05F1  0877               	movf	?___xxtofl,w
  4279  05F2  00BE               	movwf	_dienap
  4280  05F3                     i1l2566:
  4281                           
  4282                           ;main.c: 65:                 dienap *= 0.489;
  4283  05F3  303E               	movlw	62
  4284  05F4  00A3               	movwf	___flmul@b+3
  4285  05F5  30FA               	movlw	250
  4286  05F6  00A2               	movwf	___flmul@b+2
  4287  05F7  305E               	movlw	94
  4288  05F8  00A1               	movwf	___flmul@b+1
  4289  05F9  3035               	movlw	53
  4290  05FA  00A0               	movwf	___flmul@b
  4291  05FB  0841               	movf	_dienap+3,w
  4292  05FC  00A7               	movwf	___flmul@a+3
  4293  05FD  0840               	movf	_dienap+2,w
  4294  05FE  00A6               	movwf	___flmul@a+2
  4295  05FF  083F               	movf	_dienap+1,w
  4296  0600  00A5               	movwf	___flmul@a+1
  4297  0601  083E               	movf	_dienap,w
  4298  0602  00A4               	movwf	___flmul@a
  4299  0603  120A  118A  204C  120A  118A  	fcall	___flmul
  4300  0608  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0609  1303               	bcf	3,6	;RP1=0, select bank0
  4302  060A  0823               	movf	?___flmul+3,w
  4303  060B  00C1               	movwf	_dienap+3
  4304  060C  0822               	movf	?___flmul+2,w
  4305  060D  00C0               	movwf	_dienap+2
  4306  060E  0821               	movf	?___flmul+1,w
  4307  060F  00BF               	movwf	_dienap+1
  4308  0610  0820               	movf	?___flmul,w
  4309  0611  00BE               	movwf	_dienap
  4310  0612                     i1l2568:
  4311                           
  4312                           ;main.c: 66:                 adc_ok=1;
  4313  0612  1683               	bsf	3,5	;RP0=1, select bank1
  4314  0613  1303               	bcf	3,6	;RP1=0, select bank1
  4315  0614  01DF               	clrf	_adc_ok^(0+128)
  4316  0615  0ADF               	incf	_adc_ok^(0+128),f
  4317                           
  4318                           ;main.c: 67:             }
  4319  0616  2E5D               	goto	i1l2576
  4320  0617                     i1l2570:
  4321                           
  4322                           ;main.c: 69:             {;main.c: 70:                 dong=(float)ADC_Read(1);
  4323  0617  3001               	movlw	1
  4324  0618  120A  158A  2264  120A  118A  	fcall	_ADC_Read
  4325  061D  0870               	movf	?_ADC_Read,w
  4326  061E  1283               	bcf	3,5	;RP0=0, select bank0
  4327  061F  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0620  00B5               	movwf	??_ISR
  4329  0621  0871               	movf	?_ADC_Read+1,w
  4330  0622  00B6               	movwf	??_ISR+1
  4331  0623  01B7               	clrf	??_ISR+2
  4332  0624  01B8               	clrf	??_ISR+3
  4333  0625  0838               	movf	??_ISR+3,w
  4334  0626  00FA               	movwf	___xxtofl@val+3
  4335  0627  0837               	movf	??_ISR+2,w
  4336  0628  00F9               	movwf	___xxtofl@val+2
  4337  0629  0836               	movf	??_ISR+1,w
  4338  062A  00F8               	movwf	___xxtofl@val+1
  4339  062B  0835               	movf	??_ISR,w
  4340  062C  00F7               	movwf	___xxtofl@val
  4341  062D  3000               	movlw	0
  4342  062E  120A  158A  2744  120A  118A  	fcall	___xxtofl
  4343  0633  087A               	movf	?___xxtofl+3,w
  4344  0634  1283               	bcf	3,5	;RP0=0, select bank0
  4345  0635  1303               	bcf	3,6	;RP1=0, select bank0
  4346  0636  00C5               	movwf	_dong+3
  4347  0637  0879               	movf	?___xxtofl+2,w
  4348  0638  00C4               	movwf	_dong+2
  4349  0639  0878               	movf	?___xxtofl+1,w
  4350  063A  00C3               	movwf	_dong+1
  4351  063B  0877               	movf	?___xxtofl,w
  4352  063C  00C2               	movwf	_dong
  4353  063D                     i1l2572:
  4354                           
  4355                           ;main.c: 71:                 dong*=0.0978;
  4356  063D  303D               	movlw	61
  4357  063E  00A3               	movwf	___flmul@b+3
  4358  063F  30C8               	movlw	200
  4359  0640  00A2               	movwf	___flmul@b+2
  4360  0641  304B               	movlw	75
  4361  0642  00A1               	movwf	___flmul@b+1
  4362  0643  305E               	movlw	94
  4363  0644  00A0               	movwf	___flmul@b
  4364  0645  0845               	movf	_dong+3,w
  4365  0646  00A7               	movwf	___flmul@a+3
  4366  0647  0844               	movf	_dong+2,w
  4367  0648  00A6               	movwf	___flmul@a+2
  4368  0649  0843               	movf	_dong+1,w
  4369  064A  00A5               	movwf	___flmul@a+1
  4370  064B  0842               	movf	_dong,w
  4371  064C  00A4               	movwf	___flmul@a
  4372  064D  120A  118A  204C  120A  118A  	fcall	___flmul
  4373  0652  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0653  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0654  0823               	movf	?___flmul+3,w
  4376  0655  00C5               	movwf	_dong+3
  4377  0656  0822               	movf	?___flmul+2,w
  4378  0657  00C4               	movwf	_dong+2
  4379  0658  0821               	movf	?___flmul+1,w
  4380  0659  00C3               	movwf	_dong+1
  4381  065A  0820               	movf	?___flmul,w
  4382  065B  00C2               	movwf	_dong
  4383  065C  2E12               	goto	i1l2568
  4384  065D                     i1l2576:
  4385                           
  4386                           ;main.c: 75:             do_dienap =~ do_dienap;
  4387  065D  1283               	bcf	3,5	;RP0=0, select bank0
  4388  065E  1303               	bcf	3,6	;RP1=0, select bank0
  4389  065F  09D1               	comf	_do_dienap,f
  4390  0660                     i1l2578:
  4391                           
  4392                           ;main.c: 79:     if(RCIE && RCIF)
  4393  0660  1683               	bsf	3,5	;RP0=1, select bank1
  4394  0661  1303               	bcf	3,6	;RP1=0, select bank1
  4395  0662  1E8C               	btfss	12,5	;volatile
  4396  0663  2E65               	goto	u292_21
  4397  0664  2E66               	goto	u292_20
  4398  0665                     u292_21:
  4399  0665  2EC7               	goto	i1l182
  4400  0666                     u292_20:
  4401  0666                     i1l2580:
  4402  0666  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0667  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0668  1E8C               	btfss	12,5	;volatile
  4405  0669  2E6B               	goto	u293_21
  4406  066A  2E6C               	goto	u293_20
  4407  066B                     u293_21:
  4408  066B  2EC7               	goto	i1l182
  4409  066C                     u293_20:
  4410  066C                     i1l2582:
  4411                           
  4412                           ;main.c: 80:     {;main.c: 81:         ch=RCREG;
  4413  066C  081A               	movf	26,w	;volatile
  4414  066D  00FF               	movwf	btemp+1
  4415  066E  087F               	movf	btemp+1,w
  4416  066F  00BD               	movwf	ISR@ch
  4417  0670                     i1l2584:
  4418                           
  4419                           ;main.c: 82:         if(check_sang)
  4420  0670  084F               	movf	_check_sang,w
  4421  0671  1903               	btfsc	3,2
  4422  0672  2E74               	goto	u294_21
  4423  0673  2E75               	goto	u294_20
  4424  0674                     u294_21:
  4425  0674  2E81               	goto	i1l2590
  4426  0675                     u294_20:
  4427  0675                     i1l2586:
  4428                           
  4429                           ;main.c: 83:             in_buffer[in_count++]=ch;
  4430  0675  083D               	movf	ISR@ch,w
  4431  0676  00FF               	movwf	btemp+1
  4432  0677  0850               	movf	_in_count,w
  4433  0678  3E52               	addlw	(low (_in_buffer| 0))& (0+255)
  4434  0679  0084               	movwf	4
  4435  067A  087F               	movf	btemp+1,w
  4436  067B  1383               	bcf	3,7	;select IRP bank0
  4437  067C  0080               	movwf	0
  4438  067D                     i1l2588:
  4439  067D  3001               	movlw	1
  4440  067E  00FF               	movwf	btemp+1
  4441  067F  087F               	movf	btemp+1,w
  4442  0680  07D0               	addwf	_in_count,f
  4443  0681                     i1l2590:
  4444                           
  4445                           ;main.c: 85:         if(in_count == 6)
  4446  0681  3006               	movlw	6
  4447  0682  0650               	xorwf	_in_count,w
  4448  0683  1D03               	btfss	3,2
  4449  0684  2E86               	goto	u295_21
  4450  0685  2E87               	goto	u295_20
  4451  0686                     u295_21:
  4452  0686  2E89               	goto	i1l2594
  4453  0687                     u295_20:
  4454  0687                     i1l2592:
  4455                           
  4456                           ;main.c: 86:         {;main.c: 87:             in_count=0;
  4457  0687  01D0               	clrf	_in_count
  4458                           
  4459                           ;main.c: 88:             check_sang=0;
  4460  0688  01CF               	clrf	_check_sang
  4461  0689                     i1l2594:
  4462                           
  4463                           ;main.c: 91:         if(ch == '{')
  4464  0689  307B               	movlw	123
  4465  068A  063D               	xorwf	ISR@ch,w
  4466  068B  1D03               	btfss	3,2
  4467  068C  2E8E               	goto	u296_21
  4468  068D  2E8F               	goto	u296_20
  4469  068E                     u296_21:
  4470  068E  2E92               	goto	i1l2600
  4471  068F                     u296_20:
  4472  068F                     i1l2596:
  4473                           
  4474                           ;main.c: 92:         {;main.c: 93:             in_count=0;
  4475  068F  01D0               	clrf	_in_count
  4476  0690                     i1l2598:
  4477                           
  4478                           ;main.c: 94:             check_sang=1;
  4479  0690  01CF               	clrf	_check_sang
  4480  0691  0ACF               	incf	_check_sang,f
  4481  0692                     i1l2600:
  4482                           
  4483                           ;main.c: 97:         if(ch == '}')
  4484  0692  307D               	movlw	125
  4485  0693  063D               	xorwf	ISR@ch,w
  4486  0694  1D03               	btfss	3,2
  4487  0695  2E97               	goto	u297_21
  4488  0696  2E98               	goto	u297_20
  4489  0697                     u297_21:
  4490  0697  2EC7               	goto	i1l182
  4491  0698                     u297_20:
  4492  0698                     i1l2602:
  4493                           
  4494                           ;main.c: 98:         {;main.c: 99:             check_sang = 0;
  4495  0698  01CF               	clrf	_check_sang
  4496  0699                     i1l2604:
  4497                           
  4498                           ;main.c: 100:             if(strncmp(in_buffer, "Sang", 4)==0)
  4499  0699  300C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4500  069A  00FF               	movwf	btemp+1
  4501  069B  087F               	movf	btemp+1,w
  4502  069C  00F0               	movwf	strncmp@s2
  4503  069D  3004               	movlw	4
  4504  069E  00F1               	movwf	strncmp@len
  4505  069F  3000               	movlw	0
  4506  06A0  00F2               	movwf	strncmp@len+1
  4507  06A1  3052               	movlw	(low (_in_buffer| 0))& (0+255)
  4508  06A2  120A  158A  231B  120A  118A  	fcall	_strncmp
  4509  06A7  0870               	movf	?_strncmp,w
  4510  06A8  0471               	iorwf	?_strncmp+1,w
  4511  06A9  1D03               	btfss	3,2
  4512  06AA  2EAC               	goto	u298_21
  4513  06AB  2EAD               	goto	u298_20
  4514  06AC                     u298_21:
  4515  06AC  2EB0               	goto	i1l2608
  4516  06AD                     u298_20:
  4517  06AD                     i1l2606:
  4518                           
  4519                           ;main.c: 101:                 PORTEbits.RE2=0;
  4520  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  4521  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  4522  06AF  1109               	bcf	9,2	;volatile
  4523  06B0                     i1l2608:
  4524                           
  4525                           ;main.c: 102:             if(strncmp(in_buffer, "Tat", 3)==0)
  4526  06B0  3019               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4527  06B1  00FF               	movwf	btemp+1
  4528  06B2  087F               	movf	btemp+1,w
  4529  06B3  00F0               	movwf	strncmp@s2
  4530  06B4  3003               	movlw	3
  4531  06B5  00F1               	movwf	strncmp@len
  4532  06B6  3000               	movlw	0
  4533  06B7  00F2               	movwf	strncmp@len+1
  4534  06B8  3052               	movlw	(low (_in_buffer| 0))& (0+255)
  4535  06B9  120A  158A  231B  120A  118A  	fcall	_strncmp
  4536  06BE  0870               	movf	?_strncmp,w
  4537  06BF  0471               	iorwf	?_strncmp+1,w
  4538  06C0  1D03               	btfss	3,2
  4539  06C1  2EC3               	goto	u299_21
  4540  06C2  2EC4               	goto	u299_20
  4541  06C3                     u299_21:
  4542  06C3  2EC7               	goto	i1l182
  4543  06C4                     u299_20:
  4544  06C4                     i1l2610:
  4545                           
  4546                           ;main.c: 103:                 PORTEbits.RE2=1;
  4547  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  4548  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  4549  06C6  1509               	bsf	9,2	;volatile
  4550  06C7                     i1l182:
  4551  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  4552  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  4553  06C9  083C               	movf	??_ISR+7,w
  4554  06CA  00FF               	movwf	btemp+1
  4555  06CB  083B               	movf	??_ISR+6,w
  4556  06CC  008A               	movwf	10
  4557  06CD  083A               	movf	??_ISR+5,w
  4558  06CE  0084               	movwf	4
  4559  06CF  0E39               	swapf	(??_ISR+4)^0,w
  4560  06D0  0083               	movwf	3
  4561  06D1  0EFE               	swapf	btemp,f
  4562  06D2  0E7E               	swapf	btemp,w
  4563  06D3  0009               	retfie
  4564  06D4                     __end_of_ISR:
  4565                           
  4566                           	psect	intentry
  4567  0004                     __pintentry:	
  4568                           ;incstack = 0
  4569                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4570                           
  4571  0004                     interrupt_function:
  4572  007E                     saved_w	set	btemp
  4573  0004  00FE               	movwf	btemp
  4574  0005  0E03               	swapf	3,w
  4575  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4576  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4577  0008  00B9               	movwf	??_ISR+4
  4578  0009  0804               	movf	4,w
  4579  000A  00BA               	movwf	??_ISR+5
  4580  000B  080A               	movf	10,w
  4581  000C  00BB               	movwf	??_ISR+6
  4582  000D  087F               	movf	btemp+1,w
  4583  000E  00BC               	movwf	??_ISR+7
  4584  000F  120A  118A  2D9A   	ljmp	_ISR
  4585                           
  4586                           	psect	text17
  4587  0B1B                     __ptext17:	
  4588 ;; *************** function _strncmp *****************
  4589 ;; Defined at:
  4590 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strncmp.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  s1              1    wreg     PTR const unsigned char 
  4593 ;;		 -> in_buffer(6), 
  4594 ;;  s2              1    0[COMMON] PTR const unsigned char 
  4595 ;;		 -> STR_2(4), STR_1(5), 
  4596 ;;  len             2    1[COMMON] unsigned int 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  s1              1    5[COMMON] PTR const unsigned char 
  4599 ;;		 -> in_buffer(6), 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  2    0[COMMON] int 
  4602 ;; Registers used:
  4603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4609 ;;      Params:         3       0       0       0       0
  4610 ;;      Locals:         1       0       0       0       0
  4611 ;;      Temps:          2       0       0       0       0
  4612 ;;      Totals:         6       0       0       0       0
  4613 ;;Total ram usage:        6 bytes
  4614 ;; Hardware stack levels used:    2
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_ISR
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           
  4623                           ;psect for function _strncmp
  4624  0B1B                     _strncmp:
  4625                           
  4626                           ;incstack = 0
  4627                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4628                           ;strncmp@s1 stored from wreg
  4629  0B1B  00F5               	movwf	strncmp@s1
  4630  0B1C                     i1l2188:
  4631  0B1C  2B50               	goto	i1l2200
  4632  0B1D                     i1l2190:
  4633  0B1D  0875               	movf	strncmp@s1,w
  4634  0B1E  0084               	movwf	4
  4635  0B1F  1383               	bcf	3,7	;select IRP bank0
  4636  0B20  0800               	movf	0,w
  4637  0B21  1903               	btfsc	3,2
  4638  0B22  2B24               	goto	u216_21
  4639  0B23  2B25               	goto	u216_20
  4640  0B24                     u216_21:
  4641  0B24  2B35               	goto	i1l2194
  4642  0B25                     u216_20:
  4643  0B25                     i1l2192:
  4644  0B25  0870               	movf	strncmp@s2,w
  4645  0B26  0084               	movwf	4
  4646  0B27  120A  158A  2000  120A  158A  	fcall	stringdir
  4647  0B2C  00F3               	movwf	??_strncmp
  4648  0B2D  0875               	movf	strncmp@s1,w
  4649  0B2E  0084               	movwf	4
  4650  0B2F  0800               	movf	0,w
  4651  0B30  0673               	xorwf	??_strncmp,w
  4652  0B31  1903               	skipnz
  4653  0B32  2B34               	goto	u217_21
  4654  0B33  2B35               	goto	u217_20
  4655  0B34                     u217_21:
  4656  0B34  2B48               	goto	i1l2198
  4657  0B35                     u217_20:
  4658  0B35                     i1l2194:
  4659  0B35  0870               	movf	strncmp@s2,w
  4660  0B36  0084               	movwf	4
  4661  0B37  120A  158A  2000  120A  158A  	fcall	stringdir
  4662  0B3C  00F3               	movwf	??_strncmp
  4663  0B3D  0875               	movf	strncmp@s1,w
  4664  0B3E  0084               	movwf	4
  4665  0B3F  0800               	movf	0,w
  4666  0B40  00F4               	movwf	??_strncmp+1
  4667  0B41  0873               	movf	??_strncmp,w
  4668  0B42  0274               	subwf	??_strncmp+1,w
  4669  0B43  00F0               	movwf	?_strncmp
  4670  0B44  01F1               	clrf	?_strncmp+1
  4671  0B45  1C03               	skipc
  4672  0B46  03F1               	decf	?_strncmp+1,f
  4673  0B47  2B60               	goto	i1l821
  4674  0B48                     i1l2198:
  4675  0B48  3001               	movlw	1
  4676  0B49  00FF               	movwf	btemp+1
  4677  0B4A  087F               	movf	btemp+1,w
  4678  0B4B  07F5               	addwf	strncmp@s1,f
  4679  0B4C  3001               	movlw	1
  4680  0B4D  00FF               	movwf	btemp+1
  4681  0B4E  087F               	movf	btemp+1,w
  4682  0B4F  07F0               	addwf	strncmp@s2,f
  4683  0B50                     i1l2200:
  4684  0B50  3001               	movlw	1
  4685  0B51  02F1               	subwf	strncmp@len,f
  4686  0B52  3000               	movlw	0
  4687  0B53  1C03               	skipc
  4688  0B54  03F2               	decf	strncmp@len+1,f
  4689  0B55  02F2               	subwf	strncmp@len+1,f
  4690  0B56  0A71               	incf	strncmp@len,w
  4691  0B57  1D03               	skipz
  4692  0B58  2B5D               	goto	u218_21
  4693  0B59  0A72               	incf	strncmp@len+1,w
  4694  0B5A  1D03               	btfss	3,2
  4695  0B5B  2B5D               	goto	u218_21
  4696  0B5C  2B5E               	goto	u218_20
  4697  0B5D                     u218_21:
  4698  0B5D  2B1D               	goto	i1l2190
  4699  0B5E                     u218_20:
  4700  0B5E                     i1l2202:
  4701  0B5E  01F0               	clrf	?_strncmp
  4702  0B5F  01F1               	clrf	?_strncmp+1
  4703  0B60                     i1l821:
  4704  0B60  0008               	return
  4705  0B61                     __end_of_strncmp:
  4706                           
  4707                           	psect	text18
  4708  0F44                     __ptext18:	
  4709 ;; *************** function ___xxtofl *****************
  4710 ;; Defined at:
  4711 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  sign            1    wreg     unsigned char 
  4714 ;;  val             4    7[COMMON] long 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  sign            1    4[BANK0 ] unsigned char 
  4717 ;;  arg             4    6[BANK0 ] unsigned long 
  4718 ;;  exp             1    5[BANK0 ] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  4    7[COMMON] unsigned char 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0, btemp+1
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4728 ;;      Params:         4       0       0       0       0
  4729 ;;      Locals:         0       6       0       0       0
  4730 ;;      Temps:          0       4       0       0       0
  4731 ;;      Totals:         4      10       0       0       0
  4732 ;;Total ram usage:       14 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_ISR
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function ___xxtofl
  4743  0F44                     ___xxtofl:
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  4747                           ;___xxtofl@sign stored from wreg
  4748  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4750  0F46  00A4               	movwf	___xxtofl@sign
  4751  0F47                     i1l2502:
  4752  0F47  0824               	movf	___xxtofl@sign,w
  4753  0F48  1903               	btfsc	3,2
  4754  0F49  2F4B               	goto	u274_21
  4755  0F4A  2F4C               	goto	u274_20
  4756  0F4B                     u274_21:
  4757  0F4B  2F60               	goto	i1l2508
  4758  0F4C                     u274_20:
  4759  0F4C                     i1l2504:
  4760  0F4C  1FFA               	btfss	___xxtofl@val+3,7
  4761  0F4D  2F4F               	goto	u275_21
  4762  0F4E  2F50               	goto	u275_20
  4763  0F4F                     u275_21:
  4764  0F4F  2F60               	goto	i1l2508
  4765  0F50                     u275_20:
  4766  0F50                     i1l2506:
  4767  0F50  0977               	comf	___xxtofl@val,w
  4768  0F51  00A6               	movwf	___xxtofl@arg
  4769  0F52  0978               	comf	___xxtofl@val+1,w
  4770  0F53  00A7               	movwf	___xxtofl@arg+1
  4771  0F54  0979               	comf	___xxtofl@val+2,w
  4772  0F55  00A8               	movwf	___xxtofl@arg+2
  4773  0F56  097A               	comf	___xxtofl@val+3,w
  4774  0F57  00A9               	movwf	___xxtofl@arg+3
  4775  0F58  0AA6               	incf	___xxtofl@arg,f
  4776  0F59  1903               	skipnz
  4777  0F5A  0AA7               	incf	___xxtofl@arg+1,f
  4778  0F5B  1903               	skipnz
  4779  0F5C  0AA8               	incf	___xxtofl@arg+2,f
  4780  0F5D  1903               	skipnz
  4781  0F5E  0AA9               	incf	___xxtofl@arg+3,f
  4782  0F5F  2F68               	goto	i1l798
  4783  0F60                     i1l2508:
  4784  0F60  087A               	movf	___xxtofl@val+3,w
  4785  0F61  00A9               	movwf	___xxtofl@arg+3
  4786  0F62  0879               	movf	___xxtofl@val+2,w
  4787  0F63  00A8               	movwf	___xxtofl@arg+2
  4788  0F64  0878               	movf	___xxtofl@val+1,w
  4789  0F65  00A7               	movwf	___xxtofl@arg+1
  4790  0F66  0877               	movf	___xxtofl@val,w
  4791  0F67  00A6               	movwf	___xxtofl@arg
  4792  0F68                     i1l798:
  4793  0F68  087A               	movf	___xxtofl@val+3,w
  4794  0F69  0479               	iorwf	___xxtofl@val+2,w
  4795  0F6A  0478               	iorwf	___xxtofl@val+1,w
  4796  0F6B  0477               	iorwf	___xxtofl@val,w
  4797  0F6C  1D03               	skipz
  4798  0F6D  2F6F               	goto	u276_21
  4799  0F6E  2F70               	goto	u276_20
  4800  0F6F                     u276_21:
  4801  0F6F  2F79               	goto	i1l2514
  4802  0F70                     u276_20:
  4803  0F70                     i1l2510:
  4804  0F70  3000               	movlw	0
  4805  0F71  00FA               	movwf	?___xxtofl+3
  4806  0F72  3000               	movlw	0
  4807  0F73  00F9               	movwf	?___xxtofl+2
  4808  0F74  3000               	movlw	0
  4809  0F75  00F8               	movwf	?___xxtofl+1
  4810  0F76  3000               	movlw	0
  4811  0F77  00F7               	movwf	?___xxtofl
  4812  0F78  2FFF               	goto	i1l800
  4813  0F79                     i1l2514:
  4814  0F79  3096               	movlw	150
  4815  0F7A  00FF               	movwf	btemp+1
  4816  0F7B  087F               	movf	btemp+1,w
  4817  0F7C  00A5               	movwf	___xxtofl@exp
  4818  0F7D  2F8B               	goto	i1l2520
  4819  0F7E                     i1l2516:
  4820  0F7E  3001               	movlw	1
  4821  0F7F  00FF               	movwf	btemp+1
  4822  0F80  087F               	movf	btemp+1,w
  4823  0F81  07A5               	addwf	___xxtofl@exp,f
  4824  0F82                     i1l2518:
  4825  0F82  3001               	movlw	1
  4826  0F83                     u277_25:
  4827  0F83  1003               	clrc
  4828  0F84  0CA9               	rrf	___xxtofl@arg+3,f
  4829  0F85  0CA8               	rrf	___xxtofl@arg+2,f
  4830  0F86  0CA7               	rrf	___xxtofl@arg+1,f
  4831  0F87  0CA6               	rrf	___xxtofl@arg,f
  4832  0F88  3EFF               	addlw	-1
  4833  0F89  1D03               	skipz
  4834  0F8A  2F83               	goto	u277_25
  4835  0F8B                     i1l2520:
  4836  0F8B  30FE               	movlw	254
  4837  0F8C  0529               	andwf	___xxtofl@arg+3,w
  4838  0F8D  1D03               	btfss	3,2
  4839  0F8E  2F90               	goto	u278_21
  4840  0F8F  2F91               	goto	u278_20
  4841  0F90                     u278_21:
  4842  0F90  2F7E               	goto	i1l2516
  4843  0F91                     u278_20:
  4844  0F91  2FAD               	goto	i1l2528
  4845  0F92                     i1l2522:
  4846  0F92  3001               	movlw	1
  4847  0F93  00FF               	movwf	btemp+1
  4848  0F94  087F               	movf	btemp+1,w
  4849  0F95  07A5               	addwf	___xxtofl@exp,f
  4850  0F96                     i1l2524:
  4851  0F96  3001               	movlw	1
  4852  0F97  07A6               	addwf	___xxtofl@arg,f
  4853  0F98  3000               	movlw	0
  4854  0F99  1803               	skipnc
  4855  0F9A  3001               	movlw	1
  4856  0F9B  07A7               	addwf	___xxtofl@arg+1,f
  4857  0F9C  3000               	movlw	0
  4858  0F9D  1803               	skipnc
  4859  0F9E  3001               	movlw	1
  4860  0F9F  07A8               	addwf	___xxtofl@arg+2,f
  4861  0FA0  3000               	movlw	0
  4862  0FA1  1803               	skipnc
  4863  0FA2  3001               	movlw	1
  4864  0FA3  07A9               	addwf	___xxtofl@arg+3,f
  4865  0FA4                     i1l2526:
  4866  0FA4  3001               	movlw	1
  4867  0FA5                     u279_25:
  4868  0FA5  1003               	clrc
  4869  0FA6  0CA9               	rrf	___xxtofl@arg+3,f
  4870  0FA7  0CA8               	rrf	___xxtofl@arg+2,f
  4871  0FA8  0CA7               	rrf	___xxtofl@arg+1,f
  4872  0FA9  0CA6               	rrf	___xxtofl@arg,f
  4873  0FAA  3EFF               	addlw	-1
  4874  0FAB  1D03               	skipz
  4875  0FAC  2FA5               	goto	u279_25
  4876  0FAD                     i1l2528:
  4877  0FAD  30FF               	movlw	255
  4878  0FAE  0529               	andwf	___xxtofl@arg+3,w
  4879  0FAF  1D03               	btfss	3,2
  4880  0FB0  2FB2               	goto	u280_21
  4881  0FB1  2FB3               	goto	u280_20
  4882  0FB2                     u280_21:
  4883  0FB2  2F92               	goto	i1l2522
  4884  0FB3                     u280_20:
  4885  0FB3  2FBF               	goto	i1l2532
  4886  0FB4                     i1l2530:
  4887  0FB4  3001               	movlw	1
  4888  0FB5  02A5               	subwf	___xxtofl@exp,f
  4889  0FB6  3001               	movlw	1
  4890  0FB7  00A0               	movwf	??___xxtofl
  4891  0FB8                     u281_25:
  4892  0FB8  1003               	clrc
  4893  0FB9  0DA6               	rlf	___xxtofl@arg,f
  4894  0FBA  0DA7               	rlf	___xxtofl@arg+1,f
  4895  0FBB  0DA8               	rlf	___xxtofl@arg+2,f
  4896  0FBC  0DA9               	rlf	___xxtofl@arg+3,f
  4897  0FBD  0BA0               	decfsz	??___xxtofl,f
  4898  0FBE  2FB8               	goto	u281_25
  4899  0FBF                     i1l2532:
  4900  0FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  4901  0FC0  2FC2               	goto	u282_21
  4902  0FC1  2FC3               	goto	u282_20
  4903  0FC2                     u282_21:
  4904  0FC2  2FC9               	goto	i1l811
  4905  0FC3                     u282_20:
  4906  0FC3                     i1l2534:
  4907  0FC3  3002               	movlw	2
  4908  0FC4  0225               	subwf	___xxtofl@exp,w
  4909  0FC5  1803               	skipnc
  4910  0FC6  2FC8               	goto	u283_21
  4911  0FC7  2FC9               	goto	u283_20
  4912  0FC8                     u283_21:
  4913  0FC8  2FB4               	goto	i1l2530
  4914  0FC9                     u283_20:
  4915  0FC9                     i1l811:
  4916  0FC9  1825               	btfsc	___xxtofl@exp,0
  4917  0FCA  2FCC               	goto	u284_21
  4918  0FCB  2FCD               	goto	u284_20
  4919  0FCC                     u284_21:
  4920  0FCC  2FD5               	goto	i1l812
  4921  0FCD                     u284_20:
  4922  0FCD                     i1l2536:
  4923  0FCD  30FF               	movlw	255
  4924  0FCE  05A6               	andwf	___xxtofl@arg,f
  4925  0FCF  30FF               	movlw	255
  4926  0FD0  05A7               	andwf	___xxtofl@arg+1,f
  4927  0FD1  307F               	movlw	127
  4928  0FD2  05A8               	andwf	___xxtofl@arg+2,f
  4929  0FD3  30FF               	movlw	255
  4930  0FD4  05A9               	andwf	___xxtofl@arg+3,f
  4931  0FD5                     i1l812:
  4932  0FD5  1003               	clrc
  4933  0FD6  0CA5               	rrf	___xxtofl@exp,f
  4934  0FD7                     i1l2538:
  4935  0FD7  0825               	movf	___xxtofl@exp,w
  4936  0FD8  00A0               	movwf	??___xxtofl
  4937  0FD9  01A1               	clrf	??___xxtofl+1
  4938  0FDA  01A2               	clrf	??___xxtofl+2
  4939  0FDB  01A3               	clrf	??___xxtofl+3
  4940  0FDC  3018               	movlw	24
  4941  0FDD                     u285_25:
  4942  0FDD  1003               	clrc
  4943  0FDE  0DA0               	rlf	??___xxtofl,f
  4944  0FDF  0DA1               	rlf	??___xxtofl+1,f
  4945  0FE0  0DA2               	rlf	??___xxtofl+2,f
  4946  0FE1  0DA3               	rlf	??___xxtofl+3,f
  4947  0FE2                     u285_20:
  4948  0FE2  3EFF               	addlw	-1
  4949  0FE3  1D03               	skipz
  4950  0FE4  2FDD               	goto	u285_25
  4951  0FE5  0820               	movf	??___xxtofl,w
  4952  0FE6  04A6               	iorwf	___xxtofl@arg,f
  4953  0FE7  0821               	movf	??___xxtofl+1,w
  4954  0FE8  04A7               	iorwf	___xxtofl@arg+1,f
  4955  0FE9  0822               	movf	??___xxtofl+2,w
  4956  0FEA  04A8               	iorwf	___xxtofl@arg+2,f
  4957  0FEB  0823               	movf	??___xxtofl+3,w
  4958  0FEC  04A9               	iorwf	___xxtofl@arg+3,f
  4959  0FED                     i1l2540:
  4960  0FED  0824               	movf	___xxtofl@sign,w
  4961  0FEE  1903               	btfsc	3,2
  4962  0FEF  2FF1               	goto	u286_21
  4963  0FF0  2FF2               	goto	u286_20
  4964  0FF1                     u286_21:
  4965  0FF1  2FF7               	goto	i1l2546
  4966  0FF2                     u286_20:
  4967  0FF2                     i1l2542:
  4968  0FF2  1FFA               	btfss	___xxtofl@val+3,7
  4969  0FF3  2FF5               	goto	u287_21
  4970  0FF4  2FF6               	goto	u287_20
  4971  0FF5                     u287_21:
  4972  0FF5  2FF7               	goto	i1l2546
  4973  0FF6                     u287_20:
  4974  0FF6                     i1l2544:
  4975  0FF6  17A9               	bsf	___xxtofl@arg+3,7
  4976  0FF7                     i1l2546:
  4977  0FF7  0829               	movf	___xxtofl@arg+3,w
  4978  0FF8  00FA               	movwf	?___xxtofl+3
  4979  0FF9  0828               	movf	___xxtofl@arg+2,w
  4980  0FFA  00F9               	movwf	?___xxtofl+2
  4981  0FFB  0827               	movf	___xxtofl@arg+1,w
  4982  0FFC  00F8               	movwf	?___xxtofl+1
  4983  0FFD  0826               	movf	___xxtofl@arg,w
  4984  0FFE  00F7               	movwf	?___xxtofl
  4985  0FFF                     i1l800:
  4986  0FFF  0008               	return
  4987  1000                     __end_of___xxtofl:
  4988                           
  4989                           	psect	text19
  4990  004C                     __ptext19:	
  4991 ;; *************** function ___flmul *****************
  4992 ;; Defined at:
  4993 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  b               4    0[BANK0 ] unsigned char 
  4996 ;;  a               4    4[BANK0 ] unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  prod            4   15[BANK0 ] struct .
  4999 ;;  grs             4    9[BANK0 ] unsigned long 
  5000 ;;  temp            2   19[BANK0 ] struct .
  5001 ;;  bexp            1   14[BANK0 ] unsigned char 
  5002 ;;  aexp            1   13[BANK0 ] unsigned char 
  5003 ;;  sign            1    8[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  4    0[BANK0 ] unsigned char 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       8       0       0       0
  5014 ;;      Locals:         0      13       0       0       0
  5015 ;;      Temps:          5       0       0       0       0
  5016 ;;      Totals:         5      21       0       0       0
  5017 ;;Total ram usage:       26 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    1
  5020 ;; This function calls:
  5021 ;;		__Umul8_16
  5022 ;; This function is called by:
  5023 ;;		_ISR
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           
  5028                           ;psect for function ___flmul
  5029  004C                     ___flmul:
  5030  004C                     i1l2360:	
  5031                           ;incstack = 0
  5032                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5033                           
  5034  004C  1283               	bcf	3,5	;RP0=0, select bank0
  5035  004D  1303               	bcf	3,6	;RP1=0, select bank0
  5036  004E  0823               	movf	___flmul@b+3,w
  5037  004F  3980               	andlw	128
  5038  0050  00FF               	movwf	btemp+1
  5039  0051  087F               	movf	btemp+1,w
  5040  0052  00A8               	movwf	___flmul@sign
  5041  0053                     i1l2362:
  5042  0053  0823               	movf	___flmul@b+3,w
  5043  0054  00F9               	movwf	??___flmul
  5044  0055  0779               	addwf	??___flmul,w
  5045  0056  00FF               	movwf	btemp+1
  5046  0057  087F               	movf	btemp+1,w
  5047  0058  00AE               	movwf	___flmul@bexp
  5048  0059                     i1l2364:
  5049  0059  1FA2               	btfss	___flmul@b+2,7
  5050  005A  285C               	goto	u237_21
  5051  005B  285D               	goto	u237_20
  5052  005C                     u237_21:
  5053  005C  285E               	goto	i1l2368
  5054  005D                     u237_20:
  5055  005D                     i1l2366:
  5056  005D  142E               	bsf	___flmul@bexp,0
  5057  005E                     i1l2368:
  5058  005E  082E               	movf	___flmul@bexp,w
  5059  005F  1903               	btfsc	3,2
  5060  0060  2862               	goto	u238_21
  5061  0061  2863               	goto	u238_20
  5062  0062                     u238_21:
  5063  0062  2872               	goto	i1l2376
  5064  0063                     u238_20:
  5065  0063                     i1l2370:
  5066  0063  0A2E               	incf	___flmul@bexp,w
  5067  0064  1D03               	btfss	3,2
  5068  0065  2867               	goto	u239_21
  5069  0066  2868               	goto	u239_20
  5070  0067                     u239_21:
  5071  0067  2870               	goto	i1l2374
  5072  0068                     u239_20:
  5073  0068                     i1l2372:
  5074  0068  3000               	movlw	0
  5075  0069  00A3               	movwf	___flmul@b+3
  5076  006A  3000               	movlw	0
  5077  006B  00A2               	movwf	___flmul@b+2
  5078  006C  3000               	movlw	0
  5079  006D  00A1               	movwf	___flmul@b+1
  5080  006E  3000               	movlw	0
  5081  006F  00A0               	movwf	___flmul@b
  5082  0070                     i1l2374:
  5083  0070  17A2               	bsf	___flmul@b+2,7
  5084  0071  287A               	goto	i1l2378
  5085  0072                     i1l2376:
  5086  0072  3000               	movlw	0
  5087  0073  00A3               	movwf	___flmul@b+3
  5088  0074  3000               	movlw	0
  5089  0075  00A2               	movwf	___flmul@b+2
  5090  0076  3000               	movlw	0
  5091  0077  00A1               	movwf	___flmul@b+1
  5092  0078  3000               	movlw	0
  5093  0079  00A0               	movwf	___flmul@b
  5094  007A                     i1l2378:
  5095  007A  0827               	movf	___flmul@a+3,w
  5096  007B  3980               	andlw	128
  5097  007C  00FF               	movwf	btemp+1
  5098  007D  087F               	movf	btemp+1,w
  5099  007E  06A8               	xorwf	___flmul@sign,f
  5100  007F                     i1l2380:
  5101  007F  0827               	movf	___flmul@a+3,w
  5102  0080  00F9               	movwf	??___flmul
  5103  0081  0779               	addwf	??___flmul,w
  5104  0082  00FF               	movwf	btemp+1
  5105  0083  087F               	movf	btemp+1,w
  5106  0084  00AD               	movwf	___flmul@aexp
  5107  0085                     i1l2382:
  5108  0085  1FA6               	btfss	___flmul@a+2,7
  5109  0086  2888               	goto	u240_21
  5110  0087  2889               	goto	u240_20
  5111  0088                     u240_21:
  5112  0088  288A               	goto	i1l2386
  5113  0089                     u240_20:
  5114  0089                     i1l2384:
  5115  0089  142D               	bsf	___flmul@aexp,0
  5116  008A                     i1l2386:
  5117  008A  082D               	movf	___flmul@aexp,w
  5118  008B  1903               	btfsc	3,2
  5119  008C  288E               	goto	u241_21
  5120  008D  288F               	goto	u241_20
  5121  008E                     u241_21:
  5122  008E  289E               	goto	i1l2394
  5123  008F                     u241_20:
  5124  008F                     i1l2388:
  5125  008F  0A2D               	incf	___flmul@aexp,w
  5126  0090  1D03               	btfss	3,2
  5127  0091  2893               	goto	u242_21
  5128  0092  2894               	goto	u242_20
  5129  0093                     u242_21:
  5130  0093  289C               	goto	i1l2392
  5131  0094                     u242_20:
  5132  0094                     i1l2390:
  5133  0094  3000               	movlw	0
  5134  0095  00A7               	movwf	___flmul@a+3
  5135  0096  3000               	movlw	0
  5136  0097  00A6               	movwf	___flmul@a+2
  5137  0098  3000               	movlw	0
  5138  0099  00A5               	movwf	___flmul@a+1
  5139  009A  3000               	movlw	0
  5140  009B  00A4               	movwf	___flmul@a
  5141  009C                     i1l2392:
  5142  009C  17A6               	bsf	___flmul@a+2,7
  5143  009D  28A6               	goto	i1l2396
  5144  009E                     i1l2394:
  5145  009E  3000               	movlw	0
  5146  009F  00A7               	movwf	___flmul@a+3
  5147  00A0  3000               	movlw	0
  5148  00A1  00A6               	movwf	___flmul@a+2
  5149  00A2  3000               	movlw	0
  5150  00A3  00A5               	movwf	___flmul@a+1
  5151  00A4  3000               	movlw	0
  5152  00A5  00A4               	movwf	___flmul@a
  5153  00A6                     i1l2396:
  5154  00A6  082D               	movf	___flmul@aexp,w
  5155  00A7  1903               	btfsc	3,2
  5156  00A8  28AA               	goto	u243_21
  5157  00A9  28AB               	goto	u243_20
  5158  00AA                     u243_21:
  5159  00AA  28B0               	goto	i1l2400
  5160  00AB                     u243_20:
  5161  00AB                     i1l2398:
  5162  00AB  082E               	movf	___flmul@bexp,w
  5163  00AC  1D03               	btfss	3,2
  5164  00AD  28AF               	goto	u244_21
  5165  00AE  28B0               	goto	u244_20
  5166  00AF                     u244_21:
  5167  00AF  28B9               	goto	i1l2404
  5168  00B0                     u244_20:
  5169  00B0                     i1l2400:
  5170  00B0  3000               	movlw	0
  5171  00B1  00A3               	movwf	?___flmul+3
  5172  00B2  3000               	movlw	0
  5173  00B3  00A2               	movwf	?___flmul+2
  5174  00B4  3000               	movlw	0
  5175  00B5  00A1               	movwf	?___flmul+1
  5176  00B6  3000               	movlw	0
  5177  00B7  00A0               	movwf	?___flmul
  5178  00B8  2BAC               	goto	i1l754
  5179  00B9                     i1l2404:
  5180  00B9  0820               	movf	___flmul@b,w
  5181  00BA  00FF               	movwf	btemp+1
  5182  00BB  087F               	movf	btemp+1,w
  5183  00BC  00F0               	movwf	__Umul8_16@multiplicand
  5184  00BD  0826               	movf	___flmul@a+2,w
  5185  00BE  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5186  00C3  0871               	movf	?__Umul8_16+1,w
  5187  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5188  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5189  00C6  00B4               	movwf	___flmul@temp+1
  5190  00C7  0870               	movf	?__Umul8_16,w
  5191  00C8  00B3               	movwf	___flmul@temp
  5192  00C9                     i1l2406:
  5193  00C9  0833               	movf	___flmul@temp,w
  5194  00CA  00F9               	movwf	??___flmul
  5195  00CB  01FA               	clrf	??___flmul+1
  5196  00CC  01FB               	clrf	??___flmul+2
  5197  00CD  01FC               	clrf	??___flmul+3
  5198  00CE  087C               	movf	??___flmul+3,w
  5199  00CF  00AC               	movwf	___flmul@grs+3
  5200  00D0  087B               	movf	??___flmul+2,w
  5201  00D1  00AB               	movwf	___flmul@grs+2
  5202  00D2  087A               	movf	??___flmul+1,w
  5203  00D3  00AA               	movwf	___flmul@grs+1
  5204  00D4  0879               	movf	??___flmul,w
  5205  00D5  00A9               	movwf	___flmul@grs
  5206  00D6                     i1l2408:
  5207  00D6  0834               	movf	___flmul@temp+1,w
  5208  00D7  00F9               	movwf	??___flmul
  5209  00D8  01FA               	clrf	??___flmul+1
  5210  00D9  01FB               	clrf	??___flmul+2
  5211  00DA  01FC               	clrf	??___flmul+3
  5212  00DB  087C               	movf	??___flmul+3,w
  5213  00DC  00B2               	movwf	___flmul@prod+3
  5214  00DD  087B               	movf	??___flmul+2,w
  5215  00DE  00B1               	movwf	___flmul@prod+2
  5216  00DF  087A               	movf	??___flmul+1,w
  5217  00E0  00B0               	movwf	___flmul@prod+1
  5218  00E1  0879               	movf	??___flmul,w
  5219  00E2  00AF               	movwf	___flmul@prod
  5220  00E3  0821               	movf	___flmul@b+1,w
  5221  00E4  00FF               	movwf	btemp+1
  5222  00E5  087F               	movf	btemp+1,w
  5223  00E6  00F0               	movwf	__Umul8_16@multiplicand
  5224  00E7  0825               	movf	___flmul@a+1,w
  5225  00E8  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5226  00ED  0871               	movf	?__Umul8_16+1,w
  5227  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  5228  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  5229  00F0  00B4               	movwf	___flmul@temp+1
  5230  00F1  0870               	movf	?__Umul8_16,w
  5231  00F2  00B3               	movwf	___flmul@temp
  5232  00F3                     i1l2410:
  5233  00F3  0833               	movf	___flmul@temp,w
  5234  00F4  00F9               	movwf	??___flmul
  5235  00F5  01FA               	clrf	??___flmul+1
  5236  00F6  01FB               	clrf	??___flmul+2
  5237  00F7  01FC               	clrf	??___flmul+3
  5238  00F8  0879               	movf	??___flmul,w
  5239  00F9  07A9               	addwf	___flmul@grs,f
  5240  00FA  087A               	movf	??___flmul+1,w
  5241  00FB  1103               	clrz
  5242  00FC  1803               	skipnc
  5243  00FD  3E01               	addlw	1
  5244  00FE  1903               	skipnz
  5245  00FF  2901               	goto	u245_21
  5246  0100  07AA               	addwf	___flmul@grs+1,f
  5247  0101                     u245_21:
  5248  0101  087B               	movf	??___flmul+2,w
  5249  0102  1103               	clrz
  5250  0103  1803               	skipnc
  5251  0104  3E01               	addlw	1
  5252  0105  1903               	skipnz
  5253  0106  2908               	goto	u245_22
  5254  0107  07AB               	addwf	___flmul@grs+2,f
  5255  0108                     u245_22:
  5256  0108  087C               	movf	??___flmul+3,w
  5257  0109  1103               	clrz
  5258  010A  1803               	skipnc
  5259  010B  3E01               	addlw	1
  5260  010C  1903               	skipnz
  5261  010D  290F               	goto	u245_23
  5262  010E  07AC               	addwf	___flmul@grs+3,f
  5263  010F                     u245_23:
  5264  010F                     i1l2412:
  5265  010F  0834               	movf	___flmul@temp+1,w
  5266  0110  00F9               	movwf	??___flmul
  5267  0111  01FA               	clrf	??___flmul+1
  5268  0112  01FB               	clrf	??___flmul+2
  5269  0113  01FC               	clrf	??___flmul+3
  5270  0114  0879               	movf	??___flmul,w
  5271  0115  07AF               	addwf	___flmul@prod,f
  5272  0116  087A               	movf	??___flmul+1,w
  5273  0117  1103               	clrz
  5274  0118  1803               	skipnc
  5275  0119  3E01               	addlw	1
  5276  011A  1903               	skipnz
  5277  011B  291D               	goto	u246_21
  5278  011C  07B0               	addwf	___flmul@prod+1,f
  5279  011D                     u246_21:
  5280  011D  087B               	movf	??___flmul+2,w
  5281  011E  1103               	clrz
  5282  011F  1803               	skipnc
  5283  0120  3E01               	addlw	1
  5284  0121  1903               	skipnz
  5285  0122  2924               	goto	u246_22
  5286  0123  07B1               	addwf	___flmul@prod+2,f
  5287  0124                     u246_22:
  5288  0124  087C               	movf	??___flmul+3,w
  5289  0125  1103               	clrz
  5290  0126  1803               	skipnc
  5291  0127  3E01               	addlw	1
  5292  0128  1903               	skipnz
  5293  0129  292B               	goto	u246_23
  5294  012A  07B2               	addwf	___flmul@prod+3,f
  5295  012B                     u246_23:
  5296  012B  0822               	movf	___flmul@b+2,w
  5297  012C  00FF               	movwf	btemp+1
  5298  012D  087F               	movf	btemp+1,w
  5299  012E  00F0               	movwf	__Umul8_16@multiplicand
  5300  012F  0824               	movf	___flmul@a,w
  5301  0130  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5302  0135  0871               	movf	?__Umul8_16+1,w
  5303  0136  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0137  1303               	bcf	3,6	;RP1=0, select bank0
  5305  0138  00B4               	movwf	___flmul@temp+1
  5306  0139  0870               	movf	?__Umul8_16,w
  5307  013A  00B3               	movwf	___flmul@temp
  5308  013B                     i1l2414:
  5309  013B  0833               	movf	___flmul@temp,w
  5310  013C  00F9               	movwf	??___flmul
  5311  013D  01FA               	clrf	??___flmul+1
  5312  013E  01FB               	clrf	??___flmul+2
  5313  013F  01FC               	clrf	??___flmul+3
  5314  0140  0879               	movf	??___flmul,w
  5315  0141  07A9               	addwf	___flmul@grs,f
  5316  0142  087A               	movf	??___flmul+1,w
  5317  0143  1103               	clrz
  5318  0144  1803               	skipnc
  5319  0145  3E01               	addlw	1
  5320  0146  1903               	skipnz
  5321  0147  2949               	goto	u247_21
  5322  0148  07AA               	addwf	___flmul@grs+1,f
  5323  0149                     u247_21:
  5324  0149  087B               	movf	??___flmul+2,w
  5325  014A  1103               	clrz
  5326  014B  1803               	skipnc
  5327  014C  3E01               	addlw	1
  5328  014D  1903               	skipnz
  5329  014E  2950               	goto	u247_22
  5330  014F  07AB               	addwf	___flmul@grs+2,f
  5331  0150                     u247_22:
  5332  0150  087C               	movf	??___flmul+3,w
  5333  0151  1103               	clrz
  5334  0152  1803               	skipnc
  5335  0153  3E01               	addlw	1
  5336  0154  1903               	skipnz
  5337  0155  2957               	goto	u247_23
  5338  0156  07AC               	addwf	___flmul@grs+3,f
  5339  0157                     u247_23:
  5340  0157                     i1l2416:
  5341  0157  0834               	movf	___flmul@temp+1,w
  5342  0158  00F9               	movwf	??___flmul
  5343  0159  01FA               	clrf	??___flmul+1
  5344  015A  01FB               	clrf	??___flmul+2
  5345  015B  01FC               	clrf	??___flmul+3
  5346  015C  0879               	movf	??___flmul,w
  5347  015D  07AF               	addwf	___flmul@prod,f
  5348  015E  087A               	movf	??___flmul+1,w
  5349  015F  1103               	clrz
  5350  0160  1803               	skipnc
  5351  0161  3E01               	addlw	1
  5352  0162  1903               	skipnz
  5353  0163  2965               	goto	u248_21
  5354  0164  07B0               	addwf	___flmul@prod+1,f
  5355  0165                     u248_21:
  5356  0165  087B               	movf	??___flmul+2,w
  5357  0166  1103               	clrz
  5358  0167  1803               	skipnc
  5359  0168  3E01               	addlw	1
  5360  0169  1903               	skipnz
  5361  016A  296C               	goto	u248_22
  5362  016B  07B1               	addwf	___flmul@prod+2,f
  5363  016C                     u248_22:
  5364  016C  087C               	movf	??___flmul+3,w
  5365  016D  1103               	clrz
  5366  016E  1803               	skipnc
  5367  016F  3E01               	addlw	1
  5368  0170  1903               	skipnz
  5369  0171  2973               	goto	u248_23
  5370  0172  07B2               	addwf	___flmul@prod+3,f
  5371  0173                     u248_23:
  5372  0173                     i1l2418:
  5373  0173  3008               	movlw	8
  5374  0174  00F9               	movwf	??___flmul
  5375  0175                     u249_25:
  5376  0175  1003               	clrc
  5377  0176  0DA9               	rlf	___flmul@grs,f
  5378  0177  0DAA               	rlf	___flmul@grs+1,f
  5379  0178  0DAB               	rlf	___flmul@grs+2,f
  5380  0179  0DAC               	rlf	___flmul@grs+3,f
  5381  017A  0BF9               	decfsz	??___flmul,f
  5382  017B  2975               	goto	u249_25
  5383  017C                     i1l2420:
  5384  017C  0821               	movf	___flmul@b+1,w
  5385  017D  00FF               	movwf	btemp+1
  5386  017E  087F               	movf	btemp+1,w
  5387  017F  00F0               	movwf	__Umul8_16@multiplicand
  5388  0180  0824               	movf	___flmul@a,w
  5389  0181  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5390  0186  0871               	movf	?__Umul8_16+1,w
  5391  0187  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0188  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0189  00B4               	movwf	___flmul@temp+1
  5394  018A  0870               	movf	?__Umul8_16,w
  5395  018B  00B3               	movwf	___flmul@temp
  5396  018C                     i1l2422:
  5397  018C  0833               	movf	___flmul@temp,w
  5398  018D  00F9               	movwf	??___flmul
  5399  018E  0834               	movf	___flmul@temp+1,w
  5400  018F  00FA               	movwf	??___flmul+1
  5401  0190  01FB               	clrf	??___flmul+2
  5402  0191  01FC               	clrf	??___flmul+3
  5403  0192  0879               	movf	??___flmul,w
  5404  0193  07A9               	addwf	___flmul@grs,f
  5405  0194  087A               	movf	??___flmul+1,w
  5406  0195  1103               	clrz
  5407  0196  1803               	skipnc
  5408  0197  3E01               	addlw	1
  5409  0198  1903               	skipnz
  5410  0199  299B               	goto	u250_21
  5411  019A  07AA               	addwf	___flmul@grs+1,f
  5412  019B                     u250_21:
  5413  019B  087B               	movf	??___flmul+2,w
  5414  019C  1103               	clrz
  5415  019D  1803               	skipnc
  5416  019E  3E01               	addlw	1
  5417  019F  1903               	skipnz
  5418  01A0  29A2               	goto	u250_22
  5419  01A1  07AB               	addwf	___flmul@grs+2,f
  5420  01A2                     u250_22:
  5421  01A2  087C               	movf	??___flmul+3,w
  5422  01A3  1103               	clrz
  5423  01A4  1803               	skipnc
  5424  01A5  3E01               	addlw	1
  5425  01A6  1903               	skipnz
  5426  01A7  29A9               	goto	u250_23
  5427  01A8  07AC               	addwf	___flmul@grs+3,f
  5428  01A9                     u250_23:
  5429  01A9                     i1l2424:
  5430  01A9  0820               	movf	___flmul@b,w
  5431  01AA  00FF               	movwf	btemp+1
  5432  01AB  087F               	movf	btemp+1,w
  5433  01AC  00F0               	movwf	__Umul8_16@multiplicand
  5434  01AD  0825               	movf	___flmul@a+1,w
  5435  01AE  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5436  01B3  0871               	movf	?__Umul8_16+1,w
  5437  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  5438  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  5439  01B6  00B4               	movwf	___flmul@temp+1
  5440  01B7  0870               	movf	?__Umul8_16,w
  5441  01B8  00B3               	movwf	___flmul@temp
  5442  01B9                     i1l2426:
  5443  01B9  0833               	movf	___flmul@temp,w
  5444  01BA  00F9               	movwf	??___flmul
  5445  01BB  0834               	movf	___flmul@temp+1,w
  5446  01BC  00FA               	movwf	??___flmul+1
  5447  01BD  01FB               	clrf	??___flmul+2
  5448  01BE  01FC               	clrf	??___flmul+3
  5449  01BF  0879               	movf	??___flmul,w
  5450  01C0  07A9               	addwf	___flmul@grs,f
  5451  01C1  087A               	movf	??___flmul+1,w
  5452  01C2  1103               	clrz
  5453  01C3  1803               	skipnc
  5454  01C4  3E01               	addlw	1
  5455  01C5  1903               	skipnz
  5456  01C6  29C8               	goto	u251_21
  5457  01C7  07AA               	addwf	___flmul@grs+1,f
  5458  01C8                     u251_21:
  5459  01C8  087B               	movf	??___flmul+2,w
  5460  01C9  1103               	clrz
  5461  01CA  1803               	skipnc
  5462  01CB  3E01               	addlw	1
  5463  01CC  1903               	skipnz
  5464  01CD  29CF               	goto	u251_22
  5465  01CE  07AB               	addwf	___flmul@grs+2,f
  5466  01CF                     u251_22:
  5467  01CF  087C               	movf	??___flmul+3,w
  5468  01D0  1103               	clrz
  5469  01D1  1803               	skipnc
  5470  01D2  3E01               	addlw	1
  5471  01D3  1903               	skipnz
  5472  01D4  29D6               	goto	u251_23
  5473  01D5  07AC               	addwf	___flmul@grs+3,f
  5474  01D6                     u251_23:
  5475  01D6                     i1l2428:
  5476  01D6  3008               	movlw	8
  5477  01D7  00F9               	movwf	??___flmul
  5478  01D8                     u252_25:
  5479  01D8  1003               	clrc
  5480  01D9  0DA9               	rlf	___flmul@grs,f
  5481  01DA  0DAA               	rlf	___flmul@grs+1,f
  5482  01DB  0DAB               	rlf	___flmul@grs+2,f
  5483  01DC  0DAC               	rlf	___flmul@grs+3,f
  5484  01DD  0BF9               	decfsz	??___flmul,f
  5485  01DE  29D8               	goto	u252_25
  5486  01DF  0820               	movf	___flmul@b,w
  5487  01E0  00FF               	movwf	btemp+1
  5488  01E1  087F               	movf	btemp+1,w
  5489  01E2  00F0               	movwf	__Umul8_16@multiplicand
  5490  01E3  0824               	movf	___flmul@a,w
  5491  01E4  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5492  01E9  0871               	movf	?__Umul8_16+1,w
  5493  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  5494  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  5495  01EC  00B4               	movwf	___flmul@temp+1
  5496  01ED  0870               	movf	?__Umul8_16,w
  5497  01EE  00B3               	movwf	___flmul@temp
  5498  01EF                     i1l2430:
  5499  01EF  0833               	movf	___flmul@temp,w
  5500  01F0  00F9               	movwf	??___flmul
  5501  01F1  0834               	movf	___flmul@temp+1,w
  5502  01F2  00FA               	movwf	??___flmul+1
  5503  01F3  01FB               	clrf	??___flmul+2
  5504  01F4  01FC               	clrf	??___flmul+3
  5505  01F5  0879               	movf	??___flmul,w
  5506  01F6  07A9               	addwf	___flmul@grs,f
  5507  01F7  087A               	movf	??___flmul+1,w
  5508  01F8  1103               	clrz
  5509  01F9  1803               	skipnc
  5510  01FA  3E01               	addlw	1
  5511  01FB  1903               	skipnz
  5512  01FC  29FE               	goto	u253_21
  5513  01FD  07AA               	addwf	___flmul@grs+1,f
  5514  01FE                     u253_21:
  5515  01FE  087B               	movf	??___flmul+2,w
  5516  01FF  1103               	clrz
  5517  0200  1803               	skipnc
  5518  0201  3E01               	addlw	1
  5519  0202  1903               	skipnz
  5520  0203  2A05               	goto	u253_22
  5521  0204  07AB               	addwf	___flmul@grs+2,f
  5522  0205                     u253_22:
  5523  0205  087C               	movf	??___flmul+3,w
  5524  0206  1103               	clrz
  5525  0207  1803               	skipnc
  5526  0208  3E01               	addlw	1
  5527  0209  1903               	skipnz
  5528  020A  2A0C               	goto	u253_23
  5529  020B  07AC               	addwf	___flmul@grs+3,f
  5530  020C                     u253_23:
  5531  020C                     i1l2432:
  5532  020C  0821               	movf	___flmul@b+1,w
  5533  020D  00FF               	movwf	btemp+1
  5534  020E  087F               	movf	btemp+1,w
  5535  020F  00F0               	movwf	__Umul8_16@multiplicand
  5536  0210  0826               	movf	___flmul@a+2,w
  5537  0211  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5538  0216  0871               	movf	?__Umul8_16+1,w
  5539  0217  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0218  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0219  00B4               	movwf	___flmul@temp+1
  5542  021A  0870               	movf	?__Umul8_16,w
  5543  021B  00B3               	movwf	___flmul@temp
  5544  021C  0833               	movf	___flmul@temp,w
  5545  021D  00F9               	movwf	??___flmul
  5546  021E  0834               	movf	___flmul@temp+1,w
  5547  021F  00FA               	movwf	??___flmul+1
  5548  0220  01FB               	clrf	??___flmul+2
  5549  0221  01FC               	clrf	??___flmul+3
  5550  0222  0879               	movf	??___flmul,w
  5551  0223  07AF               	addwf	___flmul@prod,f
  5552  0224  087A               	movf	??___flmul+1,w
  5553  0225  1103               	clrz
  5554  0226  1803               	skipnc
  5555  0227  3E01               	addlw	1
  5556  0228  1903               	skipnz
  5557  0229  2A2B               	goto	u254_21
  5558  022A  07B0               	addwf	___flmul@prod+1,f
  5559  022B                     u254_21:
  5560  022B  087B               	movf	??___flmul+2,w
  5561  022C  1103               	clrz
  5562  022D  1803               	skipnc
  5563  022E  3E01               	addlw	1
  5564  022F  1903               	skipnz
  5565  0230  2A32               	goto	u254_22
  5566  0231  07B1               	addwf	___flmul@prod+2,f
  5567  0232                     u254_22:
  5568  0232  087C               	movf	??___flmul+3,w
  5569  0233  1103               	clrz
  5570  0234  1803               	skipnc
  5571  0235  3E01               	addlw	1
  5572  0236  1903               	skipnz
  5573  0237  2A39               	goto	u254_23
  5574  0238  07B2               	addwf	___flmul@prod+3,f
  5575  0239                     u254_23:
  5576  0239                     i1l2434:
  5577  0239  0822               	movf	___flmul@b+2,w
  5578  023A  00FF               	movwf	btemp+1
  5579  023B  087F               	movf	btemp+1,w
  5580  023C  00F0               	movwf	__Umul8_16@multiplicand
  5581  023D  0825               	movf	___flmul@a+1,w
  5582  023E  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5583  0243  0871               	movf	?__Umul8_16+1,w
  5584  0244  1283               	bcf	3,5	;RP0=0, select bank0
  5585  0245  1303               	bcf	3,6	;RP1=0, select bank0
  5586  0246  00B4               	movwf	___flmul@temp+1
  5587  0247  0870               	movf	?__Umul8_16,w
  5588  0248  00B3               	movwf	___flmul@temp
  5589  0249                     i1l2436:
  5590  0249  0833               	movf	___flmul@temp,w
  5591  024A  00F9               	movwf	??___flmul
  5592  024B  0834               	movf	___flmul@temp+1,w
  5593  024C  00FA               	movwf	??___flmul+1
  5594  024D  01FB               	clrf	??___flmul+2
  5595  024E  01FC               	clrf	??___flmul+3
  5596  024F  0879               	movf	??___flmul,w
  5597  0250  07AF               	addwf	___flmul@prod,f
  5598  0251  087A               	movf	??___flmul+1,w
  5599  0252  1103               	clrz
  5600  0253  1803               	skipnc
  5601  0254  3E01               	addlw	1
  5602  0255  1903               	skipnz
  5603  0256  2A58               	goto	u255_21
  5604  0257  07B0               	addwf	___flmul@prod+1,f
  5605  0258                     u255_21:
  5606  0258  087B               	movf	??___flmul+2,w
  5607  0259  1103               	clrz
  5608  025A  1803               	skipnc
  5609  025B  3E01               	addlw	1
  5610  025C  1903               	skipnz
  5611  025D  2A5F               	goto	u255_22
  5612  025E  07B1               	addwf	___flmul@prod+2,f
  5613  025F                     u255_22:
  5614  025F  087C               	movf	??___flmul+3,w
  5615  0260  1103               	clrz
  5616  0261  1803               	skipnc
  5617  0262  3E01               	addlw	1
  5618  0263  1903               	skipnz
  5619  0264  2A66               	goto	u255_23
  5620  0265  07B2               	addwf	___flmul@prod+3,f
  5621  0266                     u255_23:
  5622  0266  0822               	movf	___flmul@b+2,w
  5623  0267  00FF               	movwf	btemp+1
  5624  0268  087F               	movf	btemp+1,w
  5625  0269  00F0               	movwf	__Umul8_16@multiplicand
  5626  026A  0826               	movf	___flmul@a+2,w
  5627  026B  120A  158A  2208  120A  118A  	fcall	__Umul8_16
  5628  0270  0871               	movf	?__Umul8_16+1,w
  5629  0271  1283               	bcf	3,5	;RP0=0, select bank0
  5630  0272  1303               	bcf	3,6	;RP1=0, select bank0
  5631  0273  00B4               	movwf	___flmul@temp+1
  5632  0274  0870               	movf	?__Umul8_16,w
  5633  0275  00B3               	movwf	___flmul@temp
  5634  0276                     i1l2438:
  5635  0276  0833               	movf	___flmul@temp,w
  5636  0277  00F9               	movwf	??___flmul
  5637  0278  0834               	movf	___flmul@temp+1,w
  5638  0279  00FA               	movwf	??___flmul+1
  5639  027A  01FB               	clrf	??___flmul+2
  5640  027B  01FC               	clrf	??___flmul+3
  5641  027C  3008               	movlw	8
  5642  027D                     u256_25:
  5643  027D  1003               	clrc
  5644  027E  0DF9               	rlf	??___flmul,f
  5645  027F  0DFA               	rlf	??___flmul+1,f
  5646  0280  0DFB               	rlf	??___flmul+2,f
  5647  0281  0DFC               	rlf	??___flmul+3,f
  5648  0282                     u256_20:
  5649  0282  3EFF               	addlw	-1
  5650  0283  1D03               	skipz
  5651  0284  2A7D               	goto	u256_25
  5652  0285  0879               	movf	??___flmul,w
  5653  0286  07AF               	addwf	___flmul@prod,f
  5654  0287  087A               	movf	??___flmul+1,w
  5655  0288  1103               	clrz
  5656  0289  1803               	skipnc
  5657  028A  3E01               	addlw	1
  5658  028B  1903               	skipnz
  5659  028C  2A8E               	goto	u257_21
  5660  028D  07B0               	addwf	___flmul@prod+1,f
  5661  028E                     u257_21:
  5662  028E  087B               	movf	??___flmul+2,w
  5663  028F  1103               	clrz
  5664  0290  1803               	skipnc
  5665  0291  3E01               	addlw	1
  5666  0292  1903               	skipnz
  5667  0293  2A95               	goto	u257_22
  5668  0294  07B1               	addwf	___flmul@prod+2,f
  5669  0295                     u257_22:
  5670  0295  087C               	movf	??___flmul+3,w
  5671  0296  1103               	clrz
  5672  0297  1803               	skipnc
  5673  0298  3E01               	addlw	1
  5674  0299  1903               	skipnz
  5675  029A  2A9C               	goto	u257_23
  5676  029B  07B2               	addwf	___flmul@prod+3,f
  5677  029C                     u257_23:
  5678  029C                     i1l2440:
  5679  029C  0829               	movf	___flmul@grs,w
  5680  029D  00F9               	movwf	??___flmul
  5681  029E  082A               	movf	___flmul@grs+1,w
  5682  029F  00FA               	movwf	??___flmul+1
  5683  02A0  082B               	movf	___flmul@grs+2,w
  5684  02A1  00FB               	movwf	??___flmul+2
  5685  02A2  082C               	movf	___flmul@grs+3,w
  5686  02A3  00FC               	movwf	??___flmul+3
  5687  02A4  3018               	movlw	24
  5688  02A5                     u258_25:
  5689  02A5  1003               	clrc
  5690  02A6  0CFC               	rrf	??___flmul+3,f
  5691  02A7  0CFB               	rrf	??___flmul+2,f
  5692  02A8  0CFA               	rrf	??___flmul+1,f
  5693  02A9  0CF9               	rrf	??___flmul,f
  5694  02AA                     u258_20:
  5695  02AA  3EFF               	addlw	-1
  5696  02AB  1D03               	skipz
  5697  02AC  2AA5               	goto	u258_25
  5698  02AD  0879               	movf	??___flmul,w
  5699  02AE  07AF               	addwf	___flmul@prod,f
  5700  02AF  087A               	movf	??___flmul+1,w
  5701  02B0  1103               	clrz
  5702  02B1  1803               	skipnc
  5703  02B2  3E01               	addlw	1
  5704  02B3  1903               	skipnz
  5705  02B4  2AB6               	goto	u259_21
  5706  02B5  07B0               	addwf	___flmul@prod+1,f
  5707  02B6                     u259_21:
  5708  02B6  087B               	movf	??___flmul+2,w
  5709  02B7  1103               	clrz
  5710  02B8  1803               	skipnc
  5711  02B9  3E01               	addlw	1
  5712  02BA  1903               	skipnz
  5713  02BB  2ABD               	goto	u259_22
  5714  02BC  07B1               	addwf	___flmul@prod+2,f
  5715  02BD                     u259_22:
  5716  02BD  087C               	movf	??___flmul+3,w
  5717  02BE  1103               	clrz
  5718  02BF  1803               	skipnc
  5719  02C0  3E01               	addlw	1
  5720  02C1  1903               	skipnz
  5721  02C2  2AC4               	goto	u259_23
  5722  02C3  07B2               	addwf	___flmul@prod+3,f
  5723  02C4                     u259_23:
  5724  02C4                     i1l2442:
  5725  02C4  3008               	movlw	8
  5726  02C5  00F9               	movwf	??___flmul
  5727  02C6                     u260_25:
  5728  02C6  1003               	clrc
  5729  02C7  0DA9               	rlf	___flmul@grs,f
  5730  02C8  0DAA               	rlf	___flmul@grs+1,f
  5731  02C9  0DAB               	rlf	___flmul@grs+2,f
  5732  02CA  0DAC               	rlf	___flmul@grs+3,f
  5733  02CB  0BF9               	decfsz	??___flmul,f
  5734  02CC  2AC6               	goto	u260_25
  5735  02CD                     i1l2444:
  5736  02CD  082E               	movf	___flmul@bexp,w
  5737  02CE  072D               	addwf	___flmul@aexp,w
  5738  02CF  00F9               	movwf	??___flmul
  5739  02D0  01FA               	clrf	??___flmul+1
  5740  02D1  0DFA               	rlf	??___flmul+1,f
  5741  02D2  0879               	movf	??___flmul,w
  5742  02D3  3E82               	addlw	130
  5743  02D4  00B3               	movwf	___flmul@temp
  5744  02D5  087A               	movf	??___flmul+1,w
  5745  02D6  1803               	skipnc
  5746  02D7  3E01               	addlw	1
  5747  02D8  3EFF               	addlw	255
  5748  02D9  00B4               	movwf	___flmul@temp+1
  5749  02DA  2AF8               	goto	i1l2456
  5750  02DB                     i1l2446:
  5751  02DB  3001               	movlw	1
  5752  02DC  00F9               	movwf	??___flmul
  5753  02DD                     u261_25:
  5754  02DD  1003               	clrc
  5755  02DE  0DAF               	rlf	___flmul@prod,f
  5756  02DF  0DB0               	rlf	___flmul@prod+1,f
  5757  02E0  0DB1               	rlf	___flmul@prod+2,f
  5758  02E1  0DB2               	rlf	___flmul@prod+3,f
  5759  02E2  0BF9               	decfsz	??___flmul,f
  5760  02E3  2ADD               	goto	u261_25
  5761  02E4                     i1l2448:
  5762  02E4  1FAC               	btfss	___flmul@grs+3,7
  5763  02E5  2AE7               	goto	u262_21
  5764  02E6  2AE8               	goto	u262_20
  5765  02E7                     u262_21:
  5766  02E7  2AE9               	goto	i1l2452
  5767  02E8                     u262_20:
  5768  02E8                     i1l2450:
  5769  02E8  142F               	bsf	___flmul@prod,0
  5770  02E9                     i1l2452:
  5771  02E9  3001               	movlw	1
  5772  02EA  00F9               	movwf	??___flmul
  5773  02EB                     u263_25:
  5774  02EB  1003               	clrc
  5775  02EC  0DA9               	rlf	___flmul@grs,f
  5776  02ED  0DAA               	rlf	___flmul@grs+1,f
  5777  02EE  0DAB               	rlf	___flmul@grs+2,f
  5778  02EF  0DAC               	rlf	___flmul@grs+3,f
  5779  02F0  0BF9               	decfsz	??___flmul,f
  5780  02F1  2AEB               	goto	u263_25
  5781  02F2                     i1l2454:
  5782  02F2  30FF               	movlw	255
  5783  02F3  07B3               	addwf	___flmul@temp,f
  5784  02F4  1803               	skipnc
  5785  02F5  0AB4               	incf	___flmul@temp+1,f
  5786  02F6  30FF               	movlw	255
  5787  02F7  07B4               	addwf	___flmul@temp+1,f
  5788  02F8                     i1l2456:
  5789  02F8  1FB1               	btfss	___flmul@prod+2,7
  5790  02F9  2AFB               	goto	u264_21
  5791  02FA  2AFC               	goto	u264_20
  5792  02FB                     u264_21:
  5793  02FB  2ADB               	goto	i1l2446
  5794  02FC                     u264_20:
  5795  02FC                     i1l2458:
  5796  02FC  01AD               	clrf	___flmul@aexp
  5797  02FD                     i1l2460:
  5798  02FD  1FAC               	btfss	___flmul@grs+3,7
  5799  02FE  2B00               	goto	u265_21
  5800  02FF  2B01               	goto	u265_20
  5801  0300                     u265_21:
  5802  0300  2B1D               	goto	i1l2468
  5803  0301                     u265_20:
  5804  0301                     i1l2462:
  5805  0301  30FF               	movlw	255
  5806  0302  0529               	andwf	___flmul@grs,w
  5807  0303  00F9               	movwf	??___flmul
  5808  0304  30FF               	movlw	255
  5809  0305  052A               	andwf	___flmul@grs+1,w
  5810  0306  00FA               	movwf	??___flmul+1
  5811  0307  30FF               	movlw	255
  5812  0308  052B               	andwf	___flmul@grs+2,w
  5813  0309  00FB               	movwf	??___flmul+2
  5814  030A  307F               	movlw	127
  5815  030B  052C               	andwf	___flmul@grs+3,w
  5816  030C  00FC               	movwf	??___flmul+3
  5817  030D  087C               	movf	??___flmul+3,w
  5818  030E  047B               	iorwf	??___flmul+2,w
  5819  030F  047A               	iorwf	??___flmul+1,w
  5820  0310  0479               	iorwf	??___flmul,w
  5821  0311  1903               	skipnz
  5822  0312  2B14               	goto	u266_21
  5823  0313  2B15               	goto	u266_20
  5824  0314                     u266_21:
  5825  0314  2B18               	goto	i1l760
  5826  0315                     u266_20:
  5827  0315                     i1l2464:
  5828  0315  01AD               	clrf	___flmul@aexp
  5829  0316  0AAD               	incf	___flmul@aexp,f
  5830  0317  2B1D               	goto	i1l2468
  5831  0318                     i1l760:
  5832  0318  1C2F               	btfss	___flmul@prod,0
  5833  0319  2B1B               	goto	u267_21
  5834  031A  2B1C               	goto	u267_20
  5835  031B                     u267_21:
  5836  031B  2B1D               	goto	i1l2468
  5837  031C                     u267_20:
  5838  031C  2B15               	goto	i1l2464
  5839  031D                     i1l2468:
  5840  031D  082D               	movf	___flmul@aexp,w
  5841  031E  1903               	btfsc	3,2
  5842  031F  2B21               	goto	u268_21
  5843  0320  2B22               	goto	u268_20
  5844  0321                     u268_21:
  5845  0321  2B53               	goto	i1l2478
  5846  0322                     u268_20:
  5847  0322                     i1l2470:
  5848  0322  3001               	movlw	1
  5849  0323  07AF               	addwf	___flmul@prod,f
  5850  0324  3000               	movlw	0
  5851  0325  1803               	skipnc
  5852  0326  3001               	movlw	1
  5853  0327  07B0               	addwf	___flmul@prod+1,f
  5854  0328  3000               	movlw	0
  5855  0329  1803               	skipnc
  5856  032A  3001               	movlw	1
  5857  032B  07B1               	addwf	___flmul@prod+2,f
  5858  032C  3000               	movlw	0
  5859  032D  1803               	skipnc
  5860  032E  3001               	movlw	1
  5861  032F  07B2               	addwf	___flmul@prod+3,f
  5862  0330                     i1l2472:
  5863  0330  1C32               	btfss	___flmul@prod+3,0
  5864  0331  2B33               	goto	u269_21
  5865  0332  2B34               	goto	u269_20
  5866  0333                     u269_21:
  5867  0333  2B53               	goto	i1l2478
  5868  0334                     u269_20:
  5869  0334                     i1l2474:
  5870  0334  082F               	movf	___flmul@prod,w
  5871  0335  00F9               	movwf	??___flmul
  5872  0336  0830               	movf	___flmul@prod+1,w
  5873  0337  00FA               	movwf	??___flmul+1
  5874  0338  0831               	movf	___flmul@prod+2,w
  5875  0339  00FB               	movwf	??___flmul+2
  5876  033A  0832               	movf	___flmul@prod+3,w
  5877  033B  00FC               	movwf	??___flmul+3
  5878  033C  3001               	movlw	1
  5879  033D  00FD               	movwf	??___flmul+4
  5880  033E                     u270_25:
  5881  033E  0D7C               	rlf	??___flmul+3,w
  5882  033F  0CFC               	rrf	??___flmul+3,f
  5883  0340  0CFB               	rrf	??___flmul+2,f
  5884  0341  0CFA               	rrf	??___flmul+1,f
  5885  0342  0CF9               	rrf	??___flmul,f
  5886  0343                     u270_20:
  5887  0343  0BFD               	decfsz	??___flmul+4,f
  5888  0344  2B3E               	goto	u270_25
  5889  0345  087C               	movf	??___flmul+3,w
  5890  0346  00B2               	movwf	___flmul@prod+3
  5891  0347  087B               	movf	??___flmul+2,w
  5892  0348  00B1               	movwf	___flmul@prod+2
  5893  0349  087A               	movf	??___flmul+1,w
  5894  034A  00B0               	movwf	___flmul@prod+1
  5895  034B  0879               	movf	??___flmul,w
  5896  034C  00AF               	movwf	___flmul@prod
  5897  034D                     i1l2476:
  5898  034D  3001               	movlw	1
  5899  034E  07B3               	addwf	___flmul@temp,f
  5900  034F  1803               	skipnc
  5901  0350  0AB4               	incf	___flmul@temp+1,f
  5902  0351  3000               	movlw	0
  5903  0352  07B4               	addwf	___flmul@temp+1,f
  5904  0353                     i1l2478:
  5905  0353  0834               	movf	___flmul@temp+1,w
  5906  0354  3A80               	xorlw	128
  5907  0355  00FF               	movwf	btemp+1
  5908  0356  3080               	movlw	128
  5909  0357  027F               	subwf	btemp+1,w
  5910  0358  1D03               	skipz
  5911  0359  2B5C               	goto	u271_25
  5912  035A  30FF               	movlw	255
  5913  035B  0233               	subwf	___flmul@temp,w
  5914  035C                     u271_25:
  5915  035C  1C03               	skipc
  5916  035D  2B5F               	goto	u271_21
  5917  035E  2B60               	goto	u271_20
  5918  035F                     u271_21:
  5919  035F  2B6B               	goto	i1l2482
  5920  0360                     u271_20:
  5921  0360                     i1l2480:
  5922  0360  307F               	movlw	127
  5923  0361  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0362  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0363  00B2               	movwf	___flmul@prod+3
  5926  0364  3080               	movlw	128
  5927  0365  00B1               	movwf	___flmul@prod+2
  5928  0366  3000               	movlw	0
  5929  0367  00B0               	movwf	___flmul@prod+1
  5930  0368  3000               	movlw	0
  5931  0369  00AF               	movwf	___flmul@prod
  5932  036A  2BA0               	goto	i1l766
  5933  036B                     i1l2482:
  5934  036B  1283               	bcf	3,5	;RP0=0, select bank0
  5935  036C  1303               	bcf	3,6	;RP1=0, select bank0
  5936  036D  0834               	movf	___flmul@temp+1,w
  5937  036E  3A80               	xorlw	128
  5938  036F  00FF               	movwf	btemp+1
  5939  0370  3080               	movlw	128
  5940  0371  027F               	subwf	btemp+1,w
  5941  0372  1D03               	skipz
  5942  0373  2B76               	goto	u272_25
  5943  0374  3001               	movlw	1
  5944  0375  0233               	subwf	___flmul@temp,w
  5945  0376                     u272_25:
  5946  0376  1803               	skipnc
  5947  0377  2B79               	goto	u272_21
  5948  0378  2B7A               	goto	u272_20
  5949  0379                     u272_21:
  5950  0379  2B86               	goto	i1l2488
  5951  037A                     u272_20:
  5952  037A                     i1l2484:
  5953  037A  3000               	movlw	0
  5954  037B  1283               	bcf	3,5	;RP0=0, select bank0
  5955  037C  1303               	bcf	3,6	;RP1=0, select bank0
  5956  037D  00B2               	movwf	___flmul@prod+3
  5957  037E  3000               	movlw	0
  5958  037F  00B1               	movwf	___flmul@prod+2
  5959  0380  3000               	movlw	0
  5960  0381  00B0               	movwf	___flmul@prod+1
  5961  0382  3000               	movlw	0
  5962  0383  00AF               	movwf	___flmul@prod
  5963  0384                     i1l2486:
  5964  0384  01A8               	clrf	___flmul@sign
  5965  0385  2BA0               	goto	i1l766
  5966  0386                     i1l2488:
  5967  0386  1283               	bcf	3,5	;RP0=0, select bank0
  5968  0387  1303               	bcf	3,6	;RP1=0, select bank0
  5969  0388  0833               	movf	___flmul@temp,w
  5970  0389  00FF               	movwf	btemp+1
  5971  038A  087F               	movf	btemp+1,w
  5972  038B  00AE               	movwf	___flmul@bexp
  5973  038C                     i1l2490:
  5974  038C  30FF               	movlw	255
  5975  038D  05AF               	andwf	___flmul@prod,f
  5976  038E  30FF               	movlw	255
  5977  038F  05B0               	andwf	___flmul@prod+1,f
  5978  0390  307F               	movlw	127
  5979  0391  05B1               	andwf	___flmul@prod+2,f
  5980  0392  3000               	movlw	0
  5981  0393  05B2               	andwf	___flmul@prod+3,f
  5982  0394                     i1l2492:
  5983  0394  1C2E               	btfss	___flmul@bexp,0
  5984  0395  2B97               	goto	u273_21
  5985  0396  2B98               	goto	u273_20
  5986  0397                     u273_21:
  5987  0397  2B99               	goto	i1l2496
  5988  0398                     u273_20:
  5989  0398                     i1l2494:
  5990  0398  17B1               	bsf	___flmul@prod+2,7
  5991  0399                     i1l2496:
  5992  0399  082E               	movf	___flmul@bexp,w
  5993  039A  00F9               	movwf	??___flmul
  5994  039B  1003               	clrc
  5995  039C  0C79               	rrf	??___flmul,w
  5996  039D  00FF               	movwf	btemp+1
  5997  039E  087F               	movf	btemp+1,w
  5998  039F  00B2               	movwf	___flmul@prod+3
  5999  03A0                     i1l766:
  6000  03A0  0828               	movf	___flmul@sign,w
  6001  03A1  00FF               	movwf	btemp+1
  6002  03A2  087F               	movf	btemp+1,w
  6003  03A3  04B2               	iorwf	___flmul@prod+3,f
  6004  03A4                     i1l2498:
  6005  03A4  0832               	movf	___flmul@prod+3,w
  6006  03A5  00A3               	movwf	?___flmul+3
  6007  03A6  0831               	movf	___flmul@prod+2,w
  6008  03A7  00A2               	movwf	?___flmul+2
  6009  03A8  0830               	movf	___flmul@prod+1,w
  6010  03A9  00A1               	movwf	?___flmul+1
  6011  03AA  082F               	movf	___flmul@prod,w
  6012  03AB  00A0               	movwf	?___flmul
  6013  03AC                     i1l754:
  6014  03AC  0008               	return
  6015  03AD                     __end_of___flmul:
  6016                           
  6017                           	psect	text20
  6018  0A08                     __ptext20:	
  6019 ;; *************** function __Umul8_16 *****************
  6020 ;; Defined at:
  6021 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  multiplier      1    wreg     unsigned char 
  6024 ;;  multiplicand    1    0[COMMON] unsigned char 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  multiplier      1    8[COMMON] unsigned char 
  6027 ;;  word_mpld       2    6[COMMON] unsigned int 
  6028 ;;  product         2    4[COMMON] unsigned int 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2    0[COMMON] unsigned int 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6038 ;;      Params:         2       0       0       0       0
  6039 ;;      Locals:         5       0       0       0       0
  6040 ;;      Temps:          2       0       0       0       0
  6041 ;;      Totals:         9       0       0       0       0
  6042 ;;Total ram usage:        9 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; This function calls:
  6045 ;;		Nothing
  6046 ;; This function is called by:
  6047 ;;		___flmul
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           
  6052                           ;psect for function __Umul8_16
  6053  0A08                     __Umul8_16:
  6054                           
  6055                           ;incstack = 0
  6056                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6057                           ;__Umul8_16@multiplier stored from wreg
  6058  0A08  00F8               	movwf	__Umul8_16@multiplier
  6059  0A09                     i1l2118:
  6060  0A09  01F4               	clrf	__Umul8_16@product
  6061  0A0A  01F5               	clrf	__Umul8_16@product+1
  6062  0A0B                     i1l2120:
  6063  0A0B  0870               	movf	__Umul8_16@multiplicand,w
  6064  0A0C  00F2               	movwf	??__Umul8_16
  6065  0A0D  01F3               	clrf	??__Umul8_16+1
  6066  0A0E  0872               	movf	??__Umul8_16,w
  6067  0A0F  00F6               	movwf	__Umul8_16@word_mpld
  6068  0A10  0873               	movf	??__Umul8_16+1,w
  6069  0A11  00F7               	movwf	__Umul8_16@word_mpld+1
  6070  0A12                     i1l2122:
  6071  0A12  1C78               	btfss	__Umul8_16@multiplier,0
  6072  0A13  2A15               	goto	u204_21
  6073  0A14  2A16               	goto	u204_20
  6074  0A15                     u204_21:
  6075  0A15  2A1C               	goto	i1l773
  6076  0A16                     u204_20:
  6077  0A16                     i1l2124:
  6078  0A16  0876               	movf	__Umul8_16@word_mpld,w
  6079  0A17  07F4               	addwf	__Umul8_16@product,f
  6080  0A18  1803               	skipnc
  6081  0A19  0AF5               	incf	__Umul8_16@product+1,f
  6082  0A1A  0877               	movf	__Umul8_16@word_mpld+1,w
  6083  0A1B  07F5               	addwf	__Umul8_16@product+1,f
  6084  0A1C                     i1l773:
  6085  0A1C  3001               	movlw	1
  6086  0A1D                     u205_25:
  6087  0A1D  1003               	clrc
  6088  0A1E  0DF6               	rlf	__Umul8_16@word_mpld,f
  6089  0A1F  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6090  0A20  3EFF               	addlw	-1
  6091  0A21  1D03               	skipz
  6092  0A22  2A1D               	goto	u205_25
  6093  0A23  1003               	clrc
  6094  0A24  0CF8               	rrf	__Umul8_16@multiplier,f
  6095  0A25                     i1l2126:
  6096  0A25  0878               	movf	__Umul8_16@multiplier,w
  6097  0A26  1D03               	btfss	3,2
  6098  0A27  2A29               	goto	u206_21
  6099  0A28  2A2A               	goto	u206_20
  6100  0A29                     u206_21:
  6101  0A29  2A12               	goto	i1l2122
  6102  0A2A                     u206_20:
  6103  0A2A                     i1l2128:
  6104  0A2A  0875               	movf	__Umul8_16@product+1,w
  6105  0A2B  00F1               	movwf	?__Umul8_16+1
  6106  0A2C  0874               	movf	__Umul8_16@product,w
  6107  0A2D  00F0               	movwf	?__Umul8_16
  6108  0A2E                     i1l775:
  6109  0A2E  0008               	return
  6110  0A2F                     __end_of__Umul8_16:
  6111                           
  6112                           	psect	text21
  6113  0A64                     __ptext21:	
  6114 ;; *************** function _ADC_Read *****************
  6115 ;; Defined at:
  6116 ;;		line 11 in file "./adc_thay_hai.h"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  Channel         1    wreg     unsigned char 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  Channel         1    6[COMMON] unsigned char 
  6121 ;;  value           2    4[COMMON] unsigned int 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  2    0[COMMON] unsigned int 
  6124 ;; Registers used:
  6125 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6131 ;;      Params:         2       0       0       0       0
  6132 ;;      Locals:         3       0       0       0       0
  6133 ;;      Temps:          2       0       0       0       0
  6134 ;;      Totals:         7       0       0       0       0
  6135 ;;Total ram usage:        7 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_ISR
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           
  6145                           ;psect for function _ADC_Read
  6146  0A64                     _ADC_Read:
  6147                           
  6148                           ;incstack = 0
  6149                           ; Regs used in _ADC_Read: [wreg-fsr0h+status,2+status,0]
  6150                           ;ADC_Read@Channel stored from wreg
  6151  0A64  00F6               	movwf	ADC_Read@Channel
  6152  0A65                     i1l2134:
  6153                           
  6154                           ;./adc_thay_hai.h: 11: unsigned int ADC_Read(unsigned char Channel);./adc_thay_hai.h: 12
      +                          : {;./adc_thay_hai.h: 13:     unsigned int value;;./adc_thay_hai.h: 14:     switch(Chann
      +                          el)
  6155  0A65  2A72               	goto	i1l2136
  6156  0A66                     i1l99:	
  6157                           ;./adc_thay_hai.h: 15:  {;./adc_thay_hai.h: 16:  case 0: CHS0 = 0; CHS1 = 0; CHS2 = 0; b
      +                          reak;
  6158                           
  6159  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  6160  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  6161  0A68  119F               	bcf	31,3	;volatile
  6162  0A69  121F               	bcf	31,4	;volatile
  6163  0A6A  129F               	bcf	31,5	;volatile
  6164  0A6B  2A82               	goto	i1l100
  6165  0A6C                     i1l101:	
  6166                           ;./adc_thay_hai.h: 17:     case 1: CHS0 = 1; CHS1 = 0; CHS2 = 0;
  6167                           
  6168  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  6170  0A6E  159F               	bsf	31,3	;volatile
  6171  0A6F  121F               	bcf	31,4	;volatile
  6172  0A70  129F               	bcf	31,5	;volatile
  6173                           
  6174                           ;./adc_thay_hai.h: 18:     }
  6175  0A71  2A82               	goto	i1l100
  6176  0A72                     i1l2136:
  6177  0A72  0876               	movf	ADC_Read@Channel,w
  6178  0A73  00F2               	movwf	??_ADC_Read
  6179  0A74  01F3               	clrf	??_ADC_Read+1
  6180                           
  6181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6182                           ; Switch size 1, requested type "simple"
  6183                           ; Number of cases is 1, Range of values is 0 to 0
  6184                           ; switch strategies available:
  6185                           ; Name         Instructions Cycles
  6186                           ; simple_byte            4     3 (average)
  6187                           ; direct_byte           11     8 (fixed)
  6188                           ; jumptable            260     6 (fixed)
  6189                           ;	Chosen strategy is simple_byte
  6190  0A75  0873               	movf	??_ADC_Read+1,w
  6191  0A76  3A00               	xorlw	0	; case 0
  6192  0A77  1903               	skipnz
  6193  0A78  2A7A               	goto	i1l3490
  6194  0A79  2A82               	goto	i1l100
  6195  0A7A                     i1l3490:
  6196                           
  6197                           ; Switch size 1, requested type "simple"
  6198                           ; Number of cases is 2, Range of values is 0 to 1
  6199                           ; switch strategies available:
  6200                           ; Name         Instructions Cycles
  6201                           ; simple_byte            7     4 (average)
  6202                           ; direct_byte           14     8 (fixed)
  6203                           ; jumptable            260     6 (fixed)
  6204                           ;	Chosen strategy is simple_byte
  6205  0A7A  0872               	movf	??_ADC_Read,w
  6206  0A7B  3A00               	xorlw	0	; case 0
  6207  0A7C  1903               	skipnz
  6208  0A7D  2A66               	goto	i1l99
  6209  0A7E  3A01               	xorlw	1	; case 1
  6210  0A7F  1903               	skipnz
  6211  0A80  2A6C               	goto	i1l101
  6212  0A81  2A82               	goto	i1l100
  6213  0A82                     i1l100:
  6214                           
  6215                           ;./adc_thay_hai.h: 19:     ADON=1;
  6216  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  6217  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  6218  0A84  141F               	bsf	31,0	;volatile
  6219  0A85                     i1l2138:
  6220                           
  6221                           ;./adc_thay_hai.h: 20:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  6222  0A85  3006               	movlw	6
  6223  0A86  00F2               	movwf	??_ADC_Read
  6224  0A87                     u394_27:
  6225  0A87  0BF2               	decfsz	??_ADC_Read,f
  6226  0A88  2A87               	goto	u394_27
  6227  0A89  0000               	nop
  6228  0A8A                     i1l2140:
  6229                           
  6230                           ;./adc_thay_hai.h: 21:     GO_DONE=1;
  6231  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  6233  0A8C  151F               	bsf	31,2	;volatile
  6234  0A8D                     i1l102:	
  6235                           ;./adc_thay_hai.h: 22:     while(GO_DONE);
  6236                           
  6237  0A8D  191F               	btfsc	31,2	;volatile
  6238  0A8E  2A90               	goto	u207_21
  6239  0A8F  2A91               	goto	u207_20
  6240  0A90                     u207_21:
  6241  0A90  2A8D               	goto	i1l102
  6242  0A91                     u207_20:
  6243  0A91                     i1l2142:
  6244                           
  6245                           ;./adc_thay_hai.h: 23:     value=(unsigned int)ADRESH*256+ADRESL;
  6246  0A91  081E               	movf	30,w	;volatile
  6247  0A92  00F5               	movwf	ADC_Read@value+1
  6248  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  6249  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  6250  0A95  081E               	movf	30,w	;volatile
  6251  0A96  00F4               	movwf	ADC_Read@value
  6252  0A97                     i1l2144:
  6253                           
  6254                           ;./adc_thay_hai.h: 24:     ADON=0;
  6255  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  6256  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  6257  0A99  101F               	bcf	31,0	;volatile
  6258                           
  6259                           ;./adc_thay_hai.h: 26:     return value;
  6260  0A9A  0875               	movf	ADC_Read@value+1,w
  6261  0A9B  00F1               	movwf	?_ADC_Read+1
  6262  0A9C  0874               	movf	ADC_Read@value,w
  6263  0A9D  00F0               	movwf	?_ADC_Read
  6264  0A9E                     i1l105:
  6265  0A9E  0008               	return
  6266  0A9F                     __end_of_ADC_Read:
  6267  007E                     btemp	set	126	;btemp
  6268  007E                     wtemp0	set	126
  6269                           
  6270                           	psect	config
  6271                           
  6272                           ;Config register CONFIG @ 0x2007
  6273                           ;	Oscillator Selection bits
  6274                           ;	FOSC = HS, HS oscillator
  6275                           ;	Watchdog Timer Enable bit
  6276                           ;	WDTE = OFF, WDT disabled
  6277                           ;	Power-up Timer Enable bit
  6278                           ;	PWRTE = ON, PWRT enabled
  6279                           ;	Brown-out Reset Enable bit
  6280                           ;	BOREN = ON, BOR enabled
  6281                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6282                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  6283                           ;	Data EEPROM Memory Code Protection bit
  6284                           ;	CPD = OFF, Data EEPROM code protection off
  6285                           ;	Flash Program Memory Write Enable bits
  6286                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6287                           ;	In-Circuit Debugger Mode bit
  6288                           ;	DEBUG = 0x1, unprogrammed default
  6289                           ;	Flash Program Memory Code Protection bit
  6290                           ;	CP = OFF, Code protection off
  6291  2007                     	org	8199
  6292  2007  3FF2               	dw	16370

Data Sizes:
    Strings     28
    Constant    0
    Data        66
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      58
    BANK1            80     43      64
    BANK3            96      0      50
    BANK2            96      0      64

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> in_buffer(BANK0[6]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___flmul
    ___xxtofl->_ADC_Read
    ___flmul->__Umul8_16

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___flmul

Critical Paths under _main in BANK1

    _main->_UART_Init
    _UART_Write_data->___lwdiv
    ___lwdiv->___lwmod
    _UART_Init->___aldiv
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   26611
                                             33 BANK1     10    10      0
                           _ADC_Init
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                        _TIMER1_Init
                          _UART_Init
                    _UART_Write_data
                            ___fltol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     697
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_data                                      6     6      0    6257
                                             12 BANK1      6     6      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    2572
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1861
                                              5 BANK1      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4    1118
                                             15 BANK1     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       2     2      0    3452
                                             10 BANK1      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    3321
                                             10 BANK1      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            4     3      1    3570
                                             10 BANK1      4     3      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              6     5      1    3015
                                              4 BANK1      6     5      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          4     4      0     176
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  9     9      0    3659
                                             21 BANK0      9     9      0
                           _ADC_Read
                            ___flmul
                           ___xxtofl
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     3      3     504
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     474
                                              7 COMMON     4     0      4
                                              0 BANK0     10    10      0
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) _ADC_Read                                             7     5      2      45
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _TIMER1_Init
   _UART_Init
     ___aldiv
   _UART_Write_data
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   ___fltol
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod

 _ISR (ROOT)
   _ADC_Read
   ___flmul
     __Umul8_16
   ___xxtofl
     _ADC_Read (ARG)
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      11       66.7%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2B      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      FA      12        0.0%
ABS                  0      0      FA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 30 15:56:34 2021

            ?_LCDBusyLoop 0070                         _a 0058                         _i 004D  
                       pc 0002                        l95 09DF              ___awdiv@sign 00A5  
                      fsr 0004       __Umul8_16@word_mpld 0076                       l110 07B2  
                     l201 0E96                       l204 0EA6                       l231 0B7E  
                     l232 0B81                       l233 0BB3                       l243 0CD2  
                     l237 0C05                       l253 0DA8                       l238 0C0E  
                     l430 0EBB                       l440 0F43                       l273 0A63  
                     l531 0C69                       l276 0A5B                       l196 0A07  
                     l277 0A39                       l518 0D3B                       l551 0E24  
                     l561 0E24                       l637 07F8                       l558 0E0F  
                     l647 0ADA                       _GIE 005F                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _ISR 059A  
                     _RX9 00C6                       _TX9 04C6                       fsr0 0004  
                     _str 0190                       indf 0000              ___awmod@sign 00A5  
            ___flmul@aexp 002D              ___flmul@bexp 002E              ___flmul@sign 0028  
            ___flmul@temp 0033              ___flmul@prod 002F           __end_of_LCDByte 0BB4  
         __end_of_LCDInit 0CD3                      ?_ISR 0070               LCDByte@temp 00A9  
            ___fltol@exp1 00A9                      l3000 0C1D                      l3010 0C36  
                    l3002 0C21                      l3100 07A5                      l3020 0C55  
                    l3012 0C3A                      l3004 0C26                      l3110 07AE  
                    l3102 07A6                      l3014 0C3E                      l3006 0C2C  
                    l3022 0C5B                      l3030 07B3                      l3120 0C78  
                    l3200 0D6F                      l3112 07AF                      l3104 07A7  
                    l3024 0C60                      l3016 0C48                      l3008 0C2F  
                    l3040 07CB                      l3032 07B7                      l3130 0C87  
                    l3122 0C7E                      l3202 0D77                      l3106 07A8  
                    l3026 0C65                      l3018 0C4E                      l3050 07EE  
                    l3042 07CF                      l3034 07BD                      l3210 0E28  
                    l3140 0C8E                      l3132 0C88                      l3124 0C7F  
                    l3204 0D88                      l3116 09F3                      l3108 07AB  
                    l3044 07E0                      l3036 07C0                      l3052 07F4  
                    l3060 0AAA                      l3220 0E8D                      l3212 0E2C  
                    l3300 0416                      l3150 0C9B                      l3142 0C8F  
                    l3134 0C89                      l3126 0C80                      l3118 0C6D  
                    l3206 0D96                      l3046 07E6                      l3038 07C7  
                    l3070 0AC9                      l3062 0AB1                      l3230 0EA0  
                    l3214 0E43                      l3310 0483                      l3302 0418  
                    l3152 0CA4                      l3144 0C91                      l3136 0C8A  
                    l3128 0C81                      l3208 0D9C                      l3080 06D4  
                    l3048 07E7                      l3072 0AD0                      l3064 0AB5  
                    l3056 0A9F                      l3216 0E85                      l3240 0DD4  
                    l3232 0DA9                      l3320 04B7                      l3312 0496  
                    l3304 043B                      l3162 0CBA                      l3154 0CAE  
                    l3146 0C94                      l3138 0C8B                      l3090 079B  
                    l3082 072F                      l3066 0AB9                      l3058 0AA7  
                    l3074 0AD6                      l3226 0E8E                      l3218 0E89  
                    l3242 0DD5                      l3234 0DB6                      l3330 050D  
                    l3322 04C1                      l3314 049C                      l3306 044E  
                    l3180 0A5C                      l3172 0A3B                      l3164 0CC6  
                    l3156 0CB7                      l3148 0C96                      l3092 079D  
                    l3084 0738                      l3068 0AC3                      l3228 0E9C  
                    l3244 0DDD                      l3340 0565                      l3332 052F  
                    l3324 04CC                      l3316 04A6                      l3308 0470  
                    l3078 09D7                      l3174 0A40                      l3166 0CCC  
                    l3190 0D4C                      l3094 079E                      l3086 0791  
                    l3254 0DEB                      l3246 0DDF                      l3238 0DBF  
                    l3342 056B                      l3334 0542                      l3326 04D7  
                    l3318 04AC                      l3270 03AD                      l3168 0A32  
                    l3192 0D50                      l3096 07A1                      l3088 0792  
                    l3264 0E04                      l3256 0DF4                      l3248 0DE3  
                    l3344 0576                      l3336 0555                      l3328 04FA  
                    l3280 03BE                      l3272 03B5                      l3178 0A45  
                    l3194 0D5B                      l3186 0D3F                      l3098 07A4  
                    l3266 0E14                      l3258 0DFD                      l3346 0580  
                    l3338 055B                      l3290 03EA                      l3282 03C3  
                    l3274 03B5                      l2900 0BA9                      l3196 0D5F  
                    l3188 0D40                      l3268 0E19                      l3348 058B  
                    l3292 03F0                      l3284 03C9                      l3276 03B6  
                    l2830 0BB4                      l2902 0BAC                      l3198 0D66  
                    l2910 0EAE                      l3294 03FF                      l3286 03D2  
                    l3278 03B9                      l2840 0BBF                      l2832 0BB4  
                    l2904 0BAE                      l2920 0EDE                      l2912 0EBF  
                    l3296 0408                      l3288 03E1                      l2850 0BD9  
                    l2842 0BC2                      l2834 0BBA                      l2930 0EFB  
                    l2922 0EE1                      l2914 0ECA                      l2906 0EA7  
                    l3298 040F                      l2860 0BEA                      l2852 0BDC  
                    l2844 0BC3                      l2836 0BBD                      l2932 0F0D  
                    l2924 0EEA                      l2940 0F2B                      l2916 0ECE  
                    l2908 0EAA                      l2870 0BFC                      l2862 0BEE  
                    l2854 0BDE                      l2846 0BCB                      l2838 0BBE  
                    l2942 0F30                      l2934 0F1B                      l2926 0EEE  
                    l2918 0ED6                      l2950 0CD6                      l2872 0BFE  
                    l2864 0BF3                      l2856 0BE1                      l2848 0BD8  
                    l2880 0B75                      l3488 0A4D                      l2944 0F3B  
                    l2936 0F1C                      l2928 0EF2                      l2960 0CEA  
                    l2952 0CDA                      l2874 0C08                      l2866 0BF8  
                    l2858 0BE2                      l2890 0B93                      l2882 0B7A  
                    l2938 0F25                      l2970 0D00                      l2962 0CEE  
                    l2954 0CDF                      l2868 0BF9                      l2892 0B96  
                    l2884 0B85                      l2876 0B64                      l2980 0D20  
                    l2972 0D04                      l2964 0CF0                      l2956 0CE1  
                    l2948 0CD3                      l2894 0B98                      l2886 0B8D  
                    l2878 0B70                      l2982 0D27                      l2974 0D08  
                    l2966 0CF6                      l2958 0CE5                      l2896 0B9B  
                    l2888 0B91                      l2976 0D19                      l2968 0CF9  
                    l2984 0D2D                      l2992 0C0F                      l2898 0BA7  
                    l2986 0D32                      l2978 0D1F                      l2994 0C12  
                    l2988 0D37                      l2996 0C16                      l2998 0C1B  
                    _ADON 00F8                      _CHS0 00FB                      _CHS1 00FC  
                    _CHS2 00FD                      STR_1 0811                      STR_2 081E  
                    STR_3 0806                      STR_4 0816                      STR_5 081A  
                    _BRGH 04C2                      _CREN 00C4                      u3110 0C05  
                    u3111 0C04                      u3200 0F0D                      u3105 0BCE  
                    u3201 0F0C                      u3130 0B7A                      u3131 0B79  
                    u3220 0F2B                      u3140 0EAE                      u3300 0D19  
                    u3125 0B67                      u3221 0F2A                      u3205 0F09  
                    u3141 0EAD                      u3301 0D18                      u3230 0F30  
                    u3150 0EBF                      u3231 0F2F                      u3215 0F1D  
                    u3151 0EBE                      u3160 0EDE                      u3320 0D2D  
                    u3240 0CDA                      u3161 0EDD                      u3321 0D2C  
                    u3305 0D15                      u3241 0CD9                      u3330 0D32  
                    u3250 0CE5                      u3410 0C5B                      u3331 0D31  
                    u3315 0D21                      u3251 0CE4                      u3411 0C5A  
                    u3180 0EF2                      u3260 0CF6                      u3420 0C60  
                    u3340 0C16                      u3500 0AA7                      u3181 0EF1  
                    u3261 0CF5                      u3421 0C5F                      u3405 0C4F  
                    u3341 0C15                      u3501 0AA6                      u3350 0C21  
                    u3430 07BD                      u3175 0EE3                      u3351 0C20  
                    u3431 07BC                      u3600 0746                      u3280 0D08  
                    u3360 0C2C                      u3520 0AB9                      u3281 0D07  
                    u3361 0C2B                      u3521 0AB8                      u3610 075F  
                    u3450 07CF                      u3530 0AC3                      u3195 0EF4  
                    u3275 0CFA                      u3451 07CE                      u3531 0AC2  
                    u3515 0AAB                      u3380 0C3E                      u3700 0E9C  
                    u3621 0771                      u3605 0741                      u3381 0C3D  
                    u3445 07C1                      u3701 0E9B                      u3630 079B  
                    u3622 0772                      u3390 0C48                      u3470 07E0  
                    u3550 0AD6                      u3710 0EA6                      u3631 079A  
                    u3623 0777                      u3615 075A                      u3295 0D09  
                    u3391 0C47                      u3375 0C30                      u3471 07DF  
                    u3551 0AD5                      u3535 0ABF                      u3711 0EA5  
                    u3640 0CD2                      u3624 0778                      u3560 06E4  
                    u3800 0E14                      u3720 0DB6                      u3641 0CD1  
                    u3625 077D                      u3465 07D0                      u3545 0ACA  
                    u3801 0E13                      u3721 0DB5                      u3650 0A38  
                    u3626 077E                      u3570 06FD                      u3490 07F4  
                    u3810 0E19                      u3730 0DCD                      u3651 0A37  
                    u3395 0C44                      u3491 07F3                      u3475 07DC  
                    u3811 0E18                      _PEIE 005E                      u3660 0D4C  
                    u3740 0DE3                      u3820 040F                      u3661 0D4B  
                    u3581 070F                      u3565 06DF                      u3485 07E8  
                    u3741 0DE2                      u3821 040E                      u3670 0D5F  
                    u3590 0738                      u3582 0710                      u3750 0DEA  
                    u3830 0416                      u3671 0D5E                      u3591 0737  
                    u3583 0715                      u3575 06F8                      u3751 0DE9  
                    u3735 0DC8                      u3831 0415                      u3680 0D66  
                    u3584 0716                      u3681 0D65                      u3585 071B  
                    u3690 0DA8                      u3586 071C                      u3770 0DFC  
                    u3691 0DA7                      u3771 0DFB                      _RCIE 0465  
                    u3780 0E03                      _RCIF 0065                      u3781 0E02  
                    u3765 0DEC                      u3927 03F8                      u3937 0C73  
                    u3795 0E06                      _OERR 00C1                      i1l99 0A66  
                    _TMR1 000E                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4                      _dong 0042  
                    _main 03AD        __size_of_LCDGotoXY 0035                      btemp 007E  
        __end_of_ADC_Init 09E0          __end_of_ADC_Read 0A9F                      start 0012  
                   ??_ISR 0035   __end_of_UART_Write_data 0EA7              display@F1096 0046  
                   ISR@ch 003D             ___fltol@sign1 00A8           __end_of___aldiv 0F44  
                   ?_main 0070           __end_of___awdiv 0D3C           __end_of___awmod 0C6A  
         __end_of___flmul 03AD           __end_of___fltol 0E25              LCDInit@style 00AC  
         ___awdiv@divisor 00A0           __end_of___lwdiv 07F9                     i1l100 0A82  
                   i1l101 0A6C                     i1l102 0A8D                     i1l105 0A9E  
                   i1l182 06C7           __end_of___lwmod 0ADB                     i1l800 0FFF  
                   i1l811 0FC9                     i1l812 0FD5                     i1l821 0B60  
                   i1l760 0318                     i1l754 03AC                     i1l773 0A1C  
                   i1l766 03A0                     i1l775 0A2E                     i1l798 0F68  
         ___awdiv@counter 00A4                     _RCREG 001A                     _SPBRG 0099  
                   _PORTD 0008                     _TRISD 0088                     _TXREG 0019  
      __size_of_UART_Init 00DF                     _count 004B                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_strncmp 0B61  
           main@adc_value 00C9           __initialization 0015              __end_of_main 059A  
                  ??_main 00C1              ?_TIMER1_Init 0070         __end_of_LCDGotoXY 0A64  
           LCDByte@isdata 00A4                 ??_LCDByte 00A5                 ??_LCDInit 00AA  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E          ___awdiv@dividend 00A2           ADC_Read@Channel 0076  
                  i1l2120 0A0B                    i1l2200 0B50                    i1l2122 0A12  
                  i1l2202 0B5E                    i1l2140 0A8A                    i1l2124 0A16  
                  i1l2142 0A91                    i1l2134 0A65                    i1l2126 0A25  
                  i1l2118 0A09                    i1l2144 0A97                    i1l2136 0A72  
                  i1l2128 0A2A                    i1l2400 00B0                    i1l2138 0A85  
                  i1l2410 00F3                    i1l2420 017C                    i1l2412 010F  
                  i1l2404 00B9                    i1l2430 01EF                    i1l2422 018C  
                  i1l2414 013B                    i1l2406 00C9                    i1l2510 0F70  
                  i1l2502 0F47                    i1l2190 0B1D                    i1l2440 029C  
                  i1l2432 020C                    i1l2424 01A9                    i1l2416 0157  
                  i1l2408 00D6                    i1l2360 004C                    i1l2520 0F8B  
                  i1l2504 0F4C                    i1l2192 0B25                    i1l2600 0692  
                  i1l2450 02E8                    i1l2442 02C4                    i1l2434 0239  
                  i1l2426 01B9                    i1l2418 0173                    i1l2370 0063  
                  i1l2362 0053                    i1l2530 0FB4                    i1l2522 0F92  
                  i1l2514 0F79                    i1l2506 0F50                    i1l2194 0B35  
                  i1l2610 06C4                    i1l2602 0698                    i1l2460 02FD  
                  i1l2452 02E9                    i1l2444 02CD                    i1l2436 0249  
                  i1l2428 01D6                    i1l2380 007F                    i1l2372 0068  
                  i1l2364 0059                    i1l2540 0FED                    i1l2532 0FBF  
                  i1l2524 0F96                    i1l2516 0F7E                    i1l2508 0F60  
                  i1l2188 0B1C                    i1l2604 0699                    i1l2470 0322  
                  i1l2462 0301                    i1l2454 02F2                    i1l2446 02DB  
                  i1l2438 0276                    i1l2390 0094                    i1l2382 0085  
                  i1l2374 0070                    i1l2366 005D                    i1l2542 0FF2  
                  i1l2534 0FC3                    i1l2526 0FA4                    i1l2518 0F82  
                  i1l2198 0B48                    i1l2606 06AD                    i1l2550 059A  
                  i1l2480 0360                    i1l2472 0330                    i1l2464 0315  
                  i1l2448 02E4                    i1l2456 02F8                    i1l2392 009C  
                  i1l2384 0089                    i1l2376 0072                    i1l2368 005E  
                  i1l2544 0FF6                    i1l2536 0FCD                    i1l2528 0FAD  
                  i1l2608 06B0                    i1l2560 05B8                    i1l2552 05A0  
                  i1l2490 038C                    i1l2482 036B                    i1l2474 0334  
                  i1l2458 02FC                    i1l2394 009E                    i1l2386 008A  
                  i1l2378 007A                    i1l2546 0FF7                    i1l2538 0FD7  
                  i1l2570 0617                    i1l2562 05C6                    i1l2554 05A6  
                  i1l2492 0394                    i1l2484 037A                    i1l2476 034D  
                  i1l2468 031D                    i1l2396 00A6                    i1l2388 008F  
                  i1l2580 0666                    i1l2572 063D                    i1l2564 05CD  
                  i1l2556 05AB                    i1l2494 0398                    i1l2486 0384  
                  i1l2478 0353                    i1l2398 00AB                    i1l2590 0681  
                  i1l2582 066C                    i1l2566 05F3                    i1l2558 05B1  
                  i1l2496 0399                    i1l2488 0386                    i1l2592 0687  
                  i1l2584 0670                    i1l2576 065D                    i1l2568 0612  
                  i1l3490 0A7A                    i1l2498 03A4                    i1l2594 0689  
                  i1l2586 0675                    i1l2578 0660                    _T1SYNC 0082  
                  i1l2596 068F                    i1l2588 067D                    i1l2598 0690  
                  u204_20 0A16                    u204_21 0A15                    u205_25 0A1D  
                  u206_20 0A2A                    u206_21 0A29                    u207_20 0A91  
                  u207_21 0A90                    u240_20 0089                    u216_20 0B25  
                  u240_21 0088                    u216_21 0B24                    u241_20 008F  
                  u217_20 0B35                    u241_21 008E                    u217_21 0B34  
                  u242_20 0094                    u218_20 0B5E                    u250_21 019B  
                  u242_21 0093                    u218_21 0B5D                    u250_22 01A2  
                  u250_23 01A9                    u243_20 00AB                    u251_21 01C8  
                  u243_21 00AA                    u251_22 01CF                    u251_23 01D6  
                  u244_20 00B0                    u244_21 00AF                    u260_25 02C6  
                  u252_25 01D8                    u237_20 005D                    u253_21 01FE  
                  u245_21 0101                    u237_21 005C                    u253_22 0205  
                  u245_22 0108                    u253_23 020C                    u245_23 010F  
                  u261_25 02DD                    u270_20 0343                    u262_20 02E8  
                  u238_20 0063                    u262_21 02E7                    u254_21 022B  
                  u246_21 011D                    u238_21 0062                    u254_22 0232  
                  u246_22 0124                    u254_23 0239                    u246_23 012B  
                  u270_25 033E                    u271_20 0360                    u239_20 0068  
                  u271_21 035F                    u255_21 0258                    u247_21 0149  
                  u239_21 0067                    u255_22 025F                    u247_22 0150  
                  u255_23 0266                    u247_23 0157                    u271_25 035C  
                  u263_25 02EB                    u272_20 037A                    u264_20 02FC  
                  u256_20 0282                    u280_20 0FB3                    u272_21 0379  
                  u264_21 02FB                    u248_21 0165                    u280_21 0FB2  
                  u248_22 016C                    u248_23 0173                    u272_25 0376  
                  u256_25 027D                    u273_20 0398                    u265_20 0301  
                  u273_21 0397                    u265_21 0300                    u257_21 028E  
                  u257_22 0295                    u257_23 029C                    u249_25 0175  
                  u281_25 0FB8                    u266_20 0315                    u258_20 02AA  
                  u282_20 0FC3                    u274_20 0F4C                    u290_20 05B8  
                  u266_21 0314                    u282_21 0FC2                    u274_21 0F4B  
                  u290_21 05B7                    u258_25 02A5                    u267_20 031C  
                  u283_20 0FC9                    u275_20 0F50                    u291_20 05CD  
                  u267_21 031B                    u259_21 02B6                    u283_21 0FC8  
                  u275_21 0F4F                    u291_21 05CC                    u259_22 02BD  
                  u259_23 02C4                    u268_20 0322                    u284_20 0FCD  
                  u276_20 0F70                    u292_20 0666                    u268_21 0321  
                  u284_21 0FCC                    u276_21 0F6F                    u292_21 0665  
                  u269_20 0334                    u285_20 0FE2                    u293_20 066C  
                  u269_21 0333                    u293_21 066B                    u285_25 0FDD  
                  u277_25 0F83                    u286_20 0FF2                    u278_20 0F91  
                  u294_20 0675                    u286_21 0FF1                    u278_21 0F90  
                  u294_21 0674                    u287_20 0FF6                    u295_20 0687  
                  u287_21 0FF5                    u295_21 0686                    u279_25 0FA5  
                  u296_20 068F                    u288_20 05A0                    u296_21 068E  
                  u288_21 059F                    u297_20 0698                    u289_20 05A6  
                  u297_21 0697                    u289_21 05A5                    u298_20 06AD  
                  u298_21 06AC                    u394_27 0A87                    u299_20 06C4  
                  u299_21 06C3                    _TMR1IE 0460                    _TMR1IF 0060  
                  _TMR1CS 0081                    _TMR1ON 0080                    _TRISC6 043E  
                  _TRISC7 043F          __end_of___xxtofl 1000            _LCDWriteString 0D3C  
       __end_of_UART_Init 07B3                    _adc_ok 00DF                 ??___aldiv 00A8  
               ??___awdiv 00A4                 ??___awmod 00A4                 ??___flmul 0079  
               ??___fltol 00A4                    _dienap 003E          ?_UART_Write_data 0070  
               ??___lwdiv 00A9                 ??___lwmod 00A4                    _count1 00DD  
    __size_of_LCDBusyLoop 005B          ___awdiv@quotient 00A6           ___awmod@divisor 00A0  
         ___awmod@counter 00A4        __size_of__Umul8_16 0027                 ?_ADC_Init 0070  
               ?_ADC_Read 0070                    saved_w 007E                 ??_strncmp 0073  
            ___xxtofl@arg 0026              ___xxtofl@exp 0025              ___xxtofl@val 0077  
 __end_of__initialization 0048    __end_of_LCDWriteString 0DA9                ___fltol@f1 00A0  
               LCDByte@hn 00A6                 LCDByte@ln 00A7            __pcstackCOMMON 0070  
            __pidataBANK0 07F9              __pidataBANK2 0ADB                ??_ADC_Init 00A0  
              ??_ADC_Read 0072                __pbssBANK0 003E                __pbssBANK1 00CB  
              __pbssBANK3 0190                _check_sang 004F           ?_LCDWriteString 0070  
       __end_of__Umul8_16 0A2F                __pmaintext 03AD                __pintentry 0004  
                 _T1CKPS0 0084                   _T1CKPS1 0085                   _T1OSCEN 0083  
                 _LCDByte 0B61                   _LCDInit 0C6A                 ?___xxtofl 0077  
                 _GO_DONE 00FA      __size_of_TIMER1_Init 0015                _commbuffer 00CB  
              __stringtab 0800                   ___aldiv 0EA7                   ___cgram 0110  
                 ___awdiv 0CD3                   ___awmod 0C0F                   ___flmul 004C  
                 ___fltol 0DA9                   ___lwdiv 07B3                   ___lwmod 0A9F  
                 __ptext1 0DA9                   __ptext2 0E25                   __ptext3 0A9F  
                 __ptext4 07B3                   __ptext5 0C0F                   __ptext6 0CD3  
                 __ptext7 06D4                   __ptext8 0EA7                   __ptext9 09F3  
            __size_of_ISR 013A                   _count_s 0049                ??___xxtofl 0020  
        ___awmod@dividend 00A2          ___aldiv@dividend 00A4                 _LCDGotoXY 0A2F  
                 clrloop0 09D0                   _strncmp 0B1B      end_of_initialization 0048  
        ___aldiv@quotient 00AB                 _UART_Init 06D4                 _PORTEbits 0009  
       LCDWriteString@msg 00AB             ___xxtofl@sign 0024                 _TRISDbits 0088  
               _TRISEbits 0089                ?_LCDGotoXY 00AA         __size_of_ADC_Init 0009  
       __size_of_ADC_Read 003B               ___flmul@grs 0029                LCDInit@__i 00AD  
              LCDGotoXY@x 00AD                LCDGotoXY@y 00AA             ??_LCDBusyLoop 00A0  
              ?_UART_Init 00AF  __size_of_UART_Write_data 0082       start_initialization 0015  
             __end_of_ISR 06D4          ??_LCDWriteString 00AA                init_fetch0 09E0  
               __Umul8_16 0A08               __pdataBANK0 0058               __pdataBANK2 0110  
     __end_of_LCDBusyLoop 0C0F                  ?_LCDByte 00A4                  ?_LCDInit 0070  
               ___flmul@a 0024                 ___flmul@b 0020                  LCDByte@c 00A8  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
             ??_LCDGotoXY 00AB         __size_of___xxtofl 00BC          ___lwdiv@dividend 00A7  
               _do_dienap 0051                  ?___aldiv 00A0                  ?___awdiv 00A0  
                ?___awmod 00A0                  ?___flmul 0020                  ?___fltol 00A0  
              ?__Umul8_16 0070                  ?___lwdiv 00A5                  ?___lwmod 00A0  
             ??_UART_Init 00B3                 __pstrings 0800             ??_TIMER1_Init 00A0  
               _in_buffer 0052                  _ADC_Init 09D7                  _ADC_Read 0A64  
         LCDBusyLoop@busy 00A1           LCDBusyLoop@temp 00A2          ___lwdiv@quotient 00AA  
                ?_strncmp 0070                UART_Init@x 00BF         ??_UART_Write_data 00AC  
         ___aldiv@divisor 00A0         interrupt_function 0004           ___aldiv@counter 00A9  
               clear_ram0 09CF                 main@F1087 00DA               _LCDBusyLoop 0BB4  
        LCDWriteString@cc 00AA         UART_Init@baudrate 00AF               __stringbase 0805  
               main@digit 00C6          __size_of_LCDByte 0053          __size_of_LCDInit 0069  
     __end_of_TIMER1_Init 0A08      UART_Write_data@Value 00AE             ADC_Read@value 0074  
             ??__Umul8_16 0072          __size_of___aldiv 009D          __size_of___awdiv 0069  
        __size_of___awmod 005B          __size_of___flmul 0361          __size_of___fltol 007C  
       LCDBusyLoop@status 00A3          __size_of___lwdiv 0046          __size_of___lwmod 003C  
      __end_of__stringtab 0806           LCDWriteInt@F912 00D5                  ___xxtofl 0F44  
                _main$911 00C4           ___lwdiv@divisor 00A5           ___lwdiv@counter 00A9  
                __ptext10 0D3C                  __ptext11 0C6A                  __ptext20 0A08  
                __ptext12 0A2F                  __ptext21 0A64                  __ptext13 0B61  
                __ptext14 0BB4                  __ptext15 09D7                  __ptext16 059A  
                __ptext17 0B1B                  __ptext18 0F44                  __ptext19 004C  
                _in_count 0050          __size_of_strncmp 0046             __size_of_main 01ED  
              strncmp@len 0071               _TIMER1_Init 09F3                  init_ram0 09E4  
                intlevel1 0000          ___lwmod@dividend 00A2                 strncmp@s1 0075  
               strncmp@s2 0070                 stringcode 0800    __Umul8_16@multiplicand 0070  
         _UART_Write_data 0E25           ___lwmod@divisor 00A0           ___lwmod@counter 00A4  
                stringdir 0800                  stringtab 0800              ___aldiv@sign 00AA  
        UART_Write_data@i 00B1          UART_Write_data@k 00AF      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074   __size_of_LCDWriteString 006D  
