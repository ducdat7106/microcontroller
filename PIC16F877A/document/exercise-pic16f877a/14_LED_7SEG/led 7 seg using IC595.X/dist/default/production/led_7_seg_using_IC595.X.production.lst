

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 25 16:03:58 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  05DD                     __pidataBANK0:
   177                           
   178                           ;initializer for _Number_7Seg
   179  05DD  34C0               	retlw	192
   180  05DE  34F9               	retlw	249
   181  05DF  34A4               	retlw	164
   182  05E0  34B0               	retlw	176
   183  05E1  3499               	retlw	153
   184  05E2  3492               	retlw	146
   185  05E3  3482               	retlw	130
   186  05E4  34F8               	retlw	248
   187  05E5  3480               	retlw	128
   188  05E6  3490               	retlw	144
   189                           
   190                           ;initializer for _Value_Display
   191  05E7  3436               	retlw	54
   192  05E8  3400               	retlw	0
   193  0007                     _PORTCbits	set	7
   194  0006                     _PORTBbits	set	6
   195  0087                     _TRISCbits	set	135
   196  0086                     _TRISBbits	set	134
   197  009F                     _ADCON1	set	159
   198                           
   199                           	psect	cinit
   200  07E4                     start_initialization:	
   201                           ; #config settings
   202                           
   203  07E4                     __initialization:
   204                           
   205                           ; Initialize objects allocated to BANK0
   206  07E4  1383               	bcf	3,7	;select IRP bank0
   207  07E5  302C               	movlw	low (__pdataBANK0+12)
   208  07E6  00FD               	movwf	btemp+-1
   209  07E7  3005               	movlw	high __pidataBANK0
   210  07E8  00FE               	movwf	btemp
   211  07E9  30DD               	movlw	low __pidataBANK0
   212  07EA  00FF               	movwf	btemp+1
   213  07EB  3020               	movlw	low __pdataBANK0
   214  07EC  0084               	movwf	4
   215  07ED  120A  118A  2600  120A  118A  	fcall	init_ram0
   216                           
   217                           ; Clear objects allocated to BANK0
   218  07F2  01AC               	clrf	__pbssBANK0& (0+127)
   219  07F3  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   220  07F4  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   221  07F5  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   222  07F6  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   223  07F7  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   224  07F8  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   225  07F9  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   226  07FA  01B4               	clrf	(__pbssBANK0+8)& (0+127)
   227  07FB  01B5               	clrf	(__pbssBANK0+9)& (0+127)
   228  07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  07FC                     __end_of__initialization:
   232  07FC  0183               	clrf	3
   233  07FD  120A  118A  2DE9   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssBANK0
   236  002C                     __pbssBANK0:
   237  002C                     _donvi:
   238  002C                     	ds	2
   239  002E                     _chuc:
   240  002E                     	ds	2
   241  0030                     _tram:
   242  0030                     	ds	2
   243  0032                     _nghin:
   244  0032                     	ds	2
   245  0034                     _j:
   246  0034                     	ds	2
   247                           
   248                           	psect	dataBANK0
   249  0020                     __pdataBANK0:
   250  0020                     _Number_7Seg:
   251  0020                     	ds	10
   252  002A                     _Value_Display:
   253  002A                     	ds	2
   254                           
   255                           	psect	inittext
   256  05FC                     init_fetch0:	
   257                           ;	Called with low address in FSR and high address in W
   258                           
   259  05FC  087E               	movf	btemp,w
   260  05FD  008A               	movwf	10
   261  05FE  087F               	movf	btemp+1,w
   262  05FF  0082               	movwf	2
   263  0600                     init_ram0:	
   264                           ;Called with:
   265                           ;	high address of idata address in btemp 
   266                           ;	low address of idata address in btemp+1 
   267                           ;	low address of data in FSR
   268                           ;	high address + 1 of data in btemp-1
   269                           
   270  0600  120A  118A  25FC  120A  118A  	fcall	init_fetch0
   271  0605  0080               	movwf	0
   272  0606  0A84               	incf	4,f
   273  0607  0804               	movf	4,w
   274  0608  067D               	xorwf	btemp+-1,w
   275  0609  1903               	btfsc	3,2
   276  060A  3400               	retlw	0
   277  060B  0AFF               	incf	btemp+1,f
   278  060C  1903               	btfsc	3,2
   279  060D  0AFE               	incf	btemp,f
   280  060E  2E00               	goto	init_ram0
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_Config_Init:
   285  0070                     ??_Config_Init:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_Test_Button:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_Scan_7Seg:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_Write_Data:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?___lwmod:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     Write_Data@number:	
   304                           ; 2 bytes @ 0x0
   305                           
   306  0070                     ___lwmod@divisor:	
   307                           ; 2 bytes @ 0x0
   308                           
   309                           
   310                           ; 2 bytes @ 0x0
   311  0070                     	ds	2
   312  0072                     ??_Write_Data:
   313  0072                     ___lwmod@dividend:	
   314                           ; 1 bytes @ 0x2
   315                           
   316                           
   317                           ; 2 bytes @ 0x2
   318  0072                     	ds	2
   319  0074                     ??_Scan_7Seg:
   320  0074                     ??___lwmod:	
   321                           ; 1 bytes @ 0x4
   322                           
   323                           
   324                           ; 1 bytes @ 0x4
   325  0074                     	ds	1
   326  0075                     ___lwmod@counter:
   327                           
   328                           ; 1 bytes @ 0x5
   329  0075                     	ds	1
   330  0076                     ?___lwdiv:
   331  0076                     ___lwdiv@divisor:	
   332                           ; 2 bytes @ 0x6
   333                           
   334                           
   335                           ; 2 bytes @ 0x6
   336  0076                     	ds	2
   337  0078                     ___lwdiv@dividend:
   338                           
   339                           ; 2 bytes @ 0x8
   340  0078                     	ds	2
   341  007A                     ??___lwdiv:
   342                           
   343                           ; 1 bytes @ 0xA
   344  007A                     	ds	1
   345  007B                     ___lwdiv@quotient:
   346                           
   347                           ; 2 bytes @ 0xB
   348  007B                     	ds	2
   349  007D                     ___lwdiv@counter:
   350                           
   351                           ; 1 bytes @ 0xD
   352  007D                     	ds	1
   353  007E                     ??_Test_Button:
   354  007E                     ??_main:	
   355                           ; 1 bytes @ 0xE
   356                           
   357                           
   358                           	psect	maintext
   359  05E9                     __pmaintext:	
   360                           ; 1 bytes @ 0xE
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 52 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0
   383 ;;      Totals:         0       0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels required when called: 2
   386 ;; This function calls:
   387 ;;		_Config_Init
   388 ;;		_Scan_7Seg
   389 ;;		_Test_Button
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _main
   397  05E9                     _main:
   398  05E9                     l920:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   401                           
   402                           
   403                           ;main.c: 54:     Config_Init();
   404  05E9  120A  118A  260F  120A  118A  	fcall	_Config_Init
   405  05EE                     l37:	
   406                           ;main.c: 56:     while(1){
   407                           
   408                           
   409                           ;main.c: 58:         Test_Button();
   410  05EE  120A  118A  2748  120A  118A  	fcall	_Test_Button
   411  05F3                     l922:
   412                           
   413                           ;main.c: 60:         Scan_7Seg();
   414  05F3  120A  118A  26D1  120A  118A  	fcall	_Scan_7Seg
   415  05F8  2DEE               	goto	l37
   416  05F9  120A  118A  2800   	ljmp	start
   417  05FC                     __end_of_main:
   418                           
   419                           	psect	text1
   420  0748                     __ptext1:	
   421 ;; *************** function _Test_Button *****************
   422 ;; Defined at:
   423 ;;		line 109 in file "main.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0
   440 ;;      Totals:         0       0       0       0       0
   441 ;;Total ram usage:        0 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; Hardware stack levels required when called: 1
   444 ;; This function calls:
   445 ;;		___lwdiv
   446 ;;		___lwmod
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _Test_Button
   454  0748                     _Test_Button:
   455  0748                     l866:	
   456                           ;incstack = 0
   457                           ; Regs used in _Test_Button: [wreg+status,2+status,0+pclath+cstack]
   458                           
   459                           
   460                           ;main.c: 111:     if(PORTBbits.RB4 == 0) {
   461  0748  1283               	bcf	3,5	;RP0=0, select bank0
   462  0749  1303               	bcf	3,6	;RP1=0, select bank0
   463  074A  1A06               	btfsc	6,4	;volatile
   464  074B  2F4D               	goto	u371
   465  074C  2F4E               	goto	u370
   466  074D                     u371:
   467  074D  2F65               	goto	l874
   468  074E                     u370:
   469  074E                     l54:
   470  074E  1E06               	btfss	6,4	;volatile
   471  074F  2F51               	goto	u381
   472  0750  2F52               	goto	u380
   473  0751                     u381:
   474  0751  2F4E               	goto	l54
   475  0752                     u380:
   476  0752                     l870:
   477                           
   478                           ;main.c: 113:         Value_Display++;
   479  0752  3001               	movlw	1
   480  0753  07AA               	addwf	_Value_Display,f
   481  0754  1803               	skipnc
   482  0755  0AAB               	incf	_Value_Display+1,f
   483  0756  3000               	movlw	0
   484  0757  07AB               	addwf	_Value_Display+1,f
   485                           
   486                           ;main.c: 114:         if(Value_Display > 9999)
   487  0758  3027               	movlw	39
   488  0759  022B               	subwf	_Value_Display+1,w
   489  075A  3010               	movlw	16
   490  075B  1903               	skipnz
   491  075C  022A               	subwf	_Value_Display,w
   492  075D  1C03               	skipc
   493  075E  2F60               	goto	u391
   494  075F  2F61               	goto	u390
   495  0760                     u391:
   496  0760  2F65               	goto	l874
   497  0761                     u390:
   498  0761                     l872:
   499                           
   500                           ;main.c: 115:             Value_Display = 9999;
   501  0761  300F               	movlw	15
   502  0762  00AA               	movwf	_Value_Display
   503  0763  3027               	movlw	39
   504  0764  00AB               	movwf	_Value_Display+1
   505  0765                     l874:
   506                           
   507                           ;main.c: 118:     if(PORTBbits.RB5 == 0) {
   508  0765  1A86               	btfsc	6,5	;volatile
   509  0766  2F68               	goto	u401
   510  0767  2F69               	goto	u400
   511  0768                     u401:
   512  0768  2F7D               	goto	l884
   513  0769                     u400:
   514  0769                     l59:
   515  0769  1E86               	btfss	6,5	;volatile
   516  076A  2F6C               	goto	u411
   517  076B  2F6D               	goto	u410
   518  076C                     u411:
   519  076C  2F69               	goto	l59
   520  076D                     u410:
   521  076D                     l878:
   522                           
   523                           ;main.c: 120:         Value_Display--;
   524  076D  3001               	movlw	1
   525  076E  02AA               	subwf	_Value_Display,f
   526  076F  3000               	movlw	0
   527  0770  1C03               	skipc
   528  0771  03AB               	decf	_Value_Display+1,f
   529  0772  02AB               	subwf	_Value_Display+1,f
   530  0773                     l880:
   531                           
   532                           ;main.c: 121:         if(Value_Display < 1)
   533  0773  082A               	movf	_Value_Display,w
   534  0774  042B               	iorwf	_Value_Display+1,w
   535  0775  1D03               	btfss	3,2
   536  0776  2F78               	goto	u421
   537  0777  2F79               	goto	u420
   538  0778                     u421:
   539  0778  2F7D               	goto	l884
   540  0779                     u420:
   541  0779                     l882:
   542                           
   543                           ;main.c: 122:             Value_Display = 1;
   544  0779  3001               	movlw	1
   545  077A  00AA               	movwf	_Value_Display
   546  077B  3000               	movlw	0
   547  077C  00AB               	movwf	_Value_Display+1
   548  077D                     l884:
   549                           
   550                           ;main.c: 125:     nghin = Value_Display/1000;
   551  077D  30E8               	movlw	232
   552  077E  00F6               	movwf	___lwdiv@divisor
   553  077F  3003               	movlw	3
   554  0780  00F7               	movwf	___lwdiv@divisor+1
   555  0781  082B               	movf	_Value_Display+1,w
   556  0782  00F9               	movwf	___lwdiv@dividend+1
   557  0783  082A               	movf	_Value_Display,w
   558  0784  00F8               	movwf	___lwdiv@dividend
   559  0785  120A  118A  268D  120A  118A  	fcall	___lwdiv
   560  078A  0877               	movf	?___lwdiv+1,w
   561  078B  1283               	bcf	3,5	;RP0=0, select bank0
   562  078C  1303               	bcf	3,6	;RP1=0, select bank0
   563  078D  00B3               	movwf	_nghin+1
   564  078E  0876               	movf	?___lwdiv,w
   565  078F  00B2               	movwf	_nghin
   566  0790                     l886:
   567                           
   568                           ;main.c: 126:     tram = (Value_Display %1000)/100;
   569  0790  3064               	movlw	100
   570  0791  00F6               	movwf	___lwdiv@divisor
   571  0792  3000               	movlw	0
   572  0793  00F7               	movwf	___lwdiv@divisor+1
   573  0794  082B               	movf	_Value_Display+1,w
   574  0795  00F3               	movwf	___lwmod@dividend+1
   575  0796  082A               	movf	_Value_Display,w
   576  0797  00F2               	movwf	___lwmod@dividend
   577  0798  30E8               	movlw	232
   578  0799  00F0               	movwf	___lwmod@divisor
   579  079A  3003               	movlw	3
   580  079B  00F1               	movwf	___lwmod@divisor+1
   581  079C  120A  118A  2653  120A  118A  	fcall	___lwmod
   582  07A1  0871               	movf	?___lwmod+1,w
   583  07A2  00F9               	movwf	___lwdiv@dividend+1
   584  07A3  0870               	movf	?___lwmod,w
   585  07A4  00F8               	movwf	___lwdiv@dividend
   586  07A5  120A  118A  268D  120A  118A  	fcall	___lwdiv
   587  07AA  0877               	movf	?___lwdiv+1,w
   588  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   589  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   590  07AD  00B1               	movwf	_tram+1
   591  07AE  0876               	movf	?___lwdiv,w
   592  07AF  00B0               	movwf	_tram
   593  07B0                     l888:
   594                           
   595                           ;main.c: 127:     chuc = (Value_Display%100)/10;
   596  07B0  300A               	movlw	10
   597  07B1  00F6               	movwf	___lwdiv@divisor
   598  07B2  3000               	movlw	0
   599  07B3  00F7               	movwf	___lwdiv@divisor+1
   600  07B4  082B               	movf	_Value_Display+1,w
   601  07B5  00F3               	movwf	___lwmod@dividend+1
   602  07B6  082A               	movf	_Value_Display,w
   603  07B7  00F2               	movwf	___lwmod@dividend
   604  07B8  3064               	movlw	100
   605  07B9  00F0               	movwf	___lwmod@divisor
   606  07BA  3000               	movlw	0
   607  07BB  00F1               	movwf	___lwmod@divisor+1
   608  07BC  120A  118A  2653  120A  118A  	fcall	___lwmod
   609  07C1  0871               	movf	?___lwmod+1,w
   610  07C2  00F9               	movwf	___lwdiv@dividend+1
   611  07C3  0870               	movf	?___lwmod,w
   612  07C4  00F8               	movwf	___lwdiv@dividend
   613  07C5  120A  118A  268D  120A  118A  	fcall	___lwdiv
   614  07CA  0877               	movf	?___lwdiv+1,w
   615  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   616  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   617  07CD  00AF               	movwf	_chuc+1
   618  07CE  0876               	movf	?___lwdiv,w
   619  07CF  00AE               	movwf	_chuc
   620  07D0                     l890:
   621                           
   622                           ;main.c: 128:     donvi = Value_Display%10;
   623  07D0  300A               	movlw	10
   624  07D1  00F0               	movwf	___lwmod@divisor
   625  07D2  3000               	movlw	0
   626  07D3  00F1               	movwf	___lwmod@divisor+1
   627  07D4  082B               	movf	_Value_Display+1,w
   628  07D5  00F3               	movwf	___lwmod@dividend+1
   629  07D6  082A               	movf	_Value_Display,w
   630  07D7  00F2               	movwf	___lwmod@dividend
   631  07D8  120A  118A  2653  120A  118A  	fcall	___lwmod
   632  07DD  0871               	movf	?___lwmod+1,w
   633  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   634  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   635  07E0  00AD               	movwf	_donvi+1
   636  07E1  0870               	movf	?___lwmod,w
   637  07E2  00AC               	movwf	_donvi
   638  07E3                     l63:
   639  07E3  0008               	return
   640  07E4                     __end_of_Test_Button:
   641                           
   642                           	psect	text2
   643  0653                     __ptext2:	
   644 ;; *************** function ___lwmod *****************
   645 ;; Defined at:
   646 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  divisor         2    0[COMMON] unsigned int 
   649 ;;  dividend        2    2[COMMON] unsigned int 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  counter         1    5[COMMON] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  2    0[COMMON] unsigned int 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         4       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0
   664 ;;      Totals:         6       0       0       0       0
   665 ;;Total ram usage:        6 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_Test_Button
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function ___lwmod
   676  0653                     ___lwmod:
   677  0653                     l844:	
   678                           ;incstack = 0
   679                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   680                           
   681  0653  0870               	movf	___lwmod@divisor,w
   682  0654  0471               	iorwf	___lwmod@divisor+1,w
   683  0655  1903               	btfsc	3,2
   684  0656  2E58               	goto	u311
   685  0657  2E59               	goto	u310
   686  0658                     u311:
   687  0658  2E88               	goto	l862
   688  0659                     u310:
   689  0659                     l846:
   690  0659  01F5               	clrf	___lwmod@counter
   691  065A  0AF5               	incf	___lwmod@counter,f
   692  065B  2E67               	goto	l852
   693  065C                     l848:
   694  065C  3001               	movlw	1
   695  065D                     u325:
   696  065D  1003               	clrc
   697  065E  0DF0               	rlf	___lwmod@divisor,f
   698  065F  0DF1               	rlf	___lwmod@divisor+1,f
   699  0660  3EFF               	addlw	-1
   700  0661  1D03               	skipz
   701  0662  2E5D               	goto	u325
   702  0663                     l850:
   703  0663  3001               	movlw	1
   704  0664  00F4               	movwf	??___lwmod
   705  0665  0874               	movf	??___lwmod,w
   706  0666  07F5               	addwf	___lwmod@counter,f
   707  0667                     l852:
   708  0667  1FF1               	btfss	___lwmod@divisor+1,7
   709  0668  2E6A               	goto	u331
   710  0669  2E6B               	goto	u330
   711  066A                     u331:
   712  066A  2E5C               	goto	l848
   713  066B                     u330:
   714  066B                     l854:
   715  066B  0871               	movf	___lwmod@divisor+1,w
   716  066C  0273               	subwf	___lwmod@dividend+1,w
   717  066D  1D03               	skipz
   718  066E  2E71               	goto	u345
   719  066F  0870               	movf	___lwmod@divisor,w
   720  0670  0272               	subwf	___lwmod@dividend,w
   721  0671                     u345:
   722  0671  1C03               	skipc
   723  0672  2E74               	goto	u341
   724  0673  2E75               	goto	u340
   725  0674                     u341:
   726  0674  2E7B               	goto	l858
   727  0675                     u340:
   728  0675                     l856:
   729  0675  0870               	movf	___lwmod@divisor,w
   730  0676  02F2               	subwf	___lwmod@dividend,f
   731  0677  0871               	movf	___lwmod@divisor+1,w
   732  0678  1C03               	skipc
   733  0679  03F3               	decf	___lwmod@dividend+1,f
   734  067A  02F3               	subwf	___lwmod@dividend+1,f
   735  067B                     l858:
   736  067B  3001               	movlw	1
   737  067C                     u355:
   738  067C  1003               	clrc
   739  067D  0CF1               	rrf	___lwmod@divisor+1,f
   740  067E  0CF0               	rrf	___lwmod@divisor,f
   741  067F  3EFF               	addlw	-1
   742  0680  1D03               	skipz
   743  0681  2E7C               	goto	u355
   744  0682                     l860:
   745  0682  3001               	movlw	1
   746  0683  02F5               	subwf	___lwmod@counter,f
   747  0684  1D03               	btfss	3,2
   748  0685  2E87               	goto	u361
   749  0686  2E88               	goto	u360
   750  0687                     u361:
   751  0687  2E6B               	goto	l854
   752  0688                     u360:
   753  0688                     l862:
   754  0688  0873               	movf	___lwmod@dividend+1,w
   755  0689  00F1               	movwf	?___lwmod+1
   756  068A  0872               	movf	___lwmod@dividend,w
   757  068B  00F0               	movwf	?___lwmod
   758  068C                     l434:
   759  068C  0008               	return
   760  068D                     __end_of___lwmod:
   761                           
   762                           	psect	text3
   763  068D                     __ptext3:	
   764 ;; *************** function ___lwdiv *****************
   765 ;; Defined at:
   766 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  divisor         2    6[COMMON] unsigned int 
   769 ;;  dividend        2    8[COMMON] unsigned int 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  quotient        2   11[COMMON] unsigned int 
   772 ;;  counter         1   13[COMMON] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  2    6[COMMON] unsigned int 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         4       0       0       0       0
   783 ;;      Locals:         3       0       0       0       0
   784 ;;      Temps:          1       0       0       0       0
   785 ;;      Totals:         8       0       0       0       0
   786 ;;Total ram usage:        8 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_Test_Button
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function ___lwdiv
   797  068D                     ___lwdiv:
   798  068D                     l818:	
   799                           ;incstack = 0
   800                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   801                           
   802  068D  01FB               	clrf	___lwdiv@quotient
   803  068E  01FC               	clrf	___lwdiv@quotient+1
   804  068F                     l820:
   805  068F  0876               	movf	___lwdiv@divisor,w
   806  0690  0477               	iorwf	___lwdiv@divisor+1,w
   807  0691  1903               	btfsc	3,2
   808  0692  2E94               	goto	u241
   809  0693  2E95               	goto	u240
   810  0694                     u241:
   811  0694  2ECC               	goto	l840
   812  0695                     u240:
   813  0695                     l822:
   814  0695  01FD               	clrf	___lwdiv@counter
   815  0696  0AFD               	incf	___lwdiv@counter,f
   816  0697  2EA3               	goto	l828
   817  0698                     l824:
   818  0698  3001               	movlw	1
   819  0699                     u255:
   820  0699  1003               	clrc
   821  069A  0DF6               	rlf	___lwdiv@divisor,f
   822  069B  0DF7               	rlf	___lwdiv@divisor+1,f
   823  069C  3EFF               	addlw	-1
   824  069D  1D03               	skipz
   825  069E  2E99               	goto	u255
   826  069F                     l826:
   827  069F  3001               	movlw	1
   828  06A0  00FA               	movwf	??___lwdiv
   829  06A1  087A               	movf	??___lwdiv,w
   830  06A2  07FD               	addwf	___lwdiv@counter,f
   831  06A3                     l828:
   832  06A3  1FF7               	btfss	___lwdiv@divisor+1,7
   833  06A4  2EA6               	goto	u261
   834  06A5  2EA7               	goto	u260
   835  06A6                     u261:
   836  06A6  2E98               	goto	l824
   837  06A7                     u260:
   838  06A7                     l830:
   839  06A7  3001               	movlw	1
   840  06A8                     u275:
   841  06A8  1003               	clrc
   842  06A9  0DFB               	rlf	___lwdiv@quotient,f
   843  06AA  0DFC               	rlf	___lwdiv@quotient+1,f
   844  06AB  3EFF               	addlw	-1
   845  06AC  1D03               	skipz
   846  06AD  2EA8               	goto	u275
   847  06AE  0877               	movf	___lwdiv@divisor+1,w
   848  06AF  0279               	subwf	___lwdiv@dividend+1,w
   849  06B0  1D03               	skipz
   850  06B1  2EB4               	goto	u285
   851  06B2  0876               	movf	___lwdiv@divisor,w
   852  06B3  0278               	subwf	___lwdiv@dividend,w
   853  06B4                     u285:
   854  06B4  1C03               	skipc
   855  06B5  2EB7               	goto	u281
   856  06B6  2EB8               	goto	u280
   857  06B7                     u281:
   858  06B7  2EBF               	goto	l836
   859  06B8                     u280:
   860  06B8                     l832:
   861  06B8  0876               	movf	___lwdiv@divisor,w
   862  06B9  02F8               	subwf	___lwdiv@dividend,f
   863  06BA  0877               	movf	___lwdiv@divisor+1,w
   864  06BB  1C03               	skipc
   865  06BC  03F9               	decf	___lwdiv@dividend+1,f
   866  06BD  02F9               	subwf	___lwdiv@dividend+1,f
   867  06BE                     l834:
   868  06BE  147B               	bsf	___lwdiv@quotient,0
   869  06BF                     l836:
   870  06BF  3001               	movlw	1
   871  06C0                     u295:
   872  06C0  1003               	clrc
   873  06C1  0CF7               	rrf	___lwdiv@divisor+1,f
   874  06C2  0CF6               	rrf	___lwdiv@divisor,f
   875  06C3  3EFF               	addlw	-1
   876  06C4  1D03               	skipz
   877  06C5  2EC0               	goto	u295
   878  06C6                     l838:
   879  06C6  3001               	movlw	1
   880  06C7  02FD               	subwf	___lwdiv@counter,f
   881  06C8  1D03               	btfss	3,2
   882  06C9  2ECB               	goto	u301
   883  06CA  2ECC               	goto	u300
   884  06CB                     u301:
   885  06CB  2EA7               	goto	l830
   886  06CC                     u300:
   887  06CC                     l840:
   888  06CC  087C               	movf	___lwdiv@quotient+1,w
   889  06CD  00F7               	movwf	?___lwdiv+1
   890  06CE  087B               	movf	___lwdiv@quotient,w
   891  06CF  00F6               	movwf	?___lwdiv
   892  06D0                     l424:
   893  06D0  0008               	return
   894  06D1                     __end_of___lwdiv:
   895                           
   896                           	psect	text4
   897  06D1                     __ptext4:	
   898 ;; *************** function _Scan_7Seg *****************
   899 ;; Defined at:
   900 ;;		line 130 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0
   916 ;;      Temps:          2       0       0       0       0
   917 ;;      Totals:         2       0       0       0       0
   918 ;;Total ram usage:        2 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 1
   921 ;; This function calls:
   922 ;;		_Write_Data
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _Scan_7Seg
   930  06D1                     _Scan_7Seg:
   931  06D1                     l892:	
   932                           ;incstack = 0
   933                           ; Regs used in _Scan_7Seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   934                           
   935                           
   936                           ;main.c: 132:     PORTCbits.RC4=1;
   937  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   938  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   939  06D3  1607               	bsf	7,4	;volatile
   940  06D4                     l894:
   941                           
   942                           ;main.c: 133:     Write_Data( Number_7Seg[nghin] );
   943  06D4  0832               	movf	_nghin,w
   944  06D5  3E20               	addlw	(low (_Number_7Seg| 0))& (0+255)
   945  06D6  0084               	movwf	4
   946  06D7  1383               	bcf	3,7	;select IRP bank0
   947  06D8  0800               	movf	0,w
   948  06D9  00F4               	movwf	??_Scan_7Seg
   949  06DA  01F5               	clrf	??_Scan_7Seg+1
   950  06DB  0874               	movf	??_Scan_7Seg,w
   951  06DC  00F0               	movwf	Write_Data@number
   952  06DD  0875               	movf	??_Scan_7Seg+1,w
   953  06DE  00F1               	movwf	Write_Data@number+1
   954  06DF  120A  118A  2628  120A  118A  	fcall	_Write_Data
   955  06E4                     l896:
   956                           
   957                           ;main.c: 134:     _delay((unsigned long)((1)*(16000000/4000.0)));
   958  06E4  3006               	movlw	6
   959  06E5  00F5               	movwf	??_Scan_7Seg+1
   960  06E6  3030               	movlw	48
   961  06E7  00F4               	movwf	??_Scan_7Seg
   962  06E8                     u437:
   963  06E8  0BF4               	decfsz	??_Scan_7Seg,f
   964  06E9  2EE8               	goto	u437
   965  06EA  0BF5               	decfsz	??_Scan_7Seg+1,f
   966  06EB  2EE8               	goto	u437
   967  06EC  0000               	nop
   968  06ED                     l898:
   969                           
   970                           ;main.c: 135:     PORTCbits.RC4=0;
   971  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   972  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   973  06EF  1207               	bcf	7,4	;volatile
   974  06F0                     l900:
   975                           
   976                           ;main.c: 138:     PORTCbits.RC5=1;
   977  06F0  1687               	bsf	7,5	;volatile
   978  06F1                     l902:
   979                           
   980                           ;main.c: 139:     Write_Data( Number_7Seg[tram] );
   981  06F1  0830               	movf	_tram,w
   982  06F2  3E20               	addlw	(low (_Number_7Seg| 0))& (0+255)
   983  06F3  0084               	movwf	4
   984  06F4  1383               	bcf	3,7	;select IRP bank0
   985  06F5  0800               	movf	0,w
   986  06F6  00F4               	movwf	??_Scan_7Seg
   987  06F7  01F5               	clrf	??_Scan_7Seg+1
   988  06F8  0874               	movf	??_Scan_7Seg,w
   989  06F9  00F0               	movwf	Write_Data@number
   990  06FA  0875               	movf	??_Scan_7Seg+1,w
   991  06FB  00F1               	movwf	Write_Data@number+1
   992  06FC  120A  118A  2628  120A  118A  	fcall	_Write_Data
   993                           
   994                           ;main.c: 140:     _delay((unsigned long)((1)*(16000000/4000.0)));
   995  0701  3006               	movlw	6
   996  0702  00F5               	movwf	??_Scan_7Seg+1
   997  0703  3030               	movlw	48
   998  0704  00F4               	movwf	??_Scan_7Seg
   999  0705                     u447:
  1000  0705  0BF4               	decfsz	??_Scan_7Seg,f
  1001  0706  2F05               	goto	u447
  1002  0707  0BF5               	decfsz	??_Scan_7Seg+1,f
  1003  0708  2F05               	goto	u447
  1004  0709  0000               	nop
  1005  070A                     l904:
  1006                           
  1007                           ;main.c: 141:     PORTCbits.RC5=0;
  1008  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1009  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1010  070C  1287               	bcf	7,5	;volatile
  1011  070D                     l906:
  1012                           
  1013                           ;main.c: 144:     PORTCbits.RC6=1;
  1014  070D  1707               	bsf	7,6	;volatile
  1015  070E                     l908:
  1016                           
  1017                           ;main.c: 145:     Write_Data( Number_7Seg[chuc]);
  1018  070E  082E               	movf	_chuc,w
  1019  070F  3E20               	addlw	(low (_Number_7Seg| 0))& (0+255)
  1020  0710  0084               	movwf	4
  1021  0711  1383               	bcf	3,7	;select IRP bank0
  1022  0712  0800               	movf	0,w
  1023  0713  00F4               	movwf	??_Scan_7Seg
  1024  0714  01F5               	clrf	??_Scan_7Seg+1
  1025  0715  0874               	movf	??_Scan_7Seg,w
  1026  0716  00F0               	movwf	Write_Data@number
  1027  0717  0875               	movf	??_Scan_7Seg+1,w
  1028  0718  00F1               	movwf	Write_Data@number+1
  1029  0719  120A  118A  2628  120A  118A  	fcall	_Write_Data
  1030  071E                     l910:
  1031                           
  1032                           ;main.c: 146:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1033  071E  3006               	movlw	6
  1034  071F  00F5               	movwf	??_Scan_7Seg+1
  1035  0720  3030               	movlw	48
  1036  0721  00F4               	movwf	??_Scan_7Seg
  1037  0722                     u457:
  1038  0722  0BF4               	decfsz	??_Scan_7Seg,f
  1039  0723  2F22               	goto	u457
  1040  0724  0BF5               	decfsz	??_Scan_7Seg+1,f
  1041  0725  2F22               	goto	u457
  1042  0726  0000               	nop
  1043  0727                     l912:
  1044                           
  1045                           ;main.c: 147:     PORTCbits.RC6=0;
  1046  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0729  1307               	bcf	7,6	;volatile
  1049  072A                     l914:
  1050                           
  1051                           ;main.c: 150:     PORTCbits.RC7=1;
  1052  072A  1787               	bsf	7,7	;volatile
  1053                           
  1054                           ;main.c: 151:     Write_Data( Number_7Seg[donvi]);
  1055  072B  082C               	movf	_donvi,w
  1056  072C  3E20               	addlw	(low (_Number_7Seg| 0))& (0+255)
  1057  072D  0084               	movwf	4
  1058  072E  1383               	bcf	3,7	;select IRP bank0
  1059  072F  0800               	movf	0,w
  1060  0730  00F4               	movwf	??_Scan_7Seg
  1061  0731  01F5               	clrf	??_Scan_7Seg+1
  1062  0732  0874               	movf	??_Scan_7Seg,w
  1063  0733  00F0               	movwf	Write_Data@number
  1064  0734  0875               	movf	??_Scan_7Seg+1,w
  1065  0735  00F1               	movwf	Write_Data@number+1
  1066  0736  120A  118A  2628  120A  118A  	fcall	_Write_Data
  1067  073B                     l916:
  1068                           
  1069                           ;main.c: 152:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1070  073B  3006               	movlw	6
  1071  073C  00F5               	movwf	??_Scan_7Seg+1
  1072  073D  3030               	movlw	48
  1073  073E  00F4               	movwf	??_Scan_7Seg
  1074  073F                     u467:
  1075  073F  0BF4               	decfsz	??_Scan_7Seg,f
  1076  0740  2F3F               	goto	u467
  1077  0741  0BF5               	decfsz	??_Scan_7Seg+1,f
  1078  0742  2F3F               	goto	u467
  1079  0743  0000               	nop
  1080  0744                     l918:
  1081                           
  1082                           ;main.c: 153:     PORTCbits.RC7=0;
  1083  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0746  1387               	bcf	7,7	;volatile
  1086  0747                     l66:
  1087  0747  0008               	return
  1088  0748                     __end_of_Scan_7Seg:
  1089                           
  1090                           	psect	text5
  1091  0628                     __ptext5:	
  1092 ;; *************** function _Write_Data *****************
  1093 ;; Defined at:
  1094 ;;		line 90 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  number          2    0[COMMON] unsigned int 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         2       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          2       0       0       0       0
  1111 ;;      Totals:         4       0       0       0       0
  1112 ;;Total ram usage:        4 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_Scan_7Seg
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _Write_Data
  1123  0628                     _Write_Data:
  1124  0628                     l806:	
  1125                           ;incstack = 0
  1126                           ; Regs used in _Write_Data: [wreg+status,2+status,0]
  1127                           
  1128                           
  1129                           ;main.c: 91:     for(j = 0x80; j > 0x00; j = j >> 1){
  1130  0628  3080               	movlw	128
  1131  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1132  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1133  062B  00B4               	movwf	_j
  1134  062C  3000               	movlw	0
  1135  062D  00B5               	movwf	_j+1
  1136  062E                     l812:
  1137                           
  1138                           ;main.c: 92:           if(number & j){
  1139  062E  0834               	movf	_j,w
  1140  062F  0570               	andwf	Write_Data@number,w
  1141  0630  00F2               	movwf	??_Write_Data
  1142  0631  0835               	movf	_j+1,w
  1143  0632  0571               	andwf	Write_Data@number+1,w
  1144  0633  00F3               	movwf	??_Write_Data+1
  1145  0634  0872               	movf	??_Write_Data,w
  1146  0635  0473               	iorwf	??_Write_Data+1,w
  1147  0636  1903               	btfsc	3,2
  1148  0637  2E39               	goto	u221
  1149  0638  2E3A               	goto	u220
  1150  0639                     u221:
  1151  0639  2E3C               	goto	l48
  1152  063A                     u220:
  1153  063A                     l814:
  1154                           
  1155                           ;main.c: 93:             PORTBbits.RB1=1;
  1156  063A  1486               	bsf	6,1	;volatile
  1157                           
  1158                           ;main.c: 94:           }
  1159  063B  2E3D               	goto	l49
  1160  063C                     l48:	
  1161                           ;main.c: 95:           else
  1162                           
  1163                           
  1164                           ;main.c: 96:           {;main.c: 97:             PORTBbits.RB1=0;
  1165  063C  1086               	bcf	6,1	;volatile
  1166  063D                     l49:	
  1167                           ;main.c: 98:           }
  1168                           
  1169                           
  1170                           ;main.c: 100:           PORTBbits.RB0=1;
  1171  063D  1406               	bsf	6,0	;volatile
  1172                           
  1173                           ;main.c: 101:           PORTBbits.RB0=0;
  1174  063E  1006               	bcf	6,0	;volatile
  1175  063F                     l816:
  1176                           
  1177                           ;main.c: 102:     }
  1178  063F  0835               	movf	_j+1,w
  1179  0640  00F3               	movwf	??_Write_Data+1
  1180  0641  0834               	movf	_j,w
  1181  0642  00F2               	movwf	??_Write_Data
  1182  0643  1003               	clrc
  1183  0644  0CF3               	rrf	??_Write_Data+1,f
  1184  0645  0CF2               	rrf	??_Write_Data,f
  1185  0646  0872               	movf	??_Write_Data,w
  1186  0647  00B4               	movwf	_j
  1187  0648  0873               	movf	??_Write_Data+1,w
  1188  0649  00B5               	movwf	_j+1
  1189  064A  0834               	movf	_j,w
  1190  064B  0435               	iorwf	_j+1,w
  1191  064C  1D03               	btfss	3,2
  1192  064D  2E4F               	goto	u231
  1193  064E  2E50               	goto	u230
  1194  064F                     u231:
  1195  064F  2E2E               	goto	l812
  1196  0650                     u230:
  1197  0650                     l47:
  1198                           
  1199                           ;main.c: 104:     PORTBbits.RB2=1;
  1200  0650  1506               	bsf	6,2	;volatile
  1201                           
  1202                           ;main.c: 105:     PORTBbits.RB2=0;
  1203  0651  1106               	bcf	6,2	;volatile
  1204  0652                     l50:
  1205  0652  0008               	return
  1206  0653                     __end_of_Write_Data:
  1207                           
  1208                           	psect	text6
  1209  060F                     __ptext6:	
  1210 ;; *************** function _Config_Init *****************
  1211 ;; Defined at:
  1212 ;;		line 66 in file "main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _Config_Init
  1241  060F                     _Config_Init:
  1242  060F                     l718:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _Config_Init: [wreg]
  1245                           
  1246                           
  1247                           ;main.c: 67:     ADCON1 = 0x06;
  1248  060F  3006               	movlw	6
  1249  0610  1683               	bsf	3,5	;RP0=1, select bank1
  1250  0611  1303               	bcf	3,6	;RP1=0, select bank1
  1251  0612  009F               	movwf	31	;volatile
  1252  0613                     l720:
  1253                           
  1254                           ;main.c: 69:     TRISBbits.TRISB1=0;
  1255  0613  1086               	bcf	6,1	;volatile
  1256  0614                     l722:
  1257                           
  1258                           ;main.c: 70:     TRISBbits.TRISB0=0;
  1259  0614  1006               	bcf	6,0	;volatile
  1260  0615                     l724:
  1261                           
  1262                           ;main.c: 71:     TRISBbits.TRISB2=0;
  1263  0615  1106               	bcf	6,2	;volatile
  1264  0616                     l726:
  1265                           
  1266                           ;main.c: 73:     PORTBbits.RB1=1;
  1267  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0618  1486               	bsf	6,1	;volatile
  1270  0619                     l728:
  1271                           
  1272                           ;main.c: 74:     PORTBbits.RB0=1;
  1273  0619  1406               	bsf	6,0	;volatile
  1274  061A                     l730:
  1275                           
  1276                           ;main.c: 75:     PORTBbits.RB2=1;
  1277  061A  1506               	bsf	6,2	;volatile
  1278  061B                     l732:
  1279                           
  1280                           ;main.c: 77:     TRISCbits.TRISC4 = 0;
  1281  061B  1683               	bsf	3,5	;RP0=1, select bank1
  1282  061C  1303               	bcf	3,6	;RP1=0, select bank1
  1283  061D  1207               	bcf	7,4	;volatile
  1284  061E                     l734:
  1285                           
  1286                           ;main.c: 78:  TRISCbits.TRISC5 = 0;
  1287  061E  1287               	bcf	7,5	;volatile
  1288  061F                     l736:
  1289                           
  1290                           ;main.c: 79:  TRISCbits.TRISC6 = 0;
  1291  061F  1307               	bcf	7,6	;volatile
  1292  0620                     l738:
  1293                           
  1294                           ;main.c: 80:  TRISCbits.TRISC7 = 0;
  1295  0620  1387               	bcf	7,7	;volatile
  1296  0621                     l740:
  1297                           
  1298                           ;main.c: 82:  PORTCbits.RC4 = 1;
  1299  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0623  1607               	bsf	7,4	;volatile
  1302  0624                     l742:
  1303                           
  1304                           ;main.c: 83:  PORTCbits.RC5 = 1;
  1305  0624  1687               	bsf	7,5	;volatile
  1306  0625                     l744:
  1307                           
  1308                           ;main.c: 84:  PORTCbits.RC6 = 1;
  1309  0625  1707               	bsf	7,6	;volatile
  1310  0626                     l746:
  1311                           
  1312                           ;main.c: 85:  PORTCbits.RC7 = 1;
  1313  0626  1787               	bsf	7,7	;volatile
  1314  0627                     l43:
  1315  0627  0008               	return
  1316  0628                     __end_of_Config_Init:
  1317  007E                     btemp	set	126	;btemp
  1318  007E                     wtemp0	set	126
  1319                           
  1320                           	psect	config
  1321                           
  1322                           ;Config register CONFIG @ 0x2007
  1323                           ;	Oscillator Selection bits
  1324                           ;	FOSC = HS, HS oscillator
  1325                           ;	Watchdog Timer Enable bit
  1326                           ;	WDTE = OFF, WDT disabled
  1327                           ;	Power-up Timer Enable bit
  1328                           ;	PWRTE = ON, PWRT enabled
  1329                           ;	Brown-out Reset Enable bit
  1330                           ;	BOREN = ON, BOR enabled
  1331                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1332                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1333                           ;	Data EEPROM Memory Code Protection bit
  1334                           ;	CPD = OFF, Data EEPROM code protection off
  1335                           ;	Flash Program Memory Write Enable bits
  1336                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1337                           ;	In-Circuit Debugger Mode bit
  1338                           ;	DEBUG = 0x1, unprogrammed default
  1339                           ;	Flash Program Memory Code Protection bit
  1340                           ;	CP = OFF, Code protection off
  1341  2007                     	org	8199
  1342  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Test_Button->___lwdiv
    ___lwdiv->___lwmod
    _Scan_7Seg->_Write_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1559
                        _Config_Init
                          _Scan_7Seg
                        _Test_Button
 ---------------------------------------------------------------------------------
 (1) _Test_Button                                          0     0      0    1233
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Scan_7Seg                                            2     2      0     326
                                              4 COMMON     2     2      0
                         _Write_Data
 ---------------------------------------------------------------------------------
 (2) _Write_Data                                           4     2      2     326
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Config_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Init
   _Scan_7Seg
     _Write_Data
   _Test_Button
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 25 16:03:58 2022

                      _j 0034                        pc 0002                       l50 0652  
                     l43 0627                       l37 05EE                       l54 074E  
                     l47 0650                       l63 07E3                       l48 063C  
                     l49 063D                       l66 0747                       l59 0769  
                     fsr 0004                      l424 06D0                      l434 068C  
                    l720 0613                      l730 061A                      l722 0614  
                    l740 0621                      l732 061B                      l724 0615  
                    l812 062E                      l900 06F0                      l820 068F  
                    l742 0624                      l734 061E                      l726 0616  
                    l718 060F                      l814 063A                      l806 0628  
                    l910 071E                      l902 06F1                      l830 06A7  
                    l822 0695                      l744 0625                      l736 061F  
                    l728 0619                      l816 063F                      l912 0727  
                    l904 070A                      l832 06B8                      l824 0698  
                    l840 06CC                      l920 05E9                      l746 0626  
                    l738 0620                      l914 072A                      l906 070D  
                    l834 06BE                      l826 069F                      l818 068D  
                    l850 0663                      l922 05F3                      l916 073B  
                    l908 070E                      l836 06BF                      l828 06A3  
                    l860 0682                      l852 0667                      l844 0653  
                    l918 0744                      l838 06C6                      l854 066B  
                    l846 0659                      l862 0688                      l870 0752  
                    l856 0675                      l848 065C                      l880 0773  
                    l872 0761                      l858 067B                      l890 07D0  
                    l882 0779                      l874 0765                      l866 0748  
                    l892 06D1                      l884 077D                      l894 06D4  
                    l886 0790                      l878 076D                      l896 06E4  
                    l888 07B0                      l898 06ED                      u220 063A  
                    u300 06CC                      u221 0639                      u301 06CB  
                    u230 0650                      u310 0659                      u231 064F  
                    u311 0658                      u240 0695                      u400 0769  
                    u241 0694                      u401 0768                      u330 066B  
                    u410 076D                      u331 066A                      u411 076C  
                    u260 06A7                      u340 0675                      u420 0779  
                    u261 06A6                      u341 0674                      u325 065D  
                    u421 0778                      u255 0699                      u280 06B8  
                    u360 0688                      u281 06B7                      u361 0687  
                    u345 0671                      u370 074E                      u275 06A8  
                    u355 067C                      u371 074D                      u380 0752  
                    u437 06E8                      u285 06B4                      u381 0751  
                    u390 0761                      u447 0705                      u295 06C0  
                    u391 0760                      u457 0722                      u467 073F  
                    fsr0 0004                      indf 0000                     _chuc 002E  
                   _main 05E9                     _tram 0030                     btemp 007E  
       Write_Data@number 0070                     start 0000      __end_of_Config_Init 0628  
                  ?_main 0070          __end_of___lwdiv 06D1          __end_of___lwmod 068D  
                  _donvi 002C                    _nghin 0032                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E4  
           __end_of_main 05FC                   ??_main 007E                   _ADCON1 009F  
            _Config_Init 060F       __size_of_Scan_7Seg 0077                ??___lwdiv 007A  
              ??___lwmod 0074            ??_Test_Button 007E  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 05DD               _Write_Data 0628  
      __end_of_Scan_7Seg 0748      __end_of_Test_Button 07E4               __pbssBANK0 002C  
             __pmaintext 05E9              ?_Write_Data 0070              _Number_7Seg 0020  
                ___lwdiv 068D                  ___lwmod 0653                  __ptext1 0748  
                __ptext2 0653                  __ptext3 068D                  __ptext4 06D1  
                __ptext5 0628                  __ptext6 060F              _Test_Button 0748  
   end_of_initialization 07FC             ?_Config_Init 0070                _PORTBbits 0006  
              _PORTCbits 0007                _TRISBbits 0086                _TRISCbits 0087  
    __size_of_Write_Data 002B      start_initialization 07E4                _Scan_7Seg 06D1  
          _Value_Display 002A               init_fetch0 05FC              __pdataBANK0 0020  
              ___latbits 0002               ?_Scan_7Seg 0070     __size_of_Config_Init 0019  
       ___lwdiv@dividend 0078             ??_Write_Data 0072                 ?___lwdiv 0076  
               ?___lwmod 0070             ?_Test_Button 0070         ___lwdiv@quotient 007B  
     __end_of_Write_Data 0653              ??_Scan_7Seg 0074         __size_of___lwdiv 0044  
       __size_of___lwmod 003A          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
          __size_of_main 0013     __size_of_Test_Button 009C                 init_ram0 0600  
       ___lwmod@dividend 0072          ___lwmod@divisor 0070          ___lwmod@counter 0075  
          ??_Config_Init 0070  
