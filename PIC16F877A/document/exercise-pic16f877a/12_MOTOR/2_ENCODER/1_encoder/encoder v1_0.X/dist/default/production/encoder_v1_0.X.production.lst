

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 14 08:30:31 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264                           
   265                           	psect	strings
   266  1000                     __pstrings:
   267  1000                     stringtab:
   268  1000                     __stringtab:
   269                           
   270                           ;	String table - string pointers are 1 byte each
   271  1000  1BFF               	btfsc	btemp+1,7
   272  1001  280A               	ljmp	stringcode
   273  1002  1383               	bcf	3,7
   274  1003  187F               	btfsc	btemp+1,0
   275  1004  1783               	bsf	3,7
   276  1005  0800               	movf	0,w
   277  1006  0A84               	incf	4,f
   278  1007  1903               	skipnz
   279  1008  0AFF               	incf	btemp+1,f
   280  1009  0008               	return
   281  100A                     stringcode:
   282  100A                     stringdir:
   283  100A  3010               	movlw	high stringdir
   284  100B  008A               	movwf	10
   285  100C  0804               	movf	4,w
   286  100D  0A84               	incf	4,f
   287  100E  0782               	addwf	2,f
   288  100F                     __stringbase:
   289  100F  3400               	retlw	0
   290  1010                     __end_of__stringtab:
   291  1010                     __powers_:
   292  1010  3400               	retlw	0
   293  1011  3400               	retlw	0
   294  1012  3480               	retlw	128
   295  1013  343F               	retlw	63
   296  1014  3400               	retlw	0
   297  1015  3400               	retlw	0
   298  1016  3420               	retlw	32
   299  1017  3441               	retlw	65
   300  1018  3400               	retlw	0
   301  1019  3400               	retlw	0
   302  101A  34C8               	retlw	200
   303  101B  3442               	retlw	66
   304  101C  3400               	retlw	0
   305  101D  3400               	retlw	0
   306  101E  347A               	retlw	122
   307  101F  3444               	retlw	68
   308  1020  3400               	retlw	0
   309  1021  3440               	retlw	64
   310  1022  341C               	retlw	28
   311  1023  3446               	retlw	70
   312  1024  3400               	retlw	0
   313  1025  3450               	retlw	80
   314  1026  34C3               	retlw	195
   315  1027  3447               	retlw	71
   316  1028  3400               	retlw	0
   317  1029  3424               	retlw	36
   318  102A  3474               	retlw	116
   319  102B  3449               	retlw	73
   320  102C  3480               	retlw	128
   321  102D  3496               	retlw	150
   322  102E  3418               	retlw	24
   323  102F  344B               	retlw	75
   324  1030  3420               	retlw	32
   325  1031  34BC               	retlw	188
   326  1032  34BE               	retlw	190
   327  1033  344C               	retlw	76
   328  1034  3428               	retlw	40
   329  1035  346B               	retlw	107
   330  1036  346E               	retlw	110
   331  1037  344E               	retlw	78
   332  1038  34F9               	retlw	249
   333  1039  3402               	retlw	2
   334  103A  3415               	retlw	21
   335  103B  3450               	retlw	80
   336  103C  34EC               	retlw	236
   337  103D  3478               	retlw	120
   338  103E  34AD               	retlw	173
   339  103F  3460               	retlw	96
   340  1040  34CA               	retlw	202
   341  1041  34F2               	retlw	242
   342  1042  3449               	retlw	73
   343  1043  3471               	retlw	113
   344  1044                     __end_of__powers_:
   345  1044                     __npowers_:
   346  1044  3400               	retlw	0
   347  1045  3400               	retlw	0
   348  1046  3480               	retlw	128
   349  1047  343F               	retlw	63
   350  1048  34CD               	retlw	205
   351  1049  34CC               	retlw	204
   352  104A  34CC               	retlw	204
   353  104B  343D               	retlw	61
   354  104C  340A               	retlw	10
   355  104D  34D7               	retlw	215
   356  104E  3423               	retlw	35
   357  104F  343C               	retlw	60
   358  1050  346F               	retlw	111
   359  1051  3412               	retlw	18
   360  1052  3483               	retlw	131
   361  1053  343A               	retlw	58
   362  1054  3417               	retlw	23
   363  1055  34B7               	retlw	183
   364  1056  34D1               	retlw	209
   365  1057  3438               	retlw	56
   366  1058  34AC               	retlw	172
   367  1059  34C5               	retlw	197
   368  105A  3427               	retlw	39
   369  105B  3437               	retlw	55
   370  105C  34BD               	retlw	189
   371  105D  3437               	retlw	55
   372  105E  3486               	retlw	134
   373  105F  3435               	retlw	53
   374  1060  3495               	retlw	149
   375  1061  34BF               	retlw	191
   376  1062  34D6               	retlw	214
   377  1063  3433               	retlw	51
   378  1064  3477               	retlw	119
   379  1065  34CC               	retlw	204
   380  1066  342B               	retlw	43
   381  1067  3432               	retlw	50
   382  1068  345F               	retlw	95
   383  1069  3470               	retlw	112
   384  106A  3489               	retlw	137
   385  106B  3430               	retlw	48
   386  106C  34FF               	retlw	255
   387  106D  34E6               	retlw	230
   388  106E  34DB               	retlw	219
   389  106F  342E               	retlw	46
   390  1070  3408               	retlw	8
   391  1071  34E5               	retlw	229
   392  1072  343C               	retlw	60
   393  1073  341E               	retlw	30
   394  1074  3460               	retlw	96
   395  1075  3442               	retlw	66
   396  1076  34A2               	retlw	162
   397  1077  340D               	retlw	13
   398  1078                     __end_of__npowers_:
   399  1078                     _dpowers:
   400  1078  3401               	retlw	1
   401  1079  3400               	retlw	0
   402  107A  3400               	retlw	0
   403  107B  3400               	retlw	0
   404  107C  340A               	retlw	10
   405  107D  3400               	retlw	0
   406  107E  3400               	retlw	0
   407  107F  3400               	retlw	0
   408  1080  3464               	retlw	100
   409  1081  3400               	retlw	0
   410  1082  3400               	retlw	0
   411  1083  3400               	retlw	0
   412  1084  34E8               	retlw	232
   413  1085  3403               	retlw	3
   414  1086  3400               	retlw	0
   415  1087  3400               	retlw	0
   416  1088  3410               	retlw	16
   417  1089  3427               	retlw	39
   418  108A  3400               	retlw	0
   419  108B  3400               	retlw	0
   420  108C  34A0               	retlw	160
   421  108D  3486               	retlw	134
   422  108E  3401               	retlw	1
   423  108F  3400               	retlw	0
   424  1090  3440               	retlw	64
   425  1091  3442               	retlw	66
   426  1092  340F               	retlw	15
   427  1093  3400               	retlw	0
   428  1094  3480               	retlw	128
   429  1095  3496               	retlw	150
   430  1096  3498               	retlw	152
   431  1097  3400               	retlw	0
   432  1098  3400               	retlw	0
   433  1099  34E1               	retlw	225
   434  109A  34F5               	retlw	245
   435  109B  3405               	retlw	5
   436  109C  3400               	retlw	0
   437  109D  34CA               	retlw	202
   438  109E  349A               	retlw	154
   439  109F  343B               	retlw	59
   440  10A0                     __end_of_dpowers:
   441  000E                     _TMR1L	set	14
   442  000F                     _TMR1H	set	15
   443  0005                     _PORTAbits	set	5
   444  0006                     _PORTBbits	set	6
   445  0043                     _RD3	set	67
   446  0042                     _RD2	set	66
   447  0047                     _RD7	set	71
   448  0046                     _RD6	set	70
   449  0045                     _RD5	set	69
   450  0044                     _RD4	set	68
   451  0080                     _TMR1ON	set	128
   452  0030                     _RB0	set	48
   453  0085                     _T1CKPS1	set	133
   454  0084                     _T1CKPS0	set	132
   455  0081                     _TMR1CS	set	129
   456  0060                     _TMR1IF	set	96
   457  005E                     _PEIE	set	94
   458  0059                     _INTF	set	89
   459  005C                     _INTE	set	92
   460  005F                     _GIE	set	95
   461  0088                     _TRISD	set	136
   462  0085                     _TRISAbits	set	133
   463  0086                     _TRISBbits	set	134
   464  009F                     _ADCON1	set	159
   465  0443                     _TRISD3	set	1091
   466  0442                     _TRISD2	set	1090
   467  0460                     _TMR1IE	set	1120
   468  040E                     _INTEDG	set	1038
   469  10A0                     STR_1:
   470  10A0  3464               	retlw	100	;'d'
   471  10A1  346F               	retlw	111	;'o'
   472  10A2  3420               	retlw	32	;' '
   473  10A3  3465               	retlw	101	;'e'
   474  10A4  346E               	retlw	110	;'n'
   475  10A5  3463               	retlw	99	;'c'
   476  10A6  346F               	retlw	111	;'o'
   477  10A7  3464               	retlw	100	;'d'
   478  10A8  3465               	retlw	101	;'e'
   479  10A9  3472               	retlw	114	;'r'
   480  10AA  3400               	retlw	0
   481  10AB                     STR_4:
   482  10AB  346E               	retlw	110	;'n'
   483  10AC  3467               	retlw	103	;'g'
   484  10AD  3468               	retlw	104	;'h'
   485  10AE  3469               	retlw	105	;'i'
   486  10AF  3463               	retlw	99	;'c'
   487  10B0  3468               	retlw	104	;'h'
   488  10B1  3400               	retlw	0
   489  10B2                     STR_3:
   490  10B2  3474               	retlw	116	;'t'
   491  10B3  3468               	retlw	104	;'h'
   492  10B4  3475               	retlw	117	;'u'
   493  10B5  3461               	retlw	97	;'a'
   494  10B6  346E               	retlw	110	;'n'
   495  10B7  3400               	retlw	0
   496  10B8                     STR_2:
   497  10B8  3425               	retlw	37	;'%'
   498  10B9  3466               	retlw	102	;'f'
   499  10BA  3400               	retlw	0
   500                           
   501                           	psect	cinit
   502  000F                     start_initialization:	
   503                           ; #config settings
   504                           
   505  000F                     __initialization:
   506                           
   507                           ; Clear objects allocated to COMMON
   508  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   509                           
   510                           ; Clear objects allocated to BANK1
   511  0010  1383               	bcf	3,7	;select IRP bank0
   512  0011  30CE               	movlw	low __pbssBANK1
   513  0012  0084               	movwf	4
   514  0013  30D7               	movlw	low (__pbssBANK1+9)
   515  0014  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   516                           
   517                           ; Clear objects allocated to BANK3
   518  0019  1783               	bsf	3,7	;select IRP bank2
   519  001A  3090               	movlw	low __pbssBANK3
   520  001B  0084               	movwf	4
   521  001C  30AE               	movlw	low (__pbssBANK3+30)
   522  001D  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   523  0022                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526  0022                     __end_of__initialization:
   527  0022  0183               	clrf	3
   528  0023  120A  158A  2829   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	bssCOMMON
   531  007B                     __pbssCOMMON:
   532  007B                     _trang_thai_chuyen_dong:
   533  007B                     	ds	1
   534                           
   535                           	psect	bssBANK1
   536  00CE                     __pbssBANK1:
   537  00CE                     _fFrequency:
   538  00CE                     	ds	4
   539  00D2                     _u32NumberOfCounterOver:
   540  00D2                     	ds	2
   541  00D4                     _chieu_quay:
   542  00D4                     	ds	1
   543  00D5                     _NumberOfTick:
   544  00D5                     	ds	2
   545                           
   546                           	psect	bssBANK3
   547  0190                     __pbssBANK3:
   548  0190                     _str:
   549  0190                     	ds	30
   550                           
   551                           	psect	clrtext
   552  07F7                     clear_ram0:	
   553                           ;	Called with FSR containing the base address, and
   554                           ;	W with the last address+1
   555                           
   556  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   557  07F8                     clrloop0:
   558  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   559  07F9  0A84               	incf	4,f	;increment pointer
   560  07FA  0604               	xorwf	4,w	;XOR with final address
   561  07FB  1903               	btfsc	3,2	;have we reached the end yet?
   562  07FC  3400               	retlw	0	;all done for this memory range, return
   563  07FD  0604               	xorwf	4,w	;XOR again to restore value
   564  07FE  2FF8               	goto	clrloop0	;do the next byte
   565                           
   566                           	psect	cstackBANK1
   567  00A0                     __pcstackBANK1:
   568  00A0                     ?___flsub:
   569  00A0                     ___flsub@a:	
   570                           ; 4 bytes @ 0x0
   571                           
   572                           
   573                           ; 4 bytes @ 0x0
   574  00A0                     	ds	4
   575  00A4                     ___flsub@b:
   576                           
   577                           ; 4 bytes @ 0x4
   578  00A4                     	ds	4
   579  00A8                     ?_sprintf:
   580  00A8                     sprintf@f:	
   581                           ; 2 bytes @ 0x8
   582                           
   583                           
   584                           ; 1 bytes @ 0x8
   585  00A8                     	ds	5
   586  00AD                     _sprintf$930:
   587                           
   588                           ; 4 bytes @ 0xD
   589  00AD                     	ds	4
   590  00B1                     sprintf@ap:
   591                           
   592                           ; 1 bytes @ 0x11
   593  00B1                     	ds	1
   594  00B2                     sprintf@flag:
   595                           
   596                           ; 2 bytes @ 0x12
   597  00B2                     	ds	2
   598  00B4                     sprintf@prec:
   599                           
   600                           ; 2 bytes @ 0x14
   601  00B4                     	ds	2
   602  00B6                     sprintf@val:
   603                           
   604                           ; 4 bytes @ 0x16
   605  00B6                     	ds	4
   606  00BA                     sprintf@eexp:
   607                           
   608                           ; 2 bytes @ 0x1A
   609  00BA                     	ds	2
   610  00BC                     sprintf@sp:
   611                           
   612                           ; 1 bytes @ 0x1C
   613  00BC                     	ds	1
   614  00BD                     sprintf@tmpval:
   615                           
   616                           ; 4 bytes @ 0x1D
   617  00BD                     	ds	4
   618  00C1                     sprintf@fval:
   619                           
   620                           ; 4 bytes @ 0x21
   621  00C1                     	ds	4
   622  00C5                     sprintf@c:
   623                           
   624                           ; 1 bytes @ 0x25
   625  00C5                     	ds	1
   626  00C6                     ??_main:
   627                           
   628                           ; 1 bytes @ 0x26
   629  00C6                     	ds	8
   630                           
   631                           	psect	cstackCOMMON
   632  0070                     __pcstackCOMMON:
   633  0070                     ?_LCD_Init:
   634  0070                     ?_LCD_Clear:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_ser_irs_rb0:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_timer1_config:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_irs:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ??_irs:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_LCD_DATA:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_LCD_CMD:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_LCD_Write_Char:	
   659                           ; 1 bytes @ 0x0
   660                           
   661                           
   662                           ; 1 bytes @ 0x0
   663  0070                     	ds	2
   664  0072                     ?___fleq:
   665  0072                     ?___flge:	
   666                           ; 1 bit 
   667                           
   668  0072                     ??_ser_irs_rb0:	
   669                           ; 1 bit 
   670                           
   671  0072                     ??_timer1_config:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ??_LCD_DATA:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0072                     ?__Umul8_16:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0072                     ?___wmul:	
   681                           ; 2 bytes @ 0x2
   682                           
   683  0072                     ?___awmod:	
   684                           ; 2 bytes @ 0x2
   685                           
   686  0072                     ?___lwmod:	
   687                           ; 2 bytes @ 0x2
   688                           
   689  0072                     ?__tdiv_to_l_:	
   690                           ; 2 bytes @ 0x2
   691                           
   692  0072                     ?__div_to_l_:	
   693                           ; 4 bytes @ 0x2
   694                           
   695  0072                     ?___lldiv:	
   696                           ; 4 bytes @ 0x2
   697                           
   698  0072                     ?___flneg:	
   699                           ; 4 bytes @ 0x2
   700                           
   701  0072                     ?___llmod:	
   702                           ; 4 bytes @ 0x2
   703                           
   704  0072                     ?___xxtofl:	
   705                           ; 4 bytes @ 0x2
   706                           
   707  0072                     LCD_DATA@Data:	
   708                           ; 4 bytes @ 0x2
   709                           
   710  0072                     __Umul8_16@multiplicand:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0072                     ___wmul@multiplier:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     ___awmod@divisor:	
   717                           ; 2 bytes @ 0x2
   718                           
   719  0072                     ___lwmod@divisor:	
   720                           ; 2 bytes @ 0x2
   721                           
   722  0072                     ___lldiv@divisor:	
   723                           ; 2 bytes @ 0x2
   724                           
   725  0072                     __div_to_l_@f1:	
   726                           ; 4 bytes @ 0x2
   727                           
   728  0072                     ___fleq@ff1:	
   729                           ; 4 bytes @ 0x2
   730                           
   731  0072                     ___flge@ff1:	
   732                           ; 4 bytes @ 0x2
   733                           
   734  0072                     ___flneg@f1:	
   735                           ; 4 bytes @ 0x2
   736                           
   737  0072                     __tdiv_to_l_@f1:	
   738                           ; 4 bytes @ 0x2
   739                           
   740  0072                     ___llmod@divisor:	
   741                           ; 4 bytes @ 0x2
   742                           
   743  0072                     ___xxtofl@val:	
   744                           ; 4 bytes @ 0x2
   745                           
   746                           
   747                           ; 4 bytes @ 0x2
   748  0072                     	ds	1
   749  0073                     ??_LCD_CMD:
   750  0073                     ??_LCD_Write_Char:	
   751                           ; 1 bytes @ 0x3
   752                           
   753                           
   754                           ; 1 bytes @ 0x3
   755  0073                     	ds	1
   756  0074                     ??__Umul8_16:
   757  0074                     ___wmul@multiplicand:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     ___awmod@dividend:	
   761                           ; 2 bytes @ 0x4
   762                           
   763  0074                     ___lwmod@dividend:	
   764                           ; 2 bytes @ 0x4
   765                           
   766                           
   767                           ; 2 bytes @ 0x4
   768  0074                     	ds	1
   769  0075                     LCD_CMD@CMD:
   770  0075                     LCD_Write_Char@Low4:	
   771                           ; 1 bytes @ 0x5
   772                           
   773                           
   774                           ; 1 bytes @ 0x5
   775  0075                     	ds	1
   776  0076                     ??_LCD_Init:
   777  0076                     ?_LCD_Set_Cursor:	
   778                           ; 1 bytes @ 0x6
   779                           
   780  0076                     ??_LCD_Clear:	
   781                           ; 1 bytes @ 0x6
   782                           
   783  0076                     ??___wmul:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0076                     ??___awmod:	
   787                           ; 1 bytes @ 0x6
   788                           
   789  0076                     ??___flneg:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     ??___lwmod:	
   793                           ; 1 bytes @ 0x6
   794                           
   795  0076                     ??___xxtofl:	
   796                           ; 1 bytes @ 0x6
   797                           
   798  0076                     LCD_Set_Cursor@column:	
   799                           ; 1 bytes @ 0x6
   800                           
   801  0076                     LCD_Write_Char@High4:	
   802                           ; 1 bytes @ 0x6
   803                           
   804  0076                     ___awmod@counter:	
   805                           ; 1 bytes @ 0x6
   806                           
   807  0076                     ___lwmod@counter:	
   808                           ; 1 bytes @ 0x6
   809                           
   810  0076                     ___wmul@product:	
   811                           ; 1 bytes @ 0x6
   812                           
   813  0076                     __Umul8_16@product:	
   814                           ; 2 bytes @ 0x6
   815                           
   816  0076                     ___lldiv@dividend:	
   817                           ; 2 bytes @ 0x6
   818                           
   819  0076                     __div_to_l_@f2:	
   820                           ; 4 bytes @ 0x6
   821                           
   822  0076                     ___fleq@ff2:	
   823                           ; 4 bytes @ 0x6
   824                           
   825  0076                     ___flge@ff2:	
   826                           ; 4 bytes @ 0x6
   827                           
   828  0076                     __tdiv_to_l_@f2:	
   829                           ; 4 bytes @ 0x6
   830                           
   831  0076                     ___llmod@dividend:	
   832                           ; 4 bytes @ 0x6
   833                           
   834                           
   835                           ; 4 bytes @ 0x6
   836  0076                     	ds	1
   837  0077                     ??_LCD_Set_Cursor:
   838  0077                     ?___lwdiv:	
   839                           ; 1 bytes @ 0x7
   840                           
   841  0077                     LCD_Write_Char@Data:	
   842                           ; 2 bytes @ 0x7
   843                           
   844  0077                     ___awmod@sign:	
   845                           ; 1 bytes @ 0x7
   846                           
   847  0077                     ___lwdiv@divisor:	
   848                           ; 1 bytes @ 0x7
   849                           
   850                           
   851                           ; 2 bytes @ 0x7
   852  0077                     	ds	1
   853  0078                     ?_LCD_Write_String:
   854  0078                     ??___awdiv:	
   855                           ; 1 bytes @ 0x8
   856                           
   857  0078                     LCD_Write_String@str:	
   858                           ; 1 bytes @ 0x8
   859                           
   860  0078                     __Umul8_16@word_mpld:	
   861                           ; 2 bytes @ 0x8
   862                           
   863                           
   864                           ; 2 bytes @ 0x8
   865  0078                     	ds	1
   866  0079                     ___lwdiv@dividend:
   867                           
   868                           ; 2 bytes @ 0x9
   869  0079                     	ds	1
   870  007A                     ??__div_to_l_:
   871  007A                     ??___lldiv:	
   872                           ; 1 bytes @ 0xA
   873                           
   874  007A                     ??___llmod:	
   875                           ; 1 bytes @ 0xA
   876                           
   877  007A                     __Umul8_16@multiplier:	
   878                           ; 1 bytes @ 0xA
   879                           
   880                           
   881                           ; 1 bytes @ 0xA
   882  007A                     	ds	1
   883  007B                     ??___lwdiv:
   884  007B                     ??___flsub:	
   885                           ; 1 bytes @ 0xB
   886                           
   887                           
   888                           	psect	cstackBANK0
   889  0020                     __pcstackBANK0:	
   890                           ; 1 bytes @ 0xB
   891                           
   892  0020                     ??_LCD_Write_String:
   893  0020                     ??__tdiv_to_l_:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0020                     ??___fleq:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0020                     ??___flge:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0020                     ?___awdiv:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0020                     LCD_Set_Cursor@row:	
   906                           ; 2 bytes @ 0x0
   907                           
   908  0020                     ___llmod@counter:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0020                     ___xxtofl@sign:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0020                     ___awdiv@divisor:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0020                     ___lwdiv@quotient:	
   918                           ; 2 bytes @ 0x0
   919                           
   920  0020                     ___lldiv@quotient:	
   921                           ; 2 bytes @ 0x0
   922                           
   923  0020                     __div_to_l_@quot:	
   924                           ; 4 bytes @ 0x0
   925                           
   926                           
   927                           ; 4 bytes @ 0x0
   928  0020                     	ds	1
   929  0021                     LCD_Set_Cursor@Low4:
   930  0021                     ___xxtofl@exp:	
   931                           ; 1 bytes @ 0x1
   932                           
   933                           
   934                           ; 1 bytes @ 0x1
   935  0021                     	ds	1
   936  0022                     LCD_Set_Cursor@High4:
   937  0022                     ___lwdiv@counter:	
   938                           ; 1 bytes @ 0x2
   939                           
   940  0022                     ___awdiv@dividend:	
   941                           ; 1 bytes @ 0x2
   942                           
   943  0022                     ___xxtofl@arg:	
   944                           ; 2 bytes @ 0x2
   945                           
   946                           
   947                           ; 4 bytes @ 0x2
   948  0022                     	ds	1
   949  0023                     LCD_Set_Cursor@Temp:
   950  0023                     LCD_Write_String@i:	
   951                           ; 1 bytes @ 0x3
   952                           
   953  0023                     __tdiv_to_l_@quot:	
   954                           ; 2 bytes @ 0x3
   955                           
   956                           
   957                           ; 4 bytes @ 0x3
   958  0023                     	ds	1
   959  0024                     ___lldiv@counter:
   960  0024                     ___awdiv@counter:	
   961                           ; 1 bytes @ 0x4
   962                           
   963  0024                     __div_to_l_@cntr:	
   964                           ; 1 bytes @ 0x4
   965                           
   966                           
   967                           ; 1 bytes @ 0x4
   968  0024                     	ds	1
   969  0025                     ___awdiv@sign:
   970  0025                     __div_to_l_@exp1:	
   971                           ; 1 bytes @ 0x5
   972                           
   973                           
   974                           ; 1 bytes @ 0x5
   975  0025                     	ds	1
   976  0026                     ?___fldiv:
   977  0026                     ___awdiv@quotient:	
   978                           ; 4 bytes @ 0x6
   979                           
   980  0026                     ___fldiv@a:	
   981                           ; 2 bytes @ 0x6
   982                           
   983                           
   984                           ; 4 bytes @ 0x6
   985  0026                     	ds	1
   986  0027                     __tdiv_to_l_@cntr:
   987                           
   988                           ; 1 bytes @ 0x7
   989  0027                     	ds	1
   990  0028                     ?___flmul:
   991  0028                     __tdiv_to_l_@exp1:	
   992                           ; 4 bytes @ 0x8
   993                           
   994  0028                     ___flmul@b:	
   995                           ; 1 bytes @ 0x8
   996                           
   997                           
   998                           ; 4 bytes @ 0x8
   999  0028                     	ds	2
  1000  002A                     ___fldiv@b:
  1001                           
  1002                           ; 4 bytes @ 0xA
  1003  002A                     	ds	2
  1004  002C                     ___flmul@a:
  1005                           
  1006                           ; 4 bytes @ 0xC
  1007  002C                     	ds	2
  1008  002E                     ??___fldiv:
  1009                           
  1010                           ; 1 bytes @ 0xE
  1011  002E                     	ds	2
  1012  0030                     ??___flmul:
  1013                           
  1014                           ; 1 bytes @ 0x10
  1015  0030                     	ds	3
  1016  0033                     ___fldiv@rem:
  1017                           
  1018                           ; 4 bytes @ 0x13
  1019  0033                     	ds	2
  1020  0035                     ___flmul@sign:
  1021                           
  1022                           ; 1 bytes @ 0x15
  1023  0035                     	ds	1
  1024  0036                     ___flmul@grs:
  1025                           
  1026                           ; 4 bytes @ 0x16
  1027  0036                     	ds	1
  1028  0037                     ___fldiv@sign:
  1029                           
  1030                           ; 1 bytes @ 0x17
  1031  0037                     	ds	1
  1032  0038                     ___fldiv@new_exp:
  1033                           
  1034                           ; 2 bytes @ 0x18
  1035  0038                     	ds	2
  1036  003A                     ___flmul@aexp:
  1037  003A                     ___fldiv@grs:	
  1038                           ; 1 bytes @ 0x1A
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x1A
  1042  003A                     	ds	1
  1043  003B                     ___flmul@bexp:
  1044                           
  1045                           ; 1 bytes @ 0x1B
  1046  003B                     	ds	1
  1047  003C                     ___flmul@prod:
  1048                           
  1049                           ; 4 bytes @ 0x1C
  1050  003C                     	ds	2
  1051  003E                     ___fldiv@bexp:
  1052                           
  1053                           ; 1 bytes @ 0x1E
  1054  003E                     	ds	1
  1055  003F                     ___fldiv@aexp:
  1056                           
  1057                           ; 1 bytes @ 0x1F
  1058  003F                     	ds	1
  1059  0040                     ___flmul@temp:
  1060                           
  1061                           ; 2 bytes @ 0x20
  1062  0040                     	ds	2
  1063  0042                     ?_fround:
  1064  0042                     ?_scale:	
  1065                           ; 4 bytes @ 0x22
  1066                           
  1067                           
  1068                           ; 4 bytes @ 0x22
  1069  0042                     	ds	4
  1070  0046                     ??_fround:
  1071  0046                     ??_scale:	
  1072                           ; 1 bytes @ 0x26
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0x26
  1076  0046                     	ds	7
  1077  004D                     _fround$928:
  1078                           
  1079                           ; 4 bytes @ 0x2D
  1080  004D                     	ds	3
  1081  0050                     _scale$929:
  1082                           
  1083                           ; 4 bytes @ 0x30
  1084  0050                     	ds	1
  1085  0051                     _fround$927:
  1086                           
  1087                           ; 4 bytes @ 0x31
  1088  0051                     	ds	3
  1089  0054                     scale@scl:
  1090                           
  1091                           ; 1 bytes @ 0x34
  1092  0054                     	ds	1
  1093  0055                     ?___fltol:
  1094  0055                     fround@prec:	
  1095                           ; 4 bytes @ 0x35
  1096                           
  1097  0055                     ___fltol@f1:	
  1098                           ; 1 bytes @ 0x35
  1099                           
  1100                           
  1101                           ; 4 bytes @ 0x35
  1102  0055                     	ds	1
  1103  0056                     ?___fladd:
  1104  0056                     ___fladd@b:	
  1105                           ; 4 bytes @ 0x36
  1106                           
  1107                           
  1108                           ; 4 bytes @ 0x36
  1109  0056                     	ds	3
  1110  0059                     ??___fltol:
  1111                           
  1112                           ; 1 bytes @ 0x39
  1113  0059                     	ds	1
  1114  005A                     ___fladd@a:
  1115                           
  1116                           ; 4 bytes @ 0x3A
  1117  005A                     	ds	3
  1118  005D                     ___fltol@sign1:
  1119                           
  1120                           ; 1 bytes @ 0x3D
  1121  005D                     	ds	1
  1122  005E                     ??___fladd:
  1123  005E                     ___fltol@exp1:	
  1124                           ; 1 bytes @ 0x3E
  1125                           
  1126                           
  1127                           ; 1 bytes @ 0x3E
  1128  005E                     	ds	8
  1129  0066                     ___fladd@signs:
  1130                           
  1131                           ; 1 bytes @ 0x46
  1132  0066                     	ds	1
  1133  0067                     ___fladd@aexp:
  1134                           
  1135                           ; 1 bytes @ 0x47
  1136  0067                     	ds	1
  1137  0068                     ___fladd@bexp:
  1138                           
  1139                           ; 1 bytes @ 0x48
  1140  0068                     	ds	1
  1141  0069                     ___fladd@grs:
  1142                           
  1143                           ; 1 bytes @ 0x49
  1144  0069                     	ds	1
  1145  006A                     ??_sprintf:
  1146                           
  1147                           ; 1 bytes @ 0x4A
  1148  006A                     	ds	5
  1149                           
  1150                           	psect	maintext
  1151  0829                     __pmaintext:	
  1152 ;;
  1153 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1154 ;;
  1155 ;; *************** function _main *****************
  1156 ;; Defined at:
  1157 ;;		line 87 in file "main encoder.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : B00/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0
  1173 ;;      Temps:          0       0       8       0       0
  1174 ;;      Totals:         0       0       8       0       0
  1175 ;;Total ram usage:        8 bytes
  1176 ;; Hardware stack levels required when called:    5
  1177 ;; This function calls:
  1178 ;;		_LCD_Clear
  1179 ;;		_LCD_Init
  1180 ;;		_LCD_Set_Cursor
  1181 ;;		_LCD_Write_String
  1182 ;;		___fldiv
  1183 ;;		___xxtofl
  1184 ;;		_ser_irs_rb0
  1185 ;;		_sprintf
  1186 ;;		_timer1_config
  1187 ;; This function is called by:
  1188 ;;		Startup code after reset
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _main
  1194  0829                     _main:
  1195  0829                     l4222:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1198                           
  1199                           
  1200                           ;main encoder.c: 89:     ADCON1 = 0X07;
  1201  0829  3007               	movlw	7
  1202  082A  1683               	bsf	3,5	;RP0=1, select bank1
  1203  082B  1303               	bcf	3,6	;RP1=0, select bank1
  1204  082C  009F               	movwf	31	;volatile
  1205  082D                     l4224:
  1206                           
  1207                           ;main encoder.c: 91:     TRISBbits.TRISB5 = 1;
  1208  082D  1686               	bsf	6,5	;volatile
  1209  082E                     l4226:
  1210                           
  1211                           ;main encoder.c: 93:     TRISAbits.TRISA3 = 0;
  1212  082E  1185               	bcf	5,3	;volatile
  1213  082F                     l4228:
  1214                           
  1215                           ;main encoder.c: 94:     PORTAbits.RA3=1;
  1216  082F  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0830  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0831  1585               	bsf	5,3	;volatile
  1219  0832                     l4230:
  1220                           
  1221                           ;main encoder.c: 96:     ser_irs_rb0();
  1222  0832  160A  158A  2242  120A  158A  	fcall	_ser_irs_rb0
  1223  0837                     l4232:
  1224                           
  1225                           ;main encoder.c: 97:     timer1_config();
  1226  0837  160A  158A  2254  120A  158A  	fcall	_timer1_config
  1227  083C                     l4234:
  1228                           
  1229                           ;main encoder.c: 99:     LCD_Init();
  1230  083C  160A  158A  2562  120A  158A  	fcall	_LCD_Init
  1231  0841                     l4236:
  1232                           
  1233                           ;main encoder.c: 100:     LCD_Set_Cursor(1,1);
  1234  0841  01F6               	clrf	LCD_Set_Cursor@column
  1235  0842  0AF6               	incf	LCD_Set_Cursor@column,f
  1236  0843  3001               	movlw	1
  1237  0844  160A  158A  2751  120A  158A  	fcall	_LCD_Set_Cursor
  1238  0849                     l4238:
  1239                           
  1240                           ;main encoder.c: 101:     LCD_Write_String("do encoder");
  1241  0849  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1242  084A  00F8               	movwf	LCD_Write_String@str
  1243  084B  3080               	movlw	128
  1244  084C  00F9               	movwf	LCD_Write_String@str+1
  1245  084D  160A  158A  2334  120A  158A  	fcall	_LCD_Write_String
  1246  0852                     l4240:
  1247                           
  1248                           ;main encoder.c: 102:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1249  0852  301A               	movlw	26
  1250  0853  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0854  1303               	bcf	3,6	;RP1=0, select bank1
  1252  0855  00C8               	movwf	(??_main^(0+128)+2)
  1253  0856  305E               	movlw	94
  1254  0857  00C7               	movwf	(??_main^(0+128)+1)
  1255  0858  306D               	movlw	109
  1256  0859  00C6               	movwf	??_main^(0+128)
  1257  085A                     u7117:
  1258  085A  0BC6               	decfsz	??_main^(0+128),f
  1259  085B  285A               	goto	u7117
  1260  085C  0BC7               	decfsz	(??_main^(0+128)+1),f
  1261  085D  285A               	goto	u7117
  1262  085E  0BC8               	decfsz	(??_main^(0+128)+2),f
  1263  085F  285A               	goto	u7117
  1264  0860  2861               	nop2
  1265  0861                     l4242:
  1266                           
  1267                           ;main encoder.c: 103:     LCD_Clear();
  1268  0861  160A  118A  20C0  120A  158A  	fcall	_LCD_Clear
  1269  0866                     l4244:
  1270                           
  1271                           ;main encoder.c: 106:     {;main encoder.c: 107:         TMR1H=0;
  1272  0866  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0867  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0868  018F               	clrf	15	;volatile
  1275  0869                     l4246:
  1276                           
  1277                           ;main encoder.c: 108:         TMR1L=0;
  1278  0869  018E               	clrf	14	;volatile
  1279  086A                     l84:	
  1280                           ;main encoder.c: 109:         while(RB0==1);
  1281                           
  1282  086A  1806               	btfsc	6,0	;volatile
  1283  086B  286D               	goto	u6991
  1284  086C  286E               	goto	u6990
  1285  086D                     u6991:
  1286  086D  286A               	goto	l84
  1287  086E                     u6990:
  1288  086E                     l87:
  1289  086E  1C06               	btfss	6,0	;volatile
  1290  086F  2871               	goto	u7001
  1291  0870  2872               	goto	u7000
  1292  0871                     u7001:
  1293  0871  286E               	goto	l87
  1294  0872                     u7000:
  1295  0872                     l89:
  1296                           
  1297                           ;main encoder.c: 111:         TMR1ON=1;
  1298  0872  1410               	bsf	16,0	;volatile
  1299  0873                     l90:	
  1300                           ;main encoder.c: 112:         while(RB0==1);
  1301                           
  1302  0873  1806               	btfsc	6,0	;volatile
  1303  0874  2876               	goto	u7011
  1304  0875  2877               	goto	u7010
  1305  0876                     u7011:
  1306  0876  2873               	goto	l90
  1307  0877                     u7010:
  1308  0877                     l93:
  1309  0877  1C06               	btfss	6,0	;volatile
  1310  0878  287A               	goto	u7021
  1311  0879  287B               	goto	u7020
  1312  087A                     u7021:
  1313  087A  2877               	goto	l93
  1314  087B                     u7020:
  1315  087B                     l95:
  1316                           
  1317                           ;main encoder.c: 114:         TMR1ON=0;
  1318  087B  1010               	bcf	16,0	;volatile
  1319  087C                     l4248:
  1320                           
  1321                           ;main encoder.c: 116:         NumberOfTick = (TMR1H<<8) | TMR1L;
  1322  087C  080F               	movf	15,w	;volatile
  1323  087D  1683               	bsf	3,5	;RP0=1, select bank1
  1324  087E  1303               	bcf	3,6	;RP1=0, select bank1
  1325  087F  00D6               	movwf	(_NumberOfTick+1)^(0+128)
  1326  0880  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0881  1303               	bcf	3,6	;RP1=0, select bank0
  1328  0882  080E               	movf	14,w	;volatile
  1329  0883  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0884  1303               	bcf	3,6	;RP1=0, select bank1
  1331  0885  00D5               	movwf	_NumberOfTick^(0+128)
  1332  0886                     l4250:
  1333                           
  1334                           ;main encoder.c: 118:         fFrequency = 5000000.0/(NumberOfTick+u32NumberOfCounterOve
      +                          r*65536);
  1335  0886  0852               	movf	_u32NumberOfCounterOver^(0+128),w
  1336  0887  00C6               	movwf	??_main^(0+128)
  1337  0888  0853               	movf	(_u32NumberOfCounterOver+1)^(0+128),w
  1338  0889  00C7               	movwf	(??_main^(0+128)+1)
  1339  088A  01C8               	clrf	(??_main^(0+128)+2)
  1340  088B  01C9               	clrf	(??_main^(0+128)+3)
  1341  088C  3010               	movlw	16
  1342  088D                     u7035:
  1343  088D  1003               	clrc
  1344  088E  0DC6               	rlf	??_main^(0+128),f
  1345  088F  0DC7               	rlf	(??_main^(0+128)+1),f
  1346  0890  0DC8               	rlf	(??_main^(0+128)+2),f
  1347  0891  0DC9               	rlf	(??_main^(0+128)+3),f
  1348  0892                     u7030:
  1349  0892  3EFF               	addlw	-1
  1350  0893  1D03               	skipz
  1351  0894  288D               	goto	u7035
  1352  0895  0855               	movf	_NumberOfTick^(0+128),w
  1353  0896  00CA               	movwf	(??_main+4)^(0+128)
  1354  0897  0856               	movf	(_NumberOfTick+1)^(0+128),w
  1355  0898  00CB               	movwf	((??_main+4)^(0+128)+1)
  1356  0899  01CC               	clrf	((??_main+4)^(0+128)+2)
  1357  089A  01CD               	clrf	((??_main+4)^(0+128)+3)
  1358  089B  084A               	movf	(??_main+4)^(0+128),w
  1359  089C  07C6               	addwf	??_main^(0+128),f
  1360  089D  084B               	movf	(??_main+5)^(0+128),w
  1361  089E  1803               	skipnc
  1362  089F  0F4B               	incfsz	(??_main+5)^(0+128),w
  1363  08A0  28A2               	goto	u7040
  1364  08A1  28A3               	goto	u7041
  1365  08A2                     u7040:
  1366  08A2  07C7               	addwf	(??_main^(0+128)+1),f
  1367  08A3                     u7041:
  1368  08A3  084C               	movf	(??_main+6)^(0+128),w
  1369  08A4  1803               	skipnc
  1370  08A5  0F4C               	incfsz	(??_main+6)^(0+128),w
  1371  08A6  28A8               	goto	u7042
  1372  08A7  28A9               	goto	u7043
  1373  08A8                     u7042:
  1374  08A8  07C8               	addwf	(??_main^(0+128)+2),f
  1375  08A9                     u7043:
  1376  08A9  084D               	movf	(??_main+7)^(0+128),w
  1377  08AA  1803               	skipnc
  1378  08AB  0A4D               	incf	(??_main+7)^(0+128),w
  1379  08AC  07C9               	addwf	(??_main^(0+128)+3),f
  1380  08AD  0849               	movf	(??_main+3)^(0+128),w
  1381  08AE  00F5               	movwf	___xxtofl@val+3
  1382  08AF  0848               	movf	(??_main+2)^(0+128),w
  1383  08B0  00F4               	movwf	___xxtofl@val+2
  1384  08B1  0847               	movf	(??_main+1)^(0+128),w
  1385  08B2  00F3               	movwf	___xxtofl@val+1
  1386  08B3  0846               	movf	??_main^(0+128),w
  1387  08B4  00F2               	movwf	___xxtofl@val
  1388  08B5  3001               	movlw	1
  1389  08B6  160A  118A  2136  120A  158A  	fcall	___xxtofl
  1390  08BB  0875               	movf	?___xxtofl+3,w
  1391  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  1392  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  1393  08BE  00A9               	movwf	___fldiv@a+3
  1394  08BF  0874               	movf	?___xxtofl+2,w
  1395  08C0  00A8               	movwf	___fldiv@a+2
  1396  08C1  0873               	movf	?___xxtofl+1,w
  1397  08C2  00A7               	movwf	___fldiv@a+1
  1398  08C3  0872               	movf	?___xxtofl,w
  1399  08C4  00A6               	movwf	___fldiv@a
  1400  08C5  304A               	movlw	74
  1401  08C6  00AD               	movwf	___fldiv@b+3
  1402  08C7  3098               	movlw	152
  1403  08C8  00AC               	movwf	___fldiv@b+2
  1404  08C9  3096               	movlw	150
  1405  08CA  00AB               	movwf	___fldiv@b+1
  1406  08CB  3080               	movlw	128
  1407  08CC  00AA               	movwf	___fldiv@b
  1408  08CD  120A  118A  261A  120A  158A  	fcall	___fldiv
  1409  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  1410  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  1411  08D4  0829               	movf	?___fldiv+3,w
  1412  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  1413  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  1414  08D7  00D1               	movwf	(_fFrequency+3)^(0+128)
  1415  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  1416  08D9  1303               	bcf	3,6	;RP1=0, select bank0
  1417  08DA  0828               	movf	?___fldiv+2,w
  1418  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  1419  08DC  1303               	bcf	3,6	;RP1=0, select bank1
  1420  08DD  00D0               	movwf	(_fFrequency+2)^(0+128)
  1421  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  1422  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  1423  08E0  0827               	movf	?___fldiv+1,w
  1424  08E1  1683               	bsf	3,5	;RP0=1, select bank1
  1425  08E2  1303               	bcf	3,6	;RP1=0, select bank1
  1426  08E3  00CF               	movwf	(_fFrequency+1)^(0+128)
  1427  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  1428  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  1429  08E6  0826               	movf	?___fldiv,w
  1430  08E7  1683               	bsf	3,5	;RP0=1, select bank1
  1431  08E8  1303               	bcf	3,6	;RP1=0, select bank1
  1432  08E9  00CE               	movwf	_fFrequency^(0+128)
  1433  08EA                     l4252:
  1434                           
  1435                           ;main encoder.c: 120:         sprintf(&str[0], "%f", fFrequency);
  1436  08EA  30A9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1437  08EB  00FF               	movwf	btemp+1
  1438  08EC  087F               	movf	btemp+1,w
  1439  08ED  00A8               	movwf	sprintf@f^(0+128)
  1440  08EE  0851               	movf	(_fFrequency+3)^(0+128),w
  1441  08EF  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1442  08F0  0850               	movf	(_fFrequency+2)^(0+128),w
  1443  08F1  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1444  08F2  084F               	movf	(_fFrequency+1)^(0+128),w
  1445  08F3  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1446  08F4  084E               	movf	_fFrequency^(0+128),w
  1447  08F5  00A9               	movwf	(?_sprintf^(0+128)+1)
  1448  08F6  3090               	movlw	(low (_str| (0+256)))& (0+255)
  1449  08F7  120A  118A  2026  120A  158A  	fcall	_sprintf
  1450  08FC                     l4254:
  1451                           
  1452                           ;main encoder.c: 121:         LCD_Set_Cursor(1,1);
  1453  08FC  01F6               	clrf	LCD_Set_Cursor@column
  1454  08FD  0AF6               	incf	LCD_Set_Cursor@column,f
  1455  08FE  3001               	movlw	1
  1456  08FF  160A  158A  2751  120A  158A  	fcall	_LCD_Set_Cursor
  1457  0904                     l4256:
  1458                           
  1459                           ;main encoder.c: 122:         LCD_Write_String(&str[0]);
  1460  0904  3090               	movlw	(low (_str| (0+256)))& (0+255)
  1461  0905  00F8               	movwf	LCD_Write_String@str
  1462  0906  3001               	movlw	1
  1463  0907  00F9               	movwf	LCD_Write_String@str+1
  1464  0908  160A  158A  2334  120A  158A  	fcall	_LCD_Write_String
  1465  090D                     l4258:
  1466                           
  1467                           ;main encoder.c: 124:         u32NumberOfCounterOver = 0;
  1468  090D  1683               	bsf	3,5	;RP0=1, select bank1
  1469  090E  1303               	bcf	3,6	;RP1=0, select bank1
  1470  090F  01D2               	clrf	_u32NumberOfCounterOver^(0+128)
  1471  0910  01D3               	clrf	(_u32NumberOfCounterOver+1)^(0+128)
  1472  0911                     l4260:
  1473                           
  1474                           ;main encoder.c: 127:         LCD_Set_Cursor(2,1);
  1475  0911  01F6               	clrf	LCD_Set_Cursor@column
  1476  0912  0AF6               	incf	LCD_Set_Cursor@column,f
  1477  0913  3002               	movlw	2
  1478  0914  160A  158A  2751  120A  158A  	fcall	_LCD_Set_Cursor
  1479  0919                     l4262:
  1480                           
  1481                           ;main encoder.c: 128:         if(chieu_quay == 1)
  1482  0919  1683               	bsf	3,5	;RP0=1, select bank1
  1483  091A  1303               	bcf	3,6	;RP1=0, select bank1
  1484  091B  0354               	decf	_chieu_quay^(0+128),w
  1485  091C  1D03               	btfss	3,2
  1486  091D  291F               	goto	u7051
  1487  091E  2920               	goto	u7050
  1488  091F                     u7051:
  1489  091F  292A               	goto	l4266
  1490  0920                     u7050:
  1491  0920                     l4264:
  1492                           
  1493                           ;main encoder.c: 129:         {;main encoder.c: 130:             LCD_Write_String("thuan
      +                          ");
  1494  0920  30A3               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1495  0921  00F8               	movwf	LCD_Write_String@str
  1496  0922  3080               	movlw	128
  1497  0923  00F9               	movwf	LCD_Write_String@str+1
  1498  0924  160A  158A  2334  120A  158A  	fcall	_LCD_Write_String
  1499                           
  1500                           ;main encoder.c: 131:         }
  1501  0929  2866               	goto	l4244
  1502  092A                     l4266:
  1503  092A  0854               	movf	_chieu_quay^(0+128),w
  1504  092B  1D03               	btfss	3,2
  1505  092C  292E               	goto	u7061
  1506  092D  292F               	goto	u7060
  1507  092E                     u7061:
  1508  092E  2866               	goto	l4244
  1509  092F                     u7060:
  1510  092F                     l4268:
  1511                           
  1512                           ;main encoder.c: 133:         {;main encoder.c: 134:             LCD_Write_String("nghic
      +                          h");
  1513  092F  309C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1514  0930  00F8               	movwf	LCD_Write_String@str
  1515  0931  3080               	movlw	128
  1516  0932  00F9               	movwf	LCD_Write_String@str+1
  1517  0933  160A  158A  2334  120A  158A  	fcall	_LCD_Write_String
  1518  0938  2866               	goto	l4244
  1519  0939  120A  118A  280C   	ljmp	start
  1520  093C                     __end_of_main:
  1521                           
  1522                           	psect	text1
  1523  1A54                     __ptext1:	
  1524 ;; *************** function _timer1_config *****************
  1525 ;; Defined at:
  1526 ;;		line 48 in file "main encoder.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		None
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function _timer1_config
  1556  1A54                     _timer1_config:
  1557  1A54                     l3260:	
  1558                           ;incstack = 0
  1559                           ; Regs used in _timer1_config: []
  1560                           
  1561                           
  1562                           ;main encoder.c: 50:     GIE=1;
  1563  1A54  178B               	bsf	11,7	;volatile
  1564                           
  1565                           ;main encoder.c: 51:     PEIE=1;
  1566  1A55  170B               	bsf	11,6	;volatile
  1567                           
  1568                           ;main encoder.c: 52:     TMR1IE=1;
  1569  1A56  1683               	bsf	3,5	;RP0=1, select bank1
  1570  1A57  1303               	bcf	3,6	;RP1=0, select bank1
  1571  1A58  140C               	bsf	12,0	;volatile
  1572                           
  1573                           ;main encoder.c: 53:     TMR1IF=0;
  1574  1A59  1283               	bcf	3,5	;RP0=0, select bank0
  1575  1A5A  1303               	bcf	3,6	;RP1=0, select bank0
  1576  1A5B  100C               	bcf	12,0	;volatile
  1577                           
  1578                           ;main encoder.c: 55:     TMR1CS=0;
  1579  1A5C  1090               	bcf	16,1	;volatile
  1580                           
  1581                           ;main encoder.c: 57:     T1CKPS0=0;
  1582  1A5D  1210               	bcf	16,4	;volatile
  1583                           
  1584                           ;main encoder.c: 58:     T1CKPS1=0;
  1585  1A5E  1290               	bcf	16,5	;volatile
  1586  1A5F                     l68:
  1587  1A5F  0008               	return
  1588  1A60                     __end_of_timer1_config:
  1589                           
  1590                           	psect	text2
  1591  0026                     __ptext2:	
  1592 ;; *************** function _sprintf *****************
  1593 ;; Defined at:
  1594 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  sp              1    wreg     PTR unsigned char 
  1597 ;;		 -> str(30), 
  1598 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1599 ;;		 -> STR_2(3), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  sp              1   28[BANK1 ] PTR unsigned char 
  1602 ;;		 -> str(30), 
  1603 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1604 ;;  tmpval          4   29[BANK1 ] struct .
  1605 ;;  val             4   22[BANK1 ] unsigned long 
  1606 ;;  eexp            2   26[BANK1 ] int 
  1607 ;;  prec            2   20[BANK1 ] int 
  1608 ;;  flag            2   18[BANK1 ] unsigned short 
  1609 ;;  cp              2    0        PTR const unsigned char 
  1610 ;;  len             2    0        unsigned int 
  1611 ;;  width           2    0        int 
  1612 ;;  c               1   37[BANK1 ] unsigned char 
  1613 ;;  ap              1   17[BANK1 ] PTR void [1]
  1614 ;;		 -> ?_sprintf(2), 
  1615 ;;  d               1    0        unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2    8[BANK1 ] int 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         0       0       5       0       0
  1626 ;;      Locals:         0       0      25       0       0
  1627 ;;      Temps:          0       5       0       0       0
  1628 ;;      Totals:         0       5      30       0       0
  1629 ;;Total ram usage:       35 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    4
  1632 ;; This function calls:
  1633 ;;		___awdiv
  1634 ;;		___fladd
  1635 ;;		___fleq
  1636 ;;		___flge
  1637 ;;		___flmul
  1638 ;;		___flneg
  1639 ;;		___flsub
  1640 ;;		___fltol
  1641 ;;		___lldiv
  1642 ;;		___llmod
  1643 ;;		___wmul
  1644 ;;		___xxtofl
  1645 ;;		__div_to_l_
  1646 ;;		__tdiv_to_l_
  1647 ;;		_fround
  1648 ;;		_scale
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _sprintf
  1656  0026                     _sprintf:
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1660                           ;sprintf@sp stored from wreg
  1661  0026  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0027  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0028  00BC               	movwf	sprintf@sp^(0+128)
  1664  0029                     l4046:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1667  0029  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1668  002A  00FF               	movwf	btemp+1
  1669  002B  087F               	movf	btemp+1,w
  1670  002C  00B1               	movwf	sprintf@ap^(0+128)
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1673  002D  2DFF               	goto	l4210
  1674  002E                     l4048:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1677  002E  3025               	movlw	37
  1678  002F  0645               	xorwf	sprintf@c^(0+128),w
  1679  0030  1903               	btfsc	3,2
  1680  0031  2833               	goto	u6721
  1681  0032  2834               	goto	u6720
  1682  0033                     u6721:
  1683  0033  2840               	goto	l4054
  1684  0034                     u6720:
  1685  0034                     l4050:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1688  0034  0845               	movf	sprintf@c^(0+128),w
  1689  0035  00FF               	movwf	btemp+1
  1690  0036  083C               	movf	sprintf@sp^(0+128),w
  1691  0037  0084               	movwf	4
  1692  0038  087F               	movf	btemp+1,w
  1693  0039  1783               	bsf	3,7	;select IRP bank2
  1694  003A  0080               	movwf	0
  1695  003B                     l4052:
  1696  003B  3001               	movlw	1
  1697  003C  00FF               	movwf	btemp+1
  1698  003D  087F               	movf	btemp+1,w
  1699  003E  07BC               	addwf	sprintf@sp^(0+128),f
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  1702  003F  2DFF               	goto	l4210
  1703  0040                     l4054:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1706  0040  01B2               	clrf	sprintf@flag^(0+128)
  1707  0041  01B3               	clrf	(sprintf@flag+1)^(0+128)
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1710  0042  2847               	goto	l4058
  1711  0043                     l298:	
  1712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1713                           
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1716  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1717  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1718  0045  1533               	bsf	(sprintf@flag^(0+128)+1),2
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 690:    break;
  1721  0046  2863               	goto	l4060
  1722  0047                     l4058:
  1723  0047  3001               	movlw	1
  1724  0048  07A8               	addwf	sprintf@f^(0+128),f
  1725  0049  30FF               	movlw	-1
  1726  004A  0728               	addwf	sprintf@f^(0+128),w
  1727  004B  0084               	movwf	4
  1728  004C  160A  118A  200A  120A  118A  	fcall	stringdir
  1729  0051  00C5               	movwf	sprintf@c^(0+128)
  1730  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0054  00EA               	movwf	??_sprintf
  1733  0055  01EB               	clrf	??_sprintf+1
  1734                           
  1735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1736                           ; Switch size 1, requested type "simple"
  1737                           ; Number of cases is 1, Range of values is 0 to 0
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte            4     3 (average)
  1741                           ; direct_byte           11     8 (fixed)
  1742                           ; jumptable            260     6 (fixed)
  1743                           ;	Chosen strategy is simple_byte
  1744  0056  086B               	movf	??_sprintf+1,w
  1745  0057  3A00               	xorlw	0	; case 0
  1746  0058  1903               	skipnz
  1747  0059  285B               	goto	l4338
  1748  005A  2DFF               	goto	l4210
  1749  005B                     l4338:
  1750                           
  1751                           ; Switch size 1, requested type "simple"
  1752                           ; Number of cases is 2, Range of values is 0 to 102
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte            7     4 (average)
  1756                           ; jumptable            260     6 (fixed)
  1757                           ;	Chosen strategy is simple_byte
  1758  005B  086A               	movf	??_sprintf,w
  1759  005C  3A00               	xorlw	0	; case 0
  1760  005D  1903               	skipnz
  1761  005E  2E13               	goto	l4212
  1762  005F  3A66               	xorlw	102	; case 102
  1763  0060  1903               	skipnz
  1764  0061  2843               	goto	l298
  1765  0062  2DFF               	goto	l4210
  1766  0063                     l4060:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1769  0063  3000               	movlw	0
  1770  0064  0532               	andwf	sprintf@flag^(0+128),w
  1771  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0067  00EA               	movwf	??_sprintf
  1774  0068  3007               	movlw	7
  1775  0069  1683               	bsf	3,5	;RP0=1, select bank1
  1776  006A  1303               	bcf	3,6	;RP1=0, select bank1
  1777  006B  0533               	andwf	(sprintf@flag+1)^(0+128),w
  1778  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1779  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1780  006E  00EB               	movwf	??_sprintf+1
  1781  006F  086A               	movf	??_sprintf,w
  1782  0070  046B               	iorwf	??_sprintf+1,w
  1783  0071  1903               	btfsc	3,2
  1784  0072  2874               	goto	u6731
  1785  0073  2875               	goto	u6730
  1786  0074                     u6731:
  1787  0074  2DE1               	goto	l4204
  1788  0075                     u6730:
  1789  0075                     l4062:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1792  0075  3006               	movlw	6
  1793  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1794  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1795  0078  00B4               	movwf	sprintf@prec^(0+128)
  1796  0079  3000               	movlw	0
  1797  007A  00B5               	movwf	(sprintf@prec^(0+128)+1)
  1798  007B                     l4064:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1801  007B  0831               	movf	sprintf@ap^(0+128),w
  1802  007C  0084               	movwf	4
  1803  007D  1383               	bcf	3,7	;select IRP bank0
  1804  007E  0800               	movf	0,w
  1805  007F  00C1               	movwf	sprintf@fval^(0+128)
  1806  0080  0A84               	incf	4,f
  1807  0081  0800               	movf	0,w
  1808  0082  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1809  0083  0A84               	incf	4,f
  1810  0084  0800               	movf	0,w
  1811  0085  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1812  0086  0A84               	incf	4,f
  1813  0087  0800               	movf	0,w
  1814  0088  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1815  0089                     l4066:
  1816  0089  3004               	movlw	4
  1817  008A  00FF               	movwf	btemp+1
  1818  008B  087F               	movf	btemp+1,w
  1819  008C  07B1               	addwf	sprintf@ap^(0+128),f
  1820  008D                     l4068:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1823  008D  0844               	movf	(sprintf@fval+3)^(0+128),w
  1824  008E  00F5               	movwf	___flge@ff1+3
  1825  008F  0843               	movf	(sprintf@fval+2)^(0+128),w
  1826  0090  00F4               	movwf	___flge@ff1+2
  1827  0091  0842               	movf	(sprintf@fval+1)^(0+128),w
  1828  0092  00F3               	movwf	___flge@ff1+1
  1829  0093  0841               	movf	sprintf@fval^(0+128),w
  1830  0094  00F2               	movwf	___flge@ff1
  1831  0095  3000               	movlw	0
  1832  0096  00F9               	movwf	___flge@ff2+3
  1833  0097  3000               	movlw	0
  1834  0098  00F8               	movwf	___flge@ff2+2
  1835  0099  3000               	movlw	0
  1836  009A  00F7               	movwf	___flge@ff2+1
  1837  009B  3000               	movlw	0
  1838  009C  00F6               	movwf	___flge@ff2
  1839  009D  160A  158A  26AD  120A  118A  	fcall	___flge
  1840  00A2  1803               	btfsc	3,0
  1841  00A3  28A5               	goto	u6741
  1842  00A4  28A6               	goto	u6740
  1843  00A5                     u6741:
  1844  00A5  28C3               	goto	l4074
  1845  00A6                     u6740:
  1846  00A6                     l4070:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1849  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1850  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1851  00A8  0844               	movf	(sprintf@fval+3)^(0+128),w
  1852  00A9  00F5               	movwf	___flneg@f1+3
  1853  00AA  0843               	movf	(sprintf@fval+2)^(0+128),w
  1854  00AB  00F4               	movwf	___flneg@f1+2
  1855  00AC  0842               	movf	(sprintf@fval+1)^(0+128),w
  1856  00AD  00F3               	movwf	___flneg@f1+1
  1857  00AE  0841               	movf	sprintf@fval^(0+128),w
  1858  00AF  00F2               	movwf	___flneg@f1
  1859  00B0  160A  158A  2249  120A  118A  	fcall	___flneg
  1860  00B5  0875               	movf	?___flneg+3,w
  1861  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  1862  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  1863  00B8  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1864  00B9  0874               	movf	?___flneg+2,w
  1865  00BA  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1866  00BB  0873               	movf	?___flneg+1,w
  1867  00BC  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1868  00BD  0872               	movf	?___flneg,w
  1869  00BE  00C1               	movwf	sprintf@fval^(0+128)
  1870  00BF                     l4072:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1873  00BF  3003               	movlw	3
  1874  00C0  04B2               	iorwf	sprintf@flag^(0+128),f
  1875  00C1  3000               	movlw	0
  1876  00C2  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  1877  00C3                     l4074:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1880  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1881  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1882  00C5  01BA               	clrf	sprintf@eexp^(0+128)
  1883  00C6  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  1884  00C7                     l4076:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1887  00C7  0844               	movf	(sprintf@fval+3)^(0+128),w
  1888  00C8  00F5               	movwf	___fleq@ff1+3
  1889  00C9  0843               	movf	(sprintf@fval+2)^(0+128),w
  1890  00CA  00F4               	movwf	___fleq@ff1+2
  1891  00CB  0842               	movf	(sprintf@fval+1)^(0+128),w
  1892  00CC  00F3               	movwf	___fleq@ff1+1
  1893  00CD  0841               	movf	sprintf@fval^(0+128),w
  1894  00CE  00F2               	movwf	___fleq@ff1
  1895  00CF  3000               	movlw	0
  1896  00D0  00F9               	movwf	___fleq@ff2+3
  1897  00D1  3000               	movlw	0
  1898  00D2  00F8               	movwf	___fleq@ff2+2
  1899  00D3  3000               	movlw	0
  1900  00D4  00F7               	movwf	___fleq@ff2+1
  1901  00D5  3000               	movlw	0
  1902  00D6  00F6               	movwf	___fleq@ff2
  1903  00D7  160A  158A  23C0  120A  118A  	fcall	___fleq
  1904  00DC  1803               	btfsc	3,0
  1905  00DD  28DF               	goto	u6751
  1906  00DE  28E0               	goto	u6750
  1907  00DF                     u6751:
  1908  00DF  29E0               	goto	l4102
  1909  00E0                     u6750:
  1910  00E0                     l4078:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1913  00E0  1003               	clrc
  1914  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1915  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1916  00E3  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  1917  00E4  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  1918  00E5  3E82               	addlw	130
  1919  00E6  00BA               	movwf	sprintf@eexp^(0+128)
  1920  00E7  30FF               	movlw	255
  1921  00E8  1803               	skipnc
  1922  00E9  3000               	movlw	0
  1923  00EA  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  1924  00EB                     l4080:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1927  00EB  30FF               	movlw	255
  1928  00EC  07BA               	addwf	sprintf@eexp^(0+128),f
  1929  00ED  1803               	skipnc
  1930  00EE  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1931  00EF  30FF               	movlw	255
  1932  00F0  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1933  00F1                     l4082:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1936  00F1  3003               	movlw	3
  1937  00F2  00F2               	movwf	___wmul@multiplier
  1938  00F3  3000               	movlw	0
  1939  00F4  00F3               	movwf	___wmul@multiplier+1
  1940  00F5  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1941  00F6  00F5               	movwf	___wmul@multiplicand+1
  1942  00F7  083A               	movf	sprintf@eexp^(0+128),w
  1943  00F8  00F4               	movwf	___wmul@multiplicand
  1944  00F9  160A  158A  229C  120A  118A  	fcall	___wmul
  1945  00FE  0873               	movf	?___wmul+1,w
  1946  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1947  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1948  0101  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1949  0102  0872               	movf	?___wmul,w
  1950  0103  00BA               	movwf	sprintf@eexp^(0+128)
  1951  0104                     l4084:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1954  0104  300A               	movlw	10
  1955  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0107  00A0               	movwf	___awdiv@divisor
  1958  0108  3000               	movlw	0
  1959  0109  00A1               	movwf	___awdiv@divisor+1
  1960  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1961  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1962  010C  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1963  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1964  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1965  010F  00A3               	movwf	___awdiv@dividend+1
  1966  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1968  0112  083A               	movf	sprintf@eexp^(0+128),w
  1969  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0115  00A2               	movwf	___awdiv@dividend
  1972  0116  160A  118A  20CD  120A  118A  	fcall	___awdiv
  1973  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1974  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1975  011D  0821               	movf	?___awdiv+1,w
  1976  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1977  011F  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0120  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1979  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0123  0820               	movf	?___awdiv,w
  1982  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1984  0126  00BA               	movwf	sprintf@eexp^(0+128)
  1985  0127                     l4086:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1988  0127  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  1989  0128  292A               	goto	u6761
  1990  0129  292B               	goto	u6760
  1991  012A                     u6761:
  1992  012A  2931               	goto	l4090
  1993  012B                     u6760:
  1994  012B                     l4088:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1997  012B  30FF               	movlw	255
  1998  012C  07BA               	addwf	sprintf@eexp^(0+128),f
  1999  012D  1803               	skipnc
  2000  012E  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2001  012F  30FF               	movlw	255
  2002  0130  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2003  0131                     l4090:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2006  0131  033A               	decf	sprintf@eexp^(0+128),w
  2007  0132  3AFF               	xorlw	255
  2008  0133  120A  158A  249D  120A  118A  	fcall	_scale
  2009  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2011  013A  0845               	movf	?_scale+3,w
  2012  013B  1683               	bsf	3,5	;RP0=1, select bank1
  2013  013C  1303               	bcf	3,6	;RP1=0, select bank1
  2014  013D  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  2015  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2016  013F  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0140  0844               	movf	?_scale+2,w
  2018  0141  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0142  1303               	bcf	3,6	;RP1=0, select bank1
  2020  0143  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  2021  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0146  0843               	movf	?_scale+1,w
  2024  0147  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0148  1303               	bcf	3,6	;RP1=0, select bank1
  2026  0149  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  2027  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2028  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2029  014C  0842               	movf	?_scale,w
  2030  014D  1683               	bsf	3,5	;RP0=1, select bank1
  2031  014E  1303               	bcf	3,6	;RP1=0, select bank1
  2032  014F  00BD               	movwf	sprintf@tmpval^(0+128)
  2033  0150                     l4092:
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2036  0150  0844               	movf	(sprintf@fval+3)^(0+128),w
  2037  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0153  00AB               	movwf	___flmul@b+3
  2040  0154  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0155  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0156  0843               	movf	(sprintf@fval+2)^(0+128),w
  2043  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0159  00AA               	movwf	___flmul@b+2
  2046  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2047  015B  1303               	bcf	3,6	;RP1=0, select bank1
  2048  015C  0842               	movf	(sprintf@fval+1)^(0+128),w
  2049  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2050  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2051  015F  00A9               	movwf	___flmul@b+1
  2052  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2053  0161  1303               	bcf	3,6	;RP1=0, select bank1
  2054  0162  0841               	movf	sprintf@fval^(0+128),w
  2055  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0165  00A8               	movwf	___flmul@b
  2058  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0167  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0168  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2061  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2062  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2063  016B  00AF               	movwf	___flmul@a+3
  2064  016C  1683               	bsf	3,5	;RP0=1, select bank1
  2065  016D  1303               	bcf	3,6	;RP1=0, select bank1
  2066  016E  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2067  016F  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0170  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0171  00AE               	movwf	___flmul@a+2
  2070  0172  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0173  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0174  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2073  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0177  00AD               	movwf	___flmul@a+1
  2076  0178  1683               	bsf	3,5	;RP0=1, select bank1
  2077  0179  1303               	bcf	3,6	;RP1=0, select bank1
  2078  017A  083D               	movf	sprintf@tmpval^(0+128),w
  2079  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2080  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2081  017D  00AC               	movwf	___flmul@a
  2082  017E  120A  158A  213C  120A  118A  	fcall	___flmul
  2083  0183  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0184  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0185  082B               	movf	?___flmul+3,w
  2086  0186  1683               	bsf	3,5	;RP0=1, select bank1
  2087  0187  1303               	bcf	3,6	;RP1=0, select bank1
  2088  0188  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  2089  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2090  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2091  018B  082A               	movf	?___flmul+2,w
  2092  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2093  018D  1303               	bcf	3,6	;RP1=0, select bank1
  2094  018E  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  2095  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0191  0829               	movf	?___flmul+1,w
  2098  0192  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0193  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0194  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  2101  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0197  0828               	movf	?___flmul,w
  2104  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2106  019A  00BD               	movwf	sprintf@tmpval^(0+128)
  2107  019B                     l4094:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2110  019B  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2111  019C  00F5               	movwf	___flge@ff1+3
  2112  019D  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2113  019E  00F4               	movwf	___flge@ff1+2
  2114  019F  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2115  01A0  00F3               	movwf	___flge@ff1+1
  2116  01A1  083D               	movf	sprintf@tmpval^(0+128),w
  2117  01A2  00F2               	movwf	___flge@ff1
  2118  01A3  303F               	movlw	63
  2119  01A4  00F9               	movwf	___flge@ff2+3
  2120  01A5  3080               	movlw	128
  2121  01A6  00F8               	movwf	___flge@ff2+2
  2122  01A7  3000               	movlw	0
  2123  01A8  00F7               	movwf	___flge@ff2+1
  2124  01A9  3000               	movlw	0
  2125  01AA  00F6               	movwf	___flge@ff2
  2126  01AB  160A  158A  26AD  120A  118A  	fcall	___flge
  2127  01B0  1803               	btfsc	3,0
  2128  01B1  29B3               	goto	u6771
  2129  01B2  29B4               	goto	u6770
  2130  01B3                     u6771:
  2131  01B3  29BD               	goto	l4098
  2132  01B4                     u6770:
  2133  01B4                     l4096:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2136  01B4  30FF               	movlw	255
  2137  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2138  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2139  01B7  07BA               	addwf	sprintf@eexp^(0+128),f
  2140  01B8  1803               	skipnc
  2141  01B9  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2142  01BA  30FF               	movlw	255
  2143  01BB  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2144  01BC  29E0               	goto	l4102
  2145  01BD                     l4098:
  2146  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2147  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2148  01BF  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2149  01C0  00F5               	movwf	___flge@ff1+3
  2150  01C1  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2151  01C2  00F4               	movwf	___flge@ff1+2
  2152  01C3  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2153  01C4  00F3               	movwf	___flge@ff1+1
  2154  01C5  083D               	movf	sprintf@tmpval^(0+128),w
  2155  01C6  00F2               	movwf	___flge@ff1
  2156  01C7  3041               	movlw	65
  2157  01C8  00F9               	movwf	___flge@ff2+3
  2158  01C9  3020               	movlw	32
  2159  01CA  00F8               	movwf	___flge@ff2+2
  2160  01CB  3000               	movlw	0
  2161  01CC  00F7               	movwf	___flge@ff2+1
  2162  01CD  3000               	movlw	0
  2163  01CE  00F6               	movwf	___flge@ff2
  2164  01CF  160A  158A  26AD  120A  118A  	fcall	___flge
  2165  01D4  1C03               	btfss	3,0
  2166  01D5  29D7               	goto	u6781
  2167  01D6  29D8               	goto	u6780
  2168  01D7                     u6781:
  2169  01D7  29E0               	goto	l4102
  2170  01D8                     u6780:
  2171  01D8                     l4100:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2174  01D8  3001               	movlw	1
  2175  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2176  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2177  01DB  07BA               	addwf	sprintf@eexp^(0+128),f
  2178  01DC  1803               	skipnc
  2179  01DD  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2180  01DE  3000               	movlw	0
  2181  01DF  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2182  01E0                     l4102:
  2183  01E0                     l4104:	
  2184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2185                           
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2188  01E0  3006               	movlw	6
  2189  01E1  160A  118A  236D  120A  118A  	fcall	_fround
  2190  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2191  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2192  01E8  0845               	movf	?_fround+3,w
  2193  01E9  00D9               	movwf	___fladd@b+3
  2194  01EA  0844               	movf	?_fround+2,w
  2195  01EB  00D8               	movwf	___fladd@b+2
  2196  01EC  0843               	movf	?_fround+1,w
  2197  01ED  00D7               	movwf	___fladd@b+1
  2198  01EE  0842               	movf	?_fround,w
  2199  01EF  00D6               	movwf	___fladd@b
  2200  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2201  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2202  01F2  0844               	movf	(sprintf@fval+3)^(0+128),w
  2203  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2204  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2205  01F5  00DD               	movwf	___fladd@a+3
  2206  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2207  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2208  01F8  0843               	movf	(sprintf@fval+2)^(0+128),w
  2209  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2210  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2211  01FB  00DC               	movwf	___fladd@a+2
  2212  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  2213  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  2214  01FE  0842               	movf	(sprintf@fval+1)^(0+128),w
  2215  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0201  00DB               	movwf	___fladd@a+1
  2218  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0204  0841               	movf	sprintf@fval^(0+128),w
  2221  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0207  00DA               	movwf	___fladd@a
  2224  0208  160A  118A  2578  120A  118A  	fcall	___fladd
  2225  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2226  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2227  020F  0859               	movf	?___fladd+3,w
  2228  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0211  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0212  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2231  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0215  0858               	movf	?___fladd+2,w
  2234  0216  1683               	bsf	3,5	;RP0=1, select bank1
  2235  0217  1303               	bcf	3,6	;RP1=0, select bank1
  2236  0218  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2237  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2238  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2239  021B  0857               	movf	?___fladd+1,w
  2240  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2241  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2242  021E  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2243  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0221  0856               	movf	?___fladd,w
  2246  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2248  0224  00C1               	movwf	sprintf@fval^(0+128)
  2249  0225                     l4106:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2252  0225  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2253  0226  3A80               	xorlw	128
  2254  0227  00FF               	movwf	btemp+1
  2255  0228  3080               	movlw	128
  2256  0229  027F               	subwf	btemp+1,w
  2257  022A  1D03               	skipz
  2258  022B  2A2E               	goto	u6795
  2259  022C  300A               	movlw	10
  2260  022D  023A               	subwf	sprintf@eexp^(0+128),w
  2261  022E                     u6795:
  2262  022E  1803               	skipnc
  2263  022F  2A31               	goto	u6791
  2264  0230  2A32               	goto	u6790
  2265  0231                     u6791:
  2266  0231  2A83               	goto	l4114
  2267  0232                     u6790:
  2268  0232                     l4108:
  2269  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0234  0844               	movf	(sprintf@fval+3)^(0+128),w
  2272  0235  00F5               	movwf	___fleq@ff1+3
  2273  0236  0843               	movf	(sprintf@fval+2)^(0+128),w
  2274  0237  00F4               	movwf	___fleq@ff1+2
  2275  0238  0842               	movf	(sprintf@fval+1)^(0+128),w
  2276  0239  00F3               	movwf	___fleq@ff1+1
  2277  023A  0841               	movf	sprintf@fval^(0+128),w
  2278  023B  00F2               	movwf	___fleq@ff1
  2279  023C  3000               	movlw	0
  2280  023D  00F9               	movwf	___fleq@ff2+3
  2281  023E  3000               	movlw	0
  2282  023F  00F8               	movwf	___fleq@ff2+2
  2283  0240  3000               	movlw	0
  2284  0241  00F7               	movwf	___fleq@ff2+1
  2285  0242  3000               	movlw	0
  2286  0243  00F6               	movwf	___fleq@ff2
  2287  0244  160A  158A  23C0  120A  118A  	fcall	___fleq
  2288  0249  1803               	btfsc	3,0
  2289  024A  2A4C               	goto	u6801
  2290  024B  2A4D               	goto	u6800
  2291  024C                     u6801:
  2292  024C  2AF5               	goto	l4128
  2293  024D                     u6800:
  2294  024D                     l4110:
  2295  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2296  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2297  024F  0844               	movf	(sprintf@fval+3)^(0+128),w
  2298  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0252  00D8               	movwf	___fltol@f1+3
  2301  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0254  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0255  0843               	movf	(sprintf@fval+2)^(0+128),w
  2304  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0258  00D7               	movwf	___fltol@f1+2
  2307  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2308  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2309  025B  0842               	movf	(sprintf@fval+1)^(0+128),w
  2310  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2311  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2312  025E  00D6               	movwf	___fltol@f1+1
  2313  025F  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0260  1303               	bcf	3,6	;RP1=0, select bank1
  2315  0261  0841               	movf	sprintf@fval^(0+128),w
  2316  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0264  00D5               	movwf	___fltol@f1
  2319  0265  160A  158A  2631  120A  118A  	fcall	___fltol
  2320  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2321  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2322  026C  0858               	movf	?___fltol+3,w
  2323  026D  0457               	iorwf	?___fltol+2,w
  2324  026E  0456               	iorwf	?___fltol+1,w
  2325  026F  0455               	iorwf	?___fltol,w
  2326  0270  1D03               	skipz
  2327  0271  2A73               	goto	u6811
  2328  0272  2A74               	goto	u6810
  2329  0273                     u6811:
  2330  0273  2AF5               	goto	l4128
  2331  0274                     u6810:
  2332  0274                     l4112:
  2333  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2334  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2335  0276  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2336  0277  3A80               	xorlw	128
  2337  0278  00FF               	movwf	btemp+1
  2338  0279  3080               	movlw	128
  2339  027A  027F               	subwf	btemp+1,w
  2340  027B  1D03               	skipz
  2341  027C  2A7F               	goto	u6825
  2342  027D  3002               	movlw	2
  2343  027E  023A               	subwf	sprintf@eexp^(0+128),w
  2344  027F                     u6825:
  2345  027F  1C03               	skipc
  2346  0280  2A82               	goto	u6821
  2347  0281  2A83               	goto	u6820
  2348  0282                     u6821:
  2349  0282  2AF5               	goto	l4128
  2350  0283                     u6820:
  2351  0283                     l4114:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2354  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0285  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2357  0286  00F5               	movwf	___flge@ff1+3
  2358  0287  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2359  0288  00F4               	movwf	___flge@ff1+2
  2360  0289  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2361  028A  00F3               	movwf	___flge@ff1+1
  2362  028B  083D               	movf	sprintf@tmpval^(0+128),w
  2363  028C  00F2               	movwf	___flge@ff1
  2364  028D  3040               	movlw	64
  2365  028E  00F9               	movwf	___flge@ff2+3
  2366  028F  3089               	movlw	137
  2367  0290  00F8               	movwf	___flge@ff2+2
  2368  0291  3070               	movlw	112
  2369  0292  00F7               	movwf	___flge@ff2+1
  2370  0293  305F               	movlw	95
  2371  0294  00F6               	movwf	___flge@ff2
  2372  0295  160A  158A  26AD  120A  118A  	fcall	___flge
  2373  029A  1803               	btfsc	3,0
  2374  029B  2A9D               	goto	u6831
  2375  029C  2A9E               	goto	u6830
  2376  029D                     u6831:
  2377  029D  2AA7               	goto	l4118
  2378  029E                     u6830:
  2379  029E                     l4116:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2382  029E  30F7               	movlw	247
  2383  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2384  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2385  02A1  07BA               	addwf	sprintf@eexp^(0+128),f
  2386  02A2  1803               	skipnc
  2387  02A3  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2388  02A4  30FF               	movlw	255
  2389  02A5  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2392  02A6  2AAF               	goto	l4120
  2393  02A7                     l4118:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2396  02A7  30F8               	movlw	248
  2397  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2398  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  2399  02AA  07BA               	addwf	sprintf@eexp^(0+128),f
  2400  02AB  1803               	skipnc
  2401  02AC  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2402  02AD  30FF               	movlw	255
  2403  02AE  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2404  02AF                     l4120:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2407  02AF  083A               	movf	sprintf@eexp^(0+128),w
  2408  02B0  120A  158A  249D  120A  118A  	fcall	_scale
  2409  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2410  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2411  02B7  0845               	movf	?_scale+3,w
  2412  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2413  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2414  02BA  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  2415  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2416  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2417  02BD  0844               	movf	?_scale+2,w
  2418  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2419  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2420  02C0  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  2421  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2422  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2423  02C3  0843               	movf	?_scale+1,w
  2424  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2425  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2426  02C6  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  2427  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2428  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2429  02C9  0842               	movf	?_scale,w
  2430  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2431  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  2432  02CC  00BD               	movwf	sprintf@tmpval^(0+128)
  2433  02CD                     l4122:
  2434  02CD  0844               	movf	(sprintf@fval+3)^(0+128),w
  2435  02CE  00F5               	movwf	__div_to_l_@f1+3
  2436  02CF  0843               	movf	(sprintf@fval+2)^(0+128),w
  2437  02D0  00F4               	movwf	__div_to_l_@f1+2
  2438  02D1  0842               	movf	(sprintf@fval+1)^(0+128),w
  2439  02D2  00F3               	movwf	__div_to_l_@f1+1
  2440  02D3  0841               	movf	sprintf@fval^(0+128),w
  2441  02D4  00F2               	movwf	__div_to_l_@f1
  2442  02D5  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2443  02D6  00F9               	movwf	__div_to_l_@f2+3
  2444  02D7  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2445  02D8  00F8               	movwf	__div_to_l_@f2+2
  2446  02D9  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2447  02DA  00F7               	movwf	__div_to_l_@f2+1
  2448  02DB  083D               	movf	sprintf@tmpval^(0+128),w
  2449  02DC  00F6               	movwf	__div_to_l_@f2
  2450  02DD  160A  118A  22AF  120A  118A  	fcall	__div_to_l_
  2451  02E2  0875               	movf	?__div_to_l_+3,w
  2452  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  2453  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  2454  02E5  00B9               	movwf	(sprintf@val+3)^(0+128)
  2455  02E6  0874               	movf	?__div_to_l_+2,w
  2456  02E7  00B8               	movwf	(sprintf@val+2)^(0+128)
  2457  02E8  0873               	movf	?__div_to_l_+1,w
  2458  02E9  00B7               	movwf	(sprintf@val+1)^(0+128)
  2459  02EA  0872               	movf	?__div_to_l_,w
  2460  02EB  00B6               	movwf	sprintf@val^(0+128)
  2461  02EC                     l4126:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2464  02EC  3000               	movlw	0
  2465  02ED  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2466  02EE  3000               	movlw	0
  2467  02EF  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2468  02F0  3000               	movlw	0
  2469  02F1  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2470  02F2  3000               	movlw	0
  2471  02F3  00C1               	movwf	sprintf@fval^(0+128)
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2474  02F4  2B5B               	goto	l4132
  2475  02F5                     l4128:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2478  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2479  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2480  02F7  0844               	movf	(sprintf@fval+3)^(0+128),w
  2481  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2482  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2483  02FA  00D8               	movwf	___fltol@f1+3
  2484  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2485  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2486  02FD  0843               	movf	(sprintf@fval+2)^(0+128),w
  2487  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2488  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0300  00D7               	movwf	___fltol@f1+2
  2490  0301  1683               	bsf	3,5	;RP0=1, select bank1
  2491  0302  1303               	bcf	3,6	;RP1=0, select bank1
  2492  0303  0842               	movf	(sprintf@fval+1)^(0+128),w
  2493  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0306  00D6               	movwf	___fltol@f1+1
  2496  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0308  1303               	bcf	3,6	;RP1=0, select bank1
  2498  0309  0841               	movf	sprintf@fval^(0+128),w
  2499  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2500  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2501  030C  00D5               	movwf	___fltol@f1
  2502  030D  160A  158A  2631  120A  118A  	fcall	___fltol
  2503  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0314  0858               	movf	?___fltol+3,w
  2506  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2508  0317  00B9               	movwf	(sprintf@val+3)^(0+128)
  2509  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2511  031A  0857               	movf	?___fltol+2,w
  2512  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2513  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2514  031D  00B8               	movwf	(sprintf@val+2)^(0+128)
  2515  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2516  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0320  0856               	movf	?___fltol+1,w
  2518  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0323  00B7               	movwf	(sprintf@val+1)^(0+128)
  2521  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0326  0855               	movf	?___fltol,w
  2524  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2525  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2526  0329  00B6               	movwf	sprintf@val^(0+128)
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2529  032A  0839               	movf	(sprintf@val+3)^(0+128),w
  2530  032B  00F5               	movwf	___xxtofl@val+3
  2531  032C  0838               	movf	(sprintf@val+2)^(0+128),w
  2532  032D  00F4               	movwf	___xxtofl@val+2
  2533  032E  0837               	movf	(sprintf@val+1)^(0+128),w
  2534  032F  00F3               	movwf	___xxtofl@val+1
  2535  0330  0836               	movf	sprintf@val^(0+128),w
  2536  0331  00F2               	movwf	___xxtofl@val
  2537  0332  3000               	movlw	0
  2538  0333  160A  118A  2136  120A  118A  	fcall	___xxtofl
  2539  0338  0875               	movf	?___xxtofl+3,w
  2540  0339  1683               	bsf	3,5	;RP0=1, select bank1
  2541  033A  1303               	bcf	3,6	;RP1=0, select bank1
  2542  033B  00A3               	movwf	(___flsub@a+3)^(0+128)
  2543  033C  0874               	movf	?___xxtofl+2,w
  2544  033D  00A2               	movwf	(___flsub@a+2)^(0+128)
  2545  033E  0873               	movf	?___xxtofl+1,w
  2546  033F  00A1               	movwf	(___flsub@a+1)^(0+128)
  2547  0340  0872               	movf	?___xxtofl,w
  2548  0341  00A0               	movwf	___flsub@a^(0+128)
  2549  0342  0844               	movf	(sprintf@fval+3)^(0+128),w
  2550  0343  00A7               	movwf	(___flsub@b+3)^(0+128)
  2551  0344  0843               	movf	(sprintf@fval+2)^(0+128),w
  2552  0345  00A6               	movwf	(___flsub@b+2)^(0+128)
  2553  0346  0842               	movf	(sprintf@fval+1)^(0+128),w
  2554  0347  00A5               	movwf	(___flsub@b+1)^(0+128)
  2555  0348  0841               	movf	sprintf@fval^(0+128),w
  2556  0349  00A4               	movwf	___flsub@b^(0+128)
  2557  034A  160A  158A  2410  120A  118A  	fcall	___flsub
  2558  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0350  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0351  0823               	movf	(?___flsub+3)^(0+128),w
  2561  0352  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2562  0353  0822               	movf	(?___flsub+2)^(0+128),w
  2563  0354  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2564  0355  0821               	movf	(?___flsub+1)^(0+128),w
  2565  0356  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2566  0357  0820               	movf	?___flsub^(0+128),w
  2567  0358  00C1               	movwf	sprintf@fval^(0+128)
  2568  0359                     l4130:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2571  0359  01BA               	clrf	sprintf@eexp^(0+128)
  2572  035A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  2573  035B                     l4132:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2576  035B  01C5               	clrf	sprintf@c^(0+128)
  2577  035C  0AC5               	incf	sprintf@c^(0+128),f
  2578  035D                     l4138:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2581  035D  0845               	movf	sprintf@c^(0+128),w
  2582  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2583  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0360  00EA               	movwf	??_sprintf
  2585  0361  3001               	movlw	1
  2586  0362                     u6845:
  2587  0362  1003               	clrc
  2588  0363  0DEA               	rlf	??_sprintf,f
  2589  0364  3EFF               	addlw	-1
  2590  0365  1D03               	skipz
  2591  0366  2B62               	goto	u6845
  2592  0367  1003               	clrc
  2593  0368  0D6A               	rlf	??_sprintf,w
  2594  0369  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2595  036A  0084               	movwf	4
  2596  036B  160A  118A  200A  120A  118A  	fcall	stringdir
  2597  0370  00EB               	movwf	??_sprintf+1
  2598  0371  160A  118A  200A  120A  118A  	fcall	stringdir
  2599  0376  00EC               	movwf	??_sprintf+2
  2600  0377  160A  118A  200A  120A  118A  	fcall	stringdir
  2601  037C  00ED               	movwf	??_sprintf+3
  2602  037D  160A  118A  200A  120A  118A  	fcall	stringdir
  2603  0382  00EE               	movwf	??_sprintf+4
  2604  0383  086E               	movf	??_sprintf+4,w
  2605  0384  1683               	bsf	3,5	;RP0=1, select bank1
  2606  0385  1303               	bcf	3,6	;RP1=0, select bank1
  2607  0386  0239               	subwf	(sprintf@val+3)^(0+128),w
  2608  0387  1D03               	skipz
  2609  0388  2B9F               	goto	u6855
  2610  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2611  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2612  038B  086D               	movf	??_sprintf+3,w
  2613  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2614  038D  1303               	bcf	3,6	;RP1=0, select bank1
  2615  038E  0238               	subwf	(sprintf@val+2)^(0+128),w
  2616  038F  1D03               	skipz
  2617  0390  2B9F               	goto	u6855
  2618  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0393  086C               	movf	??_sprintf+2,w
  2621  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2622  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2623  0396  0237               	subwf	(sprintf@val+1)^(0+128),w
  2624  0397  1D03               	skipz
  2625  0398  2B9F               	goto	u6855
  2626  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2627  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2628  039B  086B               	movf	??_sprintf+1,w
  2629  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2630  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2631  039E  0236               	subwf	sprintf@val^(0+128),w
  2632  039F                     u6855:
  2633  039F  1803               	skipnc
  2634  03A0  2BA2               	goto	u6851
  2635  03A1  2BA3               	goto	u6850
  2636  03A2                     u6851:
  2637  03A2  2BA4               	goto	l4142
  2638  03A3                     u6850:
  2639  03A3  2BAE               	goto	l4146
  2640  03A4                     l4142:
  2641  03A4  3001               	movlw	1
  2642  03A5  00FF               	movwf	btemp+1
  2643  03A6  087F               	movf	btemp+1,w
  2644  03A7  07C5               	addwf	sprintf@c^(0+128),f
  2645  03A8                     l4144:
  2646  03A8  300A               	movlw	10
  2647  03A9  0645               	xorwf	sprintf@c^(0+128),w
  2648  03AA  1D03               	btfss	3,2
  2649  03AB  2BAD               	goto	u6861
  2650  03AC  2BAE               	goto	u6860
  2651  03AD                     u6861:
  2652  03AD  2B5D               	goto	l4138
  2653  03AE                     u6860:
  2654  03AE                     l4146:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2657  03AE  3003               	movlw	3
  2658  03AF  0532               	andwf	sprintf@flag^(0+128),w
  2659  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2660  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2661  03B2  00EA               	movwf	??_sprintf
  2662  03B3  3000               	movlw	0
  2663  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2664  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2665  03B6  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2666  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2667  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2668  03B9  00EB               	movwf	??_sprintf+1
  2669  03BA  086A               	movf	??_sprintf,w
  2670  03BB  046B               	iorwf	??_sprintf+1,w
  2671  03BC  1903               	btfsc	3,2
  2672  03BD  2BBF               	goto	u6871
  2673  03BE  2BC0               	goto	u6870
  2674  03BF                     u6871:
  2675  03BF  2C38               	goto	l4158
  2676  03C0                     u6870:
  2677  03C0                     l4148:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2680  03C0  302D               	movlw	45
  2681  03C1  00FF               	movwf	btemp+1
  2682  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2683  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2684  03C4  083C               	movf	sprintf@sp^(0+128),w
  2685  03C5  0084               	movwf	4
  2686  03C6  087F               	movf	btemp+1,w
  2687  03C7  1783               	bsf	3,7	;select IRP bank2
  2688  03C8  0080               	movwf	0
  2689  03C9                     l4150:
  2690  03C9  3001               	movlw	1
  2691  03CA  00FF               	movwf	btemp+1
  2692  03CB  087F               	movf	btemp+1,w
  2693  03CC  07BC               	addwf	sprintf@sp^(0+128),f
  2694  03CD  2C38               	goto	l4158
  2695  03CE                     l4152:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2698  03CE  0845               	movf	sprintf@c^(0+128),w
  2699  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2700  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2701  03D1  00EA               	movwf	??_sprintf
  2702  03D2  3001               	movlw	1
  2703  03D3                     u6885:
  2704  03D3  1003               	clrc
  2705  03D4  0DEA               	rlf	??_sprintf,f
  2706  03D5  3EFF               	addlw	-1
  2707  03D6  1D03               	skipz
  2708  03D7  2BD3               	goto	u6885
  2709  03D8  1003               	clrc
  2710  03D9  0D6A               	rlf	??_sprintf,w
  2711  03DA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2712  03DB  0084               	movwf	4
  2713  03DC  160A  118A  200A  120A  118A  	fcall	stringdir
  2714  03E1  00F2               	movwf	___lldiv@divisor
  2715  03E2  160A  118A  200A  120A  118A  	fcall	stringdir
  2716  03E7  00F3               	movwf	___lldiv@divisor+1
  2717  03E8  160A  118A  200A  120A  118A  	fcall	stringdir
  2718  03ED  00F4               	movwf	___lldiv@divisor+2
  2719  03EE  160A  118A  200A  120A  118A  	fcall	stringdir
  2720  03F3  00F5               	movwf	___lldiv@divisor+3
  2721  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2722  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2723  03F6  0839               	movf	(sprintf@val+3)^(0+128),w
  2724  03F7  00F9               	movwf	___lldiv@dividend+3
  2725  03F8  0838               	movf	(sprintf@val+2)^(0+128),w
  2726  03F9  00F8               	movwf	___lldiv@dividend+2
  2727  03FA  0837               	movf	(sprintf@val+1)^(0+128),w
  2728  03FB  00F7               	movwf	___lldiv@dividend+1
  2729  03FC  0836               	movf	sprintf@val^(0+128),w
  2730  03FD  00F6               	movwf	___lldiv@dividend
  2731  03FE  160A  158A  25C9  120A  118A  	fcall	___lldiv
  2732  0403  0875               	movf	?___lldiv+3,w
  2733  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0406  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  2736  0407  0874               	movf	?___lldiv+2,w
  2737  0408  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  2738  0409  0873               	movf	?___lldiv+1,w
  2739  040A  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  2740  040B  0872               	movf	?___lldiv,w
  2741  040C  00BD               	movwf	sprintf@tmpval^(0+128)
  2742  040D                     l4154:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2745  040D  3000               	movlw	0
  2746  040E  00F5               	movwf	___llmod@divisor+3
  2747  040F  3000               	movlw	0
  2748  0410  00F4               	movwf	___llmod@divisor+2
  2749  0411  3000               	movlw	0
  2750  0412  00F3               	movwf	___llmod@divisor+1
  2751  0413  300A               	movlw	10
  2752  0414  00F2               	movwf	___llmod@divisor
  2753  0415  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2754  0416  00F9               	movwf	___llmod@dividend+3
  2755  0417  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2756  0418  00F8               	movwf	___llmod@dividend+2
  2757  0419  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2758  041A  00F7               	movwf	___llmod@dividend+1
  2759  041B  083D               	movf	sprintf@tmpval^(0+128),w
  2760  041C  00F6               	movwf	___llmod@dividend
  2761  041D  160A  158A  24B3  120A  118A  	fcall	___llmod
  2762  0422  0875               	movf	?___llmod+3,w
  2763  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0425  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  2766  0426  0874               	movf	?___llmod+2,w
  2767  0427  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  2768  0428  0873               	movf	?___llmod+1,w
  2769  0429  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  2770  042A  0872               	movf	?___llmod,w
  2771  042B  00BD               	movwf	sprintf@tmpval^(0+128)
  2772  042C                     l4156:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2775  042C  083D               	movf	sprintf@tmpval^(0+128),w
  2776  042D  3E30               	addlw	48
  2777  042E  00FF               	movwf	btemp+1
  2778  042F  083C               	movf	sprintf@sp^(0+128),w
  2779  0430  0084               	movwf	4
  2780  0431  087F               	movf	btemp+1,w
  2781  0432  1783               	bsf	3,7	;select IRP bank2
  2782  0433  0080               	movwf	0
  2783  0434  3001               	movlw	1
  2784  0435  00FF               	movwf	btemp+1
  2785  0436  087F               	movf	btemp+1,w
  2786  0437  07BC               	addwf	sprintf@sp^(0+128),f
  2787  0438                     l4158:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2790  0438  3001               	movlw	1
  2791  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2792  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2793  043B  02C5               	subwf	sprintf@c^(0+128),f
  2794  043C  0A45               	incf	sprintf@c^(0+128),w
  2795  043D  1D03               	btfss	3,2
  2796  043E  2C40               	goto	u6891
  2797  043F  2C41               	goto	u6890
  2798  0440                     u6891:
  2799  0440  2BCE               	goto	l4152
  2800  0441                     u6890:
  2801  0441  2C55               	goto	l4166
  2802  0442                     l4160:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2805  0442  3030               	movlw	48
  2806  0443  00FF               	movwf	btemp+1
  2807  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2808  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2809  0446  083C               	movf	sprintf@sp^(0+128),w
  2810  0447  0084               	movwf	4
  2811  0448  087F               	movf	btemp+1,w
  2812  0449  1783               	bsf	3,7	;select IRP bank2
  2813  044A  0080               	movwf	0
  2814  044B                     l4162:
  2815  044B  3001               	movlw	1
  2816  044C  00FF               	movwf	btemp+1
  2817  044D  087F               	movf	btemp+1,w
  2818  044E  07BC               	addwf	sprintf@sp^(0+128),f
  2819  044F                     l4164:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2822  044F  30FF               	movlw	255
  2823  0450  07BA               	addwf	sprintf@eexp^(0+128),f
  2824  0451  1803               	skipnc
  2825  0452  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2826  0453  30FF               	movlw	255
  2827  0454  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2828  0455                     l4166:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2831  0455  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2832  0456  3A80               	xorlw	128
  2833  0457  00FF               	movwf	btemp+1
  2834  0458  3080               	movlw	128
  2835  0459  027F               	subwf	btemp+1,w
  2836  045A  1D03               	skipz
  2837  045B  2C5E               	goto	u6905
  2838  045C  3001               	movlw	1
  2839  045D  023A               	subwf	sprintf@eexp^(0+128),w
  2840  045E                     u6905:
  2841  045E  1803               	skipnc
  2842  045F  2C61               	goto	u6901
  2843  0460  2C62               	goto	u6900
  2844  0461                     u6901:
  2845  0461  2C42               	goto	l4160
  2846  0462                     u6900:
  2847  0462                     l4168:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2850  0462  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0463  1303               	bcf	3,6	;RP1=0, select bank1
  2852  0464  0835               	movf	(sprintf@prec+1)^(0+128),w
  2853  0465  3A80               	xorlw	128
  2854  0466  00FF               	movwf	btemp+1
  2855  0467  3080               	movlw	128
  2856  0468  027F               	subwf	btemp+1,w
  2857  0469  1D03               	skipz
  2858  046A  2C6D               	goto	u6915
  2859  046B  3009               	movlw	9
  2860  046C  0234               	subwf	sprintf@prec^(0+128),w
  2861  046D                     u6915:
  2862  046D  1C03               	skipc
  2863  046E  2C70               	goto	u6911
  2864  046F  2C71               	goto	u6910
  2865  0470                     u6911:
  2866  0470  2C78               	goto	l4172
  2867  0471                     u6910:
  2868  0471                     l4170:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2871  0471  3008               	movlw	8
  2872  0472  00FF               	movwf	btemp+1
  2873  0473  087F               	movf	btemp+1,w
  2874  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0476  00C5               	movwf	sprintf@c^(0+128)
  2877  0477  2C7E               	goto	l4174
  2878  0478                     l4172:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2881  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2882  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2883  047A  0834               	movf	sprintf@prec^(0+128),w
  2884  047B  00FF               	movwf	btemp+1
  2885  047C  087F               	movf	btemp+1,w
  2886  047D  00C5               	movwf	sprintf@c^(0+128)
  2887  047E                     l4174:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2890  047E  0845               	movf	sprintf@c^(0+128),w
  2891  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0481  00EA               	movwf	??_sprintf
  2894  0482  01EB               	clrf	??_sprintf+1
  2895  0483  086A               	movf	??_sprintf,w
  2896  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2897  0485  1303               	bcf	3,6	;RP1=0, select bank1
  2898  0486  02B4               	subwf	sprintf@prec^(0+128),f
  2899  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2900  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2901  0489  086B               	movf	??_sprintf+1,w
  2902  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2903  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2904  048C  1C03               	skipc
  2905  048D  03B5               	decf	(sprintf@prec+1)^(0+128),f
  2906  048E  02B5               	subwf	(sprintf@prec+1)^(0+128),f
  2907  048F                     l4176:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2910  048F  0845               	movf	sprintf@c^(0+128),w
  2911  0490  1903               	btfsc	3,2
  2912  0491  2C93               	goto	u6921
  2913  0492  2C94               	goto	u6920
  2914  0493                     u6921:
  2915  0493  2C9F               	goto	l4182
  2916  0494                     u6920:
  2917  0494                     l4178:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2920  0494  302E               	movlw	46
  2921  0495  00FF               	movwf	btemp+1
  2922  0496  083C               	movf	sprintf@sp^(0+128),w
  2923  0497  0084               	movwf	4
  2924  0498  087F               	movf	btemp+1,w
  2925  0499  1783               	bsf	3,7	;select IRP bank2
  2926  049A  0080               	movwf	0
  2927  049B                     l4180:
  2928  049B  3001               	movlw	1
  2929  049C  00FF               	movwf	btemp+1
  2930  049D  087F               	movf	btemp+1,w
  2931  049E  07BC               	addwf	sprintf@sp^(0+128),f
  2932  049F                     l4182:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2935  049F  0845               	movf	sprintf@c^(0+128),w
  2936  04A0  120A  158A  249D  120A  118A  	fcall	_scale
  2937  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2938  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2939  04A7  0845               	movf	?_scale+3,w
  2940  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  2941  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  2942  04AA  00B0               	movwf	(_sprintf$930+3)^(0+128)
  2943  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2944  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2945  04AD  0844               	movf	?_scale+2,w
  2946  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  2947  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  2948  04B0  00AF               	movwf	(_sprintf$930+2)^(0+128)
  2949  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2950  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2951  04B3  0843               	movf	?_scale+1,w
  2952  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2953  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2954  04B6  00AE               	movwf	(_sprintf$930+1)^(0+128)
  2955  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2956  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2957  04B9  0842               	movf	?_scale,w
  2958  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2959  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2960  04BC  00AD               	movwf	_sprintf$930^(0+128)
  2961  04BD                     l4184:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2964  04BD  0830               	movf	(_sprintf$930+3)^(0+128),w
  2965  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2966  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2967  04C0  00AF               	movwf	___flmul@a+3
  2968  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2969  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  2970  04C3  082F               	movf	(_sprintf$930+2)^(0+128),w
  2971  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2972  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2973  04C6  00AE               	movwf	___flmul@a+2
  2974  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  2975  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  2976  04C9  082E               	movf	(_sprintf$930+1)^(0+128),w
  2977  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2978  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2979  04CC  00AD               	movwf	___flmul@a+1
  2980  04CD  1683               	bsf	3,5	;RP0=1, select bank1
  2981  04CE  1303               	bcf	3,6	;RP1=0, select bank1
  2982  04CF  082D               	movf	_sprintf$930^(0+128),w
  2983  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2984  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2985  04D2  00AC               	movwf	___flmul@a
  2986  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2987  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  2988  04D5  0844               	movf	(sprintf@fval+3)^(0+128),w
  2989  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2990  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2991  04D8  00AB               	movwf	___flmul@b+3
  2992  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2993  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  2994  04DB  0843               	movf	(sprintf@fval+2)^(0+128),w
  2995  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2996  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2997  04DE  00AA               	movwf	___flmul@b+2
  2998  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2999  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  3000  04E1  0842               	movf	(sprintf@fval+1)^(0+128),w
  3001  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3002  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3003  04E4  00A9               	movwf	___flmul@b+1
  3004  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3005  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3006  04E7  0841               	movf	sprintf@fval^(0+128),w
  3007  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3008  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  3009  04EA  00A8               	movwf	___flmul@b
  3010  04EB  120A  158A  213C  120A  118A  	fcall	___flmul
  3011  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3012  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  3013  04F2  082B               	movf	?___flmul+3,w
  3014  04F3  00D8               	movwf	___fltol@f1+3
  3015  04F4  082A               	movf	?___flmul+2,w
  3016  04F5  00D7               	movwf	___fltol@f1+2
  3017  04F6  0829               	movf	?___flmul+1,w
  3018  04F7  00D6               	movwf	___fltol@f1+1
  3019  04F8  0828               	movf	?___flmul,w
  3020  04F9  00D5               	movwf	___fltol@f1
  3021  04FA  160A  158A  2631  120A  118A  	fcall	___fltol
  3022  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0501  0858               	movf	?___fltol+3,w
  3025  0502  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0503  1303               	bcf	3,6	;RP1=0, select bank1
  3027  0504  00B9               	movwf	(sprintf@val+3)^(0+128)
  3028  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0507  0857               	movf	?___fltol+2,w
  3031  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0509  1303               	bcf	3,6	;RP1=0, select bank1
  3033  050A  00B8               	movwf	(sprintf@val+2)^(0+128)
  3034  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3035  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3036  050D  0856               	movf	?___fltol+1,w
  3037  050E  1683               	bsf	3,5	;RP0=1, select bank1
  3038  050F  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0510  00B7               	movwf	(sprintf@val+1)^(0+128)
  3040  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0513  0855               	movf	?___fltol,w
  3043  0514  1683               	bsf	3,5	;RP0=1, select bank1
  3044  0515  1303               	bcf	3,6	;RP1=0, select bank1
  3045  0516  00B6               	movwf	sprintf@val^(0+128)
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3048  0517  2DC1               	goto	l4194
  3049  0518                     l4186:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3052  0518  0845               	movf	sprintf@c^(0+128),w
  3053  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3054  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3055  051B  00EA               	movwf	??_sprintf
  3056  051C  3001               	movlw	1
  3057  051D                     u6935:
  3058  051D  1003               	clrc
  3059  051E  0DEA               	rlf	??_sprintf,f
  3060  051F  3EFF               	addlw	-1
  3061  0520  1D03               	skipz
  3062  0521  2D1D               	goto	u6935
  3063  0522  1003               	clrc
  3064  0523  0D6A               	rlf	??_sprintf,w
  3065  0524  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3066  0525  0084               	movwf	4
  3067  0526  160A  118A  200A  120A  118A  	fcall	stringdir
  3068  052B  00F2               	movwf	___lldiv@divisor
  3069  052C  160A  118A  200A  120A  118A  	fcall	stringdir
  3070  0531  00F3               	movwf	___lldiv@divisor+1
  3071  0532  160A  118A  200A  120A  118A  	fcall	stringdir
  3072  0537  00F4               	movwf	___lldiv@divisor+2
  3073  0538  160A  118A  200A  120A  118A  	fcall	stringdir
  3074  053D  00F5               	movwf	___lldiv@divisor+3
  3075  053E  1683               	bsf	3,5	;RP0=1, select bank1
  3076  053F  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0540  0839               	movf	(sprintf@val+3)^(0+128),w
  3078  0541  00F9               	movwf	___lldiv@dividend+3
  3079  0542  0838               	movf	(sprintf@val+2)^(0+128),w
  3080  0543  00F8               	movwf	___lldiv@dividend+2
  3081  0544  0837               	movf	(sprintf@val+1)^(0+128),w
  3082  0545  00F7               	movwf	___lldiv@dividend+1
  3083  0546  0836               	movf	sprintf@val^(0+128),w
  3084  0547  00F6               	movwf	___lldiv@dividend
  3085  0548  160A  158A  25C9  120A  118A  	fcall	___lldiv
  3086  054D  0875               	movf	?___lldiv+3,w
  3087  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3088  054F  1303               	bcf	3,6	;RP1=0, select bank1
  3089  0550  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  3090  0551  0874               	movf	?___lldiv+2,w
  3091  0552  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  3092  0553  0873               	movf	?___lldiv+1,w
  3093  0554  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  3094  0555  0872               	movf	?___lldiv,w
  3095  0556  00BD               	movwf	sprintf@tmpval^(0+128)
  3096  0557                     l4188:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3099  0557  3000               	movlw	0
  3100  0558  00F5               	movwf	___llmod@divisor+3
  3101  0559  3000               	movlw	0
  3102  055A  00F4               	movwf	___llmod@divisor+2
  3103  055B  3000               	movlw	0
  3104  055C  00F3               	movwf	___llmod@divisor+1
  3105  055D  300A               	movlw	10
  3106  055E  00F2               	movwf	___llmod@divisor
  3107  055F  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  3108  0560  00F9               	movwf	___llmod@dividend+3
  3109  0561  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  3110  0562  00F8               	movwf	___llmod@dividend+2
  3111  0563  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  3112  0564  00F7               	movwf	___llmod@dividend+1
  3113  0565  083D               	movf	sprintf@tmpval^(0+128),w
  3114  0566  00F6               	movwf	___llmod@dividend
  3115  0567  160A  158A  24B3  120A  118A  	fcall	___llmod
  3116  056C  0875               	movf	?___llmod+3,w
  3117  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3118  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3119  056F  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  3120  0570  0874               	movf	?___llmod+2,w
  3121  0571  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  3122  0572  0873               	movf	?___llmod+1,w
  3123  0573  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  3124  0574  0872               	movf	?___llmod,w
  3125  0575  00BD               	movwf	sprintf@tmpval^(0+128)
  3126  0576                     l4190:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3129  0576  083D               	movf	sprintf@tmpval^(0+128),w
  3130  0577  3E30               	addlw	48
  3131  0578  00FF               	movwf	btemp+1
  3132  0579  083C               	movf	sprintf@sp^(0+128),w
  3133  057A  0084               	movwf	4
  3134  057B  087F               	movf	btemp+1,w
  3135  057C  1783               	bsf	3,7	;select IRP bank2
  3136  057D  0080               	movwf	0
  3137  057E  3001               	movlw	1
  3138  057F  00FF               	movwf	btemp+1
  3139  0580  087F               	movf	btemp+1,w
  3140  0581  07BC               	addwf	sprintf@sp^(0+128),f
  3141  0582                     l4192:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3144  0582  0845               	movf	sprintf@c^(0+128),w
  3145  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0584  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0585  00EA               	movwf	??_sprintf
  3148  0586  3001               	movlw	1
  3149  0587                     u6945:
  3150  0587  1003               	clrc
  3151  0588  0DEA               	rlf	??_sprintf,f
  3152  0589  3EFF               	addlw	-1
  3153  058A  1D03               	skipz
  3154  058B  2D87               	goto	u6945
  3155  058C  1003               	clrc
  3156  058D  0D6A               	rlf	??_sprintf,w
  3157  058E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3158  058F  0084               	movwf	4
  3159  0590  160A  118A  200A  120A  118A  	fcall	stringdir
  3160  0595  00F2               	movwf	___llmod@divisor
  3161  0596  160A  118A  200A  120A  118A  	fcall	stringdir
  3162  059B  00F3               	movwf	___llmod@divisor+1
  3163  059C  160A  118A  200A  120A  118A  	fcall	stringdir
  3164  05A1  00F4               	movwf	___llmod@divisor+2
  3165  05A2  160A  118A  200A  120A  118A  	fcall	stringdir
  3166  05A7  00F5               	movwf	___llmod@divisor+3
  3167  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  3168  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  3169  05AA  0839               	movf	(sprintf@val+3)^(0+128),w
  3170  05AB  00F9               	movwf	___llmod@dividend+3
  3171  05AC  0838               	movf	(sprintf@val+2)^(0+128),w
  3172  05AD  00F8               	movwf	___llmod@dividend+2
  3173  05AE  0837               	movf	(sprintf@val+1)^(0+128),w
  3174  05AF  00F7               	movwf	___llmod@dividend+1
  3175  05B0  0836               	movf	sprintf@val^(0+128),w
  3176  05B1  00F6               	movwf	___llmod@dividend
  3177  05B2  160A  158A  24B3  120A  118A  	fcall	___llmod
  3178  05B7  0875               	movf	?___llmod+3,w
  3179  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3180  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  3181  05BA  00B9               	movwf	(sprintf@val+3)^(0+128)
  3182  05BB  0874               	movf	?___llmod+2,w
  3183  05BC  00B8               	movwf	(sprintf@val+2)^(0+128)
  3184  05BD  0873               	movf	?___llmod+1,w
  3185  05BE  00B7               	movwf	(sprintf@val+1)^(0+128)
  3186  05BF  0872               	movf	?___llmod,w
  3187  05C0  00B6               	movwf	sprintf@val^(0+128)
  3188  05C1                     l4194:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3191  05C1  3001               	movlw	1
  3192  05C2  02C5               	subwf	sprintf@c^(0+128),f
  3193  05C3  0A45               	incf	sprintf@c^(0+128),w
  3194  05C4  1D03               	btfss	3,2
  3195  05C5  2DC7               	goto	u6951
  3196  05C6  2DC8               	goto	u6950
  3197  05C7                     u6951:
  3198  05C7  2D18               	goto	l4186
  3199  05C8                     u6950:
  3200  05C8  2DDA               	goto	l4202
  3201  05C9                     l4196:
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3204  05C9  3030               	movlw	48
  3205  05CA  00FF               	movwf	btemp+1
  3206  05CB  083C               	movf	sprintf@sp^(0+128),w
  3207  05CC  0084               	movwf	4
  3208  05CD  087F               	movf	btemp+1,w
  3209  05CE  1783               	bsf	3,7	;select IRP bank2
  3210  05CF  0080               	movwf	0
  3211  05D0                     l4198:
  3212  05D0  3001               	movlw	1
  3213  05D1  00FF               	movwf	btemp+1
  3214  05D2  087F               	movf	btemp+1,w
  3215  05D3  07BC               	addwf	sprintf@sp^(0+128),f
  3216  05D4                     l4200:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3219  05D4  30FF               	movlw	255
  3220  05D5  07B4               	addwf	sprintf@prec^(0+128),f
  3221  05D6  1803               	skipnc
  3222  05D7  0AB5               	incf	(sprintf@prec+1)^(0+128),f
  3223  05D8  30FF               	movlw	255
  3224  05D9  07B5               	addwf	(sprintf@prec+1)^(0+128),f
  3225  05DA                     l4202:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3228  05DA  0834               	movf	sprintf@prec^(0+128),w
  3229  05DB  0435               	iorwf	(sprintf@prec+1)^(0+128),w
  3230  05DC  1D03               	btfss	3,2
  3231  05DD  2DDF               	goto	u6961
  3232  05DE  2DE0               	goto	u6960
  3233  05DF                     u6961:
  3234  05DF  2DC9               	goto	l4196
  3235  05E0                     u6960:
  3236  05E0  2DFF               	goto	l4210
  3237  05E1                     l4204:
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3240  05E1  3003               	movlw	3
  3241  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3242  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3243  05E4  0532               	andwf	sprintf@flag^(0+128),w
  3244  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3245  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3246  05E7  00EA               	movwf	??_sprintf
  3247  05E8  3000               	movlw	0
  3248  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  3249  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  3250  05EB  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3251  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3252  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3253  05EE  00EB               	movwf	??_sprintf+1
  3254  05EF  086A               	movf	??_sprintf,w
  3255  05F0  046B               	iorwf	??_sprintf+1,w
  3256  05F1  1903               	btfsc	3,2
  3257  05F2  2DF4               	goto	u6971
  3258  05F3  2DF5               	goto	u6970
  3259  05F4                     u6971:
  3260  05F4  2DFF               	goto	l4210
  3261  05F5                     u6970:
  3262  05F5                     l4206:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3265  05F5  302D               	movlw	45
  3266  05F6  00FF               	movwf	btemp+1
  3267  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3268  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3269  05F9  083C               	movf	sprintf@sp^(0+128),w
  3270  05FA  0084               	movwf	4
  3271  05FB  087F               	movf	btemp+1,w
  3272  05FC  1783               	bsf	3,7	;select IRP bank2
  3273  05FD  0080               	movwf	0
  3274  05FE  283B               	goto	l4052
  3275  05FF                     l4210:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3278  05FF  3001               	movlw	1
  3279  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3280  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3281  0602  07A8               	addwf	sprintf@f^(0+128),f
  3282  0603  30FF               	movlw	-1
  3283  0604  0728               	addwf	sprintf@f^(0+128),w
  3284  0605  0084               	movwf	4
  3285  0606  160A  118A  200A  120A  118A  	fcall	stringdir
  3286  060B  00FF               	movwf	btemp+1
  3287  060C  087F               	movf	btemp+1,w
  3288  060D  00C5               	movwf	sprintf@c^(0+128)
  3289  060E  0845               	movf	sprintf@c^(0+128),w
  3290  060F  1D03               	btfss	3,2
  3291  0610  2E12               	goto	u6981
  3292  0611  2E13               	goto	u6980
  3293  0612                     u6981:
  3294  0612  282E               	goto	l4048
  3295  0613                     u6980:
  3296  0613                     l4212:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3299  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3300  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3301  0615  083C               	movf	sprintf@sp^(0+128),w
  3302  0616  0084               	movwf	4
  3303  0617  1783               	bsf	3,7	;select IRP bank2
  3304  0618  0180               	clrf	0
  3305  0619                     l340:
  3306  0619  0008               	return
  3307  061A                     __end_of_sprintf:
  3308                           
  3309                           	psect	text3
  3310  0C9D                     __ptext3:	
  3311 ;; *************** function _scale *****************
  3312 ;; Defined at:
  3313 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  scl             1    wreg     char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  scl             1   52[BANK0 ] char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  4   34[BANK0 ] char 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         0       4       0       0       0
  3328 ;;      Locals:         0       5       0       0       0
  3329 ;;      Temps:          0      10       0       0       0
  3330 ;;      Totals:         0      19       0       0       0
  3331 ;;Total ram usage:       19 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		___awdiv
  3336 ;;		___awmod
  3337 ;;		___flmul
  3338 ;; This function is called by:
  3339 ;;		_sprintf
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _scale
  3345  0C9D                     _scale:
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3349                           ;scale@scl stored from wreg
  3350  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3351  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3352  0C9F  00D4               	movwf	scale@scl
  3353  0CA0                     l3892:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3356  0CA0  1FD4               	btfss	scale@scl,7
  3357  0CA1  2CA3               	goto	u6381
  3358  0CA2  2CA4               	goto	u6380
  3359  0CA3                     u6381:
  3360  0CA3  2E53               	goto	l3914
  3361  0CA4                     u6380:
  3362  0CA4                     l3894:
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3365  0CA4  09D4               	comf	scale@scl,f
  3366  0CA5  0AD4               	incf	scale@scl,f
  3367  0CA6                     l3896:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3370  0CA6  0854               	movf	scale@scl,w
  3371  0CA7  3A80               	xorlw	128
  3372  0CA8  3E12               	addlw	-238
  3373  0CA9  1C03               	skipc
  3374  0CAA  2CAC               	goto	u6391
  3375  0CAB  2CAD               	goto	u6390
  3376  0CAC                     u6391:
  3377  0CAC  2D97               	goto	l3904
  3378  0CAD                     u6390:
  3379  0CAD                     l3898:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3382  0CAD  300A               	movlw	10
  3383  0CAE  00A0               	movwf	___awdiv@divisor
  3384  0CAF  3000               	movlw	0
  3385  0CB0  00A1               	movwf	___awdiv@divisor+1
  3386  0CB1  0854               	movf	scale@scl,w
  3387  0CB2  00F4               	movwf	___awmod@dividend
  3388  0CB3  01F5               	clrf	___awmod@dividend+1
  3389  0CB4  1BF4               	btfsc	___awmod@dividend,7
  3390  0CB5  03F5               	decf	___awmod@dividend+1,f
  3391  0CB6  3064               	movlw	100
  3392  0CB7  00F2               	movwf	___awmod@divisor
  3393  0CB8  3000               	movlw	0
  3394  0CB9  00F3               	movwf	___awmod@divisor+1
  3395  0CBA  160A  158A  2509  120A  158A  	fcall	___awmod
  3396  0CBF  0873               	movf	?___awmod+1,w
  3397  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3399  0CC2  00A3               	movwf	___awdiv@dividend+1
  3400  0CC3  0872               	movf	?___awmod,w
  3401  0CC4  00A2               	movwf	___awdiv@dividend
  3402  0CC5  160A  118A  20CD  120A  158A  	fcall	___awdiv
  3403  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0CCC  0820               	movf	?___awdiv,w
  3406  0CCD  00C6               	movwf	??_scale
  3407  0CCE  3001               	movlw	1
  3408  0CCF                     u6405:
  3409  0CCF  1003               	clrc
  3410  0CD0  0DC6               	rlf	??_scale,f
  3411  0CD1  3EFF               	addlw	-1
  3412  0CD2  1D03               	skipz
  3413  0CD3  2CCF               	goto	u6405
  3414  0CD4  1003               	clrc
  3415  0CD5  0D46               	rlf	??_scale,w
  3416  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3417  0CD7  0084               	movwf	4
  3418  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3419  0CDD  00C7               	movwf	??_scale+1
  3420  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3421  0CE3  00C8               	movwf	??_scale+2
  3422  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3423  0CE9  00C9               	movwf	??_scale+3
  3424  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3425  0CEF  00CA               	movwf	??_scale+4
  3426  0CF0  084A               	movf	??_scale+4,w
  3427  0CF1  00AB               	movwf	___flmul@b+3
  3428  0CF2  0849               	movf	??_scale+3,w
  3429  0CF3  00AA               	movwf	___flmul@b+2
  3430  0CF4  0848               	movf	??_scale+2,w
  3431  0CF5  00A9               	movwf	___flmul@b+1
  3432  0CF6  0847               	movf	??_scale+1,w
  3433  0CF7  00A8               	movwf	___flmul@b
  3434  0CF8  3064               	movlw	100
  3435  0CF9  00A0               	movwf	___awdiv@divisor
  3436  0CFA  3000               	movlw	0
  3437  0CFB  00A1               	movwf	___awdiv@divisor+1
  3438  0CFC  0854               	movf	scale@scl,w
  3439  0CFD  00A2               	movwf	___awdiv@dividend
  3440  0CFE  01A3               	clrf	___awdiv@dividend+1
  3441  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3442  0D00  03A3               	decf	___awdiv@dividend+1,f
  3443  0D01  160A  118A  20CD  120A  158A  	fcall	___awdiv
  3444  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0D08  0820               	movf	?___awdiv,w
  3447  0D09  00CB               	movwf	??_scale+5
  3448  0D0A  3001               	movlw	1
  3449  0D0B                     u6415:
  3450  0D0B  1003               	clrc
  3451  0D0C  0DCB               	rlf	??_scale+5,f
  3452  0D0D  3EFF               	addlw	-1
  3453  0D0E  1D03               	skipz
  3454  0D0F  2D0B               	goto	u6415
  3455  0D10  1003               	clrc
  3456  0D11  0D4B               	rlf	??_scale+5,w
  3457  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3458  0D13  0084               	movwf	4
  3459  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  3460  0D19  00CC               	movwf	??_scale+6
  3461  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3462  0D1F  00CD               	movwf	??_scale+7
  3463  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  3464  0D25  00CE               	movwf	??_scale+8
  3465  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  3466  0D2B  00CF               	movwf	??_scale+9
  3467  0D2C  084F               	movf	??_scale+9,w
  3468  0D2D  00AF               	movwf	___flmul@a+3
  3469  0D2E  084E               	movf	??_scale+8,w
  3470  0D2F  00AE               	movwf	___flmul@a+2
  3471  0D30  084D               	movf	??_scale+7,w
  3472  0D31  00AD               	movwf	___flmul@a+1
  3473  0D32  084C               	movf	??_scale+6,w
  3474  0D33  00AC               	movwf	___flmul@a
  3475  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3476  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0D3B  082B               	movf	?___flmul+3,w
  3479  0D3C  00D3               	movwf	_scale$929+3
  3480  0D3D  082A               	movf	?___flmul+2,w
  3481  0D3E  00D2               	movwf	_scale$929+2
  3482  0D3F  0829               	movf	?___flmul+1,w
  3483  0D40  00D1               	movwf	_scale$929+1
  3484  0D41  0828               	movf	?___flmul,w
  3485  0D42  00D0               	movwf	_scale$929
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3488  0D43  300A               	movlw	10
  3489  0D44  00F2               	movwf	___awmod@divisor
  3490  0D45  3000               	movlw	0
  3491  0D46  00F3               	movwf	___awmod@divisor+1
  3492  0D47  0854               	movf	scale@scl,w
  3493  0D48  00F4               	movwf	___awmod@dividend
  3494  0D49  01F5               	clrf	___awmod@dividend+1
  3495  0D4A  1BF4               	btfsc	___awmod@dividend,7
  3496  0D4B  03F5               	decf	___awmod@dividend+1,f
  3497  0D4C  160A  158A  2509  120A  158A  	fcall	___awmod
  3498  0D51  0872               	movf	?___awmod,w
  3499  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0D54  00C6               	movwf	??_scale
  3502  0D55  3001               	movlw	1
  3503  0D56                     u6425:
  3504  0D56  1003               	clrc
  3505  0D57  0DC6               	rlf	??_scale,f
  3506  0D58  3EFF               	addlw	-1
  3507  0D59  1D03               	skipz
  3508  0D5A  2D56               	goto	u6425
  3509  0D5B  1003               	clrc
  3510  0D5C  0D46               	rlf	??_scale,w
  3511  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3512  0D5E  0084               	movwf	4
  3513  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3514  0D64  00C7               	movwf	??_scale+1
  3515  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  3516  0D6A  00C8               	movwf	??_scale+2
  3517  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3518  0D70  00C9               	movwf	??_scale+3
  3519  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  3520  0D76  00CA               	movwf	??_scale+4
  3521  0D77  084A               	movf	??_scale+4,w
  3522  0D78  00AB               	movwf	___flmul@b+3
  3523  0D79  0849               	movf	??_scale+3,w
  3524  0D7A  00AA               	movwf	___flmul@b+2
  3525  0D7B  0848               	movf	??_scale+2,w
  3526  0D7C  00A9               	movwf	___flmul@b+1
  3527  0D7D  0847               	movf	??_scale+1,w
  3528  0D7E  00A8               	movwf	___flmul@b
  3529  0D7F  0853               	movf	_scale$929+3,w
  3530  0D80  00AF               	movwf	___flmul@a+3
  3531  0D81  0852               	movf	_scale$929+2,w
  3532  0D82  00AE               	movwf	___flmul@a+2
  3533  0D83  0851               	movf	_scale$929+1,w
  3534  0D84  00AD               	movwf	___flmul@a+1
  3535  0D85  0850               	movf	_scale$929,w
  3536  0D86  00AC               	movwf	___flmul@a
  3537  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3538  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0D8E  082B               	movf	?___flmul+3,w
  3541  0D8F  00C5               	movwf	?_scale+3
  3542  0D90  082A               	movf	?___flmul+2,w
  3543  0D91  00C4               	movwf	?_scale+2
  3544  0D92  0829               	movf	?___flmul+1,w
  3545  0D93  00C3               	movwf	?_scale+1
  3546  0D94  0828               	movf	?___flmul,w
  3547  0D95  00C2               	movwf	?_scale
  3548  0D96  2FFF               	goto	l284
  3549  0D97                     l3904:
  3550  0D97  0854               	movf	scale@scl,w
  3551  0D98  3A80               	xorlw	128
  3552  0D99  3E75               	addlw	-139
  3553  0D9A  1C03               	skipc
  3554  0D9B  2D9D               	goto	u6431
  3555  0D9C  2D9E               	goto	u6430
  3556  0D9D                     u6431:
  3557  0D9D  2E26               	goto	l3910
  3558  0D9E                     u6430:
  3559  0D9E                     l3906:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3562  0D9E  300A               	movlw	10
  3563  0D9F  00F2               	movwf	___awmod@divisor
  3564  0DA0  3000               	movlw	0
  3565  0DA1  00F3               	movwf	___awmod@divisor+1
  3566  0DA2  0854               	movf	scale@scl,w
  3567  0DA3  00F4               	movwf	___awmod@dividend
  3568  0DA4  01F5               	clrf	___awmod@dividend+1
  3569  0DA5  1BF4               	btfsc	___awmod@dividend,7
  3570  0DA6  03F5               	decf	___awmod@dividend+1,f
  3571  0DA7  160A  158A  2509  120A  158A  	fcall	___awmod
  3572  0DAC  0872               	movf	?___awmod,w
  3573  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0DAF  00C6               	movwf	??_scale
  3576  0DB0  3001               	movlw	1
  3577  0DB1                     u6445:
  3578  0DB1  1003               	clrc
  3579  0DB2  0DC6               	rlf	??_scale,f
  3580  0DB3  3EFF               	addlw	-1
  3581  0DB4  1D03               	skipz
  3582  0DB5  2DB1               	goto	u6445
  3583  0DB6  1003               	clrc
  3584  0DB7  0D46               	rlf	??_scale,w
  3585  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3586  0DB9  0084               	movwf	4
  3587  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3588  0DBF  00C7               	movwf	??_scale+1
  3589  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3590  0DC5  00C8               	movwf	??_scale+2
  3591  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3592  0DCB  00C9               	movwf	??_scale+3
  3593  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3594  0DD1  00CA               	movwf	??_scale+4
  3595  0DD2  084A               	movf	??_scale+4,w
  3596  0DD3  00AB               	movwf	___flmul@b+3
  3597  0DD4  0849               	movf	??_scale+3,w
  3598  0DD5  00AA               	movwf	___flmul@b+2
  3599  0DD6  0848               	movf	??_scale+2,w
  3600  0DD7  00A9               	movwf	___flmul@b+1
  3601  0DD8  0847               	movf	??_scale+1,w
  3602  0DD9  00A8               	movwf	___flmul@b
  3603  0DDA  300A               	movlw	10
  3604  0DDB  00A0               	movwf	___awdiv@divisor
  3605  0DDC  3000               	movlw	0
  3606  0DDD  00A1               	movwf	___awdiv@divisor+1
  3607  0DDE  0854               	movf	scale@scl,w
  3608  0DDF  00A2               	movwf	___awdiv@dividend
  3609  0DE0  01A3               	clrf	___awdiv@dividend+1
  3610  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3611  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3612  0DE3  160A  118A  20CD  120A  158A  	fcall	___awdiv
  3613  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0DEA  0820               	movf	?___awdiv,w
  3616  0DEB  00CB               	movwf	??_scale+5
  3617  0DEC  3001               	movlw	1
  3618  0DED                     u6455:
  3619  0DED  1003               	clrc
  3620  0DEE  0DCB               	rlf	??_scale+5,f
  3621  0DEF  3EFF               	addlw	-1
  3622  0DF0  1D03               	skipz
  3623  0DF1  2DED               	goto	u6455
  3624  0DF2  1003               	clrc
  3625  0DF3  0D4B               	rlf	??_scale+5,w
  3626  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3627  0DF5  0084               	movwf	4
  3628  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  3629  0DFB  00CC               	movwf	??_scale+6
  3630  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3631  0E01  00CD               	movwf	??_scale+7
  3632  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  3633  0E07  00CE               	movwf	??_scale+8
  3634  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  3635  0E0D  00CF               	movwf	??_scale+9
  3636  0E0E  084F               	movf	??_scale+9,w
  3637  0E0F  00AF               	movwf	___flmul@a+3
  3638  0E10  084E               	movf	??_scale+8,w
  3639  0E11  00AE               	movwf	___flmul@a+2
  3640  0E12  084D               	movf	??_scale+7,w
  3641  0E13  00AD               	movwf	___flmul@a+1
  3642  0E14  084C               	movf	??_scale+6,w
  3643  0E15  00AC               	movwf	___flmul@a
  3644  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3645  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0E1D  082B               	movf	?___flmul+3,w
  3648  0E1E  00C5               	movwf	?_scale+3
  3649  0E1F  082A               	movf	?___flmul+2,w
  3650  0E20  00C4               	movwf	?_scale+2
  3651  0E21  0829               	movf	?___flmul+1,w
  3652  0E22  00C3               	movwf	?_scale+1
  3653  0E23  0828               	movf	?___flmul,w
  3654  0E24  00C2               	movwf	?_scale
  3655  0E25  2FFF               	goto	l284
  3656  0E26                     l3910:
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3659  0E26  0854               	movf	scale@scl,w
  3660  0E27  00C6               	movwf	??_scale
  3661  0E28  3001               	movlw	1
  3662  0E29                     u6465:
  3663  0E29  1003               	clrc
  3664  0E2A  0DC6               	rlf	??_scale,f
  3665  0E2B  3EFF               	addlw	-1
  3666  0E2C  1D03               	skipz
  3667  0E2D  2E29               	goto	u6465
  3668  0E2E  1003               	clrc
  3669  0E2F  0D46               	rlf	??_scale,w
  3670  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3671  0E31  0084               	movwf	4
  3672  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  3673  0E37  00C7               	movwf	??_scale+1
  3674  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  3675  0E3D  00C8               	movwf	??_scale+2
  3676  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  3677  0E43  00C9               	movwf	??_scale+3
  3678  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  3679  0E49  00CA               	movwf	??_scale+4
  3680  0E4A  084A               	movf	??_scale+4,w
  3681  0E4B  00C5               	movwf	?_scale+3
  3682  0E4C  0849               	movf	??_scale+3,w
  3683  0E4D  00C4               	movwf	?_scale+2
  3684  0E4E  0848               	movf	??_scale+2,w
  3685  0E4F  00C3               	movwf	?_scale+1
  3686  0E50  0847               	movf	??_scale+1,w
  3687  0E51  00C2               	movwf	?_scale
  3688  0E52  2FFF               	goto	l284
  3689  0E53                     l3914:
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3692  0E53  0854               	movf	scale@scl,w
  3693  0E54  3A80               	xorlw	128
  3694  0E55  3E12               	addlw	-238
  3695  0E56  1C03               	skipc
  3696  0E57  2E59               	goto	u6471
  3697  0E58  2E5A               	goto	u6470
  3698  0E59                     u6471:
  3699  0E59  2F44               	goto	l3922
  3700  0E5A                     u6470:
  3701  0E5A                     l3916:
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3704  0E5A  300A               	movlw	10
  3705  0E5B  00A0               	movwf	___awdiv@divisor
  3706  0E5C  3000               	movlw	0
  3707  0E5D  00A1               	movwf	___awdiv@divisor+1
  3708  0E5E  0854               	movf	scale@scl,w
  3709  0E5F  00F4               	movwf	___awmod@dividend
  3710  0E60  01F5               	clrf	___awmod@dividend+1
  3711  0E61  1BF4               	btfsc	___awmod@dividend,7
  3712  0E62  03F5               	decf	___awmod@dividend+1,f
  3713  0E63  3064               	movlw	100
  3714  0E64  00F2               	movwf	___awmod@divisor
  3715  0E65  3000               	movlw	0
  3716  0E66  00F3               	movwf	___awmod@divisor+1
  3717  0E67  160A  158A  2509  120A  158A  	fcall	___awmod
  3718  0E6C  0873               	movf	?___awmod+1,w
  3719  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0E6F  00A3               	movwf	___awdiv@dividend+1
  3722  0E70  0872               	movf	?___awmod,w
  3723  0E71  00A2               	movwf	___awdiv@dividend
  3724  0E72  160A  118A  20CD  120A  158A  	fcall	___awdiv
  3725  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3727  0E79  0820               	movf	?___awdiv,w
  3728  0E7A  00C6               	movwf	??_scale
  3729  0E7B  3001               	movlw	1
  3730  0E7C                     u6485:
  3731  0E7C  1003               	clrc
  3732  0E7D  0DC6               	rlf	??_scale,f
  3733  0E7E  3EFF               	addlw	-1
  3734  0E7F  1D03               	skipz
  3735  0E80  2E7C               	goto	u6485
  3736  0E81  1003               	clrc
  3737  0E82  0D46               	rlf	??_scale,w
  3738  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3739  0E84  0084               	movwf	4
  3740  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3741  0E8A  00C7               	movwf	??_scale+1
  3742  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3743  0E90  00C8               	movwf	??_scale+2
  3744  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3745  0E96  00C9               	movwf	??_scale+3
  3746  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3747  0E9C  00CA               	movwf	??_scale+4
  3748  0E9D  084A               	movf	??_scale+4,w
  3749  0E9E  00AB               	movwf	___flmul@b+3
  3750  0E9F  0849               	movf	??_scale+3,w
  3751  0EA0  00AA               	movwf	___flmul@b+2
  3752  0EA1  0848               	movf	??_scale+2,w
  3753  0EA2  00A9               	movwf	___flmul@b+1
  3754  0EA3  0847               	movf	??_scale+1,w
  3755  0EA4  00A8               	movwf	___flmul@b
  3756  0EA5  3064               	movlw	100
  3757  0EA6  00A0               	movwf	___awdiv@divisor
  3758  0EA7  3000               	movlw	0
  3759  0EA8  00A1               	movwf	___awdiv@divisor+1
  3760  0EA9  0854               	movf	scale@scl,w
  3761  0EAA  00A2               	movwf	___awdiv@dividend
  3762  0EAB  01A3               	clrf	___awdiv@dividend+1
  3763  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3764  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3765  0EAE  160A  118A  20CD  120A  158A  	fcall	___awdiv
  3766  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3768  0EB5  0820               	movf	?___awdiv,w
  3769  0EB6  00CB               	movwf	??_scale+5
  3770  0EB7  3001               	movlw	1
  3771  0EB8                     u6495:
  3772  0EB8  1003               	clrc
  3773  0EB9  0DCB               	rlf	??_scale+5,f
  3774  0EBA  3EFF               	addlw	-1
  3775  0EBB  1D03               	skipz
  3776  0EBC  2EB8               	goto	u6495
  3777  0EBD  1003               	clrc
  3778  0EBE  0D4B               	rlf	??_scale+5,w
  3779  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3780  0EC0  0084               	movwf	4
  3781  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3782  0EC6  00CC               	movwf	??_scale+6
  3783  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3784  0ECC  00CD               	movwf	??_scale+7
  3785  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3786  0ED2  00CE               	movwf	??_scale+8
  3787  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3788  0ED8  00CF               	movwf	??_scale+9
  3789  0ED9  084F               	movf	??_scale+9,w
  3790  0EDA  00AF               	movwf	___flmul@a+3
  3791  0EDB  084E               	movf	??_scale+8,w
  3792  0EDC  00AE               	movwf	___flmul@a+2
  3793  0EDD  084D               	movf	??_scale+7,w
  3794  0EDE  00AD               	movwf	___flmul@a+1
  3795  0EDF  084C               	movf	??_scale+6,w
  3796  0EE0  00AC               	movwf	___flmul@a
  3797  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3798  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0EE8  082B               	movf	?___flmul+3,w
  3801  0EE9  00D3               	movwf	_scale$929+3
  3802  0EEA  082A               	movf	?___flmul+2,w
  3803  0EEB  00D2               	movwf	_scale$929+2
  3804  0EEC  0829               	movf	?___flmul+1,w
  3805  0EED  00D1               	movwf	_scale$929+1
  3806  0EEE  0828               	movf	?___flmul,w
  3807  0EEF  00D0               	movwf	_scale$929
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3810  0EF0  300A               	movlw	10
  3811  0EF1  00F2               	movwf	___awmod@divisor
  3812  0EF2  3000               	movlw	0
  3813  0EF3  00F3               	movwf	___awmod@divisor+1
  3814  0EF4  0854               	movf	scale@scl,w
  3815  0EF5  00F4               	movwf	___awmod@dividend
  3816  0EF6  01F5               	clrf	___awmod@dividend+1
  3817  0EF7  1BF4               	btfsc	___awmod@dividend,7
  3818  0EF8  03F5               	decf	___awmod@dividend+1,f
  3819  0EF9  160A  158A  2509  120A  158A  	fcall	___awmod
  3820  0EFE  0872               	movf	?___awmod,w
  3821  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3822  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3823  0F01  00C6               	movwf	??_scale
  3824  0F02  3001               	movlw	1
  3825  0F03                     u6505:
  3826  0F03  1003               	clrc
  3827  0F04  0DC6               	rlf	??_scale,f
  3828  0F05  3EFF               	addlw	-1
  3829  0F06  1D03               	skipz
  3830  0F07  2F03               	goto	u6505
  3831  0F08  1003               	clrc
  3832  0F09  0D46               	rlf	??_scale,w
  3833  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3834  0F0B  0084               	movwf	4
  3835  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3836  0F11  00C7               	movwf	??_scale+1
  3837  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3838  0F17  00C8               	movwf	??_scale+2
  3839  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3840  0F1D  00C9               	movwf	??_scale+3
  3841  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3842  0F23  00CA               	movwf	??_scale+4
  3843  0F24  084A               	movf	??_scale+4,w
  3844  0F25  00AB               	movwf	___flmul@b+3
  3845  0F26  0849               	movf	??_scale+3,w
  3846  0F27  00AA               	movwf	___flmul@b+2
  3847  0F28  0848               	movf	??_scale+2,w
  3848  0F29  00A9               	movwf	___flmul@b+1
  3849  0F2A  0847               	movf	??_scale+1,w
  3850  0F2B  00A8               	movwf	___flmul@b
  3851  0F2C  0853               	movf	_scale$929+3,w
  3852  0F2D  00AF               	movwf	___flmul@a+3
  3853  0F2E  0852               	movf	_scale$929+2,w
  3854  0F2F  00AE               	movwf	___flmul@a+2
  3855  0F30  0851               	movf	_scale$929+1,w
  3856  0F31  00AD               	movwf	___flmul@a+1
  3857  0F32  0850               	movf	_scale$929,w
  3858  0F33  00AC               	movwf	___flmul@a
  3859  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3860  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0F3B  082B               	movf	?___flmul+3,w
  3863  0F3C  00C5               	movwf	?_scale+3
  3864  0F3D  082A               	movf	?___flmul+2,w
  3865  0F3E  00C4               	movwf	?_scale+2
  3866  0F3F  0829               	movf	?___flmul+1,w
  3867  0F40  00C3               	movwf	?_scale+1
  3868  0F41  0828               	movf	?___flmul,w
  3869  0F42  00C2               	movwf	?_scale
  3870  0F43  2FFF               	goto	l284
  3871  0F44                     l3922:
  3872  0F44  0854               	movf	scale@scl,w
  3873  0F45  3A80               	xorlw	128
  3874  0F46  3E75               	addlw	-139
  3875  0F47  1C03               	skipc
  3876  0F48  2F4A               	goto	u6511
  3877  0F49  2F4B               	goto	u6510
  3878  0F4A                     u6511:
  3879  0F4A  2FD3               	goto	l3928
  3880  0F4B                     u6510:
  3881  0F4B                     l3924:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3884  0F4B  300A               	movlw	10
  3885  0F4C  00F2               	movwf	___awmod@divisor
  3886  0F4D  3000               	movlw	0
  3887  0F4E  00F3               	movwf	___awmod@divisor+1
  3888  0F4F  0854               	movf	scale@scl,w
  3889  0F50  00F4               	movwf	___awmod@dividend
  3890  0F51  01F5               	clrf	___awmod@dividend+1
  3891  0F52  1BF4               	btfsc	___awmod@dividend,7
  3892  0F53  03F5               	decf	___awmod@dividend+1,f
  3893  0F54  160A  158A  2509  120A  158A  	fcall	___awmod
  3894  0F59  0872               	movf	?___awmod,w
  3895  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0F5C  00C6               	movwf	??_scale
  3898  0F5D  3001               	movlw	1
  3899  0F5E                     u6525:
  3900  0F5E  1003               	clrc
  3901  0F5F  0DC6               	rlf	??_scale,f
  3902  0F60  3EFF               	addlw	-1
  3903  0F61  1D03               	skipz
  3904  0F62  2F5E               	goto	u6525
  3905  0F63  1003               	clrc
  3906  0F64  0D46               	rlf	??_scale,w
  3907  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3908  0F66  0084               	movwf	4
  3909  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3910  0F6C  00C7               	movwf	??_scale+1
  3911  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3912  0F72  00C8               	movwf	??_scale+2
  3913  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3914  0F78  00C9               	movwf	??_scale+3
  3915  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3916  0F7E  00CA               	movwf	??_scale+4
  3917  0F7F  084A               	movf	??_scale+4,w
  3918  0F80  00AB               	movwf	___flmul@b+3
  3919  0F81  0849               	movf	??_scale+3,w
  3920  0F82  00AA               	movwf	___flmul@b+2
  3921  0F83  0848               	movf	??_scale+2,w
  3922  0F84  00A9               	movwf	___flmul@b+1
  3923  0F85  0847               	movf	??_scale+1,w
  3924  0F86  00A8               	movwf	___flmul@b
  3925  0F87  300A               	movlw	10
  3926  0F88  00A0               	movwf	___awdiv@divisor
  3927  0F89  3000               	movlw	0
  3928  0F8A  00A1               	movwf	___awdiv@divisor+1
  3929  0F8B  0854               	movf	scale@scl,w
  3930  0F8C  00A2               	movwf	___awdiv@dividend
  3931  0F8D  01A3               	clrf	___awdiv@dividend+1
  3932  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3933  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3934  0F90  160A  118A  20CD  120A  158A  	fcall	___awdiv
  3935  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3937  0F97  0820               	movf	?___awdiv,w
  3938  0F98  00CB               	movwf	??_scale+5
  3939  0F99  3001               	movlw	1
  3940  0F9A                     u6535:
  3941  0F9A  1003               	clrc
  3942  0F9B  0DCB               	rlf	??_scale+5,f
  3943  0F9C  3EFF               	addlw	-1
  3944  0F9D  1D03               	skipz
  3945  0F9E  2F9A               	goto	u6535
  3946  0F9F  1003               	clrc
  3947  0FA0  0D4B               	rlf	??_scale+5,w
  3948  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3949  0FA2  0084               	movwf	4
  3950  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3951  0FA8  00CC               	movwf	??_scale+6
  3952  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3953  0FAE  00CD               	movwf	??_scale+7
  3954  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3955  0FB4  00CE               	movwf	??_scale+8
  3956  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3957  0FBA  00CF               	movwf	??_scale+9
  3958  0FBB  084F               	movf	??_scale+9,w
  3959  0FBC  00AF               	movwf	___flmul@a+3
  3960  0FBD  084E               	movf	??_scale+8,w
  3961  0FBE  00AE               	movwf	___flmul@a+2
  3962  0FBF  084D               	movf	??_scale+7,w
  3963  0FC0  00AD               	movwf	___flmul@a+1
  3964  0FC1  084C               	movf	??_scale+6,w
  3965  0FC2  00AC               	movwf	___flmul@a
  3966  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3967  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0FCA  082B               	movf	?___flmul+3,w
  3970  0FCB  00C5               	movwf	?_scale+3
  3971  0FCC  082A               	movf	?___flmul+2,w
  3972  0FCD  00C4               	movwf	?_scale+2
  3973  0FCE  0829               	movf	?___flmul+1,w
  3974  0FCF  00C3               	movwf	?_scale+1
  3975  0FD0  0828               	movf	?___flmul,w
  3976  0FD1  00C2               	movwf	?_scale
  3977  0FD2  2FFF               	goto	l284
  3978  0FD3                     l3928:
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3981  0FD3  0854               	movf	scale@scl,w
  3982  0FD4  00C6               	movwf	??_scale
  3983  0FD5  3001               	movlw	1
  3984  0FD6                     u6545:
  3985  0FD6  1003               	clrc
  3986  0FD7  0DC6               	rlf	??_scale,f
  3987  0FD8  3EFF               	addlw	-1
  3988  0FD9  1D03               	skipz
  3989  0FDA  2FD6               	goto	u6545
  3990  0FDB  1003               	clrc
  3991  0FDC  0D46               	rlf	??_scale,w
  3992  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3993  0FDE  0084               	movwf	4
  3994  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3995  0FE4  00C7               	movwf	??_scale+1
  3996  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3997  0FEA  00C8               	movwf	??_scale+2
  3998  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3999  0FF0  00C9               	movwf	??_scale+3
  4000  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4001  0FF6  00CA               	movwf	??_scale+4
  4002  0FF7  084A               	movf	??_scale+4,w
  4003  0FF8  00C5               	movwf	?_scale+3
  4004  0FF9  0849               	movf	??_scale+3,w
  4005  0FFA  00C4               	movwf	?_scale+2
  4006  0FFB  0848               	movf	??_scale+2,w
  4007  0FFC  00C3               	movwf	?_scale+1
  4008  0FFD  0847               	movf	??_scale+1,w
  4009  0FFE  00C2               	movwf	?_scale
  4010  0FFF                     l284:
  4011  0FFF  0008               	return
  4012  1000                     __end_of_scale:
  4013                           
  4014                           	psect	text4
  4015  1D09                     __ptext4:	
  4016 ;; *************** function ___awmod *****************
  4017 ;; Defined at:
  4018 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  divisor         2    2[COMMON] int 
  4021 ;;  dividend        2    4[COMMON] int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  sign            1    7[COMMON] unsigned char 
  4024 ;;  counter         1    6[COMMON] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  2    2[COMMON] int 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, btemp+1
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         4       0       0       0       0
  4035 ;;      Locals:         2       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         6       0       0       0       0
  4038 ;;Total ram usage:        6 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_scale
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           
  4049                           ;psect for function ___awmod
  4050  1D09                     ___awmod:
  4051  1D09                     l2430:	
  4052                           ;incstack = 0
  4053                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4054                           
  4055  1D09  01F7               	clrf	___awmod@sign
  4056  1D0A                     l2432:
  4057  1D0A  1FF5               	btfss	___awmod@dividend+1,7
  4058  1D0B  2D0D               	goto	u3291
  4059  1D0C  2D0E               	goto	u3290
  4060  1D0D                     u3291:
  4061  1D0D  2D15               	goto	l2438
  4062  1D0E                     u3290:
  4063  1D0E                     l2434:
  4064  1D0E  09F4               	comf	___awmod@dividend,f
  4065  1D0F  09F5               	comf	___awmod@dividend+1,f
  4066  1D10  0AF4               	incf	___awmod@dividend,f
  4067  1D11  1903               	skipnz
  4068  1D12  0AF5               	incf	___awmod@dividend+1,f
  4069  1D13                     l2436:
  4070  1D13  01F7               	clrf	___awmod@sign
  4071  1D14  0AF7               	incf	___awmod@sign,f
  4072  1D15                     l2438:
  4073  1D15  1FF3               	btfss	___awmod@divisor+1,7
  4074  1D16  2D18               	goto	u3301
  4075  1D17  2D19               	goto	u3300
  4076  1D18                     u3301:
  4077  1D18  2D1E               	goto	l2442
  4078  1D19                     u3300:
  4079  1D19                     l2440:
  4080  1D19  09F2               	comf	___awmod@divisor,f
  4081  1D1A  09F3               	comf	___awmod@divisor+1,f
  4082  1D1B  0AF2               	incf	___awmod@divisor,f
  4083  1D1C  1903               	skipnz
  4084  1D1D  0AF3               	incf	___awmod@divisor+1,f
  4085  1D1E                     l2442:
  4086  1D1E  0872               	movf	___awmod@divisor,w
  4087  1D1F  0473               	iorwf	___awmod@divisor+1,w
  4088  1D20  1903               	btfsc	3,2
  4089  1D21  2D23               	goto	u3311
  4090  1D22  2D24               	goto	u3310
  4091  1D23                     u3311:
  4092  1D23  2D53               	goto	l2460
  4093  1D24                     u3310:
  4094  1D24                     l2444:
  4095  1D24  01F6               	clrf	___awmod@counter
  4096  1D25  0AF6               	incf	___awmod@counter,f
  4097  1D26  2D32               	goto	l2450
  4098  1D27                     l2446:
  4099  1D27  3001               	movlw	1
  4100  1D28                     u3325:
  4101  1D28  1003               	clrc
  4102  1D29  0DF2               	rlf	___awmod@divisor,f
  4103  1D2A  0DF3               	rlf	___awmod@divisor+1,f
  4104  1D2B  3EFF               	addlw	-1
  4105  1D2C  1D03               	skipz
  4106  1D2D  2D28               	goto	u3325
  4107  1D2E                     l2448:
  4108  1D2E  3001               	movlw	1
  4109  1D2F  00FF               	movwf	btemp+1
  4110  1D30  087F               	movf	btemp+1,w
  4111  1D31  07F6               	addwf	___awmod@counter,f
  4112  1D32                     l2450:
  4113  1D32  1FF3               	btfss	___awmod@divisor+1,7
  4114  1D33  2D35               	goto	u3331
  4115  1D34  2D36               	goto	u3330
  4116  1D35                     u3331:
  4117  1D35  2D27               	goto	l2446
  4118  1D36                     u3330:
  4119  1D36                     l2452:
  4120  1D36  0873               	movf	___awmod@divisor+1,w
  4121  1D37  0275               	subwf	___awmod@dividend+1,w
  4122  1D38  1D03               	skipz
  4123  1D39  2D3C               	goto	u3345
  4124  1D3A  0872               	movf	___awmod@divisor,w
  4125  1D3B  0274               	subwf	___awmod@dividend,w
  4126  1D3C                     u3345:
  4127  1D3C  1C03               	skipc
  4128  1D3D  2D3F               	goto	u3341
  4129  1D3E  2D40               	goto	u3340
  4130  1D3F                     u3341:
  4131  1D3F  2D46               	goto	l2456
  4132  1D40                     u3340:
  4133  1D40                     l2454:
  4134  1D40  0872               	movf	___awmod@divisor,w
  4135  1D41  02F4               	subwf	___awmod@dividend,f
  4136  1D42  0873               	movf	___awmod@divisor+1,w
  4137  1D43  1C03               	skipc
  4138  1D44  03F5               	decf	___awmod@dividend+1,f
  4139  1D45  02F5               	subwf	___awmod@dividend+1,f
  4140  1D46                     l2456:
  4141  1D46  3001               	movlw	1
  4142  1D47                     u3355:
  4143  1D47  1003               	clrc
  4144  1D48  0CF3               	rrf	___awmod@divisor+1,f
  4145  1D49  0CF2               	rrf	___awmod@divisor,f
  4146  1D4A  3EFF               	addlw	-1
  4147  1D4B  1D03               	skipz
  4148  1D4C  2D47               	goto	u3355
  4149  1D4D                     l2458:
  4150  1D4D  3001               	movlw	1
  4151  1D4E  02F6               	subwf	___awmod@counter,f
  4152  1D4F  1D03               	btfss	3,2
  4153  1D50  2D52               	goto	u3361
  4154  1D51  2D53               	goto	u3360
  4155  1D52                     u3361:
  4156  1D52  2D36               	goto	l2452
  4157  1D53                     u3360:
  4158  1D53                     l2460:
  4159  1D53  0877               	movf	___awmod@sign,w
  4160  1D54  1903               	btfsc	3,2
  4161  1D55  2D57               	goto	u3371
  4162  1D56  2D58               	goto	u3370
  4163  1D57                     u3371:
  4164  1D57  2D5D               	goto	l2464
  4165  1D58                     u3370:
  4166  1D58                     l2462:
  4167  1D58  09F4               	comf	___awmod@dividend,f
  4168  1D59  09F5               	comf	___awmod@dividend+1,f
  4169  1D5A  0AF4               	incf	___awmod@dividend,f
  4170  1D5B  1903               	skipnz
  4171  1D5C  0AF5               	incf	___awmod@dividend+1,f
  4172  1D5D                     l2464:
  4173  1D5D  0875               	movf	___awmod@dividend+1,w
  4174  1D5E  00F3               	movwf	?___awmod+1
  4175  1D5F  0874               	movf	___awmod@dividend,w
  4176  1D60  00F2               	movwf	?___awmod
  4177  1D61                     l510:
  4178  1D61  0008               	return
  4179  1D62                     __end_of___awmod:
  4180                           
  4181                           	psect	text5
  4182  10CD                     __ptext5:	
  4183 ;; *************** function ___awdiv *****************
  4184 ;; Defined at:
  4185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  divisor         2    0[BANK0 ] int 
  4188 ;;  dividend        2    2[BANK0 ] int 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  quotient        2    6[BANK0 ] int 
  4191 ;;  sign            1    5[BANK0 ] unsigned char 
  4192 ;;  counter         1    4[BANK0 ] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2    0[BANK0 ] int 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, btemp+1
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4202 ;;      Params:         0       4       0       0       0
  4203 ;;      Locals:         0       4       0       0       0
  4204 ;;      Temps:          0       0       0       0       0
  4205 ;;      Totals:         0       8       0       0       0
  4206 ;;Total ram usage:        8 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_scale
  4213 ;;		_sprintf
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function ___awdiv
  4219  10CD                     ___awdiv:
  4220  10CD                     l3814:	
  4221                           ;incstack = 0
  4222                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4223                           
  4224  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  4225  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  4226  10CF  01A5               	clrf	___awdiv@sign
  4227  10D0                     l3816:
  4228  10D0  1FA1               	btfss	___awdiv@divisor+1,7
  4229  10D1  28D3               	goto	u6271
  4230  10D2  28D4               	goto	u6270
  4231  10D3                     u6271:
  4232  10D3  28DB               	goto	l3822
  4233  10D4                     u6270:
  4234  10D4                     l3818:
  4235  10D4  09A0               	comf	___awdiv@divisor,f
  4236  10D5  09A1               	comf	___awdiv@divisor+1,f
  4237  10D6  0AA0               	incf	___awdiv@divisor,f
  4238  10D7  1903               	skipnz
  4239  10D8  0AA1               	incf	___awdiv@divisor+1,f
  4240  10D9                     l3820:
  4241  10D9  01A5               	clrf	___awdiv@sign
  4242  10DA  0AA5               	incf	___awdiv@sign,f
  4243  10DB                     l3822:
  4244  10DB  1FA3               	btfss	___awdiv@dividend+1,7
  4245  10DC  28DE               	goto	u6281
  4246  10DD  28DF               	goto	u6280
  4247  10DE                     u6281:
  4248  10DE  28E8               	goto	l3828
  4249  10DF                     u6280:
  4250  10DF                     l3824:
  4251  10DF  09A2               	comf	___awdiv@dividend,f
  4252  10E0  09A3               	comf	___awdiv@dividend+1,f
  4253  10E1  0AA2               	incf	___awdiv@dividend,f
  4254  10E2  1903               	skipnz
  4255  10E3  0AA3               	incf	___awdiv@dividend+1,f
  4256  10E4                     l3826:
  4257  10E4  3001               	movlw	1
  4258  10E5  00FF               	movwf	btemp+1
  4259  10E6  087F               	movf	btemp+1,w
  4260  10E7  06A5               	xorwf	___awdiv@sign,f
  4261  10E8                     l3828:
  4262  10E8  01A6               	clrf	___awdiv@quotient
  4263  10E9  01A7               	clrf	___awdiv@quotient+1
  4264  10EA                     l3830:
  4265  10EA  0820               	movf	___awdiv@divisor,w
  4266  10EB  0421               	iorwf	___awdiv@divisor+1,w
  4267  10EC  1903               	btfsc	3,2
  4268  10ED  28EF               	goto	u6291
  4269  10EE  28F0               	goto	u6290
  4270  10EF                     u6291:
  4271  10EF  2927               	goto	l3850
  4272  10F0                     u6290:
  4273  10F0                     l3832:
  4274  10F0  01A4               	clrf	___awdiv@counter
  4275  10F1  0AA4               	incf	___awdiv@counter,f
  4276  10F2  28FE               	goto	l3838
  4277  10F3                     l3834:
  4278  10F3  3001               	movlw	1
  4279  10F4                     u6305:
  4280  10F4  1003               	clrc
  4281  10F5  0DA0               	rlf	___awdiv@divisor,f
  4282  10F6  0DA1               	rlf	___awdiv@divisor+1,f
  4283  10F7  3EFF               	addlw	-1
  4284  10F8  1D03               	skipz
  4285  10F9  28F4               	goto	u6305
  4286  10FA                     l3836:
  4287  10FA  3001               	movlw	1
  4288  10FB  00FF               	movwf	btemp+1
  4289  10FC  087F               	movf	btemp+1,w
  4290  10FD  07A4               	addwf	___awdiv@counter,f
  4291  10FE                     l3838:
  4292  10FE  1FA1               	btfss	___awdiv@divisor+1,7
  4293  10FF  2901               	goto	u6311
  4294  1100  2902               	goto	u6310
  4295  1101                     u6311:
  4296  1101  28F3               	goto	l3834
  4297  1102                     u6310:
  4298  1102                     l3840:
  4299  1102  3001               	movlw	1
  4300  1103                     u6325:
  4301  1103  1003               	clrc
  4302  1104  0DA6               	rlf	___awdiv@quotient,f
  4303  1105  0DA7               	rlf	___awdiv@quotient+1,f
  4304  1106  3EFF               	addlw	-1
  4305  1107  1D03               	skipz
  4306  1108  2903               	goto	u6325
  4307  1109  0821               	movf	___awdiv@divisor+1,w
  4308  110A  0223               	subwf	___awdiv@dividend+1,w
  4309  110B  1D03               	skipz
  4310  110C  290F               	goto	u6335
  4311  110D  0820               	movf	___awdiv@divisor,w
  4312  110E  0222               	subwf	___awdiv@dividend,w
  4313  110F                     u6335:
  4314  110F  1C03               	skipc
  4315  1110  2912               	goto	u6331
  4316  1111  2913               	goto	u6330
  4317  1112                     u6331:
  4318  1112  291A               	goto	l3846
  4319  1113                     u6330:
  4320  1113                     l3842:
  4321  1113  0820               	movf	___awdiv@divisor,w
  4322  1114  02A2               	subwf	___awdiv@dividend,f
  4323  1115  0821               	movf	___awdiv@divisor+1,w
  4324  1116  1C03               	skipc
  4325  1117  03A3               	decf	___awdiv@dividend+1,f
  4326  1118  02A3               	subwf	___awdiv@dividend+1,f
  4327  1119                     l3844:
  4328  1119  1426               	bsf	___awdiv@quotient,0
  4329  111A                     l3846:
  4330  111A  3001               	movlw	1
  4331  111B                     u6345:
  4332  111B  1003               	clrc
  4333  111C  0CA1               	rrf	___awdiv@divisor+1,f
  4334  111D  0CA0               	rrf	___awdiv@divisor,f
  4335  111E  3EFF               	addlw	-1
  4336  111F  1D03               	skipz
  4337  1120  291B               	goto	u6345
  4338  1121                     l3848:
  4339  1121  3001               	movlw	1
  4340  1122  02A4               	subwf	___awdiv@counter,f
  4341  1123  1D03               	btfss	3,2
  4342  1124  2926               	goto	u6351
  4343  1125  2927               	goto	u6350
  4344  1126                     u6351:
  4345  1126  2902               	goto	l3840
  4346  1127                     u6350:
  4347  1127                     l3850:
  4348  1127  0825               	movf	___awdiv@sign,w
  4349  1128  1903               	btfsc	3,2
  4350  1129  292B               	goto	u6361
  4351  112A  292C               	goto	u6360
  4352  112B                     u6361:
  4353  112B  2931               	goto	l3854
  4354  112C                     u6360:
  4355  112C                     l3852:
  4356  112C  09A6               	comf	___awdiv@quotient,f
  4357  112D  09A7               	comf	___awdiv@quotient+1,f
  4358  112E  0AA6               	incf	___awdiv@quotient,f
  4359  112F  1903               	skipnz
  4360  1130  0AA7               	incf	___awdiv@quotient+1,f
  4361  1131                     l3854:
  4362  1131  0827               	movf	___awdiv@quotient+1,w
  4363  1132  00A1               	movwf	?___awdiv+1
  4364  1133  0826               	movf	___awdiv@quotient,w
  4365  1134  00A0               	movwf	?___awdiv
  4366  1135                     l497:
  4367  1135  0008               	return
  4368  1136                     __end_of___awdiv:
  4369                           
  4370                           	psect	text6
  4371  136D                     __ptext6:	
  4372 ;; *************** function _fround *****************
  4373 ;; Defined at:
  4374 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  prec            1    wreg     unsigned char 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  prec            1   53[BANK0 ] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  4   34[BANK0 ] unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       4       0       0       0
  4389 ;;      Locals:         0       9       0       0       0
  4390 ;;      Temps:          0       7       0       0       0
  4391 ;;      Totals:         0      20       0       0       0
  4392 ;;Total ram usage:       20 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    3
  4395 ;; This function calls:
  4396 ;;		___flmul
  4397 ;;		___lwdiv
  4398 ;;		___lwmod
  4399 ;; This function is called by:
  4400 ;;		_sprintf
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function _fround
  4406  136D                     _fround:
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4410                           ;fround@prec stored from wreg
  4411  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4412  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4413  136F  00D5               	movwf	fround@prec
  4414  1370                     l2894:
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4417  1370  306E               	movlw	110
  4418  1371  0255               	subwf	fround@prec,w
  4419  1372  1C03               	skipc
  4420  1373  2B75               	goto	u4351
  4421  1374  2B76               	goto	u4350
  4422  1375                     u4351:
  4423  1375  2C83               	goto	l2902
  4424  1376                     u4350:
  4425  1376                     l2896:
  4426                           
  4427                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4428  1376  303F               	movlw	63
  4429  1377  00AB               	movwf	___flmul@b+3
  4430  1378  3000               	movlw	0
  4431  1379  00AA               	movwf	___flmul@b+2
  4432  137A  3000               	movlw	0
  4433  137B  00A9               	movwf	___flmul@b+1
  4434  137C  3000               	movlw	0
  4435  137D  00A8               	movwf	___flmul@b
  4436  137E  3064               	movlw	100
  4437  137F  00F7               	movwf	___lwdiv@divisor
  4438  1380  3000               	movlw	0
  4439  1381  00F8               	movwf	___lwdiv@divisor+1
  4440  1382  0855               	movf	fround@prec,w
  4441  1383  00C6               	movwf	??_fround
  4442  1384  01C7               	clrf	??_fround+1
  4443  1385  0846               	movf	??_fround,w
  4444  1386  00F9               	movwf	___lwdiv@dividend
  4445  1387  0847               	movf	??_fround+1,w
  4446  1388  00FA               	movwf	___lwdiv@dividend+1
  4447  1389  160A  158A  237A  160A  118A  	fcall	___lwdiv
  4448  138E  0877               	movf	?___lwdiv,w
  4449  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4450  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4451  1391  00C8               	movwf	??_fround+2
  4452  1392  3001               	movlw	1
  4453  1393                     u4365:
  4454  1393  1003               	clrc
  4455  1394  0DC8               	rlf	??_fround+2,f
  4456  1395  3EFF               	addlw	-1
  4457  1396  1D03               	skipz
  4458  1397  2B93               	goto	u4365
  4459  1398  1003               	clrc
  4460  1399  0D48               	rlf	??_fround+2,w
  4461  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4462  139B  0084               	movwf	4
  4463  139C  160A  118A  200A  160A  118A  	fcall	stringdir
  4464  13A1  00C9               	movwf	??_fround+3
  4465  13A2  160A  118A  200A  160A  118A  	fcall	stringdir
  4466  13A7  00CA               	movwf	??_fround+4
  4467  13A8  160A  118A  200A  160A  118A  	fcall	stringdir
  4468  13AD  00CB               	movwf	??_fround+5
  4469  13AE  160A  118A  200A  160A  118A  	fcall	stringdir
  4470  13B3  00CC               	movwf	??_fround+6
  4471  13B4  084C               	movf	??_fround+6,w
  4472  13B5  00AF               	movwf	___flmul@a+3
  4473  13B6  084B               	movf	??_fround+5,w
  4474  13B7  00AE               	movwf	___flmul@a+2
  4475  13B8  084A               	movf	??_fround+4,w
  4476  13B9  00AD               	movwf	___flmul@a+1
  4477  13BA  0849               	movf	??_fround+3,w
  4478  13BB  00AC               	movwf	___flmul@a
  4479  13BC  120A  158A  213C  160A  118A  	fcall	___flmul
  4480  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4481  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4482  13C3  082B               	movf	?___flmul+3,w
  4483  13C4  00D4               	movwf	_fround$927+3
  4484  13C5  082A               	movf	?___flmul+2,w
  4485  13C6  00D3               	movwf	_fround$927+2
  4486  13C7  0829               	movf	?___flmul+1,w
  4487  13C8  00D2               	movwf	_fround$927+1
  4488  13C9  0828               	movf	?___flmul,w
  4489  13CA  00D1               	movwf	_fround$927
  4490                           
  4491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4492  13CB  300A               	movlw	10
  4493  13CC  00F7               	movwf	___lwdiv@divisor
  4494  13CD  3000               	movlw	0
  4495  13CE  00F8               	movwf	___lwdiv@divisor+1
  4496  13CF  0855               	movf	fround@prec,w
  4497  13D0  00C6               	movwf	??_fround
  4498  13D1  01C7               	clrf	??_fround+1
  4499  13D2  0846               	movf	??_fround,w
  4500  13D3  00F4               	movwf	___lwmod@dividend
  4501  13D4  0847               	movf	??_fround+1,w
  4502  13D5  00F5               	movwf	___lwmod@dividend+1
  4503  13D6  3064               	movlw	100
  4504  13D7  00F2               	movwf	___lwmod@divisor
  4505  13D8  3000               	movlw	0
  4506  13D9  00F3               	movwf	___lwmod@divisor+1
  4507  13DA  160A  158A  22FA  160A  118A  	fcall	___lwmod
  4508  13DF  0873               	movf	?___lwmod+1,w
  4509  13E0  00FA               	movwf	___lwdiv@dividend+1
  4510  13E1  0872               	movf	?___lwmod,w
  4511  13E2  00F9               	movwf	___lwdiv@dividend
  4512  13E3  160A  158A  237A  160A  118A  	fcall	___lwdiv
  4513  13E8  0877               	movf	?___lwdiv,w
  4514  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4515  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4516  13EB  00C8               	movwf	??_fround+2
  4517  13EC  3001               	movlw	1
  4518  13ED                     u4375:
  4519  13ED  1003               	clrc
  4520  13EE  0DC8               	rlf	??_fround+2,f
  4521  13EF  3EFF               	addlw	-1
  4522  13F0  1D03               	skipz
  4523  13F1  2BED               	goto	u4375
  4524  13F2  1003               	clrc
  4525  13F3  0D48               	rlf	??_fround+2,w
  4526  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4527  13F5  0084               	movwf	4
  4528  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  4529  13FB  00C9               	movwf	??_fround+3
  4530  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4531  1401  00CA               	movwf	??_fround+4
  4532  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  4533  1407  00CB               	movwf	??_fround+5
  4534  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  4535  140D  00CC               	movwf	??_fround+6
  4536  140E  084C               	movf	??_fround+6,w
  4537  140F  00AB               	movwf	___flmul@b+3
  4538  1410  084B               	movf	??_fround+5,w
  4539  1411  00AA               	movwf	___flmul@b+2
  4540  1412  084A               	movf	??_fround+4,w
  4541  1413  00A9               	movwf	___flmul@b+1
  4542  1414  0849               	movf	??_fround+3,w
  4543  1415  00A8               	movwf	___flmul@b
  4544  1416  0854               	movf	_fround$927+3,w
  4545  1417  00AF               	movwf	___flmul@a+3
  4546  1418  0853               	movf	_fround$927+2,w
  4547  1419  00AE               	movwf	___flmul@a+2
  4548  141A  0852               	movf	_fround$927+1,w
  4549  141B  00AD               	movwf	___flmul@a+1
  4550  141C  0851               	movf	_fround$927,w
  4551  141D  00AC               	movwf	___flmul@a
  4552  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  4553  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4554  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4555  1425  082B               	movf	?___flmul+3,w
  4556  1426  00D0               	movwf	_fround$928+3
  4557  1427  082A               	movf	?___flmul+2,w
  4558  1428  00CF               	movwf	_fround$928+2
  4559  1429  0829               	movf	?___flmul+1,w
  4560  142A  00CE               	movwf	_fround$928+1
  4561  142B  0828               	movf	?___flmul,w
  4562  142C  00CD               	movwf	_fround$928
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4565  142D  300A               	movlw	10
  4566  142E  00F2               	movwf	___lwmod@divisor
  4567  142F  3000               	movlw	0
  4568  1430  00F3               	movwf	___lwmod@divisor+1
  4569  1431  0855               	movf	fround@prec,w
  4570  1432  00C6               	movwf	??_fround
  4571  1433  01C7               	clrf	??_fround+1
  4572  1434  0846               	movf	??_fround,w
  4573  1435  00F4               	movwf	___lwmod@dividend
  4574  1436  0847               	movf	??_fround+1,w
  4575  1437  00F5               	movwf	___lwmod@dividend+1
  4576  1438  160A  158A  22FA  160A  118A  	fcall	___lwmod
  4577  143D  0872               	movf	?___lwmod,w
  4578  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4579  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4580  1440  00C8               	movwf	??_fround+2
  4581  1441  3001               	movlw	1
  4582  1442                     u4385:
  4583  1442  1003               	clrc
  4584  1443  0DC8               	rlf	??_fround+2,f
  4585  1444  3EFF               	addlw	-1
  4586  1445  1D03               	skipz
  4587  1446  2C42               	goto	u4385
  4588  1447  1003               	clrc
  4589  1448  0D48               	rlf	??_fround+2,w
  4590  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4591  144A  0084               	movwf	4
  4592  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  4593  1450  00C9               	movwf	??_fround+3
  4594  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  4595  1456  00CA               	movwf	??_fround+4
  4596  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  4597  145C  00CB               	movwf	??_fround+5
  4598  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  4599  1462  00CC               	movwf	??_fround+6
  4600  1463  084C               	movf	??_fround+6,w
  4601  1464  00AB               	movwf	___flmul@b+3
  4602  1465  084B               	movf	??_fround+5,w
  4603  1466  00AA               	movwf	___flmul@b+2
  4604  1467  084A               	movf	??_fround+4,w
  4605  1468  00A9               	movwf	___flmul@b+1
  4606  1469  0849               	movf	??_fround+3,w
  4607  146A  00A8               	movwf	___flmul@b
  4608  146B  0850               	movf	_fround$928+3,w
  4609  146C  00AF               	movwf	___flmul@a+3
  4610  146D  084F               	movf	_fround$928+2,w
  4611  146E  00AE               	movwf	___flmul@a+2
  4612  146F  084E               	movf	_fround$928+1,w
  4613  1470  00AD               	movwf	___flmul@a+1
  4614  1471  084D               	movf	_fround$928,w
  4615  1472  00AC               	movwf	___flmul@a
  4616  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  4617  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4618  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4619  147A  082B               	movf	?___flmul+3,w
  4620  147B  00C5               	movwf	?_fround+3
  4621  147C  082A               	movf	?___flmul+2,w
  4622  147D  00C4               	movwf	?_fround+2
  4623  147E  0829               	movf	?___flmul+1,w
  4624  147F  00C3               	movwf	?_fround+1
  4625  1480  0828               	movf	?___flmul,w
  4626  1481  00C2               	movwf	?_fround
  4627  1482  2D77               	goto	l277
  4628  1483                     l2902:
  4629  1483  300B               	movlw	11
  4630  1484  0255               	subwf	fround@prec,w
  4631  1485  1C03               	skipc
  4632  1486  2C88               	goto	u4391
  4633  1487  2C89               	goto	u4390
  4634  1488                     u4391:
  4635  1488  2D34               	goto	l2908
  4636  1489                     u4390:
  4637  1489                     l2904:
  4638                           
  4639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4640  1489  303F               	movlw	63
  4641  148A  00AB               	movwf	___flmul@b+3
  4642  148B  3000               	movlw	0
  4643  148C  00AA               	movwf	___flmul@b+2
  4644  148D  3000               	movlw	0
  4645  148E  00A9               	movwf	___flmul@b+1
  4646  148F  3000               	movlw	0
  4647  1490  00A8               	movwf	___flmul@b
  4648  1491  300A               	movlw	10
  4649  1492  00F7               	movwf	___lwdiv@divisor
  4650  1493  3000               	movlw	0
  4651  1494  00F8               	movwf	___lwdiv@divisor+1
  4652  1495  0855               	movf	fround@prec,w
  4653  1496  00C6               	movwf	??_fround
  4654  1497  01C7               	clrf	??_fround+1
  4655  1498  0846               	movf	??_fround,w
  4656  1499  00F9               	movwf	___lwdiv@dividend
  4657  149A  0847               	movf	??_fround+1,w
  4658  149B  00FA               	movwf	___lwdiv@dividend+1
  4659  149C  160A  158A  237A  160A  118A  	fcall	___lwdiv
  4660  14A1  0877               	movf	?___lwdiv,w
  4661  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  4662  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  4663  14A4  00C8               	movwf	??_fround+2
  4664  14A5  3001               	movlw	1
  4665  14A6                     u4405:
  4666  14A6  1003               	clrc
  4667  14A7  0DC8               	rlf	??_fround+2,f
  4668  14A8  3EFF               	addlw	-1
  4669  14A9  1D03               	skipz
  4670  14AA  2CA6               	goto	u4405
  4671  14AB  1003               	clrc
  4672  14AC  0D48               	rlf	??_fround+2,w
  4673  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4674  14AE  0084               	movwf	4
  4675  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  4676  14B4  00C9               	movwf	??_fround+3
  4677  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  4678  14BA  00CA               	movwf	??_fround+4
  4679  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  4680  14C0  00CB               	movwf	??_fround+5
  4681  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  4682  14C6  00CC               	movwf	??_fround+6
  4683  14C7  084C               	movf	??_fround+6,w
  4684  14C8  00AF               	movwf	___flmul@a+3
  4685  14C9  084B               	movf	??_fround+5,w
  4686  14CA  00AE               	movwf	___flmul@a+2
  4687  14CB  084A               	movf	??_fround+4,w
  4688  14CC  00AD               	movwf	___flmul@a+1
  4689  14CD  0849               	movf	??_fround+3,w
  4690  14CE  00AC               	movwf	___flmul@a
  4691  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  4692  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  4693  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  4694  14D6  082B               	movf	?___flmul+3,w
  4695  14D7  00D4               	movwf	_fround$927+3
  4696  14D8  082A               	movf	?___flmul+2,w
  4697  14D9  00D3               	movwf	_fround$927+2
  4698  14DA  0829               	movf	?___flmul+1,w
  4699  14DB  00D2               	movwf	_fround$927+1
  4700  14DC  0828               	movf	?___flmul,w
  4701  14DD  00D1               	movwf	_fround$927
  4702                           
  4703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4704  14DE  300A               	movlw	10
  4705  14DF  00F2               	movwf	___lwmod@divisor
  4706  14E0  3000               	movlw	0
  4707  14E1  00F3               	movwf	___lwmod@divisor+1
  4708  14E2  0855               	movf	fround@prec,w
  4709  14E3  00C6               	movwf	??_fround
  4710  14E4  01C7               	clrf	??_fround+1
  4711  14E5  0846               	movf	??_fround,w
  4712  14E6  00F4               	movwf	___lwmod@dividend
  4713  14E7  0847               	movf	??_fround+1,w
  4714  14E8  00F5               	movwf	___lwmod@dividend+1
  4715  14E9  160A  158A  22FA  160A  118A  	fcall	___lwmod
  4716  14EE  0872               	movf	?___lwmod,w
  4717  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  4718  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  4719  14F1  00C8               	movwf	??_fround+2
  4720  14F2  3001               	movlw	1
  4721  14F3                     u4415:
  4722  14F3  1003               	clrc
  4723  14F4  0DC8               	rlf	??_fround+2,f
  4724  14F5  3EFF               	addlw	-1
  4725  14F6  1D03               	skipz
  4726  14F7  2CF3               	goto	u4415
  4727  14F8  1003               	clrc
  4728  14F9  0D48               	rlf	??_fround+2,w
  4729  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4730  14FB  0084               	movwf	4
  4731  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4732  1501  00C9               	movwf	??_fround+3
  4733  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  4734  1507  00CA               	movwf	??_fround+4
  4735  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  4736  150D  00CB               	movwf	??_fround+5
  4737  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  4738  1513  00CC               	movwf	??_fround+6
  4739  1514  084C               	movf	??_fround+6,w
  4740  1515  00AB               	movwf	___flmul@b+3
  4741  1516  084B               	movf	??_fround+5,w
  4742  1517  00AA               	movwf	___flmul@b+2
  4743  1518  084A               	movf	??_fround+4,w
  4744  1519  00A9               	movwf	___flmul@b+1
  4745  151A  0849               	movf	??_fround+3,w
  4746  151B  00A8               	movwf	___flmul@b
  4747  151C  0854               	movf	_fround$927+3,w
  4748  151D  00AF               	movwf	___flmul@a+3
  4749  151E  0853               	movf	_fround$927+2,w
  4750  151F  00AE               	movwf	___flmul@a+2
  4751  1520  0852               	movf	_fround$927+1,w
  4752  1521  00AD               	movwf	___flmul@a+1
  4753  1522  0851               	movf	_fround$927,w
  4754  1523  00AC               	movwf	___flmul@a
  4755  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  4756  1529  1283               	bcf	3,5	;RP0=0, select bank0
  4757  152A  1303               	bcf	3,6	;RP1=0, select bank0
  4758  152B  082B               	movf	?___flmul+3,w
  4759  152C  00C5               	movwf	?_fround+3
  4760  152D  082A               	movf	?___flmul+2,w
  4761  152E  00C4               	movwf	?_fround+2
  4762  152F  0829               	movf	?___flmul+1,w
  4763  1530  00C3               	movwf	?_fround+1
  4764  1531  0828               	movf	?___flmul,w
  4765  1532  00C2               	movwf	?_fround
  4766  1533  2D77               	goto	l277
  4767  1534                     l2908:
  4768                           
  4769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4770  1534  303F               	movlw	63
  4771  1535  00AB               	movwf	___flmul@b+3
  4772  1536  3000               	movlw	0
  4773  1537  00AA               	movwf	___flmul@b+2
  4774  1538  3000               	movlw	0
  4775  1539  00A9               	movwf	___flmul@b+1
  4776  153A  3000               	movlw	0
  4777  153B  00A8               	movwf	___flmul@b
  4778  153C  0855               	movf	fround@prec,w
  4779  153D  00C6               	movwf	??_fround
  4780  153E  3001               	movlw	1
  4781  153F                     u4425:
  4782  153F  1003               	clrc
  4783  1540  0DC6               	rlf	??_fround,f
  4784  1541  3EFF               	addlw	-1
  4785  1542  1D03               	skipz
  4786  1543  2D3F               	goto	u4425
  4787  1544  1003               	clrc
  4788  1545  0D46               	rlf	??_fround,w
  4789  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4790  1547  0084               	movwf	4
  4791  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  4792  154D  00C7               	movwf	??_fround+1
  4793  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  4794  1553  00C8               	movwf	??_fround+2
  4795  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  4796  1559  00C9               	movwf	??_fround+3
  4797  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  4798  155F  00CA               	movwf	??_fround+4
  4799  1560  084A               	movf	??_fround+4,w
  4800  1561  00AF               	movwf	___flmul@a+3
  4801  1562  0849               	movf	??_fround+3,w
  4802  1563  00AE               	movwf	___flmul@a+2
  4803  1564  0848               	movf	??_fround+2,w
  4804  1565  00AD               	movwf	___flmul@a+1
  4805  1566  0847               	movf	??_fround+1,w
  4806  1567  00AC               	movwf	___flmul@a
  4807  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  4808  156D  1283               	bcf	3,5	;RP0=0, select bank0
  4809  156E  1303               	bcf	3,6	;RP1=0, select bank0
  4810  156F  082B               	movf	?___flmul+3,w
  4811  1570  00C5               	movwf	?_fround+3
  4812  1571  082A               	movf	?___flmul+2,w
  4813  1572  00C4               	movwf	?_fround+2
  4814  1573  0829               	movf	?___flmul+1,w
  4815  1574  00C3               	movwf	?_fround+1
  4816  1575  0828               	movf	?___flmul,w
  4817  1576  00C2               	movwf	?_fround
  4818  1577                     l277:
  4819  1577  0008               	return
  4820  1578                     __end_of_fround:
  4821                           
  4822                           	psect	text7
  4823  1AFA                     __ptext7:	
  4824 ;; *************** function ___lwmod *****************
  4825 ;; Defined at:
  4826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  divisor         2    2[COMMON] unsigned int 
  4829 ;;  dividend        2    4[COMMON] unsigned int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  counter         1    6[COMMON] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  2    2[COMMON] unsigned int 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0, btemp+1
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4841 ;;      Params:         4       0       0       0       0
  4842 ;;      Locals:         1       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0
  4844 ;;      Totals:         5       0       0       0       0
  4845 ;;Total ram usage:        5 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_fround
  4852 ;;		_LCD_Write_Number
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function ___lwmod
  4858  1AFA                     ___lwmod:
  4859  1AFA                     l2494:	
  4860                           ;incstack = 0
  4861                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4862                           
  4863  1AFA  0872               	movf	___lwmod@divisor,w
  4864  1AFB  0473               	iorwf	___lwmod@divisor+1,w
  4865  1AFC  1903               	btfsc	3,2
  4866  1AFD  2AFF               	goto	u3451
  4867  1AFE  2B00               	goto	u3450
  4868  1AFF                     u3451:
  4869  1AFF  2B2F               	goto	l2512
  4870  1B00                     u3450:
  4871  1B00                     l2496:
  4872  1B00  01F6               	clrf	___lwmod@counter
  4873  1B01  0AF6               	incf	___lwmod@counter,f
  4874  1B02  2B0E               	goto	l2502
  4875  1B03                     l2498:
  4876  1B03  3001               	movlw	1
  4877  1B04                     u3465:
  4878  1B04  1003               	clrc
  4879  1B05  0DF2               	rlf	___lwmod@divisor,f
  4880  1B06  0DF3               	rlf	___lwmod@divisor+1,f
  4881  1B07  3EFF               	addlw	-1
  4882  1B08  1D03               	skipz
  4883  1B09  2B04               	goto	u3465
  4884  1B0A                     l2500:
  4885  1B0A  3001               	movlw	1
  4886  1B0B  00FF               	movwf	btemp+1
  4887  1B0C  087F               	movf	btemp+1,w
  4888  1B0D  07F6               	addwf	___lwmod@counter,f
  4889  1B0E                     l2502:
  4890  1B0E  1FF3               	btfss	___lwmod@divisor+1,7
  4891  1B0F  2B11               	goto	u3471
  4892  1B10  2B12               	goto	u3470
  4893  1B11                     u3471:
  4894  1B11  2B03               	goto	l2498
  4895  1B12                     u3470:
  4896  1B12                     l2504:
  4897  1B12  0873               	movf	___lwmod@divisor+1,w
  4898  1B13  0275               	subwf	___lwmod@dividend+1,w
  4899  1B14  1D03               	skipz
  4900  1B15  2B18               	goto	u3485
  4901  1B16  0872               	movf	___lwmod@divisor,w
  4902  1B17  0274               	subwf	___lwmod@dividend,w
  4903  1B18                     u3485:
  4904  1B18  1C03               	skipc
  4905  1B19  2B1B               	goto	u3481
  4906  1B1A  2B1C               	goto	u3480
  4907  1B1B                     u3481:
  4908  1B1B  2B22               	goto	l2508
  4909  1B1C                     u3480:
  4910  1B1C                     l2506:
  4911  1B1C  0872               	movf	___lwmod@divisor,w
  4912  1B1D  02F4               	subwf	___lwmod@dividend,f
  4913  1B1E  0873               	movf	___lwmod@divisor+1,w
  4914  1B1F  1C03               	skipc
  4915  1B20  03F5               	decf	___lwmod@dividend+1,f
  4916  1B21  02F5               	subwf	___lwmod@dividend+1,f
  4917  1B22                     l2508:
  4918  1B22  3001               	movlw	1
  4919  1B23                     u3495:
  4920  1B23  1003               	clrc
  4921  1B24  0CF3               	rrf	___lwmod@divisor+1,f
  4922  1B25  0CF2               	rrf	___lwmod@divisor,f
  4923  1B26  3EFF               	addlw	-1
  4924  1B27  1D03               	skipz
  4925  1B28  2B23               	goto	u3495
  4926  1B29                     l2510:
  4927  1B29  3001               	movlw	1
  4928  1B2A  02F6               	subwf	___lwmod@counter,f
  4929  1B2B  1D03               	btfss	3,2
  4930  1B2C  2B2E               	goto	u3501
  4931  1B2D  2B2F               	goto	u3500
  4932  1B2E                     u3501:
  4933  1B2E  2B12               	goto	l2504
  4934  1B2F                     u3500:
  4935  1B2F                     l2512:
  4936  1B2F  0875               	movf	___lwmod@dividend+1,w
  4937  1B30  00F3               	movwf	?___lwmod+1
  4938  1B31  0874               	movf	___lwmod@dividend,w
  4939  1B32  00F2               	movwf	?___lwmod
  4940  1B33                     l660:
  4941  1B33  0008               	return
  4942  1B34                     __end_of___lwmod:
  4943                           
  4944                           	psect	text8
  4945  1B7A                     __ptext8:	
  4946 ;; *************** function ___lwdiv *****************
  4947 ;; Defined at:
  4948 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  divisor         2    7[COMMON] unsigned int 
  4951 ;;  dividend        2    9[COMMON] unsigned int 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  quotient        2    0[BANK0 ] unsigned int 
  4954 ;;  counter         1    2[BANK0 ] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  2    7[COMMON] unsigned int 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, btemp+1
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4964 ;;      Params:         4       0       0       0       0
  4965 ;;      Locals:         0       3       0       0       0
  4966 ;;      Temps:          0       0       0       0       0
  4967 ;;      Totals:         4       3       0       0       0
  4968 ;;Total ram usage:        7 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    1
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_fround
  4975 ;;		_LCD_Write_Number
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function ___lwdiv
  4981  1B7A                     ___lwdiv:
  4982  1B7A                     l2468:	
  4983                           ;incstack = 0
  4984                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  4985                           
  4986  1B7A  1283               	bcf	3,5	;RP0=0, select bank0
  4987  1B7B  1303               	bcf	3,6	;RP1=0, select bank0
  4988  1B7C  01A0               	clrf	___lwdiv@quotient
  4989  1B7D  01A1               	clrf	___lwdiv@quotient+1
  4990  1B7E                     l2470:
  4991  1B7E  0877               	movf	___lwdiv@divisor,w
  4992  1B7F  0478               	iorwf	___lwdiv@divisor+1,w
  4993  1B80  1903               	btfsc	3,2
  4994  1B81  2B83               	goto	u3381
  4995  1B82  2B84               	goto	u3380
  4996  1B83                     u3381:
  4997  1B83  2BBB               	goto	l2490
  4998  1B84                     u3380:
  4999  1B84                     l2472:
  5000  1B84  01A2               	clrf	___lwdiv@counter
  5001  1B85  0AA2               	incf	___lwdiv@counter,f
  5002  1B86  2B92               	goto	l2478
  5003  1B87                     l2474:
  5004  1B87  3001               	movlw	1
  5005  1B88                     u3395:
  5006  1B88  1003               	clrc
  5007  1B89  0DF7               	rlf	___lwdiv@divisor,f
  5008  1B8A  0DF8               	rlf	___lwdiv@divisor+1,f
  5009  1B8B  3EFF               	addlw	-1
  5010  1B8C  1D03               	skipz
  5011  1B8D  2B88               	goto	u3395
  5012  1B8E                     l2476:
  5013  1B8E  3001               	movlw	1
  5014  1B8F  00FF               	movwf	btemp+1
  5015  1B90  087F               	movf	btemp+1,w
  5016  1B91  07A2               	addwf	___lwdiv@counter,f
  5017  1B92                     l2478:
  5018  1B92  1FF8               	btfss	___lwdiv@divisor+1,7
  5019  1B93  2B95               	goto	u3401
  5020  1B94  2B96               	goto	u3400
  5021  1B95                     u3401:
  5022  1B95  2B87               	goto	l2474
  5023  1B96                     u3400:
  5024  1B96                     l2480:
  5025  1B96  3001               	movlw	1
  5026  1B97                     u3415:
  5027  1B97  1003               	clrc
  5028  1B98  0DA0               	rlf	___lwdiv@quotient,f
  5029  1B99  0DA1               	rlf	___lwdiv@quotient+1,f
  5030  1B9A  3EFF               	addlw	-1
  5031  1B9B  1D03               	skipz
  5032  1B9C  2B97               	goto	u3415
  5033  1B9D  0878               	movf	___lwdiv@divisor+1,w
  5034  1B9E  027A               	subwf	___lwdiv@dividend+1,w
  5035  1B9F  1D03               	skipz
  5036  1BA0  2BA3               	goto	u3425
  5037  1BA1  0877               	movf	___lwdiv@divisor,w
  5038  1BA2  0279               	subwf	___lwdiv@dividend,w
  5039  1BA3                     u3425:
  5040  1BA3  1C03               	skipc
  5041  1BA4  2BA6               	goto	u3421
  5042  1BA5  2BA7               	goto	u3420
  5043  1BA6                     u3421:
  5044  1BA6  2BAE               	goto	l2486
  5045  1BA7                     u3420:
  5046  1BA7                     l2482:
  5047  1BA7  0877               	movf	___lwdiv@divisor,w
  5048  1BA8  02F9               	subwf	___lwdiv@dividend,f
  5049  1BA9  0878               	movf	___lwdiv@divisor+1,w
  5050  1BAA  1C03               	skipc
  5051  1BAB  03FA               	decf	___lwdiv@dividend+1,f
  5052  1BAC  02FA               	subwf	___lwdiv@dividend+1,f
  5053  1BAD                     l2484:
  5054  1BAD  1420               	bsf	___lwdiv@quotient,0
  5055  1BAE                     l2486:
  5056  1BAE  3001               	movlw	1
  5057  1BAF                     u3435:
  5058  1BAF  1003               	clrc
  5059  1BB0  0CF8               	rrf	___lwdiv@divisor+1,f
  5060  1BB1  0CF7               	rrf	___lwdiv@divisor,f
  5061  1BB2  3EFF               	addlw	-1
  5062  1BB3  1D03               	skipz
  5063  1BB4  2BAF               	goto	u3435
  5064  1BB5                     l2488:
  5065  1BB5  3001               	movlw	1
  5066  1BB6  02A2               	subwf	___lwdiv@counter,f
  5067  1BB7  1D03               	btfss	3,2
  5068  1BB8  2BBA               	goto	u3441
  5069  1BB9  2BBB               	goto	u3440
  5070  1BBA                     u3441:
  5071  1BBA  2B96               	goto	l2480
  5072  1BBB                     u3440:
  5073  1BBB                     l2490:
  5074  1BBB  0821               	movf	___lwdiv@quotient+1,w
  5075  1BBC  00F8               	movwf	?___lwdiv+1
  5076  1BBD  0820               	movf	___lwdiv@quotient,w
  5077  1BBE  00F7               	movwf	?___lwdiv
  5078  1BBF                     l650:
  5079  1BBF  0008               	return
  5080  1BC0                     __end_of___lwdiv:
  5081                           
  5082                           	psect	text9
  5083  093C                     __ptext9:	
  5084 ;; *************** function ___flmul *****************
  5085 ;; Defined at:
  5086 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  b               4    8[BANK0 ] unsigned int 
  5089 ;;  a               4   12[BANK0 ] unsigned int 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  prod            4   28[BANK0 ] struct .
  5092 ;;  grs             4   22[BANK0 ] unsigned long 
  5093 ;;  temp            2   32[BANK0 ] struct .
  5094 ;;  bexp            1   27[BANK0 ] unsigned char 
  5095 ;;  aexp            1   26[BANK0 ] unsigned char 
  5096 ;;  sign            1   21[BANK0 ] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  4    8[BANK0 ] unsigned char 
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5106 ;;      Params:         0       8       0       0       0
  5107 ;;      Locals:         0      13       0       0       0
  5108 ;;      Temps:          0       5       0       0       0
  5109 ;;      Totals:         0      26       0       0       0
  5110 ;;Total ram usage:       26 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    2
  5113 ;; This function calls:
  5114 ;;		__Umul8_16
  5115 ;; This function is called by:
  5116 ;;		_fround
  5117 ;;		_scale
  5118 ;;		_sprintf
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function ___flmul
  5124  093C                     ___flmul:
  5125  093C                     l2718:	
  5126                           ;incstack = 0
  5127                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5128                           
  5129  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5130  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5131  093E  082B               	movf	___flmul@b+3,w
  5132  093F  3980               	andlw	128
  5133  0940  00FF               	movwf	btemp+1
  5134  0941  087F               	movf	btemp+1,w
  5135  0942  00B5               	movwf	___flmul@sign
  5136  0943                     l2720:
  5137  0943  082B               	movf	___flmul@b+3,w
  5138  0944  00B0               	movwf	??___flmul
  5139  0945  0730               	addwf	??___flmul,w
  5140  0946  00FF               	movwf	btemp+1
  5141  0947  087F               	movf	btemp+1,w
  5142  0948  00BB               	movwf	___flmul@bexp
  5143  0949                     l2722:
  5144  0949  1FAA               	btfss	___flmul@b+2,7
  5145  094A  294C               	goto	u3971
  5146  094B  294D               	goto	u3970
  5147  094C                     u3971:
  5148  094C  294E               	goto	l2726
  5149  094D                     u3970:
  5150  094D                     l2724:
  5151  094D  143B               	bsf	___flmul@bexp,0
  5152  094E                     l2726:
  5153  094E  083B               	movf	___flmul@bexp,w
  5154  094F  1903               	btfsc	3,2
  5155  0950  2952               	goto	u3981
  5156  0951  2953               	goto	u3980
  5157  0952                     u3981:
  5158  0952  2962               	goto	l2734
  5159  0953                     u3980:
  5160  0953                     l2728:
  5161  0953  0A3B               	incf	___flmul@bexp,w
  5162  0954  1D03               	btfss	3,2
  5163  0955  2957               	goto	u3991
  5164  0956  2958               	goto	u3990
  5165  0957                     u3991:
  5166  0957  2960               	goto	l2732
  5167  0958                     u3990:
  5168  0958                     l2730:
  5169  0958  3000               	movlw	0
  5170  0959  00AB               	movwf	___flmul@b+3
  5171  095A  3000               	movlw	0
  5172  095B  00AA               	movwf	___flmul@b+2
  5173  095C  3000               	movlw	0
  5174  095D  00A9               	movwf	___flmul@b+1
  5175  095E  3000               	movlw	0
  5176  095F  00A8               	movwf	___flmul@b
  5177  0960                     l2732:
  5178  0960  17AA               	bsf	___flmul@b+2,7
  5179  0961  296A               	goto	l2736
  5180  0962                     l2734:
  5181  0962  3000               	movlw	0
  5182  0963  00AB               	movwf	___flmul@b+3
  5183  0964  3000               	movlw	0
  5184  0965  00AA               	movwf	___flmul@b+2
  5185  0966  3000               	movlw	0
  5186  0967  00A9               	movwf	___flmul@b+1
  5187  0968  3000               	movlw	0
  5188  0969  00A8               	movwf	___flmul@b
  5189  096A                     l2736:
  5190  096A  082F               	movf	___flmul@a+3,w
  5191  096B  3980               	andlw	128
  5192  096C  00FF               	movwf	btemp+1
  5193  096D  087F               	movf	btemp+1,w
  5194  096E  06B5               	xorwf	___flmul@sign,f
  5195  096F                     l2738:
  5196  096F  082F               	movf	___flmul@a+3,w
  5197  0970  00B0               	movwf	??___flmul
  5198  0971  0730               	addwf	??___flmul,w
  5199  0972  00FF               	movwf	btemp+1
  5200  0973  087F               	movf	btemp+1,w
  5201  0974  00BA               	movwf	___flmul@aexp
  5202  0975                     l2740:
  5203  0975  1FAE               	btfss	___flmul@a+2,7
  5204  0976  2978               	goto	u4001
  5205  0977  2979               	goto	u4000
  5206  0978                     u4001:
  5207  0978  297A               	goto	l2744
  5208  0979                     u4000:
  5209  0979                     l2742:
  5210  0979  143A               	bsf	___flmul@aexp,0
  5211  097A                     l2744:
  5212  097A  083A               	movf	___flmul@aexp,w
  5213  097B  1903               	btfsc	3,2
  5214  097C  297E               	goto	u4011
  5215  097D  297F               	goto	u4010
  5216  097E                     u4011:
  5217  097E  298E               	goto	l2752
  5218  097F                     u4010:
  5219  097F                     l2746:
  5220  097F  0A3A               	incf	___flmul@aexp,w
  5221  0980  1D03               	btfss	3,2
  5222  0981  2983               	goto	u4021
  5223  0982  2984               	goto	u4020
  5224  0983                     u4021:
  5225  0983  298C               	goto	l2750
  5226  0984                     u4020:
  5227  0984                     l2748:
  5228  0984  3000               	movlw	0
  5229  0985  00AF               	movwf	___flmul@a+3
  5230  0986  3000               	movlw	0
  5231  0987  00AE               	movwf	___flmul@a+2
  5232  0988  3000               	movlw	0
  5233  0989  00AD               	movwf	___flmul@a+1
  5234  098A  3000               	movlw	0
  5235  098B  00AC               	movwf	___flmul@a
  5236  098C                     l2750:
  5237  098C  17AE               	bsf	___flmul@a+2,7
  5238  098D  2996               	goto	l2754
  5239  098E                     l2752:
  5240  098E  3000               	movlw	0
  5241  098F  00AF               	movwf	___flmul@a+3
  5242  0990  3000               	movlw	0
  5243  0991  00AE               	movwf	___flmul@a+2
  5244  0992  3000               	movlw	0
  5245  0993  00AD               	movwf	___flmul@a+1
  5246  0994  3000               	movlw	0
  5247  0995  00AC               	movwf	___flmul@a
  5248  0996                     l2754:
  5249  0996  083A               	movf	___flmul@aexp,w
  5250  0997  1903               	btfsc	3,2
  5251  0998  299A               	goto	u4031
  5252  0999  299B               	goto	u4030
  5253  099A                     u4031:
  5254  099A  29A0               	goto	l2758
  5255  099B                     u4030:
  5256  099B                     l2756:
  5257  099B  083B               	movf	___flmul@bexp,w
  5258  099C  1D03               	btfss	3,2
  5259  099D  299F               	goto	u4041
  5260  099E  29A0               	goto	u4040
  5261  099F                     u4041:
  5262  099F  29A9               	goto	l2762
  5263  09A0                     u4040:
  5264  09A0                     l2758:
  5265  09A0  3000               	movlw	0
  5266  09A1  00AB               	movwf	?___flmul+3
  5267  09A2  3000               	movlw	0
  5268  09A3  00AA               	movwf	?___flmul+2
  5269  09A4  3000               	movlw	0
  5270  09A5  00A9               	movwf	?___flmul+1
  5271  09A6  3000               	movlw	0
  5272  09A7  00A8               	movwf	?___flmul
  5273  09A8  2C9C               	goto	l767
  5274  09A9                     l2762:
  5275  09A9  0828               	movf	___flmul@b,w
  5276  09AA  00FF               	movwf	btemp+1
  5277  09AB  087F               	movf	btemp+1,w
  5278  09AC  00F2               	movwf	__Umul8_16@multiplicand
  5279  09AD  082E               	movf	___flmul@a+2,w
  5280  09AE  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5281  09B3  0873               	movf	?__Umul8_16+1,w
  5282  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5283  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5284  09B6  00C1               	movwf	___flmul@temp+1
  5285  09B7  0872               	movf	?__Umul8_16,w
  5286  09B8  00C0               	movwf	___flmul@temp
  5287  09B9                     l2764:
  5288  09B9  0840               	movf	___flmul@temp,w
  5289  09BA  00B0               	movwf	??___flmul
  5290  09BB  01B1               	clrf	??___flmul+1
  5291  09BC  01B2               	clrf	??___flmul+2
  5292  09BD  01B3               	clrf	??___flmul+3
  5293  09BE  0833               	movf	??___flmul+3,w
  5294  09BF  00B9               	movwf	___flmul@grs+3
  5295  09C0  0832               	movf	??___flmul+2,w
  5296  09C1  00B8               	movwf	___flmul@grs+2
  5297  09C2  0831               	movf	??___flmul+1,w
  5298  09C3  00B7               	movwf	___flmul@grs+1
  5299  09C4  0830               	movf	??___flmul,w
  5300  09C5  00B6               	movwf	___flmul@grs
  5301  09C6                     l2766:
  5302  09C6  0841               	movf	___flmul@temp+1,w
  5303  09C7  00B0               	movwf	??___flmul
  5304  09C8  01B1               	clrf	??___flmul+1
  5305  09C9  01B2               	clrf	??___flmul+2
  5306  09CA  01B3               	clrf	??___flmul+3
  5307  09CB  0833               	movf	??___flmul+3,w
  5308  09CC  00BF               	movwf	___flmul@prod+3
  5309  09CD  0832               	movf	??___flmul+2,w
  5310  09CE  00BE               	movwf	___flmul@prod+2
  5311  09CF  0831               	movf	??___flmul+1,w
  5312  09D0  00BD               	movwf	___flmul@prod+1
  5313  09D1  0830               	movf	??___flmul,w
  5314  09D2  00BC               	movwf	___flmul@prod
  5315  09D3  0829               	movf	___flmul@b+1,w
  5316  09D4  00FF               	movwf	btemp+1
  5317  09D5  087F               	movf	btemp+1,w
  5318  09D6  00F2               	movwf	__Umul8_16@multiplicand
  5319  09D7  082D               	movf	___flmul@a+1,w
  5320  09D8  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5321  09DD  0873               	movf	?__Umul8_16+1,w
  5322  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5323  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5324  09E0  00C1               	movwf	___flmul@temp+1
  5325  09E1  0872               	movf	?__Umul8_16,w
  5326  09E2  00C0               	movwf	___flmul@temp
  5327  09E3                     l2768:
  5328  09E3  0840               	movf	___flmul@temp,w
  5329  09E4  00B0               	movwf	??___flmul
  5330  09E5  01B1               	clrf	??___flmul+1
  5331  09E6  01B2               	clrf	??___flmul+2
  5332  09E7  01B3               	clrf	??___flmul+3
  5333  09E8  0830               	movf	??___flmul,w
  5334  09E9  07B6               	addwf	___flmul@grs,f
  5335  09EA  0831               	movf	??___flmul+1,w
  5336  09EB  1103               	clrz
  5337  09EC  1803               	skipnc
  5338  09ED  3E01               	addlw	1
  5339  09EE  1903               	skipnz
  5340  09EF  29F1               	goto	u4051
  5341  09F0  07B7               	addwf	___flmul@grs+1,f
  5342  09F1                     u4051:
  5343  09F1  0832               	movf	??___flmul+2,w
  5344  09F2  1103               	clrz
  5345  09F3  1803               	skipnc
  5346  09F4  3E01               	addlw	1
  5347  09F5  1903               	skipnz
  5348  09F6  29F8               	goto	u4052
  5349  09F7  07B8               	addwf	___flmul@grs+2,f
  5350  09F8                     u4052:
  5351  09F8  0833               	movf	??___flmul+3,w
  5352  09F9  1103               	clrz
  5353  09FA  1803               	skipnc
  5354  09FB  3E01               	addlw	1
  5355  09FC  1903               	skipnz
  5356  09FD  29FF               	goto	u4053
  5357  09FE  07B9               	addwf	___flmul@grs+3,f
  5358  09FF                     u4053:
  5359  09FF                     l2770:
  5360  09FF  0841               	movf	___flmul@temp+1,w
  5361  0A00  00B0               	movwf	??___flmul
  5362  0A01  01B1               	clrf	??___flmul+1
  5363  0A02  01B2               	clrf	??___flmul+2
  5364  0A03  01B3               	clrf	??___flmul+3
  5365  0A04  0830               	movf	??___flmul,w
  5366  0A05  07BC               	addwf	___flmul@prod,f
  5367  0A06  0831               	movf	??___flmul+1,w
  5368  0A07  1103               	clrz
  5369  0A08  1803               	skipnc
  5370  0A09  3E01               	addlw	1
  5371  0A0A  1903               	skipnz
  5372  0A0B  2A0D               	goto	u4061
  5373  0A0C  07BD               	addwf	___flmul@prod+1,f
  5374  0A0D                     u4061:
  5375  0A0D  0832               	movf	??___flmul+2,w
  5376  0A0E  1103               	clrz
  5377  0A0F  1803               	skipnc
  5378  0A10  3E01               	addlw	1
  5379  0A11  1903               	skipnz
  5380  0A12  2A14               	goto	u4062
  5381  0A13  07BE               	addwf	___flmul@prod+2,f
  5382  0A14                     u4062:
  5383  0A14  0833               	movf	??___flmul+3,w
  5384  0A15  1103               	clrz
  5385  0A16  1803               	skipnc
  5386  0A17  3E01               	addlw	1
  5387  0A18  1903               	skipnz
  5388  0A19  2A1B               	goto	u4063
  5389  0A1A  07BF               	addwf	___flmul@prod+3,f
  5390  0A1B                     u4063:
  5391  0A1B  082A               	movf	___flmul@b+2,w
  5392  0A1C  00FF               	movwf	btemp+1
  5393  0A1D  087F               	movf	btemp+1,w
  5394  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  5395  0A1F  082C               	movf	___flmul@a,w
  5396  0A20  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5397  0A25  0873               	movf	?__Umul8_16+1,w
  5398  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5400  0A28  00C1               	movwf	___flmul@temp+1
  5401  0A29  0872               	movf	?__Umul8_16,w
  5402  0A2A  00C0               	movwf	___flmul@temp
  5403  0A2B                     l2772:
  5404  0A2B  0840               	movf	___flmul@temp,w
  5405  0A2C  00B0               	movwf	??___flmul
  5406  0A2D  01B1               	clrf	??___flmul+1
  5407  0A2E  01B2               	clrf	??___flmul+2
  5408  0A2F  01B3               	clrf	??___flmul+3
  5409  0A30  0830               	movf	??___flmul,w
  5410  0A31  07B6               	addwf	___flmul@grs,f
  5411  0A32  0831               	movf	??___flmul+1,w
  5412  0A33  1103               	clrz
  5413  0A34  1803               	skipnc
  5414  0A35  3E01               	addlw	1
  5415  0A36  1903               	skipnz
  5416  0A37  2A39               	goto	u4071
  5417  0A38  07B7               	addwf	___flmul@grs+1,f
  5418  0A39                     u4071:
  5419  0A39  0832               	movf	??___flmul+2,w
  5420  0A3A  1103               	clrz
  5421  0A3B  1803               	skipnc
  5422  0A3C  3E01               	addlw	1
  5423  0A3D  1903               	skipnz
  5424  0A3E  2A40               	goto	u4072
  5425  0A3F  07B8               	addwf	___flmul@grs+2,f
  5426  0A40                     u4072:
  5427  0A40  0833               	movf	??___flmul+3,w
  5428  0A41  1103               	clrz
  5429  0A42  1803               	skipnc
  5430  0A43  3E01               	addlw	1
  5431  0A44  1903               	skipnz
  5432  0A45  2A47               	goto	u4073
  5433  0A46  07B9               	addwf	___flmul@grs+3,f
  5434  0A47                     u4073:
  5435  0A47                     l2774:
  5436  0A47  0841               	movf	___flmul@temp+1,w
  5437  0A48  00B0               	movwf	??___flmul
  5438  0A49  01B1               	clrf	??___flmul+1
  5439  0A4A  01B2               	clrf	??___flmul+2
  5440  0A4B  01B3               	clrf	??___flmul+3
  5441  0A4C  0830               	movf	??___flmul,w
  5442  0A4D  07BC               	addwf	___flmul@prod,f
  5443  0A4E  0831               	movf	??___flmul+1,w
  5444  0A4F  1103               	clrz
  5445  0A50  1803               	skipnc
  5446  0A51  3E01               	addlw	1
  5447  0A52  1903               	skipnz
  5448  0A53  2A55               	goto	u4081
  5449  0A54  07BD               	addwf	___flmul@prod+1,f
  5450  0A55                     u4081:
  5451  0A55  0832               	movf	??___flmul+2,w
  5452  0A56  1103               	clrz
  5453  0A57  1803               	skipnc
  5454  0A58  3E01               	addlw	1
  5455  0A59  1903               	skipnz
  5456  0A5A  2A5C               	goto	u4082
  5457  0A5B  07BE               	addwf	___flmul@prod+2,f
  5458  0A5C                     u4082:
  5459  0A5C  0833               	movf	??___flmul+3,w
  5460  0A5D  1103               	clrz
  5461  0A5E  1803               	skipnc
  5462  0A5F  3E01               	addlw	1
  5463  0A60  1903               	skipnz
  5464  0A61  2A63               	goto	u4083
  5465  0A62  07BF               	addwf	___flmul@prod+3,f
  5466  0A63                     u4083:
  5467  0A63                     l2776:
  5468  0A63  3008               	movlw	8
  5469  0A64  00B0               	movwf	??___flmul
  5470  0A65                     u4095:
  5471  0A65  1003               	clrc
  5472  0A66  0DB6               	rlf	___flmul@grs,f
  5473  0A67  0DB7               	rlf	___flmul@grs+1,f
  5474  0A68  0DB8               	rlf	___flmul@grs+2,f
  5475  0A69  0DB9               	rlf	___flmul@grs+3,f
  5476  0A6A  0BB0               	decfsz	??___flmul,f
  5477  0A6B  2A65               	goto	u4095
  5478  0A6C                     l2778:
  5479  0A6C  0829               	movf	___flmul@b+1,w
  5480  0A6D  00FF               	movwf	btemp+1
  5481  0A6E  087F               	movf	btemp+1,w
  5482  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  5483  0A70  082C               	movf	___flmul@a,w
  5484  0A71  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5485  0A76  0873               	movf	?__Umul8_16+1,w
  5486  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5487  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5488  0A79  00C1               	movwf	___flmul@temp+1
  5489  0A7A  0872               	movf	?__Umul8_16,w
  5490  0A7B  00C0               	movwf	___flmul@temp
  5491  0A7C                     l2780:
  5492  0A7C  0840               	movf	___flmul@temp,w
  5493  0A7D  00B0               	movwf	??___flmul
  5494  0A7E  0841               	movf	___flmul@temp+1,w
  5495  0A7F  00B1               	movwf	??___flmul+1
  5496  0A80  01B2               	clrf	??___flmul+2
  5497  0A81  01B3               	clrf	??___flmul+3
  5498  0A82  0830               	movf	??___flmul,w
  5499  0A83  07B6               	addwf	___flmul@grs,f
  5500  0A84  0831               	movf	??___flmul+1,w
  5501  0A85  1103               	clrz
  5502  0A86  1803               	skipnc
  5503  0A87  3E01               	addlw	1
  5504  0A88  1903               	skipnz
  5505  0A89  2A8B               	goto	u4101
  5506  0A8A  07B7               	addwf	___flmul@grs+1,f
  5507  0A8B                     u4101:
  5508  0A8B  0832               	movf	??___flmul+2,w
  5509  0A8C  1103               	clrz
  5510  0A8D  1803               	skipnc
  5511  0A8E  3E01               	addlw	1
  5512  0A8F  1903               	skipnz
  5513  0A90  2A92               	goto	u4102
  5514  0A91  07B8               	addwf	___flmul@grs+2,f
  5515  0A92                     u4102:
  5516  0A92  0833               	movf	??___flmul+3,w
  5517  0A93  1103               	clrz
  5518  0A94  1803               	skipnc
  5519  0A95  3E01               	addlw	1
  5520  0A96  1903               	skipnz
  5521  0A97  2A99               	goto	u4103
  5522  0A98  07B9               	addwf	___flmul@grs+3,f
  5523  0A99                     u4103:
  5524  0A99                     l2782:
  5525  0A99  0828               	movf	___flmul@b,w
  5526  0A9A  00FF               	movwf	btemp+1
  5527  0A9B  087F               	movf	btemp+1,w
  5528  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  5529  0A9D  082D               	movf	___flmul@a+1,w
  5530  0A9E  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5531  0AA3  0873               	movf	?__Umul8_16+1,w
  5532  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5533  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5534  0AA6  00C1               	movwf	___flmul@temp+1
  5535  0AA7  0872               	movf	?__Umul8_16,w
  5536  0AA8  00C0               	movwf	___flmul@temp
  5537  0AA9                     l2784:
  5538  0AA9  0840               	movf	___flmul@temp,w
  5539  0AAA  00B0               	movwf	??___flmul
  5540  0AAB  0841               	movf	___flmul@temp+1,w
  5541  0AAC  00B1               	movwf	??___flmul+1
  5542  0AAD  01B2               	clrf	??___flmul+2
  5543  0AAE  01B3               	clrf	??___flmul+3
  5544  0AAF  0830               	movf	??___flmul,w
  5545  0AB0  07B6               	addwf	___flmul@grs,f
  5546  0AB1  0831               	movf	??___flmul+1,w
  5547  0AB2  1103               	clrz
  5548  0AB3  1803               	skipnc
  5549  0AB4  3E01               	addlw	1
  5550  0AB5  1903               	skipnz
  5551  0AB6  2AB8               	goto	u4111
  5552  0AB7  07B7               	addwf	___flmul@grs+1,f
  5553  0AB8                     u4111:
  5554  0AB8  0832               	movf	??___flmul+2,w
  5555  0AB9  1103               	clrz
  5556  0ABA  1803               	skipnc
  5557  0ABB  3E01               	addlw	1
  5558  0ABC  1903               	skipnz
  5559  0ABD  2ABF               	goto	u4112
  5560  0ABE  07B8               	addwf	___flmul@grs+2,f
  5561  0ABF                     u4112:
  5562  0ABF  0833               	movf	??___flmul+3,w
  5563  0AC0  1103               	clrz
  5564  0AC1  1803               	skipnc
  5565  0AC2  3E01               	addlw	1
  5566  0AC3  1903               	skipnz
  5567  0AC4  2AC6               	goto	u4113
  5568  0AC5  07B9               	addwf	___flmul@grs+3,f
  5569  0AC6                     u4113:
  5570  0AC6                     l2786:
  5571  0AC6  3008               	movlw	8
  5572  0AC7  00B0               	movwf	??___flmul
  5573  0AC8                     u4125:
  5574  0AC8  1003               	clrc
  5575  0AC9  0DB6               	rlf	___flmul@grs,f
  5576  0ACA  0DB7               	rlf	___flmul@grs+1,f
  5577  0ACB  0DB8               	rlf	___flmul@grs+2,f
  5578  0ACC  0DB9               	rlf	___flmul@grs+3,f
  5579  0ACD  0BB0               	decfsz	??___flmul,f
  5580  0ACE  2AC8               	goto	u4125
  5581  0ACF  0828               	movf	___flmul@b,w
  5582  0AD0  00FF               	movwf	btemp+1
  5583  0AD1  087F               	movf	btemp+1,w
  5584  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  5585  0AD3  082C               	movf	___flmul@a,w
  5586  0AD4  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5587  0AD9  0873               	movf	?__Umul8_16+1,w
  5588  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5590  0ADC  00C1               	movwf	___flmul@temp+1
  5591  0ADD  0872               	movf	?__Umul8_16,w
  5592  0ADE  00C0               	movwf	___flmul@temp
  5593  0ADF                     l2788:
  5594  0ADF  0840               	movf	___flmul@temp,w
  5595  0AE0  00B0               	movwf	??___flmul
  5596  0AE1  0841               	movf	___flmul@temp+1,w
  5597  0AE2  00B1               	movwf	??___flmul+1
  5598  0AE3  01B2               	clrf	??___flmul+2
  5599  0AE4  01B3               	clrf	??___flmul+3
  5600  0AE5  0830               	movf	??___flmul,w
  5601  0AE6  07B6               	addwf	___flmul@grs,f
  5602  0AE7  0831               	movf	??___flmul+1,w
  5603  0AE8  1103               	clrz
  5604  0AE9  1803               	skipnc
  5605  0AEA  3E01               	addlw	1
  5606  0AEB  1903               	skipnz
  5607  0AEC  2AEE               	goto	u4131
  5608  0AED  07B7               	addwf	___flmul@grs+1,f
  5609  0AEE                     u4131:
  5610  0AEE  0832               	movf	??___flmul+2,w
  5611  0AEF  1103               	clrz
  5612  0AF0  1803               	skipnc
  5613  0AF1  3E01               	addlw	1
  5614  0AF2  1903               	skipnz
  5615  0AF3  2AF5               	goto	u4132
  5616  0AF4  07B8               	addwf	___flmul@grs+2,f
  5617  0AF5                     u4132:
  5618  0AF5  0833               	movf	??___flmul+3,w
  5619  0AF6  1103               	clrz
  5620  0AF7  1803               	skipnc
  5621  0AF8  3E01               	addlw	1
  5622  0AF9  1903               	skipnz
  5623  0AFA  2AFC               	goto	u4133
  5624  0AFB  07B9               	addwf	___flmul@grs+3,f
  5625  0AFC                     u4133:
  5626  0AFC                     l2790:
  5627  0AFC  0829               	movf	___flmul@b+1,w
  5628  0AFD  00FF               	movwf	btemp+1
  5629  0AFE  087F               	movf	btemp+1,w
  5630  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  5631  0B00  082E               	movf	___flmul@a+2,w
  5632  0B01  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5633  0B06  0873               	movf	?__Umul8_16+1,w
  5634  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5635  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5636  0B09  00C1               	movwf	___flmul@temp+1
  5637  0B0A  0872               	movf	?__Umul8_16,w
  5638  0B0B  00C0               	movwf	___flmul@temp
  5639  0B0C  0840               	movf	___flmul@temp,w
  5640  0B0D  00B0               	movwf	??___flmul
  5641  0B0E  0841               	movf	___flmul@temp+1,w
  5642  0B0F  00B1               	movwf	??___flmul+1
  5643  0B10  01B2               	clrf	??___flmul+2
  5644  0B11  01B3               	clrf	??___flmul+3
  5645  0B12  0830               	movf	??___flmul,w
  5646  0B13  07BC               	addwf	___flmul@prod,f
  5647  0B14  0831               	movf	??___flmul+1,w
  5648  0B15  1103               	clrz
  5649  0B16  1803               	skipnc
  5650  0B17  3E01               	addlw	1
  5651  0B18  1903               	skipnz
  5652  0B19  2B1B               	goto	u4141
  5653  0B1A  07BD               	addwf	___flmul@prod+1,f
  5654  0B1B                     u4141:
  5655  0B1B  0832               	movf	??___flmul+2,w
  5656  0B1C  1103               	clrz
  5657  0B1D  1803               	skipnc
  5658  0B1E  3E01               	addlw	1
  5659  0B1F  1903               	skipnz
  5660  0B20  2B22               	goto	u4142
  5661  0B21  07BE               	addwf	___flmul@prod+2,f
  5662  0B22                     u4142:
  5663  0B22  0833               	movf	??___flmul+3,w
  5664  0B23  1103               	clrz
  5665  0B24  1803               	skipnc
  5666  0B25  3E01               	addlw	1
  5667  0B26  1903               	skipnz
  5668  0B27  2B29               	goto	u4143
  5669  0B28  07BF               	addwf	___flmul@prod+3,f
  5670  0B29                     u4143:
  5671  0B29                     l2792:
  5672  0B29  082A               	movf	___flmul@b+2,w
  5673  0B2A  00FF               	movwf	btemp+1
  5674  0B2B  087F               	movf	btemp+1,w
  5675  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  5676  0B2D  082D               	movf	___flmul@a+1,w
  5677  0B2E  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5678  0B33  0873               	movf	?__Umul8_16+1,w
  5679  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5680  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5681  0B36  00C1               	movwf	___flmul@temp+1
  5682  0B37  0872               	movf	?__Umul8_16,w
  5683  0B38  00C0               	movwf	___flmul@temp
  5684  0B39                     l2794:
  5685  0B39  0840               	movf	___flmul@temp,w
  5686  0B3A  00B0               	movwf	??___flmul
  5687  0B3B  0841               	movf	___flmul@temp+1,w
  5688  0B3C  00B1               	movwf	??___flmul+1
  5689  0B3D  01B2               	clrf	??___flmul+2
  5690  0B3E  01B3               	clrf	??___flmul+3
  5691  0B3F  0830               	movf	??___flmul,w
  5692  0B40  07BC               	addwf	___flmul@prod,f
  5693  0B41  0831               	movf	??___flmul+1,w
  5694  0B42  1103               	clrz
  5695  0B43  1803               	skipnc
  5696  0B44  3E01               	addlw	1
  5697  0B45  1903               	skipnz
  5698  0B46  2B48               	goto	u4151
  5699  0B47  07BD               	addwf	___flmul@prod+1,f
  5700  0B48                     u4151:
  5701  0B48  0832               	movf	??___flmul+2,w
  5702  0B49  1103               	clrz
  5703  0B4A  1803               	skipnc
  5704  0B4B  3E01               	addlw	1
  5705  0B4C  1903               	skipnz
  5706  0B4D  2B4F               	goto	u4152
  5707  0B4E  07BE               	addwf	___flmul@prod+2,f
  5708  0B4F                     u4152:
  5709  0B4F  0833               	movf	??___flmul+3,w
  5710  0B50  1103               	clrz
  5711  0B51  1803               	skipnc
  5712  0B52  3E01               	addlw	1
  5713  0B53  1903               	skipnz
  5714  0B54  2B56               	goto	u4153
  5715  0B55  07BF               	addwf	___flmul@prod+3,f
  5716  0B56                     u4153:
  5717  0B56  082A               	movf	___flmul@b+2,w
  5718  0B57  00FF               	movwf	btemp+1
  5719  0B58  087F               	movf	btemp+1,w
  5720  0B59  00F2               	movwf	__Umul8_16@multiplicand
  5721  0B5A  082E               	movf	___flmul@a+2,w
  5722  0B5B  120A  158A  2002  120A  158A  	fcall	__Umul8_16
  5723  0B60  0873               	movf	?__Umul8_16+1,w
  5724  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5725  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5726  0B63  00C1               	movwf	___flmul@temp+1
  5727  0B64  0872               	movf	?__Umul8_16,w
  5728  0B65  00C0               	movwf	___flmul@temp
  5729  0B66                     l2796:
  5730  0B66  0840               	movf	___flmul@temp,w
  5731  0B67  00B0               	movwf	??___flmul
  5732  0B68  0841               	movf	___flmul@temp+1,w
  5733  0B69  00B1               	movwf	??___flmul+1
  5734  0B6A  01B2               	clrf	??___flmul+2
  5735  0B6B  01B3               	clrf	??___flmul+3
  5736  0B6C  3008               	movlw	8
  5737  0B6D                     u4165:
  5738  0B6D  1003               	clrc
  5739  0B6E  0DB0               	rlf	??___flmul,f
  5740  0B6F  0DB1               	rlf	??___flmul+1,f
  5741  0B70  0DB2               	rlf	??___flmul+2,f
  5742  0B71  0DB3               	rlf	??___flmul+3,f
  5743  0B72                     u4160:
  5744  0B72  3EFF               	addlw	-1
  5745  0B73  1D03               	skipz
  5746  0B74  2B6D               	goto	u4165
  5747  0B75  0830               	movf	??___flmul,w
  5748  0B76  07BC               	addwf	___flmul@prod,f
  5749  0B77  0831               	movf	??___flmul+1,w
  5750  0B78  1103               	clrz
  5751  0B79  1803               	skipnc
  5752  0B7A  3E01               	addlw	1
  5753  0B7B  1903               	skipnz
  5754  0B7C  2B7E               	goto	u4171
  5755  0B7D  07BD               	addwf	___flmul@prod+1,f
  5756  0B7E                     u4171:
  5757  0B7E  0832               	movf	??___flmul+2,w
  5758  0B7F  1103               	clrz
  5759  0B80  1803               	skipnc
  5760  0B81  3E01               	addlw	1
  5761  0B82  1903               	skipnz
  5762  0B83  2B85               	goto	u4172
  5763  0B84  07BE               	addwf	___flmul@prod+2,f
  5764  0B85                     u4172:
  5765  0B85  0833               	movf	??___flmul+3,w
  5766  0B86  1103               	clrz
  5767  0B87  1803               	skipnc
  5768  0B88  3E01               	addlw	1
  5769  0B89  1903               	skipnz
  5770  0B8A  2B8C               	goto	u4173
  5771  0B8B  07BF               	addwf	___flmul@prod+3,f
  5772  0B8C                     u4173:
  5773  0B8C                     l2798:
  5774  0B8C  0836               	movf	___flmul@grs,w
  5775  0B8D  00B0               	movwf	??___flmul
  5776  0B8E  0837               	movf	___flmul@grs+1,w
  5777  0B8F  00B1               	movwf	??___flmul+1
  5778  0B90  0838               	movf	___flmul@grs+2,w
  5779  0B91  00B2               	movwf	??___flmul+2
  5780  0B92  0839               	movf	___flmul@grs+3,w
  5781  0B93  00B3               	movwf	??___flmul+3
  5782  0B94  3018               	movlw	24
  5783  0B95                     u4185:
  5784  0B95  1003               	clrc
  5785  0B96  0CB3               	rrf	??___flmul+3,f
  5786  0B97  0CB2               	rrf	??___flmul+2,f
  5787  0B98  0CB1               	rrf	??___flmul+1,f
  5788  0B99  0CB0               	rrf	??___flmul,f
  5789  0B9A                     u4180:
  5790  0B9A  3EFF               	addlw	-1
  5791  0B9B  1D03               	skipz
  5792  0B9C  2B95               	goto	u4185
  5793  0B9D  0830               	movf	??___flmul,w
  5794  0B9E  07BC               	addwf	___flmul@prod,f
  5795  0B9F  0831               	movf	??___flmul+1,w
  5796  0BA0  1103               	clrz
  5797  0BA1  1803               	skipnc
  5798  0BA2  3E01               	addlw	1
  5799  0BA3  1903               	skipnz
  5800  0BA4  2BA6               	goto	u4191
  5801  0BA5  07BD               	addwf	___flmul@prod+1,f
  5802  0BA6                     u4191:
  5803  0BA6  0832               	movf	??___flmul+2,w
  5804  0BA7  1103               	clrz
  5805  0BA8  1803               	skipnc
  5806  0BA9  3E01               	addlw	1
  5807  0BAA  1903               	skipnz
  5808  0BAB  2BAD               	goto	u4192
  5809  0BAC  07BE               	addwf	___flmul@prod+2,f
  5810  0BAD                     u4192:
  5811  0BAD  0833               	movf	??___flmul+3,w
  5812  0BAE  1103               	clrz
  5813  0BAF  1803               	skipnc
  5814  0BB0  3E01               	addlw	1
  5815  0BB1  1903               	skipnz
  5816  0BB2  2BB4               	goto	u4193
  5817  0BB3  07BF               	addwf	___flmul@prod+3,f
  5818  0BB4                     u4193:
  5819  0BB4                     l2800:
  5820  0BB4  3008               	movlw	8
  5821  0BB5  00B0               	movwf	??___flmul
  5822  0BB6                     u4205:
  5823  0BB6  1003               	clrc
  5824  0BB7  0DB6               	rlf	___flmul@grs,f
  5825  0BB8  0DB7               	rlf	___flmul@grs+1,f
  5826  0BB9  0DB8               	rlf	___flmul@grs+2,f
  5827  0BBA  0DB9               	rlf	___flmul@grs+3,f
  5828  0BBB  0BB0               	decfsz	??___flmul,f
  5829  0BBC  2BB6               	goto	u4205
  5830  0BBD                     l2802:
  5831  0BBD  083B               	movf	___flmul@bexp,w
  5832  0BBE  073A               	addwf	___flmul@aexp,w
  5833  0BBF  00B0               	movwf	??___flmul
  5834  0BC0  01B1               	clrf	??___flmul+1
  5835  0BC1  0DB1               	rlf	??___flmul+1,f
  5836  0BC2  0830               	movf	??___flmul,w
  5837  0BC3  3E82               	addlw	130
  5838  0BC4  00C0               	movwf	___flmul@temp
  5839  0BC5  0831               	movf	??___flmul+1,w
  5840  0BC6  1803               	skipnc
  5841  0BC7  3E01               	addlw	1
  5842  0BC8  3EFF               	addlw	255
  5843  0BC9  00C1               	movwf	___flmul@temp+1
  5844  0BCA  2BE8               	goto	l2814
  5845  0BCB                     l2804:
  5846  0BCB  3001               	movlw	1
  5847  0BCC  00B0               	movwf	??___flmul
  5848  0BCD                     u4215:
  5849  0BCD  1003               	clrc
  5850  0BCE  0DBC               	rlf	___flmul@prod,f
  5851  0BCF  0DBD               	rlf	___flmul@prod+1,f
  5852  0BD0  0DBE               	rlf	___flmul@prod+2,f
  5853  0BD1  0DBF               	rlf	___flmul@prod+3,f
  5854  0BD2  0BB0               	decfsz	??___flmul,f
  5855  0BD3  2BCD               	goto	u4215
  5856  0BD4                     l2806:
  5857  0BD4  1FB9               	btfss	___flmul@grs+3,7
  5858  0BD5  2BD7               	goto	u4221
  5859  0BD6  2BD8               	goto	u4220
  5860  0BD7                     u4221:
  5861  0BD7  2BD9               	goto	l2810
  5862  0BD8                     u4220:
  5863  0BD8                     l2808:
  5864  0BD8  143C               	bsf	___flmul@prod,0
  5865  0BD9                     l2810:
  5866  0BD9  3001               	movlw	1
  5867  0BDA  00B0               	movwf	??___flmul
  5868  0BDB                     u4235:
  5869  0BDB  1003               	clrc
  5870  0BDC  0DB6               	rlf	___flmul@grs,f
  5871  0BDD  0DB7               	rlf	___flmul@grs+1,f
  5872  0BDE  0DB8               	rlf	___flmul@grs+2,f
  5873  0BDF  0DB9               	rlf	___flmul@grs+3,f
  5874  0BE0  0BB0               	decfsz	??___flmul,f
  5875  0BE1  2BDB               	goto	u4235
  5876  0BE2                     l2812:
  5877  0BE2  30FF               	movlw	255
  5878  0BE3  07C0               	addwf	___flmul@temp,f
  5879  0BE4  1803               	skipnc
  5880  0BE5  0AC1               	incf	___flmul@temp+1,f
  5881  0BE6  30FF               	movlw	255
  5882  0BE7  07C1               	addwf	___flmul@temp+1,f
  5883  0BE8                     l2814:
  5884  0BE8  1FBE               	btfss	___flmul@prod+2,7
  5885  0BE9  2BEB               	goto	u4241
  5886  0BEA  2BEC               	goto	u4240
  5887  0BEB                     u4241:
  5888  0BEB  2BCB               	goto	l2804
  5889  0BEC                     u4240:
  5890  0BEC                     l2816:
  5891  0BEC  01BA               	clrf	___flmul@aexp
  5892  0BED                     l2818:
  5893  0BED  1FB9               	btfss	___flmul@grs+3,7
  5894  0BEE  2BF0               	goto	u4251
  5895  0BEF  2BF1               	goto	u4250
  5896  0BF0                     u4251:
  5897  0BF0  2C0D               	goto	l2826
  5898  0BF1                     u4250:
  5899  0BF1                     l2820:
  5900  0BF1  30FF               	movlw	255
  5901  0BF2  0536               	andwf	___flmul@grs,w
  5902  0BF3  00B0               	movwf	??___flmul
  5903  0BF4  30FF               	movlw	255
  5904  0BF5  0537               	andwf	___flmul@grs+1,w
  5905  0BF6  00B1               	movwf	??___flmul+1
  5906  0BF7  30FF               	movlw	255
  5907  0BF8  0538               	andwf	___flmul@grs+2,w
  5908  0BF9  00B2               	movwf	??___flmul+2
  5909  0BFA  307F               	movlw	127
  5910  0BFB  0539               	andwf	___flmul@grs+3,w
  5911  0BFC  00B3               	movwf	??___flmul+3
  5912  0BFD  0833               	movf	??___flmul+3,w
  5913  0BFE  0432               	iorwf	??___flmul+2,w
  5914  0BFF  0431               	iorwf	??___flmul+1,w
  5915  0C00  0430               	iorwf	??___flmul,w
  5916  0C01  1903               	skipnz
  5917  0C02  2C04               	goto	u4261
  5918  0C03  2C05               	goto	u4260
  5919  0C04                     u4261:
  5920  0C04  2C08               	goto	l773
  5921  0C05                     u4260:
  5922  0C05                     l2822:
  5923  0C05  01BA               	clrf	___flmul@aexp
  5924  0C06  0ABA               	incf	___flmul@aexp,f
  5925  0C07  2C0D               	goto	l2826
  5926  0C08                     l773:
  5927  0C08  1C3C               	btfss	___flmul@prod,0
  5928  0C09  2C0B               	goto	u4271
  5929  0C0A  2C0C               	goto	u4270
  5930  0C0B                     u4271:
  5931  0C0B  2C0D               	goto	l2826
  5932  0C0C                     u4270:
  5933  0C0C  2C05               	goto	l2822
  5934  0C0D                     l2826:
  5935  0C0D  083A               	movf	___flmul@aexp,w
  5936  0C0E  1903               	btfsc	3,2
  5937  0C0F  2C11               	goto	u4281
  5938  0C10  2C12               	goto	u4280
  5939  0C11                     u4281:
  5940  0C11  2C43               	goto	l2836
  5941  0C12                     u4280:
  5942  0C12                     l2828:
  5943  0C12  3001               	movlw	1
  5944  0C13  07BC               	addwf	___flmul@prod,f
  5945  0C14  3000               	movlw	0
  5946  0C15  1803               	skipnc
  5947  0C16  3001               	movlw	1
  5948  0C17  07BD               	addwf	___flmul@prod+1,f
  5949  0C18  3000               	movlw	0
  5950  0C19  1803               	skipnc
  5951  0C1A  3001               	movlw	1
  5952  0C1B  07BE               	addwf	___flmul@prod+2,f
  5953  0C1C  3000               	movlw	0
  5954  0C1D  1803               	skipnc
  5955  0C1E  3001               	movlw	1
  5956  0C1F  07BF               	addwf	___flmul@prod+3,f
  5957  0C20                     l2830:
  5958  0C20  1C3F               	btfss	___flmul@prod+3,0
  5959  0C21  2C23               	goto	u4291
  5960  0C22  2C24               	goto	u4290
  5961  0C23                     u4291:
  5962  0C23  2C43               	goto	l2836
  5963  0C24                     u4290:
  5964  0C24                     l2832:
  5965  0C24  083C               	movf	___flmul@prod,w
  5966  0C25  00B0               	movwf	??___flmul
  5967  0C26  083D               	movf	___flmul@prod+1,w
  5968  0C27  00B1               	movwf	??___flmul+1
  5969  0C28  083E               	movf	___flmul@prod+2,w
  5970  0C29  00B2               	movwf	??___flmul+2
  5971  0C2A  083F               	movf	___flmul@prod+3,w
  5972  0C2B  00B3               	movwf	??___flmul+3
  5973  0C2C  3001               	movlw	1
  5974  0C2D  00B4               	movwf	??___flmul+4
  5975  0C2E                     u4305:
  5976  0C2E  0D33               	rlf	??___flmul+3,w
  5977  0C2F  0CB3               	rrf	??___flmul+3,f
  5978  0C30  0CB2               	rrf	??___flmul+2,f
  5979  0C31  0CB1               	rrf	??___flmul+1,f
  5980  0C32  0CB0               	rrf	??___flmul,f
  5981  0C33                     u4300:
  5982  0C33  0BB4               	decfsz	??___flmul+4,f
  5983  0C34  2C2E               	goto	u4305
  5984  0C35  0833               	movf	??___flmul+3,w
  5985  0C36  00BF               	movwf	___flmul@prod+3
  5986  0C37  0832               	movf	??___flmul+2,w
  5987  0C38  00BE               	movwf	___flmul@prod+2
  5988  0C39  0831               	movf	??___flmul+1,w
  5989  0C3A  00BD               	movwf	___flmul@prod+1
  5990  0C3B  0830               	movf	??___flmul,w
  5991  0C3C  00BC               	movwf	___flmul@prod
  5992  0C3D                     l2834:
  5993  0C3D  3001               	movlw	1
  5994  0C3E  07C0               	addwf	___flmul@temp,f
  5995  0C3F  1803               	skipnc
  5996  0C40  0AC1               	incf	___flmul@temp+1,f
  5997  0C41  3000               	movlw	0
  5998  0C42  07C1               	addwf	___flmul@temp+1,f
  5999  0C43                     l2836:
  6000  0C43  0841               	movf	___flmul@temp+1,w
  6001  0C44  3A80               	xorlw	128
  6002  0C45  00FF               	movwf	btemp+1
  6003  0C46  3080               	movlw	128
  6004  0C47  027F               	subwf	btemp+1,w
  6005  0C48  1D03               	skipz
  6006  0C49  2C4C               	goto	u4315
  6007  0C4A  30FF               	movlw	255
  6008  0C4B  0240               	subwf	___flmul@temp,w
  6009  0C4C                     u4315:
  6010  0C4C  1C03               	skipc
  6011  0C4D  2C4F               	goto	u4311
  6012  0C4E  2C50               	goto	u4310
  6013  0C4F                     u4311:
  6014  0C4F  2C5B               	goto	l2840
  6015  0C50                     u4310:
  6016  0C50                     l2838:
  6017  0C50  307F               	movlw	127
  6018  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6020  0C53  00BF               	movwf	___flmul@prod+3
  6021  0C54  3080               	movlw	128
  6022  0C55  00BE               	movwf	___flmul@prod+2
  6023  0C56  3000               	movlw	0
  6024  0C57  00BD               	movwf	___flmul@prod+1
  6025  0C58  3000               	movlw	0
  6026  0C59  00BC               	movwf	___flmul@prod
  6027  0C5A  2C90               	goto	l779
  6028  0C5B                     l2840:
  6029  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6030  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6031  0C5D  0841               	movf	___flmul@temp+1,w
  6032  0C5E  3A80               	xorlw	128
  6033  0C5F  00FF               	movwf	btemp+1
  6034  0C60  3080               	movlw	128
  6035  0C61  027F               	subwf	btemp+1,w
  6036  0C62  1D03               	skipz
  6037  0C63  2C66               	goto	u4325
  6038  0C64  3001               	movlw	1
  6039  0C65  0240               	subwf	___flmul@temp,w
  6040  0C66                     u4325:
  6041  0C66  1803               	skipnc
  6042  0C67  2C69               	goto	u4321
  6043  0C68  2C6A               	goto	u4320
  6044  0C69                     u4321:
  6045  0C69  2C76               	goto	l2846
  6046  0C6A                     u4320:
  6047  0C6A                     l2842:
  6048  0C6A  3000               	movlw	0
  6049  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6050  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6051  0C6D  00BF               	movwf	___flmul@prod+3
  6052  0C6E  3000               	movlw	0
  6053  0C6F  00BE               	movwf	___flmul@prod+2
  6054  0C70  3000               	movlw	0
  6055  0C71  00BD               	movwf	___flmul@prod+1
  6056  0C72  3000               	movlw	0
  6057  0C73  00BC               	movwf	___flmul@prod
  6058  0C74                     l2844:
  6059  0C74  01B5               	clrf	___flmul@sign
  6060  0C75  2C90               	goto	l779
  6061  0C76                     l2846:
  6062  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6063  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6064  0C78  0840               	movf	___flmul@temp,w
  6065  0C79  00FF               	movwf	btemp+1
  6066  0C7A  087F               	movf	btemp+1,w
  6067  0C7B  00BB               	movwf	___flmul@bexp
  6068  0C7C                     l2848:
  6069  0C7C  30FF               	movlw	255
  6070  0C7D  05BC               	andwf	___flmul@prod,f
  6071  0C7E  30FF               	movlw	255
  6072  0C7F  05BD               	andwf	___flmul@prod+1,f
  6073  0C80  307F               	movlw	127
  6074  0C81  05BE               	andwf	___flmul@prod+2,f
  6075  0C82  3000               	movlw	0
  6076  0C83  05BF               	andwf	___flmul@prod+3,f
  6077  0C84                     l2850:
  6078  0C84  1C3B               	btfss	___flmul@bexp,0
  6079  0C85  2C87               	goto	u4331
  6080  0C86  2C88               	goto	u4330
  6081  0C87                     u4331:
  6082  0C87  2C89               	goto	l2854
  6083  0C88                     u4330:
  6084  0C88                     l2852:
  6085  0C88  17BE               	bsf	___flmul@prod+2,7
  6086  0C89                     l2854:
  6087  0C89  083B               	movf	___flmul@bexp,w
  6088  0C8A  00B0               	movwf	??___flmul
  6089  0C8B  1003               	clrc
  6090  0C8C  0C30               	rrf	??___flmul,w
  6091  0C8D  00FF               	movwf	btemp+1
  6092  0C8E  087F               	movf	btemp+1,w
  6093  0C8F  00BF               	movwf	___flmul@prod+3
  6094  0C90                     l779:
  6095  0C90  0835               	movf	___flmul@sign,w
  6096  0C91  00FF               	movwf	btemp+1
  6097  0C92  087F               	movf	btemp+1,w
  6098  0C93  04BF               	iorwf	___flmul@prod+3,f
  6099  0C94                     l2856:
  6100  0C94  083F               	movf	___flmul@prod+3,w
  6101  0C95  00AB               	movwf	?___flmul+3
  6102  0C96  083E               	movf	___flmul@prod+2,w
  6103  0C97  00AA               	movwf	?___flmul+2
  6104  0C98  083D               	movf	___flmul@prod+1,w
  6105  0C99  00A9               	movwf	?___flmul+1
  6106  0C9A  083C               	movf	___flmul@prod,w
  6107  0C9B  00A8               	movwf	?___flmul
  6108  0C9C                     l767:
  6109  0C9C  0008               	return
  6110  0C9D                     __end_of___flmul:
  6111                           
  6112                           	psect	text10
  6113  0802                     __ptext10:	
  6114 ;; *************** function __Umul8_16 *****************
  6115 ;; Defined at:
  6116 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  multiplier      1    wreg     unsigned char 
  6119 ;;  multiplicand    1    2[COMMON] unsigned char 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  multiplier      1   10[COMMON] unsigned char 
  6122 ;;  word_mpld       2    8[COMMON] unsigned int 
  6123 ;;  product         2    6[COMMON] unsigned int 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2    2[COMMON] unsigned int 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6133 ;;      Params:         2       0       0       0       0
  6134 ;;      Locals:         5       0       0       0       0
  6135 ;;      Temps:          2       0       0       0       0
  6136 ;;      Totals:         9       0       0       0       0
  6137 ;;Total ram usage:        9 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    1
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		___flmul
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           
  6148                           ;psect for function __Umul8_16
  6149  0802                     __Umul8_16:
  6150                           
  6151                           ;incstack = 0
  6152                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6153                           ;__Umul8_16@multiplier stored from wreg
  6154  0802  00FA               	movwf	__Umul8_16@multiplier
  6155  0803                     l2362:
  6156  0803  01F6               	clrf	__Umul8_16@product
  6157  0804  01F7               	clrf	__Umul8_16@product+1
  6158  0805                     l2364:
  6159  0805  0872               	movf	__Umul8_16@multiplicand,w
  6160  0806  00F4               	movwf	??__Umul8_16
  6161  0807  01F5               	clrf	??__Umul8_16+1
  6162  0808  0874               	movf	??__Umul8_16,w
  6163  0809  00F8               	movwf	__Umul8_16@word_mpld
  6164  080A  0875               	movf	??__Umul8_16+1,w
  6165  080B  00F9               	movwf	__Umul8_16@word_mpld+1
  6166  080C                     l2366:
  6167  080C  1C7A               	btfss	__Umul8_16@multiplier,0
  6168  080D  280F               	goto	u3121
  6169  080E  2810               	goto	u3120
  6170  080F                     u3121:
  6171  080F  2816               	goto	l786
  6172  0810                     u3120:
  6173  0810                     l2368:
  6174  0810  0878               	movf	__Umul8_16@word_mpld,w
  6175  0811  07F6               	addwf	__Umul8_16@product,f
  6176  0812  1803               	skipnc
  6177  0813  0AF7               	incf	__Umul8_16@product+1,f
  6178  0814  0879               	movf	__Umul8_16@word_mpld+1,w
  6179  0815  07F7               	addwf	__Umul8_16@product+1,f
  6180  0816                     l786:
  6181  0816  3001               	movlw	1
  6182  0817                     u3135:
  6183  0817  1003               	clrc
  6184  0818  0DF8               	rlf	__Umul8_16@word_mpld,f
  6185  0819  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  6186  081A  3EFF               	addlw	-1
  6187  081B  1D03               	skipz
  6188  081C  2817               	goto	u3135
  6189  081D  1003               	clrc
  6190  081E  0CFA               	rrf	__Umul8_16@multiplier,f
  6191  081F                     l2370:
  6192  081F  087A               	movf	__Umul8_16@multiplier,w
  6193  0820  1D03               	btfss	3,2
  6194  0821  2823               	goto	u3141
  6195  0822  2824               	goto	u3140
  6196  0823                     u3141:
  6197  0823  280C               	goto	l2366
  6198  0824                     u3140:
  6199  0824                     l2372:
  6200  0824  0877               	movf	__Umul8_16@product+1,w
  6201  0825  00F3               	movwf	?__Umul8_16+1
  6202  0826  0876               	movf	__Umul8_16@product,w
  6203  0827  00F2               	movwf	?__Umul8_16
  6204  0828                     l788:
  6205  0828  0008               	return
  6206  0829                     __end_of__Umul8_16:
  6207                           
  6208                           	psect	text11
  6209  11F2                     __ptext11:	
  6210 ;; *************** function __tdiv_to_l_ *****************
  6211 ;; Defined at:
  6212 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdivl.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  f1              4    2[COMMON] float 
  6215 ;;  f2              4    6[COMMON] float 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  quot            4    3[BANK0 ] unsigned long 
  6218 ;;  exp1            1    8[BANK0 ] unsigned char 
  6219 ;;  cntr            1    7[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  4    2[COMMON] unsigned long 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0, btemp+1
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6229 ;;      Params:         8       0       0       0       0
  6230 ;;      Locals:         0       6       0       0       0
  6231 ;;      Temps:          0       3       0       0       0
  6232 ;;      Totals:         8       9       0       0       0
  6233 ;;Total ram usage:       17 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    1
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_sprintf
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           
  6244                           ;psect for function __tdiv_to_l_
  6245  11F2                     __tdiv_to_l_:
  6246  11F2                     l2952:	
  6247                           ;incstack = 0
  6248                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  6249                           
  6250  11F2  0872               	movf	__tdiv_to_l_@f1,w
  6251  11F3  1283               	bcf	3,5	;RP0=0, select bank0
  6252  11F4  1303               	bcf	3,6	;RP1=0, select bank0
  6253  11F5  00A0               	movwf	??__tdiv_to_l_
  6254  11F6  0873               	movf	__tdiv_to_l_@f1+1,w
  6255  11F7  00A1               	movwf	??__tdiv_to_l_+1
  6256  11F8  0874               	movf	__tdiv_to_l_@f1+2,w
  6257  11F9  00A2               	movwf	??__tdiv_to_l_+2
  6258  11FA  1003               	clrc
  6259  11FB  0D21               	rlf	??__tdiv_to_l_+1,w
  6260  11FC  0D22               	rlf	??__tdiv_to_l_+2,w
  6261  11FD  00FF               	movwf	btemp+1
  6262  11FE  087F               	movf	btemp+1,w
  6263  11FF  00A8               	movwf	__tdiv_to_l_@exp1
  6264  1200  0828               	movf	__tdiv_to_l_@exp1,w
  6265  1201  1D03               	btfss	3,2
  6266  1202  2A04               	goto	u4601
  6267  1203  2A05               	goto	u4600
  6268  1204                     u4601:
  6269  1204  2A0E               	goto	l2958
  6270  1205                     u4600:
  6271  1205                     l2954:
  6272  1205  3000               	movlw	0
  6273  1206  00F5               	movwf	?__tdiv_to_l_+3
  6274  1207  3000               	movlw	0
  6275  1208  00F4               	movwf	?__tdiv_to_l_+2
  6276  1209  3000               	movlw	0
  6277  120A  00F3               	movwf	?__tdiv_to_l_+1
  6278  120B  3000               	movlw	0
  6279  120C  00F2               	movwf	?__tdiv_to_l_
  6280  120D  2AAE               	goto	l561
  6281  120E                     l2958:
  6282  120E  0876               	movf	__tdiv_to_l_@f2,w
  6283  120F  00A0               	movwf	??__tdiv_to_l_
  6284  1210  0877               	movf	__tdiv_to_l_@f2+1,w
  6285  1211  00A1               	movwf	??__tdiv_to_l_+1
  6286  1212  0878               	movf	__tdiv_to_l_@f2+2,w
  6287  1213  00A2               	movwf	??__tdiv_to_l_+2
  6288  1214  1003               	clrc
  6289  1215  0D21               	rlf	??__tdiv_to_l_+1,w
  6290  1216  0D22               	rlf	??__tdiv_to_l_+2,w
  6291  1217  00FF               	movwf	btemp+1
  6292  1218  087F               	movf	btemp+1,w
  6293  1219  00A7               	movwf	__tdiv_to_l_@cntr
  6294  121A  0827               	movf	__tdiv_to_l_@cntr,w
  6295  121B  1D03               	btfss	3,2
  6296  121C  2A1E               	goto	u4611
  6297  121D  2A1F               	goto	u4610
  6298  121E                     u4611:
  6299  121E  2A20               	goto	l562
  6300  121F                     u4610:
  6301  121F  2A05               	goto	l2954
  6302  1220                     l562:
  6303  1220  17F3               	bsf	__tdiv_to_l_@f1+1,7
  6304  1221                     l2964:
  6305  1221  30FF               	movlw	255
  6306  1222  05F2               	andwf	__tdiv_to_l_@f1,f
  6307  1223  30FF               	movlw	255
  6308  1224  05F3               	andwf	__tdiv_to_l_@f1+1,f
  6309  1225  3000               	movlw	0
  6310  1226  05F4               	andwf	__tdiv_to_l_@f1+2,f
  6311  1227                     l2966:
  6312  1227  17F7               	bsf	__tdiv_to_l_@f2+1,7
  6313  1228  30FF               	movlw	255
  6314  1229  05F6               	andwf	__tdiv_to_l_@f2,f
  6315  122A  30FF               	movlw	255
  6316  122B  05F7               	andwf	__tdiv_to_l_@f2+1,f
  6317  122C  3000               	movlw	0
  6318  122D  05F8               	andwf	__tdiv_to_l_@f2+2,f
  6319  122E  3000               	movlw	0
  6320  122F  00A6               	movwf	__tdiv_to_l_@quot+3
  6321  1230  3000               	movlw	0
  6322  1231  00A5               	movwf	__tdiv_to_l_@quot+2
  6323  1232  3000               	movlw	0
  6324  1233  00A4               	movwf	__tdiv_to_l_@quot+1
  6325  1234  3000               	movlw	0
  6326  1235  00A3               	movwf	__tdiv_to_l_@quot
  6327  1236                     l2968:
  6328  1236  307F               	movlw	127
  6329  1237  02A8               	subwf	__tdiv_to_l_@exp1,f
  6330  1238                     l2970:
  6331  1238  3098               	movlw	152
  6332  1239  0727               	addwf	__tdiv_to_l_@cntr,w
  6333  123A  00A0               	movwf	??__tdiv_to_l_
  6334  123B  0820               	movf	??__tdiv_to_l_,w
  6335  123C  02A8               	subwf	__tdiv_to_l_@exp1,f
  6336  123D                     l2972:
  6337  123D  3018               	movlw	24
  6338  123E  00FF               	movwf	btemp+1
  6339  123F  087F               	movf	btemp+1,w
  6340  1240  00A7               	movwf	__tdiv_to_l_@cntr
  6341  1241                     l2974:
  6342  1241  3001               	movlw	1
  6343  1242  00A0               	movwf	??__tdiv_to_l_
  6344  1243                     u4625:
  6345  1243  1003               	clrc
  6346  1244  0DA3               	rlf	__tdiv_to_l_@quot,f
  6347  1245  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  6348  1246  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  6349  1247  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  6350  1248  0BA0               	decfsz	??__tdiv_to_l_,f
  6351  1249  2A43               	goto	u4625
  6352  124A                     l2976:
  6353  124A  0878               	movf	__tdiv_to_l_@f2+2,w
  6354  124B  0274               	subwf	__tdiv_to_l_@f1+2,w
  6355  124C  1D03               	skipz
  6356  124D  2A54               	goto	u4635
  6357  124E  0877               	movf	__tdiv_to_l_@f2+1,w
  6358  124F  0273               	subwf	__tdiv_to_l_@f1+1,w
  6359  1250  1D03               	skipz
  6360  1251  2A54               	goto	u4635
  6361  1252  0876               	movf	__tdiv_to_l_@f2,w
  6362  1253  0272               	subwf	__tdiv_to_l_@f1,w
  6363  1254                     u4635:
  6364  1254  1C03               	skipc
  6365  1255  2A57               	goto	u4631
  6366  1256  2A58               	goto	u4630
  6367  1257                     u4631:
  6368  1257  2A63               	goto	l2982
  6369  1258                     u4630:
  6370  1258                     l2978:
  6371  1258  0876               	movf	__tdiv_to_l_@f2,w
  6372  1259  02F2               	subwf	__tdiv_to_l_@f1,f
  6373  125A  0877               	movf	__tdiv_to_l_@f2+1,w
  6374  125B  1C03               	skipc
  6375  125C  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  6376  125D  02F3               	subwf	__tdiv_to_l_@f1+1,f
  6377  125E  0878               	movf	__tdiv_to_l_@f2+2,w
  6378  125F  1C03               	skipc
  6379  1260  0A78               	incf	__tdiv_to_l_@f2+2,w
  6380  1261  02F4               	subwf	__tdiv_to_l_@f1+2,f
  6381  1262                     l2980:
  6382  1262  1423               	bsf	__tdiv_to_l_@quot,0
  6383  1263                     l2982:
  6384  1263  3001               	movlw	1
  6385  1264                     u4645:
  6386  1264  1003               	clrc
  6387  1265  0DF2               	rlf	__tdiv_to_l_@f1,f
  6388  1266  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  6389  1267  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  6390  1268  3EFF               	addlw	-1
  6391  1269  1D03               	skipz
  6392  126A  2A64               	goto	u4645
  6393  126B                     l2984:
  6394  126B  3001               	movlw	1
  6395  126C  02A7               	subwf	__tdiv_to_l_@cntr,f
  6396  126D  1D03               	btfss	3,2
  6397  126E  2A70               	goto	u4651
  6398  126F  2A71               	goto	u4650
  6399  1270                     u4651:
  6400  1270  2A41               	goto	l2974
  6401  1271                     u4650:
  6402  1271                     l565:
  6403  1271  1FA8               	btfss	__tdiv_to_l_@exp1,7
  6404  1272  2A74               	goto	u4661
  6405  1273  2A75               	goto	u4660
  6406  1274                     u4661:
  6407  1274  2A8F               	goto	l2996
  6408  1275                     u4660:
  6409  1275                     l2986:
  6410  1275  0828               	movf	__tdiv_to_l_@exp1,w
  6411  1276  3A80               	xorlw	128
  6412  1277  3E97               	addlw	151
  6413  1278  1803               	skipnc
  6414  1279  2A7B               	goto	u4671
  6415  127A  2A7C               	goto	u4670
  6416  127B                     u4671:
  6417  127B  2A7D               	goto	l2992
  6418  127C                     u4670:
  6419  127C  2A05               	goto	l2954
  6420  127D                     l2992:
  6421  127D  3001               	movlw	1
  6422  127E                     u4685:
  6423  127E  1003               	clrc
  6424  127F  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  6425  1280  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  6426  1281  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  6427  1282  0CA3               	rrf	__tdiv_to_l_@quot,f
  6428  1283  3EFF               	addlw	-1
  6429  1284  1D03               	skipz
  6430  1285  2A7E               	goto	u4685
  6431  1286                     l2994:
  6432  1286  3001               	movlw	1
  6433  1287  00FF               	movwf	btemp+1
  6434  1288  087F               	movf	btemp+1,w
  6435  1289  07A8               	addwf	__tdiv_to_l_@exp1,f
  6436  128A  1D03               	btfss	3,2
  6437  128B  2A8D               	goto	u4691
  6438  128C  2A8E               	goto	u4690
  6439  128D                     u4691:
  6440  128D  2A7D               	goto	l2992
  6441  128E                     u4690:
  6442  128E  2AA6               	goto	l3004
  6443  128F                     l2996:
  6444  128F  3018               	movlw	24
  6445  1290  0228               	subwf	__tdiv_to_l_@exp1,w
  6446  1291  1C03               	skipc
  6447  1292  2A94               	goto	u4701
  6448  1293  2A95               	goto	u4700
  6449  1294                     u4701:
  6450  1294  2AA1               	goto	l572
  6451  1295                     u4700:
  6452  1295  2A05               	goto	l2954
  6453  1296                     l3002:
  6454  1296  3001               	movlw	1
  6455  1297  00A0               	movwf	??__tdiv_to_l_
  6456  1298                     u4715:
  6457  1298  1003               	clrc
  6458  1299  0DA3               	rlf	__tdiv_to_l_@quot,f
  6459  129A  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  6460  129B  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  6461  129C  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  6462  129D  0BA0               	decfsz	??__tdiv_to_l_,f
  6463  129E  2A98               	goto	u4715
  6464  129F  3001               	movlw	1
  6465  12A0  02A8               	subwf	__tdiv_to_l_@exp1,f
  6466  12A1                     l572:
  6467  12A1  0828               	movf	__tdiv_to_l_@exp1,w
  6468  12A2  1D03               	btfss	3,2
  6469  12A3  2AA5               	goto	u4721
  6470  12A4  2AA6               	goto	u4720
  6471  12A5                     u4721:
  6472  12A5  2A96               	goto	l3002
  6473  12A6                     u4720:
  6474  12A6                     l3004:
  6475  12A6  0826               	movf	__tdiv_to_l_@quot+3,w
  6476  12A7  00F5               	movwf	?__tdiv_to_l_+3
  6477  12A8  0825               	movf	__tdiv_to_l_@quot+2,w
  6478  12A9  00F4               	movwf	?__tdiv_to_l_+2
  6479  12AA  0824               	movf	__tdiv_to_l_@quot+1,w
  6480  12AB  00F3               	movwf	?__tdiv_to_l_+1
  6481  12AC  0823               	movf	__tdiv_to_l_@quot,w
  6482  12AD  00F2               	movwf	?__tdiv_to_l_
  6483  12AE                     l561:
  6484  12AE  0008               	return
  6485  12AF                     __end_of__tdiv_to_l_:
  6486                           
  6487                           	psect	text12
  6488  12AF                     __ptext12:	
  6489 ;; *************** function __div_to_l_ *****************
  6490 ;; Defined at:
  6491 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fldivl.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  f1              4    2[COMMON] unsigned long 
  6494 ;;  f2              4    6[COMMON] unsigned long 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  quot            4    0[BANK0 ] unsigned long 
  6497 ;;  exp1            1    5[BANK0 ] unsigned char 
  6498 ;;  cntr            1    4[BANK0 ] unsigned char 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  4    2[COMMON] unsigned long 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0, btemp+1
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6508 ;;      Params:         8       0       0       0       0
  6509 ;;      Locals:         0       6       0       0       0
  6510 ;;      Temps:          1       0       0       0       0
  6511 ;;      Totals:         9       6       0       0       0
  6512 ;;Total ram usage:       15 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_sprintf
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function __div_to_l_
  6524  12AF                     __div_to_l_:
  6525  12AF                     l3008:	
  6526                           ;incstack = 0
  6527                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  6528                           
  6529  12AF  1003               	clrc
  6530  12B0  0D74               	rlf	__div_to_l_@f1+2,w
  6531  12B1  0D75               	rlf	__div_to_l_@f1+3,w
  6532  12B2  00FF               	movwf	btemp+1
  6533  12B3  087F               	movf	btemp+1,w
  6534  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  6535  12B5  1303               	bcf	3,6	;RP1=0, select bank0
  6536  12B6  00A5               	movwf	__div_to_l_@exp1
  6537  12B7  0825               	movf	__div_to_l_@exp1,w
  6538  12B8  1D03               	btfss	3,2
  6539  12B9  2ABB               	goto	u4731
  6540  12BA  2ABC               	goto	u4730
  6541  12BB                     u4731:
  6542  12BB  2AC5               	goto	l3014
  6543  12BC                     u4730:
  6544  12BC                     l3010:
  6545  12BC  3000               	movlw	0
  6546  12BD  00F5               	movwf	?__div_to_l_+3
  6547  12BE  3000               	movlw	0
  6548  12BF  00F4               	movwf	?__div_to_l_+2
  6549  12C0  3000               	movlw	0
  6550  12C1  00F3               	movwf	?__div_to_l_+1
  6551  12C2  3000               	movlw	0
  6552  12C3  00F2               	movwf	?__div_to_l_
  6553  12C4  2B6C               	goto	l514
  6554  12C5                     l3014:
  6555  12C5  1003               	clrc
  6556  12C6  0D78               	rlf	__div_to_l_@f2+2,w
  6557  12C7  0D79               	rlf	__div_to_l_@f2+3,w
  6558  12C8  00FF               	movwf	btemp+1
  6559  12C9  087F               	movf	btemp+1,w
  6560  12CA  00A4               	movwf	__div_to_l_@cntr
  6561  12CB  0824               	movf	__div_to_l_@cntr,w
  6562  12CC  1D03               	btfss	3,2
  6563  12CD  2ACF               	goto	u4741
  6564  12CE  2AD0               	goto	u4740
  6565  12CF                     u4741:
  6566  12CF  2AD1               	goto	l515
  6567  12D0                     u4740:
  6568  12D0  2ABC               	goto	l3010
  6569  12D1                     l515:
  6570  12D1  17F4               	bsf	__div_to_l_@f1+2,7
  6571  12D2                     l3020:
  6572  12D2  30FF               	movlw	255
  6573  12D3  05F2               	andwf	__div_to_l_@f1,f
  6574  12D4  30FF               	movlw	255
  6575  12D5  05F3               	andwf	__div_to_l_@f1+1,f
  6576  12D6  30FF               	movlw	255
  6577  12D7  05F4               	andwf	__div_to_l_@f1+2,f
  6578  12D8  3000               	movlw	0
  6579  12D9  05F5               	andwf	__div_to_l_@f1+3,f
  6580  12DA                     l3022:
  6581  12DA  17F8               	bsf	__div_to_l_@f2+2,7
  6582  12DB  30FF               	movlw	255
  6583  12DC  05F6               	andwf	__div_to_l_@f2,f
  6584  12DD  30FF               	movlw	255
  6585  12DE  05F7               	andwf	__div_to_l_@f2+1,f
  6586  12DF  30FF               	movlw	255
  6587  12E0  05F8               	andwf	__div_to_l_@f2+2,f
  6588  12E1  3000               	movlw	0
  6589  12E2  05F9               	andwf	__div_to_l_@f2+3,f
  6590  12E3  3000               	movlw	0
  6591  12E4  00A3               	movwf	__div_to_l_@quot+3
  6592  12E5  3000               	movlw	0
  6593  12E6  00A2               	movwf	__div_to_l_@quot+2
  6594  12E7  3000               	movlw	0
  6595  12E8  00A1               	movwf	__div_to_l_@quot+1
  6596  12E9  3000               	movlw	0
  6597  12EA  00A0               	movwf	__div_to_l_@quot
  6598  12EB                     l3024:
  6599  12EB  307F               	movlw	127
  6600  12EC  02A5               	subwf	__div_to_l_@exp1,f
  6601  12ED                     l3026:
  6602  12ED  30A0               	movlw	160
  6603  12EE  0724               	addwf	__div_to_l_@cntr,w
  6604  12EF  00FA               	movwf	??__div_to_l_
  6605  12F0  087A               	movf	??__div_to_l_,w
  6606  12F1  02A5               	subwf	__div_to_l_@exp1,f
  6607  12F2                     l3028:
  6608  12F2  3020               	movlw	32
  6609  12F3  00FF               	movwf	btemp+1
  6610  12F4  087F               	movf	btemp+1,w
  6611  12F5  00A4               	movwf	__div_to_l_@cntr
  6612  12F6                     l3030:
  6613  12F6  3001               	movlw	1
  6614  12F7  00FA               	movwf	??__div_to_l_
  6615  12F8                     u4755:
  6616  12F8  1003               	clrc
  6617  12F9  0DA0               	rlf	__div_to_l_@quot,f
  6618  12FA  0DA1               	rlf	__div_to_l_@quot+1,f
  6619  12FB  0DA2               	rlf	__div_to_l_@quot+2,f
  6620  12FC  0DA3               	rlf	__div_to_l_@quot+3,f
  6621  12FD  0BFA               	decfsz	??__div_to_l_,f
  6622  12FE  2AF8               	goto	u4755
  6623  12FF                     l3032:
  6624  12FF  0879               	movf	__div_to_l_@f2+3,w
  6625  1300  0275               	subwf	__div_to_l_@f1+3,w
  6626  1301  1D03               	skipz
  6627  1302  2B0D               	goto	u4765
  6628  1303  0878               	movf	__div_to_l_@f2+2,w
  6629  1304  0274               	subwf	__div_to_l_@f1+2,w
  6630  1305  1D03               	skipz
  6631  1306  2B0D               	goto	u4765
  6632  1307  0877               	movf	__div_to_l_@f2+1,w
  6633  1308  0273               	subwf	__div_to_l_@f1+1,w
  6634  1309  1D03               	skipz
  6635  130A  2B0D               	goto	u4765
  6636  130B  0876               	movf	__div_to_l_@f2,w
  6637  130C  0272               	subwf	__div_to_l_@f1,w
  6638  130D                     u4765:
  6639  130D  1C03               	skipc
  6640  130E  2B10               	goto	u4761
  6641  130F  2B11               	goto	u4760
  6642  1310                     u4761:
  6643  1310  2B20               	goto	l3038
  6644  1311                     u4760:
  6645  1311                     l3034:
  6646  1311  0876               	movf	__div_to_l_@f2,w
  6647  1312  02F2               	subwf	__div_to_l_@f1,f
  6648  1313  0877               	movf	__div_to_l_@f2+1,w
  6649  1314  1C03               	skipc
  6650  1315  0F77               	incfsz	__div_to_l_@f2+1,w
  6651  1316  02F3               	subwf	__div_to_l_@f1+1,f
  6652  1317  0878               	movf	__div_to_l_@f2+2,w
  6653  1318  1C03               	skipc
  6654  1319  0F78               	incfsz	__div_to_l_@f2+2,w
  6655  131A  02F4               	subwf	__div_to_l_@f1+2,f
  6656  131B  0879               	movf	__div_to_l_@f2+3,w
  6657  131C  1C03               	skipc
  6658  131D  0F79               	incfsz	__div_to_l_@f2+3,w
  6659  131E  02F5               	subwf	__div_to_l_@f1+3,f
  6660  131F                     l3036:
  6661  131F  1420               	bsf	__div_to_l_@quot,0
  6662  1320                     l3038:
  6663  1320  3001               	movlw	1
  6664  1321  00FA               	movwf	??__div_to_l_
  6665  1322                     u4775:
  6666  1322  1003               	clrc
  6667  1323  0DF2               	rlf	__div_to_l_@f1,f
  6668  1324  0DF3               	rlf	__div_to_l_@f1+1,f
  6669  1325  0DF4               	rlf	__div_to_l_@f1+2,f
  6670  1326  0DF5               	rlf	__div_to_l_@f1+3,f
  6671  1327  0BFA               	decfsz	??__div_to_l_,f
  6672  1328  2B22               	goto	u4775
  6673  1329                     l3040:
  6674  1329  3001               	movlw	1
  6675  132A  02A4               	subwf	__div_to_l_@cntr,f
  6676  132B  1D03               	btfss	3,2
  6677  132C  2B2E               	goto	u4781
  6678  132D  2B2F               	goto	u4780
  6679  132E                     u4781:
  6680  132E  2AF6               	goto	l3030
  6681  132F                     u4780:
  6682  132F                     l518:
  6683  132F  1FA5               	btfss	__div_to_l_@exp1,7
  6684  1330  2B32               	goto	u4791
  6685  1331  2B33               	goto	u4790
  6686  1332                     u4791:
  6687  1332  2B4D               	goto	l3052
  6688  1333                     u4790:
  6689  1333                     l3042:
  6690  1333  0825               	movf	__div_to_l_@exp1,w
  6691  1334  3A80               	xorlw	128
  6692  1335  3E9F               	addlw	159
  6693  1336  1803               	skipnc
  6694  1337  2B39               	goto	u4801
  6695  1338  2B3A               	goto	u4800
  6696  1339                     u4801:
  6697  1339  2B3B               	goto	l3048
  6698  133A                     u4800:
  6699  133A  2ABC               	goto	l3010
  6700  133B                     l3048:
  6701  133B  3001               	movlw	1
  6702  133C                     u4815:
  6703  133C  1003               	clrc
  6704  133D  0CA3               	rrf	__div_to_l_@quot+3,f
  6705  133E  0CA2               	rrf	__div_to_l_@quot+2,f
  6706  133F  0CA1               	rrf	__div_to_l_@quot+1,f
  6707  1340  0CA0               	rrf	__div_to_l_@quot,f
  6708  1341  3EFF               	addlw	-1
  6709  1342  1D03               	skipz
  6710  1343  2B3C               	goto	u4815
  6711  1344                     l3050:
  6712  1344  3001               	movlw	1
  6713  1345  00FF               	movwf	btemp+1
  6714  1346  087F               	movf	btemp+1,w
  6715  1347  07A5               	addwf	__div_to_l_@exp1,f
  6716  1348  1D03               	btfss	3,2
  6717  1349  2B4B               	goto	u4821
  6718  134A  2B4C               	goto	u4820
  6719  134B                     u4821:
  6720  134B  2B3B               	goto	l3048
  6721  134C                     u4820:
  6722  134C  2B64               	goto	l3060
  6723  134D                     l3052:
  6724  134D  3020               	movlw	32
  6725  134E  0225               	subwf	__div_to_l_@exp1,w
  6726  134F  1C03               	skipc
  6727  1350  2B52               	goto	u4831
  6728  1351  2B53               	goto	u4830
  6729  1352                     u4831:
  6730  1352  2B5F               	goto	l525
  6731  1353                     u4830:
  6732  1353  2ABC               	goto	l3010
  6733  1354                     l3058:
  6734  1354  3001               	movlw	1
  6735  1355  00FA               	movwf	??__div_to_l_
  6736  1356                     u4845:
  6737  1356  1003               	clrc
  6738  1357  0DA0               	rlf	__div_to_l_@quot,f
  6739  1358  0DA1               	rlf	__div_to_l_@quot+1,f
  6740  1359  0DA2               	rlf	__div_to_l_@quot+2,f
  6741  135A  0DA3               	rlf	__div_to_l_@quot+3,f
  6742  135B  0BFA               	decfsz	??__div_to_l_,f
  6743  135C  2B56               	goto	u4845
  6744  135D  3001               	movlw	1
  6745  135E  02A5               	subwf	__div_to_l_@exp1,f
  6746  135F                     l525:
  6747  135F  0825               	movf	__div_to_l_@exp1,w
  6748  1360  1D03               	btfss	3,2
  6749  1361  2B63               	goto	u4851
  6750  1362  2B64               	goto	u4850
  6751  1363                     u4851:
  6752  1363  2B54               	goto	l3058
  6753  1364                     u4850:
  6754  1364                     l3060:
  6755  1364  0823               	movf	__div_to_l_@quot+3,w
  6756  1365  00F5               	movwf	?__div_to_l_+3
  6757  1366  0822               	movf	__div_to_l_@quot+2,w
  6758  1367  00F4               	movwf	?__div_to_l_+2
  6759  1368  0821               	movf	__div_to_l_@quot+1,w
  6760  1369  00F3               	movwf	?__div_to_l_+1
  6761  136A  0820               	movf	__div_to_l_@quot,w
  6762  136B  00F2               	movwf	?__div_to_l_
  6763  136C                     l514:
  6764  136C  0008               	return
  6765  136D                     __end_of__div_to_l_:
  6766                           
  6767                           	psect	text13
  6768  1136                     __ptext13:	
  6769 ;; *************** function ___xxtofl *****************
  6770 ;; Defined at:
  6771 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  sign            1    wreg     unsigned char 
  6774 ;;  val             4    2[COMMON] long 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  sign            1    0[BANK0 ] unsigned char 
  6777 ;;  arg             4    2[BANK0 ] unsigned long 
  6778 ;;  exp             1    1[BANK0 ] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  4    2[COMMON] unsigned char 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0, btemp+1
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6788 ;;      Params:         4       0       0       0       0
  6789 ;;      Locals:         0       6       0       0       0
  6790 ;;      Temps:          4       0       0       0       0
  6791 ;;      Totals:         8       6       0       0       0
  6792 ;;Total ram usage:       14 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    1
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_main
  6799 ;;		_sprintf
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           
  6804                           ;psect for function ___xxtofl
  6805  1136                     ___xxtofl:
  6806                           
  6807                           ;incstack = 0
  6808                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6809                           ;___xxtofl@sign stored from wreg
  6810  1136  1283               	bcf	3,5	;RP0=0, select bank0
  6811  1137  1303               	bcf	3,6	;RP1=0, select bank0
  6812  1138  00A0               	movwf	___xxtofl@sign
  6813  1139                     l3210:
  6814  1139  0820               	movf	___xxtofl@sign,w
  6815  113A  1903               	btfsc	3,2
  6816  113B  293D               	goto	u5241
  6817  113C  293E               	goto	u5240
  6818  113D                     u5241:
  6819  113D  2952               	goto	l3216
  6820  113E                     u5240:
  6821  113E                     l3212:
  6822  113E  1FF5               	btfss	___xxtofl@val+3,7
  6823  113F  2941               	goto	u5251
  6824  1140  2942               	goto	u5250
  6825  1141                     u5251:
  6826  1141  2952               	goto	l3216
  6827  1142                     u5250:
  6828  1142                     l3214:
  6829  1142  0972               	comf	___xxtofl@val,w
  6830  1143  00A2               	movwf	___xxtofl@arg
  6831  1144  0973               	comf	___xxtofl@val+1,w
  6832  1145  00A3               	movwf	___xxtofl@arg+1
  6833  1146  0974               	comf	___xxtofl@val+2,w
  6834  1147  00A4               	movwf	___xxtofl@arg+2
  6835  1148  0975               	comf	___xxtofl@val+3,w
  6836  1149  00A5               	movwf	___xxtofl@arg+3
  6837  114A  0AA2               	incf	___xxtofl@arg,f
  6838  114B  1903               	skipnz
  6839  114C  0AA3               	incf	___xxtofl@arg+1,f
  6840  114D  1903               	skipnz
  6841  114E  0AA4               	incf	___xxtofl@arg+2,f
  6842  114F  1903               	skipnz
  6843  1150  0AA5               	incf	___xxtofl@arg+3,f
  6844  1151  295A               	goto	l811
  6845  1152                     l3216:
  6846  1152  0875               	movf	___xxtofl@val+3,w
  6847  1153  00A5               	movwf	___xxtofl@arg+3
  6848  1154  0874               	movf	___xxtofl@val+2,w
  6849  1155  00A4               	movwf	___xxtofl@arg+2
  6850  1156  0873               	movf	___xxtofl@val+1,w
  6851  1157  00A3               	movwf	___xxtofl@arg+1
  6852  1158  0872               	movf	___xxtofl@val,w
  6853  1159  00A2               	movwf	___xxtofl@arg
  6854  115A                     l811:
  6855  115A  0875               	movf	___xxtofl@val+3,w
  6856  115B  0474               	iorwf	___xxtofl@val+2,w
  6857  115C  0473               	iorwf	___xxtofl@val+1,w
  6858  115D  0472               	iorwf	___xxtofl@val,w
  6859  115E  1D03               	skipz
  6860  115F  2961               	goto	u5261
  6861  1160  2962               	goto	u5260
  6862  1161                     u5261:
  6863  1161  296B               	goto	l3222
  6864  1162                     u5260:
  6865  1162                     l3218:
  6866  1162  3000               	movlw	0
  6867  1163  00F5               	movwf	?___xxtofl+3
  6868  1164  3000               	movlw	0
  6869  1165  00F4               	movwf	?___xxtofl+2
  6870  1166  3000               	movlw	0
  6871  1167  00F3               	movwf	?___xxtofl+1
  6872  1168  3000               	movlw	0
  6873  1169  00F2               	movwf	?___xxtofl
  6874  116A  29F1               	goto	l813
  6875  116B                     l3222:
  6876  116B  3096               	movlw	150
  6877  116C  00FF               	movwf	btemp+1
  6878  116D  087F               	movf	btemp+1,w
  6879  116E  00A1               	movwf	___xxtofl@exp
  6880  116F  297D               	goto	l3228
  6881  1170                     l3224:
  6882  1170  3001               	movlw	1
  6883  1171  00FF               	movwf	btemp+1
  6884  1172  087F               	movf	btemp+1,w
  6885  1173  07A1               	addwf	___xxtofl@exp,f
  6886  1174                     l3226:
  6887  1174  3001               	movlw	1
  6888  1175                     u5275:
  6889  1175  1003               	clrc
  6890  1176  0CA5               	rrf	___xxtofl@arg+3,f
  6891  1177  0CA4               	rrf	___xxtofl@arg+2,f
  6892  1178  0CA3               	rrf	___xxtofl@arg+1,f
  6893  1179  0CA2               	rrf	___xxtofl@arg,f
  6894  117A  3EFF               	addlw	-1
  6895  117B  1D03               	skipz
  6896  117C  2975               	goto	u5275
  6897  117D                     l3228:
  6898  117D  30FE               	movlw	254
  6899  117E  0525               	andwf	___xxtofl@arg+3,w
  6900  117F  1D03               	btfss	3,2
  6901  1180  2982               	goto	u5281
  6902  1181  2983               	goto	u5280
  6903  1182                     u5281:
  6904  1182  2970               	goto	l3224
  6905  1183                     u5280:
  6906  1183  299F               	goto	l3236
  6907  1184                     l3230:
  6908  1184  3001               	movlw	1
  6909  1185  00FF               	movwf	btemp+1
  6910  1186  087F               	movf	btemp+1,w
  6911  1187  07A1               	addwf	___xxtofl@exp,f
  6912  1188                     l3232:
  6913  1188  3001               	movlw	1
  6914  1189  07A2               	addwf	___xxtofl@arg,f
  6915  118A  3000               	movlw	0
  6916  118B  1803               	skipnc
  6917  118C  3001               	movlw	1
  6918  118D  07A3               	addwf	___xxtofl@arg+1,f
  6919  118E  3000               	movlw	0
  6920  118F  1803               	skipnc
  6921  1190  3001               	movlw	1
  6922  1191  07A4               	addwf	___xxtofl@arg+2,f
  6923  1192  3000               	movlw	0
  6924  1193  1803               	skipnc
  6925  1194  3001               	movlw	1
  6926  1195  07A5               	addwf	___xxtofl@arg+3,f
  6927  1196                     l3234:
  6928  1196  3001               	movlw	1
  6929  1197                     u5295:
  6930  1197  1003               	clrc
  6931  1198  0CA5               	rrf	___xxtofl@arg+3,f
  6932  1199  0CA4               	rrf	___xxtofl@arg+2,f
  6933  119A  0CA3               	rrf	___xxtofl@arg+1,f
  6934  119B  0CA2               	rrf	___xxtofl@arg,f
  6935  119C  3EFF               	addlw	-1
  6936  119D  1D03               	skipz
  6937  119E  2997               	goto	u5295
  6938  119F                     l3236:
  6939  119F  30FF               	movlw	255
  6940  11A0  0525               	andwf	___xxtofl@arg+3,w
  6941  11A1  1D03               	btfss	3,2
  6942  11A2  29A4               	goto	u5301
  6943  11A3  29A5               	goto	u5300
  6944  11A4                     u5301:
  6945  11A4  2984               	goto	l3230
  6946  11A5                     u5300:
  6947  11A5  29B1               	goto	l3240
  6948  11A6                     l3238:
  6949  11A6  3001               	movlw	1
  6950  11A7  02A1               	subwf	___xxtofl@exp,f
  6951  11A8  3001               	movlw	1
  6952  11A9  00F6               	movwf	??___xxtofl
  6953  11AA                     u5315:
  6954  11AA  1003               	clrc
  6955  11AB  0DA2               	rlf	___xxtofl@arg,f
  6956  11AC  0DA3               	rlf	___xxtofl@arg+1,f
  6957  11AD  0DA4               	rlf	___xxtofl@arg+2,f
  6958  11AE  0DA5               	rlf	___xxtofl@arg+3,f
  6959  11AF  0BF6               	decfsz	??___xxtofl,f
  6960  11B0  29AA               	goto	u5315
  6961  11B1                     l3240:
  6962  11B1  1BA4               	btfsc	___xxtofl@arg+2,7
  6963  11B2  29B4               	goto	u5321
  6964  11B3  29B5               	goto	u5320
  6965  11B4                     u5321:
  6966  11B4  29BB               	goto	l824
  6967  11B5                     u5320:
  6968  11B5                     l3242:
  6969  11B5  3002               	movlw	2
  6970  11B6  0221               	subwf	___xxtofl@exp,w
  6971  11B7  1803               	skipnc
  6972  11B8  29BA               	goto	u5331
  6973  11B9  29BB               	goto	u5330
  6974  11BA                     u5331:
  6975  11BA  29A6               	goto	l3238
  6976  11BB                     u5330:
  6977  11BB                     l824:
  6978  11BB  1821               	btfsc	___xxtofl@exp,0
  6979  11BC  29BE               	goto	u5341
  6980  11BD  29BF               	goto	u5340
  6981  11BE                     u5341:
  6982  11BE  29C7               	goto	l825
  6983  11BF                     u5340:
  6984  11BF                     l3244:
  6985  11BF  30FF               	movlw	255
  6986  11C0  05A2               	andwf	___xxtofl@arg,f
  6987  11C1  30FF               	movlw	255
  6988  11C2  05A3               	andwf	___xxtofl@arg+1,f
  6989  11C3  307F               	movlw	127
  6990  11C4  05A4               	andwf	___xxtofl@arg+2,f
  6991  11C5  30FF               	movlw	255
  6992  11C6  05A5               	andwf	___xxtofl@arg+3,f
  6993  11C7                     l825:
  6994  11C7  1003               	clrc
  6995  11C8  0CA1               	rrf	___xxtofl@exp,f
  6996  11C9                     l3246:
  6997  11C9  0821               	movf	___xxtofl@exp,w
  6998  11CA  00F6               	movwf	??___xxtofl
  6999  11CB  01F7               	clrf	??___xxtofl+1
  7000  11CC  01F8               	clrf	??___xxtofl+2
  7001  11CD  01F9               	clrf	??___xxtofl+3
  7002  11CE  3018               	movlw	24
  7003  11CF                     u5355:
  7004  11CF  1003               	clrc
  7005  11D0  0DF6               	rlf	??___xxtofl,f
  7006  11D1  0DF7               	rlf	??___xxtofl+1,f
  7007  11D2  0DF8               	rlf	??___xxtofl+2,f
  7008  11D3  0DF9               	rlf	??___xxtofl+3,f
  7009  11D4                     u5350:
  7010  11D4  3EFF               	addlw	-1
  7011  11D5  1D03               	skipz
  7012  11D6  29CF               	goto	u5355
  7013  11D7  0876               	movf	??___xxtofl,w
  7014  11D8  04A2               	iorwf	___xxtofl@arg,f
  7015  11D9  0877               	movf	??___xxtofl+1,w
  7016  11DA  04A3               	iorwf	___xxtofl@arg+1,f
  7017  11DB  0878               	movf	??___xxtofl+2,w
  7018  11DC  04A4               	iorwf	___xxtofl@arg+2,f
  7019  11DD  0879               	movf	??___xxtofl+3,w
  7020  11DE  04A5               	iorwf	___xxtofl@arg+3,f
  7021  11DF                     l3248:
  7022  11DF  0820               	movf	___xxtofl@sign,w
  7023  11E0  1903               	btfsc	3,2
  7024  11E1  29E3               	goto	u5361
  7025  11E2  29E4               	goto	u5360
  7026  11E3                     u5361:
  7027  11E3  29E9               	goto	l3254
  7028  11E4                     u5360:
  7029  11E4                     l3250:
  7030  11E4  1FF5               	btfss	___xxtofl@val+3,7
  7031  11E5  29E7               	goto	u5371
  7032  11E6  29E8               	goto	u5370
  7033  11E7                     u5371:
  7034  11E7  29E9               	goto	l3254
  7035  11E8                     u5370:
  7036  11E8                     l3252:
  7037  11E8  17A5               	bsf	___xxtofl@arg+3,7
  7038  11E9                     l3254:
  7039  11E9  0825               	movf	___xxtofl@arg+3,w
  7040  11EA  00F5               	movwf	?___xxtofl+3
  7041  11EB  0824               	movf	___xxtofl@arg+2,w
  7042  11EC  00F4               	movwf	?___xxtofl+2
  7043  11ED  0823               	movf	___xxtofl@arg+1,w
  7044  11EE  00F3               	movwf	?___xxtofl+1
  7045  11EF  0822               	movf	___xxtofl@arg,w
  7046  11F0  00F2               	movwf	?___xxtofl
  7047  11F1                     l813:
  7048  11F1  0008               	return
  7049  11F2                     __end_of___xxtofl:
  7050                           
  7051                           	psect	text14
  7052  1A9C                     __ptext14:	
  7053 ;; *************** function ___wmul *****************
  7054 ;; Defined at:
  7055 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  multiplier      2    2[COMMON] unsigned int 
  7058 ;;  multiplicand    2    4[COMMON] unsigned int 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  product         2    6[COMMON] unsigned int 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  2    2[COMMON] unsigned int 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7070 ;;      Params:         4       0       0       0       0
  7071 ;;      Locals:         2       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0
  7073 ;;      Totals:         6       0       0       0       0
  7074 ;;Total ram usage:        6 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    1
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_sprintf
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           
  7085                           ;psect for function ___wmul
  7086  1A9C                     ___wmul:
  7087  1A9C                     l3064:	
  7088                           ;incstack = 0
  7089                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7090                           
  7091  1A9C  01F6               	clrf	___wmul@product
  7092  1A9D  01F7               	clrf	___wmul@product+1
  7093  1A9E                     l3066:
  7094  1A9E  1C72               	btfss	___wmul@multiplier,0
  7095  1A9F  2AA1               	goto	u4861
  7096  1AA0  2AA2               	goto	u4860
  7097  1AA1                     u4861:
  7098  1AA1  2AA8               	goto	l344
  7099  1AA2                     u4860:
  7100  1AA2                     l3068:
  7101  1AA2  0874               	movf	___wmul@multiplicand,w
  7102  1AA3  07F6               	addwf	___wmul@product,f
  7103  1AA4  1803               	skipnc
  7104  1AA5  0AF7               	incf	___wmul@product+1,f
  7105  1AA6  0875               	movf	___wmul@multiplicand+1,w
  7106  1AA7  07F7               	addwf	___wmul@product+1,f
  7107  1AA8                     l344:
  7108  1AA8  3001               	movlw	1
  7109  1AA9                     u4875:
  7110  1AA9  1003               	clrc
  7111  1AAA  0DF4               	rlf	___wmul@multiplicand,f
  7112  1AAB  0DF5               	rlf	___wmul@multiplicand+1,f
  7113  1AAC  3EFF               	addlw	-1
  7114  1AAD  1D03               	skipz
  7115  1AAE  2AA9               	goto	u4875
  7116  1AAF                     l3070:
  7117  1AAF  3001               	movlw	1
  7118  1AB0                     u4885:
  7119  1AB0  1003               	clrc
  7120  1AB1  0CF3               	rrf	___wmul@multiplier+1,f
  7121  1AB2  0CF2               	rrf	___wmul@multiplier,f
  7122  1AB3  3EFF               	addlw	-1
  7123  1AB4  1D03               	skipz
  7124  1AB5  2AB0               	goto	u4885
  7125  1AB6                     l3072:
  7126  1AB6  0872               	movf	___wmul@multiplier,w
  7127  1AB7  0473               	iorwf	___wmul@multiplier+1,w
  7128  1AB8  1D03               	btfss	3,2
  7129  1AB9  2ABB               	goto	u4891
  7130  1ABA  2ABC               	goto	u4890
  7131  1ABB                     u4891:
  7132  1ABB  2A9E               	goto	l3066
  7133  1ABC                     u4890:
  7134  1ABC                     l3074:
  7135  1ABC  0877               	movf	___wmul@product+1,w
  7136  1ABD  00F3               	movwf	?___wmul+1
  7137  1ABE  0876               	movf	___wmul@product,w
  7138  1ABF  00F2               	movwf	?___wmul
  7139  1AC0                     l346:
  7140  1AC0  0008               	return
  7141  1AC1                     __end_of___wmul:
  7142                           
  7143                           	psect	text15
  7144  1CB3                     __ptext15:	
  7145 ;; *************** function ___llmod *****************
  7146 ;; Defined at:
  7147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  divisor         4    2[COMMON] unsigned long 
  7150 ;;  dividend        4    6[COMMON] unsigned long 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  counter         1    0[BANK0 ] unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  4    2[COMMON] unsigned long 
  7155 ;; Registers used:
  7156 ;;		wreg, status,2, status,0, btemp+1
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7162 ;;      Params:         8       0       0       0       0
  7163 ;;      Locals:         0       1       0       0       0
  7164 ;;      Temps:          1       0       0       0       0
  7165 ;;      Totals:         9       1       0       0       0
  7166 ;;Total ram usage:       10 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    1
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_sprintf
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function ___llmod
  7178  1CB3                     ___llmod:
  7179  1CB3                     l3932:	
  7180                           ;incstack = 0
  7181                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  7182                           
  7183  1CB3  0875               	movf	___llmod@divisor+3,w
  7184  1CB4  0474               	iorwf	___llmod@divisor+2,w
  7185  1CB5  0473               	iorwf	___llmod@divisor+1,w
  7186  1CB6  0472               	iorwf	___llmod@divisor,w
  7187  1CB7  1903               	skipnz
  7188  1CB8  2CBA               	goto	u6551
  7189  1CB9  2CBB               	goto	u6550
  7190  1CBA                     u6551:
  7191  1CBA  2D00               	goto	l3950
  7192  1CBB                     u6550:
  7193  1CBB                     l3934:
  7194  1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  7195  1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  7196  1CBD  01A0               	clrf	___llmod@counter
  7197  1CBE  0AA0               	incf	___llmod@counter,f
  7198  1CBF  2CCD               	goto	l3940
  7199  1CC0                     l3936:
  7200  1CC0  3001               	movlw	1
  7201  1CC1  00FA               	movwf	??___llmod
  7202  1CC2                     u6565:
  7203  1CC2  1003               	clrc
  7204  1CC3  0DF2               	rlf	___llmod@divisor,f
  7205  1CC4  0DF3               	rlf	___llmod@divisor+1,f
  7206  1CC5  0DF4               	rlf	___llmod@divisor+2,f
  7207  1CC6  0DF5               	rlf	___llmod@divisor+3,f
  7208  1CC7  0BFA               	decfsz	??___llmod,f
  7209  1CC8  2CC2               	goto	u6565
  7210  1CC9                     l3938:
  7211  1CC9  3001               	movlw	1
  7212  1CCA  00FF               	movwf	btemp+1
  7213  1CCB  087F               	movf	btemp+1,w
  7214  1CCC  07A0               	addwf	___llmod@counter,f
  7215  1CCD                     l3940:
  7216  1CCD  1FF5               	btfss	___llmod@divisor+3,7
  7217  1CCE  2CD0               	goto	u6571
  7218  1CCF  2CD1               	goto	u6570
  7219  1CD0                     u6571:
  7220  1CD0  2CC0               	goto	l3936
  7221  1CD1                     u6570:
  7222  1CD1                     l3942:
  7223  1CD1  0875               	movf	___llmod@divisor+3,w
  7224  1CD2  0279               	subwf	___llmod@dividend+3,w
  7225  1CD3  1D03               	skipz
  7226  1CD4  2CDF               	goto	u6585
  7227  1CD5  0874               	movf	___llmod@divisor+2,w
  7228  1CD6  0278               	subwf	___llmod@dividend+2,w
  7229  1CD7  1D03               	skipz
  7230  1CD8  2CDF               	goto	u6585
  7231  1CD9  0873               	movf	___llmod@divisor+1,w
  7232  1CDA  0277               	subwf	___llmod@dividend+1,w
  7233  1CDB  1D03               	skipz
  7234  1CDC  2CDF               	goto	u6585
  7235  1CDD  0872               	movf	___llmod@divisor,w
  7236  1CDE  0276               	subwf	___llmod@dividend,w
  7237  1CDF                     u6585:
  7238  1CDF  1C03               	skipc
  7239  1CE0  2CE2               	goto	u6581
  7240  1CE1  2CE3               	goto	u6580
  7241  1CE2                     u6581:
  7242  1CE2  2CF1               	goto	l3946
  7243  1CE3                     u6580:
  7244  1CE3                     l3944:
  7245  1CE3  0872               	movf	___llmod@divisor,w
  7246  1CE4  02F6               	subwf	___llmod@dividend,f
  7247  1CE5  0873               	movf	___llmod@divisor+1,w
  7248  1CE6  1C03               	skipc
  7249  1CE7  0F73               	incfsz	___llmod@divisor+1,w
  7250  1CE8  02F7               	subwf	___llmod@dividend+1,f
  7251  1CE9  0874               	movf	___llmod@divisor+2,w
  7252  1CEA  1C03               	skipc
  7253  1CEB  0F74               	incfsz	___llmod@divisor+2,w
  7254  1CEC  02F8               	subwf	___llmod@dividend+2,f
  7255  1CED  0875               	movf	___llmod@divisor+3,w
  7256  1CEE  1C03               	skipc
  7257  1CEF  0F75               	incfsz	___llmod@divisor+3,w
  7258  1CF0  02F9               	subwf	___llmod@dividend+3,f
  7259  1CF1                     l3946:
  7260  1CF1  3001               	movlw	1
  7261  1CF2                     u6595:
  7262  1CF2  1003               	clrc
  7263  1CF3  0CF5               	rrf	___llmod@divisor+3,f
  7264  1CF4  0CF4               	rrf	___llmod@divisor+2,f
  7265  1CF5  0CF3               	rrf	___llmod@divisor+1,f
  7266  1CF6  0CF2               	rrf	___llmod@divisor,f
  7267  1CF7  3EFF               	addlw	-1
  7268  1CF8  1D03               	skipz
  7269  1CF9  2CF2               	goto	u6595
  7270  1CFA                     l3948:
  7271  1CFA  3001               	movlw	1
  7272  1CFB  02A0               	subwf	___llmod@counter,f
  7273  1CFC  1D03               	btfss	3,2
  7274  1CFD  2CFF               	goto	u6601
  7275  1CFE  2D00               	goto	u6600
  7276  1CFF                     u6601:
  7277  1CFF  2CD1               	goto	l3942
  7278  1D00                     u6600:
  7279  1D00                     l3950:
  7280  1D00  0879               	movf	___llmod@dividend+3,w
  7281  1D01  00F5               	movwf	?___llmod+3
  7282  1D02  0878               	movf	___llmod@dividend+2,w
  7283  1D03  00F4               	movwf	?___llmod+2
  7284  1D04  0877               	movf	___llmod@dividend+1,w
  7285  1D05  00F3               	movwf	?___llmod+1
  7286  1D06  0876               	movf	___llmod@dividend,w
  7287  1D07  00F2               	movwf	?___llmod
  7288  1D08                     l600:
  7289  1D08  0008               	return
  7290  1D09                     __end_of___llmod:
  7291                           
  7292                           	psect	text16
  7293  1DC9                     __ptext16:	
  7294 ;; *************** function ___lldiv *****************
  7295 ;; Defined at:
  7296 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  divisor         4    2[COMMON] unsigned long 
  7299 ;;  dividend        4    6[COMMON] unsigned long 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  quotient        4    0[BANK0 ] unsigned long 
  7302 ;;  counter         1    4[BANK0 ] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  4    2[COMMON] unsigned long 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0, btemp+1
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7312 ;;      Params:         8       0       0       0       0
  7313 ;;      Locals:         0       5       0       0       0
  7314 ;;      Temps:          1       0       0       0       0
  7315 ;;      Totals:         9       5       0       0       0
  7316 ;;Total ram usage:       14 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    1
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_sprintf
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function ___lldiv
  7328  1DC9                     ___lldiv:
  7329  1DC9                     l3078:	
  7330                           ;incstack = 0
  7331                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  7332                           
  7333  1DC9  3000               	movlw	0
  7334  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
  7335  1DCB  1303               	bcf	3,6	;RP1=0, select bank0
  7336  1DCC  00A3               	movwf	___lldiv@quotient+3
  7337  1DCD  3000               	movlw	0
  7338  1DCE  00A2               	movwf	___lldiv@quotient+2
  7339  1DCF  3000               	movlw	0
  7340  1DD0  00A1               	movwf	___lldiv@quotient+1
  7341  1DD1  3000               	movlw	0
  7342  1DD2  00A0               	movwf	___lldiv@quotient
  7343  1DD3  0875               	movf	___lldiv@divisor+3,w
  7344  1DD4  0474               	iorwf	___lldiv@divisor+2,w
  7345  1DD5  0473               	iorwf	___lldiv@divisor+1,w
  7346  1DD6  0472               	iorwf	___lldiv@divisor,w
  7347  1DD7  1903               	skipnz
  7348  1DD8  2DDA               	goto	u4901
  7349  1DD9  2DDB               	goto	u4900
  7350  1DDA                     u4901:
  7351  1DDA  2E28               	goto	l3100
  7352  1DDB                     u4900:
  7353  1DDB                     l3080:
  7354  1DDB  01A4               	clrf	___lldiv@counter
  7355  1DDC  0AA4               	incf	___lldiv@counter,f
  7356  1DDD  2DEB               	goto	l3086
  7357  1DDE                     l3082:
  7358  1DDE  3001               	movlw	1
  7359  1DDF  00FA               	movwf	??___lldiv
  7360  1DE0                     u4915:
  7361  1DE0  1003               	clrc
  7362  1DE1  0DF2               	rlf	___lldiv@divisor,f
  7363  1DE2  0DF3               	rlf	___lldiv@divisor+1,f
  7364  1DE3  0DF4               	rlf	___lldiv@divisor+2,f
  7365  1DE4  0DF5               	rlf	___lldiv@divisor+3,f
  7366  1DE5  0BFA               	decfsz	??___lldiv,f
  7367  1DE6  2DE0               	goto	u4915
  7368  1DE7                     l3084:
  7369  1DE7  3001               	movlw	1
  7370  1DE8  00FF               	movwf	btemp+1
  7371  1DE9  087F               	movf	btemp+1,w
  7372  1DEA  07A4               	addwf	___lldiv@counter,f
  7373  1DEB                     l3086:
  7374  1DEB  1FF5               	btfss	___lldiv@divisor+3,7
  7375  1DEC  2DEE               	goto	u4921
  7376  1DED  2DEF               	goto	u4920
  7377  1DEE                     u4921:
  7378  1DEE  2DDE               	goto	l3082
  7379  1DEF                     u4920:
  7380  1DEF                     l3088:
  7381  1DEF  3001               	movlw	1
  7382  1DF0  00FA               	movwf	??___lldiv
  7383  1DF1                     u4935:
  7384  1DF1  1003               	clrc
  7385  1DF2  0DA0               	rlf	___lldiv@quotient,f
  7386  1DF3  0DA1               	rlf	___lldiv@quotient+1,f
  7387  1DF4  0DA2               	rlf	___lldiv@quotient+2,f
  7388  1DF5  0DA3               	rlf	___lldiv@quotient+3,f
  7389  1DF6  0BFA               	decfsz	??___lldiv,f
  7390  1DF7  2DF1               	goto	u4935
  7391  1DF8                     l3090:
  7392  1DF8  0875               	movf	___lldiv@divisor+3,w
  7393  1DF9  0279               	subwf	___lldiv@dividend+3,w
  7394  1DFA  1D03               	skipz
  7395  1DFB  2E06               	goto	u4945
  7396  1DFC  0874               	movf	___lldiv@divisor+2,w
  7397  1DFD  0278               	subwf	___lldiv@dividend+2,w
  7398  1DFE  1D03               	skipz
  7399  1DFF  2E06               	goto	u4945
  7400  1E00  0873               	movf	___lldiv@divisor+1,w
  7401  1E01  0277               	subwf	___lldiv@dividend+1,w
  7402  1E02  1D03               	skipz
  7403  1E03  2E06               	goto	u4945
  7404  1E04  0872               	movf	___lldiv@divisor,w
  7405  1E05  0276               	subwf	___lldiv@dividend,w
  7406  1E06                     u4945:
  7407  1E06  1C03               	skipc
  7408  1E07  2E09               	goto	u4941
  7409  1E08  2E0A               	goto	u4940
  7410  1E09                     u4941:
  7411  1E09  2E19               	goto	l3096
  7412  1E0A                     u4940:
  7413  1E0A                     l3092:
  7414  1E0A  0872               	movf	___lldiv@divisor,w
  7415  1E0B  02F6               	subwf	___lldiv@dividend,f
  7416  1E0C  0873               	movf	___lldiv@divisor+1,w
  7417  1E0D  1C03               	skipc
  7418  1E0E  0F73               	incfsz	___lldiv@divisor+1,w
  7419  1E0F  02F7               	subwf	___lldiv@dividend+1,f
  7420  1E10  0874               	movf	___lldiv@divisor+2,w
  7421  1E11  1C03               	skipc
  7422  1E12  0F74               	incfsz	___lldiv@divisor+2,w
  7423  1E13  02F8               	subwf	___lldiv@dividend+2,f
  7424  1E14  0875               	movf	___lldiv@divisor+3,w
  7425  1E15  1C03               	skipc
  7426  1E16  0F75               	incfsz	___lldiv@divisor+3,w
  7427  1E17  02F9               	subwf	___lldiv@dividend+3,f
  7428  1E18                     l3094:
  7429  1E18  1420               	bsf	___lldiv@quotient,0
  7430  1E19                     l3096:
  7431  1E19  3001               	movlw	1
  7432  1E1A                     u4955:
  7433  1E1A  1003               	clrc
  7434  1E1B  0CF5               	rrf	___lldiv@divisor+3,f
  7435  1E1C  0CF4               	rrf	___lldiv@divisor+2,f
  7436  1E1D  0CF3               	rrf	___lldiv@divisor+1,f
  7437  1E1E  0CF2               	rrf	___lldiv@divisor,f
  7438  1E1F  3EFF               	addlw	-1
  7439  1E20  1D03               	skipz
  7440  1E21  2E1A               	goto	u4955
  7441  1E22                     l3098:
  7442  1E22  3001               	movlw	1
  7443  1E23  02A4               	subwf	___lldiv@counter,f
  7444  1E24  1D03               	btfss	3,2
  7445  1E25  2E27               	goto	u4961
  7446  1E26  2E28               	goto	u4960
  7447  1E27                     u4961:
  7448  1E27  2DEF               	goto	l3088
  7449  1E28                     u4960:
  7450  1E28                     l3100:
  7451  1E28  0823               	movf	___lldiv@quotient+3,w
  7452  1E29  00F5               	movwf	?___lldiv+3
  7453  1E2A  0822               	movf	___lldiv@quotient+2,w
  7454  1E2B  00F4               	movwf	?___lldiv+2
  7455  1E2C  0821               	movf	___lldiv@quotient+1,w
  7456  1E2D  00F3               	movwf	?___lldiv+1
  7457  1E2E  0820               	movf	___lldiv@quotient,w
  7458  1E2F  00F2               	movwf	?___lldiv
  7459  1E30                     l380:
  7460  1E30  0008               	return
  7461  1E31                     __end_of___lldiv:
  7462                           
  7463                           	psect	text17
  7464  1E31                     __ptext17:	
  7465 ;; *************** function ___fltol *****************
  7466 ;; Defined at:
  7467 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  f1              4   53[BANK0 ] unsigned long 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  exp1            1   62[BANK0 ] unsigned char 
  7472 ;;  sign1           1   61[BANK0 ] unsigned char 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  4   53[BANK0 ] long 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, btemp+1
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7482 ;;      Params:         0       4       0       0       0
  7483 ;;      Locals:         0       2       0       0       0
  7484 ;;      Temps:          0       4       0       0       0
  7485 ;;      Totals:         0      10       0       0       0
  7486 ;;Total ram usage:       10 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    1
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_sprintf
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function ___fltol
  7498  1E31                     ___fltol:
  7499  1E31                     l3144:	
  7500                           ;incstack = 0
  7501                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7502                           
  7503  1E31  1003               	clrc
  7504  1E32  1283               	bcf	3,5	;RP0=0, select bank0
  7505  1E33  1303               	bcf	3,6	;RP1=0, select bank0
  7506  1E34  0D57               	rlf	___fltol@f1+2,w
  7507  1E35  0D58               	rlf	___fltol@f1+3,w
  7508  1E36  00FF               	movwf	btemp+1
  7509  1E37  087F               	movf	btemp+1,w
  7510  1E38  00DE               	movwf	___fltol@exp1
  7511  1E39  085E               	movf	___fltol@exp1,w
  7512  1E3A  1D03               	btfss	3,2
  7513  1E3B  2E3D               	goto	u5081
  7514  1E3C  2E3E               	goto	u5080
  7515  1E3D                     u5081:
  7516  1E3D  2E47               	goto	l3150
  7517  1E3E                     u5080:
  7518  1E3E                     l3146:
  7519  1E3E  3000               	movlw	0
  7520  1E3F  00D8               	movwf	?___fltol+3
  7521  1E40  3000               	movlw	0
  7522  1E41  00D7               	movwf	?___fltol+2
  7523  1E42  3000               	movlw	0
  7524  1E43  00D6               	movwf	?___fltol+1
  7525  1E44  3000               	movlw	0
  7526  1E45  00D5               	movwf	?___fltol
  7527  1E46  2EAC               	goto	l547
  7528  1E47                     l3150:
  7529  1E47  0855               	movf	___fltol@f1,w
  7530  1E48  00D9               	movwf	??___fltol
  7531  1E49  0856               	movf	___fltol@f1+1,w
  7532  1E4A  00DA               	movwf	??___fltol+1
  7533  1E4B  0857               	movf	___fltol@f1+2,w
  7534  1E4C  00DB               	movwf	??___fltol+2
  7535  1E4D  0858               	movf	___fltol@f1+3,w
  7536  1E4E  00DC               	movwf	??___fltol+3
  7537  1E4F  301F               	movlw	31
  7538  1E50                     u5095:
  7539  1E50  1003               	clrc
  7540  1E51  0CDC               	rrf	??___fltol+3,f
  7541  1E52  0CDB               	rrf	??___fltol+2,f
  7542  1E53  0CDA               	rrf	??___fltol+1,f
  7543  1E54  0CD9               	rrf	??___fltol,f
  7544  1E55                     u5090:
  7545  1E55  3EFF               	addlw	-1
  7546  1E56  1D03               	skipz
  7547  1E57  2E50               	goto	u5095
  7548  1E58  0859               	movf	??___fltol,w
  7549  1E59  00FF               	movwf	btemp+1
  7550  1E5A  087F               	movf	btemp+1,w
  7551  1E5B  00DD               	movwf	___fltol@sign1
  7552  1E5C                     l3152:
  7553  1E5C  17D7               	bsf	___fltol@f1+2,7
  7554  1E5D                     l3154:
  7555  1E5D  30FF               	movlw	255
  7556  1E5E  05D5               	andwf	___fltol@f1,f
  7557  1E5F  30FF               	movlw	255
  7558  1E60  05D6               	andwf	___fltol@f1+1,f
  7559  1E61  30FF               	movlw	255
  7560  1E62  05D7               	andwf	___fltol@f1+2,f
  7561  1E63  3000               	movlw	0
  7562  1E64  05D8               	andwf	___fltol@f1+3,f
  7563  1E65                     l3156:
  7564  1E65  3096               	movlw	150
  7565  1E66  02DE               	subwf	___fltol@exp1,f
  7566  1E67                     l3158:
  7567  1E67  1FDE               	btfss	___fltol@exp1,7
  7568  1E68  2E6A               	goto	u5101
  7569  1E69  2E6B               	goto	u5100
  7570  1E6A                     u5101:
  7571  1E6A  2E85               	goto	l3170
  7572  1E6B                     u5100:
  7573  1E6B                     l3160:
  7574  1E6B  085E               	movf	___fltol@exp1,w
  7575  1E6C  3A80               	xorlw	128
  7576  1E6D  3E97               	addlw	151
  7577  1E6E  1803               	skipnc
  7578  1E6F  2E71               	goto	u5111
  7579  1E70  2E72               	goto	u5110
  7580  1E71                     u5111:
  7581  1E71  2E73               	goto	l3166
  7582  1E72                     u5110:
  7583  1E72  2E3E               	goto	l3146
  7584  1E73                     l3166:
  7585  1E73  3001               	movlw	1
  7586  1E74                     u5125:
  7587  1E74  1003               	clrc
  7588  1E75  0CD8               	rrf	___fltol@f1+3,f
  7589  1E76  0CD7               	rrf	___fltol@f1+2,f
  7590  1E77  0CD6               	rrf	___fltol@f1+1,f
  7591  1E78  0CD5               	rrf	___fltol@f1,f
  7592  1E79  3EFF               	addlw	-1
  7593  1E7A  1D03               	skipz
  7594  1E7B  2E74               	goto	u5125
  7595  1E7C                     l3168:
  7596  1E7C  3001               	movlw	1
  7597  1E7D  00FF               	movwf	btemp+1
  7598  1E7E  087F               	movf	btemp+1,w
  7599  1E7F  07DE               	addwf	___fltol@exp1,f
  7600  1E80  1D03               	btfss	3,2
  7601  1E81  2E83               	goto	u5131
  7602  1E82  2E84               	goto	u5130
  7603  1E83                     u5131:
  7604  1E83  2E73               	goto	l3166
  7605  1E84                     u5130:
  7606  1E84  2E9C               	goto	l3178
  7607  1E85                     l3170:
  7608  1E85  3020               	movlw	32
  7609  1E86  025E               	subwf	___fltol@exp1,w
  7610  1E87  1C03               	skipc
  7611  1E88  2E8A               	goto	u5141
  7612  1E89  2E8B               	goto	u5140
  7613  1E8A                     u5141:
  7614  1E8A  2E97               	goto	l554
  7615  1E8B                     u5140:
  7616  1E8B  2E3E               	goto	l3146
  7617  1E8C                     l3176:
  7618  1E8C  3001               	movlw	1
  7619  1E8D  00D9               	movwf	??___fltol
  7620  1E8E                     u5155:
  7621  1E8E  1003               	clrc
  7622  1E8F  0DD5               	rlf	___fltol@f1,f
  7623  1E90  0DD6               	rlf	___fltol@f1+1,f
  7624  1E91  0DD7               	rlf	___fltol@f1+2,f
  7625  1E92  0DD8               	rlf	___fltol@f1+3,f
  7626  1E93  0BD9               	decfsz	??___fltol,f
  7627  1E94  2E8E               	goto	u5155
  7628  1E95  3001               	movlw	1
  7629  1E96  02DE               	subwf	___fltol@exp1,f
  7630  1E97                     l554:
  7631  1E97  085E               	movf	___fltol@exp1,w
  7632  1E98  1D03               	btfss	3,2
  7633  1E99  2E9B               	goto	u5161
  7634  1E9A  2E9C               	goto	u5160
  7635  1E9B                     u5161:
  7636  1E9B  2E8C               	goto	l3176
  7637  1E9C                     u5160:
  7638  1E9C                     l3178:
  7639  1E9C  085D               	movf	___fltol@sign1,w
  7640  1E9D  1903               	btfsc	3,2
  7641  1E9E  2EA0               	goto	u5171
  7642  1E9F  2EA1               	goto	u5170
  7643  1EA0                     u5171:
  7644  1EA0  2EAC               	goto	l557
  7645  1EA1                     u5170:
  7646  1EA1                     l3180:
  7647  1EA1  09D5               	comf	___fltol@f1,f
  7648  1EA2  09D6               	comf	___fltol@f1+1,f
  7649  1EA3  09D7               	comf	___fltol@f1+2,f
  7650  1EA4  09D8               	comf	___fltol@f1+3,f
  7651  1EA5  0AD5               	incf	___fltol@f1,f
  7652  1EA6  1903               	skipnz
  7653  1EA7  0AD6               	incf	___fltol@f1+1,f
  7654  1EA8  1903               	skipnz
  7655  1EA9  0AD7               	incf	___fltol@f1+2,f
  7656  1EAA  1903               	skipnz
  7657  1EAB  0AD8               	incf	___fltol@f1+3,f
  7658  1EAC                     l557:
  7659  1EAC                     l547:
  7660  1EAC  0008               	return
  7661  1EAD                     __end_of___fltol:
  7662                           
  7663                           	psect	text18
  7664  1C10                     __ptext18:	
  7665 ;; *************** function ___flsub *****************
  7666 ;; Defined at:
  7667 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  a               4    0[BANK1 ] long 
  7670 ;;  b               4    4[BANK1 ] long 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  4    0[BANK1 ] long 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7682 ;;      Params:         0       0       8       0       0
  7683 ;;      Locals:         0       0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0
  7685 ;;      Totals:         0       0       8       0       0
  7686 ;;Total ram usage:        8 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    2
  7689 ;; This function calls:
  7690 ;;		___fladd
  7691 ;; This function is called by:
  7692 ;;		_sprintf
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           
  7697                           ;psect for function ___flsub
  7698  1C10                     ___flsub:
  7699  1C10                     l3954:	
  7700                           ;incstack = 0
  7701                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7702                           
  7703  1C10  3080               	movlw	128
  7704  1C11  1683               	bsf	3,5	;RP0=1, select bank1
  7705  1C12  1303               	bcf	3,6	;RP1=0, select bank1
  7706  1C13  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7707  1C14                     l3956:
  7708  1C14  0827               	movf	(___flsub@b+3)^(0+128),w
  7709  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  7710  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  7711  1C17  00D9               	movwf	___fladd@b+3
  7712  1C18  1683               	bsf	3,5	;RP0=1, select bank1
  7713  1C19  1303               	bcf	3,6	;RP1=0, select bank1
  7714  1C1A  0826               	movf	(___flsub@b+2)^(0+128),w
  7715  1C1B  1283               	bcf	3,5	;RP0=0, select bank0
  7716  1C1C  1303               	bcf	3,6	;RP1=0, select bank0
  7717  1C1D  00D8               	movwf	___fladd@b+2
  7718  1C1E  1683               	bsf	3,5	;RP0=1, select bank1
  7719  1C1F  1303               	bcf	3,6	;RP1=0, select bank1
  7720  1C20  0825               	movf	(___flsub@b+1)^(0+128),w
  7721  1C21  1283               	bcf	3,5	;RP0=0, select bank0
  7722  1C22  1303               	bcf	3,6	;RP1=0, select bank0
  7723  1C23  00D7               	movwf	___fladd@b+1
  7724  1C24  1683               	bsf	3,5	;RP0=1, select bank1
  7725  1C25  1303               	bcf	3,6	;RP1=0, select bank1
  7726  1C26  0824               	movf	___flsub@b^(0+128),w
  7727  1C27  1283               	bcf	3,5	;RP0=0, select bank0
  7728  1C28  1303               	bcf	3,6	;RP1=0, select bank0
  7729  1C29  00D6               	movwf	___fladd@b
  7730  1C2A  1683               	bsf	3,5	;RP0=1, select bank1
  7731  1C2B  1303               	bcf	3,6	;RP1=0, select bank1
  7732  1C2C  0823               	movf	(___flsub@a+3)^(0+128),w
  7733  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7734  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7735  1C2F  00DD               	movwf	___fladd@a+3
  7736  1C30  1683               	bsf	3,5	;RP0=1, select bank1
  7737  1C31  1303               	bcf	3,6	;RP1=0, select bank1
  7738  1C32  0822               	movf	(___flsub@a+2)^(0+128),w
  7739  1C33  1283               	bcf	3,5	;RP0=0, select bank0
  7740  1C34  1303               	bcf	3,6	;RP1=0, select bank0
  7741  1C35  00DC               	movwf	___fladd@a+2
  7742  1C36  1683               	bsf	3,5	;RP0=1, select bank1
  7743  1C37  1303               	bcf	3,6	;RP1=0, select bank1
  7744  1C38  0821               	movf	(___flsub@a+1)^(0+128),w
  7745  1C39  1283               	bcf	3,5	;RP0=0, select bank0
  7746  1C3A  1303               	bcf	3,6	;RP1=0, select bank0
  7747  1C3B  00DB               	movwf	___fladd@a+1
  7748  1C3C  1683               	bsf	3,5	;RP0=1, select bank1
  7749  1C3D  1303               	bcf	3,6	;RP1=0, select bank1
  7750  1C3E  0820               	movf	___flsub@a^(0+128),w
  7751  1C3F  1283               	bcf	3,5	;RP0=0, select bank0
  7752  1C40  1303               	bcf	3,6	;RP1=0, select bank0
  7753  1C41  00DA               	movwf	___fladd@a
  7754  1C42  160A  118A  2578  160A  158A  	fcall	___fladd
  7755  1C47  1283               	bcf	3,5	;RP0=0, select bank0
  7756  1C48  1303               	bcf	3,6	;RP1=0, select bank0
  7757  1C49  0859               	movf	?___fladd+3,w
  7758  1C4A  1683               	bsf	3,5	;RP0=1, select bank1
  7759  1C4B  1303               	bcf	3,6	;RP1=0, select bank1
  7760  1C4C  00A3               	movwf	(?___flsub+3)^(0+128)
  7761  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  7762  1C4E  1303               	bcf	3,6	;RP1=0, select bank0
  7763  1C4F  0858               	movf	?___fladd+2,w
  7764  1C50  1683               	bsf	3,5	;RP0=1, select bank1
  7765  1C51  1303               	bcf	3,6	;RP1=0, select bank1
  7766  1C52  00A2               	movwf	(?___flsub+2)^(0+128)
  7767  1C53  1283               	bcf	3,5	;RP0=0, select bank0
  7768  1C54  1303               	bcf	3,6	;RP1=0, select bank0
  7769  1C55  0857               	movf	?___fladd+1,w
  7770  1C56  1683               	bsf	3,5	;RP0=1, select bank1
  7771  1C57  1303               	bcf	3,6	;RP1=0, select bank1
  7772  1C58  00A1               	movwf	(?___flsub+1)^(0+128)
  7773  1C59  1283               	bcf	3,5	;RP0=0, select bank0
  7774  1C5A  1303               	bcf	3,6	;RP1=0, select bank0
  7775  1C5B  0856               	movf	?___fladd,w
  7776  1C5C  1683               	bsf	3,5	;RP0=1, select bank1
  7777  1C5D  1303               	bcf	3,6	;RP1=0, select bank1
  7778  1C5E  00A0               	movwf	?___flsub^(0+128)
  7779  1C5F                     l717:
  7780  1C5F  0008               	return
  7781  1C60                     __end_of___flsub:
  7782                           
  7783                           	psect	text19
  7784  1578                     __ptext19:	
  7785 ;; *************** function ___fladd *****************
  7786 ;; Defined at:
  7787 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  b               4   54[BANK0 ] long 
  7790 ;;  a               4   58[BANK0 ] long 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  grs             1   73[BANK0 ] unsigned char 
  7793 ;;  bexp            1   72[BANK0 ] unsigned char 
  7794 ;;  aexp            1   71[BANK0 ] unsigned char 
  7795 ;;  signs           1   70[BANK0 ] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  4   54[BANK0 ] unsigned char 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0, btemp+1
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7805 ;;      Params:         0       8       0       0       0
  7806 ;;      Locals:         0       4       0       0       0
  7807 ;;      Temps:          0       8       0       0       0
  7808 ;;      Totals:         0      20       0       0       0
  7809 ;;Total ram usage:       20 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    1
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_sprintf
  7816 ;;		___flsub
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           
  7821                           ;psect for function ___fladd
  7822  1578                     ___fladd:
  7823  1578                     l2516:	
  7824                           ;incstack = 0
  7825                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7826                           
  7827  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7828  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7829  157A  0859               	movf	___fladd@b+3,w
  7830  157B  3980               	andlw	128
  7831  157C  00FF               	movwf	btemp+1
  7832  157D  087F               	movf	btemp+1,w
  7833  157E  00E6               	movwf	___fladd@signs
  7834  157F                     l2518:
  7835  157F  0859               	movf	___fladd@b+3,w
  7836  1580  00DE               	movwf	??___fladd
  7837  1581  075E               	addwf	??___fladd,w
  7838  1582  00FF               	movwf	btemp+1
  7839  1583  087F               	movf	btemp+1,w
  7840  1584  00E8               	movwf	___fladd@bexp
  7841  1585                     l2520:
  7842  1585  1FD8               	btfss	___fladd@b+2,7
  7843  1586  2D88               	goto	u3511
  7844  1587  2D89               	goto	u3510
  7845  1588                     u3511:
  7846  1588  2D8A               	goto	l2524
  7847  1589                     u3510:
  7848  1589                     l2522:
  7849  1589  1468               	bsf	___fladd@bexp,0
  7850  158A                     l2524:
  7851  158A  0868               	movf	___fladd@bexp,w
  7852  158B  1903               	btfsc	3,2
  7853  158C  2D8E               	goto	u3521
  7854  158D  2D8F               	goto	u3520
  7855  158E                     u3521:
  7856  158E  2D9F               	goto	l2534
  7857  158F                     u3520:
  7858  158F                     l2526:
  7859  158F  0A68               	incf	___fladd@bexp,w
  7860  1590  1D03               	btfss	3,2
  7861  1591  2D93               	goto	u3531
  7862  1592  2D94               	goto	u3530
  7863  1593                     u3531:
  7864  1593  2D9C               	goto	l2530
  7865  1594                     u3530:
  7866  1594                     l2528:
  7867  1594  3000               	movlw	0
  7868  1595  00D9               	movwf	___fladd@b+3
  7869  1596  3000               	movlw	0
  7870  1597  00D8               	movwf	___fladd@b+2
  7871  1598  3000               	movlw	0
  7872  1599  00D7               	movwf	___fladd@b+1
  7873  159A  3000               	movlw	0
  7874  159B  00D6               	movwf	___fladd@b
  7875  159C                     l2530:
  7876  159C  17D8               	bsf	___fladd@b+2,7
  7877  159D                     l2532:
  7878  159D  01D9               	clrf	___fladd@b+3
  7879  159E  2DA7               	goto	l2536
  7880  159F                     l2534:
  7881  159F  3000               	movlw	0
  7882  15A0  00D9               	movwf	___fladd@b+3
  7883  15A1  3000               	movlw	0
  7884  15A2  00D8               	movwf	___fladd@b+2
  7885  15A3  3000               	movlw	0
  7886  15A4  00D7               	movwf	___fladd@b+1
  7887  15A5  3000               	movlw	0
  7888  15A6  00D6               	movwf	___fladd@b
  7889  15A7                     l2536:
  7890  15A7  085D               	movf	___fladd@a+3,w
  7891  15A8  3980               	andlw	128
  7892  15A9  00FF               	movwf	btemp+1
  7893  15AA  087F               	movf	btemp+1,w
  7894  15AB  00E7               	movwf	___fladd@aexp
  7895  15AC                     l2538:
  7896  15AC  0867               	movf	___fladd@aexp,w
  7897  15AD  0666               	xorwf	___fladd@signs,w
  7898  15AE  1903               	skipnz
  7899  15AF  2DB1               	goto	u3541
  7900  15B0  2DB2               	goto	u3540
  7901  15B1                     u3541:
  7902  15B1  2DB3               	goto	l2542
  7903  15B2                     u3540:
  7904  15B2                     l2540:
  7905  15B2  1766               	bsf	___fladd@signs,6
  7906  15B3                     l2542:
  7907  15B3  085D               	movf	___fladd@a+3,w
  7908  15B4  00DE               	movwf	??___fladd
  7909  15B5  075E               	addwf	??___fladd,w
  7910  15B6  00FF               	movwf	btemp+1
  7911  15B7  087F               	movf	btemp+1,w
  7912  15B8  00E7               	movwf	___fladd@aexp
  7913  15B9                     l2544:
  7914  15B9  1FDC               	btfss	___fladd@a+2,7
  7915  15BA  2DBC               	goto	u3551
  7916  15BB  2DBD               	goto	u3550
  7917  15BC                     u3551:
  7918  15BC  2DBE               	goto	l2548
  7919  15BD                     u3550:
  7920  15BD                     l2546:
  7921  15BD  1467               	bsf	___fladd@aexp,0
  7922  15BE                     l2548:
  7923  15BE  0867               	movf	___fladd@aexp,w
  7924  15BF  1903               	btfsc	3,2
  7925  15C0  2DC2               	goto	u3561
  7926  15C1  2DC3               	goto	u3560
  7927  15C2                     u3561:
  7928  15C2  2DD3               	goto	l2558
  7929  15C3                     u3560:
  7930  15C3                     l2550:
  7931  15C3  0A67               	incf	___fladd@aexp,w
  7932  15C4  1D03               	btfss	3,2
  7933  15C5  2DC7               	goto	u3571
  7934  15C6  2DC8               	goto	u3570
  7935  15C7                     u3571:
  7936  15C7  2DD0               	goto	l2554
  7937  15C8                     u3570:
  7938  15C8                     l2552:
  7939  15C8  3000               	movlw	0
  7940  15C9  00DD               	movwf	___fladd@a+3
  7941  15CA  3000               	movlw	0
  7942  15CB  00DC               	movwf	___fladd@a+2
  7943  15CC  3000               	movlw	0
  7944  15CD  00DB               	movwf	___fladd@a+1
  7945  15CE  3000               	movlw	0
  7946  15CF  00DA               	movwf	___fladd@a
  7947  15D0                     l2554:
  7948  15D0  17DC               	bsf	___fladd@a+2,7
  7949  15D1                     l2556:
  7950  15D1  01DD               	clrf	___fladd@a+3
  7951  15D2  2DDB               	goto	l671
  7952  15D3                     l2558:
  7953  15D3  3000               	movlw	0
  7954  15D4  00DD               	movwf	___fladd@a+3
  7955  15D5  3000               	movlw	0
  7956  15D6  00DC               	movwf	___fladd@a+2
  7957  15D7  3000               	movlw	0
  7958  15D8  00DB               	movwf	___fladd@a+1
  7959  15D9  3000               	movlw	0
  7960  15DA  00DA               	movwf	___fladd@a
  7961  15DB                     l671:
  7962  15DB  0868               	movf	___fladd@bexp,w
  7963  15DC  0267               	subwf	___fladd@aexp,w
  7964  15DD  1803               	skipnc
  7965  15DE  2DE0               	goto	u3581
  7966  15DF  2DE1               	goto	u3580
  7967  15E0                     u3581:
  7968  15E0  2E25               	goto	l2594
  7969  15E1                     u3580:
  7970  15E1                     l2560:
  7971  15E1  1F66               	btfss	___fladd@signs,6
  7972  15E2  2DE4               	goto	u3591
  7973  15E3  2DE5               	goto	u3590
  7974  15E4                     u3591:
  7975  15E4  2DE9               	goto	l2564
  7976  15E5                     u3590:
  7977  15E5                     l2562:
  7978  15E5  3080               	movlw	128
  7979  15E6  00FF               	movwf	btemp+1
  7980  15E7  087F               	movf	btemp+1,w
  7981  15E8  06E6               	xorwf	___fladd@signs,f
  7982  15E9                     l2564:
  7983  15E9  0868               	movf	___fladd@bexp,w
  7984  15EA  00FF               	movwf	btemp+1
  7985  15EB  087F               	movf	btemp+1,w
  7986  15EC  00E9               	movwf	___fladd@grs
  7987  15ED                     l2566:
  7988  15ED  0867               	movf	___fladd@aexp,w
  7989  15EE  00FF               	movwf	btemp+1
  7990  15EF  087F               	movf	btemp+1,w
  7991  15F0  00E8               	movwf	___fladd@bexp
  7992  15F1                     l2568:
  7993  15F1  0869               	movf	___fladd@grs,w
  7994  15F2  00FF               	movwf	btemp+1
  7995  15F3  087F               	movf	btemp+1,w
  7996  15F4  00E7               	movwf	___fladd@aexp
  7997  15F5                     l2570:
  7998  15F5  0856               	movf	___fladd@b,w
  7999  15F6  00FF               	movwf	btemp+1
  8000  15F7  087F               	movf	btemp+1,w
  8001  15F8  00E9               	movwf	___fladd@grs
  8002  15F9                     l2572:
  8003  15F9  085A               	movf	___fladd@a,w
  8004  15FA  00FF               	movwf	btemp+1
  8005  15FB  087F               	movf	btemp+1,w
  8006  15FC  00D6               	movwf	___fladd@b
  8007  15FD                     l2574:
  8008  15FD  0869               	movf	___fladd@grs,w
  8009  15FE  00FF               	movwf	btemp+1
  8010  15FF  087F               	movf	btemp+1,w
  8011  1600  00DA               	movwf	___fladd@a
  8012  1601                     l2576:
  8013  1601  0857               	movf	___fladd@b+1,w
  8014  1602  00FF               	movwf	btemp+1
  8015  1603  087F               	movf	btemp+1,w
  8016  1604  00E9               	movwf	___fladd@grs
  8017  1605                     l2578:
  8018  1605  085B               	movf	___fladd@a+1,w
  8019  1606  00FF               	movwf	btemp+1
  8020  1607  087F               	movf	btemp+1,w
  8021  1608  00D7               	movwf	___fladd@b+1
  8022  1609                     l2580:
  8023  1609  0869               	movf	___fladd@grs,w
  8024  160A  00FF               	movwf	btemp+1
  8025  160B  087F               	movf	btemp+1,w
  8026  160C  00DB               	movwf	___fladd@a+1
  8027  160D                     l2582:
  8028  160D  0858               	movf	___fladd@b+2,w
  8029  160E  00FF               	movwf	btemp+1
  8030  160F  087F               	movf	btemp+1,w
  8031  1610  00E9               	movwf	___fladd@grs
  8032  1611                     l2584:
  8033  1611  085C               	movf	___fladd@a+2,w
  8034  1612  00FF               	movwf	btemp+1
  8035  1613  087F               	movf	btemp+1,w
  8036  1614  00D8               	movwf	___fladd@b+2
  8037  1615                     l2586:
  8038  1615  0869               	movf	___fladd@grs,w
  8039  1616  00FF               	movwf	btemp+1
  8040  1617  087F               	movf	btemp+1,w
  8041  1618  00DC               	movwf	___fladd@a+2
  8042  1619                     l2588:
  8043  1619  0859               	movf	___fladd@b+3,w
  8044  161A  00FF               	movwf	btemp+1
  8045  161B  087F               	movf	btemp+1,w
  8046  161C  00E9               	movwf	___fladd@grs
  8047  161D                     l2590:
  8048  161D  085D               	movf	___fladd@a+3,w
  8049  161E  00FF               	movwf	btemp+1
  8050  161F  087F               	movf	btemp+1,w
  8051  1620  00D9               	movwf	___fladd@b+3
  8052  1621                     l2592:
  8053  1621  0869               	movf	___fladd@grs,w
  8054  1622  00FF               	movwf	btemp+1
  8055  1623  087F               	movf	btemp+1,w
  8056  1624  00DD               	movwf	___fladd@a+3
  8057  1625                     l2594:
  8058  1625  01E9               	clrf	___fladd@grs
  8059  1626                     l2596:
  8060  1626  0867               	movf	___fladd@aexp,w
  8061  1627  00DE               	movwf	??___fladd
  8062  1628  01DF               	clrf	??___fladd+1
  8063  1629  085F               	movf	??___fladd+1,w
  8064  162A  00E1               	movwf	??___fladd+3
  8065  162B  0868               	movf	___fladd@bexp,w
  8066  162C  025E               	subwf	??___fladd,w
  8067  162D  00E0               	movwf	??___fladd+2
  8068  162E  1C03               	skipc
  8069  162F  03E1               	decf	??___fladd+3,f
  8070  1630  0861               	movf	??___fladd+3,w
  8071  1631  3A80               	xorlw	128
  8072  1632  00FF               	movwf	btemp+1
  8073  1633  3080               	movlw	128
  8074  1634  027F               	subwf	btemp+1,w
  8075  1635  1D03               	skipz
  8076  1636  2E39               	goto	u3605
  8077  1637  301A               	movlw	26
  8078  1638  0260               	subwf	??___fladd+2,w
  8079  1639                     u3605:
  8080  1639  1C03               	skipc
  8081  163A  2E3C               	goto	u3601
  8082  163B  2E3D               	goto	u3600
  8083  163C                     u3601:
  8084  163C  2E7A               	goto	l2616
  8085  163D                     u3600:
  8086  163D                     l2598:
  8087  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8088  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8089  163F  0859               	movf	___fladd@b+3,w
  8090  1640  0458               	iorwf	___fladd@b+2,w
  8091  1641  0457               	iorwf	___fladd@b+1,w
  8092  1642  0456               	iorwf	___fladd@b,w
  8093  1643  1D03               	skipz
  8094  1644  2E46               	goto	u3611
  8095  1645  2E48               	goto	u3610
  8096  1646                     u3611:
  8097  1646  3001               	movlw	1
  8098  1647  2E49               	goto	u3620
  8099  1648                     u3610:
  8100  1648  3000               	movlw	0
  8101  1649                     u3620:
  8102  1649  00FF               	movwf	btemp+1
  8103  164A  087F               	movf	btemp+1,w
  8104  164B  00E9               	movwf	___fladd@grs
  8105  164C                     l2600:
  8106  164C  3000               	movlw	0
  8107  164D  00D9               	movwf	___fladd@b+3
  8108  164E  3000               	movlw	0
  8109  164F  00D8               	movwf	___fladd@b+2
  8110  1650  3000               	movlw	0
  8111  1651  00D7               	movwf	___fladd@b+1
  8112  1652  3000               	movlw	0
  8113  1653  00D6               	movwf	___fladd@b
  8114  1654                     l2602:
  8115  1654  0867               	movf	___fladd@aexp,w
  8116  1655  00FF               	movwf	btemp+1
  8117  1656  087F               	movf	btemp+1,w
  8118  1657  00E8               	movwf	___fladd@bexp
  8119  1658  2E82               	goto	l675
  8120  1659                     l677:
  8121  1659  1C69               	btfss	___fladd@grs,0
  8122  165A  2E5C               	goto	u3631
  8123  165B  2E5D               	goto	u3630
  8124  165C                     u3631:
  8125  165C  2E66               	goto	l2606
  8126  165D                     u3630:
  8127  165D                     l2604:
  8128  165D  0869               	movf	___fladd@grs,w
  8129  165E  00DE               	movwf	??___fladd
  8130  165F  1003               	clrc
  8131  1660  0C5E               	rrf	??___fladd,w
  8132  1661  3801               	iorlw	1
  8133  1662  00FF               	movwf	btemp+1
  8134  1663  087F               	movf	btemp+1,w
  8135  1664  00E9               	movwf	___fladd@grs
  8136  1665  2E68               	goto	l2608
  8137  1666                     l2606:
  8138  1666  1003               	clrc
  8139  1667  0CE9               	rrf	___fladd@grs,f
  8140  1668                     l2608:
  8141  1668  1C56               	btfss	___fladd@b,0
  8142  1669  2E6B               	goto	u3641
  8143  166A  2E6C               	goto	u3640
  8144  166B                     u3641:
  8145  166B  2E6D               	goto	l2612
  8146  166C                     u3640:
  8147  166C                     l2610:
  8148  166C  17E9               	bsf	___fladd@grs,7
  8149  166D                     l2612:
  8150  166D  3001               	movlw	1
  8151  166E  00DE               	movwf	??___fladd
  8152  166F                     u3655:
  8153  166F  0D59               	rlf	___fladd@b+3,w
  8154  1670  0CD9               	rrf	___fladd@b+3,f
  8155  1671  0CD8               	rrf	___fladd@b+2,f
  8156  1672  0CD7               	rrf	___fladd@b+1,f
  8157  1673  0CD6               	rrf	___fladd@b,f
  8158  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8159  1675  2E6F               	goto	u3655
  8160  1676                     l2614:
  8161  1676  3001               	movlw	1
  8162  1677  00FF               	movwf	btemp+1
  8163  1678  087F               	movf	btemp+1,w
  8164  1679  07E8               	addwf	___fladd@bexp,f
  8165  167A                     l2616:
  8166  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8167  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8168  167C  0867               	movf	___fladd@aexp,w
  8169  167D  0268               	subwf	___fladd@bexp,w
  8170  167E  1C03               	skipc
  8171  167F  2E81               	goto	u3661
  8172  1680  2E82               	goto	u3660
  8173  1681                     u3661:
  8174  1681  2E59               	goto	l677
  8175  1682                     u3660:
  8176  1682                     l675:
  8177  1682  1B66               	btfsc	___fladd@signs,6
  8178  1683  2E85               	goto	u3671
  8179  1684  2E86               	goto	u3670
  8180  1685                     u3671:
  8181  1685  2ED1               	goto	l2642
  8182  1686                     u3670:
  8183  1686                     l2618:
  8184  1686  0868               	movf	___fladd@bexp,w
  8185  1687  1D03               	btfss	3,2
  8186  1688  2E8A               	goto	u3681
  8187  1689  2E8B               	goto	u3680
  8188  168A                     u3681:
  8189  168A  2E94               	goto	l2624
  8190  168B                     u3680:
  8191  168B                     l2620:
  8192  168B  3000               	movlw	0
  8193  168C  00D9               	movwf	?___fladd+3
  8194  168D  3000               	movlw	0
  8195  168E  00D8               	movwf	?___fladd+2
  8196  168F  3000               	movlw	0
  8197  1690  00D7               	movwf	?___fladd+1
  8198  1691  3000               	movlw	0
  8199  1692  00D6               	movwf	?___fladd
  8200  1693  2FFF               	goto	l684
  8201  1694                     l2624:
  8202  1694  085A               	movf	___fladd@a,w
  8203  1695  07D6               	addwf	___fladd@b,f
  8204  1696  085B               	movf	___fladd@a+1,w
  8205  1697  1103               	clrz
  8206  1698  1803               	skipnc
  8207  1699  3E01               	addlw	1
  8208  169A  1903               	skipnz
  8209  169B  2E9D               	goto	u3691
  8210  169C  07D7               	addwf	___fladd@b+1,f
  8211  169D                     u3691:
  8212  169D  085C               	movf	___fladd@a+2,w
  8213  169E  1103               	clrz
  8214  169F  1803               	skipnc
  8215  16A0  3E01               	addlw	1
  8216  16A1  1903               	skipnz
  8217  16A2  2EA4               	goto	u3692
  8218  16A3  07D8               	addwf	___fladd@b+2,f
  8219  16A4                     u3692:
  8220  16A4  085D               	movf	___fladd@a+3,w
  8221  16A5  1103               	clrz
  8222  16A6  1803               	skipnc
  8223  16A7  3E01               	addlw	1
  8224  16A8  1903               	skipnz
  8225  16A9  2EAB               	goto	u3693
  8226  16AA  07D9               	addwf	___fladd@b+3,f
  8227  16AB                     u3693:
  8228  16AB                     l2626:
  8229  16AB  1C59               	btfss	___fladd@b+3,0
  8230  16AC  2EAE               	goto	u3701
  8231  16AD  2EAF               	goto	u3700
  8232  16AE                     u3701:
  8233  16AE  2F85               	goto	l2678
  8234  16AF                     u3700:
  8235  16AF                     l2628:
  8236  16AF  1C69               	btfss	___fladd@grs,0
  8237  16B0  2EB2               	goto	u3711
  8238  16B1  2EB3               	goto	u3710
  8239  16B2                     u3711:
  8240  16B2  2EBC               	goto	l2632
  8241  16B3                     u3710:
  8242  16B3                     l2630:
  8243  16B3  0869               	movf	___fladd@grs,w
  8244  16B4  00DE               	movwf	??___fladd
  8245  16B5  1003               	clrc
  8246  16B6  0C5E               	rrf	??___fladd,w
  8247  16B7  3801               	iorlw	1
  8248  16B8  00FF               	movwf	btemp+1
  8249  16B9  087F               	movf	btemp+1,w
  8250  16BA  00E9               	movwf	___fladd@grs
  8251  16BB  2EBE               	goto	l2634
  8252  16BC                     l2632:
  8253  16BC  1003               	clrc
  8254  16BD  0CE9               	rrf	___fladd@grs,f
  8255  16BE                     l2634:
  8256  16BE  1C56               	btfss	___fladd@b,0
  8257  16BF  2EC1               	goto	u3721
  8258  16C0  2EC2               	goto	u3720
  8259  16C1                     u3721:
  8260  16C1  2EC3               	goto	l2638
  8261  16C2                     u3720:
  8262  16C2                     l2636:
  8263  16C2  17E9               	bsf	___fladd@grs,7
  8264  16C3                     l2638:
  8265  16C3  3001               	movlw	1
  8266  16C4  00DE               	movwf	??___fladd
  8267  16C5                     u3735:
  8268  16C5  0D59               	rlf	___fladd@b+3,w
  8269  16C6  0CD9               	rrf	___fladd@b+3,f
  8270  16C7  0CD8               	rrf	___fladd@b+2,f
  8271  16C8  0CD7               	rrf	___fladd@b+1,f
  8272  16C9  0CD6               	rrf	___fladd@b,f
  8273  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  8274  16CB  2EC5               	goto	u3735
  8275  16CC                     l2640:
  8276  16CC  3001               	movlw	1
  8277  16CD  00FF               	movwf	btemp+1
  8278  16CE  087F               	movf	btemp+1,w
  8279  16CF  07E8               	addwf	___fladd@bexp,f
  8280  16D0  2F85               	goto	l2678
  8281  16D1                     l2642:
  8282  16D1  0859               	movf	___fladd@b+3,w
  8283  16D2  3A80               	xorlw	128
  8284  16D3  00FF               	movwf	btemp+1
  8285  16D4  085D               	movf	___fladd@a+3,w
  8286  16D5  3A80               	xorlw	128
  8287  16D6  027F               	subwf	btemp+1,w
  8288  16D7  1D03               	skipz
  8289  16D8  2EE3               	goto	u3743
  8290  16D9  085C               	movf	___fladd@a+2,w
  8291  16DA  0258               	subwf	___fladd@b+2,w
  8292  16DB  1D03               	skipz
  8293  16DC  2EE3               	goto	u3743
  8294  16DD  085B               	movf	___fladd@a+1,w
  8295  16DE  0257               	subwf	___fladd@b+1,w
  8296  16DF  1D03               	skipz
  8297  16E0  2EE3               	goto	u3743
  8298  16E1  085A               	movf	___fladd@a,w
  8299  16E2  0256               	subwf	___fladd@b,w
  8300  16E3                     u3743:
  8301  16E3  1803               	skipnc
  8302  16E4  2EE6               	goto	u3741
  8303  16E5  2EE7               	goto	u3740
  8304  16E6                     u3741:
  8305  16E6  2F3F               	goto	l2654
  8306  16E7                     u3740:
  8307  16E7                     l2644:
  8308  16E7  30FF               	movlw	255
  8309  16E8  00DE               	movwf	??___fladd
  8310  16E9  30FF               	movlw	255
  8311  16EA  00DF               	movwf	??___fladd+1
  8312  16EB  30FF               	movlw	255
  8313  16EC  00E0               	movwf	??___fladd+2
  8314  16ED  30FF               	movlw	255
  8315  16EE  00E1               	movwf	??___fladd+3
  8316  16EF  085A               	movf	___fladd@a,w
  8317  16F0  00E2               	movwf	??___fladd+4
  8318  16F1  085B               	movf	___fladd@a+1,w
  8319  16F2  00E3               	movwf	??___fladd+5
  8320  16F3  085C               	movf	___fladd@a+2,w
  8321  16F4  00E4               	movwf	??___fladd+6
  8322  16F5  085D               	movf	___fladd@a+3,w
  8323  16F6  00E5               	movwf	??___fladd+7
  8324  16F7  0856               	movf	___fladd@b,w
  8325  16F8  02E2               	subwf	??___fladd+4,f
  8326  16F9  0857               	movf	___fladd@b+1,w
  8327  16FA  1C03               	skipc
  8328  16FB  0F57               	incfsz	___fladd@b+1,w
  8329  16FC  2EFE               	goto	u3751
  8330  16FD  2EFF               	goto	u3752
  8331  16FE                     u3751:
  8332  16FE  02E3               	subwf	??___fladd+5,f
  8333  16FF                     u3752:
  8334  16FF  0858               	movf	___fladd@b+2,w
  8335  1700  1C03               	skipc
  8336  1701  0F58               	incfsz	___fladd@b+2,w
  8337  1702  2F04               	goto	u3753
  8338  1703  2F05               	goto	u3754
  8339  1704                     u3753:
  8340  1704  02E4               	subwf	??___fladd+6,f
  8341  1705                     u3754:
  8342  1705  0859               	movf	___fladd@b+3,w
  8343  1706  1C03               	skipc
  8344  1707  0F59               	incfsz	___fladd@b+3,w
  8345  1708  2F0A               	goto	u3755
  8346  1709  2F0B               	goto	u3756
  8347  170A                     u3755:
  8348  170A  02E5               	subwf	??___fladd+7,f
  8349  170B                     u3756:
  8350  170B  0862               	movf	??___fladd+4,w
  8351  170C  07DE               	addwf	??___fladd,f
  8352  170D  0863               	movf	??___fladd+5,w
  8353  170E  1803               	skipnc
  8354  170F  0F63               	incfsz	??___fladd+5,w
  8355  1710  2F12               	goto	u3760
  8356  1711  2F13               	goto	u3761
  8357  1712                     u3760:
  8358  1712  07DF               	addwf	??___fladd+1,f
  8359  1713                     u3761:
  8360  1713  0864               	movf	??___fladd+6,w
  8361  1714  1803               	skipnc
  8362  1715  0F64               	incfsz	??___fladd+6,w
  8363  1716  2F18               	goto	u3762
  8364  1717  2F19               	goto	u3763
  8365  1718                     u3762:
  8366  1718  07E0               	addwf	??___fladd+2,f
  8367  1719                     u3763:
  8368  1719  0865               	movf	??___fladd+7,w
  8369  171A  1803               	skipnc
  8370  171B  0A65               	incf	??___fladd+7,w
  8371  171C  07E1               	addwf	??___fladd+3,f
  8372  171D  0861               	movf	??___fladd+3,w
  8373  171E  00D9               	movwf	___fladd@b+3
  8374  171F  0860               	movf	??___fladd+2,w
  8375  1720  00D8               	movwf	___fladd@b+2
  8376  1721  085F               	movf	??___fladd+1,w
  8377  1722  00D7               	movwf	___fladd@b+1
  8378  1723  085E               	movf	??___fladd,w
  8379  1724  00D6               	movwf	___fladd@b
  8380  1725                     l2646:
  8381  1725  3080               	movlw	128
  8382  1726  00FF               	movwf	btemp+1
  8383  1727  087F               	movf	btemp+1,w
  8384  1728  06E6               	xorwf	___fladd@signs,f
  8385  1729                     l2648:
  8386  1729  09E9               	comf	___fladd@grs,f
  8387  172A  0AE9               	incf	___fladd@grs,f
  8388  172B                     l2650:
  8389  172B  0869               	movf	___fladd@grs,w
  8390  172C  1D03               	btfss	3,2
  8391  172D  2F2F               	goto	u3771
  8392  172E  2F30               	goto	u3770
  8393  172F                     u3771:
  8394  172F  2F4D               	goto	l692
  8395  1730                     u3770:
  8396  1730                     l2652:
  8397  1730  3001               	movlw	1
  8398  1731  07D6               	addwf	___fladd@b,f
  8399  1732  3000               	movlw	0
  8400  1733  1803               	skipnc
  8401  1734  3001               	movlw	1
  8402  1735  07D7               	addwf	___fladd@b+1,f
  8403  1736  3000               	movlw	0
  8404  1737  1803               	skipnc
  8405  1738  3001               	movlw	1
  8406  1739  07D8               	addwf	___fladd@b+2,f
  8407  173A  3000               	movlw	0
  8408  173B  1803               	skipnc
  8409  173C  3001               	movlw	1
  8410  173D  07D9               	addwf	___fladd@b+3,f
  8411  173E  2F4D               	goto	l692
  8412  173F                     l2654:
  8413  173F  085A               	movf	___fladd@a,w
  8414  1740  02D6               	subwf	___fladd@b,f
  8415  1741  085B               	movf	___fladd@a+1,w
  8416  1742  1C03               	skipc
  8417  1743  0F5B               	incfsz	___fladd@a+1,w
  8418  1744  02D7               	subwf	___fladd@b+1,f
  8419  1745  085C               	movf	___fladd@a+2,w
  8420  1746  1C03               	skipc
  8421  1747  0F5C               	incfsz	___fladd@a+2,w
  8422  1748  02D8               	subwf	___fladd@b+2,f
  8423  1749  085D               	movf	___fladd@a+3,w
  8424  174A  1C03               	skipc
  8425  174B  0F5D               	incfsz	___fladd@a+3,w
  8426  174C  02D9               	subwf	___fladd@b+3,f
  8427  174D                     l692:
  8428  174D  0859               	movf	___fladd@b+3,w
  8429  174E  0458               	iorwf	___fladd@b+2,w
  8430  174F  0457               	iorwf	___fladd@b+1,w
  8431  1750  0456               	iorwf	___fladd@b,w
  8432  1751  1D03               	skipz
  8433  1752  2F54               	goto	u3781
  8434  1753  2F55               	goto	u3780
  8435  1754                     u3781:
  8436  1754  2F81               	goto	l2676
  8437  1755                     u3780:
  8438  1755                     l2656:
  8439  1755  0869               	movf	___fladd@grs,w
  8440  1756  1D03               	btfss	3,2
  8441  1757  2F59               	goto	u3791
  8442  1758  2F5A               	goto	u3790
  8443  1759                     u3791:
  8444  1759  2F81               	goto	l2676
  8445  175A                     u3790:
  8446  175A                     l2658:
  8447  175A  3000               	movlw	0
  8448  175B  00D9               	movwf	?___fladd+3
  8449  175C  3000               	movlw	0
  8450  175D  00D8               	movwf	?___fladd+2
  8451  175E  3000               	movlw	0
  8452  175F  00D7               	movwf	?___fladd+1
  8453  1760  3000               	movlw	0
  8454  1761  00D6               	movwf	?___fladd
  8455  1762  2FFF               	goto	l684
  8456  1763                     l2662:
  8457  1763  3001               	movlw	1
  8458  1764  00DE               	movwf	??___fladd
  8459  1765                     u3805:
  8460  1765  1003               	clrc
  8461  1766  0DD6               	rlf	___fladd@b,f
  8462  1767  0DD7               	rlf	___fladd@b+1,f
  8463  1768  0DD8               	rlf	___fladd@b+2,f
  8464  1769  0DD9               	rlf	___fladd@b+3,f
  8465  176A  0BDE               	decfsz	??___fladd,f
  8466  176B  2F65               	goto	u3805
  8467  176C                     l2664:
  8468  176C  1FE9               	btfss	___fladd@grs,7
  8469  176D  2F6F               	goto	u3811
  8470  176E  2F70               	goto	u3810
  8471  176F                     u3811:
  8472  176F  2F71               	goto	l696
  8473  1770                     u3810:
  8474  1770                     l2666:
  8475  1770  1456               	bsf	___fladd@b,0
  8476  1771                     l696:
  8477  1771  1C69               	btfss	___fladd@grs,0
  8478  1772  2F74               	goto	u3821
  8479  1773  2F75               	goto	u3820
  8480  1774                     u3821:
  8481  1774  2F78               	goto	l2670
  8482  1775                     u3820:
  8483  1775                     l2668:
  8484  1775  1403               	setc
  8485  1776  0DE9               	rlf	___fladd@grs,f
  8486  1777  2F7A               	goto	l2672
  8487  1778                     l2670:
  8488  1778  1003               	clrc
  8489  1779  0DE9               	rlf	___fladd@grs,f
  8490  177A                     l2672:
  8491  177A  0868               	movf	___fladd@bexp,w
  8492  177B  1903               	btfsc	3,2
  8493  177C  2F7E               	goto	u3831
  8494  177D  2F7F               	goto	u3830
  8495  177E                     u3831:
  8496  177E  2F81               	goto	l2676
  8497  177F                     u3830:
  8498  177F                     l2674:
  8499  177F  3001               	movlw	1
  8500  1780  02E8               	subwf	___fladd@bexp,f
  8501  1781                     l2676:
  8502  1781  1FD8               	btfss	___fladd@b+2,7
  8503  1782  2F84               	goto	u3841
  8504  1783  2F85               	goto	u3840
  8505  1784                     u3841:
  8506  1784  2F63               	goto	l2662
  8507  1785                     u3840:
  8508  1785                     l2678:
  8509  1785  01E7               	clrf	___fladd@aexp
  8510  1786                     l2680:
  8511  1786  1FE9               	btfss	___fladd@grs,7
  8512  1787  2F89               	goto	u3851
  8513  1788  2F8A               	goto	u3850
  8514  1789                     u3851:
  8515  1789  2F98               	goto	l2688
  8516  178A                     u3850:
  8517  178A                     l2682:
  8518  178A  0869               	movf	___fladd@grs,w
  8519  178B  397F               	andlw	127
  8520  178C  1903               	btfsc	3,2
  8521  178D  2F8F               	goto	u3861
  8522  178E  2F90               	goto	u3860
  8523  178F                     u3861:
  8524  178F  2F93               	goto	l702
  8525  1790                     u3860:
  8526  1790                     l2684:
  8527  1790  01E7               	clrf	___fladd@aexp
  8528  1791  0AE7               	incf	___fladd@aexp,f
  8529  1792  2F98               	goto	l2688
  8530  1793                     l702:
  8531  1793  1C56               	btfss	___fladd@b,0
  8532  1794  2F96               	goto	u3871
  8533  1795  2F97               	goto	u3870
  8534  1796                     u3871:
  8535  1796  2F98               	goto	l2688
  8536  1797                     u3870:
  8537  1797  2F90               	goto	l2684
  8538  1798                     l2688:
  8539  1798  0867               	movf	___fladd@aexp,w
  8540  1799  1903               	btfsc	3,2
  8541  179A  2F9C               	goto	u3881
  8542  179B  2F9D               	goto	u3880
  8543  179C                     u3881:
  8544  179C  2FD1               	goto	l2698
  8545  179D                     u3880:
  8546  179D                     l2690:
  8547  179D  3001               	movlw	1
  8548  179E  07D6               	addwf	___fladd@b,f
  8549  179F  3000               	movlw	0
  8550  17A0  1803               	skipnc
  8551  17A1  3001               	movlw	1
  8552  17A2  07D7               	addwf	___fladd@b+1,f
  8553  17A3  3000               	movlw	0
  8554  17A4  1803               	skipnc
  8555  17A5  3001               	movlw	1
  8556  17A6  07D8               	addwf	___fladd@b+2,f
  8557  17A7  3000               	movlw	0
  8558  17A8  1803               	skipnc
  8559  17A9  3001               	movlw	1
  8560  17AA  07D9               	addwf	___fladd@b+3,f
  8561  17AB                     l2692:
  8562  17AB  1C59               	btfss	___fladd@b+3,0
  8563  17AC  2FAE               	goto	u3891
  8564  17AD  2FAF               	goto	u3890
  8565  17AE                     u3891:
  8566  17AE  2FD1               	goto	l2698
  8567  17AF                     u3890:
  8568  17AF                     l2694:
  8569  17AF  0856               	movf	___fladd@b,w
  8570  17B0  00DE               	movwf	??___fladd
  8571  17B1  0857               	movf	___fladd@b+1,w
  8572  17B2  00DF               	movwf	??___fladd+1
  8573  17B3  0858               	movf	___fladd@b+2,w
  8574  17B4  00E0               	movwf	??___fladd+2
  8575  17B5  0859               	movf	___fladd@b+3,w
  8576  17B6  00E1               	movwf	??___fladd+3
  8577  17B7  3001               	movlw	1
  8578  17B8  00E2               	movwf	??___fladd+4
  8579  17B9                     u3905:
  8580  17B9  0D61               	rlf	??___fladd+3,w
  8581  17BA  0CE1               	rrf	??___fladd+3,f
  8582  17BB  0CE0               	rrf	??___fladd+2,f
  8583  17BC  0CDF               	rrf	??___fladd+1,f
  8584  17BD  0CDE               	rrf	??___fladd,f
  8585  17BE                     u3900:
  8586  17BE  0BE2               	decfsz	??___fladd+4,f
  8587  17BF  2FB9               	goto	u3905
  8588  17C0  0861               	movf	??___fladd+3,w
  8589  17C1  00D9               	movwf	___fladd@b+3
  8590  17C2  0860               	movf	??___fladd+2,w
  8591  17C3  00D8               	movwf	___fladd@b+2
  8592  17C4  085F               	movf	??___fladd+1,w
  8593  17C5  00D7               	movwf	___fladd@b+1
  8594  17C6  085E               	movf	??___fladd,w
  8595  17C7  00D6               	movwf	___fladd@b
  8596  17C8  0A68               	incf	___fladd@bexp,w
  8597  17C9  1903               	btfsc	3,2
  8598  17CA  2FCC               	goto	u3911
  8599  17CB  2FCD               	goto	u3910
  8600  17CC                     u3911:
  8601  17CC  2FD1               	goto	l2698
  8602  17CD                     u3910:
  8603  17CD                     l2696:
  8604  17CD  3001               	movlw	1
  8605  17CE  00FF               	movwf	btemp+1
  8606  17CF  087F               	movf	btemp+1,w
  8607  17D0  07E8               	addwf	___fladd@bexp,f
  8608  17D1                     l2698:
  8609  17D1  0A68               	incf	___fladd@bexp,w
  8610  17D2  1903               	btfsc	3,2
  8611  17D3  2FD5               	goto	u3921
  8612  17D4  2FD6               	goto	u3920
  8613  17D5                     u3921:
  8614  17D5  2FDB               	goto	l2702
  8615  17D6                     u3920:
  8616  17D6                     l2700:
  8617  17D6  0868               	movf	___fladd@bexp,w
  8618  17D7  1D03               	btfss	3,2
  8619  17D8  2FDA               	goto	u3931
  8620  17D9  2FDB               	goto	u3930
  8621  17DA                     u3931:
  8622  17DA  2FE9               	goto	l2708
  8623  17DB                     u3930:
  8624  17DB                     l2702:
  8625  17DB  3000               	movlw	0
  8626  17DC  00D9               	movwf	___fladd@b+3
  8627  17DD  3000               	movlw	0
  8628  17DE  00D8               	movwf	___fladd@b+2
  8629  17DF  3000               	movlw	0
  8630  17E0  00D7               	movwf	___fladd@b+1
  8631  17E1  3000               	movlw	0
  8632  17E2  00D6               	movwf	___fladd@b
  8633  17E3                     l2704:
  8634  17E3  0868               	movf	___fladd@bexp,w
  8635  17E4  1D03               	btfss	3,2
  8636  17E5  2FE7               	goto	u3941
  8637  17E6  2FE8               	goto	u3940
  8638  17E7                     u3941:
  8639  17E7  2FE9               	goto	l2708
  8640  17E8                     u3940:
  8641  17E8                     l2706:
  8642  17E8  01E6               	clrf	___fladd@signs
  8643  17E9                     l2708:
  8644  17E9  1C68               	btfss	___fladd@bexp,0
  8645  17EA  2FEC               	goto	u3951
  8646  17EB  2FED               	goto	u3950
  8647  17EC                     u3951:
  8648  17EC  2FEF               	goto	l2712
  8649  17ED                     u3950:
  8650  17ED                     l2710:
  8651  17ED  17D8               	bsf	___fladd@b+2,7
  8652  17EE  2FF3               	goto	l713
  8653  17EF                     l2712:
  8654  17EF  307F               	movlw	127
  8655  17F0  00FF               	movwf	btemp+1
  8656  17F1  087F               	movf	btemp+1,w
  8657  17F2  05D8               	andwf	___fladd@b+2,f
  8658  17F3                     l713:
  8659  17F3  0868               	movf	___fladd@bexp,w
  8660  17F4  00DE               	movwf	??___fladd
  8661  17F5  1003               	clrc
  8662  17F6  0C5E               	rrf	??___fladd,w
  8663  17F7  00FF               	movwf	btemp+1
  8664  17F8  087F               	movf	btemp+1,w
  8665  17F9  00D9               	movwf	___fladd@b+3
  8666  17FA                     l2714:
  8667  17FA  1FE6               	btfss	___fladd@signs,7
  8668  17FB  2FFD               	goto	u3961
  8669  17FC  2FFE               	goto	u3960
  8670  17FD                     u3961:
  8671  17FD  2FFF               	goto	l714
  8672  17FE                     u3960:
  8673  17FE                     l2716:
  8674  17FE  17D9               	bsf	___fladd@b+3,7
  8675  17FF                     l714:
  8676  17FF                     l684:
  8677  17FF  0008               	return
  8678  1800                     __end_of___fladd:
  8679                           
  8680                           	psect	text20
  8681  1A49                     __ptext20:	
  8682 ;; *************** function ___flneg *****************
  8683 ;; Defined at:
  8684 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flneg.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  f1              4    2[COMMON] unsigned char 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  4    2[COMMON] unsigned char 
  8691 ;; Registers used:
  8692 ;;		wreg
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8698 ;;      Params:         4       0       0       0       0
  8699 ;;      Locals:         0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0
  8701 ;;      Totals:         4       0       0       0       0
  8702 ;;Total ram usage:        4 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    1
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_sprintf
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           
  8713                           ;psect for function ___flneg
  8714  1A49                     ___flneg:
  8715  1A49                     l3136:	
  8716                           ;incstack = 0
  8717                           ; Regs used in ___flneg: [wreg]
  8718                           
  8719  1A49  0875               	movf	___flneg@f1+3,w
  8720  1A4A  0474               	iorwf	___flneg@f1+2,w
  8721  1A4B  0473               	iorwf	___flneg@f1+1,w
  8722  1A4C  0472               	iorwf	___flneg@f1,w
  8723  1A4D  1903               	skipnz
  8724  1A4E  2A50               	goto	u5071
  8725  1A4F  2A51               	goto	u5070
  8726  1A50                     u5071:
  8727  1A50  2A53               	goto	l3140
  8728  1A51                     u5070:
  8729  1A51                     l3138:
  8730  1A51  3080               	movlw	128
  8731  1A52  06F5               	xorwf	___flneg@f1+3,f
  8732  1A53                     l3140:
  8733  1A53                     l543:
  8734  1A53  0008               	return
  8735  1A54                     __end_of___flneg:
  8736                           
  8737                           	psect	text21
  8738  1EAD                     __ptext21:	
  8739 ;; *************** function ___flge *****************
  8740 ;; Defined at:
  8741 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;  ff1             4    2[COMMON] unsigned char 
  8744 ;;  ff2             4    6[COMMON] unsigned char 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;		None               void
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8756 ;;      Params:         8       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0
  8758 ;;      Temps:          0       4       0       0       0
  8759 ;;      Totals:         8       4       0       0       0
  8760 ;;Total ram usage:       12 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    1
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_sprintf
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           
  8771                           ;psect for function ___flge
  8772  1EAD                     ___flge:
  8773  1EAD                     l3116:	
  8774                           ;incstack = 0
  8775                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8776                           
  8777  1EAD  3000               	movlw	0
  8778  1EAE  0572               	andwf	___flge@ff1,w
  8779  1EAF  1283               	bcf	3,5	;RP0=0, select bank0
  8780  1EB0  1303               	bcf	3,6	;RP1=0, select bank0
  8781  1EB1  00A0               	movwf	??___flge
  8782  1EB2  3000               	movlw	0
  8783  1EB3  0573               	andwf	___flge@ff1+1,w
  8784  1EB4  00A1               	movwf	??___flge+1
  8785  1EB5  3080               	movlw	128
  8786  1EB6  0574               	andwf	___flge@ff1+2,w
  8787  1EB7  00A2               	movwf	??___flge+2
  8788  1EB8  307F               	movlw	127
  8789  1EB9  0575               	andwf	___flge@ff1+3,w
  8790  1EBA  00A3               	movwf	??___flge+3
  8791  1EBB  0823               	movf	??___flge+3,w
  8792  1EBC  0422               	iorwf	??___flge+2,w
  8793  1EBD  0421               	iorwf	??___flge+1,w
  8794  1EBE  0420               	iorwf	??___flge,w
  8795  1EBF  1D03               	skipz
  8796  1EC0  2EC2               	goto	u5001
  8797  1EC1  2EC3               	goto	u5000
  8798  1EC2                     u5001:
  8799  1EC2  2ECB               	goto	l535
  8800  1EC3                     u5000:
  8801  1EC3                     l3118:
  8802  1EC3  3000               	movlw	0
  8803  1EC4  00F5               	movwf	___flge@ff1+3
  8804  1EC5  3000               	movlw	0
  8805  1EC6  00F4               	movwf	___flge@ff1+2
  8806  1EC7  3000               	movlw	0
  8807  1EC8  00F3               	movwf	___flge@ff1+1
  8808  1EC9  3000               	movlw	0
  8809  1ECA  00F2               	movwf	___flge@ff1
  8810  1ECB                     l535:
  8811  1ECB  3000               	movlw	0
  8812  1ECC  0576               	andwf	___flge@ff2,w
  8813  1ECD  00A0               	movwf	??___flge
  8814  1ECE  3000               	movlw	0
  8815  1ECF  0577               	andwf	___flge@ff2+1,w
  8816  1ED0  00A1               	movwf	??___flge+1
  8817  1ED1  3080               	movlw	128
  8818  1ED2  0578               	andwf	___flge@ff2+2,w
  8819  1ED3  00A2               	movwf	??___flge+2
  8820  1ED4  307F               	movlw	127
  8821  1ED5  0579               	andwf	___flge@ff2+3,w
  8822  1ED6  00A3               	movwf	??___flge+3
  8823  1ED7  0823               	movf	??___flge+3,w
  8824  1ED8  0422               	iorwf	??___flge+2,w
  8825  1ED9  0421               	iorwf	??___flge+1,w
  8826  1EDA  0420               	iorwf	??___flge,w
  8827  1EDB  1D03               	skipz
  8828  1EDC  2EDE               	goto	u5011
  8829  1EDD  2EDF               	goto	u5010
  8830  1EDE                     u5011:
  8831  1EDE  2EE7               	goto	l3122
  8832  1EDF                     u5010:
  8833  1EDF                     l3120:
  8834  1EDF  3000               	movlw	0
  8835  1EE0  00F9               	movwf	___flge@ff2+3
  8836  1EE1  3000               	movlw	0
  8837  1EE2  00F8               	movwf	___flge@ff2+2
  8838  1EE3  3000               	movlw	0
  8839  1EE4  00F7               	movwf	___flge@ff2+1
  8840  1EE5  3000               	movlw	0
  8841  1EE6  00F6               	movwf	___flge@ff2
  8842  1EE7                     l3122:
  8843  1EE7  1FF5               	btfss	___flge@ff1+3,7
  8844  1EE8  2EEA               	goto	u5021
  8845  1EE9  2EEB               	goto	u5020
  8846  1EEA                     u5021:
  8847  1EEA  2F0F               	goto	l3126
  8848  1EEB                     u5020:
  8849  1EEB                     l3124:
  8850  1EEB  3000               	movlw	0
  8851  1EEC  00A0               	movwf	??___flge
  8852  1EED  3000               	movlw	0
  8853  1EEE  00A1               	movwf	??___flge+1
  8854  1EEF  3000               	movlw	0
  8855  1EF0  00A2               	movwf	??___flge+2
  8856  1EF1  3080               	movlw	128
  8857  1EF2  00A3               	movwf	??___flge+3
  8858  1EF3  0872               	movf	___flge@ff1,w
  8859  1EF4  02A0               	subwf	??___flge,f
  8860  1EF5  0873               	movf	___flge@ff1+1,w
  8861  1EF6  1C03               	skipc
  8862  1EF7  0F73               	incfsz	___flge@ff1+1,w
  8863  1EF8  2EFA               	goto	u5031
  8864  1EF9  2EFB               	goto	u5032
  8865  1EFA                     u5031:
  8866  1EFA  02A1               	subwf	??___flge+1,f
  8867  1EFB                     u5032:
  8868  1EFB  0874               	movf	___flge@ff1+2,w
  8869  1EFC  1C03               	skipc
  8870  1EFD  0F74               	incfsz	___flge@ff1+2,w
  8871  1EFE  2F00               	goto	u5033
  8872  1EFF  2F01               	goto	u5034
  8873  1F00                     u5033:
  8874  1F00  02A2               	subwf	??___flge+2,f
  8875  1F01                     u5034:
  8876  1F01  0875               	movf	___flge@ff1+3,w
  8877  1F02  1C03               	skipc
  8878  1F03  0F75               	incfsz	___flge@ff1+3,w
  8879  1F04  2F06               	goto	u5035
  8880  1F05  2F07               	goto	u5036
  8881  1F06                     u5035:
  8882  1F06  02A3               	subwf	??___flge+3,f
  8883  1F07                     u5036:
  8884  1F07  0823               	movf	??___flge+3,w
  8885  1F08  00F5               	movwf	___flge@ff1+3
  8886  1F09  0822               	movf	??___flge+2,w
  8887  1F0A  00F4               	movwf	___flge@ff1+2
  8888  1F0B  0821               	movf	??___flge+1,w
  8889  1F0C  00F3               	movwf	___flge@ff1+1
  8890  1F0D  0820               	movf	??___flge,w
  8891  1F0E  00F2               	movwf	___flge@ff1
  8892  1F0F                     l3126:
  8893  1F0F  1FF9               	btfss	___flge@ff2+3,7
  8894  1F10  2F12               	goto	u5041
  8895  1F11  2F13               	goto	u5040
  8896  1F12                     u5041:
  8897  1F12  2F37               	goto	l538
  8898  1F13                     u5040:
  8899  1F13                     l3128:
  8900  1F13  3000               	movlw	0
  8901  1F14  00A0               	movwf	??___flge
  8902  1F15  3000               	movlw	0
  8903  1F16  00A1               	movwf	??___flge+1
  8904  1F17  3000               	movlw	0
  8905  1F18  00A2               	movwf	??___flge+2
  8906  1F19  3080               	movlw	128
  8907  1F1A  00A3               	movwf	??___flge+3
  8908  1F1B  0876               	movf	___flge@ff2,w
  8909  1F1C  02A0               	subwf	??___flge,f
  8910  1F1D  0877               	movf	___flge@ff2+1,w
  8911  1F1E  1C03               	skipc
  8912  1F1F  0F77               	incfsz	___flge@ff2+1,w
  8913  1F20  2F22               	goto	u5051
  8914  1F21  2F23               	goto	u5052
  8915  1F22                     u5051:
  8916  1F22  02A1               	subwf	??___flge+1,f
  8917  1F23                     u5052:
  8918  1F23  0878               	movf	___flge@ff2+2,w
  8919  1F24  1C03               	skipc
  8920  1F25  0F78               	incfsz	___flge@ff2+2,w
  8921  1F26  2F28               	goto	u5053
  8922  1F27  2F29               	goto	u5054
  8923  1F28                     u5053:
  8924  1F28  02A2               	subwf	??___flge+2,f
  8925  1F29                     u5054:
  8926  1F29  0879               	movf	___flge@ff2+3,w
  8927  1F2A  1C03               	skipc
  8928  1F2B  0F79               	incfsz	___flge@ff2+3,w
  8929  1F2C  2F2E               	goto	u5055
  8930  1F2D  2F2F               	goto	u5056
  8931  1F2E                     u5055:
  8932  1F2E  02A3               	subwf	??___flge+3,f
  8933  1F2F                     u5056:
  8934  1F2F  0823               	movf	??___flge+3,w
  8935  1F30  00F9               	movwf	___flge@ff2+3
  8936  1F31  0822               	movf	??___flge+2,w
  8937  1F32  00F8               	movwf	___flge@ff2+2
  8938  1F33  0821               	movf	??___flge+1,w
  8939  1F34  00F7               	movwf	___flge@ff2+1
  8940  1F35  0820               	movf	??___flge,w
  8941  1F36  00F6               	movwf	___flge@ff2
  8942  1F37                     l538:
  8943  1F37  3080               	movlw	128
  8944  1F38  06F5               	xorwf	___flge@ff1+3,f
  8945  1F39  3080               	movlw	128
  8946  1F3A  06F9               	xorwf	___flge@ff2+3,f
  8947  1F3B  0879               	movf	___flge@ff2+3,w
  8948  1F3C  0275               	subwf	___flge@ff1+3,w
  8949  1F3D  1D03               	skipz
  8950  1F3E  2F49               	goto	u5065
  8951  1F3F  0878               	movf	___flge@ff2+2,w
  8952  1F40  0274               	subwf	___flge@ff1+2,w
  8953  1F41  1D03               	skipz
  8954  1F42  2F49               	goto	u5065
  8955  1F43  0877               	movf	___flge@ff2+1,w
  8956  1F44  0273               	subwf	___flge@ff1+1,w
  8957  1F45  1D03               	skipz
  8958  1F46  2F49               	goto	u5065
  8959  1F47  0876               	movf	___flge@ff2,w
  8960  1F48  0272               	subwf	___flge@ff1,w
  8961  1F49                     u5065:
  8962  1F49  1803               	skipnc
  8963  1F4A  2F4C               	goto	u5061
  8964  1F4B  2F4D               	goto	u5060
  8965  1F4C                     u5061:
  8966  1F4C  2F4F               	goto	l3132
  8967  1F4D                     u5060:
  8968  1F4D                     l3130:
  8969  1F4D  1003               	clrc
  8970  1F4E  2F50               	goto	l539
  8971  1F4F                     l3132:
  8972  1F4F  1403               	setc
  8973  1F50                     l539:
  8974  1F50  0008               	return
  8975  1F51                     __end_of___flge:
  8976                           
  8977                           	psect	text22
  8978  1BC0                     __ptext22:	
  8979 ;; *************** function ___fleq *****************
  8980 ;; Defined at:
  8981 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fleq.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  ff1             4    2[COMMON] unsigned char 
  8984 ;;  ff2             4    6[COMMON] unsigned char 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;		None               void
  8989 ;; Registers used:
  8990 ;;		wreg, status,2, status,0
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8996 ;;      Params:         8       0       0       0       0
  8997 ;;      Locals:         0       0       0       0       0
  8998 ;;      Temps:          0       4       0       0       0
  8999 ;;      Totals:         8       4       0       0       0
  9000 ;;Total ram usage:       12 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    1
  9003 ;; This function calls:
  9004 ;;		Nothing
  9005 ;; This function is called by:
  9006 ;;		_sprintf
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function ___fleq
  9012  1BC0                     ___fleq:
  9013  1BC0                     l3104:	
  9014                           ;incstack = 0
  9015                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9016                           
  9017  1BC0  3000               	movlw	0
  9018  1BC1  0572               	andwf	___fleq@ff1,w
  9019  1BC2  1283               	bcf	3,5	;RP0=0, select bank0
  9020  1BC3  1303               	bcf	3,6	;RP1=0, select bank0
  9021  1BC4  00A0               	movwf	??___fleq
  9022  1BC5  3000               	movlw	0
  9023  1BC6  0573               	andwf	___fleq@ff1+1,w
  9024  1BC7  00A1               	movwf	??___fleq+1
  9025  1BC8  3080               	movlw	128
  9026  1BC9  0574               	andwf	___fleq@ff1+2,w
  9027  1BCA  00A2               	movwf	??___fleq+2
  9028  1BCB  307F               	movlw	127
  9029  1BCC  0575               	andwf	___fleq@ff1+3,w
  9030  1BCD  00A3               	movwf	??___fleq+3
  9031  1BCE  0823               	movf	??___fleq+3,w
  9032  1BCF  0422               	iorwf	??___fleq+2,w
  9033  1BD0  0421               	iorwf	??___fleq+1,w
  9034  1BD1  0420               	iorwf	??___fleq,w
  9035  1BD2  1D03               	skipz
  9036  1BD3  2BD5               	goto	u4971
  9037  1BD4  2BD6               	goto	u4970
  9038  1BD5                     u4971:
  9039  1BD5  2BDE               	goto	l530
  9040  1BD6                     u4970:
  9041  1BD6                     l3106:
  9042  1BD6  3000               	movlw	0
  9043  1BD7  00F5               	movwf	___fleq@ff1+3
  9044  1BD8  3000               	movlw	0
  9045  1BD9  00F4               	movwf	___fleq@ff1+2
  9046  1BDA  3000               	movlw	0
  9047  1BDB  00F3               	movwf	___fleq@ff1+1
  9048  1BDC  3000               	movlw	0
  9049  1BDD  00F2               	movwf	___fleq@ff1
  9050  1BDE                     l530:
  9051  1BDE  3000               	movlw	0
  9052  1BDF  0576               	andwf	___fleq@ff2,w
  9053  1BE0  00A0               	movwf	??___fleq
  9054  1BE1  3000               	movlw	0
  9055  1BE2  0577               	andwf	___fleq@ff2+1,w
  9056  1BE3  00A1               	movwf	??___fleq+1
  9057  1BE4  3080               	movlw	128
  9058  1BE5  0578               	andwf	___fleq@ff2+2,w
  9059  1BE6  00A2               	movwf	??___fleq+2
  9060  1BE7  307F               	movlw	127
  9061  1BE8  0579               	andwf	___fleq@ff2+3,w
  9062  1BE9  00A3               	movwf	??___fleq+3
  9063  1BEA  0823               	movf	??___fleq+3,w
  9064  1BEB  0422               	iorwf	??___fleq+2,w
  9065  1BEC  0421               	iorwf	??___fleq+1,w
  9066  1BED  0420               	iorwf	??___fleq,w
  9067  1BEE  1D03               	skipz
  9068  1BEF  2BF1               	goto	u4981
  9069  1BF0  2BF2               	goto	u4980
  9070  1BF1                     u4981:
  9071  1BF1  2BFA               	goto	l531
  9072  1BF2                     u4980:
  9073  1BF2                     l3108:
  9074  1BF2  3000               	movlw	0
  9075  1BF3  00F9               	movwf	___fleq@ff2+3
  9076  1BF4  3000               	movlw	0
  9077  1BF5  00F8               	movwf	___fleq@ff2+2
  9078  1BF6  3000               	movlw	0
  9079  1BF7  00F7               	movwf	___fleq@ff2+1
  9080  1BF8  3000               	movlw	0
  9081  1BF9  00F6               	movwf	___fleq@ff2
  9082  1BFA                     l531:
  9083  1BFA  0879               	movf	___fleq@ff2+3,w
  9084  1BFB  0675               	xorwf	___fleq@ff1+3,w
  9085  1BFC  1D03               	skipz
  9086  1BFD  2C08               	goto	u4995
  9087  1BFE  0878               	movf	___fleq@ff2+2,w
  9088  1BFF  0674               	xorwf	___fleq@ff1+2,w
  9089  1C00  1D03               	skipz
  9090  1C01  2C08               	goto	u4995
  9091  1C02  0877               	movf	___fleq@ff2+1,w
  9092  1C03  0673               	xorwf	___fleq@ff1+1,w
  9093  1C04  1D03               	skipz
  9094  1C05  2C08               	goto	u4995
  9095  1C06  0876               	movf	___fleq@ff2,w
  9096  1C07  0672               	xorwf	___fleq@ff1,w
  9097  1C08                     u4995:
  9098  1C08  1903               	skipnz
  9099  1C09  2C0B               	goto	u4991
  9100  1C0A  2C0C               	goto	u4990
  9101  1C0B                     u4991:
  9102  1C0B  2C0E               	goto	l3112
  9103  1C0C                     u4990:
  9104  1C0C                     l3110:
  9105  1C0C  1003               	clrc
  9106  1C0D  2C0F               	goto	l532
  9107  1C0E                     l3112:
  9108  1C0E  1403               	setc
  9109  1C0F                     l532:
  9110  1C0F  0008               	return
  9111  1C10                     __end_of___fleq:
  9112                           
  9113                           	psect	text23
  9114  1A42                     __ptext23:	
  9115 ;; *************** function _ser_irs_rb0 *****************
  9116 ;; Defined at:
  9117 ;;		line 40 in file "main encoder.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;		None
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  1    wreg      void 
  9124 ;; Registers used:
  9125 ;;		None
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9131 ;;      Params:         0       0       0       0       0
  9132 ;;      Locals:         0       0       0       0       0
  9133 ;;      Temps:          0       0       0       0       0
  9134 ;;      Totals:         0       0       0       0       0
  9135 ;;Total ram usage:        0 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    1
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_main
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           
  9146                           ;psect for function _ser_irs_rb0
  9147  1A42                     _ser_irs_rb0:
  9148  1A42                     l3258:	
  9149                           ;incstack = 0
  9150                           ; Regs used in _ser_irs_rb0: []
  9151                           
  9152                           
  9153                           ;main encoder.c: 42:     INTEDG = 1;
  9154  1A42  1683               	bsf	3,5	;RP0=1, select bank1
  9155  1A43  1303               	bcf	3,6	;RP1=0, select bank1
  9156  1A44  1701               	bsf	1,6	;volatile
  9157                           
  9158                           ;main encoder.c: 43:     GIE=1;
  9159  1A45  178B               	bsf	11,7	;volatile
  9160                           
  9161                           ;main encoder.c: 44:     INTE = 1;
  9162  1A46  160B               	bsf	11,4	;volatile
  9163                           
  9164                           ;main encoder.c: 45:     INTF = 0;
  9165  1A47  108B               	bcf	11,1	;volatile
  9166  1A48                     l65:
  9167  1A48  0008               	return
  9168  1A49                     __end_of_ser_irs_rb0:
  9169                           
  9170                           	psect	text24
  9171  061A                     __ptext24:	
  9172 ;; *************** function ___fldiv *****************
  9173 ;; Defined at:
  9174 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  a               4    6[BANK0 ] void 
  9177 ;;  b               4   10[BANK0 ] void 
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;  grs             4   26[BANK0 ] unsigned long 
  9180 ;;  rem             4   19[BANK0 ] unsigned long 
  9181 ;;  new_exp         2   24[BANK0 ] int 
  9182 ;;  aexp            1   31[BANK0 ] unsigned char 
  9183 ;;  bexp            1   30[BANK0 ] unsigned char 
  9184 ;;  sign            1   23[BANK0 ] unsigned char 
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  4    6[BANK0 ] unsigned char 
  9187 ;; Registers used:
  9188 ;;		wreg, status,2, status,0, btemp+1
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9194 ;;      Params:         0       8       0       0       0
  9195 ;;      Locals:         0      13       0       0       0
  9196 ;;      Temps:          0       5       0       0       0
  9197 ;;      Totals:         0      26       0       0       0
  9198 ;;Total ram usage:       26 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    1
  9201 ;; This function calls:
  9202 ;;		Nothing
  9203 ;; This function is called by:
  9204 ;;		_main
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           
  9209                           ;psect for function ___fldiv
  9210  061A                     ___fldiv:
  9211  061A                     l3524:	
  9212                           ;incstack = 0
  9213                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9214                           
  9215  061A  1283               	bcf	3,5	;RP0=0, select bank0
  9216  061B  1303               	bcf	3,6	;RP1=0, select bank0
  9217  061C  082D               	movf	___fldiv@b+3,w
  9218  061D  3980               	andlw	128
  9219  061E  00FF               	movwf	btemp+1
  9220  061F  087F               	movf	btemp+1,w
  9221  0620  00B7               	movwf	___fldiv@sign
  9222  0621                     l3526:
  9223  0621  082D               	movf	___fldiv@b+3,w
  9224  0622  00AE               	movwf	??___fldiv
  9225  0623  072E               	addwf	??___fldiv,w
  9226  0624  00FF               	movwf	btemp+1
  9227  0625  087F               	movf	btemp+1,w
  9228  0626  00BE               	movwf	___fldiv@bexp
  9229  0627                     l3528:
  9230  0627  1FAC               	btfss	___fldiv@b+2,7
  9231  0628  2E2A               	goto	u5761
  9232  0629  2E2B               	goto	u5760
  9233  062A                     u5761:
  9234  062A  2E2C               	goto	l3532
  9235  062B                     u5760:
  9236  062B                     l3530:
  9237  062B  143E               	bsf	___fldiv@bexp,0
  9238  062C                     l3532:
  9239  062C  083E               	movf	___fldiv@bexp,w
  9240  062D  1903               	btfsc	3,2
  9241  062E  2E30               	goto	u5771
  9242  062F  2E31               	goto	u5770
  9243  0630                     u5771:
  9244  0630  2E41               	goto	l3542
  9245  0631                     u5770:
  9246  0631                     l3534:
  9247  0631  0A3E               	incf	___fldiv@bexp,w
  9248  0632  1D03               	btfss	3,2
  9249  0633  2E35               	goto	u5781
  9250  0634  2E36               	goto	u5780
  9251  0635                     u5781:
  9252  0635  2E3E               	goto	l3538
  9253  0636                     u5780:
  9254  0636                     l3536:
  9255  0636  3000               	movlw	0
  9256  0637  00AD               	movwf	___fldiv@b+3
  9257  0638  3000               	movlw	0
  9258  0639  00AC               	movwf	___fldiv@b+2
  9259  063A  3000               	movlw	0
  9260  063B  00AB               	movwf	___fldiv@b+1
  9261  063C  3000               	movlw	0
  9262  063D  00AA               	movwf	___fldiv@b
  9263  063E                     l3538:
  9264  063E  17AC               	bsf	___fldiv@b+2,7
  9265  063F                     l3540:
  9266  063F  01AD               	clrf	___fldiv@b+3
  9267  0640  2E49               	goto	l3544
  9268  0641                     l3542:
  9269  0641  3000               	movlw	0
  9270  0642  00AD               	movwf	___fldiv@b+3
  9271  0643  3000               	movlw	0
  9272  0644  00AC               	movwf	___fldiv@b+2
  9273  0645  3000               	movlw	0
  9274  0646  00AB               	movwf	___fldiv@b+1
  9275  0647  3000               	movlw	0
  9276  0648  00AA               	movwf	___fldiv@b
  9277  0649                     l3544:
  9278  0649  0829               	movf	___fldiv@a+3,w
  9279  064A  3980               	andlw	128
  9280  064B  00FF               	movwf	btemp+1
  9281  064C  087F               	movf	btemp+1,w
  9282  064D  06B7               	xorwf	___fldiv@sign,f
  9283  064E                     l3546:
  9284  064E  0829               	movf	___fldiv@a+3,w
  9285  064F  00AE               	movwf	??___fldiv
  9286  0650  072E               	addwf	??___fldiv,w
  9287  0651  00FF               	movwf	btemp+1
  9288  0652  087F               	movf	btemp+1,w
  9289  0653  00BF               	movwf	___fldiv@aexp
  9290  0654                     l3548:
  9291  0654  1FA8               	btfss	___fldiv@a+2,7
  9292  0655  2E57               	goto	u5791
  9293  0656  2E58               	goto	u5790
  9294  0657                     u5791:
  9295  0657  2E59               	goto	l3552
  9296  0658                     u5790:
  9297  0658                     l3550:
  9298  0658  143F               	bsf	___fldiv@aexp,0
  9299  0659                     l3552:
  9300  0659  083F               	movf	___fldiv@aexp,w
  9301  065A  1903               	btfsc	3,2
  9302  065B  2E5D               	goto	u5801
  9303  065C  2E5E               	goto	u5800
  9304  065D                     u5801:
  9305  065D  2E6E               	goto	l3562
  9306  065E                     u5800:
  9307  065E                     l3554:
  9308  065E  0A3F               	incf	___fldiv@aexp,w
  9309  065F  1D03               	btfss	3,2
  9310  0660  2E62               	goto	u5811
  9311  0661  2E63               	goto	u5810
  9312  0662                     u5811:
  9313  0662  2E6B               	goto	l3558
  9314  0663                     u5810:
  9315  0663                     l3556:
  9316  0663  3000               	movlw	0
  9317  0664  00A9               	movwf	___fldiv@a+3
  9318  0665  3000               	movlw	0
  9319  0666  00A8               	movwf	___fldiv@a+2
  9320  0667  3000               	movlw	0
  9321  0668  00A7               	movwf	___fldiv@a+1
  9322  0669  3000               	movlw	0
  9323  066A  00A6               	movwf	___fldiv@a
  9324  066B                     l3558:
  9325  066B  17A8               	bsf	___fldiv@a+2,7
  9326  066C                     l3560:
  9327  066C  01A9               	clrf	___fldiv@a+3
  9328  066D  2E76               	goto	l727
  9329  066E                     l3562:
  9330  066E  3000               	movlw	0
  9331  066F  00A9               	movwf	___fldiv@a+3
  9332  0670  3000               	movlw	0
  9333  0671  00A8               	movwf	___fldiv@a+2
  9334  0672  3000               	movlw	0
  9335  0673  00A7               	movwf	___fldiv@a+1
  9336  0674  3000               	movlw	0
  9337  0675  00A6               	movwf	___fldiv@a
  9338  0676                     l727:
  9339  0676  0829               	movf	___fldiv@a+3,w
  9340  0677  0428               	iorwf	___fldiv@a+2,w
  9341  0678  0427               	iorwf	___fldiv@a+1,w
  9342  0679  0426               	iorwf	___fldiv@a,w
  9343  067A  1D03               	skipz
  9344  067B  2E7D               	goto	u5821
  9345  067C  2E7E               	goto	u5820
  9346  067D                     u5821:
  9347  067D  2E97               	goto	l3572
  9348  067E                     u5820:
  9349  067E                     l3564:
  9350  067E  3000               	movlw	0
  9351  067F  00AD               	movwf	___fldiv@b+3
  9352  0680  3000               	movlw	0
  9353  0681  00AC               	movwf	___fldiv@b+2
  9354  0682  3000               	movlw	0
  9355  0683  00AB               	movwf	___fldiv@b+1
  9356  0684  3000               	movlw	0
  9357  0685  00AA               	movwf	___fldiv@b
  9358  0686  3080               	movlw	128
  9359  0687  04AC               	iorwf	___fldiv@b+2,f
  9360  0688  307F               	movlw	127
  9361  0689  04AD               	iorwf	___fldiv@b+3,f
  9362  068A                     l3566:
  9363  068A  0837               	movf	___fldiv@sign,w
  9364  068B  00FF               	movwf	btemp+1
  9365  068C  087F               	movf	btemp+1,w
  9366  068D  04AD               	iorwf	___fldiv@b+3,f
  9367  068E                     l3568:
  9368  068E  082D               	movf	___fldiv@b+3,w
  9369  068F  00A9               	movwf	?___fldiv+3
  9370  0690  082C               	movf	___fldiv@b+2,w
  9371  0691  00A8               	movwf	?___fldiv+2
  9372  0692  082B               	movf	___fldiv@b+1,w
  9373  0693  00A7               	movwf	?___fldiv+1
  9374  0694  082A               	movf	___fldiv@b,w
  9375  0695  00A6               	movwf	?___fldiv
  9376  0696  2FF6               	goto	l729
  9377  0697                     l3572:
  9378  0697  083E               	movf	___fldiv@bexp,w
  9379  0698  1D03               	btfss	3,2
  9380  0699  2E9B               	goto	u5831
  9381  069A  2E9C               	goto	u5830
  9382  069B                     u5831:
  9383  069B  2EA5               	goto	l3578
  9384  069C                     u5830:
  9385  069C                     l3574:
  9386  069C  3000               	movlw	0
  9387  069D  00A9               	movwf	?___fldiv+3
  9388  069E  3000               	movlw	0
  9389  069F  00A8               	movwf	?___fldiv+2
  9390  06A0  3000               	movlw	0
  9391  06A1  00A7               	movwf	?___fldiv+1
  9392  06A2  3000               	movlw	0
  9393  06A3  00A6               	movwf	?___fldiv
  9394  06A4  2FF6               	goto	l729
  9395  06A5                     l3578:
  9396  06A5  083E               	movf	___fldiv@bexp,w
  9397  06A6  00AE               	movwf	??___fldiv
  9398  06A7  01AF               	clrf	??___fldiv+1
  9399  06A8  082F               	movf	??___fldiv+1,w
  9400  06A9  00B1               	movwf	??___fldiv+3
  9401  06AA  083F               	movf	___fldiv@aexp,w
  9402  06AB  022E               	subwf	??___fldiv,w
  9403  06AC  00B0               	movwf	??___fldiv+2
  9404  06AD  1C03               	skipc
  9405  06AE  03B1               	decf	??___fldiv+3,f
  9406  06AF  0830               	movf	??___fldiv+2,w
  9407  06B0  3E7F               	addlw	127
  9408  06B1  00B8               	movwf	___fldiv@new_exp
  9409  06B2  0831               	movf	??___fldiv+3,w
  9410  06B3  1803               	skipnc
  9411  06B4  3E01               	addlw	1
  9412  06B5  3E00               	addlw	0
  9413  06B6  00B9               	movwf	___fldiv@new_exp+1
  9414  06B7                     l3580:
  9415  06B7  082D               	movf	___fldiv@b+3,w
  9416  06B8  00B6               	movwf	___fldiv@rem+3
  9417  06B9  082C               	movf	___fldiv@b+2,w
  9418  06BA  00B5               	movwf	___fldiv@rem+2
  9419  06BB  082B               	movf	___fldiv@b+1,w
  9420  06BC  00B4               	movwf	___fldiv@rem+1
  9421  06BD  082A               	movf	___fldiv@b,w
  9422  06BE  00B3               	movwf	___fldiv@rem
  9423  06BF                     l3582:
  9424  06BF  3000               	movlw	0
  9425  06C0  00AD               	movwf	___fldiv@b+3
  9426  06C1  3000               	movlw	0
  9427  06C2  00AC               	movwf	___fldiv@b+2
  9428  06C3  3000               	movlw	0
  9429  06C4  00AB               	movwf	___fldiv@b+1
  9430  06C5  3000               	movlw	0
  9431  06C6  00AA               	movwf	___fldiv@b
  9432  06C7                     l3584:
  9433  06C7  3000               	movlw	0
  9434  06C8  00BD               	movwf	___fldiv@grs+3
  9435  06C9  3000               	movlw	0
  9436  06CA  00BC               	movwf	___fldiv@grs+2
  9437  06CB  3000               	movlw	0
  9438  06CC  00BB               	movwf	___fldiv@grs+1
  9439  06CD  3000               	movlw	0
  9440  06CE  00BA               	movwf	___fldiv@grs
  9441  06CF                     l3586:
  9442  06CF  01BF               	clrf	___fldiv@aexp
  9443  06D0  2F1B               	goto	l3606
  9444  06D1                     l3588:
  9445  06D1  083F               	movf	___fldiv@aexp,w
  9446  06D2  1903               	btfsc	3,2
  9447  06D3  2ED5               	goto	u5841
  9448  06D4  2ED6               	goto	u5840
  9449  06D5                     u5841:
  9450  06D5  2EF6               	goto	l3598
  9451  06D6                     u5840:
  9452  06D6                     l3590:
  9453  06D6  3001               	movlw	1
  9454  06D7  00AE               	movwf	??___fldiv
  9455  06D8                     u5855:
  9456  06D8  1003               	clrc
  9457  06D9  0DB3               	rlf	___fldiv@rem,f
  9458  06DA  0DB4               	rlf	___fldiv@rem+1,f
  9459  06DB  0DB5               	rlf	___fldiv@rem+2,f
  9460  06DC  0DB6               	rlf	___fldiv@rem+3,f
  9461  06DD  0BAE               	decfsz	??___fldiv,f
  9462  06DE  2ED8               	goto	u5855
  9463  06DF  3001               	movlw	1
  9464  06E0  00AE               	movwf	??___fldiv
  9465  06E1                     u5865:
  9466  06E1  1003               	clrc
  9467  06E2  0DAA               	rlf	___fldiv@b,f
  9468  06E3  0DAB               	rlf	___fldiv@b+1,f
  9469  06E4  0DAC               	rlf	___fldiv@b+2,f
  9470  06E5  0DAD               	rlf	___fldiv@b+3,f
  9471  06E6  0BAE               	decfsz	??___fldiv,f
  9472  06E7  2EE1               	goto	u5865
  9473  06E8                     l3592:
  9474  06E8  1FBD               	btfss	___fldiv@grs+3,7
  9475  06E9  2EEB               	goto	u5871
  9476  06EA  2EEC               	goto	u5870
  9477  06EB                     u5871:
  9478  06EB  2EED               	goto	l3596
  9479  06EC                     u5870:
  9480  06EC                     l3594:
  9481  06EC  142A               	bsf	___fldiv@b,0
  9482  06ED                     l3596:
  9483  06ED  3001               	movlw	1
  9484  06EE  00AE               	movwf	??___fldiv
  9485  06EF                     u5885:
  9486  06EF  1003               	clrc
  9487  06F0  0DBA               	rlf	___fldiv@grs,f
  9488  06F1  0DBB               	rlf	___fldiv@grs+1,f
  9489  06F2  0DBC               	rlf	___fldiv@grs+2,f
  9490  06F3  0DBD               	rlf	___fldiv@grs+3,f
  9491  06F4  0BAE               	decfsz	??___fldiv,f
  9492  06F5  2EEF               	goto	u5885
  9493  06F6                     l3598:
  9494  06F6  0829               	movf	___fldiv@a+3,w
  9495  06F7  0236               	subwf	___fldiv@rem+3,w
  9496  06F8  1D03               	skipz
  9497  06F9  2F04               	goto	u5895
  9498  06FA  0828               	movf	___fldiv@a+2,w
  9499  06FB  0235               	subwf	___fldiv@rem+2,w
  9500  06FC  1D03               	skipz
  9501  06FD  2F04               	goto	u5895
  9502  06FE  0827               	movf	___fldiv@a+1,w
  9503  06FF  0234               	subwf	___fldiv@rem+1,w
  9504  0700  1D03               	skipz
  9505  0701  2F04               	goto	u5895
  9506  0702  0826               	movf	___fldiv@a,w
  9507  0703  0233               	subwf	___fldiv@rem,w
  9508  0704                     u5895:
  9509  0704  1C03               	skipc
  9510  0705  2F07               	goto	u5891
  9511  0706  2F08               	goto	u5890
  9512  0707                     u5891:
  9513  0707  2F17               	goto	l3604
  9514  0708                     u5890:
  9515  0708                     l3600:
  9516  0708  173D               	bsf	___fldiv@grs+3,6
  9517  0709                     l3602:
  9518  0709  0826               	movf	___fldiv@a,w
  9519  070A  02B3               	subwf	___fldiv@rem,f
  9520  070B  0827               	movf	___fldiv@a+1,w
  9521  070C  1C03               	skipc
  9522  070D  0F27               	incfsz	___fldiv@a+1,w
  9523  070E  02B4               	subwf	___fldiv@rem+1,f
  9524  070F  0828               	movf	___fldiv@a+2,w
  9525  0710  1C03               	skipc
  9526  0711  0F28               	incfsz	___fldiv@a+2,w
  9527  0712  02B5               	subwf	___fldiv@rem+2,f
  9528  0713  0829               	movf	___fldiv@a+3,w
  9529  0714  1C03               	skipc
  9530  0715  0F29               	incfsz	___fldiv@a+3,w
  9531  0716  02B6               	subwf	___fldiv@rem+3,f
  9532  0717                     l3604:
  9533  0717  3001               	movlw	1
  9534  0718  00FF               	movwf	btemp+1
  9535  0719  087F               	movf	btemp+1,w
  9536  071A  07BF               	addwf	___fldiv@aexp,f
  9537  071B                     l3606:
  9538  071B  301A               	movlw	26
  9539  071C  023F               	subwf	___fldiv@aexp,w
  9540  071D  1C03               	skipc
  9541  071E  2F20               	goto	u5901
  9542  071F  2F21               	goto	u5900
  9543  0720                     u5901:
  9544  0720  2ED1               	goto	l3588
  9545  0721                     u5900:
  9546  0721                     l3608:
  9547  0721  0836               	movf	___fldiv@rem+3,w
  9548  0722  0435               	iorwf	___fldiv@rem+2,w
  9549  0723  0434               	iorwf	___fldiv@rem+1,w
  9550  0724  0433               	iorwf	___fldiv@rem,w
  9551  0725  1903               	skipnz
  9552  0726  2F28               	goto	u5911
  9553  0727  2F29               	goto	u5910
  9554  0728                     u5911:
  9555  0728  2F48               	goto	l3622
  9556  0729                     u5910:
  9557  0729                     l3610:
  9558  0729  143A               	bsf	___fldiv@grs,0
  9559  072A  2F48               	goto	l3622
  9560  072B                     l3612:
  9561  072B  3001               	movlw	1
  9562  072C  00AE               	movwf	??___fldiv
  9563  072D                     u5925:
  9564  072D  1003               	clrc
  9565  072E  0DAA               	rlf	___fldiv@b,f
  9566  072F  0DAB               	rlf	___fldiv@b+1,f
  9567  0730  0DAC               	rlf	___fldiv@b+2,f
  9568  0731  0DAD               	rlf	___fldiv@b+3,f
  9569  0732  0BAE               	decfsz	??___fldiv,f
  9570  0733  2F2D               	goto	u5925
  9571  0734                     l3614:
  9572  0734  1FBD               	btfss	___fldiv@grs+3,7
  9573  0735  2F37               	goto	u5931
  9574  0736  2F38               	goto	u5930
  9575  0737                     u5931:
  9576  0737  2F39               	goto	l3618
  9577  0738                     u5930:
  9578  0738                     l3616:
  9579  0738  142A               	bsf	___fldiv@b,0
  9580  0739                     l3618:
  9581  0739  3001               	movlw	1
  9582  073A  00AE               	movwf	??___fldiv
  9583  073B                     u5945:
  9584  073B  1003               	clrc
  9585  073C  0DBA               	rlf	___fldiv@grs,f
  9586  073D  0DBB               	rlf	___fldiv@grs+1,f
  9587  073E  0DBC               	rlf	___fldiv@grs+2,f
  9588  073F  0DBD               	rlf	___fldiv@grs+3,f
  9589  0740  0BAE               	decfsz	??___fldiv,f
  9590  0741  2F3B               	goto	u5945
  9591  0742                     l3620:
  9592  0742  30FF               	movlw	255
  9593  0743  07B8               	addwf	___fldiv@new_exp,f
  9594  0744  1803               	skipnc
  9595  0745  0AB9               	incf	___fldiv@new_exp+1,f
  9596  0746  30FF               	movlw	255
  9597  0747  07B9               	addwf	___fldiv@new_exp+1,f
  9598  0748                     l3622:
  9599  0748  1FAC               	btfss	___fldiv@b+2,7
  9600  0749  2F4B               	goto	u5951
  9601  074A  2F4C               	goto	u5950
  9602  074B                     u5951:
  9603  074B  2F2B               	goto	l3612
  9604  074C                     u5950:
  9605  074C                     l3624:
  9606  074C  01BF               	clrf	___fldiv@aexp
  9607  074D                     l3626:
  9608  074D  1FBD               	btfss	___fldiv@grs+3,7
  9609  074E  2F50               	goto	u5961
  9610  074F  2F51               	goto	u5960
  9611  0750                     u5961:
  9612  0750  2F6D               	goto	l3634
  9613  0751                     u5960:
  9614  0751                     l3628:
  9615  0751  30FF               	movlw	255
  9616  0752  053A               	andwf	___fldiv@grs,w
  9617  0753  00AE               	movwf	??___fldiv
  9618  0754  30FF               	movlw	255
  9619  0755  053B               	andwf	___fldiv@grs+1,w
  9620  0756  00AF               	movwf	??___fldiv+1
  9621  0757  30FF               	movlw	255
  9622  0758  053C               	andwf	___fldiv@grs+2,w
  9623  0759  00B0               	movwf	??___fldiv+2
  9624  075A  307F               	movlw	127
  9625  075B  053D               	andwf	___fldiv@grs+3,w
  9626  075C  00B1               	movwf	??___fldiv+3
  9627  075D  0831               	movf	??___fldiv+3,w
  9628  075E  0430               	iorwf	??___fldiv+2,w
  9629  075F  042F               	iorwf	??___fldiv+1,w
  9630  0760  042E               	iorwf	??___fldiv,w
  9631  0761  1903               	skipnz
  9632  0762  2F64               	goto	u5971
  9633  0763  2F65               	goto	u5970
  9634  0764                     u5971:
  9635  0764  2F68               	goto	l743
  9636  0765                     u5970:
  9637  0765                     l3630:
  9638  0765  01BF               	clrf	___fldiv@aexp
  9639  0766  0ABF               	incf	___fldiv@aexp,f
  9640  0767  2F6D               	goto	l3634
  9641  0768                     l743:
  9642  0768  1C2A               	btfss	___fldiv@b,0
  9643  0769  2F6B               	goto	u5981
  9644  076A  2F6C               	goto	u5980
  9645  076B                     u5981:
  9646  076B  2F6D               	goto	l3634
  9647  076C                     u5980:
  9648  076C  2F65               	goto	l3630
  9649  076D                     l3634:
  9650  076D  083F               	movf	___fldiv@aexp,w
  9651  076E  1903               	btfsc	3,2
  9652  076F  2F71               	goto	u5991
  9653  0770  2F72               	goto	u5990
  9654  0771                     u5991:
  9655  0771  2FA3               	goto	l3644
  9656  0772                     u5990:
  9657  0772                     l3636:
  9658  0772  3001               	movlw	1
  9659  0773  07AA               	addwf	___fldiv@b,f
  9660  0774  3000               	movlw	0
  9661  0775  1803               	skipnc
  9662  0776  3001               	movlw	1
  9663  0777  07AB               	addwf	___fldiv@b+1,f
  9664  0778  3000               	movlw	0
  9665  0779  1803               	skipnc
  9666  077A  3001               	movlw	1
  9667  077B  07AC               	addwf	___fldiv@b+2,f
  9668  077C  3000               	movlw	0
  9669  077D  1803               	skipnc
  9670  077E  3001               	movlw	1
  9671  077F  07AD               	addwf	___fldiv@b+3,f
  9672  0780                     l3638:
  9673  0780  1C2D               	btfss	___fldiv@b+3,0
  9674  0781  2F83               	goto	u6001
  9675  0782  2F84               	goto	u6000
  9676  0783                     u6001:
  9677  0783  2FA3               	goto	l3644
  9678  0784                     u6000:
  9679  0784                     l3640:
  9680  0784  082A               	movf	___fldiv@b,w
  9681  0785  00AE               	movwf	??___fldiv
  9682  0786  082B               	movf	___fldiv@b+1,w
  9683  0787  00AF               	movwf	??___fldiv+1
  9684  0788  082C               	movf	___fldiv@b+2,w
  9685  0789  00B0               	movwf	??___fldiv+2
  9686  078A  082D               	movf	___fldiv@b+3,w
  9687  078B  00B1               	movwf	??___fldiv+3
  9688  078C  3001               	movlw	1
  9689  078D  00B2               	movwf	??___fldiv+4
  9690  078E                     u6015:
  9691  078E  0D31               	rlf	??___fldiv+3,w
  9692  078F  0CB1               	rrf	??___fldiv+3,f
  9693  0790  0CB0               	rrf	??___fldiv+2,f
  9694  0791  0CAF               	rrf	??___fldiv+1,f
  9695  0792  0CAE               	rrf	??___fldiv,f
  9696  0793                     u6010:
  9697  0793  0BB2               	decfsz	??___fldiv+4,f
  9698  0794  2F8E               	goto	u6015
  9699  0795  0831               	movf	??___fldiv+3,w
  9700  0796  00AD               	movwf	___fldiv@b+3
  9701  0797  0830               	movf	??___fldiv+2,w
  9702  0798  00AC               	movwf	___fldiv@b+2
  9703  0799  082F               	movf	??___fldiv+1,w
  9704  079A  00AB               	movwf	___fldiv@b+1
  9705  079B  082E               	movf	??___fldiv,w
  9706  079C  00AA               	movwf	___fldiv@b
  9707  079D                     l3642:
  9708  079D  3001               	movlw	1
  9709  079E  07B8               	addwf	___fldiv@new_exp,f
  9710  079F  1803               	skipnc
  9711  07A0  0AB9               	incf	___fldiv@new_exp+1,f
  9712  07A1  3000               	movlw	0
  9713  07A2  07B9               	addwf	___fldiv@new_exp+1,f
  9714  07A3                     l3644:
  9715  07A3  0839               	movf	___fldiv@new_exp+1,w
  9716  07A4  3A80               	xorlw	128
  9717  07A5  00FF               	movwf	btemp+1
  9718  07A6  3080               	movlw	128
  9719  07A7  027F               	subwf	btemp+1,w
  9720  07A8  1D03               	skipz
  9721  07A9  2FAC               	goto	u6025
  9722  07AA  30FF               	movlw	255
  9723  07AB  0238               	subwf	___fldiv@new_exp,w
  9724  07AC                     u6025:
  9725  07AC  1C03               	skipc
  9726  07AD  2FAF               	goto	u6021
  9727  07AE  2FB0               	goto	u6020
  9728  07AF                     u6021:
  9729  07AF  2FBE               	goto	l3648
  9730  07B0                     u6020:
  9731  07B0                     l3646:
  9732  07B0  30FF               	movlw	255
  9733  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  9734  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  9735  07B3  00B8               	movwf	___fldiv@new_exp
  9736  07B4  3000               	movlw	0
  9737  07B5  00B9               	movwf	___fldiv@new_exp+1
  9738  07B6  3000               	movlw	0
  9739  07B7  00AD               	movwf	___fldiv@b+3
  9740  07B8  3000               	movlw	0
  9741  07B9  00AC               	movwf	___fldiv@b+2
  9742  07BA  3000               	movlw	0
  9743  07BB  00AB               	movwf	___fldiv@b+1
  9744  07BC  3000               	movlw	0
  9745  07BD  00AA               	movwf	___fldiv@b
  9746  07BE                     l3648:
  9747  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  9748  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  9749  07C0  0839               	movf	___fldiv@new_exp+1,w
  9750  07C1  3A80               	xorlw	128
  9751  07C2  00FF               	movwf	btemp+1
  9752  07C3  3080               	movlw	128
  9753  07C4  027F               	subwf	btemp+1,w
  9754  07C5  1D03               	skipz
  9755  07C6  2FC9               	goto	u6035
  9756  07C7  3001               	movlw	1
  9757  07C8  0238               	subwf	___fldiv@new_exp,w
  9758  07C9                     u6035:
  9759  07C9  1803               	skipnc
  9760  07CA  2FCC               	goto	u6031
  9761  07CB  2FCD               	goto	u6030
  9762  07CC                     u6031:
  9763  07CC  2FDA               	goto	l3656
  9764  07CD                     u6030:
  9765  07CD                     l3650:
  9766  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  9767  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  9768  07CF  01B8               	clrf	___fldiv@new_exp
  9769  07D0  01B9               	clrf	___fldiv@new_exp+1
  9770  07D1                     l3652:
  9771  07D1  3000               	movlw	0
  9772  07D2  00AD               	movwf	___fldiv@b+3
  9773  07D3  3000               	movlw	0
  9774  07D4  00AC               	movwf	___fldiv@b+2
  9775  07D5  3000               	movlw	0
  9776  07D6  00AB               	movwf	___fldiv@b+1
  9777  07D7  3000               	movlw	0
  9778  07D8  00AA               	movwf	___fldiv@b
  9779  07D9                     l3654:
  9780  07D9  01B7               	clrf	___fldiv@sign
  9781  07DA                     l3656:
  9782  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  9783  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  9784  07DC  0838               	movf	___fldiv@new_exp,w
  9785  07DD  00FF               	movwf	btemp+1
  9786  07DE  087F               	movf	btemp+1,w
  9787  07DF  00BE               	movwf	___fldiv@bexp
  9788  07E0                     l3658:
  9789  07E0  1C3E               	btfss	___fldiv@bexp,0
  9790  07E1  2FE3               	goto	u6041
  9791  07E2  2FE4               	goto	u6040
  9792  07E3                     u6041:
  9793  07E3  2FE6               	goto	l3662
  9794  07E4                     u6040:
  9795  07E4                     l3660:
  9796  07E4  17AC               	bsf	___fldiv@b+2,7
  9797  07E5  2FEA               	goto	l751
  9798  07E6                     l3662:
  9799  07E6  307F               	movlw	127
  9800  07E7  00FF               	movwf	btemp+1
  9801  07E8  087F               	movf	btemp+1,w
  9802  07E9  05AC               	andwf	___fldiv@b+2,f
  9803  07EA                     l751:
  9804  07EA  083E               	movf	___fldiv@bexp,w
  9805  07EB  00AE               	movwf	??___fldiv
  9806  07EC  1003               	clrc
  9807  07ED  0C2E               	rrf	??___fldiv,w
  9808  07EE  00FF               	movwf	btemp+1
  9809  07EF  087F               	movf	btemp+1,w
  9810  07F0  00AD               	movwf	___fldiv@b+3
  9811  07F1  0837               	movf	___fldiv@sign,w
  9812  07F2  00FF               	movwf	btemp+1
  9813  07F3  087F               	movf	btemp+1,w
  9814  07F4  04AD               	iorwf	___fldiv@b+3,f
  9815  07F5  2E8E               	goto	l3568
  9816  07F6                     l729:
  9817  07F6  0008               	return
  9818  07F7                     __end_of___fldiv:
  9819                           
  9820                           	psect	text25
  9821  1B34                     __ptext25:	
  9822 ;; *************** function _LCD_Write_String *****************
  9823 ;; Defined at:
  9824 ;;		line 141 in file "lcd.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;  str             2    8[COMMON] PTR unsigned char 
  9827 ;;		 -> STR_4(7), STR_3(6), str(30), STR_1(11), 
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;  i               2    3[BANK0 ] int 
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  1    wreg      void 
  9832 ;; Registers used:
  9833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9839 ;;      Params:         2       0       0       0       0
  9840 ;;      Locals:         0       2       0       0       0
  9841 ;;      Temps:          0       3       0       0       0
  9842 ;;      Totals:         2       5       0       0       0
  9843 ;;Total ram usage:        7 bytes
  9844 ;; Hardware stack levels used:    1
  9845 ;; Hardware stack levels required when called:    3
  9846 ;; This function calls:
  9847 ;;		_LCD_Write_Char
  9848 ;; This function is called by:
  9849 ;;		_main
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           
  9854                           ;psect for function _LCD_Write_String
  9855  1B34                     _LCD_Write_String:
  9856  1B34                     l4036:	
  9857                           ;incstack = 0
  9858                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9859                           
  9860                           
  9861                           ;lcd.c: 141: void LCD_Write_String(char *str);lcd.c: 142: {;lcd.c: 143:   int i;;lcd.c: 
      +                          144:   for(i=0;str[i]!='\0';i++)
  9862  1B34  1283               	bcf	3,5	;RP0=0, select bank0
  9863  1B35  1303               	bcf	3,6	;RP1=0, select bank0
  9864  1B36  01A3               	clrf	LCD_Write_String@i
  9865  1B37  01A4               	clrf	LCD_Write_String@i+1
  9866  1B38  2B5D               	goto	l4042
  9867  1B39                     l4038:
  9868                           
  9869                           ;lcd.c: 145:     LCD_Write_Char(str[i]);
  9870  1B39  0823               	movf	LCD_Write_String@i,w
  9871  1B3A  0778               	addwf	LCD_Write_String@str,w
  9872  1B3B  00A1               	movwf	??_LCD_Write_String+1
  9873  1B3C  0879               	movf	LCD_Write_String@str+1,w
  9874  1B3D  00A0               	movwf	??_LCD_Write_String
  9875  1B3E  1803               	skipnc
  9876  1B3F  0AA0               	incf	??_LCD_Write_String,f
  9877  1B40  1FA3               	btfss	LCD_Write_String@i,7
  9878  1B41  2B43               	goto	u6690
  9879  1B42  03A0               	decf	??_LCD_Write_String,f
  9880  1B43                     u6690:
  9881  1B43  1283               	bcf	3,5	;RP0=0, select bank0
  9882  1B44  1303               	bcf	3,6	;RP1=0, select bank0
  9883  1B45  0820               	movf	??_LCD_Write_String,w
  9884  1B46  00A2               	movwf	??_LCD_Write_String+2
  9885  1B47  0822               	movf	??_LCD_Write_String+2,w
  9886  1B48  00FF               	movwf	btemp+1
  9887  1B49  0821               	movf	??_LCD_Write_String+1,w
  9888  1B4A  0084               	movwf	4
  9889  1B4B  160A  118A  2000  160A  158A  	fcall	stringtab
  9890  1B50  160A  158A  2460  160A  158A  	fcall	_LCD_Write_Char
  9891  1B55                     l4040:
  9892  1B55  3001               	movlw	1
  9893  1B56  1283               	bcf	3,5	;RP0=0, select bank0
  9894  1B57  1303               	bcf	3,6	;RP1=0, select bank0
  9895  1B58  07A3               	addwf	LCD_Write_String@i,f
  9896  1B59  1803               	skipnc
  9897  1B5A  0AA4               	incf	LCD_Write_String@i+1,f
  9898  1B5B  3000               	movlw	0
  9899  1B5C  07A4               	addwf	LCD_Write_String@i+1,f
  9900  1B5D                     l4042:
  9901  1B5D  0823               	movf	LCD_Write_String@i,w
  9902  1B5E  0778               	addwf	LCD_Write_String@str,w
  9903  1B5F  00A1               	movwf	??_LCD_Write_String+1
  9904  1B60  0879               	movf	LCD_Write_String@str+1,w
  9905  1B61  00A0               	movwf	??_LCD_Write_String
  9906  1B62  1803               	skipnc
  9907  1B63  0AA0               	incf	??_LCD_Write_String,f
  9908  1B64  1FA3               	btfss	LCD_Write_String@i,7
  9909  1B65  2B67               	goto	u6700
  9910  1B66  03A0               	decf	??_LCD_Write_String,f
  9911  1B67                     u6700:
  9912  1B67  1283               	bcf	3,5	;RP0=0, select bank0
  9913  1B68  1303               	bcf	3,6	;RP1=0, select bank0
  9914  1B69  0820               	movf	??_LCD_Write_String,w
  9915  1B6A  00A2               	movwf	??_LCD_Write_String+2
  9916  1B6B  0822               	movf	??_LCD_Write_String+2,w
  9917  1B6C  00FF               	movwf	btemp+1
  9918  1B6D  0821               	movf	??_LCD_Write_String+1,w
  9919  1B6E  0084               	movwf	4
  9920  1B6F  160A  118A  2000  160A  158A  	fcall	stringtab
  9921  1B74  3A00               	xorlw	0
  9922  1B75  1D03               	skipz
  9923  1B76  2B78               	goto	u6711
  9924  1B77  2B79               	goto	u6710
  9925  1B78                     u6711:
  9926  1B78  2B39               	goto	l4038
  9927  1B79                     u6710:
  9928  1B79                     l160:
  9929  1B79  0008               	return
  9930  1B7A                     __end_of_LCD_Write_String:
  9931                           
  9932                           	psect	text26
  9933  1C60                     __ptext26:	
  9934 ;; *************** function _LCD_Write_Char *****************
  9935 ;; Defined at:
  9936 ;;		line 119 in file "lcd.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  Data            1    wreg     unsigned char 
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  Data            1    7[COMMON] unsigned char 
  9941 ;;  High4           1    6[COMMON] unsigned char 
  9942 ;;  Low4            1    5[COMMON] unsigned char 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      void 
  9945 ;; Registers used:
  9946 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9952 ;;      Params:         0       0       0       0       0
  9953 ;;      Locals:         3       0       0       0       0
  9954 ;;      Temps:          2       0       0       0       0
  9955 ;;      Totals:         5       0       0       0       0
  9956 ;;Total ram usage:        5 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    2
  9959 ;; This function calls:
  9960 ;;		_LCD_DATA
  9961 ;; This function is called by:
  9962 ;;		_LCD_Write_String
  9963 ;;		_LCD_Write_Number
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           
  9968                           ;psect for function _LCD_Write_Char
  9969  1C60                     _LCD_Write_Char:
  9970                           
  9971                           ;incstack = 0
  9972                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9973                           ;LCD_Write_Char@Data stored from wreg
  9974  1C60  00F7               	movwf	LCD_Write_Char@Data
  9975  1C61                     l3868:
  9976                           
  9977                           ;lcd.c: 119: void LCD_Write_Char(char Data);lcd.c: 120: {;lcd.c: 125:   char Low4,High4;
      +                          ;lcd.c: 126:   Low4 = Data & 0x0F;
  9978  1C61  0877               	movf	LCD_Write_Char@Data,w
  9979  1C62  390F               	andlw	15
  9980  1C63  00FF               	movwf	btemp+1
  9981  1C64  087F               	movf	btemp+1,w
  9982  1C65  00F5               	movwf	LCD_Write_Char@Low4
  9983                           
  9984                           ;lcd.c: 127:   High4 = Data & 0xF0;
  9985  1C66  0877               	movf	LCD_Write_Char@Data,w
  9986  1C67  39F0               	andlw	240
  9987  1C68  00FF               	movwf	btemp+1
  9988  1C69  087F               	movf	btemp+1,w
  9989  1C6A  00F6               	movwf	LCD_Write_Char@High4
  9990  1C6B                     l3870:
  9991                           
  9992                           ;lcd.c: 128:   RD2 = 1;
  9993  1C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9994  1C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9995  1C6D  1508               	bsf	8,2	;volatile
  9996  1C6E                     l3872:
  9997                           
  9998                           ;lcd.c: 129:   LCD_DATA(High4>>4);
  9999  1C6E  0876               	movf	LCD_Write_Char@High4,w
 10000  1C6F  00F3               	movwf	??_LCD_Write_Char
 10001  1C70  3004               	movlw	4
 10002  1C71                     u6375:
 10003  1C71  1003               	clrc
 10004  1C72  0CF3               	rrf	??_LCD_Write_Char,f
 10005  1C73  3EFF               	addlw	-1
 10006  1C74  1D03               	skipz
 10007  1C75  2C71               	goto	u6375
 10008  1C76  0873               	movf	??_LCD_Write_Char,w
 10009  1C77  160A  158A  227A  160A  158A  	fcall	_LCD_DATA
 10010  1C7C                     l3874:
 10011                           
 10012                           ;lcd.c: 130:   RD3 = 1;
 10013  1C7C  1283               	bcf	3,5	;RP0=0, select bank0
 10014  1C7D  1303               	bcf	3,6	;RP1=0, select bank0
 10015  1C7E  1588               	bsf	8,3	;volatile
 10016  1C7F                     l3876:
 10017                           
 10018                           ;lcd.c: 131:   _delay((unsigned long)((500)*(20000000/4000000.0)));
 10019  1C7F  3004               	movlw	4
 10020  1C80  00F4               	movwf	??_LCD_Write_Char+1
 10021  1C81  303D               	movlw	61
 10022  1C82  00F3               	movwf	??_LCD_Write_Char
 10023  1C83                     u7127:
 10024  1C83  0BF3               	decfsz	??_LCD_Write_Char,f
 10025  1C84  2C83               	goto	u7127
 10026  1C85  0BF4               	decfsz	??_LCD_Write_Char+1,f
 10027  1C86  2C83               	goto	u7127
 10028  1C87  2C88               	nop2
 10029  1C88                     l3878:
 10030                           
 10031                           ;lcd.c: 132:   RD3 = 0;
 10032  1C88  1283               	bcf	3,5	;RP0=0, select bank0
 10033  1C89  1303               	bcf	3,6	;RP1=0, select bank0
 10034  1C8A  1188               	bcf	8,3	;volatile
 10035  1C8B                     l3880:
 10036                           
 10037                           ;lcd.c: 133:   _delay((unsigned long)((500)*(20000000/4000000.0)));
 10038  1C8B  3004               	movlw	4
 10039  1C8C  00F4               	movwf	??_LCD_Write_Char+1
 10040  1C8D  303D               	movlw	61
 10041  1C8E  00F3               	movwf	??_LCD_Write_Char
 10042  1C8F                     u7137:
 10043  1C8F  0BF3               	decfsz	??_LCD_Write_Char,f
 10044  1C90  2C8F               	goto	u7137
 10045  1C91  0BF4               	decfsz	??_LCD_Write_Char+1,f
 10046  1C92  2C8F               	goto	u7137
 10047  1C93  2C94               	nop2
 10048  1C94                     l3882:
 10049                           
 10050                           ;lcd.c: 134:   LCD_DATA(Low4);
 10051  1C94  0875               	movf	LCD_Write_Char@Low4,w
 10052  1C95  160A  158A  227A  160A  158A  	fcall	_LCD_DATA
 10053  1C9A                     l3884:
 10054                           
 10055                           ;lcd.c: 135:   RD3 = 1;
 10056  1C9A  1283               	bcf	3,5	;RP0=0, select bank0
 10057  1C9B  1303               	bcf	3,6	;RP1=0, select bank0
 10058  1C9C  1588               	bsf	8,3	;volatile
 10059  1C9D                     l3886:
 10060                           
 10061                           ;lcd.c: 136:   _delay((unsigned long)((500)*(20000000/4000000.0)));
 10062  1C9D  3004               	movlw	4
 10063  1C9E  00F4               	movwf	??_LCD_Write_Char+1
 10064  1C9F  303D               	movlw	61
 10065  1CA0  00F3               	movwf	??_LCD_Write_Char
 10066  1CA1                     u7147:
 10067  1CA1  0BF3               	decfsz	??_LCD_Write_Char,f
 10068  1CA2  2CA1               	goto	u7147
 10069  1CA3  0BF4               	decfsz	??_LCD_Write_Char+1,f
 10070  1CA4  2CA1               	goto	u7147
 10071  1CA5  2CA6               	nop2
 10072  1CA6                     l3888:
 10073                           
 10074                           ;lcd.c: 137:   RD3 = 0;
 10075  1CA6  1283               	bcf	3,5	;RP0=0, select bank0
 10076  1CA7  1303               	bcf	3,6	;RP1=0, select bank0
 10077  1CA8  1188               	bcf	8,3	;volatile
 10078  1CA9                     l3890:
 10079                           
 10080                           ;lcd.c: 138:   _delay((unsigned long)((500)*(20000000/4000000.0)));
 10081  1CA9  3004               	movlw	4
 10082  1CAA  00F4               	movwf	??_LCD_Write_Char+1
 10083  1CAB  303D               	movlw	61
 10084  1CAC  00F3               	movwf	??_LCD_Write_Char
 10085  1CAD                     u7157:
 10086  1CAD  0BF3               	decfsz	??_LCD_Write_Char,f
 10087  1CAE  2CAD               	goto	u7157
 10088  1CAF  0BF4               	decfsz	??_LCD_Write_Char+1,f
 10089  1CB0  2CAD               	goto	u7157
 10090  1CB1  2CB2               	nop2
 10091  1CB2                     l154:
 10092  1CB2  0008               	return
 10093  1CB3                     __end_of_LCD_Write_Char:
 10094                           
 10095                           	psect	text27
 10096  1F51                     __ptext27:	
 10097 ;; *************** function _LCD_Set_Cursor *****************
 10098 ;; Defined at:
 10099 ;;		line 49 in file "lcd.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  row             1    wreg     unsigned char 
 10102 ;;  column          1    6[COMMON] unsigned char 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  row             1    0[BANK0 ] unsigned char 
 10105 ;;  Temp            1    3[BANK0 ] unsigned char 
 10106 ;;  High4           1    2[BANK0 ] unsigned char 
 10107 ;;  Low4            1    1[BANK0 ] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10117 ;;      Params:         1       0       0       0       0
 10118 ;;      Locals:         0       4       0       0       0
 10119 ;;      Temps:          1       0       0       0       0
 10120 ;;      Totals:         2       4       0       0       0
 10121 ;;Total ram usage:        6 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    3
 10124 ;; This function calls:
 10125 ;;		_LCD_CMD
 10126 ;; This function is called by:
 10127 ;;		_main
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           
 10132                           ;psect for function _LCD_Set_Cursor
 10133  1F51                     _LCD_Set_Cursor:
 10134                           
 10135                           ;incstack = 0
 10136                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10137                           ;LCD_Set_Cursor@row stored from wreg
 10138  1F51  1283               	bcf	3,5	;RP0=0, select bank0
 10139  1F52  1303               	bcf	3,6	;RP1=0, select bank0
 10140  1F53  00A0               	movwf	LCD_Set_Cursor@row
 10141  1F54                     l3996:
 10142                           
 10143                           ;lcd.c: 49: void LCD_Set_Cursor(unsigned char row, unsigned char column);lcd.c: 50: {;lc
      +                          d.c: 56:   unsigned char Temp,Low4,High4;;lcd.c: 58:   if(row == 1)
 10144  1F54  0320               	decf	LCD_Set_Cursor@row,w
 10145  1F55  1D03               	btfss	3,2
 10146  1F56  2F58               	goto	u6611
 10147  1F57  2F59               	goto	u6610
 10148  1F58                     u6611:
 10149  1F58  2F7E               	goto	l4006
 10150  1F59                     u6610:
 10151  1F59                     l3998:
 10152                           
 10153                           ;lcd.c: 59:   {;lcd.c: 60:     Temp = 0x80 + column - 1;
 10154  1F59  0876               	movf	LCD_Set_Cursor@column,w
 10155  1F5A  3E7F               	addlw	127
 10156  1F5B  00FF               	movwf	btemp+1
 10157  1F5C  087F               	movf	btemp+1,w
 10158  1F5D  00A3               	movwf	LCD_Set_Cursor@Temp
 10159                           
 10160                           ;lcd.c: 61:     High4 = Temp >> 4;
 10161  1F5E  0823               	movf	LCD_Set_Cursor@Temp,w
 10162  1F5F  00F7               	movwf	??_LCD_Set_Cursor
 10163  1F60  3004               	movlw	4
 10164  1F61                     u6625:
 10165  1F61  1003               	clrc
 10166  1F62  0CF7               	rrf	??_LCD_Set_Cursor,f
 10167  1F63  3EFF               	addlw	-1
 10168  1F64  1D03               	skipz
 10169  1F65  2F61               	goto	u6625
 10170  1F66  0877               	movf	??_LCD_Set_Cursor,w
 10171  1F67  00FF               	movwf	btemp+1
 10172  1F68  087F               	movf	btemp+1,w
 10173  1F69  00A2               	movwf	LCD_Set_Cursor@High4
 10174  1F6A                     l4000:
 10175                           
 10176                           ;lcd.c: 62:     Low4 = Temp & 0x0F;
 10177  1F6A  0823               	movf	LCD_Set_Cursor@Temp,w
 10178  1F6B  390F               	andlw	15
 10179  1F6C  00FF               	movwf	btemp+1
 10180  1F6D  087F               	movf	btemp+1,w
 10181  1F6E  00A1               	movwf	LCD_Set_Cursor@Low4
 10182  1F6F                     l4002:
 10183                           
 10184                           ;lcd.c: 63:     LCD_CMD(High4);
 10185  1F6F  0822               	movf	LCD_Set_Cursor@High4,w
 10186  1F70  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10187  1F75                     l4004:
 10188                           
 10189                           ;lcd.c: 64:     LCD_CMD(Low4);
 10190  1F75  1283               	bcf	3,5	;RP0=0, select bank0
 10191  1F76  1303               	bcf	3,6	;RP1=0, select bank0
 10192  1F77  0821               	movf	LCD_Set_Cursor@Low4,w
 10193  1F78  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10194                           
 10195                           ;lcd.c: 65:   }
 10196  1F7D  2FFF               	goto	l148
 10197  1F7E                     l4006:
 10198  1F7E  3002               	movlw	2
 10199  1F7F  0620               	xorwf	LCD_Set_Cursor@row,w
 10200  1F80  1D03               	btfss	3,2
 10201  1F81  2F83               	goto	u6631
 10202  1F82  2F84               	goto	u6630
 10203  1F83                     u6631:
 10204  1F83  2FA9               	goto	l4016
 10205  1F84                     u6630:
 10206  1F84                     l4008:
 10207                           
 10208                           ;lcd.c: 67:   {;lcd.c: 68:     Temp = 0xC0 + column - 1;
 10209  1F84  0876               	movf	LCD_Set_Cursor@column,w
 10210  1F85  3EBF               	addlw	191
 10211  1F86  00FF               	movwf	btemp+1
 10212  1F87  087F               	movf	btemp+1,w
 10213  1F88  00A3               	movwf	LCD_Set_Cursor@Temp
 10214                           
 10215                           ;lcd.c: 69:     High4 = Temp >> 4;
 10216  1F89  0823               	movf	LCD_Set_Cursor@Temp,w
 10217  1F8A  00F7               	movwf	??_LCD_Set_Cursor
 10218  1F8B  3004               	movlw	4
 10219  1F8C                     u6645:
 10220  1F8C  1003               	clrc
 10221  1F8D  0CF7               	rrf	??_LCD_Set_Cursor,f
 10222  1F8E  3EFF               	addlw	-1
 10223  1F8F  1D03               	skipz
 10224  1F90  2F8C               	goto	u6645
 10225  1F91  0877               	movf	??_LCD_Set_Cursor,w
 10226  1F92  00FF               	movwf	btemp+1
 10227  1F93  087F               	movf	btemp+1,w
 10228  1F94  00A2               	movwf	LCD_Set_Cursor@High4
 10229  1F95                     l4010:
 10230                           
 10231                           ;lcd.c: 70:     Low4 = Temp & 0x0F;
 10232  1F95  0823               	movf	LCD_Set_Cursor@Temp,w
 10233  1F96  390F               	andlw	15
 10234  1F97  00FF               	movwf	btemp+1
 10235  1F98  087F               	movf	btemp+1,w
 10236  1F99  00A1               	movwf	LCD_Set_Cursor@Low4
 10237  1F9A                     l4012:
 10238                           
 10239                           ;lcd.c: 71:     LCD_CMD(High4);
 10240  1F9A  0822               	movf	LCD_Set_Cursor@High4,w
 10241  1F9B  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10242  1FA0                     l4014:
 10243                           
 10244                           ;lcd.c: 72:     LCD_CMD(Low4);
 10245  1FA0  1283               	bcf	3,5	;RP0=0, select bank0
 10246  1FA1  1303               	bcf	3,6	;RP1=0, select bank0
 10247  1FA2  0821               	movf	LCD_Set_Cursor@Low4,w
 10248  1FA3  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10249                           
 10250                           ;lcd.c: 73:   }
 10251  1FA8  2FFF               	goto	l148
 10252  1FA9                     l4016:
 10253  1FA9  3003               	movlw	3
 10254  1FAA  0620               	xorwf	LCD_Set_Cursor@row,w
 10255  1FAB  1D03               	btfss	3,2
 10256  1FAC  2FAE               	goto	u6651
 10257  1FAD  2FAF               	goto	u6650
 10258  1FAE                     u6651:
 10259  1FAE  2FD4               	goto	l4026
 10260  1FAF                     u6650:
 10261  1FAF                     l4018:
 10262                           
 10263                           ;lcd.c: 75:   {;lcd.c: 76:    Temp = 0x94 + column - 1;
 10264  1FAF  0876               	movf	LCD_Set_Cursor@column,w
 10265  1FB0  3E93               	addlw	147
 10266  1FB1  00FF               	movwf	btemp+1
 10267  1FB2  087F               	movf	btemp+1,w
 10268  1FB3  00A3               	movwf	LCD_Set_Cursor@Temp
 10269                           
 10270                           ;lcd.c: 77:     High4 = Temp >> 4;
 10271  1FB4  0823               	movf	LCD_Set_Cursor@Temp,w
 10272  1FB5  00F7               	movwf	??_LCD_Set_Cursor
 10273  1FB6  3004               	movlw	4
 10274  1FB7                     u6665:
 10275  1FB7  1003               	clrc
 10276  1FB8  0CF7               	rrf	??_LCD_Set_Cursor,f
 10277  1FB9  3EFF               	addlw	-1
 10278  1FBA  1D03               	skipz
 10279  1FBB  2FB7               	goto	u6665
 10280  1FBC  0877               	movf	??_LCD_Set_Cursor,w
 10281  1FBD  00FF               	movwf	btemp+1
 10282  1FBE  087F               	movf	btemp+1,w
 10283  1FBF  00A2               	movwf	LCD_Set_Cursor@High4
 10284  1FC0                     l4020:
 10285                           
 10286                           ;lcd.c: 78:     Low4 = Temp & 0x0F;
 10287  1FC0  0823               	movf	LCD_Set_Cursor@Temp,w
 10288  1FC1  390F               	andlw	15
 10289  1FC2  00FF               	movwf	btemp+1
 10290  1FC3  087F               	movf	btemp+1,w
 10291  1FC4  00A1               	movwf	LCD_Set_Cursor@Low4
 10292  1FC5                     l4022:
 10293                           
 10294                           ;lcd.c: 79:     LCD_CMD(High4);
 10295  1FC5  0822               	movf	LCD_Set_Cursor@High4,w
 10296  1FC6  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10297  1FCB                     l4024:
 10298                           
 10299                           ;lcd.c: 80:     LCD_CMD(Low4);
 10300  1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 10301  1FCC  1303               	bcf	3,6	;RP1=0, select bank0
 10302  1FCD  0821               	movf	LCD_Set_Cursor@Low4,w
 10303  1FCE  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10304                           
 10305                           ;lcd.c: 81:   }
 10306  1FD3  2FFF               	goto	l148
 10307  1FD4                     l4026:
 10308  1FD4  3004               	movlw	4
 10309  1FD5  0620               	xorwf	LCD_Set_Cursor@row,w
 10310  1FD6  1D03               	btfss	3,2
 10311  1FD7  2FD9               	goto	u6671
 10312  1FD8  2FDA               	goto	u6670
 10313  1FD9                     u6671:
 10314  1FD9  2FFF               	goto	l144
 10315  1FDA                     u6670:
 10316  1FDA                     l4028:
 10317                           
 10318                           ;lcd.c: 83:   {;lcd.c: 84:    Temp = 0xD4 + column - 1;
 10319  1FDA  0876               	movf	LCD_Set_Cursor@column,w
 10320  1FDB  3ED3               	addlw	211
 10321  1FDC  00FF               	movwf	btemp+1
 10322  1FDD  087F               	movf	btemp+1,w
 10323  1FDE  00A3               	movwf	LCD_Set_Cursor@Temp
 10324                           
 10325                           ;lcd.c: 85:     High4 = Temp >> 4;
 10326  1FDF  0823               	movf	LCD_Set_Cursor@Temp,w
 10327  1FE0  00F7               	movwf	??_LCD_Set_Cursor
 10328  1FE1  3004               	movlw	4
 10329  1FE2                     u6685:
 10330  1FE2  1003               	clrc
 10331  1FE3  0CF7               	rrf	??_LCD_Set_Cursor,f
 10332  1FE4  3EFF               	addlw	-1
 10333  1FE5  1D03               	skipz
 10334  1FE6  2FE2               	goto	u6685
 10335  1FE7  0877               	movf	??_LCD_Set_Cursor,w
 10336  1FE8  00FF               	movwf	btemp+1
 10337  1FE9  087F               	movf	btemp+1,w
 10338  1FEA  00A2               	movwf	LCD_Set_Cursor@High4
 10339  1FEB                     l4030:
 10340                           
 10341                           ;lcd.c: 86:     Low4 = Temp & 0x0F;
 10342  1FEB  0823               	movf	LCD_Set_Cursor@Temp,w
 10343  1FEC  390F               	andlw	15
 10344  1FED  00FF               	movwf	btemp+1
 10345  1FEE  087F               	movf	btemp+1,w
 10346  1FEF  00A1               	movwf	LCD_Set_Cursor@Low4
 10347  1FF0                     l4032:
 10348                           
 10349                           ;lcd.c: 87:     LCD_CMD(High4);
 10350  1FF0  0822               	movf	LCD_Set_Cursor@High4,w
 10351  1FF1  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10352  1FF6                     l4034:
 10353                           
 10354                           ;lcd.c: 88:     LCD_CMD(Low4);
 10355  1FF6  1283               	bcf	3,5	;RP0=0, select bank0
 10356  1FF7  1303               	bcf	3,6	;RP1=0, select bank0
 10357  1FF8  0821               	movf	LCD_Set_Cursor@Low4,w
 10358  1FF9  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10359  1FFE  2FFF               	goto	l148
 10360  1FFF                     l144:
 10361  1FFF                     l148:
 10362  1FFF  0008               	return
 10363  2000                     __end_of_LCD_Set_Cursor:
 10364                           
 10365                           	psect	text28
 10366  1D62                     __ptext28:	
 10367 ;; *************** function _LCD_Init *****************
 10368 ;; Defined at:
 10369 ;;		line 91 in file "lcd.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1    wreg      void 
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0, pclath, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10383 ;;      Params:         0       0       0       0       0
 10384 ;;      Locals:         0       0       0       0       0
 10385 ;;      Temps:          2       0       0       0       0
 10386 ;;      Totals:         2       0       0       0       0
 10387 ;;Total ram usage:        2 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    3
 10390 ;; This function calls:
 10391 ;;		_LCD_CMD
 10392 ;;		_LCD_DATA
 10393 ;; This function is called by:
 10394 ;;		_main
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           
 10399                           ;psect for function _LCD_Init
 10400  1D62                     _LCD_Init:
 10401  1D62                     l3960:	
 10402                           ;incstack = 0
 10403                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10404                           
 10405                           
 10406                           ;lcd.c: 98:   TRISD = 0x00;
 10407  1D62  1683               	bsf	3,5	;RP0=1, select bank1
 10408  1D63  1303               	bcf	3,6	;RP1=0, select bank1
 10409  1D64  0188               	clrf	8	;volatile
 10410  1D65                     l3962:
 10411                           
 10412                           ;lcd.c: 99:   TRISD2 = 0;
 10413  1D65  1108               	bcf	8,2	;volatile
 10414  1D66                     l3964:
 10415                           
 10416                           ;lcd.c: 100:   TRISD3 = 0;
 10417  1D66  1188               	bcf	8,3	;volatile
 10418  1D67                     l3966:
 10419                           
 10420                           ;lcd.c: 102:   LCD_DATA(0x00);
 10421  1D67  3000               	movlw	0
 10422  1D68  160A  158A  227A  160A  158A  	fcall	_LCD_DATA
 10423  1D6D                     l3968:
 10424                           
 10425                           ;lcd.c: 103:   _delay((unsigned long)((30)*(20000000/4000.0)));
 10426  1D6D  30C3               	movlw	195
 10427  1D6E  00F7               	movwf	??_LCD_Init+1
 10428  1D6F  30CD               	movlw	205
 10429  1D70  00F6               	movwf	??_LCD_Init
 10430  1D71                     u7167:
 10431  1D71  0BF6               	decfsz	??_LCD_Init,f
 10432  1D72  2D71               	goto	u7167
 10433  1D73  0BF7               	decfsz	??_LCD_Init+1,f
 10434  1D74  2D71               	goto	u7167
 10435  1D75                     l3970:
 10436                           
 10437                           ;lcd.c: 104:   _delay((unsigned long)((500)*(20000000/4000000.0)));
 10438  1D75  3004               	movlw	4
 10439  1D76  00F7               	movwf	??_LCD_Init+1
 10440  1D77  303D               	movlw	61
 10441  1D78  00F6               	movwf	??_LCD_Init
 10442  1D79                     u7177:
 10443  1D79  0BF6               	decfsz	??_LCD_Init,f
 10444  1D7A  2D79               	goto	u7177
 10445  1D7B  0BF7               	decfsz	??_LCD_Init+1,f
 10446  1D7C  2D79               	goto	u7177
 10447  1D7D  2D7E               	nop2
 10448  1D7E                     l3972:
 10449                           
 10450                           ;lcd.c: 105:   LCD_CMD(0x03);
 10451  1D7E  3003               	movlw	3
 10452  1D7F  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10453  1D84                     l3974:
 10454                           
 10455                           ;lcd.c: 106:   _delay((unsigned long)((5)*(20000000/4000.0)));
 10456  1D84  3021               	movlw	33
 10457  1D85  00F7               	movwf	??_LCD_Init+1
 10458  1D86  3076               	movlw	118
 10459  1D87  00F6               	movwf	??_LCD_Init
 10460  1D88                     u7187:
 10461  1D88  0BF6               	decfsz	??_LCD_Init,f
 10462  1D89  2D88               	goto	u7187
 10463  1D8A  0BF7               	decfsz	??_LCD_Init+1,f
 10464  1D8B  2D88               	goto	u7187
 10465  1D8C  0000               	nop
 10466  1D8D                     l3976:
 10467                           
 10468                           ;lcd.c: 107:   LCD_CMD(0x03);
 10469  1D8D  3003               	movlw	3
 10470  1D8E  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10471  1D93                     l3978:
 10472                           
 10473                           ;lcd.c: 108:   _delay((unsigned long)((150)*(20000000/4000000.0)));
 10474  1D93  30F9               	movlw	249
 10475  1D94  00F6               	movwf	??_LCD_Init
 10476  1D95                     u7197:
 10477  1D95  0BF6               	decfsz	??_LCD_Init,f
 10478  1D96  2D95               	goto	u7197
 10479  1D97  2D98               	nop2
 10480  1D98                     l3980:
 10481                           
 10482                           ;lcd.c: 109:   LCD_CMD(0x03);
 10483  1D98  3003               	movlw	3
 10484  1D99  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10485  1D9E                     l3982:
 10486                           
 10487                           ;lcd.c: 110:   LCD_CMD(0x02);
 10488  1D9E  3002               	movlw	2
 10489  1D9F  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10490  1DA4                     l3984:
 10491                           
 10492                           ;lcd.c: 111:   LCD_CMD(0x02);
 10493  1DA4  3002               	movlw	2
 10494  1DA5  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10495  1DAA                     l3986:
 10496                           
 10497                           ;lcd.c: 112:   LCD_CMD(0x08);
 10498  1DAA  3008               	movlw	8
 10499  1DAB  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10500  1DB0                     l3988:
 10501                           
 10502                           ;lcd.c: 113:   LCD_CMD(0x00);
 10503  1DB0  3000               	movlw	0
 10504  1DB1  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10505  1DB6                     l3990:
 10506                           
 10507                           ;lcd.c: 114:   LCD_CMD(0x0C);
 10508  1DB6  300C               	movlw	12
 10509  1DB7  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10510  1DBC                     l3992:
 10511                           
 10512                           ;lcd.c: 115:   LCD_CMD(0x00);
 10513  1DBC  3000               	movlw	0
 10514  1DBD  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10515  1DC2                     l3994:
 10516                           
 10517                           ;lcd.c: 116:   LCD_CMD(0x06);
 10518  1DC2  3006               	movlw	6
 10519  1DC3  160A  158A  2260  160A  158A  	fcall	_LCD_CMD
 10520  1DC8                     l151:
 10521  1DC8  0008               	return
 10522  1DC9                     __end_of_LCD_Init:
 10523                           
 10524                           	psect	text29
 10525  10C0                     __ptext29:	
 10526 ;; *************** function _LCD_Clear *****************
 10527 ;; Defined at:
 10528 ;;		line 41 in file "lcd.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;		None
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2, status,0, pclath, cstack
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10542 ;;      Params:         0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0
 10545 ;;      Totals:         0       0       0       0       0
 10546 ;;Total ram usage:        0 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; Hardware stack levels required when called:    3
 10549 ;; This function calls:
 10550 ;;		_LCD_CMD
 10551 ;; This function is called by:
 10552 ;;		_main
 10553 ;; This function uses a non-reentrant model
 10554 ;;
 10555                           
 10556                           
 10557                           ;psect for function _LCD_Clear
 10558  10C0                     _LCD_Clear:
 10559  10C0                     l4044:	
 10560                           ;incstack = 0
 10561                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10562                           
 10563                           
 10564                           ;lcd.c: 46:   LCD_CMD(0);
 10565  10C0  3000               	movlw	0
 10566  10C1  160A  158A  2260  160A  118A  	fcall	_LCD_CMD
 10567                           
 10568                           ;lcd.c: 47:   LCD_CMD(1);
 10569  10C6  3001               	movlw	1
 10570  10C7  160A  158A  2260  160A  118A  	fcall	_LCD_CMD
 10571  10CC                     l138:
 10572  10CC  0008               	return
 10573  10CD                     __end_of_LCD_Clear:
 10574                           
 10575                           	psect	text30
 10576  1A60                     __ptext30:	
 10577 ;; *************** function _LCD_CMD *****************
 10578 ;; Defined at:
 10579 ;;		line 28 in file "lcd.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  CMD             1    wreg     unsigned char 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;  CMD             1    5[COMMON] unsigned char 
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      void 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0, pclath, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10593 ;;      Params:         0       0       0       0       0
 10594 ;;      Locals:         1       0       0       0       0
 10595 ;;      Temps:          2       0       0       0       0
 10596 ;;      Totals:         3       0       0       0       0
 10597 ;;Total ram usage:        3 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:    2
 10600 ;; This function calls:
 10601 ;;		_LCD_DATA
 10602 ;; This function is called by:
 10603 ;;		_LCD_Clear
 10604 ;;		_LCD_Set_Cursor
 10605 ;;		_LCD_Init
 10606 ;;		_LCD_SL
 10607 ;;		_LCD_SR
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           
 10612                           ;psect for function _LCD_CMD
 10613  1A60                     _LCD_CMD:
 10614                           
 10615                           ;incstack = 0
 10616                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 10617                           ;LCD_CMD@CMD stored from wreg
 10618  1A60  00F5               	movwf	LCD_CMD@CMD
 10619  1A61                     l3858:
 10620                           
 10621                           ;lcd.c: 28: void LCD_CMD(unsigned char CMD);lcd.c: 29: {;lcd.c: 33:   RD2 = 0;
 10622  1A61  1283               	bcf	3,5	;RP0=0, select bank0
 10623  1A62  1303               	bcf	3,6	;RP1=0, select bank0
 10624  1A63  1108               	bcf	8,2	;volatile
 10625  1A64                     l3860:
 10626                           
 10627                           ;lcd.c: 34:   LCD_DATA(CMD);
 10628  1A64  0875               	movf	LCD_CMD@CMD,w
 10629  1A65  160A  158A  227A  160A  158A  	fcall	_LCD_DATA
 10630  1A6A                     l3862:
 10631                           
 10632                           ;lcd.c: 35:   RD3 = 1;
 10633  1A6A  1283               	bcf	3,5	;RP0=0, select bank0
 10634  1A6B  1303               	bcf	3,6	;RP1=0, select bank0
 10635  1A6C  1588               	bsf	8,3	;volatile
 10636  1A6D                     l3864:
 10637                           
 10638                           ;lcd.c: 36:   _delay((unsigned long)((500)*(20000000/4000000.0)));
 10639  1A6D  3004               	movlw	4
 10640  1A6E  00F4               	movwf	??_LCD_CMD+1
 10641  1A6F  303D               	movlw	61
 10642  1A70  00F3               	movwf	??_LCD_CMD
 10643  1A71                     u7207:
 10644  1A71  0BF3               	decfsz	??_LCD_CMD,f
 10645  1A72  2A71               	goto	u7207
 10646  1A73  0BF4               	decfsz	??_LCD_CMD+1,f
 10647  1A74  2A71               	goto	u7207
 10648  1A75  2A76               	nop2
 10649  1A76                     l3866:
 10650                           
 10651                           ;lcd.c: 37:   RD3 = 0;
 10652  1A76  1283               	bcf	3,5	;RP0=0, select bank0
 10653  1A77  1303               	bcf	3,6	;RP1=0, select bank0
 10654  1A78  1188               	bcf	8,3	;volatile
 10655  1A79                     l135:
 10656  1A79  0008               	return
 10657  1A7A                     __end_of_LCD_CMD:
 10658                           
 10659                           	psect	text31
 10660  1A7A                     __ptext31:	
 10661 ;; *************** function _LCD_DATA *****************
 10662 ;; Defined at:
 10663 ;;		line 4 in file "lcd.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;  Data            1    wreg     unsigned char 
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;  Data            1    2[COMMON] unsigned char 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10677 ;;      Params:         0       0       0       0       0
 10678 ;;      Locals:         1       0       0       0       0
 10679 ;;      Temps:          0       0       0       0       0
 10680 ;;      Totals:         1       0       0       0       0
 10681 ;;Total ram usage:        1 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    1
 10684 ;; This function calls:
 10685 ;;		Nothing
 10686 ;; This function is called by:
 10687 ;;		_LCD_CMD
 10688 ;;		_LCD_Init
 10689 ;;		_LCD_Write_Char
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           
 10694                           ;psect for function _LCD_DATA
 10695  1A7A                     _LCD_DATA:
 10696                           
 10697                           ;incstack = 0
 10698                           ; Regs used in _LCD_DATA: [wreg]
 10699                           ;LCD_DATA@Data stored from wreg
 10700  1A7A  00F2               	movwf	LCD_DATA@Data
 10701  1A7B                     l3804:
 10702                           
 10703                           ;lcd.c: 4: void LCD_DATA(unsigned char Data);lcd.c: 5: {;lcd.c: 9:   if(Data & 1)
 10704  1A7B  1C72               	btfss	LCD_DATA@Data,0
 10705  1A7C  2A7E               	goto	u6231
 10706  1A7D  2A7F               	goto	u6230
 10707  1A7E                     u6231:
 10708  1A7E  2A83               	goto	l124
 10709  1A7F                     u6230:
 10710  1A7F                     l3806:
 10711                           
 10712                           ;lcd.c: 10:     RD4 = 1;
 10713  1A7F  1283               	bcf	3,5	;RP0=0, select bank0
 10714  1A80  1303               	bcf	3,6	;RP1=0, select bank0
 10715  1A81  1608               	bsf	8,4	;volatile
 10716  1A82  2A86               	goto	l125
 10717  1A83                     l124:	
 10718                           ;lcd.c: 11:   else
 10719                           
 10720                           
 10721                           ;lcd.c: 12:     RD4 = 0;
 10722  1A83  1283               	bcf	3,5	;RP0=0, select bank0
 10723  1A84  1303               	bcf	3,6	;RP1=0, select bank0
 10724  1A85  1208               	bcf	8,4	;volatile
 10725  1A86                     l125:
 10726                           
 10727                           ;lcd.c: 13:   if(Data & 2)
 10728  1A86  1CF2               	btfss	LCD_DATA@Data,1
 10729  1A87  2A89               	goto	u6241
 10730  1A88  2A8A               	goto	u6240
 10731  1A89                     u6241:
 10732  1A89  2A8C               	goto	l126
 10733  1A8A                     u6240:
 10734  1A8A                     l3808:
 10735                           
 10736                           ;lcd.c: 14:     RD5 = 1;
 10737  1A8A  1688               	bsf	8,5	;volatile
 10738  1A8B  2A8D               	goto	l127
 10739  1A8C                     l126:	
 10740                           ;lcd.c: 15:   else
 10741                           
 10742                           
 10743                           ;lcd.c: 16:     RD5 = 0;
 10744  1A8C  1288               	bcf	8,5	;volatile
 10745  1A8D                     l127:
 10746                           
 10747                           ;lcd.c: 17:   if(Data & 4)
 10748  1A8D  1D72               	btfss	LCD_DATA@Data,2
 10749  1A8E  2A90               	goto	u6251
 10750  1A8F  2A91               	goto	u6250
 10751  1A90                     u6251:
 10752  1A90  2A93               	goto	l128
 10753  1A91                     u6250:
 10754  1A91                     l3810:
 10755                           
 10756                           ;lcd.c: 18:     RD6 = 1;
 10757  1A91  1708               	bsf	8,6	;volatile
 10758  1A92  2A94               	goto	l129
 10759  1A93                     l128:	
 10760                           ;lcd.c: 19:   else
 10761                           
 10762                           
 10763                           ;lcd.c: 20:     RD6 = 0;
 10764  1A93  1308               	bcf	8,6	;volatile
 10765  1A94                     l129:
 10766                           
 10767                           ;lcd.c: 21:   if(Data & 8)
 10768  1A94  1DF2               	btfss	LCD_DATA@Data,3
 10769  1A95  2A97               	goto	u6261
 10770  1A96  2A98               	goto	u6260
 10771  1A97                     u6261:
 10772  1A97  2A9A               	goto	l130
 10773  1A98                     u6260:
 10774  1A98                     l3812:
 10775                           
 10776                           ;lcd.c: 22:     RD7 = 1;
 10777  1A98  1788               	bsf	8,7	;volatile
 10778  1A99  2A9B               	goto	l132
 10779  1A9A                     l130:	
 10780                           ;lcd.c: 23:   else
 10781                           
 10782                           
 10783                           ;lcd.c: 24:     RD7 = 0;
 10784  1A9A  1388               	bcf	8,7	;volatile
 10785  1A9B                     l132:
 10786  1A9B  0008               	return
 10787  1A9C                     __end_of_LCD_DATA:
 10788                           
 10789                           	psect	text32
 10790  1AC1                     __ptext32:	
 10791 ;; *************** function _irs *****************
 10792 ;; Defined at:
 10793 ;;		line 62 in file "main encoder.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;		None
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      void 
 10800 ;; Registers used:
 10801 ;;		wreg, status,2
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10807 ;;      Params:         0       0       0       0       0
 10808 ;;      Locals:         0       0       0       0       0
 10809 ;;      Temps:          2       0       0       0       0
 10810 ;;      Totals:         2       0       0       0       0
 10811 ;;Total ram usage:        2 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		Interrupt level 1
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           
 10821                           ;psect for function _irs
 10822  1AC1                     _irs:
 10823  1AC1                     i1l3668:
 10824                           
 10825                           ;main encoder.c: 64:     if(INTF&&INTE)
 10826  1AC1  1C8B               	btfss	11,1	;volatile
 10827  1AC2  2AC4               	goto	u605_21
 10828  1AC3  2AC5               	goto	u605_20
 10829  1AC4                     u605_21:
 10830  1AC4  2ADC               	goto	i1l3680
 10831  1AC5                     u605_20:
 10832  1AC5                     i1l3670:
 10833  1AC5  1E0B               	btfss	11,4	;volatile
 10834  1AC6  2AC8               	goto	u606_21
 10835  1AC7  2AC9               	goto	u606_20
 10836  1AC8                     u606_21:
 10837  1AC8  2ADC               	goto	i1l3680
 10838  1AC9                     u606_20:
 10839  1AC9                     i1l3672:
 10840                           
 10841                           ;main encoder.c: 65:     {;main encoder.c: 66:         if(PORTBbits.RB5 == 0)
 10842  1AC9  1283               	bcf	3,5	;RP0=0, select bank0
 10843  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
 10844  1ACB  1A86               	btfsc	6,5	;volatile
 10845  1ACC  2ACE               	goto	u607_21
 10846  1ACD  2ACF               	goto	u607_20
 10847  1ACE                     u607_21:
 10848  1ACE  2AD4               	goto	i1l74
 10849  1ACF                     u607_20:
 10850  1ACF                     i1l3674:
 10851                           
 10852                           ;main encoder.c: 67:         {;main encoder.c: 68:             chieu_quay = 1;
 10853  1ACF  1683               	bsf	3,5	;RP0=1, select bank1
 10854  1AD0  1303               	bcf	3,6	;RP1=0, select bank1
 10855  1AD1  01D4               	clrf	_chieu_quay^(0+128)
 10856  1AD2  0AD4               	incf	_chieu_quay^(0+128),f
 10857                           
 10858                           ;main encoder.c: 69:         }
 10859  1AD3  2ADB               	goto	i1l3678
 10860  1AD4                     i1l74:	
 10861                           ;main encoder.c: 70:         else if(PORTBbits.RB5 == 1)
 10862                           
 10863  1AD4  1E86               	btfss	6,5	;volatile
 10864  1AD5  2AD7               	goto	u608_21
 10865  1AD6  2AD8               	goto	u608_20
 10866  1AD7                     u608_21:
 10867  1AD7  2ADB               	goto	i1l3678
 10868  1AD8                     u608_20:
 10869  1AD8                     i1l3676:
 10870                           
 10871                           ;main encoder.c: 71:         {;main encoder.c: 72:             chieu_quay = 0;
 10872  1AD8  1683               	bsf	3,5	;RP0=1, select bank1
 10873  1AD9  1303               	bcf	3,6	;RP1=0, select bank1
 10874  1ADA  01D4               	clrf	_chieu_quay^(0+128)
 10875  1ADB                     i1l3678:
 10876                           
 10877                           ;main encoder.c: 74:         INTF = 0;
 10878  1ADB  108B               	bcf	11,1	;volatile
 10879  1ADC                     i1l3680:
 10880                           
 10881                           ;main encoder.c: 77:     if(TMR1IE && TMR1IF)
 10882  1ADC  1683               	bsf	3,5	;RP0=1, select bank1
 10883  1ADD  1303               	bcf	3,6	;RP1=0, select bank1
 10884  1ADE  1C0C               	btfss	12,0	;volatile
 10885  1ADF  2AE1               	goto	u609_21
 10886  1AE0  2AE2               	goto	u609_20
 10887  1AE1                     u609_21:
 10888  1AE1  2AF3               	goto	i1l78
 10889  1AE2                     u609_20:
 10890  1AE2                     i1l3682:
 10891  1AE2  1283               	bcf	3,5	;RP0=0, select bank0
 10892  1AE3  1303               	bcf	3,6	;RP1=0, select bank0
 10893  1AE4  1C0C               	btfss	12,0	;volatile
 10894  1AE5  2AE7               	goto	u610_21
 10895  1AE6  2AE8               	goto	u610_20
 10896  1AE7                     u610_21:
 10897  1AE7  2AF3               	goto	i1l78
 10898  1AE8                     u610_20:
 10899  1AE8                     i1l3684:
 10900                           
 10901                           ;main encoder.c: 78:     {;main encoder.c: 79:         u32NumberOfCounterOver++;
 10902  1AE8  3001               	movlw	1
 10903  1AE9  1683               	bsf	3,5	;RP0=1, select bank1
 10904  1AEA  1303               	bcf	3,6	;RP1=0, select bank1
 10905  1AEB  07D2               	addwf	_u32NumberOfCounterOver^(0+128),f
 10906  1AEC  1803               	skipnc
 10907  1AED  0AD3               	incf	(_u32NumberOfCounterOver+1)^(0+128),f
 10908  1AEE  3000               	movlw	0
 10909  1AEF  07D3               	addwf	(_u32NumberOfCounterOver+1)^(0+128),f
 10910  1AF0                     i1l3686:
 10911                           
 10912                           ;main encoder.c: 80:         TMR1IF=0;
 10913  1AF0  1283               	bcf	3,5	;RP0=0, select bank0
 10914  1AF1  1303               	bcf	3,6	;RP1=0, select bank0
 10915  1AF2  100C               	bcf	12,0	;volatile
 10916  1AF3                     i1l78:
 10917  1AF3  0871               	movf	??_irs+1,w
 10918  1AF4  008A               	movwf	10
 10919  1AF5  0E70               	swapf	??_irs^(0+4294967168),w
 10920  1AF6  0083               	movwf	3
 10921  1AF7  0EFE               	swapf	btemp,f
 10922  1AF8  0E7E               	swapf	btemp,w
 10923  1AF9  0009               	retfie
 10924  1AFA                     __end_of_irs:
 10925  007E                     btemp	set	126	;btemp
 10926  007E                     wtemp0	set	126
 10927                           
 10928                           	psect	intentry
 10929  0004                     __pintentry:	
 10930                           ;incstack = 0
 10931                           ; Regs used in _irs: [wreg+status,2]
 10932                           
 10933  0004                     interrupt_function:
 10934  007E                     saved_w	set	btemp
 10935  0004  00FE               	movwf	btemp
 10936  0005  0E03               	swapf	3,w
 10937  0006  00F0               	movwf	??_irs
 10938  0007  080A               	movf	10,w
 10939  0008  00F1               	movwf	??_irs+1
 10940  0009  160A  158A  2AC1   	ljmp	_irs
 10941                           
 10942                           	psect	config
 10943                           
 10944                           ;Config register CONFIG @ 0x2007
 10945                           ;	Oscillator Selection bits
 10946                           ;	FOSC = HS, HS oscillator
 10947                           ;	Watchdog Timer Enable bit
 10948                           ;	WDTE = OFF, WDT disabled
 10949                           ;	Power-up Timer Enable bit
 10950                           ;	PWRTE = ON, PWRT enabled
 10951                           ;	Brown-out Reset Enable bit
 10952                           ;	BOREN = ON, BOR enabled
 10953                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10954                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
 10955                           ;	Data EEPROM Memory Code Protection bit
 10956                           ;	CPD = OFF, Data EEPROM code protection off
 10957                           ;	Flash Program Memory Write Enable bits
 10958                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10959                           ;	In-Circuit Debugger Mode bit
 10960                           ;	DEBUG = 0x1, unprogrammed default
 10961                           ;	Flash Program Memory Code Protection bit
 10962                           ;	CP = OFF, Code protection off
 10963  2007                     	org	8199
 10964  2007  3FF2               	dw	16370

Data Sizes:
    Strings     27
    Constant    144
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     46      55
    BANK3            96      0      30
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> str(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCD_Write_String@str	PTR unsigned char  size(2) Largest target is 30
		 -> STR_4(CODE[7]), STR_3(CODE[6]), str(BANK3[30]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___lwdiv
    ___fldiv->___xxtofl
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _irs in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___xxtofl

Critical Paths under _irs in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _irs in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irs in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irs in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   36239
                                             38 BANK1      8     8      0
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            ___fldiv
                           ___xxtofl
                        _ser_irs_rb0
                            _sprintf
                      _timer1_config
 ---------------------------------------------------------------------------------
 (1) _timer1_config                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32109
                                             74 BANK0      5     5      0
                                              8 BANK1     30    25      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7935
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     770
                                              7 COMMON     4     0      4
                                              0 BANK0      3     3      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2533
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ser_irs_rb0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     744
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     254
                                              3 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       6     5      1    1205
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     155
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _irs                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_DATA
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _ser_irs_rb0
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _timer1_config

 _irs (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      37       7       68.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      1E       9       31.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 14 08:30:31 2021

             ___fldiv@aexp 003F               ___fldiv@bexp 003E                          pc 0002  
             ___fldiv@sign 0037                         l65 1A48                         l90 0873  
                       l68 1A5F                         l84 086A                         l93 0877  
                       l95 087B                         l87 086E                         l89 0872  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0074  
      __Umul8_16@word_mpld 0078                        l130 1A9A                        l132 1A9B  
                      l124 1A83                        l125 1A86                        l126 1A8C  
                      l127 1A8D                        l135 1A79                        l151 1DC8  
                      l128 1A93                        l144 1FFF                        l160 1B79  
                      l129 1A94                        l138 10CC                        l154 1CB2  
                      l148 1FFF                        l340 0619                        l510 1D61  
                      l600 1D08                        l344 1AA8                        l530 1BDE  
                      l346 1AC0                        l514 136C                        l531 1BFA  
                      l515 12D1                        l532 1C0F                        l380 1E30  
                      l284 0FFF                        l525 135F                        l277 1577  
                      l702 1793                        l518 132F                        l535 1ECB  
                      l543 1A53                        l713 17F3                        l561 12AE  
                      l538 1F37                        l714 17FF                        l554 1E97  
                      l562 1220                        l650 1BBF                        l298 0043  
                      l539 1F50                        l547 1EAC                        l811 115A  
                      l572 12A1                        l660 1B33                        l717 1C5F  
                      l557 1EAC                        l813 11F1                        l565 1271  
                      l751 07EA                        l743 0768                        l727 0676  
                      l671 15DB                        l824 11BB                        l729 07F6  
                      l825 11C7                        l497 1135                        l675 1682  
                      l692 174D                        l684 17FF                        l677 1659  
                      l773 0C08                        l767 0C9C                        l696 1771  
                      l786 0816                        l779 0C90                        l788 0828  
                      _GIE 005F                        _RB0 0030                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        _irs 1AC1  
                      fsr0 0004                        _str 0190                        indf 0000  
             ___awmod@sign 0077               ___flmul@aexp 003A               ___flmul@bexp 003B  
              _sprintf$930 00AD               ___flmul@sign 0035               ___flmul@temp 0040  
             ___flmul@prod 003C            __end_of_LCD_CMD 1A7A             _LCD_Set_Cursor 1F51  
             ___fltol@exp1 005E                       l3010 12BC                       l3002 1296  
                     l3100 1E28                       l3020 12D2                       l3004 12A6  
                     l3110 1C0C                       l3030 12F6                       l3022 12DA  
                     l3014 12C5                       l4000 1F6A                       l3112 1C0E  
                     l3104 1BC0                       l3120 1EDF                       l3040 1329  
                     l3032 12FF                       l3024 12EB                       l3008 12AF  
                     l4010 1F95                       l4002 1F6F                       l3106 1BD6  
                     l3130 1F4D                       l3122 1EE7                       l3210 1139  
                     l3050 1344                       l3042 1333                       l3034 1311  
                     l3026 12ED                       l4020 1FC0                       l4012 1F9A  
                     l4004 1F75                       l3108 1BF2                       l3132 1F4F  
                     l3124 1EEB                       l3116 1EAD                       l3140 1A53  
                     l3212 113E                       l3060 1364                       l3052 134D  
                     l3036 131F                       l3028 12F2                       l2500 1B0A  
                     l4100 01D8                       l4030 1FEB                       l4022 1FC5  
                     l4014 1FA0                       l4006 1F7E                       l3126 1F0F  
                     l3118 1EC3                       l3150 1E47                       l3070 1AAF  
                     l3230 1184                       l3222 116B                       l3214 1142  
                     l3038 1320                       l2510 1B29                       l2502 1B0E  
                     l2430 1D09                       l4110 024D                       l4102 01E0  
                     l4032 1FF0                       l4024 1FCB                       l4008 1F84  
                     l4016 1FA9                       l4040 1B55                       l3128 1F13  
                     l3136 1A49                       l2600 164C                       l2520 1585  
                     l3160 1E6B                       l3152 1E5C                       l3144 1E31  
                     l3080 1DDB                       l3072 1AB6                       l3064 1A9C  
                     l3240 11B1                       l3232 1188                       l3224 1170  
                     l3216 1152                       l3048 133B                       l2504 1B12  
                     l2512 1B2F                       l2440 1D19                       l2432 1D0A  
                     l4200 05D4                       l4120 02AF                       l4112 0274  
                     l4104 01E0                       l4034 1FF6                       l4018 1FAF  
                     l4026 1FD4                       l4042 1B5D                       l3138 1A51  
                     l2610 166C                       l2602 1654                       l2530 159C  
                     l2522 1589                       l3170 1E85                       l3154 1E5D  
                     l3146 1E3E                       l3090 1DF8                       l3082 1DDE  
                     l3074 1ABC                       l3066 1A9E                       l3250 11E4  
                     l3242 11B5                       l3234 1196                       l3226 1174  
                     l3218 1162                       l3058 1354                       l2370 081F  
                     l2362 0803                       l2506 1B1C                       l2450 1D32  
                     l2442 1D1E                       l2434 1D0E                       l4202 05DA  
                     l4130 0359                       l4122 02CD                       l4114 0283  
                     l4106 0225                       l4050 0034                       l4210 05FF  
                     l4044 10C0                       l4028 1FDA                       l4036 1B34  
                     l2700 17D6                       l2620 168B                       l2612 166D  
                     l2604 165D                       l2540 15B2                       l2532 159D  
                     l2524 158A                       l2516 1578                       l3180 1EA1  
                     l3156 1E65                       l3092 1E0A                       l3084 1DE7  
                     l3068 1AA2                       l3252 11E8                       l3244 11BF  
                     l3236 119F                       l3228 117D                       l2372 0824  
                     l2364 0805                       l2508 1B22                       l2452 1D36  
                     l2444 1D24                       l2460 1D53                       l2436 1D13  
                     l4132 035B                       l4116 029E                       l4108 0232  
                     l4204 05E1                       l4212 0613                       l4060 0063  
                     l4052 003B                       l3260 1A54                       l4038 1B39  
                     l2710 17ED                       l2702 17DB                       l2630 16B3  
                     l2614 1676                       l2606 1666                       l2550 15C3  
                     l2542 15B3                       l2526 158F                       l2534 159F  
                     l2518 157F                       l3166 1E73                       l3158 1E67  
                     l3094 1E18                       l3086 1DEB                       l3078 1DC9  
                     l3254 11E9                       l3246 11C9                       l3238 11A6  
                     l2366 080C                       l2470 1B7E                       l2462 1D58  
                     l2454 1D40                       l2446 1D27                       l2438 1D15  
                     l4206 05F5                       l4150 03C9                       l4142 03A4  
                     l4126 02EC                       l4118 02A7                       l4070 00A6  
                     l4062 0075                       l4054 0040                       l4046 0029  
                     l4230 0832                       l4222 0829                       l3600 0708  
                     l2712 17EF                       l2704 17E3                       l2640 16CC  
                     l2632 16BC                       l2624 1694                       l2608 1668  
                     l2616 167A                       l2560 15E1                       l2552 15C8  
                     l2544 15B9                       l2536 15A7                       l2528 1594  
                     l3176 1E8C                       l3168 1E7C                       l3096 1E19  
                     l3088 1DEF                       l3248 11DF                       l2368 0810  
                     l2800 0BB4                       l2720 0943                       l2480 1B96  
                     l2472 1B84                       l2464 1D5D                       l2456 1D46  
                     l2448 1D2E                       l4160 0442                       l4152 03CE  
                     l4144 03A8                       l4128 02F5                       l4080 00EB  
                     l4072 00BF                       l4064 007B                       l4048 002E  
                     l4240 0852                       l4232 0837                       l4224 082D  
                     l3610 0729                       l3602 0709                       l3530 062B  
                     l3258 1A42                       l2714 17FA                       l2706 17E8  
                     l2650 172B                       l2634 16BE                       l2626 16AB  
                     l2618 1686                       l2642 16D1                       l2570 15F5  
                     l2562 15E5                       l2554 15D0                       l2546 15BD  
                     l2538 15AC                       l3178 1E9C                       l3098 1E22  
                     l2810 0BD9                       l2802 0BBD                       l2730 0958  
                     l2722 0949                       l2482 1BA7                       l2474 1B87  
                     l2490 1BBB                       l2458 1D4D                       l4170 0471  
                     l4162 044B                       l4154 040D                       l4146 03AE  
                     l4138 035D                       l4090 0131                       l4082 00F1  
                     l4074 00C3                       l4066 0089                       l4058 0047  
                     l4250 0886                       l4242 0861                       l4234 083C  
                     l4226 082E                       l3620 0742                       l3612 072B  
                     l3604 0717                       l3540 063F                       l3532 062C  
                     l3524 061A                       l2716 17FE                       l2708 17E9  
                     l2652 1730                       l2644 16E7                       l2636 16C2  
                     l2628 16AF                       l2580 1609                       l2572 15F9  
                     l2564 15E9                       l2556 15D1                       l2548 15BE  
                     l2820 0BF1                       l2812 0BE2                       l2804 0BCB  
                     l2740 0975                       l2732 0960                       l2724 094D  
                     l2484 1BAD                       l2476 1B8E                       l2468 1B7A  
                     l4180 049B                       l4172 0478                       l4164 044F  
                     l4156 042C                       l4148 03C0                       l4092 0150  
                     l4084 0104                       l4076 00C7                       l4068 008D  
                     l4260 0911                       l4252 08EA                       l4244 0866  
                     l4236 0841                       l4228 082F        LCD_Write_String@str 0078  
                     l3630 0765                       l3614 0734                       l3622 0748  
                     l3606 071B                       l3550 0658                       l3534 0631  
                     l3542 0641                       l3526 0621                       l2670 1778  
                     l2662 1763                       l2646 1725                       l2654 173F  
                     l2638 16C3                       l2590 161D                       l2582 160D  
                     l2574 15FD                       l2566 15ED                       l2558 15D3  
                     l2830 0C20                       l2822 0C05                       l2806 0BD4  
                     l2814 0BE8                       l2750 098C                       l2742 0979  
                     l2734 0962                       l2726 094E                       l2718 093C  
                     l2486 1BAE                       l2478 1B92                       l2494 1AFA  
                     l2902 1483                       l4190 0576                       l4182 049F  
                     l4174 047E                       l4166 0455                       l4158 0438  
                     l4094 019B                       l4086 0127                       l4078 00E0  
                     l4262 0919                       l4254 08FC                       l4246 0869  
                     l4238 0849                       l3640 0784                       l3624 074C  
                     l3616 0738                       l3608 0721                       l3560 066C  
                     l3552 0659                       l3544 0649                       l3536 0636  
                     l3528 0627                       l2680 1786                       l2672 177A  
                     l2664 176C                       l2656 1755                       l2648 1729  
                     l2592 1621                       l2584 1611                       l2576 1601  
                     l2568 15F1                       l2840 0C5B                       l2832 0C24  
                     l2816 0BEC                       l2808 0BD8                       l2752 098E  
                     l2744 097A                       l2736 096A                       l2728 0953  
                     l2488 1BB5                       l2496 1B00                       l2904 1489  
                     l4192 0582                       l4184 04BD                       l4176 048F  
                     l4168 0462                       l4096 01B4                       l4088 012B  
                     l4264 0920                       l4256 0904                       l4248 087C  
                     l3810 1A91                       l3650 07CD                       l3642 079D  
                     l3634 076D                       l3626 074D                       l3618 0739  
                     l3554 065E                       l3562 066E                       l3546 064E  
                     l3538 063E                       l2690 179D                       l2682 178A  
                     l2674 177F                       l2666 1770                       l2658 175A  
                     l2586 1615                       l2578 1605                       l2594 1625  
                     l2850 0C84                       l2842 0C6A                       l2834 0C3D  
                     l2826 0C0D                       l2818 0BED                       l2770 09FF  
                     l2762 09A9                       l2754 0996                       l2746 097F  
                     l2738 096F                       l2498 1B03                       l4186 0518  
                     l4194 05C1                       l4178 0494                       l4098 01BD  
                     l4338 005B                       l4266 092A                       l4258 090D  
                     l3812 1A98                       l3804 1A7B                       l3660 07E4  
                     l3652 07D1                       l3636 0772                       l3644 07A3  
                     l3628 0751                       l3580 06B7                       l3564 067E  
                     l3572 0697                       l3556 0663                       l3548 0654  
                     l2692 17AB                       l2684 1790                       l2668 1775  
                     l2676 1781                       l2596 1626                       l2588 1619  
                     l2852 0C88                       l2844 0C74                       l2828 0C12  
                     l2836 0C43                       l2780 0A7C                       l2772 0A2B  
                     l2764 09B9                       l2756 099B                       l2748 0984  
                     l2908 1534                       l3820 10D9                       l4196 05C9  
                     l4188 0557                       l4268 092F                       l3806 1A7F  
                     l3662 07E6                       l3654 07D9                       l3646 07B0  
                     l3638 0780                       l3590 06D6                       l3582 06BF  
                     l3574 069C                       l3566 068A                       l3558 066B  
                     l2694 17AF                       l2678 1785                       l2598 163D  
                     l2854 0C89                       l2846 0C76                       l2838 0C50  
                     l2790 0AFC                       l2782 0A99                       l2774 0A47  
                     l2766 09C6                       l2758 09A0                       l3830 10EA  
                     l3822 10DB                       l3814 10CD                       l3910 0E26  
                     l4198 05D0                       l3808 1A8A                       l3656 07DA  
                     l3648 07BE                       l3592 06E8                       l3584 06C7  
                     l3568 068E                       l2696 17CD                       l2688 1798  
                     l2952 11F2                       l2856 0C94                       l2848 0C7C  
                     l2792 0B29                       l2784 0AA9                       l2776 0A63  
                     l2768 09E3                       l3840 1102                       l3832 10F0  
                     l3824 10DF                       l3816 10D0                       l3904 0D97  
                     l3658 07E0                       l3594 06EC                       l3586 06CF  
                     l3578 06A5                       l2698 17D1                       l2970 1238  
                     l2954 1205                       l2794 0B39                       l2786 0AC6  
                     l2778 0A6C                       l3842 1113                       l3834 10F3  
                     l3850 1127                       l3826 10E4                       l3818 10D4  
                     l3922 0F44                       l3906 0D9E                       l3914 0E53  
                     l3860 1A64                       l3596 06ED                       l3588 06D1  
                     l3940 1CCD                       l3932 1CB3                       l2980 1262  
                     l2972 123D                       l2964 1221                       l2796 0B66  
                     l2788 0ADF                       l3852 112C                       l3844 1119  
                     l3836 10FA                       l3828 10E8                       l3924 0F4B  
                     l3916 0E5A                       l3862 1A6A                       l3870 1C6B  
                     l3598 06F6                       l3942 1CD1                       l3934 1CBB  
                     l3950 1D00                       l2982 1263                       l2974 1241  
                     l2966 1227                       l2958 120E                       l2798 0B8C  
                     l2894 1370                       l3854 1131                       l3846 111A  
                     l3838 10FE                       l3864 1A6D                       l3960 1D62  
                     l3880 1C8B                       l3872 1C6E                       l3944 1CE3  
                     l3936 1CC0                       l2992 127D                       l2984 126B  
                     l2976 124A                       l2968 1236                       l2896 1376  
                     l3848 1121                       l3928 0FD3                       l3866 1A76  
                     l3858 1A61                       l3970 1D75                       l3962 1D65  
                     l3890 1CA9                       l3882 1C94                       l3874 1C7C  
                     l3954 1C10                       l3946 1CF1                       l3938 1CC9  
                     l2994 1286                       l2986 1275                       l2978 1258  
                     l3980 1D98                       l3972 1D7E                       l3964 1D66  
                     l3884 1C9A                       l3876 1C7F                       l3868 1C61  
                     l3956 1C14                       l3948 1CFA                       l2996 128F  
                     l3892 0CA0                       l3990 1DB6                       l3982 1D9E  
                     l3974 1D84                       l3966 1D67                       l3886 1C9D  
                     l3878 1C88                       l3894 0CA4                       l3992 1DBC  
                     l3984 1DA4                       l3976 1D8D                       l3968 1D6D  
                     l3888 1CA6                       l3896 0CA6                       l3994 1DC2  
                     l3986 1DAA                       l3978 1D93                       l3898 0CAD  
                     ?_irs 0070                       l3988 1DB0                       l3996 1F54  
                     l3998 1F59                       STR_1 10A0                       STR_2 10B8  
                     STR_3 10B2                       STR_4 10AB                       u3120 0810  
                     u4000 0979                       u3121 080F                       u4001 0978  
                     u4010 097F                       u4011 097E                       u3140 0824  
                     u4020 0984                       u3300 1D19                       u3141 0823  
                     u4101 0A8B                       u4021 0983                       u3301 1D18  
                     u4102 0A92                       u4030 099B                       u3310 1D24  
                     u3135 0817                       u4111 0AB8                       u4103 0A99  
                     u4031 099A                       u3311 1D23                       u5000 1EC3  
                     u4112 0ABF                       u4040 09A0                       u3400 1B96  
                     u5001 1EC2                       u4113 0AC6                       u4041 099F  
                     u3401 1B95                       u5010 1EDF                       u3330 1D36  
                     u5011 1EDE                       u4131 0AEE                       u4051 09F1  
                     u3331 1D35                       u5020 1EEB                       u5100 1E6B  
                     u4300 0C33                       u4220 0BD8                       u4132 0AF5  
                     u4052 09F8                       u3420 1BA7                       u3500 1B2F  
                     u3340 1D40                       u5021 1EEA                       u5101 1E6A  
                     u4221 0BD7                       u4205 0BB6                       u4141 0B1B  
                     u4133 0AFC                       u4125 0AC8                       u4061 0A0D  
                     u4053 09FF                       u3421 1BA6                       u3501 1B2E  
                     u3341 1D3F                       u3325 1D28                       u3510 1589  
                     u5110 1E72                       u4310 0C50                       u4142 0B22  
                     u4062 0A14                       u5031 1EFA                       u3511 1588  
                     u5111 1E71                       u4311 0C4F                       u4215 0BCD  
                     u4151 0B48                       u4143 0B29                       u4071 0A39  
                     u4063 0A1B                       u3415 1B97                       u6000 0784  
                     u5040 1F13                       u5032 1EFB                       u3600 163D  
                     u3520 158F                       u4320 0C6A                       u4240 0BEC  
                     u4160 0B72                       u4152 0B4F                       u4072 0A40  
                     u3440 1BBB                       u3360 1D53                       u6001 0783  
                     u5041 1F12                       u5033 1F00                       u3601 163C  
                     u3521 158E                       u4321 0C69                       u4305 0C2E  
                     u4241 0BEB                       u4153 0B56                       u4081 0A55  
                     u4073 0A47                       u3441 1BBA                       u3425 1BA3  
                     u3361 1D52                       u3345 1D3C                       u6010 0793  
                     u5034 1F01                       u3610 1648                       u3530 1594  
                     u5130 1E84                       u4330 0C88                       u4250 0BF1  
                     u4082 0A5C                       u3450 1B00                       u3370 1D58  
                     u3290 1D0E                       u5051 1F22                       u5035 1F06  
                     u3611 1646                       u3531 1593                       u5131 1E83  
                     u4331 0C87                       u4315 0C4C                       u4251 0BF0  
                     u4235 0BDB                       u4171 0B7E                       u4083 0A63  
                     u3435 1BAF                       u3451 1AFF                       u3371 1D57  
                     u3355 1D47                       u3291 1D0D                       u6020 07B0  
                     u5060 1F4D                       u5052 1F23                       u5036 1F07  
                     u3700 16AF                       u3620 1649                       u3540 15B2  
                     u5140 1E8B                       u5300 11A5                       u4260 0C05  
                     u4180 0B9A                       u4172 0B85                       u3380 1B84  
                     u6021 07AF                       u5061 1F4C                       u5053 1F28  
                     u3701 16AE                       u3605 1639                       u3541 15B1  
                     u5141 1E8A                       u5125 1E74                       u5301 11A4  
                     u4325 0C66                       u4261 0C04                       u4173 0B8C  
                     u4165 0B6D                       u3381 1B83                       u4405 14A6  
                     u6030 07CD                       u5054 1F29                       u5070 1A51  
                     u3710 16B3                       u3630 165D                       u3550 15BD  
                     u4270 0C0C                       u3470 1B12                       u4350 1376  
                     u6031 07CC                       u6015 078E                       u5055 1F2E  
                     u5071 1A50                       u3711 16B2                       u3631 165C  
                     u3551 15BC                       u4271 0C0B                       u4191 0BA6  
                     u4095 0A65                       u3471 1B11                       u4415 14F3  
                     u4351 1375                       u6040 07E4                       u5056 1F2F  
                     u3720 16C2                       u3640 166C                       u3560 15C3  
                     u5160 1E9C                       u5080 1E3E                       u5320 11B5  
                     u5240 113E                       u4600 1205                       u4280 0C12  
                     u4192 0BAD                       u3480 1B1C                       u7000 0872  
                     u6041 07E3                       u6025 07AC                       u5065 1F49  
                     u3721 16C1                       u3641 166B                       u3561 15C2  
                     u5161 1E9B                       u5081 1E3D                       u5321 11B4  
                     u5241 113D                       u4601 1204                       u4281 0C11  
                     u4193 0BB4                       u4185 0B95                       u3481 1B1B  
                     u3465 1B04                       u4425 153F                       u7001 0871  
                     u3810 1770                       u3570 15C8                       u5170 1EA1  
                     u5090 1E55                       u5330 11BB                       u5250 1142  
                     u4610 121F                       u4290 0C24                       u7010 0877  
                     u6035 07C9                       u3811 176F                       u3571 15C7  
                     u5171 1EA0                       u5155 1E8E                       u5331 11BA  
                     u5315 11AA                       u5251 1141                       u4611 121E  
                     u4291 0C23                       u3395 1B88                       u7011 0876  
                     _PEIE 005E                       u3900 17BE                       u3820 1775  
                     u3740 16E7                       u3660 1682                       u3580 15E1  
                     u5340 11BF                       u5260 1162                       u4700 1295  
                     u7020 087B                       u3821 1774                       u3805 1765  
                     u3741 16E6                       u3661 1681                       u3581 15E0  
                     u5341 11BE                       u5261 1161                       u4701 1294  
                     u3485 1B18                       u4365 1393                       u7021 087A  
                     _INTE 005C                       u6230 1A7F                       u3910 17CD  
                     u3830 177F                       u3670 1686                       u3590 15E5  
                     u5350 11D4                       u4630 1258                       u4390 1489  
                     u6310 1102                       u7030 0892                       _INTF 0059  
                     u6231 1A7E                       u3911 17CC                       u3831 177E  
                     u3751 16FE                       u3743 16E3                       u3735 16C5  
                     u3671 1685                       u3655 166F                       u3591 15E4  
                     u5095 1E50                       u4631 1257                       u3495 1B23  
                     u4391 1488                       u4375 13ED                       u6311 1101  
                     u6240 1A8A                       u3920 17D6                       u3840 1785  
                     u3760 1712                       u3752 16FF                       u3680 168B  
                     u5360 11E4                       u5280 1183                       u4800 133A  
                     u4720 12A6                       u7040 08A2                       u6241 1A89  
                     u3921 17D5                       u3905 17B9                       u3841 1784  
                     u3761 1713                       u3753 1704                       u3681 168A  
                     u5361 11E3                       u5281 1182                       u4801 1339  
                     u4721 12A5                       u4625 1243                       u4385 1442  
                     u6305 10F4                       u7041 08A3                       u6250 1A91  
                     u3930 17DB                       u3850 178A                       u3770 1730  
                     u3762 1718                       u3754 1705                       u5370 11E8  
                     u4730 12BC                       u4650 1271                       u6330 1113  
                     u7050 0920                       u7042 08A8                       u6251 1A90  
                     u3931 17DA                       u3851 1789                       u3771 172F  
                     u3763 1719                       u3755 170A                       u3691 169D  
                     u5371 11E7                       u5355 11CF                       u5275 1175  
                     u4731 12BB                       u4715 1298                       u4651 1270  
                     u4635 1254                       u6331 1112                       u7051 091F  
                     u7043 08A9                       u7035 088D                       u6260 1A98  
                     u3940 17E8                       u3860 1790                       u3780 1755  
                     u3756 170B                       u3692 16A4                       u4900 1DDB  
                     u4820 134C                       u4740 12D0                       u4660 1275  
                     u7060 092F                       u6261 1A97                       u3941 17E7  
                     u3861 178F                       u3781 1754                       u3693 16AB  
                     u4901 1DDA                       u4821 134B                       u4741 12CF  
                     u4661 1274                       u4645 1264                       u6325 1103  
                     u6405 0CCF                       u7061 092E                       u7117 085A  
                     u3950 17ED                       u3870 1797                       u3790 175A  
                     u4830 1353                       u4670 127C                       u6350 1127  
                     u6270 10D4                       u6510 0F4B                       u6430 0D9E  
                     u7207 1A71                       u7127 1C83                       u3951 17EC  
                     u3871 1796                       u3791 1759                       u5295 1197  
                     u4831 1352                       u4815 133C                       u4671 127B  
                     u6351 1126                       u6335 110F                       u6271 10D3  
                     u6511 0F4A                       u6431 0D9D                       u6415 0D0B  
                     u5800 065E                       u3960 17FE                       u3880 179D  
                     u4920 1DEF                       u6600 1D00                       u4760 1311  
                     u6360 112C                       u6280 10DF                       u7137 1C8F  
                     u5801 065D                       u3961 17FD                       u3881 179C  
                     u4921 1DEE                       u6601 1CFF                       u4761 1310  
                     u6361 112B                       u6345 111B                       u6281 10DE  
                     u6505 0F03                       u6425 0D56                       i1l74 1AD4  
                     u6610 1F59                       u5810 0663                       u3890 17AF  
                     u4850 1364                       u4690 128E                       u3970 094D  
                     u6290 10F0                       u6611 1F58                       u7147 1CA1  
                     u5811 0662                       u3891 17AE                       u4915 1DE0  
                     u4851 1363                       u4755 12F8                       u4691 128D  
                     u3971 094C                       u6291 10EF                       u6700 1B67  
                     u5900 0721                       u5820 067E                       u4940 1E0A  
                     u4860 1AA2                       u4780 132F                       u3980 0953  
                     u6380 0CA4                       u7157 1CAD                       u5901 0720  
                     u5821 067D                       u4941 1E09                       u4861 1AA1  
                     u4845 1356                       u4781 132E                       u4765 130D  
                     u4685 127E                       u3981 0952                       u6525 0F5E  
                     u6445 0DB1                       u6381 0CA3                       i1l78 1AF3  
                     u6630 1F84                       u6710 1B79                       u5910 0729  
                     u5830 069C                       u6550 1CBB                       u4790 1333  
                     u3990 0958                       u6470 0E5A                       u6390 0CAD  
                     u7167 1D71                       u6631 1F83                       u6375 1C71  
                     u6711 1B78                       u5911 0728                       u5831 069B  
                     u4935 1DF1                       u6551 1CBA                       u4791 1332  
                     u4775 1322                       u3991 0957                       u6535 0F9A  
                     u6471 0E59                       u6455 0DED                       u6391 0CAC  
                     u5840 06D6                       u5760 062B                       u4960 1E28  
                     u6800 024D                       u6720 0034                       u7177 1D79  
                     u6625 1F61                       u5841 06D5                       u5761 062A  
                     u4961 1E27                       u4945 1E06                       u6545 0FD6  
                     u6465 0E29                       u6801 024C                       u6721 0033  
                     u6650 1FAF                       u5930 0738                       u5770 0631  
                     u4970 1BD6                       u6570 1CD1                       u4890 1ABC  
                     u6810 0274                       u6730 0075                       u7187 1D88  
                     u6651 1FAE                       u5931 0737                       u5771 0630  
                     u4971 1BD5                       u4955 1E1A                       u6571 1CD0  
                     u4891 1ABB                       u4875 1AA9                       u6811 0273  
                     u6731 0074                       u5780 0636                       u4980 1BF2  
                     u6580 1CE3                       u6900 0462                       u6820 0283  
                     u6740 00A6                       u7197 1D95                       u6645 1F8C  
                     u5925 072D                       u5781 0635                       u4981 1BF1  
                     u6581 1CE2                       u6565 1CC2                       u4885 1AB0  
                     u6485 0E7C                       u6901 0461                       u6821 0282  
                     u6741 00A5                       u6670 1FDA                       u5950 074C  
                     u5870 06EC                       u5790 0658                       u4990 1C0C  
                     u6910 0471                       u6830 029E                       u6750 00E0  
                     u6671 1FD9                       u5951 074B                       u5871 06EB  
                     u5855 06D8                       u5791 0657                       u4991 1C0B  
                     u6495 0EB8                       u6911 0470                       u6831 029D  
                     u6751 00DF                       u5960 0751                       u6920 0494  
                     u6760 012B                       u6665 1FB7                       u5961 0750  
                     u5945 073B                       u5865 06E1                       u6585 1CDF  
                     u6921 0493                       u6905 045E                       u6825 027F  
                     u6761 012A                       u6690 1B43                       u5970 0765  
                     u5890 0708                       u6850 03A3                       u6770 01B4  
                     u5971 0764                       u5891 0707                       u4995 1C08  
                     u6595 1CF2                       u6915 046D                       u6851 03A2  
                     u6771 01B3                       u5980 076C                       u6860 03AE  
                     u6780 01D8                       u6685 1FE2                       u5981 076B  
                     u5885 06EF                       u6861 03AD                       u6845 0362  
                     u6781 01D7                       u5990 0772                       u6950 05C8  
                     u6870 03C0                       u6790 0232                       u5991 0771  
                     u5895 0704                       u6951 05C7                       u6935 051D  
                     u6871 03BF                       u6855 039F                       u6791 0231  
                     u6960 05E0                       u6961 05DF                       u6945 0587  
                     u6970 05F5                       u6890 0441                       u6971 05F4  
                     u6891 0440                       u6795 022E                       u6980 0613  
                     u6981 0612                       u6885 03D3                       u6990 086E  
                     u6991 086D          ?_LCD_Write_String 0078                       _main 0829  
       __size_of_LCD_Clear 000D                       btemp 007E                       start 000C  
       ??_LCD_Write_String 0020            ___fldiv@new_exp 0038           __end_of_LCD_DATA 1A9C  
                    ??_irs 0070           __end_of_LCD_Init 1DC9              ___fltol@sign1 005D  
          __end_of___fladd 1800                      ?_main 0070            __end_of___fldiv 07F7  
          __end_of___awdiv 1136            __end_of___flneg 1A54            __end_of___awmod 1D62  
          __end_of___flmul 0C9D            __end_of___flsub 1C60            __end_of___fltol 1EAD  
          __end_of___lldiv 1E31            ___awdiv@divisor 0020            __end_of___llmod 1D09  
          __end_of___lwdiv 1BC0            __end_of___lwmod 1B34            ___awdiv@counter 0024  
                    _TMR1H 000F                      _TMR1L 000E                      _TRISD 0088  
   __end_of_LCD_Set_Cursor 2000            __end_of_dpowers 10A0                      _scale 0C9D  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 061A             _LCD_Write_Char 1C60            __initialization 000F  
             __end_of_main 093C                     ??_main 00C6          __end_of_LCD_Clear 10CD  
                ??_LCD_CMD 0073       __size_of__tdiv_to_l_ 00BD            ?_LCD_Set_Cursor 0076  
                   _ADCON1 009F           ___llmod@dividend 0076                     ?_scale 0042  
         ___awdiv@dividend 0022                     i1l3670 1AC5                     i1l3672 1AC9  
                   i1l3680 1ADC                     i1l3682 1AE2                     i1l3674 1ACF  
                   i1l3684 1AE8                     i1l3676 1AD8                     i1l3668 1AC1  
                   i1l3686 1AF0                     i1l3678 1ADB                     _INTEDG 040E  
                   u610_20 1AE8                     u610_21 1AE7                     u605_20 1AC5  
                   u605_21 1AC4                     u606_20 1AC9                     u606_21 1AC8  
                   u607_20 1ACF                     u607_21 1ACE                     u608_20 1AD8  
                   u608_21 1AD7                     u609_20 1AE2                     u609_21 1AE1  
                   _TMR1IE 0460                     _TMR1IF 0060                     _TMR1CS 0081  
                   _TMR1ON 0080                     _TRISD2 0442                     _TRISD3 0443  
         __end_of___xxtofl 11F2     __end_of_LCD_Write_Char 1CB3               ?_ser_irs_rb0 0070  
         __end_of__powers_ 1044                     ___flge 1EAD                     ___fleq 1BC0  
                ??___fladd 005E                     ___wmul 1A9C                  ??___fldiv 002E  
                ??___awdiv 0078                  ??___flneg 0076                  ??___awmod 0076  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 007A                  ??___llmod 007A                  ??___lwdiv 007B  
                ??___lwmod 0076                     _fround 136D           ___awdiv@quotient 0026  
          ___awmod@divisor 0072            ___awmod@counter 0076         __size_of__Umul8_16 0027  
                   saved_w 007E                 _fFrequency 00CE                  ??_sprintf 006A  
               ___flge@ff1 0072                 ___flge@ff2 0076                  ?_LCD_DATA 0070  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0072  
               ___fleq@ff1 0072                 ___fleq@ff2 0076    __end_of__initialization 0022  
                ?_LCD_Init 0070                 ___flneg@f1 0072                 ___fltol@f1 0055  
          ?_LCD_Write_Char 0070             __pcstackCOMMON 0070              __end_of_scale 1000  
               __div_to_l_ 12AF      __end_of_timer1_config 1A60            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0046            __div_to_l_@quot 0020  
               __pbssBANK1 00CE                 __pbssBANK3 0190                 ??_LCD_DATA 0072  
               ??_LCD_Init 0076              __div_to_l_@f1 0072              __div_to_l_@f2 0076  
        __end_of__Umul8_16 0829                 _chieu_quay 00D4                 __pmaintext 0829  
                  ?___flge 0072                    ?___fleq 0072                    ?___wmul 0072  
               __pintentry 0004                    ?_fround 0042  __size_of_LCD_Write_String 0046  
                  _T1CKPS0 0084                    _T1CKPS1 0085                    _LCD_CMD 1A60  
                ?___xxtofl 0072                 __stringtab 1000          __end_of__npowers_ 1078  
     __size_of_ser_irs_rb0 0007            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 1578                    ___fldiv 061A                    ___awdiv 10CD  
                  ___flneg 1A49                    ___awmod 1D09                    ___flmul 093C  
                  ___flsub 1C10                    ___fltol 1E31                    ___lldiv 1DC9  
          __size_of___wmul 0025                    ___llmod 1CB3                    ___lwdiv 1B7A  
               _fround$927 0051                 _fround$928 004D                    ___lwmod 1AFA  
          __size_of_fround 020B           ??_LCD_Set_Cursor 0077                    __ptext1 1A54  
                  __ptext2 0026                    __ptext3 0C9D                    __ptext4 1D09  
                  __ptext5 10CD                    __ptext6 136D                    __ptext7 1AFA  
                  __ptext8 1B7A                    __ptext9 093C                ?__div_to_l_ 0072  
                  _dpowers 1078               __size_of_irs 0039                 ??___xxtofl 0076  
         ___awmod@dividend 0074                  _LCD_Clear 10C0                    _sprintf 0026  
                  clrloop0 07F8       end_of_initialization 0022            ___lldiv@divisor 0072  
          ___lldiv@counter 0024             __tdiv_to_l_@f1 0072             __tdiv_to_l_@f2 0076  
            ??__tdiv_to_l_ 0020                  _PORTAbits 0005                  _PORTBbits 0006  
               LCD_CMD@CMD 0075                ___fladd@grs 0069              ___xxtofl@sign 0020  
                _TRISAbits 0085                  _TRISBbits 0086                 ?_LCD_Clear 0070  
              ___fldiv@grs 003A                ___fldiv@rem 0033          LCD_Write_String@i 0023  
         ??_LCD_Write_Char 0073                ___flmul@grs 0036          __size_of_LCD_DATA 0022  
        __size_of_LCD_Init 0067        __size_of__div_to_l_ 00BE             __end_of___flge 1F51  
           __end_of___fleq 1C10             __end_of___wmul 1AC1           _LCD_Write_String 1B34  
           __end_of_fround 1578        start_initialization 000F        __end_of__tdiv_to_l_ 12AF  
              __end_of_irs 1AFA            ___llmod@divisor 0072            ___llmod@counter 0020  
                 ??___flge 0020                   ??___fleq 0020                   ??___wmul 0076  
                __Umul8_16 0802                   ??_fround 0046              sprintf@tmpval 00BD  
                ___fladd@a 005A                  ___fladd@b 0056                   ?_LCD_CMD 0070  
               fround@prec 0055                  ___fldiv@a 0026                  ___fldiv@b 002A  
                ___flmul@a 002C                  ___flmul@b 0028                __pbssCOMMON 007B  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0                ??_LCD_Clear 0076  
        __size_of___xxtofl 00BC                sprintf@flag 00B2                sprintf@eexp 00BA  
              sprintf@fval 00C1                sprintf@prec 00B4           ___lwdiv@dividend 0079  
   _u32NumberOfCounterOver 00D2     __size_of_timer1_config 000C                   ?___fladd 0056  
                 ?___fldiv 0026                   ?___awdiv 0020                   ?___flneg 0072  
                 ?___awmod 0072                   ?___flmul 0028                   ?___flsub 00A0  
                 ?___fltol 0055                   ?___lldiv 0072                   ?___llmod 0072  
                __npowers_ 1044                 ?__Umul8_16 0072                   ?___lwdiv 0077  
                 ?___lwmod 0072                  __pstrings 1000                __tdiv_to_l_ 11F2  
             ??__div_to_l_ 007A                  _scale$929 0050           ___lwdiv@quotient 0020  
                 ?_sprintf 00A8             __size_of_scale 0363                   _LCD_DATA 1A7A  
        interrupt_function 0004                   _LCD_Init 1D62             ___wmul@product 0076  
                clear_ram0 07F7              ??_ser_irs_rb0 0072         __end_of__div_to_l_ 136D  
              __stringbase 100F          ___wmul@multiplier 0072           __size_of_LCD_CMD 001A  
            _timer1_config 1A54       LCD_Set_Cursor@column 0076   __end_of_LCD_Write_String 1B7A  
      LCD_Write_Char@High4 0076                ??__Umul8_16 0074           __size_of___fladd 0288  
      __end_of_ser_irs_rb0 1A49           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003A  
       __end_of__stringtab 1010               _NumberOfTick 00D5     _trang_thai_chuyen_dong 007B  
               sprintf@val 00B6                   ___xxtofl 1136             ?_timer1_config 0070  
          ___lwdiv@divisor 0077            ___lwdiv@counter 0022                   __ptext10 0802  
                 __ptext11 11F2                   __ptext20 1A49                   __ptext12 12AF  
                 __ptext21 1EAD                   __ptext13 1136                   __ptext30 1A60  
                 __ptext22 1BC0                   __ptext14 1A9C                   __ptext31 1A7A  
                 __ptext23 1A42                   __ptext15 1CB3                   __ptext32 1AC1  
                 __ptext24 061A                   __ptext16 1DC9                   __ptext25 1B34  
                 __ptext17 1E31                   __ptext26 1C60                   __ptext18 1C10  
                 __ptext27 1F51                   __ptext19 1578                   __ptext28 1D62  
                 __ptext29 10C0                   __powers_ 1010    __size_of_LCD_Set_Cursor 00AF  
         __size_of_sprintf 05F4              __size_of_main 0113        LCD_Set_Cursor@High4 0022  
       LCD_Write_Char@Data 0077         LCD_Write_Char@Low4 0075                   scale@scl 0054  
                 intlevel1 0000                  sprintf@ap 00B1           __tdiv_to_l_@exp1 0028  
         __tdiv_to_l_@cntr 0027                  sprintf@sp 00BC           __tdiv_to_l_@quot 0023  
         ___lwmod@dividend 0074           ___lldiv@dividend 0076                _ser_irs_rb0 1A42  
                stringcode 100A    __size_of_LCD_Write_Char 0053         LCD_Set_Cursor@Low4 0021  
       LCD_Set_Cursor@Temp 0023               ?__tdiv_to_l_ 0072     __Umul8_16@multiplicand 0072  
                 sprintf@c 00C5                   sprintf@f 00A8               LCD_DATA@Data 0072  
          ??_timer1_config 0072           ___lldiv@quotient 0020            ___lwmod@divisor 0072  
          ___lwmod@counter 0076                   stringdir 100A                   stringtab 1000  
        LCD_Set_Cursor@row 0020              ___fladd@signs 0066               ___fladd@aexp 0067  
             ___fladd@bexp 0068       __Umul8_16@multiplier 007A          __Umul8_16@product 0076  
