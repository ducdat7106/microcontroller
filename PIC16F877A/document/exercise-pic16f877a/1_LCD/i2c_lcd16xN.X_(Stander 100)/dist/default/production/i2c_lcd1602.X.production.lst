

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Dec 06 04:47:13 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243                           
   244                           	psect	idataBANK0
   245  05BE                     __pidataBANK0:
   246                           
   247                           ;initializer for _BackLight_State
   248  05BE  3408               	retlw	8
   249                           
   250                           	psect	nvBANK0
   251  0020                     __pnvBANK0:
   252  0020                     _i2c_add:
   253  0020                     	ds	1
   254  0013                     _SSPBUF	set	19
   255  0014                     _SSPCON	set	20
   256  0063                     _SSPIF	set	99
   257  009F                     _ADCON1	set	159
   258  0093                     _SSPADD	set	147
   259  0094                     _SSPSTAT	set	148
   260  0091                     _SSPCON2	set	145
   261  048B                     _RCEN	set	1163
   262  048E                     _ACKSTAT	set	1166
   263  048C                     _ACKEN	set	1164
   264  048D                     _ACKDT	set	1165
   265  048A                     _PEN	set	1162
   266  0489                     _RSEN	set	1161
   267  0488                     _SEN	set	1160
   268  043C                     _TRISC4	set	1084
   269  043B                     _TRISC3	set	1083
   270                           
   271                           	psect	strings
   272  0003                     __pstrings:
   273  0003                     stringtab:
   274  0003                     __stringtab:
   275  0003                     stringcode:	
   276                           ;	String table - string pointers are 1 byte each
   277                           
   278  0003                     stringdir:
   279  0003  3000               	movlw	high stringdir
   280  0004  008A               	movwf	10
   281  0005  0804               	movf	4,w
   282  0006  0A84               	incf	4,f
   283  0007  0782               	addwf	2,f
   284  0008                     __stringbase:
   285  0008  3400               	retlw	0
   286  0009                     __end_of__stringtab:
   287  0009                     STR_2:
   288  0009  3420               	retlw	32	;' '
   289  000A  3420               	retlw	32	;' '
   290  000B  3456               	retlw	86	;'V'
   291  000C  3469               	retlw	105	;'i'
   292  000D  3463               	retlw	99	;'c'
   293  000E  3468               	retlw	104	;'h'
   294  000F  3432               	retlw	50	;'2'
   295  0010  3430               	retlw	48	;'0'
   296  0011  3431               	retlw	49	;'1'
   297  0012  3430               	retlw	48	;'0'
   298  0013  3400               	retlw	0
   299  0014                     STR_1:
   300  0014  3420               	retlw	32	;' '
   301  0015  3420               	retlw	32	;' '
   302  0016  3444               	retlw	68	;'D'
   303  0017  3475               	retlw	117	;'u'
   304  0018  3463               	retlw	99	;'c'
   305  0019  3420               	retlw	32	;' '
   306  001A  3444               	retlw	68	;'D'
   307  001B  3461               	retlw	97	;'a'
   308  001C  3474               	retlw	116	;'t'
   309  001D  3400               	retlw	0
   310                           
   311                           	psect	cinit
   312  07F5                     start_initialization:	
   313                           ; #config settings
   314                           
   315  07F5                     __initialization:
   316                           
   317                           ; Initialize objects allocated to BANK0
   318  07F5  120A  118A  25BE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   319  07FA  00A1               	movwf	__pdataBANK0& (0+127)
   320                           
   321                           ; Clear objects allocated to COMMON
   322  07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   323  07FC                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  07FC                     __end_of__initialization:
   327  07FC  0183               	clrf	3
   328  07FD  120A  118A  2ED7   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  007D                     __pbssCOMMON:
   332  007D                     _RS:
   333  007D                     	ds	1
   334                           
   335                           	psect	dataBANK0
   336  0021                     __pdataBANK0:
   337  0021                     _BackLight_State:
   338  0021                     	ds	1
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:
   342  0070                     ?_IO_Expander_Write:
   343  0070                     ?_LCD_CMD:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_I2C_Master_Init:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_I2C_Master_Init:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_I2C_Master_Wait:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_I2C_Master_Wait:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_I2C_Master_Start:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ??_I2C_Master_Start:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_I2C_Master_Stop:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ??_I2C_Master_Stop:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_I2C_Master_Write:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ??_I2C_Master_Write:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_LCD_Init:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_LCD_Write_4Bit:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_LCD_Write_Char:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_LCD_Write_String:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_LCD_SL:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_LCD_SR:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_main:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     I2C_Master_Write@data:	
   398                           ; 1 bytes @ 0x0
   399                           
   400                           
   401                           ; 1 bytes @ 0x0
   402  0070                     	ds	1
   403  0071                     ??_IO_Expander_Write:
   404  0071                     IO_Expander_Write@Data:	
   405                           ; 1 bytes @ 0x1
   406                           
   407                           
   408                           ; 1 bytes @ 0x1
   409  0071                     	ds	1
   410  0072                     ??_LCD_Write_4Bit:
   411                           
   412                           ; 1 bytes @ 0x2
   413  0072                     	ds	1
   414  0073                     LCD_Write_4Bit@Nibble:
   415                           
   416                           ; 1 bytes @ 0x3
   417  0073                     	ds	1
   418  0074                     ??_LCD_CMD:
   419  0074                     ??_LCD_Write_Char:	
   420                           ; 1 bytes @ 0x4
   421                           
   422                           
   423                           ; 1 bytes @ 0x4
   424  0074                     	ds	1
   425  0075                     LCD_CMD@CMD:
   426  0075                     LCD_Write_Char@Data:	
   427                           ; 1 bytes @ 0x5
   428                           
   429                           
   430                           ; 1 bytes @ 0x5
   431  0075                     	ds	1
   432  0076                     ??_LCD_Init:
   433  0076                     ??_LCD_Write_String:	
   434                           ; 1 bytes @ 0x6
   435                           
   436  0076                     ?_LCD_Set_Cursor:	
   437                           ; 1 bytes @ 0x6
   438                           
   439  0076                     ??_LCD_SL:	
   440                           ; 1 bytes @ 0x6
   441                           
   442  0076                     ??_LCD_SR:	
   443                           ; 1 bytes @ 0x6
   444                           
   445  0076                     LCD_Set_Cursor@COL:	
   446                           ; 1 bytes @ 0x6
   447                           
   448  0076                     LCD_Write_String@i:	
   449                           ; 1 bytes @ 0x6
   450                           
   451                           
   452                           ; 2 bytes @ 0x6
   453  0076                     	ds	1
   454  0077                     ??_LCD_Set_Cursor:
   455                           
   456                           ; 1 bytes @ 0x7
   457  0077                     	ds	1
   458  0078                     LCD_Write_String@Str:
   459                           
   460                           ; 1 bytes @ 0x8
   461  0078                     	ds	1
   462  0079                     LCD_Init@I2C_Add:
   463  0079                     LCD_Set_Cursor@ROW:	
   464                           ; 1 bytes @ 0x9
   465                           
   466                           
   467                           ; 1 bytes @ 0x9
   468  0079                     	ds	1
   469  007A                     ??_main:
   470                           
   471                           ; 1 bytes @ 0xA
   472  007A                     	ds	3
   473                           
   474                           	psect	maintext
   475  06D7                     __pmaintext:	
   476 ;;
   477 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   478 ;;
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 14 in file "main_i2c_lcd.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : B00/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          3       0       0       0       0
   498 ;;      Totals:         3       0       0       0       0
   499 ;;Total ram usage:        3 bytes
   500 ;; Hardware stack levels required when called:    6
   501 ;; This function calls:
   502 ;;		_I2C_Master_Init
   503 ;;		_LCD_Init
   504 ;;		_LCD_SL
   505 ;;		_LCD_SR
   506 ;;		_LCD_Set_Cursor
   507 ;;		_LCD_Write_String
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _main
   515  06D7                     _main:
   516  06D7                     l1085:	
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   519                           
   520                           
   521                           ;main_i2c_lcd.c: 16:     ADCON1=0x07;
   522  06D7  3007               	movlw	7
   523  06D8  1683               	bsf	3,5	;RP0=1, select bank1
   524  06D9  1303               	bcf	3,6	;RP1=0, select bank1
   525  06DA  009F               	movwf	31	;volatile
   526  06DB                     l1087:
   527                           
   528                           ;main_i2c_lcd.c: 17:     I2C_Master_Init();
   529  06DB  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Init
   530  06E0                     l1089:
   531                           
   532                           ;main_i2c_lcd.c: 18:     LCD_Init(0x4E);
   533  06E0  304E               	movlw	78
   534  06E1  120A  118A  2757  120A  118A  	fcall	_LCD_Init
   535  06E6                     l1091:
   536                           
   537                           ;main_i2c_lcd.c: 20:     LCD_Set_Cursor(1,1);
   538  06E6  01F6               	clrf	LCD_Set_Cursor@COL
   539  06E7  0AF6               	incf	LCD_Set_Cursor@COL,f
   540  06E8  3001               	movlw	1
   541  06E9  120A  118A  26A1  120A  118A  	fcall	_LCD_Set_Cursor
   542  06EE                     l1093:
   543                           
   544                           ;main_i2c_lcd.c: 21:     LCD_Write_String("  Duc Dat");
   545  06EE  300C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   546  06EF  120A  118A  267C  120A  118A  	fcall	_LCD_Write_String
   547  06F4                     l1095:
   548                           
   549                           ;main_i2c_lcd.c: 22:     LCD_Set_Cursor(2,1);
   550  06F4  01F6               	clrf	LCD_Set_Cursor@COL
   551  06F5  0AF6               	incf	LCD_Set_Cursor@COL,f
   552  06F6  3002               	movlw	2
   553  06F7  120A  118A  26A1  120A  118A  	fcall	_LCD_Set_Cursor
   554  06FC                     l1097:
   555                           
   556                           ;main_i2c_lcd.c: 23:     LCD_Write_String("  Vich2010");
   557  06FC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   558  06FD  120A  118A  267C  120A  118A  	fcall	_LCD_Write_String
   559  0702                     l1099:
   560                           
   561                           ;main_i2c_lcd.c: 24:     _delay((unsigned long)((2500)*(16000000/4000.0)));
   562  0702  3033               	movlw	51
   563  0703  00FC               	movwf	??_main+2
   564  0704  30BB               	movlw	187
   565  0705  00FB               	movwf	??_main+1
   566  0706  30DF               	movlw	223
   567  0707  00FA               	movwf	??_main
   568  0708                     u157:
   569  0708  0BFA               	decfsz	??_main,f
   570  0709  2F08               	goto	u157
   571  070A  0BFB               	decfsz	??_main+1,f
   572  070B  2F08               	goto	u157
   573  070C  0BFC               	decfsz	??_main+2,f
   574  070D  2F08               	goto	u157
   575  070E  2F0F               	nop2
   576  070F                     l1101:
   577                           
   578                           ;main_i2c_lcd.c: 27:   {;main_i2c_lcd.c: 28:     LCD_SR();
   579  070F  120A  118A  25DC  120A  118A  	fcall	_LCD_SR
   580  0714                     l1103:
   581                           
   582                           ;main_i2c_lcd.c: 29:     _delay((unsigned long)((350)*(16000000/4000.0)));
   583  0714  3008               	movlw	8
   584  0715  00FC               	movwf	??_main+2
   585  0716  301B               	movlw	27
   586  0717  00FB               	movwf	??_main+1
   587  0718  3027               	movlw	39
   588  0719  00FA               	movwf	??_main
   589  071A                     u167:
   590  071A  0BFA               	decfsz	??_main,f
   591  071B  2F1A               	goto	u167
   592  071C  0BFB               	decfsz	??_main+1,f
   593  071D  2F1A               	goto	u167
   594  071E  0BFC               	decfsz	??_main+2,f
   595  071F  2F1A               	goto	u167
   596  0720                     l1105:
   597                           
   598                           ;main_i2c_lcd.c: 30:     LCD_SR();
   599  0720  120A  118A  25DC  120A  118A  	fcall	_LCD_SR
   600  0725                     l1107:
   601                           
   602                           ;main_i2c_lcd.c: 31:     _delay((unsigned long)((350)*(16000000/4000.0)));
   603  0725  3008               	movlw	8
   604  0726  00FC               	movwf	??_main+2
   605  0727  301B               	movlw	27
   606  0728  00FB               	movwf	??_main+1
   607  0729  3027               	movlw	39
   608  072A  00FA               	movwf	??_main
   609  072B                     u177:
   610  072B  0BFA               	decfsz	??_main,f
   611  072C  2F2B               	goto	u177
   612  072D  0BFB               	decfsz	??_main+1,f
   613  072E  2F2B               	goto	u177
   614  072F  0BFC               	decfsz	??_main+2,f
   615  0730  2F2B               	goto	u177
   616  0731                     l1109:
   617                           
   618                           ;main_i2c_lcd.c: 32:     LCD_SL();
   619  0731  120A  118A  25D1  120A  118A  	fcall	_LCD_SL
   620  0736                     l1111:
   621                           
   622                           ;main_i2c_lcd.c: 33:     _delay((unsigned long)((350)*(16000000/4000.0)));
   623  0736  3008               	movlw	8
   624  0737  00FC               	movwf	??_main+2
   625  0738  301B               	movlw	27
   626  0739  00FB               	movwf	??_main+1
   627  073A  3027               	movlw	39
   628  073B  00FA               	movwf	??_main
   629  073C                     u187:
   630  073C  0BFA               	decfsz	??_main,f
   631  073D  2F3C               	goto	u187
   632  073E  0BFB               	decfsz	??_main+1,f
   633  073F  2F3C               	goto	u187
   634  0740  0BFC               	decfsz	??_main+2,f
   635  0741  2F3C               	goto	u187
   636  0742                     l1113:
   637                           
   638                           ;main_i2c_lcd.c: 34:     LCD_SL();
   639  0742  120A  118A  25D1  120A  118A  	fcall	_LCD_SL
   640  0747                     l1115:
   641                           
   642                           ;main_i2c_lcd.c: 35:     _delay((unsigned long)((350)*(16000000/4000.0)));
   643  0747  3008               	movlw	8
   644  0748  00FC               	movwf	??_main+2
   645  0749  301B               	movlw	27
   646  074A  00FB               	movwf	??_main+1
   647  074B  3027               	movlw	39
   648  074C  00FA               	movwf	??_main
   649  074D                     u197:
   650  074D  0BFA               	decfsz	??_main,f
   651  074E  2F4D               	goto	u197
   652  074F  0BFB               	decfsz	??_main+1,f
   653  0750  2F4D               	goto	u197
   654  0751  0BFC               	decfsz	??_main+2,f
   655  0752  2F4D               	goto	u197
   656  0753  2F0F               	goto	l1101
   657  0754  120A  118A  2800   	ljmp	start
   658  0757                     __end_of_main:
   659                           
   660                           	psect	text1
   661  067C                     __ptext1:	
   662 ;; *************** function _LCD_Write_String *****************
   663 ;; Defined at:
   664 ;;		line 133 in file "i2c_lcd.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  Str             1    wreg     PTR unsigned char 
   667 ;;		 -> STR_2(11), STR_1(10), 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  Str             1    8[COMMON] PTR unsigned char 
   670 ;;		 -> STR_2(11), STR_1(10), 
   671 ;;  i               2    6[COMMON] int 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         3       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         3       0       0       0       0
   685 ;;Total ram usage:        3 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    5
   688 ;; This function calls:
   689 ;;		_LCD_Write_Char
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _LCD_Write_String
   697  067C                     _LCD_Write_String:
   698                           
   699                           ;incstack = 0
   700                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   701                           ;LCD_Write_String@Str stored from wreg
   702  067C  00F8               	movwf	LCD_Write_String@Str
   703  067D                     l1015:
   704                           
   705                           ;i2c_lcd.c: 133: void LCD_Write_String(char* Str);i2c_lcd.c: 134: {;i2c_lcd.c: 135:   fo
      +                          r(int i=0; Str[i]!='\0'; i++)
   706  067D  01F6               	clrf	LCD_Write_String@i
   707  067E  01F7               	clrf	LCD_Write_String@i+1
   708  067F  2E93               	goto	l1021
   709  0680                     l1017:
   710                           
   711                           ;i2c_lcd.c: 136:     LCD_Write_Char(Str[i]);
   712  0680  0876               	movf	LCD_Write_String@i,w
   713  0681  0778               	addwf	LCD_Write_String@Str,w
   714  0682  0084               	movwf	4
   715  0683  120A  118A  2003  120A  118A  	fcall	stringdir
   716  0688  120A  118A  2644  120A  118A  	fcall	_LCD_Write_Char
   717  068D                     l1019:
   718  068D  3001               	movlw	1
   719  068E  07F6               	addwf	LCD_Write_String@i,f
   720  068F  1803               	skipnc
   721  0690  0AF7               	incf	LCD_Write_String@i+1,f
   722  0691  3000               	movlw	0
   723  0692  07F7               	addwf	LCD_Write_String@i+1,f
   724  0693                     l1021:
   725  0693  0876               	movf	LCD_Write_String@i,w
   726  0694  0778               	addwf	LCD_Write_String@Str,w
   727  0695  0084               	movwf	4
   728  0696  120A  118A  2003  120A  118A  	fcall	stringdir
   729  069B  3A00               	xorlw	0
   730  069C  1D03               	skipz
   731  069D  2E9F               	goto	u131
   732  069E  2EA0               	goto	u130
   733  069F                     u131:
   734  069F  2E80               	goto	l1017
   735  06A0                     u130:
   736  06A0                     l99:
   737  06A0  0008               	return
   738  06A1                     __end_of_LCD_Write_String:
   739                           
   740                           	psect	text2
   741  0644                     __ptext2:	
   742 ;; *************** function _LCD_Write_Char *****************
   743 ;; Defined at:
   744 ;;		line 126 in file "i2c_lcd.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  Data            1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  Data            1    5[COMMON] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0
   760 ;;      Temps:          1       0       0       0       0
   761 ;;      Totals:         2       0       0       0       0
   762 ;;Total ram usage:        2 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    4
   765 ;; This function calls:
   766 ;;		_LCD_Write_4Bit
   767 ;; This function is called by:
   768 ;;		_LCD_Write_String
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _LCD_Write_Char
   774  0644                     _LCD_Write_Char:
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   778                           ;LCD_Write_Char@Data stored from wreg
   779  0644  00F5               	movwf	LCD_Write_Char@Data
   780  0645                     l973:
   781                           
   782                           ;i2c_lcd.c: 126: void LCD_Write_Char(char Data);i2c_lcd.c: 127: {;i2c_lcd.c: 128:   RS =
      +                           1;
   783  0645  01FD               	clrf	_RS
   784  0646  0AFD               	incf	_RS,f
   785  0647                     l975:
   786                           
   787                           ;i2c_lcd.c: 129:   LCD_Write_4Bit(Data & 0xF0);
   788  0647  0875               	movf	LCD_Write_Char@Data,w
   789  0648  39F0               	andlw	240
   790  0649  120A  118A  2611  120A  118A  	fcall	_LCD_Write_4Bit
   791                           
   792                           ;i2c_lcd.c: 130:   LCD_Write_4Bit((Data << 4) & 0xF0);
   793  064E  0875               	movf	LCD_Write_Char@Data,w
   794  064F  00F4               	movwf	??_LCD_Write_Char
   795  0650  3003               	movlw	3
   796  0651                     u125:
   797  0651  1003               	clrc
   798  0652  0DF4               	rlf	??_LCD_Write_Char,f
   799  0653  3EFF               	addlw	-1
   800  0654  1D03               	skipz
   801  0655  2E51               	goto	u125
   802  0656  1003               	clrc
   803  0657  0D74               	rlf	??_LCD_Write_Char,w
   804  0658  39F0               	andlw	240
   805  0659  120A  118A  2611  120A  118A  	fcall	_LCD_Write_4Bit
   806  065E                     l93:
   807  065E  0008               	return
   808  065F                     __end_of_LCD_Write_Char:
   809                           
   810                           	psect	text3
   811  06A1                     __ptext3:	
   812 ;; *************** function _LCD_Set_Cursor *****************
   813 ;; Defined at:
   814 ;;		line 139 in file "i2c_lcd.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  ROW             1    wreg     unsigned char 
   817 ;;  COL             1    6[COMMON] unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  ROW             1    9[COMMON] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         1       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0
   831 ;;      Temps:          2       0       0       0       0
   832 ;;      Totals:         4       0       0       0       0
   833 ;;Total ram usage:        4 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    5
   836 ;; This function calls:
   837 ;;		_LCD_CMD
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _LCD_Set_Cursor
   845  06A1                     _LCD_Set_Cursor:
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   849                           ;LCD_Set_Cursor@ROW stored from wreg
   850  06A1  00F9               	movwf	LCD_Set_Cursor@ROW
   851  06A2                     l1023:
   852                           
   853                           ;i2c_lcd.c: 139: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);i2c_lcd.c: 14
      +                          0: {;i2c_lcd.c: 141:   switch(ROW)
   854  06A2  2EC3               	goto	l1033
   855  06A3                     l1025:
   856                           
   857                           ;i2c_lcd.c: 144:       LCD_CMD(0xC0 + COL-1);
   858  06A3  0876               	movf	LCD_Set_Cursor@COL,w
   859  06A4  3EBF               	addlw	191
   860  06A5  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
   861                           
   862                           ;i2c_lcd.c: 145:       break;
   863  06AA  2ED6               	goto	l108
   864  06AB                     l1027:
   865                           
   866                           ;i2c_lcd.c: 147:       LCD_CMD(0x94 + COL-1);
   867  06AB  0876               	movf	LCD_Set_Cursor@COL,w
   868  06AC  3E93               	addlw	147
   869  06AD  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
   870                           
   871                           ;i2c_lcd.c: 148:       break;
   872  06B2  2ED6               	goto	l108
   873  06B3                     l1029:
   874                           
   875                           ;i2c_lcd.c: 150:       LCD_CMD(0xD4 + COL-1);
   876  06B3  0876               	movf	LCD_Set_Cursor@COL,w
   877  06B4  3ED3               	addlw	211
   878  06B5  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
   879                           
   880                           ;i2c_lcd.c: 151:       break;
   881  06BA  2ED6               	goto	l108
   882  06BB                     l1031:
   883                           
   884                           ;i2c_lcd.c: 154:       LCD_CMD(0x80 + COL-1);
   885  06BB  0876               	movf	LCD_Set_Cursor@COL,w
   886  06BC  3E7F               	addlw	127
   887  06BD  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
   888                           
   889                           ;i2c_lcd.c: 155:   }
   890  06C2  2ED6               	goto	l108
   891  06C3                     l1033:
   892  06C3  0879               	movf	LCD_Set_Cursor@ROW,w
   893  06C4  00F7               	movwf	??_LCD_Set_Cursor
   894  06C5  01F8               	clrf	??_LCD_Set_Cursor+1
   895                           
   896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   897                           ; Switch size 1, requested type "simple"
   898                           ; Number of cases is 1, Range of values is 0 to 0
   899                           ; switch strategies available:
   900                           ; Name         Instructions Cycles
   901                           ; simple_byte            4     3 (average)
   902                           ; direct_byte           11     8 (fixed)
   903                           ; jumptable            260     6 (fixed)
   904                           ;	Chosen strategy is simple_byte
   905  06C6  0878               	movf	??_LCD_Set_Cursor+1,w
   906  06C7  3A00               	xorlw	0	; case 0
   907  06C8  1903               	skipnz
   908  06C9  2ECB               	goto	l1137
   909  06CA  2EBB               	goto	l1031
   910  06CB                     l1137:
   911                           
   912                           ; Switch size 1, requested type "simple"
   913                           ; Number of cases is 3, Range of values is 2 to 4
   914                           ; switch strategies available:
   915                           ; Name         Instructions Cycles
   916                           ; simple_byte           10     6 (average)
   917                           ; direct_byte           20    11 (fixed)
   918                           ; jumptable            263     9 (fixed)
   919                           ;	Chosen strategy is simple_byte
   920  06CB  0877               	movf	??_LCD_Set_Cursor,w
   921  06CC  3A02               	xorlw	2	; case 2
   922  06CD  1903               	skipnz
   923  06CE  2EA3               	goto	l1025
   924  06CF  3A01               	xorlw	1	; case 3
   925  06D0  1903               	skipnz
   926  06D1  2EAB               	goto	l1027
   927  06D2  3A07               	xorlw	7	; case 4
   928  06D3  1903               	skipnz
   929  06D4  2EB3               	goto	l1029
   930  06D5  2EBB               	goto	l1031
   931  06D6                     l108:
   932  06D6  0008               	return
   933  06D7                     __end_of_LCD_Set_Cursor:
   934                           
   935                           	psect	text4
   936  05DC                     __ptext4:	
   937 ;; *************** function _LCD_SR *****************
   938 ;; Defined at:
   939 ;;		line 176 in file "i2c_lcd.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0
   955 ;;      Temps:          1       0       0       0       0
   956 ;;      Totals:         1       0       0       0       0
   957 ;;Total ram usage:        1 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    5
   960 ;; This function calls:
   961 ;;		_LCD_CMD
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _LCD_SR
   969  05DC                     _LCD_SR:
   970  05DC                     l1043:	
   971                           ;incstack = 0
   972                           ; Regs used in _LCD_SR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   973                           
   974                           
   975                           ;i2c_lcd.c: 178:   LCD_CMD(0x1C);
   976  05DC  301C               	movlw	28
   977  05DD  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
   978  05E2                     l1045:
   979                           
   980                           ;i2c_lcd.c: 179:   _delay((unsigned long)((40)*(16000000/4000000.0)));
   981  05E2  3035               	movlw	53
   982  05E3  00F6               	movwf	??_LCD_SR
   983  05E4                     u207:
   984  05E4  0BF6               	decfsz	??_LCD_SR,f
   985  05E5  2DE4               	goto	u207
   986  05E6                     l120:
   987  05E6  0008               	return
   988  05E7                     __end_of_LCD_SR:
   989                           
   990                           	psect	text5
   991  05D1                     __ptext5:	
   992 ;; *************** function _LCD_SL *****************
   993 ;; Defined at:
   994 ;;		line 170 in file "i2c_lcd.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          1       0       0       0       0
  1011 ;;      Totals:         1       0       0       0       0
  1012 ;;Total ram usage:        1 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    5
  1015 ;; This function calls:
  1016 ;;		_LCD_CMD
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _LCD_SL
  1024  05D1                     _LCD_SL:
  1025  05D1                     l1039:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _LCD_SL: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1028                           
  1029                           
  1030                           ;i2c_lcd.c: 172:   LCD_CMD(0x18);
  1031  05D1  3018               	movlw	24
  1032  05D2  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1033  05D7                     l1041:
  1034                           
  1035                           ;i2c_lcd.c: 173:   _delay((unsigned long)((40)*(16000000/4000000.0)));
  1036  05D7  3035               	movlw	53
  1037  05D8  00F6               	movwf	??_LCD_SL
  1038  05D9                     u217:
  1039  05D9  0BF6               	decfsz	??_LCD_SL,f
  1040  05DA  2DD9               	goto	u217
  1041  05DB                     l117:
  1042  05DB  0008               	return
  1043  05DC                     __end_of_LCD_SL:
  1044                           
  1045                           	psect	text6
  1046  0757                     __ptext6:	
  1047 ;; *************** function _LCD_Init *****************
  1048 ;; Defined at:
  1049 ;;		line 79 in file "i2c_lcd.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  I2C_Add         1    wreg     unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  I2C_Add         1    9[COMMON] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         1       0       0       0       0
  1065 ;;      Temps:          3       0       0       0       0
  1066 ;;      Totals:         4       0       0       0       0
  1067 ;;Total ram usage:        4 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    5
  1070 ;; This function calls:
  1071 ;;		_IO_Expander_Write
  1072 ;;		_LCD_CMD
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _LCD_Init
  1080  0757                     _LCD_Init:
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1084                           ;LCD_Init@I2C_Add stored from wreg
  1085  0757  00F9               	movwf	LCD_Init@I2C_Add
  1086  0758                     l977:
  1087                           
  1088                           ;i2c_lcd.c: 79: void LCD_Init(unsigned char I2C_Add);i2c_lcd.c: 80: {;i2c_lcd.c: 81:   i
      +                          2c_add = I2C_Add;
  1089  0758  0879               	movf	LCD_Init@I2C_Add,w
  1090  0759  00FF               	movwf	btemp+1
  1091  075A  087F               	movf	btemp+1,w
  1092  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1093  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1094  075D  00A0               	movwf	_i2c_add
  1095  075E                     l979:
  1096                           
  1097                           ;i2c_lcd.c: 82:   IO_Expander_Write(0x00);
  1098  075E  3000               	movlw	0
  1099  075F  120A  118A  265F  120A  118A  	fcall	_IO_Expander_Write
  1100  0764                     l981:
  1101                           
  1102                           ;i2c_lcd.c: 83:   _delay((unsigned long)((30)*(16000000/4000.0)));
  1103  0764  309C               	movlw	156
  1104  0765  00F7               	movwf	??_LCD_Init+1
  1105  0766  30D7               	movlw	215
  1106  0767  00F6               	movwf	??_LCD_Init
  1107  0768                     u227:
  1108  0768  0BF6               	decfsz	??_LCD_Init,f
  1109  0769  2F68               	goto	u227
  1110  076A  0BF7               	decfsz	??_LCD_Init+1,f
  1111  076B  2F68               	goto	u227
  1112  076C                     l983:
  1113                           
  1114                           ;i2c_lcd.c: 84:   LCD_CMD(0x03);
  1115  076C  3003               	movlw	3
  1116  076D  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1117  0772                     l985:
  1118                           
  1119                           ;i2c_lcd.c: 85:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1120  0772  301A               	movlw	26
  1121  0773  00F7               	movwf	??_LCD_Init+1
  1122  0774  30F8               	movlw	248
  1123  0775  00F6               	movwf	??_LCD_Init
  1124  0776                     u237:
  1125  0776  0BF6               	decfsz	??_LCD_Init,f
  1126  0777  2F76               	goto	u237
  1127  0778  0BF7               	decfsz	??_LCD_Init+1,f
  1128  0779  2F76               	goto	u237
  1129  077A  0000               	nop
  1130  077B                     l987:
  1131                           
  1132                           ;i2c_lcd.c: 86:   LCD_CMD(0x03);
  1133  077B  3003               	movlw	3
  1134  077C  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1135  0781                     l989:
  1136                           
  1137                           ;i2c_lcd.c: 87:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1138  0781  301A               	movlw	26
  1139  0782  00F7               	movwf	??_LCD_Init+1
  1140  0783  30F8               	movlw	248
  1141  0784  00F6               	movwf	??_LCD_Init
  1142  0785                     u247:
  1143  0785  0BF6               	decfsz	??_LCD_Init,f
  1144  0786  2F85               	goto	u247
  1145  0787  0BF7               	decfsz	??_LCD_Init+1,f
  1146  0788  2F85               	goto	u247
  1147  0789  0000               	nop
  1148  078A                     l991:
  1149                           
  1150                           ;i2c_lcd.c: 88:   LCD_CMD(0x03);
  1151  078A  3003               	movlw	3
  1152  078B  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1153  0790                     l993:
  1154                           
  1155                           ;i2c_lcd.c: 89:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1156  0790  301A               	movlw	26
  1157  0791  00F7               	movwf	??_LCD_Init+1
  1158  0792  30F8               	movlw	248
  1159  0793  00F6               	movwf	??_LCD_Init
  1160  0794                     u257:
  1161  0794  0BF6               	decfsz	??_LCD_Init,f
  1162  0795  2F94               	goto	u257
  1163  0796  0BF7               	decfsz	??_LCD_Init+1,f
  1164  0797  2F94               	goto	u257
  1165  0798  0000               	nop
  1166  0799                     l995:
  1167                           
  1168                           ;i2c_lcd.c: 90:   LCD_CMD(0x02);
  1169  0799  3002               	movlw	2
  1170  079A  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1171  079F                     l997:
  1172                           
  1173                           ;i2c_lcd.c: 91:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1174  079F  301A               	movlw	26
  1175  07A0  00F7               	movwf	??_LCD_Init+1
  1176  07A1  30F8               	movlw	248
  1177  07A2  00F6               	movwf	??_LCD_Init
  1178  07A3                     u267:
  1179  07A3  0BF6               	decfsz	??_LCD_Init,f
  1180  07A4  2FA3               	goto	u267
  1181  07A5  0BF7               	decfsz	??_LCD_Init+1,f
  1182  07A6  2FA3               	goto	u267
  1183  07A7  0000               	nop
  1184  07A8                     l999:
  1185                           
  1186                           ;i2c_lcd.c: 92:   LCD_CMD(0x20 | (2 << 2));
  1187  07A8  3028               	movlw	40
  1188  07A9  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1189  07AE                     l1001:
  1190                           
  1191                           ;i2c_lcd.c: 93:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1192  07AE  3002               	movlw	2
  1193  07AF  00F8               	movwf	??_LCD_Init+2
  1194  07B0  3004               	movlw	4
  1195  07B1  00F7               	movwf	??_LCD_Init+1
  1196  07B2  30BA               	movlw	186
  1197  07B3  00F6               	movwf	??_LCD_Init
  1198  07B4                     u277:
  1199  07B4  0BF6               	decfsz	??_LCD_Init,f
  1200  07B5  2FB4               	goto	u277
  1201  07B6  0BF7               	decfsz	??_LCD_Init+1,f
  1202  07B7  2FB4               	goto	u277
  1203  07B8  0BF8               	decfsz	??_LCD_Init+2,f
  1204  07B9  2FB4               	goto	u277
  1205  07BA  0000               	nop
  1206  07BB                     l1003:
  1207                           
  1208                           ;i2c_lcd.c: 94:   LCD_CMD(0x0C);
  1209  07BB  300C               	movlw	12
  1210  07BC  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1211  07C1                     l1005:
  1212                           
  1213                           ;i2c_lcd.c: 95:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1214  07C1  3002               	movlw	2
  1215  07C2  00F8               	movwf	??_LCD_Init+2
  1216  07C3  3004               	movlw	4
  1217  07C4  00F7               	movwf	??_LCD_Init+1
  1218  07C5  30BA               	movlw	186
  1219  07C6  00F6               	movwf	??_LCD_Init
  1220  07C7                     u287:
  1221  07C7  0BF6               	decfsz	??_LCD_Init,f
  1222  07C8  2FC7               	goto	u287
  1223  07C9  0BF7               	decfsz	??_LCD_Init+1,f
  1224  07CA  2FC7               	goto	u287
  1225  07CB  0BF8               	decfsz	??_LCD_Init+2,f
  1226  07CC  2FC7               	goto	u287
  1227  07CD  0000               	nop
  1228  07CE                     l1007:
  1229                           
  1230                           ;i2c_lcd.c: 96:   LCD_CMD(0x01);
  1231  07CE  3001               	movlw	1
  1232  07CF  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1233  07D4                     l1009:
  1234                           
  1235                           ;i2c_lcd.c: 97:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1236  07D4  3002               	movlw	2
  1237  07D5  00F8               	movwf	??_LCD_Init+2
  1238  07D6  3004               	movlw	4
  1239  07D7  00F7               	movwf	??_LCD_Init+1
  1240  07D8  30BA               	movlw	186
  1241  07D9  00F6               	movwf	??_LCD_Init
  1242  07DA                     u297:
  1243  07DA  0BF6               	decfsz	??_LCD_Init,f
  1244  07DB  2FDA               	goto	u297
  1245  07DC  0BF7               	decfsz	??_LCD_Init+1,f
  1246  07DD  2FDA               	goto	u297
  1247  07DE  0BF8               	decfsz	??_LCD_Init+2,f
  1248  07DF  2FDA               	goto	u297
  1249  07E0  0000               	nop
  1250  07E1                     l1011:
  1251                           
  1252                           ;i2c_lcd.c: 98:   LCD_CMD(0x04 | 0x02);
  1253  07E1  3006               	movlw	6
  1254  07E2  120A  118A  262A  120A  118A  	fcall	_LCD_CMD
  1255  07E7                     l1013:
  1256                           
  1257                           ;i2c_lcd.c: 99:   _delay((unsigned long)((50)*(16000000/4000.0)));
  1258  07E7  3002               	movlw	2
  1259  07E8  00F8               	movwf	??_LCD_Init+2
  1260  07E9  3004               	movlw	4
  1261  07EA  00F7               	movwf	??_LCD_Init+1
  1262  07EB  30BA               	movlw	186
  1263  07EC  00F6               	movwf	??_LCD_Init
  1264  07ED                     u307:
  1265  07ED  0BF6               	decfsz	??_LCD_Init,f
  1266  07EE  2FED               	goto	u307
  1267  07EF  0BF7               	decfsz	??_LCD_Init+1,f
  1268  07F0  2FED               	goto	u307
  1269  07F1  0BF8               	decfsz	??_LCD_Init+2,f
  1270  07F2  2FED               	goto	u307
  1271  07F3  0000               	nop
  1272  07F4                     l81:
  1273  07F4  0008               	return
  1274  07F5                     __end_of_LCD_Init:
  1275                           
  1276                           	psect	text7
  1277  062A                     __ptext7:	
  1278 ;; *************** function _LCD_CMD *****************
  1279 ;; Defined at:
  1280 ;;		line 119 in file "i2c_lcd.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  CMD             1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  CMD             1    5[COMMON] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         1       0       0       0       0
  1296 ;;      Temps:          1       0       0       0       0
  1297 ;;      Totals:         2       0       0       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    4
  1301 ;; This function calls:
  1302 ;;		_LCD_Write_4Bit
  1303 ;; This function is called by:
  1304 ;;		_LCD_Init
  1305 ;;		_LCD_Set_Cursor
  1306 ;;		_LCD_SL
  1307 ;;		_LCD_SR
  1308 ;;		_LCD_Clear
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _LCD_CMD
  1314  062A                     _LCD_CMD:
  1315                           
  1316                           ;incstack = 0
  1317                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1318                           ;LCD_CMD@CMD stored from wreg
  1319  062A  00F5               	movwf	LCD_CMD@CMD
  1320  062B                     l967:
  1321                           
  1322                           ;i2c_lcd.c: 119: void LCD_CMD(unsigned char CMD);i2c_lcd.c: 120: {;i2c_lcd.c: 121:   RS 
      +                          = 0;
  1323  062B  01FD               	clrf	_RS
  1324  062C                     l969:
  1325                           
  1326                           ;i2c_lcd.c: 122:   LCD_Write_4Bit(CMD & 0xF0);
  1327  062C  0875               	movf	LCD_CMD@CMD,w
  1328  062D  39F0               	andlw	240
  1329  062E  120A  118A  2611  120A  118A  	fcall	_LCD_Write_4Bit
  1330  0633                     l971:
  1331                           
  1332                           ;i2c_lcd.c: 123:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  1333  0633  0875               	movf	LCD_CMD@CMD,w
  1334  0634  00F4               	movwf	??_LCD_CMD
  1335  0635  3003               	movlw	3
  1336  0636                     u115:
  1337  0636  1003               	clrc
  1338  0637  0DF4               	rlf	??_LCD_CMD,f
  1339  0638  3EFF               	addlw	-1
  1340  0639  1D03               	skipz
  1341  063A  2E36               	goto	u115
  1342  063B  1003               	clrc
  1343  063C  0D74               	rlf	??_LCD_CMD,w
  1344  063D  39F0               	andlw	240
  1345  063E  120A  118A  2611  120A  118A  	fcall	_LCD_Write_4Bit
  1346  0643                     l90:
  1347  0643  0008               	return
  1348  0644                     __end_of_LCD_CMD:
  1349                           
  1350                           	psect	text8
  1351  0611                     __ptext8:	
  1352 ;; *************** function _LCD_Write_4Bit *****************
  1353 ;; Defined at:
  1354 ;;		line 110 in file "i2c_lcd.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  Nibble          1    wreg     unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  Nibble          1    3[COMMON] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       0       0       0       0
  1369 ;;      Locals:         1       0       0       0       0
  1370 ;;      Temps:          1       0       0       0       0
  1371 ;;      Totals:         2       0       0       0       0
  1372 ;;Total ram usage:        2 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    3
  1375 ;; This function calls:
  1376 ;;		_IO_Expander_Write
  1377 ;; This function is called by:
  1378 ;;		_LCD_CMD
  1379 ;;		_LCD_Write_Char
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _LCD_Write_4Bit
  1385  0611                     _LCD_Write_4Bit:
  1386                           
  1387                           ;incstack = 0
  1388                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1389                           ;LCD_Write_4Bit@Nibble stored from wreg
  1390  0611  00F3               	movwf	LCD_Write_4Bit@Nibble
  1391  0612                     l961:
  1392                           
  1393                           ;i2c_lcd.c: 110: void LCD_Write_4Bit(unsigned char Nibble);i2c_lcd.c: 111: {;i2c_lcd.c: 
      +                          113:   Nibble |= RS;
  1394  0612  087D               	movf	_RS,w
  1395  0613  00FF               	movwf	btemp+1
  1396  0614  087F               	movf	btemp+1,w
  1397  0615  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  1398  0616                     l963:
  1399                           
  1400                           ;i2c_lcd.c: 114:   IO_Expander_Write(Nibble | 0x04);
  1401  0616  0873               	movf	LCD_Write_4Bit@Nibble,w
  1402  0617  3804               	iorlw	4
  1403  0618  120A  118A  265F  120A  118A  	fcall	_IO_Expander_Write
  1404  061D                     l965:
  1405                           
  1406                           ;i2c_lcd.c: 115:   IO_Expander_Write(Nibble & 0xFB);
  1407  061D  0873               	movf	LCD_Write_4Bit@Nibble,w
  1408  061E  39FB               	andlw	251
  1409  061F  120A  118A  265F  120A  118A  	fcall	_IO_Expander_Write
  1410                           
  1411                           ;i2c_lcd.c: 116:   _delay((unsigned long)((50)*(16000000/4000000.0)));
  1412  0624  3042               	movlw	66
  1413  0625  00F2               	movwf	??_LCD_Write_4Bit
  1414  0626                     u317:
  1415  0626  0BF2               	decfsz	??_LCD_Write_4Bit,f
  1416  0627  2E26               	goto	u317
  1417  0628  0000               	nop
  1418  0629                     l87:
  1419  0629  0008               	return
  1420  062A                     __end_of_LCD_Write_4Bit:
  1421                           
  1422                           	psect	text9
  1423  065F                     __ptext9:	
  1424 ;; *************** function _IO_Expander_Write *****************
  1425 ;; Defined at:
  1426 ;;		line 102 in file "i2c_lcd.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  Data            1    wreg     unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  Data            1    1[COMMON] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0
  1443 ;;      Totals:         1       0       0       0       0
  1444 ;;Total ram usage:        1 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		_I2C_Master_Start
  1449 ;;		_I2C_Master_Stop
  1450 ;;		_I2C_Master_Write
  1451 ;; This function is called by:
  1452 ;;		_LCD_Init
  1453 ;;		_LCD_Write_4Bit
  1454 ;;		_Backlight
  1455 ;;		_noBacklight
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _IO_Expander_Write
  1461  065F                     _IO_Expander_Write:
  1462                           
  1463                           ;incstack = 0
  1464                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  1465                           ;IO_Expander_Write@Data stored from wreg
  1466  065F  00F1               	movwf	IO_Expander_Write@Data
  1467  0660                     l959:
  1468                           
  1469                           ;i2c_lcd.c: 102: void IO_Expander_Write(unsigned char Data);i2c_lcd.c: 103: {;i2c_lcd.c:
      +                           104:   I2C_Master_Start();
  1470  0660  120A  118A  25BF  120A  118A  	fcall	_I2C_Master_Start
  1471                           
  1472                           ;i2c_lcd.c: 105:   I2C_Master_Write(i2c_add);
  1473  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0667  0820               	movf	_i2c_add,w
  1476  0668  120A  118A  2601  120A  118A  	fcall	_I2C_Master_Write
  1477                           
  1478                           ;i2c_lcd.c: 106:   I2C_Master_Write(Data | BackLight_State);
  1479  066D  0871               	movf	IO_Expander_Write@Data,w
  1480  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1481  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0670  0421               	iorwf	_BackLight_State,w
  1483  0671  120A  118A  2601  120A  118A  	fcall	_I2C_Master_Write
  1484                           
  1485                           ;i2c_lcd.c: 107:   I2C_Master_Stop();
  1486  0676  120A  118A  25C8  120A  118A  	fcall	_I2C_Master_Stop
  1487  067B                     l84:
  1488  067B  0008               	return
  1489  067C                     __end_of_IO_Expander_Write:
  1490                           
  1491                           	psect	text10
  1492  0601                     __ptext10:	
  1493 ;; *************** function _I2C_Master_Write *****************
  1494 ;; Defined at:
  1495 ;;		line 55 in file "i2c_lcd.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  data            1    wreg     unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  data            1    0[COMMON] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         1       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         1       0       0       0       0
  1513 ;;Total ram usage:        1 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    1
  1516 ;; This function calls:
  1517 ;;		_I2C_Master_Wait
  1518 ;; This function is called by:
  1519 ;;		_IO_Expander_Write
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _I2C_Master_Write
  1525  0601                     _I2C_Master_Write:
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1529                           ;I2C_Master_Write@data stored from wreg
  1530  0601  00F0               	movwf	I2C_Master_Write@data
  1531  0602                     l955:
  1532                           
  1533                           ;i2c_lcd.c: 55: unsigned char I2C_Master_Write(unsigned char data);i2c_lcd.c: 56: {;i2c_
      +                          lcd.c: 57:   I2C_Master_Wait();
  1534  0602  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Wait
  1535  0607                     l957:
  1536                           
  1537                           ;i2c_lcd.c: 58:   SSPBUF = data;
  1538  0607  0870               	movf	I2C_Master_Write@data,w
  1539  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1541  060A  0093               	movwf	19	;volatile
  1542  060B                     l69:	
  1543                           ;i2c_lcd.c: 59:   while(!SSPIF);
  1544                           
  1545  060B  1D8C               	btfss	12,3	;volatile
  1546  060C  2E0E               	goto	u101
  1547  060D  2E0F               	goto	u100
  1548  060E                     u101:
  1549  060E  2E0B               	goto	l69
  1550  060F                     u100:
  1551  060F                     l71:
  1552                           
  1553                           ;i2c_lcd.c: 60:   SSPIF = 0;
  1554  060F  118C               	bcf	12,3	;volatile
  1555  0610                     l72:	
  1556                           ;i2c_lcd.c: 61:   return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1557                           
  1558  0610  0008               	return
  1559  0611                     __end_of_I2C_Master_Write:
  1560                           
  1561                           	psect	text11
  1562  05C8                     __ptext11:	
  1563 ;; *************** function _I2C_Master_Stop *****************
  1564 ;; Defined at:
  1565 ;;		line 35 in file "i2c_lcd.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0
  1582 ;;      Totals:         0       0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    1
  1586 ;; This function calls:
  1587 ;;		_I2C_Master_Wait
  1588 ;; This function is called by:
  1589 ;;		_IO_Expander_Write
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _I2C_Master_Stop
  1595  05C8                     _I2C_Master_Stop:
  1596  05C8                     l951:	
  1597                           ;incstack = 0
  1598                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1599                           
  1600                           
  1601                           ;i2c_lcd.c: 37:   I2C_Master_Wait();
  1602  05C8  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Wait
  1603  05CD                     l953:
  1604                           
  1605                           ;i2c_lcd.c: 38:   PEN = 1;
  1606  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  1607  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  1608  05CF  1511               	bsf	17,2	;volatile
  1609  05D0                     l60:
  1610  05D0  0008               	return
  1611  05D1                     __end_of_I2C_Master_Stop:
  1612                           
  1613                           	psect	text12
  1614  05BF                     __ptext12:	
  1615 ;; *************** function _I2C_Master_Start *****************
  1616 ;; Defined at:
  1617 ;;		line 23 in file "i2c_lcd.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    1
  1638 ;; This function calls:
  1639 ;;		_I2C_Master_Wait
  1640 ;; This function is called by:
  1641 ;;		_IO_Expander_Write
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _I2C_Master_Start
  1647  05BF                     _I2C_Master_Start:
  1648  05BF                     l947:	
  1649                           ;incstack = 0
  1650                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1651                           
  1652                           
  1653                           ;i2c_lcd.c: 25:   I2C_Master_Wait();
  1654  05BF  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Wait
  1655  05C4                     l949:
  1656                           
  1657                           ;i2c_lcd.c: 26:   SEN = 1;
  1658  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  1659  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  1660  05C6  1411               	bsf	17,0	;volatile
  1661  05C7                     l54:
  1662  05C7  0008               	return
  1663  05C8                     __end_of_I2C_Master_Start:
  1664                           
  1665                           	psect	text13
  1666  05F4                     __ptext13:	
  1667 ;; *************** function _I2C_Master_Wait *****************
  1668 ;; Defined at:
  1669 ;;		line 18 in file "i2c_lcd.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_I2C_Master_Start
  1693 ;;		_I2C_Master_Stop
  1694 ;;		_I2C_Master_Write
  1695 ;;		_I2C_Master_RepeatedStart
  1696 ;;		_I2C_ACK
  1697 ;;		_I2C_NACK
  1698 ;;		_I2C_Read_Byte
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _I2C_Master_Wait
  1704  05F4                     _I2C_Master_Wait:
  1705  05F4                     l943:	
  1706                           ;incstack = 0
  1707                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1708                           
  1709  05F4                     l48:	
  1710                           ;i2c_lcd.c: 20:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1711                           
  1712  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  1713  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  1714  05F6  1914               	btfsc	20,2	;volatile
  1715  05F7  2DF9               	goto	u81
  1716  05F8  2DFA               	goto	u80
  1717  05F9                     u81:
  1718  05F9  2DF4               	goto	l48
  1719  05FA                     u80:
  1720  05FA                     l945:
  1721  05FA  0811               	movf	17,w	;volatile
  1722  05FB  391F               	andlw	31
  1723  05FC  1D03               	btfss	3,2
  1724  05FD  2DFF               	goto	u91
  1725  05FE  2E00               	goto	u90
  1726  05FF                     u91:
  1727  05FF  2DF4               	goto	l48
  1728  0600                     u90:
  1729  0600                     l51:
  1730  0600  0008               	return
  1731  0601                     __end_of_I2C_Master_Wait:
  1732                           
  1733                           	psect	text14
  1734  05E7                     __ptext14:	
  1735 ;; *************** function _I2C_Master_Init *****************
  1736 ;; Defined at:
  1737 ;;		line 8 in file "i2c_lcd.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _I2C_Master_Init
  1766  05E7                     _I2C_Master_Init:
  1767  05E7                     l773:	
  1768                           ;incstack = 0
  1769                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1770                           
  1771                           
  1772                           ;i2c_lcd.c: 10:   SSPCON = 0x28;
  1773  05E7  3028               	movlw	40
  1774  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1775  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1776  05EA  0094               	movwf	20	;volatile
  1777  05EB                     l775:
  1778                           
  1779                           ;i2c_lcd.c: 11:   SSPCON2 = 0x00;
  1780  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  1781  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  1782  05ED  0191               	clrf	17	;volatile
  1783  05EE                     l777:
  1784                           
  1785                           ;i2c_lcd.c: 12:   SSPSTAT = 0x00;
  1786  05EE  0194               	clrf	20	;volatile
  1787                           
  1788                           ;i2c_lcd.c: 13:   SSPADD = ((16000000/4)/100000) - 1;
  1789  05EF  3027               	movlw	39
  1790  05F0  0093               	movwf	19	;volatile
  1791  05F1                     l779:
  1792                           
  1793                           ;i2c_lcd.c: 14:   TRISC3 = 1;
  1794  05F1  1587               	bsf	7,3	;volatile
  1795  05F2                     l781:
  1796                           
  1797                           ;i2c_lcd.c: 15:   TRISC4 = 1;
  1798  05F2  1607               	bsf	7,4	;volatile
  1799  05F3                     l45:
  1800  05F3  0008               	return
  1801  05F4                     __end_of_I2C_Master_Init:
  1802  007E                     btemp	set	126	;btemp
  1803  007E                     wtemp0	set	126
  1804                           
  1805                           	psect	config
  1806                           
  1807                           ;Config register CONFIG @ 0x2007
  1808                           ;	Oscillator Selection bits
  1809                           ;	FOSC = XT, XT oscillator
  1810                           ;	Watchdog Timer Enable bit
  1811                           ;	WDTE = OFF, WDT disabled
  1812                           ;	Power-up Timer Enable bit
  1813                           ;	PWRTE = ON, PWRT enabled
  1814                           ;	Brown-out Reset Enable bit
  1815                           ;	BOREN = ON, BOR enabled
  1816                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1817                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1818                           ;	Data EEPROM Memory Code Protection bit
  1819                           ;	CPD = OFF, Data EEPROM code protection off
  1820                           ;	Flash Program Memory Write Enable bits
  1821                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1822                           ;	In-Circuit Debugger Mode bit
  1823                           ;	DEBUG = 0x1, unprogrammed default
  1824                           ;	Flash Program Memory Code Protection bit
  1825                           ;	CP = OFF, Code protection off
  1826  2007                     	org	8199
  1827  2007  3FF1               	dw	16369

Data Sizes:
    Strings     21
    Constant    0
    Data        1
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_SR->_LCD_CMD
    _LCD_SL->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1149
                                             10 COMMON     3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                             _LCD_SL
                             _LCD_SR
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     289
                                              6 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     395
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SR                                               1     1      0     133
                                              6 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SL                                               1     1      0     133
                                              6 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     199
                                              6 COMMON     4     4      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_SL
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_SR
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Dec 06 04:47:13 2021

                         pc 0002                          l51 0600                          l60 05D0  
                        l45 05F3                          l54 05C7                          l71 060F  
                        l48 05F4                          l72 0610                          l81 07F4  
                        l90 0643                          l84 067B                          l69 060B  
                        l93 065E                          l87 0629                          l99 06A0  
                        _RS 007D                          u80 05FA                          u81 05F9  
                        u90 0600                          u91 05FF                          fsr 0004  
                       l120 05E6                         l108 06D6                         l117 05DB  
                       l781 05F2                         l773 05E7                         l775 05EB  
                       l943 05F4                         l951 05C8                         l777 05EE  
                       l945 05FA                         l953 05CD                         l961 0612  
                       l779 05F1                         l947 05BF                         l955 0602  
                       l963 0616                         l971 0633                         l949 05C4  
                       l957 0607                         l965 061D                         l981 0764  
                       l973 0645                         l959 0660                         l967 062B  
                       l991 078A                         l983 076C                         l975 0647  
                       l969 062C                         l993 0790                         l985 0772  
                       l977 0758                         l995 0799                         l987 077B  
                       l979 075E                         l997 079F                         l989 0781  
                       l999 07A8                         u100 060F                         u101 060E  
                       u130 06A0                         u115 0636                         u131 069F  
                       u125 0651                         u207 05E4                         u217 05D9  
                       u307 07ED                         u227 0768                         u317 0626  
                       u237 0776                         u157 0708                         u247 0785  
                       u167 071A                         _PEN 048A                         u257 0794  
                       u177 072B                         u267 07A3                         u187 073C  
                       u277 07B4                         u197 074D                         u287 07C7  
                       u297 07DA                         _SEN 0488                         fsr0 0004  
           __end_of_LCD_CMD 0644         LCD_Write_String@Str 0078              _LCD_Set_Cursor 06A1  
                      l1001 07AE                        l1011 07E1                        l1003 07BB  
                      l1013 07E7                        l1005 07C1                        l1021 0693  
                      l1101 070F                        l1007 07CE                        l1031 06BB  
                      l1023 06A2                        l1015 067D                        l1111 0736  
                      l1103 0714                        l1009 07D4                        l1041 05D7  
                      l1025 06A3                        l1033 06C3                        l1017 0680  
                      l1113 0742                        l1105 0720                        l1043 05DC  
                      l1027 06AB                        l1019 068D                        l1115 0747  
                      l1107 0725                        l1045 05E2                        l1029 06B3  
                      l1109 0731                        l1039 05D1                        l1137 06CB  
                      l1091 06E6                        l1093 06EE                        l1085 06D7  
                      l1095 06F4                        l1087 06DB                        l1097 06FC  
                      l1089 06E0                        l1099 0702                        STR_1 0014  
                      STR_2 0009                        _RCEN 048B                        _RSEN 0489  
         ?_LCD_Write_String 0070                        _main 06D7                        btemp 007E  
                      start 0000          ??_LCD_Write_String 0076        LCD_Write_4Bit@Nibble 0073  
          __end_of_LCD_Init 07F5            ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070  
          ?_I2C_Master_Stop 0070                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D                       _SSPIF 0063      __end_of_LCD_Set_Cursor 06D7  
                     pclath 000A                       status 0003                       wtemp0 007E  
            _LCD_Write_4Bit 0611              _LCD_Write_Char 0644             __initialization 07F5  
              __end_of_main 0757           _IO_Expander_Write 065F          ?_IO_Expander_Write 0070  
                    ??_main 007A                   ??_LCD_CMD 0074           ?_I2C_Master_Start 0070  
         ?_I2C_Master_Write 0070         ??_IO_Expander_Write 0071             ?_LCD_Set_Cursor 0076  
        ??_I2C_Master_Start 0070                      _ADCON1 009F          ??_I2C_Master_Write 0070  
                    _LCD_SL 05D1                      _LCD_SR 05DC                      _SSPADD 0093  
                    _TRISC3 043B                      _TRISC4 043C                      _SSPCON 0014  
                    _SSPBUF 0013      __end_of_LCD_Write_4Bit 062A      __end_of_LCD_Write_Char 065F  
 __end_of_IO_Expander_Write 067C     __end_of__initialization 07FC                   ?_LCD_Init 0070  
           ?_LCD_Write_4Bit 0070             ?_LCD_Write_Char 0070              __pcstackCOMMON 0070  
              __pidataBANK0 05BE                     ?_LCD_SL 0070                     ?_LCD_SR 0070  
                ??_LCD_Init 0076  __size_of_IO_Expander_Write 001D                  __pmaintext 06D7  
                   _ACKSTAT 048E   __size_of_LCD_Write_String 0025                     _LCD_CMD 062A  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 0003  
           __size_of_LCD_SL 000B             __size_of_LCD_SR 000B                     _i2c_add 0020  
          ??_LCD_Set_Cursor 0077                     __ptext1 067C                     __ptext2 0644  
                   __ptext3 06A1                     __ptext4 05DC                     __ptext5 05D1  
                   __ptext6 0757                     __ptext7 062A                     __ptext8 0611  
                   __ptext9 065F    __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009        end_of_initialization 07FC   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010                  LCD_CMD@CMD 0075            ??_LCD_Write_4Bit 0072  
         LCD_Write_String@i 0076            ??_LCD_Write_Char 0074              __end_of_LCD_SL 05DC  
            __end_of_LCD_SR 05E7           __size_of_LCD_Init 009E            _LCD_Write_String 067C  
       start_initialization 07F5                    ??_LCD_SL 0076                    ??_LCD_SR 0076  
         ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070  
               __pdataBANK0 0021                    ?_LCD_CMD 0070                 __pbssCOMMON 007D  
                 ___latbits 0002                   __pnvBANK0 0020            _I2C_Master_Start 05BF  
          _I2C_Master_Write 0601       IO_Expander_Write@Data 0071        I2C_Master_Write@data 0070  
                 __pstrings 0003                    _LCD_Init 0757                 __stringbase 0008  
          __size_of_LCD_CMD 001A    __end_of_LCD_Write_String 06A1          __end_of__stringtab 0009  
           _I2C_Master_Init 05E7             _I2C_Master_Wait 05F4             _I2C_Master_Stop 05C8  
                  __ptext10 0601                    __ptext11 05C8                    __ptext12 05BF  
                  __ptext13 05F4                    __ptext14 05E7     __size_of_LCD_Set_Cursor 0036  
           _BackLight_State 0021               __size_of_main 0080    __end_of_I2C_Master_Start 05C8  
  __end_of_I2C_Master_Write 0611          LCD_Write_Char@Data 0075                   stringcode 0003  
   __size_of_LCD_Write_4Bit 0019     __size_of_LCD_Write_Char 001B     __end_of_I2C_Master_Init 05F4  
   __end_of_I2C_Master_Wait 0601     __end_of_I2C_Master_Stop 05D1             LCD_Init@I2C_Add 0079  
                  stringdir 0003                    stringtab 0003           LCD_Set_Cursor@COL 0076  
         LCD_Set_Cursor@ROW 0079  
