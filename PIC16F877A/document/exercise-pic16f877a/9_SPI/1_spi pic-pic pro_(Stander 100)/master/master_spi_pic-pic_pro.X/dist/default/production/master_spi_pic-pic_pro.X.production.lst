

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 14 06:11:28 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0013                     _SSPBUF	set	19
   229  0014                     _SSPCON	set	20
   230  0007                     _PORTCbits	set	7
   231  0006                     _PORTBbits	set	6
   232  0008                     _PORTD	set	8
   233  0094                     _SSPSTATbits	set	148
   234  0094                     _SSPSTAT	set	148
   235  0087                     _TRISCbits	set	135
   236  0088                     _TRISD	set	136
   237  009F                     _ADCON1	set	159
   238  043B                     _TRISC3	set	1083
   239  043D                     _TRISC5	set	1085
   240  040F                     _nRBPU	set	1039
   241                           
   242                           	psect	cinit
   243  07FC                     start_initialization:	
   244                           ; #config settings
   245                           
   246  07FC                     __initialization:
   247  07FC                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  07FC                     __end_of__initialization:
   251  07FC  0183               	clrf	3
   252  07FD  120A  118A  2F7D   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_SPI_Init_Advanced:
   257  0070                     ?_SPI_Write:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ??_SPI_Write:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_SPI_Read:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ??_SPI_Read:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_SPI_ReceiveWait:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ??_SPI_ReceiveWait:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     SPI_Init_Advanced@sDataSample:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     SPI_Write@dat:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286  0070                     	ds	1
   287  0071                     SPI_Init_Advanced@sClockIdle:
   288                           
   289                           ; 1 bytes @ 0x1
   290  0071                     	ds	1
   291  0072                     SPI_Init_Advanced@sTransmitEdge:
   292                           
   293                           ; 1 bytes @ 0x2
   294  0072                     	ds	1
   295  0073                     ??_SPI_Init_Advanced:
   296  0073                     SPI_Init_Advanced@sType:	
   297                           ; 1 bytes @ 0x3
   298                           
   299                           
   300                           ; 1 bytes @ 0x3
   301  0073                     	ds	1
   302  0074                     ??_main:
   303                           
   304                           ; 1 bytes @ 0x4
   305  0074                     	ds	3
   306  0077                     main@r_data:
   307                           
   308                           ; 1 bytes @ 0x7
   309  0077                     	ds	1
   310  0078                     main@w_data:
   311                           
   312                           ; 1 bytes @ 0x8
   313  0078                     	ds	1
   314                           
   315                           	psect	maintext
   316  077D                     __pmaintext:	
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 27 in file "main_master.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  w_data          1    8[COMMON] unsigned char 
   327 ;;  r_data          1    7[COMMON] unsigned char 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         2       0       0       0       0
   339 ;;      Temps:          3       0       0       0       0
   340 ;;      Totals:         5       0       0       0       0
   341 ;;Total ram usage:        5 bytes
   342 ;; Hardware stack levels required when called: 2
   343 ;; This function calls:
   344 ;;		_SPI_Init_Advanced
   345 ;;		_SPI_Read
   346 ;;		_SPI_Write
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _main
   354  077D                     _main:
   355  077D                     l741:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   358                           
   359                           
   360                           ;main_master.c: 29:     ADCON1 = 0x07;
   361  077D  3007               	movlw	7
   362  077E  1683               	bsf	3,5	;RP0=1, select bank1
   363  077F  1303               	bcf	3,6	;RP1=0, select bank1
   364  0780  009F               	movwf	31	;volatile
   365  0781                     l743:
   366                           
   367                           ;main_master.c: 30:     nRBPU = 0;
   368  0781  1381               	bcf	1,7	;volatile
   369  0782                     l745:
   370                           
   371                           ;main_master.c: 32:     TRISD = 0x00;
   372  0782  0188               	clrf	8	;volatile
   373  0783                     l747:
   374                           
   375                           ;main_master.c: 33:     PORTD = 0;
   376  0783  1283               	bcf	3,5	;RP0=0, select bank0
   377  0784  1303               	bcf	3,6	;RP1=0, select bank0
   378  0785  0188               	clrf	8	;volatile
   379  0786                     l749:
   380                           
   381                           ;main_master.c: 35:     TRISCbits.TRISC7 = 0;
   382  0786  1683               	bsf	3,5	;RP0=1, select bank1
   383  0787  1303               	bcf	3,6	;RP1=0, select bank1
   384  0788  1387               	bcf	7,7	;volatile
   385  0789                     l751:
   386                           
   387                           ;main_master.c: 37:     char w_data = 0;
   388  0789  01F8               	clrf	main@w_data
   389  078A                     l753:
   390  078A                     l755:
   391                           
   392                           ;main_master.c: 40:     SPI_Init_Advanced(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, S
      +                          PI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
   393  078A  01F0               	clrf	SPI_Init_Advanced@sDataSample
   394  078B  01F1               	clrf	SPI_Init_Advanced@sClockIdle
   395  078C  01F2               	clrf	SPI_Init_Advanced@sTransmitEdge
   396  078D  3020               	movlw	32
   397  078E  120A  118A  2767  120A  118A  	fcall	_SPI_Init_Advanced
   398  0793                     l757:
   399                           
   400                           ;main_master.c: 42:     {;main_master.c: 44:         if(!PORTBbits.RB0)
   401  0793  1283               	bcf	3,5	;RP0=0, select bank0
   402  0794  1303               	bcf	3,6	;RP1=0, select bank0
   403  0795  1806               	btfsc	6,0	;volatile
   404  0796  2F98               	goto	u61
   405  0797  2F99               	goto	u60
   406  0798                     u61:
   407  0798  2FAA               	goto	l763
   408  0799                     u60:
   409  0799                     l759:
   410                           
   411                           ;main_master.c: 45:         {;main_master.c: 46:             w_data++;
   412  0799  3001               	movlw	1
   413  079A  00F4               	movwf	??_main
   414  079B  0874               	movf	??_main,w
   415  079C  07F8               	addwf	main@w_data,f
   416  079D                     l761:
   417                           
   418                           ;main_master.c: 47:             _delay((unsigned long)((250)*(8000000/4000.0)));
   419  079D  3003               	movlw	3
   420  079E  00F6               	movwf	??_main+2
   421  079F  308A               	movlw	138
   422  07A0  00F5               	movwf	??_main+1
   423  07A1  3055               	movlw	85
   424  07A2  00F4               	movwf	??_main
   425  07A3                     u87:
   426  07A3  0BF4               	decfsz	??_main,f
   427  07A4  2FA3               	goto	u87
   428  07A5  0BF5               	decfsz	??_main+1,f
   429  07A6  2FA3               	goto	u87
   430  07A7  0BF6               	decfsz	??_main+2,f
   431  07A8  2FA3               	goto	u87
   432  07A9  2FAA               	nop2
   433  07AA                     l763:
   434                           
   435                           ;main_master.c: 49:         if(!PORTBbits.RB1)
   436  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   437  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   438  07AC  1886               	btfsc	6,1	;volatile
   439  07AD  2FAF               	goto	u71
   440  07AE  2FB0               	goto	u70
   441  07AF                     u71:
   442  07AF  2FBF               	goto	l769
   443  07B0                     u70:
   444  07B0                     l765:
   445                           
   446                           ;main_master.c: 50:         {;main_master.c: 51:             w_data--;
   447  07B0  3001               	movlw	1
   448  07B1  02F8               	subwf	main@w_data,f
   449  07B2                     l767:
   450                           
   451                           ;main_master.c: 52:             _delay((unsigned long)((250)*(8000000/4000.0)));
   452  07B2  3003               	movlw	3
   453  07B3  00F6               	movwf	??_main+2
   454  07B4  308A               	movlw	138
   455  07B5  00F5               	movwf	??_main+1
   456  07B6  3055               	movlw	85
   457  07B7  00F4               	movwf	??_main
   458  07B8                     u97:
   459  07B8  0BF4               	decfsz	??_main,f
   460  07B9  2FB8               	goto	u97
   461  07BA  0BF5               	decfsz	??_main+1,f
   462  07BB  2FB8               	goto	u97
   463  07BC  0BF6               	decfsz	??_main+2,f
   464  07BD  2FB8               	goto	u97
   465  07BE  2FBF               	nop2
   466  07BF                     l769:
   467                           
   468                           ;main_master.c: 55:         PORTCbits.RC7 = 0;
   469  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   470  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   471  07C1  1387               	bcf	7,7	;volatile
   472  07C2                     l771:
   473                           
   474                           ;main_master.c: 56:         _delay((unsigned long)((1)*(8000000/4000.0)));
   475  07C2  3003               	movlw	3
   476  07C3  00F5               	movwf	??_main+1
   477  07C4  3097               	movlw	151
   478  07C5  00F4               	movwf	??_main
   479  07C6                     u107:
   480  07C6  0BF4               	decfsz	??_main,f
   481  07C7  2FC6               	goto	u107
   482  07C8  0BF5               	decfsz	??_main+1,f
   483  07C9  2FC6               	goto	u107
   484  07CA  2FCB               	nop2
   485  07CB                     l773:
   486                           
   487                           ;main_master.c: 59:         {;main_master.c: 60:             SPI_Write(w_data);
   488  07CB  0878               	movf	main@w_data,w
   489  07CC  120A  118A  2751  120A  118A  	fcall	_SPI_Write
   490  07D1                     l775:
   491                           
   492                           ;main_master.c: 61:             _delay((unsigned long)((250)*(8000000/4000.0)));
   493  07D1  3003               	movlw	3
   494  07D2  00F6               	movwf	??_main+2
   495  07D3  308A               	movlw	138
   496  07D4  00F5               	movwf	??_main+1
   497  07D5  3055               	movlw	85
   498  07D6  00F4               	movwf	??_main
   499  07D7                     u117:
   500  07D7  0BF4               	decfsz	??_main,f
   501  07D8  2FD7               	goto	u117
   502  07D9  0BF5               	decfsz	??_main+1,f
   503  07DA  2FD7               	goto	u117
   504  07DB  0BF6               	decfsz	??_main+2,f
   505  07DC  2FD7               	goto	u117
   506  07DD  2FDE               	nop2
   507  07DE                     l777:
   508                           
   509                           ;main_master.c: 62:         };main_master.c: 64:         r_data = SPI_Read();
   510  07DE  120A  118A  275E  120A  118A  	fcall	_SPI_Read
   511  07E3  00F4               	movwf	??_main
   512  07E4  0874               	movf	??_main,w
   513  07E5  00F7               	movwf	main@r_data
   514  07E6                     l779:
   515                           
   516                           ;main_master.c: 65:         PORTD = r_data;
   517  07E6  0877               	movf	main@r_data,w
   518  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   519  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   520  07E9  0088               	movwf	8	;volatile
   521  07EA                     l781:
   522                           
   523                           ;main_master.c: 67:         PORTCbits.RC7 = 1;
   524  07EA  1787               	bsf	7,7	;volatile
   525  07EB                     l783:
   526                           
   527                           ;main_master.c: 69:         _delay((unsigned long)((100)*(8000000/4000.0)));
   528  07EB  3002               	movlw	2
   529  07EC  00F6               	movwf	??_main+2
   530  07ED  3004               	movlw	4
   531  07EE  00F5               	movwf	??_main+1
   532  07EF  30BA               	movlw	186
   533  07F0  00F4               	movwf	??_main
   534  07F1                     u127:
   535  07F1  0BF4               	decfsz	??_main,f
   536  07F2  2FF1               	goto	u127
   537  07F3  0BF5               	decfsz	??_main+1,f
   538  07F4  2FF1               	goto	u127
   539  07F5  0BF6               	decfsz	??_main+2,f
   540  07F6  2FF1               	goto	u127
   541  07F7  0000               	nop
   542  07F8  2F93               	goto	l757
   543  07F9  120A  118A  2800   	ljmp	start
   544  07FC                     __end_of_main:
   545                           
   546                           	psect	text1
   547  0751                     __ptext1:	
   548 ;; *************** function _SPI_Write *****************
   549 ;; Defined at:
   550 ;;		line 48 in file "spi.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  dat             1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  dat             1    0[COMMON] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         1       0       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _SPI_Write
   579  0751                     _SPI_Write:
   580                           
   581                           ;incstack = 0
   582                           ; Regs used in _SPI_Write: [wreg]
   583                           ;SPI_Write@dat stored from wreg
   584  0751  00F0               	movwf	SPI_Write@dat
   585  0752                     l673:
   586                           
   587                           ;spi.c: 48: void SPI_Write(char dat);spi.c: 49: {;spi.c: 50:     SSPBUF = dat;
   588  0752  0870               	movf	SPI_Write@dat,w
   589  0753  1283               	bcf	3,5	;RP0=0, select bank0
   590  0754  1303               	bcf	3,6	;RP1=0, select bank0
   591  0755  0093               	movwf	19	;volatile
   592  0756                     l61:
   593  0756  0008               	return
   594  0757                     __end_of_SPI_Write:
   595                           
   596                           	psect	text2
   597  075E                     __ptext2:	
   598 ;; *************** function _SPI_Read *****************
   599 ;; Defined at:
   600 ;;		line 77 in file "spi.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      unsigned char 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 1
   621 ;; This function calls:
   622 ;;		_SPI_ReceiveWait
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _SPI_Read
   630  075E                     _SPI_Read:
   631  075E                     l675:	
   632                           ;incstack = 0
   633                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   634                           
   635                           
   636                           ;spi.c: 79:     SPI_ReceiveWait();
   637  075E  120A  118A  2757  120A  118A  	fcall	_SPI_ReceiveWait
   638  0763                     l677:
   639                           
   640                           ;spi.c: 80:     return(SSPBUF);
   641  0763  1283               	bcf	3,5	;RP0=0, select bank0
   642  0764  1303               	bcf	3,6	;RP1=0, select bank0
   643  0765  0813               	movf	19,w	;volatile
   644  0766                     l69:
   645  0766  0008               	return
   646  0767                     __end_of_SPI_Read:
   647                           
   648                           	psect	text3
   649  0757                     __ptext3:	
   650 ;; *************** function _SPI_ReceiveWait *****************
   651 ;; Defined at:
   652 ;;		line 37 in file "spi.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		None
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_SPI_Read
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _SPI_ReceiveWait
   681  0757                     _SPI_ReceiveWait:
   682  0757                     l661:	
   683                           ;incstack = 0
   684                           ; Regs used in _SPI_ReceiveWait: []
   685                           
   686  0757                     l55:	
   687                           ;spi.c: 39:     while ( !SSPSTATbits.BF );
   688                           
   689  0757  1683               	bsf	3,5	;RP0=1, select bank1
   690  0758  1303               	bcf	3,6	;RP1=0, select bank1
   691  0759  1C14               	btfss	20,0	;volatile
   692  075A  2F5C               	goto	u11
   693  075B  2F5D               	goto	u10
   694  075C                     u11:
   695  075C  2F57               	goto	l55
   696  075D                     u10:
   697  075D                     l58:
   698  075D  0008               	return
   699  075E                     __end_of_SPI_ReceiveWait:
   700                           
   701                           	psect	text4
   702  0767                     __ptext4:	
   703 ;; *************** function _SPI_Init_Advanced *****************
   704 ;; Defined at:
   705 ;;		line 15 in file "spi.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  sType           1    wreg     enum E850
   708 ;;  sDataSample     1    0[COMMON] enum E858
   709 ;;  sClockIdle      1    1[COMMON] enum E862
   710 ;;  sTransmitEdg    1    2[COMMON] enum E866
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  sType           1    3[COMMON] enum E850
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         3       0       0       0       0
   723 ;;      Locals:         1       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0
   725 ;;      Totals:         4       0       0       0       0
   726 ;;Total ram usage:        4 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           
   736                           ;psect for function _SPI_Init_Advanced
   737  0767                     _SPI_Init_Advanced:
   738                           
   739                           ;incstack = 0
   740                           ; Regs used in _SPI_Init_Advanced: [wreg+status,2+status,0]
   741                           ;SPI_Init_Advanced@sType stored from wreg
   742  0767  00F3               	movwf	SPI_Init_Advanced@sType
   743  0768                     l731:
   744                           
   745                           ;spi.c: 15: void SPI_Init_Advanced(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Cloc
      +                          k_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 16: {;spi.c: 17:     TRISC5 =
      +                           0;
   746  0768  1683               	bsf	3,5	;RP0=1, select bank1
   747  0769  1303               	bcf	3,6	;RP1=0, select bank1
   748  076A  1287               	bcf	7,5	;volatile
   749                           
   750                           ;spi.c: 18:     if(sType & 0b00000100)
   751  076B  1D73               	btfss	SPI_Init_Advanced@sType,2
   752  076C  2F6E               	goto	u51
   753  076D  2F6F               	goto	u50
   754  076E                     u51:
   755  076E  2F73               	goto	l737
   756  076F                     u50:
   757  076F                     l733:
   758                           
   759                           ;spi.c: 19:     {;spi.c: 20:         SSPSTAT = sTransmitEdge;
   760  076F  0872               	movf	SPI_Init_Advanced@sTransmitEdge,w
   761  0770  0094               	movwf	20	;volatile
   762  0771                     l735:
   763                           
   764                           ;spi.c: 21:         TRISC3 = 1;
   765  0771  1587               	bsf	7,3	;volatile
   766                           
   767                           ;spi.c: 22:     }
   768  0772  2F77               	goto	l51
   769  0773                     l737:
   770                           
   771                           ;spi.c: 24:     {;spi.c: 25:         SSPSTAT = sDataSample | sTransmitEdge;
   772  0773  0870               	movf	SPI_Init_Advanced@sDataSample,w
   773  0774  0472               	iorwf	SPI_Init_Advanced@sTransmitEdge,w
   774  0775  0094               	movwf	20	;volatile
   775  0776                     l739:
   776                           
   777                           ;spi.c: 26:         TRISC3 = 0;
   778  0776  1187               	bcf	7,3	;volatile
   779  0777                     l51:	
   780                           ;spi.c: 27:     }
   781                           
   782                           
   783                           ;spi.c: 29:     SSPCON = sType | sClockIdle;
   784  0777  0873               	movf	SPI_Init_Advanced@sType,w
   785  0778  0471               	iorwf	SPI_Init_Advanced@sClockIdle,w
   786  0779  1283               	bcf	3,5	;RP0=0, select bank0
   787  077A  1303               	bcf	3,6	;RP1=0, select bank0
   788  077B  0094               	movwf	20	;volatile
   789  077C                     l52:
   790  077C  0008               	return
   791  077D                     __end_of_SPI_Init_Advanced:
   792  007E                     btemp	set	126	;btemp
   793  007E                     wtemp0	set	126
   794                           
   795                           	psect	config
   796                           
   797                           ;Config register CONFIG @ 0x2007
   798                           ;	Oscillator Selection bits
   799                           ;	FOSC = HS, HS oscillator
   800                           ;	Watchdog Timer Enable bit
   801                           ;	WDTE = OFF, WDT disabled
   802                           ;	Power-up Timer Enable bit
   803                           ;	PWRTE = ON, PWRT enabled
   804                           ;	Brown-out Reset Enable bit
   805                           ;	BOREN = ON, BOR enabled
   806                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   807                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   808                           ;	Data EEPROM Memory Code Protection bit
   809                           ;	CPD = OFF, Data EEPROM code protection off
   810                           ;	Flash Program Memory Write Enable bits
   811                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   812                           ;	In-Circuit Debugger Mode bit
   813                           ;	DEBUG = 0x1, unprogrammed default
   814                           ;	Flash Program Memory Code Protection bit
   815                           ;	CP = OFF, Code protection off
   816  2007                     	org	8199
   817  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init_Advanced

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     424
                                              4 COMMON     5     5      0
                  _SPI_Init_Advanced
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             0     0      0       0
                    _SPI_ReceiveWait
 ---------------------------------------------------------------------------------
 (2) _SPI_ReceiveWait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Advanced                                    4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init_Advanced
   _SPI_Read
     _SPI_ReceiveWait
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 14 06:11:28 2022

                   _SSPSTATbits 0094                              l51 0777                              l52 077C  
                            l61 0756                              l55 0757                              l58 075D  
                            l69 0766                              u10 075D                              u11 075C  
                            u50 076F                              u51 076E                              u60 0799  
                            u61 0798                              u70 07B0                              u71 07AF  
                            u87 07A3                              u97 07B8                             l731 0768  
                           l733 076F                             l661 0757                             l741 077D  
                           l735 0771                             l751 0789                             l743 0781  
                           l737 0773                             l673 0752                             l761 079D  
                           l753 078A                             l745 0782                             l739 0776  
                           l675 075E                             l771 07C2                             l763 07AA  
                           l755 078A                             l747 0783                             l677 0763  
                           l781 07EA                             l773 07CB                             l765 07B0  
                           l757 0793                             l749 0786                             l783 07EB  
                           l775 07D1                             l767 07B2                             l759 0799  
                           l777 07DE                             l769 07BF                             l779 07E6  
                           u107 07C6                             u117 07D7                             u127 07F1  
               _SPI_ReceiveWait 0757                            _main 077D                            btemp 007E  
                          start 0000                           ?_main 0070                           _PORTD 0008  
                         _TRISD 0088                           _nRBPU 040F      __size_of_SPI_Init_Advanced 0016  
              __end_of_SPI_Read 0767                           status 0003                           wtemp0 007E  
            __size_of_SPI_Write 0006                 __initialization 07FC                    __end_of_main 07FC  
       __end_of_SPI_ReceiveWait 075E                          ??_main 0074                          _ADCON1 009F  
                        _TRISC3 043B                          _TRISC5 043D                          _SSPCON 0014  
                        _SSPBUF 0013                    SPI_Write@dat 0070     SPI_Init_Advanced@sClockIdle 0071  
             __end_of_SPI_Write 0757         __end_of__initialization 07FC                  __pcstackCOMMON 0070  
                     ?_SPI_Read 0070                ?_SPI_ReceiveWait 0070                      __pmaintext 077D  
                    ??_SPI_Read 0070    SPI_Init_Advanced@sDataSample 0070                         _SSPSTAT 0094  
                       __ptext1 0751                         __ptext2 075E                         __ptext3 0757  
                       __ptext4 0767            end_of_initialization 07FC                       _PORTBbits 0006  
                     _PORTCbits 0007                       _TRISCbits 0087                       _SPI_Write 0751  
                    main@r_data 0077                      main@w_data 0078               __size_of_SPI_Read 0009  
           start_initialization 07FC                      ?_SPI_Write 0070                       ___latbits 0002  
      __size_of_SPI_ReceiveWait 0007                     ??_SPI_Write 0070                        _SPI_Read 075E  
             ??_SPI_ReceiveWait 0070                   __size_of_main 007F  SPI_Init_Advanced@sTransmitEdge 0072  
             _SPI_Init_Advanced 0767              ?_SPI_Init_Advanced 0070             ??_SPI_Init_Advanced 0073  
        SPI_Init_Advanced@sType 0073       __end_of_SPI_Init_Advanced 077D  
