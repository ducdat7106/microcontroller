

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Mon Mar 15 03:18:40 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0088                     	;# 
    72  0089                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK1
   214  072E                     __pidataBANK1:	
   215                           
   216                           ;initializer for ___cgram
   217  072E  340C               	retlw	12
   218  072F  3412               	retlw	18
   219  0730  3412               	retlw	18
   220  0731  340C               	retlw	12
   221  0732  3400               	retlw	0
   222  0733  3400               	retlw	0
   223  0734  3400               	retlw	0
   224  0735  3400               	retlw	0
   225  0736  3400               	retlw	0
   226  0737  3404               	retlw	4
   227  0738  340E               	retlw	14
   228  0739  341F               	retlw	31
   229  073A  340E               	retlw	14
   230  073B  3404               	retlw	4
   231  073C  3400               	retlw	0
   232  073D  3400               	retlw	0
   233  073E  3404               	retlw	4
   234  073F  3404               	retlw	4
   235  0740  3404               	retlw	4
   236  0741  3404               	retlw	4
   237  0742  341F               	retlw	31
   238  0743  340E               	retlw	14
   239  0744  3404               	retlw	4
   240  0745  3400               	retlw	0
   241  0746  340A               	retlw	10
   242  0747  3415               	retlw	21
   243  0748  3411               	retlw	17
   244  0749  340A               	retlw	10
   245  074A  3404               	retlw	4
   246  074B  3400               	retlw	0
   247  074C  3400               	retlw	0
   248  074D  3400               	retlw	0
   249  074E  340A               	retlw	10
   250  074F  341F               	retlw	31
   251  0750  341F               	retlw	31
   252  0751  340E               	retlw	14
   253  0752  3404               	retlw	4
   254  0753  3400               	retlw	0
   255  0754  3400               	retlw	0
   256  0755  3400               	retlw	0
   257  0756  3400               	retlw	0
   258  0757  3400               	retlw	0
   259  0758  3400               	retlw	0
   260  0759  3400               	retlw	0
   261  075A  3400               	retlw	0
   262  075B  3400               	retlw	0
   263  075C  3400               	retlw	0
   264  075D  3400               	retlw	0
   265  075E  3400               	retlw	0
   266  075F  3400               	retlw	0
   267  0760  3400               	retlw	0
   268  0761  3400               	retlw	0
   269  0762  3400               	retlw	0
   270  0763  3400               	retlw	0
   271  0764  3400               	retlw	0
   272  0765  3400               	retlw	0
   273  0766  3400               	retlw	0
   274  0767  3400               	retlw	0
   275  0768  3400               	retlw	0
   276  0769  3400               	retlw	0
   277  076A  3400               	retlw	0
   278  076B  3400               	retlw	0
   279  076C  3400               	retlw	0
   280  076D  3400               	retlw	0
   281  0006                     _PORTB	set	6
   282  0007                     _PORTCbits	set	7
   283  0008                     _PORTD	set	8
   284  005F                     _GIE	set	95
   285  005E                     _PEIE	set	94
   286  0029                     _RA1	set	41
   287  002A                     _RA2	set	42
   288  002B                     _RA3	set	43
   289  0090                     _T2CKPS0	set	144
   290  0091                     _T2CKPS1	set	145
   291  0061                     _TMR2IF	set	97
   292  0092                     _TMR2ON	set	146
   293  0093                     _TOUTPS0	set	147
   294  0094                     _TOUTPS1	set	148
   295  0095                     _TOUTPS2	set	149
   296  009F                     _ADCON1	set	159
   297  0092                     _PR2	set	146
   298  0085                     _TRISAbits	set	133
   299  0086                     _TRISB	set	134
   300  0087                     _TRISC	set	135
   301  0088                     _TRISD	set	136
   302  0461                     _TMR2IE	set	1121
   303                           
   304                           	psect	strings
   305  0800                     __pstrings:	
   306  0800                     stringtab:	
   307  0800                     __stringtab:	
   308  0800                     stringcode:	
   309                           ;	String table - string pointers are 1 byte each
   310                           
   311  0800                     stringdir:	
   312  0800  3008               	movlw	high stringdir
   313  0801  008A               	movwf	10
   314  0802  0804               	movf	4,w
   315  0803  0A84               	incf	4,f
   316  0804  0782               	addwf	2,f
   317  0805                     __stringbase:	
   318  0805  3400               	retlw	0
   319  0806                     __end_of__stringtab:	
   320  0806                     __stringdata:	
   321  0806                     STR_2:	
   322  0806  3447               	retlw	71	;'G'
   323  0807  3469               	retlw	105	;'i'
   324  0808  3461               	retlw	97	;'a'
   325  0809  3420               	retlw	32	;' '
   326  080A  3474               	retlw	116	;'t'
   327  080B  3472               	retlw	114	;'r'
   328  080C  3469               	retlw	105	;'i'
   329  080D  3420               	retlw	32	;' '
   330  080E  3449               	retlw	73	;'I'
   331  080F  343D               	retlw	61	;'='
   332  0810  3420               	retlw	32	;' '
   333  0811  3400               	retlw	0
   334  0812                     STR_3:	
   335  0812  3447               	retlw	71	;'G'
   336  0813  3469               	retlw	105	;'i'
   337  0814  3461               	retlw	97	;'a'
   338  0815  3420               	retlw	32	;' '
   339  0816  3474               	retlw	116	;'t'
   340  0817  3472               	retlw	114	;'r'
   341  0818  3469               	retlw	105	;'i'
   342  0819  3420               	retlw	32	;' '
   343  081A  3455               	retlw	85	;'U'
   344  081B  343D               	retlw	61	;'='
   345  081C  3420               	retlw	32	;' '
   346  081D  3400               	retlw	0
   347  081E                     STR_1:	
   348  081E  3444               	retlw	68	;'D'
   349  081F  346F               	retlw	111	;'o'
   350  0820  3420               	retlw	32	;' '
   351  0821  3455               	retlw	85	;'U'
   352  0822  342F               	retlw	47	;'/'
   353  0823  3449               	retlw	73	;'I'
   354  0824  3420               	retlw	32	;' '
   355  0825  342E               	retlw	46	;'.'
   356  0826  342E               	retlw	46	;'.'
   357  0827  342E               	retlw	46	;'.'
   358  0828  3400               	retlw	0
   359  0829                     __end_of__stringdata:	
   360                           
   361                           ; #config settings
   362  0000                     
   363                           	psect	cinit
   364  0015                     start_initialization:	
   365  0015                     __initialization:	
   366                           
   367                           ; Clear objects allocated to BANK0
   368  0015  1383               	bcf	3,7	;select IRP bank0
   369  0016  3048               	movlw	low __pbssBANK0
   370  0017  0084               	movwf	4
   371  0018  3060               	movlw	low (__pbssBANK0+24)
   372  0019  120A  158A  27AD   	fcall	clear_ram0
      +       120A  118A         
   373                           
   374                           ; Initialize objects allocated to BANK1
   375  001E  30E0               	movlw	low (__pdataBANK1+64)
   376  001F  00FD               	movwf	btemp+-1
   377  0020  3007               	movlw	high __pidataBANK1
   378  0021  00FE               	movwf	btemp
   379  0022  302E               	movlw	low __pidataBANK1
   380  0023  00FF               	movwf	btemp+1
   381  0024  30A0               	movlw	low __pdataBANK1
   382  0025  0084               	movwf	4
   383  0026  120A  158A  27B9   	fcall	init_ram0
   384  0029                     end_of_initialization:	
   385                           ;End of C runtime variable initialization code
   386                           
   387  0029                     __end_of__initialization:	
   388  0029  0183               	clrf	3
   389  002A  120A  118A  282D   	ljmp	_main	;jump to C main() function
   390                           
   391                           	psect	bssBANK0
   392  0048                     __pbssBANK0:	
   393  0048                     LCDWriteInt@F1160:	
   394  0048                     	ds	5
   395  004D                     _Dienap:	
   396  004D                     	ds	3
   397  0050                     _Dong:	
   398  0050                     	ds	3
   399  0053                     main@F1147:	
   400  0053                     	ds	3
   401  0056                     _count:	
   402  0056                     	ds	2
   403  0058                     _count1:	
   404  0058                     	ds	2
   405  005A                     _count_s:	
   406  005A                     	ds	2
   407  005C                     _i:	
   408  005C                     	ds	2
   409  005E                     _adc_ok:	
   410  005E                     	ds	1
   411  005F                     _do_dienap:	
   412  005F                     	ds	1
   413                           
   414                           	psect	dataBANK1
   415  00A0                     __pdataBANK1:	
   416  00A0                     ___cgram:	
   417  00A0                     	ds	64
   418                           
   419                           	psect	clrtext
   420  0FAD                     clear_ram0:	
   421                           ;	Called with FSR containing the base address, and
   422                           ;	W with the last address+1
   423                           
   424  0FAD  0064               	clrwdt	;clear the watchdog before getting into this loop
   425  0FAE                     clrloop0:	
   426  0FAE  0180               	clrf	0	;clear RAM location pointed to by FSR
   427  0FAF  0A84               	incf	4,f	;increment pointer
   428  0FB0  0604               	xorwf	4,w	;XOR with final address
   429  0FB1  1903               	btfsc	3,2	;have we reached the end yet?
   430  0FB2  3400               	retlw	0	;all done for this memory range, return
   431  0FB3  0604               	xorwf	4,w	;XOR again to restore value
   432  0FB4  2FAE               	goto	clrloop0	;do the next byte
   433                           
   434                           	psect	inittext
   435  0FB5                     init_fetch0:	
   436                           ;	Called with low address in FSR and high address in W
   437                           
   438  0FB5  087E               	movf	126,w
   439  0FB6  008A               	movwf	10
   440  0FB7  087F               	movf	127,w
   441  0FB8  0082               	movwf	2
   442  0FB9                     init_ram0:	
   443                           ;Called with:
   444                           ;	high address of idata address in btemp 
   445                           ;	low address of idata address in btemp+1 
   446                           ;	low address of data in FSR
   447                           ;	high address + 1 of data in btemp-1
   448                           
   449  0FB9  27B5  120A  158A   	fcall	init_fetch0
   450  0FBC  0080               	movwf	0
   451  0FBD  0A84               	incf	4,f
   452  0FBE  0804               	movf	4,w
   453  0FBF  067D               	xorwf	125,w
   454  0FC0  1903               	btfsc	3,2
   455  0FC1  3400               	retlw	0
   456  0FC2  0AFF               	incf	127,f
   457  0FC3  1903               	btfsc	3,2
   458  0FC4  0AFE               	incf	126,f
   459  0FC5  2FB9               	goto	init_ram0
   460                           
   461                           	psect	cstackCOMMON
   462  0070                     __pcstackCOMMON:	
   463  0070                     ?_LCDInit:	
   464  0070                     ?_InitADC:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  0070                     ?_LCDWriteString:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?_LCDBusyLoop:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_timer2_initialize:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ?_isr:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ?_ReadADC:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0070                     ?_main:	
   483                           ; 2 bytes @ 0x0
   484                           
   485  0070                     ?___ftpack:	
   486                           ; 2 bytes @ 0x0
   487                           
   488  0070                     ___ftpack@arg:	
   489                           ; 3 bytes @ 0x0
   490                           
   491                           
   492                           ; 3 bytes @ 0x0
   493  0070                     	ds	2
   494  0072                     ??_ReadADC:	
   495                           
   496                           ; 0 bytes @ 0x2
   497  0072                     	ds	1
   498  0073                     ___ftpack@exp:	
   499                           
   500                           ; 1 bytes @ 0x3
   501  0073                     	ds	1
   502  0074                     ReadADC@Channel:	
   503  0074                     ___ftpack@sign:	
   504                           ; 1 bytes @ 0x4
   505                           
   506                           
   507                           ; 1 bytes @ 0x4
   508  0074                     	ds	1
   509  0075                     ??___ftpack:	
   510  0075                     ReadADC@ADC_value:	
   511                           ; 0 bytes @ 0x5
   512                           
   513                           
   514                           ; 2 bytes @ 0x5
   515  0075                     	ds	2
   516  0077                     ReadADC@i:	
   517                           
   518                           ; 2 bytes @ 0x7
   519  0077                     	ds	1
   520  0078                     ?___ftdiv:	
   521  0078                     ?___ftmul:	
   522                           ; 3 bytes @ 0x8
   523                           
   524  0078                     ___ftdiv@f2:	
   525                           ; 3 bytes @ 0x8
   526                           
   527  0078                     ___ftmul@f1:	
   528                           ; 3 bytes @ 0x8
   529                           
   530                           
   531                           ; 3 bytes @ 0x8
   532  0078                     	ds	1
   533  0079                     ?___lwtoft:	
   534  0079                     ___lwtoft@c:	
   535                           ; 3 bytes @ 0x9
   536                           
   537                           
   538                           ; 2 bytes @ 0x9
   539  0079                     	ds	2
   540  007B                     ___ftdiv@f1:	
   541  007B                     ___ftmul@f2:	
   542                           ; 3 bytes @ 0xB
   543                           
   544                           
   545                           ; 3 bytes @ 0xB
   546  007B                     	ds	1
   547  007C                     ??___lwtoft:	
   548                           
   549                           ; 0 bytes @ 0xC
   550  007C                     	ds	2
   551                           
   552                           	psect	cstackBANK0
   553  0020                     __pcstackBANK0:	
   554  0020                     ??___ftdiv:	
   555  0020                     ??___ftmul:	
   556                           ; 0 bytes @ 0x0
   557                           
   558                           
   559                           ; 0 bytes @ 0x0
   560  0020                     	ds	4
   561  0024                     ___ftdiv@cntr:	
   562  0024                     ___ftmul@exp:	
   563                           ; 1 bytes @ 0x4
   564                           
   565                           
   566                           ; 1 bytes @ 0x4
   567  0024                     	ds	1
   568  0025                     ___ftdiv@f3:	
   569  0025                     ___ftmul@f3_as_product:	
   570                           ; 3 bytes @ 0x5
   571                           
   572                           
   573                           ; 3 bytes @ 0x5
   574  0025                     	ds	3
   575  0028                     ___ftdiv@exp:	
   576  0028                     ___ftmul@cntr:	
   577                           ; 1 bytes @ 0x8
   578                           
   579                           
   580                           ; 1 bytes @ 0x8
   581  0028                     	ds	1
   582  0029                     ___ftdiv@sign:	
   583  0029                     ___ftmul@sign:	
   584                           ; 1 bytes @ 0x9
   585                           
   586                           
   587                           ; 1 bytes @ 0x9
   588  0029                     	ds	1
   589  002A                     ??_isr:	
   590                           
   591                           ; 0 bytes @ 0xA
   592  002A                     	ds	4
   593  002E                     ??_InitADC:	
   594  002E                     ??_LCDBusyLoop:	
   595                           ; 0 bytes @ 0xE
   596                           
   597  002E                     ??_timer2_initialize:	
   598                           ; 0 bytes @ 0xE
   599                           
   600  002E                     ?___lwmod:	
   601                           ; 0 bytes @ 0xE
   602                           
   603  002E                     ?___fttol:	
   604                           ; 2 bytes @ 0xE
   605                           
   606  002E                     ___lwmod@divisor:	
   607                           ; 4 bytes @ 0xE
   608                           
   609  002E                     ___fttol@f1:	
   610                           ; 2 bytes @ 0xE
   611                           
   612                           
   613                           ; 3 bytes @ 0xE
   614  002E                     	ds	2
   615  0030                     LCDBusyLoop@busy:	
   616  0030                     ___lwmod@dividend:	
   617                           ; 1 bytes @ 0x10
   618                           
   619                           
   620                           ; 2 bytes @ 0x10
   621  0030                     	ds	1
   622  0031                     LCDBusyLoop@temp:	
   623                           
   624                           ; 1 bytes @ 0x11
   625  0031                     	ds	1
   626  0032                     ??___fttol:	
   627  0032                     ??___lwmod:	
   628                           ; 0 bytes @ 0x12
   629                           
   630  0032                     LCDBusyLoop@status:	
   631                           ; 0 bytes @ 0x12
   632                           
   633                           
   634                           ; 1 bytes @ 0x12
   635  0032                     	ds	1
   636  0033                     ?_LCDByte:	
   637  0033                     LCDByte@isdata:	
   638                           ; 0 bytes @ 0x13
   639                           
   640  0033                     ___lwmod@counter:	
   641                           ; 1 bytes @ 0x13
   642                           
   643                           
   644                           ; 1 bytes @ 0x13
   645  0033                     	ds	1
   646  0034                     ??_LCDByte:	
   647  0034                     ?___lwdiv:	
   648                           ; 0 bytes @ 0x14
   649                           
   650  0034                     ___lwdiv@divisor:	
   651                           ; 2 bytes @ 0x14
   652                           
   653                           
   654                           ; 2 bytes @ 0x14
   655  0034                     	ds	2
   656  0036                     LCDByte@hn:	
   657  0036                     ___fttol@sign1:	
   658                           ; 1 bytes @ 0x16
   659                           
   660  0036                     ___lwdiv@dividend:	
   661                           ; 1 bytes @ 0x16
   662                           
   663                           
   664                           ; 2 bytes @ 0x16
   665  0036                     	ds	1
   666  0037                     LCDByte@ln:	
   667  0037                     ___fttol@lval:	
   668                           ; 1 bytes @ 0x17
   669                           
   670                           
   671                           ; 4 bytes @ 0x17
   672  0037                     	ds	1
   673  0038                     ??___lwdiv:	
   674  0038                     LCDByte@c:	
   675                           ; 0 bytes @ 0x18
   676                           
   677                           
   678                           ; 1 bytes @ 0x18
   679  0038                     	ds	1
   680  0039                     LCDByte@temp:	
   681  0039                     ___lwdiv@quotient:	
   682                           ; 1 bytes @ 0x19
   683                           
   684                           
   685                           ; 2 bytes @ 0x19
   686  0039                     	ds	1
   687  003A                     ??_LCDInit:	
   688  003A                     ??_LCDWriteString:	
   689                           ; 0 bytes @ 0x1A
   690                           
   691  003A                     ?_LCDGotoXY:	
   692                           ; 0 bytes @ 0x1A
   693                           
   694  003A                     LCDGotoXY@y:	
   695                           ; 0 bytes @ 0x1A
   696                           
   697                           
   698                           ; 1 bytes @ 0x1A
   699  003A                     	ds	1
   700  003B                     ??_LCDGotoXY:	
   701  003B                     LCDWriteString@cc:	
   702                           ; 0 bytes @ 0x1B
   703                           
   704  003B                     ___fttol@exp1:	
   705                           ; 1 bytes @ 0x1B
   706                           
   707  003B                     ___lwdiv@counter:	
   708                           ; 1 bytes @ 0x1B
   709                           
   710                           
   711                           ; 1 bytes @ 0x1B
   712  003B                     	ds	1
   713  003C                     LCDInit@style:	
   714  003C                     LCDWriteString@msg:	
   715                           ; 1 bytes @ 0x1C
   716                           
   717  003C                     LCDGotoXY@x:	
   718                           ; 1 bytes @ 0x1C
   719                           
   720                           
   721                           ; 1 bytes @ 0x1C
   722  003C                     	ds	1
   723  003D                     LCDInit@__i:	
   724                           
   725                           ; 1 bytes @ 0x1D
   726  003D                     	ds	1
   727  003E                     ??_main:	
   728                           
   729                           ; 0 bytes @ 0x1E
   730  003E                     	ds	3
   731  0041                     _main$590:	
   732                           
   733                           ; 2 bytes @ 0x21
   734  0041                     	ds	2
   735  0043                     main@Digit:	
   736                           
   737                           ; 3 bytes @ 0x23
   738  0043                     	ds	3
   739  0046                     main@ADC_Value:	
   740                           
   741                           ; 2 bytes @ 0x26
   742  0046                     	ds	2
   743                           
   744                           	psect	maintext
   745  002D                     __pmaintext:	
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 67 in file "main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  Digit           3   35[BANK0 ] unsigned char [3]
   756 ;;  ADC_Value       2   38[BANK0 ] unsigned int 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2   66[COMMON] int 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 17F/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       7       0       0       0
   768 ;;      Temps:          0       3       0       0       0
   769 ;;      Totals:         0      10       0       0       0
   770 ;;Total ram usage:       10 bytes
   771 ;; Hardware stack levels required when called:    6
   772 ;; This function calls:
   773 ;;		_timer2_initialize
   774 ;;		_LCDInit
   775 ;;		_InitADC
   776 ;;		_LCDByte
   777 ;;		_LCDWriteString
   778 ;;		_LCDGotoXY
   779 ;;		___fttol
   780 ;;		___lwdiv
   781 ;;		___lwmod
   782 ;; This function is called by:
   783 ;;		Startup code after reset
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _main
   789  002D                     _main:	
   790                           
   791                           ;main.c: 68: unsigned char Digit[3] = { 0,0,0 };
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in _main: [allreg]
   795  002D  1283               	bcf	3,5	;RP0=0, select bank0
   796  002E  1303               	bcf	3,6	;RP1=0, select bank0
   797  002F  0853               	movf	main@F1147,w
   798  0030  00C3               	movwf	main@Digit
   799  0031  0854               	movf	main@F1147+1,w
   800  0032  00C4               	movwf	main@Digit+1
   801  0033  0855               	movf	main@F1147+2,w
   802  0034  00C5               	movwf	main@Digit+2
   803                           
   804                           ;main.c: 69: unsigned int ADC_Value = 0;
   805  0035  01C6               	clrf	main@ADC_Value
   806  0036  01C7               	clrf	main@ADC_Value+1
   807                           
   808                           ;main.c: 72: ADCON1 = 0x06;
   809  0037  3006               	movlw	6
   810  0038  1683               	bsf	3,5	;RP0=1, select bank1
   811  0039  1303               	bcf	3,6	;RP1=0, select bank1
   812  003A  009F               	movwf	31	;volatile
   813                           
   814                           ;main.c: 73: LCDInit(0B00000000);
   815  003B  3000               	movlw	0
   816  003C  120A  118A  25DD   	fcall	_LCDInit
      +       120A  118A         
   817                           
   818                           ;main.c: 74: InitADC();
   819  0041  120A  118A  27F9   	fcall	_InitADC
      +       120A  118A         
   820                           
   821                           ;main.c: 75: timer2_initialize ();
   822  0046  120A  118A  27E4   	fcall	_timer2_initialize
      +       120A  118A         
   823                           
   824                           ;main.c: 77: (LCDByte(0b00000001,0));
   825  004B  1283               	bcf	3,5	;RP0=0, select bank0
   826  004C  1303               	bcf	3,6	;RP1=0, select bank0
   827  004D  01B3               	clrf	?_LCDByte
   828  004E  3001               	movlw	1
   829  004F  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
   830                           
   831                           ;main.c: 79: LCDWriteString("Do U/I ...");
   832  0054  3019               	movlw	(STR_1-__stringbase)& (0+255)
   833  0055  120A  118A  2699   	fcall	_LCDWriteString
      +       120A  118A         
   834                           
   835                           ;main.c: 81: _delay((unsigned long)((100)*(16000000/4000.0)));
   836  005A  3003               	movlw	3
   837  005B  1283               	bcf	3,5	;RP0=0, select bank0
   838  005C  1303               	bcf	3,6	;RP1=0, select bank0
   839  005D  00C0               	movwf	??_main+2
   840  005E  3008               	movlw	8
   841  005F  00BF               	movwf	??_main+1
   842  0060  3078               	movlw	120
   843  0061  00BE               	movwf	??_main
   844  0062                     u1907:	
   845  0062  0BBE               	decfsz	??_main,f
   846  0063  2862               	goto	u1907
   847  0064  0BBF               	decfsz	??_main+1,f
   848  0065  2862               	goto	u1907
   849  0066  0BC0               	decfsz	??_main+2,f
   850  0067  2862               	goto	u1907
   851                           
   852                           ;main.c: 82: (LCDByte(0b00000001,0));
   853  0068  1283               	bcf	3,5	;RP0=0, select bank0
   854  0069  1303               	bcf	3,6	;RP1=0, select bank0
   855  006A  01B3               	clrf	?_LCDByte
   856  006B  3001               	movlw	1
   857  006C                     L1:	
   858  006C  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
   859  0071                     l1645:	
   860                           ;main.c: 83: while(1)
   861                           
   862                           
   863                           ;main.c: 84: {
   864                           ;main.c: 85: if(adc_ok&&count1==25)
   865  0071  1283               	bcf	3,5	;RP0=0, select bank0
   866  0072  1303               	bcf	3,6	;RP1=0, select bank0
   867  0073  085E               	movf	_adc_ok,w
   868  0074  1903               	btfsc	3,2
   869  0075  2871               	goto	l1645
   870  0076  3019               	movlw	25
   871  0077  0658               	xorwf	_count1,w
   872  0078  0459               	iorwf	_count1+1,w
   873  0079  1D03               	skipz
   874  007A  2871               	goto	l1645
   875                           
   876                           ;main.c: 86: {
   877                           ;main.c: 87: count1=0;
   878  007B  01D8               	clrf	_count1
   879  007C  01D9               	clrf	_count1+1
   880                           
   881                           ;main.c: 88: ADC_Value=(unsigned int)Dong;
   882  007D  0850               	movf	_Dong,w
   883  007E  00AE               	movwf	?___fttol
   884  007F  0851               	movf	_Dong+1,w
   885  0080  00AF               	movwf	?___fttol+1
   886  0081  0852               	movf	_Dong+2,w
   887  0082  00B0               	movwf	?___fttol+2
   888  0083  120A  118A  24E7   	fcall	___fttol
      +       120A  118A         
   889  0088  1283               	bcf	3,5	;RP0=0, select bank0
   890  0089  1303               	bcf	3,6	;RP1=0, select bank0
   891  008A  082F               	movf	?___fttol+1,w
   892  008B  01C7               	clrf	main@ADC_Value+1
   893  008C  07C7               	addwf	main@ADC_Value+1,f
   894  008D  082E               	movf	?___fttol,w
   895  008E  01C6               	clrf	main@ADC_Value
   896  008F  07C6               	addwf	main@ADC_Value,f
   897                           
   898                           ;main.c: 89: Digit[2] = (ADC_Value/100);
   899  0090  3064               	movlw	100
   900  0091  00B4               	movwf	?___lwdiv
   901  0092  3000               	movlw	0
   902  0093  00B5               	movwf	?___lwdiv+1
   903  0094  0847               	movf	main@ADC_Value+1,w
   904  0095  01B7               	clrf	?___lwdiv+3
   905  0096  07B7               	addwf	?___lwdiv+3,f
   906  0097  0846               	movf	main@ADC_Value,w
   907  0098  01B6               	clrf	?___lwdiv+2
   908  0099  07B6               	addwf	?___lwdiv+2,f
   909  009A  120A  118A  276E   	fcall	___lwdiv
      +       120A  118A         
   910  009F  1283               	bcf	3,5	;RP0=0, select bank0
   911  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   912  00A1  0834               	movf	?___lwdiv,w
   913  00A2  00BE               	movwf	??_main
   914  00A3  083E               	movf	??_main,w
   915  00A4  00C5               	movwf	main@Digit+2
   916                           
   917                           ;main.c: 90: Digit[1] = (ADC_Value%100)/10;
   918  00A5  300A               	movlw	10
   919  00A6  00B4               	movwf	?___lwdiv
   920  00A7  3000               	movlw	0
   921  00A8  00B5               	movwf	?___lwdiv+1
   922  00A9  0847               	movf	main@ADC_Value+1,w
   923  00AA  01B1               	clrf	?___lwmod+3
   924  00AB  07B1               	addwf	?___lwmod+3,f
   925  00AC  0846               	movf	main@ADC_Value,w
   926  00AD  01B0               	clrf	?___lwmod+2
   927  00AE  07B0               	addwf	?___lwmod+2,f
   928  00AF  3064               	movlw	100
   929  00B0  00AE               	movwf	?___lwmod
   930  00B1  3000               	movlw	0
   931  00B2  00AF               	movwf	?___lwmod+1
   932  00B3  120A  118A  27AE   	fcall	___lwmod
      +       120A  118A         
   933  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   934  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   935  00BA  082F               	movf	?___lwmod+1,w
   936  00BB  01B7               	clrf	?___lwdiv+3
   937  00BC  07B7               	addwf	?___lwdiv+3,f
   938  00BD  082E               	movf	?___lwmod,w
   939  00BE  01B6               	clrf	?___lwdiv+2
   940  00BF  07B6               	addwf	?___lwdiv+2,f
   941  00C0  120A  118A  276E   	fcall	___lwdiv
      +       120A  118A         
   942  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   943  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   944  00C7  0834               	movf	?___lwdiv,w
   945  00C8  00BE               	movwf	??_main
   946  00C9  083E               	movf	??_main,w
   947  00CA  00C4               	movwf	main@Digit+1
   948                           
   949                           ;main.c: 91: Digit[0] = (ADC_Value%100)%10;
   950  00CB  0847               	movf	main@ADC_Value+1,w
   951  00CC  01B1               	clrf	?___lwmod+3
   952  00CD  07B1               	addwf	?___lwmod+3,f
   953  00CE  0846               	movf	main@ADC_Value,w
   954  00CF  01B0               	clrf	?___lwmod+2
   955  00D0  07B0               	addwf	?___lwmod+2,f
   956  00D1  3064               	movlw	100
   957  00D2  00AE               	movwf	?___lwmod
   958  00D3  3000               	movlw	0
   959  00D4  00AF               	movwf	?___lwmod+1
   960  00D5  120A  118A  27AE   	fcall	___lwmod
      +       120A  118A         
   961  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   962  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   963  00DC  082F               	movf	?___lwmod+1,w
   964  00DD  01C2               	clrf	_main$590+1
   965  00DE  07C2               	addwf	_main$590+1,f
   966  00DF  082E               	movf	?___lwmod,w
   967  00E0  01C1               	clrf	_main$590
   968  00E1  07C1               	addwf	_main$590,f
   969                           
   970                           ;main.c: 91: Digit[0] = (ADC_Value%100)%10;
   971  00E2  300A               	movlw	10
   972  00E3  00AE               	movwf	?___lwmod
   973  00E4  3000               	movlw	0
   974  00E5  00AF               	movwf	?___lwmod+1
   975  00E6  0842               	movf	_main$590+1,w
   976  00E7  01B1               	clrf	?___lwmod+3
   977  00E8  07B1               	addwf	?___lwmod+3,f
   978  00E9  0841               	movf	_main$590,w
   979  00EA  01B0               	clrf	?___lwmod+2
   980  00EB  07B0               	addwf	?___lwmod+2,f
   981  00EC  120A  118A  27AE   	fcall	___lwmod
      +       120A  118A         
   982  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   983  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   984  00F3  082E               	movf	?___lwmod,w
   985  00F4  00BE               	movwf	??_main
   986  00F5  083E               	movf	??_main,w
   987  00F6  00C3               	movwf	main@Digit
   988                           
   989                           ;main.c: 94: LCDGotoXY(1,0);
   990  00F7  01BA               	clrf	?_LCDGotoXY
   991  00F8  3001               	movlw	1
   992  00F9  120A  158A  27DA   	fcall	_LCDGotoXY
      +       120A  118A         
   993                           
   994                           ;main.c: 95: LCDWriteString("Gia tri I= ");
   995  00FE  3001               	movlw	(STR_2-__stringbase)& (0+255)
   996  00FF  120A  118A  2699   	fcall	_LCDWriteString
      +       120A  118A         
   997                           
   998                           ;main.c: 96: (LCDByte(Digit[2]+0x30,1));
   999  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0106  01B3               	clrf	?_LCDByte
  1002  0107  0AB3               	incf	?_LCDByte,f
  1003  0108  0845               	movf	main@Digit+2,w
  1004  0109  3E30               	addlw	48
  1005  010A  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1006                           
  1007                           ;main.c: 97: (LCDByte('.',1));
  1008  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0111  01B3               	clrf	?_LCDByte
  1011  0112  0AB3               	incf	?_LCDByte,f
  1012  0113  302E               	movlw	46
  1013  0114  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1014                           
  1015                           ;main.c: 98: (LCDByte(Digit[1]+0x30,1));
  1016  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1017  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1018  011B  01B3               	clrf	?_LCDByte
  1019  011C  0AB3               	incf	?_LCDByte,f
  1020  011D  0844               	movf	main@Digit+1,w
  1021  011E  3E30               	addlw	48
  1022  011F  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1023                           
  1024                           ;main.c: 99: (LCDByte(Digit[0]+0x30,1));
  1025  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0126  01B3               	clrf	?_LCDByte
  1028  0127  0AB3               	incf	?_LCDByte,f
  1029  0128  0843               	movf	main@Digit,w
  1030  0129  3E30               	addlw	48
  1031  012A  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1032                           
  1033                           ;main.c: 103: ADC_Value=(unsigned int)Dienap;
  1034  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0131  084D               	movf	_Dienap,w
  1037  0132  00AE               	movwf	?___fttol
  1038  0133  084E               	movf	_Dienap+1,w
  1039  0134  00AF               	movwf	?___fttol+1
  1040  0135  084F               	movf	_Dienap+2,w
  1041  0136  00B0               	movwf	?___fttol+2
  1042  0137  120A  118A  24E7   	fcall	___fttol
      +       120A  118A         
  1043  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1044  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1045  013E  082F               	movf	?___fttol+1,w
  1046  013F  01C7               	clrf	main@ADC_Value+1
  1047  0140  07C7               	addwf	main@ADC_Value+1,f
  1048  0141  082E               	movf	?___fttol,w
  1049  0142  01C6               	clrf	main@ADC_Value
  1050  0143  07C6               	addwf	main@ADC_Value,f
  1051                           
  1052                           ;main.c: 104: Digit[2] = (ADC_Value/100);
  1053  0144  3064               	movlw	100
  1054  0145  00B4               	movwf	?___lwdiv
  1055  0146  3000               	movlw	0
  1056  0147  00B5               	movwf	?___lwdiv+1
  1057  0148  0847               	movf	main@ADC_Value+1,w
  1058  0149  01B7               	clrf	?___lwdiv+3
  1059  014A  07B7               	addwf	?___lwdiv+3,f
  1060  014B  0846               	movf	main@ADC_Value,w
  1061  014C  01B6               	clrf	?___lwdiv+2
  1062  014D  07B6               	addwf	?___lwdiv+2,f
  1063  014E  120A  118A  276E   	fcall	___lwdiv
      +       120A  118A         
  1064  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0155  0834               	movf	?___lwdiv,w
  1067  0156  00BE               	movwf	??_main
  1068  0157  083E               	movf	??_main,w
  1069  0158  00C5               	movwf	main@Digit+2
  1070                           
  1071                           ;main.c: 105: Digit[1] = (ADC_Value%100)/10;
  1072  0159  300A               	movlw	10
  1073  015A  00B4               	movwf	?___lwdiv
  1074  015B  3000               	movlw	0
  1075  015C  00B5               	movwf	?___lwdiv+1
  1076  015D  0847               	movf	main@ADC_Value+1,w
  1077  015E  01B1               	clrf	?___lwmod+3
  1078  015F  07B1               	addwf	?___lwmod+3,f
  1079  0160  0846               	movf	main@ADC_Value,w
  1080  0161  01B0               	clrf	?___lwmod+2
  1081  0162  07B0               	addwf	?___lwmod+2,f
  1082  0163  3064               	movlw	100
  1083  0164  00AE               	movwf	?___lwmod
  1084  0165  3000               	movlw	0
  1085  0166  00AF               	movwf	?___lwmod+1
  1086  0167  120A  118A  27AE   	fcall	___lwmod
      +       120A  118A         
  1087  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1088  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1089  016E  082F               	movf	?___lwmod+1,w
  1090  016F  01B7               	clrf	?___lwdiv+3
  1091  0170  07B7               	addwf	?___lwdiv+3,f
  1092  0171  082E               	movf	?___lwmod,w
  1093  0172  01B6               	clrf	?___lwdiv+2
  1094  0173  07B6               	addwf	?___lwdiv+2,f
  1095  0174  120A  118A  276E   	fcall	___lwdiv
      +       120A  118A         
  1096  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1097  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1098  017B  0834               	movf	?___lwdiv,w
  1099  017C  00BE               	movwf	??_main
  1100  017D  083E               	movf	??_main,w
  1101  017E  00C4               	movwf	main@Digit+1
  1102                           
  1103                           ;main.c: 106: Digit[0] = (ADC_Value%100)%10;
  1104  017F  0847               	movf	main@ADC_Value+1,w
  1105  0180  01B1               	clrf	?___lwmod+3
  1106  0181  07B1               	addwf	?___lwmod+3,f
  1107  0182  0846               	movf	main@ADC_Value,w
  1108  0183  01B0               	clrf	?___lwmod+2
  1109  0184  07B0               	addwf	?___lwmod+2,f
  1110  0185  3064               	movlw	100
  1111  0186  00AE               	movwf	?___lwmod
  1112  0187  3000               	movlw	0
  1113  0188  00AF               	movwf	?___lwmod+1
  1114  0189  120A  118A  27AE   	fcall	___lwmod
      +       120A  118A         
  1115  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1116  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0190  082F               	movf	?___lwmod+1,w
  1118  0191  01C2               	clrf	_main$590+1
  1119  0192  07C2               	addwf	_main$590+1,f
  1120  0193  082E               	movf	?___lwmod,w
  1121  0194  01C1               	clrf	_main$590
  1122  0195  07C1               	addwf	_main$590,f
  1123                           
  1124                           ;main.c: 106: Digit[0] = (ADC_Value%100)%10;
  1125  0196  300A               	movlw	10
  1126  0197  00AE               	movwf	?___lwmod
  1127  0198  3000               	movlw	0
  1128  0199  00AF               	movwf	?___lwmod+1
  1129  019A  0842               	movf	_main$590+1,w
  1130  019B  01B1               	clrf	?___lwmod+3
  1131  019C  07B1               	addwf	?___lwmod+3,f
  1132  019D  0841               	movf	_main$590,w
  1133  019E  01B0               	clrf	?___lwmod+2
  1134  019F  07B0               	addwf	?___lwmod+2,f
  1135  01A0  120A  118A  27AE   	fcall	___lwmod
      +       120A  118A         
  1136  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1137  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1138  01A7  082E               	movf	?___lwmod,w
  1139  01A8  00BE               	movwf	??_main
  1140  01A9  083E               	movf	??_main,w
  1141  01AA  00C3               	movwf	main@Digit
  1142                           
  1143                           ;main.c: 108: LCDGotoXY(1,1);
  1144  01AB  01BA               	clrf	?_LCDGotoXY
  1145  01AC  0ABA               	incf	?_LCDGotoXY,f
  1146  01AD  3001               	movlw	1
  1147  01AE  120A  158A  27DA   	fcall	_LCDGotoXY
      +       120A  118A         
  1148                           
  1149                           ;main.c: 109: LCDWriteString("Gia tri U= ");
  1150  01B3  300D               	movlw	(STR_3-__stringbase)& (0+255)
  1151  01B4  120A  118A  2699   	fcall	_LCDWriteString
      +       120A  118A         
  1152                           
  1153                           ;main.c: 110: (LCDByte(Digit[2]+0x30,1));
  1154  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1155  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1156  01BB  01B3               	clrf	?_LCDByte
  1157  01BC  0AB3               	incf	?_LCDByte,f
  1158  01BD  0845               	movf	main@Digit+2,w
  1159  01BE  3E30               	addlw	48
  1160  01BF  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1161                           
  1162                           ;main.c: 111: (LCDByte('.',1));
  1163  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1164  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1165  01C6  01B3               	clrf	?_LCDByte
  1166  01C7  0AB3               	incf	?_LCDByte,f
  1167  01C8  302E               	movlw	46
  1168  01C9  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1169                           
  1170                           ;main.c: 112: (LCDByte(Digit[1]+0x30,1));
  1171  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1172  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1173  01D0  01B3               	clrf	?_LCDByte
  1174  01D1  0AB3               	incf	?_LCDByte,f
  1175  01D2  0844               	movf	main@Digit+1,w
  1176  01D3  3E30               	addlw	48
  1177  01D4  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1178                           
  1179                           ;main.c: 113: (LCDByte(Digit[0]+0x30,1));
  1180  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1181  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1182  01DB  01B3               	clrf	?_LCDByte
  1183  01DC  0AB3               	incf	?_LCDByte,f
  1184  01DD  0843               	movf	main@Digit,w
  1185  01DE  3E30               	addlw	48
  1186  01DF  286C               	goto	L1
  1187  01E0                     __end_of_main:	
  1188                           
  1189                           	psect	text1
  1190  07AE                     __ptext1:	
  1191 ;; *************** function ___lwmod *****************
  1192 ;; Defined at:
  1193 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwmod.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  divisor         2   14[BANK0 ] unsigned int 
  1196 ;;  dividend        2   16[BANK0 ] unsigned int 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  counter         1   19[BANK0 ] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  2   14[BANK0 ] unsigned int 
  1201 ;; Registers used:
  1202 ;;		wreg, status,2, status,0
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1208 ;;      Params:         0       4       0       0       0
  1209 ;;      Locals:         0       1       0       0       0
  1210 ;;      Temps:          0       1       0       0       0
  1211 ;;      Totals:         0       6       0       0       0
  1212 ;;Total ram usage:        6 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    3
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function ___lwmod
  1224  07AE                     ___lwmod:	
  1225                           
  1226                           ;incstack = 0
  1227                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1228  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1229  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1230  07B0  082F               	movf	___lwmod@divisor+1,w
  1231  07B1  042E               	iorwf	___lwmod@divisor,w
  1232  07B2  1903               	skipnz
  1233  07B3  2FDD               	goto	l2099
  1234  07B4  01B3               	clrf	___lwmod@counter
  1235  07B5  0AB3               	incf	___lwmod@counter,f
  1236  07B6                     l2089:	
  1237  07B6  1BAF               	btfsc	___lwmod@divisor+1,7
  1238  07B7  2FC4               	goto	l2091
  1239  07B8  3001               	movlw	1
  1240  07B9                     u1535:	
  1241  07B9  1003               	clrc
  1242  07BA  0DAE               	rlf	___lwmod@divisor,f
  1243  07BB  0DAF               	rlf	___lwmod@divisor+1,f
  1244  07BC  3EFF               	addlw	-1
  1245  07BD  1D03               	skipz
  1246  07BE  2FB9               	goto	u1535
  1247  07BF  3001               	movlw	1
  1248  07C0  00B2               	movwf	??___lwmod
  1249  07C1  0832               	movf	??___lwmod,w
  1250  07C2  07B3               	addwf	___lwmod@counter,f
  1251  07C3  2FB6               	goto	l2089
  1252  07C4                     l2091:	
  1253  07C4  082F               	movf	___lwmod@divisor+1,w
  1254  07C5  0231               	subwf	___lwmod@dividend+1,w
  1255  07C6  1D03               	skipz
  1256  07C7  2FCA               	goto	u1555
  1257  07C8  082E               	movf	___lwmod@divisor,w
  1258  07C9  0230               	subwf	___lwmod@dividend,w
  1259  07CA                     u1555:	
  1260  07CA  1C03               	skipc
  1261  07CB  2FD2               	goto	l2095
  1262  07CC  082E               	movf	___lwmod@divisor,w
  1263  07CD  02B0               	subwf	___lwmod@dividend,f
  1264  07CE  082F               	movf	___lwmod@divisor+1,w
  1265  07CF  1C03               	skipc
  1266  07D0  03B1               	decf	___lwmod@dividend+1,f
  1267  07D1  02B1               	subwf	___lwmod@dividend+1,f
  1268  07D2                     l2095:	
  1269  07D2  3001               	movlw	1
  1270  07D3                     u1565:	
  1271  07D3  1003               	clrc
  1272  07D4  0CAF               	rrf	___lwmod@divisor+1,f
  1273  07D5  0CAE               	rrf	___lwmod@divisor,f
  1274  07D6  3EFF               	addlw	-1
  1275  07D7  1D03               	skipz
  1276  07D8  2FD3               	goto	u1565
  1277  07D9  3001               	movlw	1
  1278  07DA  02B3               	subwf	___lwmod@counter,f
  1279  07DB  1D03               	btfss	3,2
  1280  07DC  2FC4               	goto	l2091
  1281  07DD                     l2099:	
  1282  07DD  0831               	movf	___lwmod@dividend+1,w
  1283  07DE  01AF               	clrf	?___lwmod+1
  1284  07DF  07AF               	addwf	?___lwmod+1,f
  1285  07E0  0830               	movf	___lwmod@dividend,w
  1286  07E1  01AE               	clrf	?___lwmod
  1287  07E2  07AE               	addwf	?___lwmod,f
  1288  07E3  0008               	return
  1289  07E4                     __end_of___lwmod:	
  1290                           
  1291                           	psect	text2
  1292  076E                     __ptext2:	
  1293 ;; *************** function ___lwdiv *****************
  1294 ;; Defined at:
  1295 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwdiv.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  divisor         2   20[BANK0 ] unsigned int 
  1298 ;;  dividend        2   22[BANK0 ] unsigned int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  quotient        2   25[BANK0 ] unsigned int 
  1301 ;;  counter         1   27[BANK0 ] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  2   20[BANK0 ] unsigned int 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       4       0       0       0
  1312 ;;      Locals:         0       3       0       0       0
  1313 ;;      Temps:          0       1       0       0       0
  1314 ;;      Totals:         0       8       0       0       0
  1315 ;;Total ram usage:        8 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    3
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function ___lwdiv
  1327  076E                     ___lwdiv:	
  1328                           
  1329                           ;incstack = 0
  1330                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1331  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1332  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0770  01B9               	clrf	___lwdiv@quotient
  1334  0771  01BA               	clrf	___lwdiv@quotient+1
  1335  0772  0835               	movf	___lwdiv@divisor+1,w
  1336  0773  0434               	iorwf	___lwdiv@divisor,w
  1337  0774  1903               	skipnz
  1338  0775  2FA7               	goto	l2077
  1339  0776  01BB               	clrf	___lwdiv@counter
  1340  0777  0ABB               	incf	___lwdiv@counter,f
  1341  0778                     l2065:	
  1342  0778  1BB5               	btfsc	___lwdiv@divisor+1,7
  1343  0779  2F86               	goto	l2067
  1344  077A  3001               	movlw	1
  1345  077B                     u1465:	
  1346  077B  1003               	clrc
  1347  077C  0DB4               	rlf	___lwdiv@divisor,f
  1348  077D  0DB5               	rlf	___lwdiv@divisor+1,f
  1349  077E  3EFF               	addlw	-1
  1350  077F  1D03               	skipz
  1351  0780  2F7B               	goto	u1465
  1352  0781  3001               	movlw	1
  1353  0782  00B8               	movwf	??___lwdiv
  1354  0783  0838               	movf	??___lwdiv,w
  1355  0784  07BB               	addwf	___lwdiv@counter,f
  1356  0785  2F78               	goto	l2065
  1357  0786                     l2067:	
  1358  0786  3001               	movlw	1
  1359  0787                     u1485:	
  1360  0787  1003               	clrc
  1361  0788  0DB9               	rlf	___lwdiv@quotient,f
  1362  0789  0DBA               	rlf	___lwdiv@quotient+1,f
  1363  078A  3EFF               	addlw	-1
  1364  078B  1D03               	skipz
  1365  078C  2F87               	goto	u1485
  1366  078D  0835               	movf	___lwdiv@divisor+1,w
  1367  078E  0237               	subwf	___lwdiv@dividend+1,w
  1368  078F  1D03               	skipz
  1369  0790  2F93               	goto	u1495
  1370  0791  0834               	movf	___lwdiv@divisor,w
  1371  0792  0236               	subwf	___lwdiv@dividend,w
  1372  0793                     u1495:	
  1373  0793  1C03               	skipc
  1374  0794  2F9C               	goto	l2073
  1375  0795  0834               	movf	___lwdiv@divisor,w
  1376  0796  02B6               	subwf	___lwdiv@dividend,f
  1377  0797  0835               	movf	___lwdiv@divisor+1,w
  1378  0798  1C03               	skipc
  1379  0799  03B7               	decf	___lwdiv@dividend+1,f
  1380  079A  02B7               	subwf	___lwdiv@dividend+1,f
  1381  079B  1439               	bsf	___lwdiv@quotient,0
  1382  079C                     l2073:	
  1383  079C  3001               	movlw	1
  1384  079D                     u1505:	
  1385  079D  1003               	clrc
  1386  079E  0CB5               	rrf	___lwdiv@divisor+1,f
  1387  079F  0CB4               	rrf	___lwdiv@divisor,f
  1388  07A0  3EFF               	addlw	-1
  1389  07A1  1D03               	skipz
  1390  07A2  2F9D               	goto	u1505
  1391  07A3  3001               	movlw	1
  1392  07A4  02BB               	subwf	___lwdiv@counter,f
  1393  07A5  1D03               	btfss	3,2
  1394  07A6  2F86               	goto	l2067
  1395  07A7                     l2077:	
  1396  07A7  083A               	movf	___lwdiv@quotient+1,w
  1397  07A8  01B5               	clrf	?___lwdiv+1
  1398  07A9  07B5               	addwf	?___lwdiv+1,f
  1399  07AA  0839               	movf	___lwdiv@quotient,w
  1400  07AB  01B4               	clrf	?___lwdiv
  1401  07AC  07B4               	addwf	?___lwdiv,f
  1402  07AD  0008               	return
  1403  07AE                     __end_of___lwdiv:	
  1404                           
  1405                           	psect	text3
  1406  04E7                     __ptext3:	
  1407 ;; *************** function ___fttol *****************
  1408 ;; Defined at:
  1409 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\fttol.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  f1              3   14[BANK0 ] float 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  lval            4   23[BANK0 ] unsigned long 
  1414 ;;  exp1            1   27[BANK0 ] unsigned char 
  1415 ;;  sign1           1   22[BANK0 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  4   14[BANK0 ] long 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       4       0       0       0
  1426 ;;      Locals:         0       6       0       0       0
  1427 ;;      Temps:          0       4       0       0       0
  1428 ;;      Totals:         0      14       0       0       0
  1429 ;;Total ram usage:       14 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    3
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function ___fttol
  1441  04E7                     ___fttol:	
  1442                           
  1443                           ;incstack = 0
  1444                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1445  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1446  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1447  04E9  082E               	movf	___fttol@f1,w
  1448  04EA  00B2               	movwf	??___fttol
  1449  04EB  082F               	movf	___fttol@f1+1,w
  1450  04EC  00B3               	movwf	??___fttol+1
  1451  04ED  0830               	movf	___fttol@f1+2,w
  1452  04EE  00B4               	movwf	??___fttol+2
  1453  04EF  1003               	clrc
  1454  04F0  0D33               	rlf	??___fttol+1,w
  1455  04F1  0D34               	rlf	??___fttol+2,w
  1456  04F2  00B5               	movwf	??___fttol+3
  1457  04F3  0835               	movf	??___fttol+3,w
  1458  04F4  00BB               	movwf	___fttol@exp1
  1459  04F5  08BB               	movf	___fttol@exp1,f
  1460  04F6  1D03               	skipz
  1461  04F7  2D01               	goto	l2017
  1462  04F8  3000               	movlw	0
  1463  04F9  00B1               	movwf	?___fttol+3
  1464  04FA  3000               	movlw	0
  1465  04FB  00B0               	movwf	?___fttol+2
  1466  04FC  3000               	movlw	0
  1467  04FD  00AF               	movwf	?___fttol+1
  1468  04FE  3000               	movlw	0
  1469  04FF  00AE               	movwf	?___fttol
  1470  0500  0008               	return
  1471  0501                     l2017:	
  1472  0501  082E               	movf	___fttol@f1,w
  1473  0502  00B2               	movwf	??___fttol
  1474  0503  082F               	movf	___fttol@f1+1,w
  1475  0504  00B3               	movwf	??___fttol+1
  1476  0505  0830               	movf	___fttol@f1+2,w
  1477  0506  00B4               	movwf	??___fttol+2
  1478  0507  3017               	movlw	23
  1479  0508                     u1365:	
  1480  0508  1003               	clrc
  1481  0509  0CB4               	rrf	??___fttol+2,f
  1482  050A  0CB3               	rrf	??___fttol+1,f
  1483  050B  0CB2               	rrf	??___fttol,f
  1484  050C  3EFF               	addlw	-1
  1485  050D  1D03               	skipz
  1486  050E  2D08               	goto	u1365
  1487  050F  0832               	movf	??___fttol,w
  1488  0510  00B5               	movwf	??___fttol+3
  1489  0511  0835               	movf	??___fttol+3,w
  1490  0512  00B6               	movwf	___fttol@sign1
  1491  0513  17AF               	bsf	___fttol@f1+1,7
  1492  0514  30FF               	movlw	255
  1493  0515  05AE               	andwf	___fttol@f1,f
  1494  0516  30FF               	movlw	255
  1495  0517  05AF               	andwf	___fttol@f1+1,f
  1496  0518  3000               	movlw	0
  1497  0519  05B0               	andwf	___fttol@f1+2,f
  1498  051A  082E               	movf	___fttol@f1,w
  1499  051B  00B7               	movwf	___fttol@lval
  1500  051C  082F               	movf	___fttol@f1+1,w
  1501  051D  00B8               	movwf	___fttol@lval+1
  1502  051E  0830               	movf	___fttol@f1+2,w
  1503  051F  00B9               	movwf	___fttol@lval+2
  1504  0520  01BA               	clrf	___fttol@lval+3
  1505  0521  308E               	movlw	142
  1506  0522  02BB               	subwf	___fttol@exp1,f
  1507  0523  1FBB               	btfss	___fttol@exp1,7
  1508  0524  2D43               	goto	l2037
  1509  0525  083B               	movf	___fttol@exp1,w
  1510  0526  3A80               	xorlw	128
  1511  0527  3E8F               	addlw	143
  1512  0528  1803               	skipnc
  1513  0529  2D33               	goto	l2035
  1514  052A  3000               	movlw	0
  1515  052B  00B1               	movwf	?___fttol+3
  1516  052C  3000               	movlw	0
  1517  052D  00B0               	movwf	?___fttol+2
  1518  052E  3000               	movlw	0
  1519  052F  00AF               	movwf	?___fttol+1
  1520  0530  3000               	movlw	0
  1521  0531  00AE               	movwf	?___fttol
  1522  0532  0008               	return
  1523  0533                     l2035:	
  1524  0533  3001               	movlw	1
  1525  0534                     u1395:	
  1526  0534  1003               	clrc
  1527  0535  0CBA               	rrf	___fttol@lval+3,f
  1528  0536  0CB9               	rrf	___fttol@lval+2,f
  1529  0537  0CB8               	rrf	___fttol@lval+1,f
  1530  0538  0CB7               	rrf	___fttol@lval,f
  1531  0539  3EFF               	addlw	-1
  1532  053A  1D03               	skipz
  1533  053B  2D34               	goto	u1395
  1534  053C  3001               	movlw	1
  1535  053D  00B2               	movwf	??___fttol
  1536  053E  0832               	movf	??___fttol,w
  1537  053F  07BB               	addwf	___fttol@exp1,f
  1538  0540  1903               	btfsc	3,2
  1539  0541  2D5E               	goto	l2047
  1540  0542  2D33               	goto	l2035
  1541  0543                     l2037:	
  1542  0543  3018               	movlw	24
  1543  0544  023B               	subwf	___fttol@exp1,w
  1544  0545  1C03               	skipc
  1545  0546  2D5B               	goto	l2045
  1546  0547  3000               	movlw	0
  1547  0548  00B1               	movwf	?___fttol+3
  1548  0549  3000               	movlw	0
  1549  054A  00B0               	movwf	?___fttol+2
  1550  054B  3000               	movlw	0
  1551  054C  00AF               	movwf	?___fttol+1
  1552  054D  3000               	movlw	0
  1553  054E  00AE               	movwf	?___fttol
  1554  054F  0008               	return
  1555  0550                     l2043:	
  1556  0550  3001               	movlw	1
  1557  0551  00B2               	movwf	??___fttol
  1558  0552                     u1425:	
  1559  0552  1003               	clrc
  1560  0553  0DB7               	rlf	___fttol@lval,f
  1561  0554  0DB8               	rlf	___fttol@lval+1,f
  1562  0555  0DB9               	rlf	___fttol@lval+2,f
  1563  0556  0DBA               	rlf	___fttol@lval+3,f
  1564  0557  0BB2               	decfsz	??___fttol,f
  1565  0558  2D52               	goto	u1425
  1566  0559  3001               	movlw	1
  1567  055A  02BB               	subwf	___fttol@exp1,f
  1568  055B                     l2045:	
  1569  055B  08BB               	movf	___fttol@exp1,f
  1570  055C  1D03               	skipz
  1571  055D  2D50               	goto	l2043
  1572  055E                     l2047:	
  1573  055E  0836               	movf	___fttol@sign1,w
  1574  055F  1903               	btfsc	3,2
  1575  0560  2D6C               	goto	l2051
  1576  0561  09B7               	comf	___fttol@lval,f
  1577  0562  09B8               	comf	___fttol@lval+1,f
  1578  0563  09B9               	comf	___fttol@lval+2,f
  1579  0564  09BA               	comf	___fttol@lval+3,f
  1580  0565  0AB7               	incf	___fttol@lval,f
  1581  0566  1903               	skipnz
  1582  0567  0AB8               	incf	___fttol@lval+1,f
  1583  0568  1903               	skipnz
  1584  0569  0AB9               	incf	___fttol@lval+2,f
  1585  056A  1903               	skipnz
  1586  056B  0ABA               	incf	___fttol@lval+3,f
  1587  056C                     l2051:	
  1588  056C  083A               	movf	___fttol@lval+3,w
  1589  056D  00B1               	movwf	?___fttol+3
  1590  056E  0839               	movf	___fttol@lval+2,w
  1591  056F  00B0               	movwf	?___fttol+2
  1592  0570  0838               	movf	___fttol@lval+1,w
  1593  0571  00AF               	movwf	?___fttol+1
  1594  0572  0837               	movf	___fttol@lval,w
  1595  0573  00AE               	movwf	?___fttol
  1596  0574  0008               	return
  1597  0575                     __end_of___fttol:	
  1598                           
  1599                           	psect	text4
  1600  0FDA                     __ptext4:	
  1601 ;; *************** function _LCDGotoXY *****************
  1602 ;; Defined at:
  1603 ;;		line 314 in file "lcd_hd44780_pic16.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  x               1    wreg     unsigned char 
  1606 ;;  y               1   26[BANK0 ] unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  x               1   28[BANK0 ] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;		None               void
  1611 ;; Registers used:
  1612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         0       1       0       0       0
  1619 ;;      Locals:         0       1       0       0       0
  1620 ;;      Temps:          0       1       0       0       0
  1621 ;;      Totals:         0       3       0       0       0
  1622 ;;Total ram usage:        3 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    5
  1625 ;; This function calls:
  1626 ;;		_LCDByte
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _LCDGotoXY
  1634  0FDA                     _LCDGotoXY:	
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1638                           ;LCDGotoXY@x stored from wreg
  1639  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0FDC  00BC               	movwf	LCDGotoXY@x
  1642                           
  1643                           ;lcd_hd44780_pic16.c: 315: if(x>=20) return;
  1644  0FDD  3014               	movlw	20
  1645  0FDE  023C               	subwf	LCDGotoXY@x,w
  1646  0FDF  1803               	btfsc	3,0
  1647  0FE0  0008               	return
  1648  0FE1  2FEB               	goto	l1811
  1649  0FE2                     l140:	
  1650                           ;lcd_hd44780_pic16.c: 323: case 1:
  1651                           
  1652                           ;lcd_hd44780_pic16.c: 322: break;
  1653                           
  1654                           ;lcd_hd44780_pic16.c: 320: {
  1655                           ;lcd_hd44780_pic16.c: 321: case 0:
  1656                           
  1657                           ;lcd_hd44780_pic16.c: 319: switch(y)
  1658                           
  1659                           
  1660                           ;lcd_hd44780_pic16.c: 324: x|=0b01000000;
  1661  0FE2  173C               	bsf	LCDGotoXY@x,6
  1662                           
  1663                           ;lcd_hd44780_pic16.c: 325: break;
  1664  0FE3  2FF9               	goto	l139
  1665  0FE4                     l1805:	
  1666                           ;lcd_hd44780_pic16.c: 326: case 2:
  1667                           
  1668                           
  1669                           ;lcd_hd44780_pic16.c: 327: x+=0x14;
  1670  0FE4  3014               	movlw	20
  1671  0FE5  2FE7               	goto	L2
  1672  0FE6                     l1807:	
  1673                           ;lcd_hd44780_pic16.c: 329: case 3:
  1674                           
  1675                           ;lcd_hd44780_pic16.c: 328: break;
  1676                           
  1677                           
  1678                           ;lcd_hd44780_pic16.c: 330: x+=0x54;
  1679  0FE6  3054               	movlw	84
  1680  0FE7                     L2:	
  1681  0FE7  00BB               	movwf	??_LCDGotoXY
  1682  0FE8  083B               	movf	??_LCDGotoXY,w
  1683  0FE9  07BC               	addwf	LCDGotoXY@x,f
  1684                           
  1685                           ;lcd_hd44780_pic16.c: 332: }
  1686                           
  1687                           ;lcd_hd44780_pic16.c: 331: break;
  1688  0FEA  2FF9               	goto	l139
  1689  0FEB                     l1811:	
  1690  0FEB  083A               	movf	LCDGotoXY@y,w
  1691                           
  1692                           ; Switch size 1, requested type "space"
  1693                           ; Number of cases is 4, Range of values is 0 to 3
  1694                           ; switch strategies available:
  1695                           ; Name         Instructions Cycles
  1696                           ; simple_byte           13     7 (average)
  1697                           ; direct_byte           20     8 (fixed)
  1698                           ; jumptable            260     6 (fixed)
  1699                           ;	Chosen strategy is simple_byte
  1700  0FEC  3A00               	xorlw	0	; case 0
  1701  0FED  1903               	skipnz
  1702  0FEE  2FF9               	goto	l139
  1703  0FEF  3A01               	xorlw	1	; case 1
  1704  0FF0  1903               	skipnz
  1705  0FF1  2FE2               	goto	l140
  1706  0FF2  3A03               	xorlw	3	; case 2
  1707  0FF3  1903               	skipnz
  1708  0FF4  2FE4               	goto	l1805
  1709  0FF5  3A01               	xorlw	1	; case 3
  1710  0FF6  1903               	skipnz
  1711  0FF7  2FE6               	goto	l1807
  1712  0FF8  2FF9               	goto	l139
  1713  0FF9                     l139:	
  1714                           
  1715                           ;lcd_hd44780_pic16.c: 354: x|=0b10000000;
  1716  0FF9  17BC               	bsf	LCDGotoXY@x,7
  1717                           
  1718                           ;lcd_hd44780_pic16.c: 355: (LCDByte(x,0));
  1719  0FFA  01B3               	clrf	?_LCDByte
  1720  0FFB  083C               	movf	LCDGotoXY@x,w
  1721  0FFC  120A  118A  26EB   	fcall	_LCDByte
  1722  0FFF  0008               	return
  1723  1000                     __end_of_LCDGotoXY:	
  1724                           
  1725                           	psect	text5
  1726  0699                     __ptext5:	
  1727 ;; *************** function _LCDWriteString *****************
  1728 ;; Defined at:
  1729 ;;		line 213 in file "lcd_hd44780_pic16.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  msg             1    wreg     PTR const unsigned char 
  1732 ;;		 -> STR_3(12), STR_2(12), STR_1(11), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  msg             1   28[BANK0 ] PTR const unsigned char 
  1735 ;;		 -> STR_3(12), STR_2(12), STR_1(11), 
  1736 ;;  cc              1   27[BANK0 ] char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       2       0       0       0
  1748 ;;      Temps:          0       1       0       0       0
  1749 ;;      Totals:         0       3       0       0       0
  1750 ;;Total ram usage:        3 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    5
  1753 ;; This function calls:
  1754 ;;		_LCDByte
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _LCDWriteString
  1762  0699                     _LCDWriteString:	
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1766                           ;LCDWriteString@msg stored from wreg
  1767  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1768  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1769  069B  00BC               	movwf	LCDWriteString@msg
  1770  069C                     l1799:	
  1771                           ;lcd_hd44780_pic16.c: 242: while(*msg!='\0')
  1772                           
  1773  069C  083C               	movf	LCDWriteString@msg,w
  1774  069D  0084               	movwf	4
  1775  069E  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1776  06A3  3800               	iorlw	0
  1777  06A4  1903               	btfsc	3,2
  1778  06A5  0008               	return
  1779                           
  1780                           ;lcd_hd44780_pic16.c: 243: {
  1781                           ;lcd_hd44780_pic16.c: 245: if(*msg=='%')
  1782  06A6  083C               	movf	LCDWriteString@msg,w
  1783  06A7  0084               	movwf	4
  1784  06A8  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1785  06AD  3A25               	xorlw	37
  1786  06AE  1D03               	skipz
  1787  06AF  2ED4               	goto	l1795
  1788                           
  1789                           ;lcd_hd44780_pic16.c: 246: {
  1790                           ;lcd_hd44780_pic16.c: 247: msg++;
  1791  06B0  3001               	movlw	1
  1792  06B1  00BA               	movwf	??_LCDWriteString
  1793  06B2  083A               	movf	??_LCDWriteString,w
  1794  06B3  07BC               	addwf	LCDWriteString@msg,f
  1795                           
  1796                           ;lcd_hd44780_pic16.c: 248: int8_t cc=*msg-'0';
  1797  06B4  083C               	movf	LCDWriteString@msg,w
  1798  06B5  0084               	movwf	4
  1799  06B6  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1800  06BB  3ED0               	addlw	-48
  1801  06BC  00BA               	movwf	??_LCDWriteString
  1802  06BD  083A               	movf	??_LCDWriteString,w
  1803  06BE  00BB               	movwf	LCDWriteString@cc
  1804                           
  1805                           ;lcd_hd44780_pic16.c: 250: if(cc>=0 && cc<=7)
  1806  06BF  1BBB               	btfsc	LCDWriteString@cc,7
  1807  06C0  2ECA               	goto	l1791
  1808  06C1  083B               	movf	LCDWriteString@cc,w
  1809  06C2  3A80               	xorlw	128
  1810  06C3  3E78               	addlw	-136
  1811  06C4  1803               	skipnc
  1812  06C5  2ECA               	goto	l1791
  1813                           
  1814                           ;lcd_hd44780_pic16.c: 251: {
  1815                           ;lcd_hd44780_pic16.c: 252: (LCDByte(cc,1));
  1816  06C6  01B3               	clrf	?_LCDByte
  1817  06C7  0AB3               	incf	?_LCDByte,f
  1818  06C8  083B               	movf	LCDWriteString@cc,w
  1819  06C9  2EDF               	goto	L3
  1820  06CA                     l1791:	
  1821                           ;lcd_hd44780_pic16.c: 253: }
  1822                           
  1823                           
  1824                           ;lcd_hd44780_pic16.c: 254: else
  1825                           ;lcd_hd44780_pic16.c: 255: {
  1826                           ;lcd_hd44780_pic16.c: 256: (LCDByte('%',1));
  1827  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1828  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1829  06CC  01B3               	clrf	?_LCDByte
  1830  06CD  0AB3               	incf	?_LCDByte,f
  1831  06CE  3025               	movlw	37
  1832  06CF  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1833  06D4                     l1795:	
  1834                           ;lcd_hd44780_pic16.c: 258: }
  1835                           ;lcd_hd44780_pic16.c: 259: }
  1836                           
  1837                           ;lcd_hd44780_pic16.c: 257: (LCDByte(*msg,1));
  1838                           
  1839                           
  1840                           ;lcd_hd44780_pic16.c: 260: else
  1841                           ;lcd_hd44780_pic16.c: 261: {
  1842                           ;lcd_hd44780_pic16.c: 262: (LCDByte(*msg,1));
  1843  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1844  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1845  06D6  01B3               	clrf	?_LCDByte
  1846  06D7  0AB3               	incf	?_LCDByte,f
  1847  06D8  083C               	movf	LCDWriteString@msg,w
  1848  06D9  0084               	movwf	4
  1849  06DA  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1850  06DF                     L3:	
  1851  06DF  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  1852                           
  1853                           ;lcd_hd44780_pic16.c: 263: }
  1854                           ;lcd_hd44780_pic16.c: 264: msg++;
  1855  06E4  3001               	movlw	1
  1856  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1857  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1858  06E7  00BA               	movwf	??_LCDWriteString
  1859  06E8  083A               	movf	??_LCDWriteString,w
  1860  06E9  07BC               	addwf	LCDWriteString@msg,f
  1861  06EA  2E9C               	goto	l1799
  1862  06EB                     __end_of_LCDWriteString:	
  1863                           
  1864                           	psect	text6
  1865  07F9                     __ptext6:	
  1866 ;; *************** function _InitADC *****************
  1867 ;; Defined at:
  1868 ;;		line 5 in file "ADC0808.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0
  1885 ;;      Totals:         0       0       0       0       0
  1886 ;;Total ram usage:        0 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _InitADC
  1898  07F9                     _InitADC:	
  1899                           
  1900                           ;ADC0808.c: 6: TRISC=0b00001000;
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _InitADC: [wreg]
  1904  07F9  3008               	movlw	8
  1905  07FA  1683               	bsf	3,5	;RP0=1, select bank1
  1906  07FB  1303               	bcf	3,6	;RP1=0, select bank1
  1907  07FC  0087               	movwf	7	;volatile
  1908                           
  1909                           ;ADC0808.c: 7: TRISB=0xff;
  1910  07FD  30FF               	movlw	255
  1911  07FE  0086               	movwf	6	;volatile
  1912  07FF  0008               	return
  1913  0800                     __end_of_InitADC:	
  1914                           
  1915                           	psect	text7
  1916  05DD                     __ptext7:	
  1917 ;; *************** function _LCDInit *****************
  1918 ;; Defined at:
  1919 ;;		line 155 in file "lcd_hd44780_pic16.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  style           1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  style           1   28[BANK0 ] unsigned char 
  1924 ;;  __i             1   29[BANK0 ] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       2       0       0       0
  1936 ;;      Temps:          0       2       0       0       0
  1937 ;;      Totals:         0       4       0       0       0
  1938 ;;Total ram usage:        4 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    5
  1941 ;; This function calls:
  1942 ;;		_LCDByte
  1943 ;;		_LCDBusyLoop
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _LCDInit
  1951  05DD                     _LCDInit:	
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _LCDInit: [allreg]
  1955                           ;LCDInit@style stored from wreg
  1956  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1957  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1958  05DF  00BC               	movwf	LCDInit@style
  1959                           
  1960                           ;lcd_hd44780_pic16.c: 170: _delay((unsigned long)((30)*(16000000/4000.0)));
  1961  05E0  309C               	movlw	156
  1962  05E1  00BB               	movwf	??_LCDInit+1
  1963  05E2  30D7               	movlw	215
  1964  05E3  00BA               	movwf	??_LCDInit
  1965  05E4                     u1917:	
  1966  05E4  0BBA               	decfsz	??_LCDInit,f
  1967  05E5  2DE4               	goto	u1917
  1968  05E6  0BBB               	decfsz	??_LCDInit+1,f
  1969  05E7  2DE4               	goto	u1917
  1970                           
  1971                           ;lcd_hd44780_pic16.c: 173: TRISD&=(~(0x0F<<0));
  1972  05E8  30F0               	movlw	240
  1973  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1974  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1975  05EB  00BA               	movwf	??_LCDInit
  1976  05EC  083A               	movf	??_LCDInit,w
  1977  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  1978  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  1979  05EF  0588               	andwf	8,f	;volatile
  1980                           
  1981                           ;lcd_hd44780_pic16.c: 175: TRISAbits.TRISA1=0;
  1982  05F0  1085               	bcf	5,1	;volatile
  1983                           
  1984                           ;lcd_hd44780_pic16.c: 176: TRISAbits.TRISA3=0;
  1985  05F1  1185               	bcf	5,3	;volatile
  1986                           
  1987                           ;lcd_hd44780_pic16.c: 177: TRISAbits.TRISA2=0;
  1988  05F2  1105               	bcf	5,2	;volatile
  1989                           
  1990                           ;lcd_hd44780_pic16.c: 179: PORTD&=(~(0x0F<<0));
  1991  05F3  30F0               	movlw	240
  1992  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1993  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1994  05F6  00BA               	movwf	??_LCDInit
  1995  05F7  083A               	movf	??_LCDInit,w
  1996  05F8  0588               	andwf	8,f	;volatile
  1997                           
  1998                           ;lcd_hd44780_pic16.c: 181: (RA1=0);
  1999  05F9  1085               	bcf	5,1	;volatile
  2000                           
  2001                           ;lcd_hd44780_pic16.c: 182: (RA2=0);
  2002  05FA  1105               	bcf	5,2	;volatile
  2003                           
  2004                           ;lcd_hd44780_pic16.c: 183: (RA3=0);
  2005  05FB  1185               	bcf	5,3	;volatile
  2006                           
  2007                           ;lcd_hd44780_pic16.c: 186: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2008  05FC  2DFD               	nop2	;2 cycle nop
  2009                           
  2010                           ;lcd_hd44780_pic16.c: 188: (RA1=1);
  2011  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2012  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2013  05FF  1485               	bsf	5,1	;volatile
  2014                           
  2015                           ;lcd_hd44780_pic16.c: 189: PORTD|=((0b00000010)<<0);
  2016  0600  1488               	bsf	8,1	;volatile
  2017                           
  2018                           ;lcd_hd44780_pic16.c: 190: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2019  0601  2E02               	nop2	;2 cycle nop
  2020  0602  2E03               	nop2	;2 cycle nop
  2021                           
  2022                           ;lcd_hd44780_pic16.c: 191: (RA1=0);
  2023  0603  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0604  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0605  1085               	bcf	5,1	;volatile
  2026                           
  2027                           ;lcd_hd44780_pic16.c: 192: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2028  0606  2E07               	nop2	;2 cycle nop
  2029  0607  2E08               	nop2	;2 cycle nop
  2030                           
  2031                           ;lcd_hd44780_pic16.c: 195: LCDBusyLoop();
  2032  0608  120A  118A  2643   	fcall	_LCDBusyLoop
      +       120A  118A         
  2033                           
  2034                           ;lcd_hd44780_pic16.c: 200: (LCDByte(0b00101000,0));
  2035  060D  1283               	bcf	3,5	;RP0=0, select bank0
  2036  060E  1303               	bcf	3,6	;RP1=0, select bank0
  2037  060F  01B3               	clrf	?_LCDByte
  2038  0610  3028               	movlw	40
  2039  0611  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  2040                           
  2041                           ;lcd_hd44780_pic16.c: 201: (LCDByte(0b00001100|style,0));
  2042  0616  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0617  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0618  01B3               	clrf	?_LCDByte
  2045  0619  083C               	movf	LCDInit@style,w
  2046  061A  380C               	iorlw	12
  2047  061B  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  2048                           
  2049                           ;lcd_hd44780_pic16.c: 204: (LCDByte(0b01000000,0));
  2050  0620  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0621  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0622  01B3               	clrf	?_LCDByte
  2053  0623  3040               	movlw	64
  2054  0624  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  2055                           
  2056                           ;lcd_hd44780_pic16.c: 206: uint8_t __i;
  2057                           ;lcd_hd44780_pic16.c: 207: for(__i=0;__i<sizeof(__cgram);__i++)
  2058  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2059  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2060  062B  01BD               	clrf	LCDInit@__i
  2061  062C                     L4:	
  2062  062C  3040               	movlw	64
  2063  062D  023D               	subwf	LCDInit@__i,w
  2064  062E  1803               	btfsc	3,0
  2065  062F  0008               	return
  2066                           
  2067                           ;lcd_hd44780_pic16.c: 208: (LCDByte(__cgram[__i],1));
  2068  0630  01B3               	clrf	?_LCDByte
  2069  0631  0AB3               	incf	?_LCDByte,f
  2070  0632  083D               	movf	LCDInit@__i,w
  2071  0633  3EA0               	addlw	___cgram& (0+255)
  2072  0634  0084               	movwf	4
  2073  0635  1383               	bcf	3,7	;select IRP bank1
  2074  0636  0800               	movf	0,w
  2075  0637  120A  118A  26EB   	fcall	_LCDByte
      +       120A  118A         
  2076  063C  3001               	movlw	1
  2077  063D  1283               	bcf	3,5	;RP0=0, select bank0
  2078  063E  1303               	bcf	3,6	;RP1=0, select bank0
  2079  063F  00BA               	movwf	??_LCDInit
  2080  0640  083A               	movf	??_LCDInit,w
  2081  0641  07BD               	addwf	LCDInit@__i,f
  2082  0642  2E2C               	goto	L4
  2083  0643                     __end_of_LCDInit:	
  2084                           
  2085                           	psect	text8
  2086  06EB                     __ptext8:	
  2087 ;; *************** function _LCDByte *****************
  2088 ;; Defined at:
  2089 ;;		line 42 in file "lcd_hd44780_pic16.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  c               1    wreg     unsigned char 
  2092 ;;  isdata          1   19[BANK0 ] unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  c               1   24[BANK0 ] unsigned char 
  2095 ;;  temp            1   25[BANK0 ] unsigned char 
  2096 ;;  ln              1   23[BANK0 ] unsigned char 
  2097 ;;  hn              1   22[BANK0 ] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;		None               void
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       1       0       0       0
  2108 ;;      Locals:         0       4       0       0       0
  2109 ;;      Temps:          0       2       0       0       0
  2110 ;;      Totals:         0       7       0       0       0
  2111 ;;Total ram usage:        7 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    4
  2114 ;; This function calls:
  2115 ;;		_LCDBusyLoop
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;;		_LCDInit
  2119 ;;		_LCDWriteString
  2120 ;;		_LCDGotoXY
  2121 ;;		_LCDWriteInt
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _LCDByte
  2127  06EB                     _LCDByte:	
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2131                           ;LCDByte@c stored from wreg
  2132  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2133  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2134  06ED  00B8               	movwf	LCDByte@c
  2135                           
  2136                           ;lcd_hd44780_pic16.c: 50: uint8_t hn,ln;
  2137                           ;lcd_hd44780_pic16.c: 51: uint8_t temp;
  2138                           ;lcd_hd44780_pic16.c: 53: hn=c>>4;
  2139  06EE  0838               	movf	LCDByte@c,w
  2140  06EF  00B4               	movwf	??_LCDByte
  2141  06F0  3004               	movlw	4
  2142  06F1                     u905:	
  2143  06F1  1003               	clrc
  2144  06F2  0CB4               	rrf	??_LCDByte,f
  2145  06F3  3EFF               	addlw	-1
  2146  06F4  1D03               	skipz
  2147  06F5  2EF1               	goto	u905
  2148  06F6  0834               	movf	??_LCDByte,w
  2149  06F7  00B5               	movwf	??_LCDByte+1
  2150  06F8  0835               	movf	??_LCDByte+1,w
  2151  06F9  00B6               	movwf	LCDByte@hn
  2152                           
  2153                           ;lcd_hd44780_pic16.c: 54: ln=(c & 0x0F);
  2154  06FA  0838               	movf	LCDByte@c,w
  2155  06FB  390F               	andlw	15
  2156  06FC  00B4               	movwf	??_LCDByte
  2157  06FD  0834               	movf	??_LCDByte,w
  2158  06FE  00B7               	movwf	LCDByte@ln
  2159                           
  2160                           ;lcd_hd44780_pic16.c: 56: if(isdata==0)
  2161  06FF  08B3               	movf	LCDByte@isdata,f
  2162  0700  1D03               	skipz
  2163  0701  2F04               	goto	l94
  2164                           
  2165                           ;lcd_hd44780_pic16.c: 57: (RA3=0);
  2166  0702  1185               	bcf	5,3	;volatile
  2167  0703  2F05               	goto	l95
  2168  0704                     l94:	
  2169                           
  2170                           ;lcd_hd44780_pic16.c: 58: else
  2171                           ;lcd_hd44780_pic16.c: 59: (RA3=1);
  2172  0704  1585               	bsf	5,3	;volatile
  2173  0705                     l95:	
  2174                           
  2175                           ;lcd_hd44780_pic16.c: 61: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2176  0705  2F06               	nop2	;2 cycle nop
  2177                           
  2178                           ;lcd_hd44780_pic16.c: 63: (RA1=1);
  2179  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0708  1485               	bsf	5,1	;volatile
  2182                           
  2183                           ;lcd_hd44780_pic16.c: 67: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  2184  0709  0808               	movf	8,w	;volatile
  2185  070A  39F0               	andlw	240
  2186  070B  0436               	iorwf	LCDByte@hn,w
  2187  070C  00B4               	movwf	??_LCDByte
  2188  070D  0834               	movf	??_LCDByte,w
  2189  070E  00B9               	movwf	LCDByte@temp
  2190                           
  2191                           ;lcd_hd44780_pic16.c: 68: PORTD=temp;
  2192  070F  0839               	movf	LCDByte@temp,w
  2193  0710  0088               	movwf	8	;volatile
  2194                           
  2195                           ;lcd_hd44780_pic16.c: 70: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2196  0711  2F12               	nop2	;2 cycle nop
  2197  0712  2F13               	nop2	;2 cycle nop
  2198                           
  2199                           ;lcd_hd44780_pic16.c: 74: (RA1=0);
  2200  0713  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0714  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0715  1085               	bcf	5,1	;volatile
  2203                           
  2204                           ;lcd_hd44780_pic16.c: 76: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2205  0716  2F17               	nop2	;2 cycle nop
  2206  0717  2F18               	nop2	;2 cycle nop
  2207                           
  2208                           ;lcd_hd44780_pic16.c: 79: (RA1=1);
  2209  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2211  071A  1485               	bsf	5,1	;volatile
  2212                           
  2213                           ;lcd_hd44780_pic16.c: 81: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  2214  071B  0808               	movf	8,w	;volatile
  2215  071C  39F0               	andlw	240
  2216  071D  0437               	iorwf	LCDByte@ln,w
  2217  071E  00B4               	movwf	??_LCDByte
  2218  071F  0834               	movf	??_LCDByte,w
  2219  0720  00B9               	movwf	LCDByte@temp
  2220                           
  2221                           ;lcd_hd44780_pic16.c: 83: PORTD=temp;
  2222  0721  0839               	movf	LCDByte@temp,w
  2223  0722  0088               	movwf	8	;volatile
  2224                           
  2225                           ;lcd_hd44780_pic16.c: 85: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2226  0723  2F24               	nop2	;2 cycle nop
  2227  0724  2F25               	nop2	;2 cycle nop
  2228                           
  2229                           ;lcd_hd44780_pic16.c: 89: (RA1=0);
  2230  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0727  1085               	bcf	5,1	;volatile
  2233                           
  2234                           ;lcd_hd44780_pic16.c: 91: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2235  0728  2F29               	nop2	;2 cycle nop
  2236  0729  2F2A               	nop2	;2 cycle nop
  2237                           
  2238                           ;lcd_hd44780_pic16.c: 93: LCDBusyLoop();
  2239  072A  120A  118A  2643   	fcall	_LCDBusyLoop
  2240  072D  0008               	return
  2241  072E                     __end_of_LCDByte:	
  2242                           
  2243                           	psect	text9
  2244  0643                     __ptext9:	
  2245 ;; *************** function _LCDBusyLoop *****************
  2246 ;; Defined at:
  2247 ;;		line 97 in file "lcd_hd44780_pic16.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  status          1   18[BANK0 ] unsigned char 
  2252 ;;  temp            1   17[BANK0 ] unsigned char 
  2253 ;;  busy            1   16[BANK0 ] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       0       0       0
  2264 ;;      Locals:         0       3       0       0       0
  2265 ;;      Temps:          0       2       0       0       0
  2266 ;;      Totals:         0       5       0       0       0
  2267 ;;Total ram usage:        5 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_LCDByte
  2274 ;;		_LCDInit
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function _LCDBusyLoop
  2280  0643                     _LCDBusyLoop:	
  2281                           
  2282                           ;lcd_hd44780_pic16.c: 100: uint8_t busy,status=0x00,temp;
  2283                           
  2284                           ;incstack = 0
  2285                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2286  0643  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0644  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0645  01B2               	clrf	LCDBusyLoop@status
  2289                           
  2290                           ;lcd_hd44780_pic16.c: 103: TRISD|=(0x0f<<0);
  2291  0646  300F               	movlw	15
  2292  0647  00AE               	movwf	??_LCDBusyLoop
  2293  0648  082E               	movf	??_LCDBusyLoop,w
  2294  0649  1683               	bsf	3,5	;RP0=1, select bank1
  2295  064A  1303               	bcf	3,6	;RP1=0, select bank1
  2296  064B  0488               	iorwf	8,f	;volatile
  2297                           
  2298                           ;lcd_hd44780_pic16.c: 106: (RA2=1);
  2299  064C  1283               	bcf	3,5	;RP0=0, select bank0
  2300  064D  1303               	bcf	3,6	;RP1=0, select bank0
  2301  064E  1505               	bsf	5,2	;volatile
  2302                           
  2303                           ;lcd_hd44780_pic16.c: 107: (RA3=0);
  2304  064F  1185               	bcf	5,3	;volatile
  2305                           
  2306                           ;lcd_hd44780_pic16.c: 111: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2307  0650  2E51               	nop2	;2 cycle nop
  2308  0651                     l1825:	
  2309                           ;lcd_hd44780_pic16.c: 114: do
  2310                           
  2311                           
  2312                           ;lcd_hd44780_pic16.c: 115: {
  2313                           ;lcd_hd44780_pic16.c: 117: (RA1=1);
  2314  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0653  1485               	bsf	5,1	;volatile
  2317                           
  2318                           ;lcd_hd44780_pic16.c: 120: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2319  0654  2E55               	nop2	;2 cycle nop
  2320                           
  2321                           ;lcd_hd44780_pic16.c: 122: status=(PORTD>>0);
  2322  0655  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0656  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0657  0808               	movf	8,w	;volatile
  2325  0658  00AE               	movwf	??_LCDBusyLoop
  2326  0659  082E               	movf	??_LCDBusyLoop,w
  2327  065A  00B2               	movwf	LCDBusyLoop@status
  2328                           
  2329                           ;lcd_hd44780_pic16.c: 123: status=status<<4;
  2330  065B  0832               	movf	LCDBusyLoop@status,w
  2331  065C  00AE               	movwf	??_LCDBusyLoop
  2332  065D  3003               	movlw	3
  2333  065E                     u975:	
  2334  065E  1003               	clrc
  2335  065F  0DAE               	rlf	??_LCDBusyLoop,f
  2336  0660  3EFF               	addlw	-1
  2337  0661  1D03               	skipz
  2338  0662  2E5E               	goto	u975
  2339  0663  1003               	clrc
  2340  0664  0D2E               	rlf	??_LCDBusyLoop,w
  2341  0665  00AF               	movwf	??_LCDBusyLoop+1
  2342  0666  082F               	movf	??_LCDBusyLoop+1,w
  2343  0667  00B2               	movwf	LCDBusyLoop@status
  2344                           
  2345                           ;lcd_hd44780_pic16.c: 125: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2346  0668  2E69               	nop2	;2 cycle nop
  2347                           
  2348                           ;lcd_hd44780_pic16.c: 128: (RA1=0);
  2349  0669  1283               	bcf	3,5	;RP0=0, select bank0
  2350  066A  1303               	bcf	3,6	;RP1=0, select bank0
  2351  066B  1085               	bcf	5,1	;volatile
  2352                           
  2353                           ;lcd_hd44780_pic16.c: 129: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2354  066C  2E6D               	nop2	;2 cycle nop
  2355  066D  2E6E               	nop2	;2 cycle nop
  2356                           
  2357                           ;lcd_hd44780_pic16.c: 131: (RA1=1);
  2358  066E  1283               	bcf	3,5	;RP0=0, select bank0
  2359  066F  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0670  1485               	bsf	5,1	;volatile
  2361                           
  2362                           ;lcd_hd44780_pic16.c: 132: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2363  0671  2E72               	nop2	;2 cycle nop
  2364                           
  2365                           ;lcd_hd44780_pic16.c: 134: temp=(PORTD>>0);
  2366  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0674  0808               	movf	8,w	;volatile
  2369  0675  00AE               	movwf	??_LCDBusyLoop
  2370  0676  082E               	movf	??_LCDBusyLoop,w
  2371  0677  00B1               	movwf	LCDBusyLoop@temp
  2372                           
  2373                           ;lcd_hd44780_pic16.c: 135: temp&=0x0F;
  2374  0678  300F               	movlw	15
  2375  0679  00AE               	movwf	??_LCDBusyLoop
  2376  067A  082E               	movf	??_LCDBusyLoop,w
  2377  067B  05B1               	andwf	LCDBusyLoop@temp,f
  2378                           
  2379                           ;lcd_hd44780_pic16.c: 137: status=status|temp;
  2380  067C  0832               	movf	LCDBusyLoop@status,w
  2381  067D  0431               	iorwf	LCDBusyLoop@temp,w
  2382  067E  00AE               	movwf	??_LCDBusyLoop
  2383  067F  082E               	movf	??_LCDBusyLoop,w
  2384  0680  00B2               	movwf	LCDBusyLoop@status
  2385                           
  2386                           ;lcd_hd44780_pic16.c: 139: busy=status & 0b10000000;
  2387  0681  0832               	movf	LCDBusyLoop@status,w
  2388  0682  3980               	andlw	128
  2389  0683  00AE               	movwf	??_LCDBusyLoop
  2390  0684  082E               	movf	??_LCDBusyLoop,w
  2391  0685  00B0               	movwf	LCDBusyLoop@busy
  2392                           
  2393                           ;lcd_hd44780_pic16.c: 141: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2394  0686  2E87               	nop2	;2 cycle nop
  2395                           
  2396                           ;lcd_hd44780_pic16.c: 143: (RA1=0);
  2397  0687  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0688  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0689  1085               	bcf	5,1	;volatile
  2400                           
  2401                           ;lcd_hd44780_pic16.c: 144: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2402  068A  2E8B               	nop2	;2 cycle nop
  2403  068B  2E8C               	nop2	;2 cycle nop
  2404                           
  2405                           ;lcd_hd44780_pic16.c: 145: }while(busy);
  2406  068C  1283               	bcf	3,5	;RP0=0, select bank0
  2407  068D  1303               	bcf	3,6	;RP1=0, select bank0
  2408  068E  08B0               	movf	LCDBusyLoop@busy,f
  2409  068F  1D03               	skipz
  2410  0690  2E51               	goto	l1825
  2411                           
  2412                           ;lcd_hd44780_pic16.c: 147: (RA2=0);
  2413  0691  1105               	bcf	5,2	;volatile
  2414                           
  2415                           ;lcd_hd44780_pic16.c: 150: TRISD&=(~(0x0F<<0));
  2416  0692  30F0               	movlw	240
  2417  0693  00AE               	movwf	??_LCDBusyLoop
  2418  0694  082E               	movf	??_LCDBusyLoop,w
  2419  0695  1683               	bsf	3,5	;RP0=1, select bank1
  2420  0696  1303               	bcf	3,6	;RP1=0, select bank1
  2421  0697  0588               	andwf	8,f	;volatile
  2422  0698  0008               	return
  2423  0699                     __end_of_LCDBusyLoop:	
  2424                           
  2425                           	psect	text10
  2426  07E4                     __ptext10:	
  2427 ;; *************** function _timer2_initialize *****************
  2428 ;; Defined at:
  2429 ;;		line 27 in file "main.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    3
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function _timer2_initialize
  2459  07E4                     _timer2_initialize:	
  2460                           
  2461                           ;main.c: 28: T2CKPS0=1;
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _timer2_initialize: [wreg]
  2465  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  2466  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  2467  07E6  1412               	bsf	18,0	;volatile
  2468                           
  2469                           ;main.c: 29: T2CKPS1=0;
  2470  07E7  1092               	bcf	18,1	;volatile
  2471                           
  2472                           ;main.c: 30: PR2=100;
  2473  07E8  3064               	movlw	100
  2474  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  2475  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  2476  07EB  0092               	movwf	18	;volatile
  2477                           
  2478                           ;main.c: 31: TOUTPS0=1;
  2479  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2480  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2481  07EE  1592               	bsf	18,3	;volatile
  2482                           
  2483                           ;main.c: 32: TOUTPS1=1;
  2484  07EF  1612               	bsf	18,4	;volatile
  2485                           
  2486                           ;main.c: 33: TOUTPS2=1;
  2487  07F0  1692               	bsf	18,5	;volatile
  2488                           
  2489                           ;main.c: 34: TOUTPS2=1;
  2490  07F1  1692               	bsf	18,5	;volatile
  2491                           
  2492                           ;main.c: 35: TMR2ON=1;
  2493  07F2  1512               	bsf	18,2	;volatile
  2494                           
  2495                           ;main.c: 36: TMR2IE=1;
  2496  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  2497  07F4  1303               	bcf	3,6	;RP1=0, select bank1
  2498  07F5  148C               	bsf	12,1	;volatile
  2499                           
  2500                           ;main.c: 37: PEIE=1;
  2501  07F6  170B               	bsf	11,6	;volatile
  2502                           
  2503                           ;main.c: 38: GIE=1;
  2504  07F7  178B               	bsf	11,7	;volatile
  2505  07F8  0008               	return
  2506  07F9                     __end_of_timer2_initialize:	
  2507                           
  2508                           	psect	text11
  2509  0454                     __ptext11:	
  2510 ;; *************** function _isr *****************
  2511 ;; Defined at:
  2512 ;;		line 41 in file "main.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;		None               void
  2519 ;; Registers used:
  2520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0
  2528 ;;      Temps:          0       4       0       0       0
  2529 ;;      Totals:         0       4       0       0       0
  2530 ;;Total ram usage:        4 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    2
  2533 ;; This function calls:
  2534 ;;		_ReadADC
  2535 ;;		___ftdiv
  2536 ;;		___ftmul
  2537 ;;		___lwtoft
  2538 ;; This function is called by:
  2539 ;;		Interrupt level 1
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _isr
  2545  0454                     _isr:	
  2546                           
  2547                           ;main.c: 42: if (TMR2IE && TMR2IF)
  2548  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2550  0456  1C8C               	btfss	12,1	;volatile
  2551  0457  2CDB               	goto	i1l64
  2552  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2554  045A  1C8C               	btfss	12,1	;volatile
  2555  045B  2CDB               	goto	i1l64
  2556                           
  2557                           ;main.c: 43: {
  2558                           ;main.c: 44: TMR2IF=0;
  2559  045C  108C               	bcf	12,1	;volatile
  2560                           
  2561                           ;main.c: 45: count++;
  2562  045D  3001               	movlw	1
  2563  045E  07D6               	addwf	_count,f
  2564  045F  1803               	skipnc
  2565  0460  0AD7               	incf	_count+1,f
  2566  0461  3000               	movlw	0
  2567  0462  07D7               	addwf	_count+1,f
  2568                           
  2569                           ;main.c: 46: if(count==20)
  2570  0463  3014               	movlw	20
  2571  0464  0656               	xorwf	_count,w
  2572  0465  0457               	iorwf	_count+1,w
  2573  0466  1D03               	skipz
  2574  0467  2CDB               	goto	i1l64
  2575                           
  2576                           ;main.c: 47: {
  2577                           ;main.c: 48: count=0;
  2578  0468  01D6               	clrf	_count
  2579  0469  01D7               	clrf	_count+1
  2580                           
  2581                           ;main.c: 49: count1++;
  2582  046A  3001               	movlw	1
  2583  046B  07D8               	addwf	_count1,f
  2584  046C  1803               	skipnc
  2585  046D  0AD9               	incf	_count1+1,f
  2586  046E  3000               	movlw	0
  2587  046F  07D9               	addwf	_count1+1,f
  2588                           
  2589                           ;main.c: 50: if(do_dienap)
  2590  0470  085F               	movf	_do_dienap,w
  2591  0471  1903               	btfsc	3,2
  2592  0472  2CA8               	goto	i1l2293
  2593                           
  2594                           ;main.c: 51: {
  2595                           ;main.c: 52: Dienap=(float)(ReadADC(0));
  2596  0473  3000               	movlw	0
  2597  0474  120A  118A  21E0   	fcall	_ReadADC
      +       120A  118A         
  2598  0479  0871               	movf	?_ReadADC+1,w
  2599  047A  01FA               	clrf	?___lwtoft+1
  2600  047B  07FA               	addwf	?___lwtoft+1,f
  2601  047C  0870               	movf	?_ReadADC,w
  2602  047D  01F9               	clrf	?___lwtoft
  2603  047E  07F9               	addwf	?___lwtoft,f
  2604  047F  120A  158A  27C6   	fcall	___lwtoft
      +       120A  118A         
  2605  0484  0879               	movf	?___lwtoft,w
  2606  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0487  00CD               	movwf	_Dienap
  2609  0488  087A               	movf	?___lwtoft+1,w
  2610  0489  00CE               	movwf	_Dienap+1
  2611  048A  087B               	movf	?___lwtoft+2,w
  2612  048B  00CF               	movwf	_Dienap+2
  2613                           
  2614                           ;main.c: 53: Dienap=Dienap*1.962;
  2615  048C  3023               	movlw	35
  2616  048D  00F8               	movwf	?___ftmul
  2617  048E  30FB               	movlw	251
  2618  048F  00F9               	movwf	?___ftmul+1
  2619  0490  303F               	movlw	63
  2620  0491  00FA               	movwf	?___ftmul+2
  2621  0492  084D               	movf	_Dienap,w
  2622  0493  00FB               	movwf	?___ftmul+3
  2623  0494  084E               	movf	_Dienap+1,w
  2624  0495  00FC               	movwf	?___ftmul+4
  2625  0496  084F               	movf	_Dienap+2,w
  2626  0497  00FD               	movwf	?___ftmul+5
  2627  0498  120A  118A  22CD   	fcall	___ftmul
      +       120A  118A         
  2628  049D  0878               	movf	?___ftmul,w
  2629  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2630  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2631  04A0  00CD               	movwf	_Dienap
  2632  04A1  0879               	movf	?___ftmul+1,w
  2633  04A2  00CE               	movwf	_Dienap+1
  2634  04A3  087A               	movf	?___ftmul+2,w
  2635  04A4  00CF               	movwf	_Dienap+2
  2636                           
  2637                           ;main.c: 54: adc_ok=1;
  2638  04A5  01DE               	clrf	_adc_ok
  2639  04A6  0ADE               	incf	_adc_ok,f
  2640                           
  2641                           ;main.c: 55: }
  2642  04A7  2CDA               	goto	i1l2297
  2643  04A8                     i1l2293:	
  2644                           
  2645                           ;main.c: 56: else
  2646                           ;main.c: 57: {
  2647                           ;main.c: 58: Dong = (float)(ReadADC(1));
  2648  04A8  3001               	movlw	1
  2649  04A9  120A  118A  21E0   	fcall	_ReadADC
      +       120A  118A         
  2650  04AE  0871               	movf	?_ReadADC+1,w
  2651  04AF  01FA               	clrf	?___lwtoft+1
  2652  04B0  07FA               	addwf	?___lwtoft+1,f
  2653  04B1  0870               	movf	?_ReadADC,w
  2654  04B2  01F9               	clrf	?___lwtoft
  2655  04B3  07F9               	addwf	?___lwtoft,f
  2656  04B4  120A  158A  27C6   	fcall	___lwtoft
      +       120A  118A         
  2657  04B9  0879               	movf	?___lwtoft,w
  2658  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2659  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2660  04BC  00D0               	movwf	_Dong
  2661  04BD  087A               	movf	?___lwtoft+1,w
  2662  04BE  00D1               	movwf	_Dong+1
  2663  04BF  087B               	movf	?___lwtoft+2,w
  2664  04C0  00D2               	movwf	_Dong+2
  2665                           
  2666                           ;main.c: 59: Dong=Dong/2.55;
  2667  04C1  3033               	movlw	51
  2668  04C2  00F8               	movwf	?___ftdiv
  2669  04C3  3023               	movlw	35
  2670  04C4  00F9               	movwf	?___ftdiv+1
  2671  04C5  3040               	movlw	64
  2672  04C6  00FA               	movwf	?___ftdiv+2
  2673  04C7  0850               	movf	_Dong,w
  2674  04C8  00FB               	movwf	?___ftdiv+3
  2675  04C9  0851               	movf	_Dong+1,w
  2676  04CA  00FC               	movwf	?___ftdiv+4
  2677  04CB  0852               	movf	_Dong+2,w
  2678  04CC  00FD               	movwf	?___ftdiv+5
  2679  04CD  120A  118A  239E   	fcall	___ftdiv
      +       120A  118A         
  2680  04D2  0878               	movf	?___ftdiv,w
  2681  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2682  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2683  04D5  00D0               	movwf	_Dong
  2684  04D6  0879               	movf	?___ftdiv+1,w
  2685  04D7  00D1               	movwf	_Dong+1
  2686  04D8  087A               	movf	?___ftdiv+2,w
  2687  04D9  00D2               	movwf	_Dong+2
  2688  04DA                     i1l2297:	
  2689                           
  2690                           ;main.c: 60: }
  2691                           ;main.c: 61: do_dienap=~do_dienap;
  2692  04DA  09DF               	comf	_do_dienap,f
  2693  04DB                     i1l64:	
  2694  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2695  04DC  082D               	movf	??_isr+3,w
  2696  04DD  00FF               	movwf	127
  2697  04DE  082C               	movf	??_isr+2,w
  2698  04DF  008A               	movwf	10
  2699  04E0  082B               	movf	??_isr+1,w
  2700  04E1  0084               	movwf	4
  2701  04E2  0E2A               	swapf	??_isr^0,w
  2702  04E3  0083               	movwf	3
  2703  04E4  0EFE               	swapf	126,f
  2704  04E5  0E7E               	swapf	126,w
  2705  04E6  0009               	retfie
  2706  04E7                     __end_of_isr:	
  2707                           
  2708                           	psect	intentry
  2709  0004                     __pintentry:	
  2710                           ;incstack = 0
  2711                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2712                           
  2713  0004                     interrupt_function:	
  2714  007E                     saved_w	set	btemp
  2715  0004  00FE               	movwf	btemp
  2716  0005  0E03               	swapf	3,w
  2717  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0008  00AA               	movwf	??_isr
  2720  0009  0804               	movf	4,w
  2721  000A  00AB               	movwf	??_isr+1
  2722  000B  080A               	movf	10,w
  2723  000C  00AC               	movwf	??_isr+2
  2724  000D  087F               	movf	btemp+1,w
  2725  000E  00AD               	movwf	??_isr+3
  2726  000F  120A  118A  2C54   	ljmp	_isr
  2727                           
  2728                           	psect	text12
  2729  0FC6                     __ptext12:	
  2730 ;; *************** function ___lwtoft *****************
  2731 ;; Defined at:
  2732 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwtoft.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  c               2    9[COMMON] unsigned int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  3    9[COMMON] float 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         3       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0
  2748 ;;      Temps:          1       0       0       0       0
  2749 ;;      Totals:         4       0       0       0       0
  2750 ;;Total ram usage:        4 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    1
  2753 ;; This function calls:
  2754 ;;		___ftpack
  2755 ;; This function is called by:
  2756 ;;		_isr
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function ___lwtoft
  2762  0FC6                     ___lwtoft:	
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2766  0FC6  0879               	movf	___lwtoft@c,w
  2767  0FC7  00F0               	movwf	?___ftpack
  2768  0FC8  087A               	movf	___lwtoft@c+1,w
  2769  0FC9  00F1               	movwf	?___ftpack+1
  2770  0FCA  01F2               	clrf	?___ftpack+2
  2771  0FCB  308E               	movlw	142
  2772  0FCC  00FC               	movwf	??___lwtoft
  2773  0FCD  087C               	movf	??___lwtoft,w
  2774  0FCE  00F3               	movwf	?___ftpack+3
  2775  0FCF  01F4               	clrf	?___ftpack+4
  2776  0FD0  120A  118A  2575   	fcall	___ftpack
  2777  0FD3  0870               	movf	?___ftpack,w
  2778  0FD4  00F9               	movwf	?___lwtoft
  2779  0FD5  0871               	movf	?___ftpack+1,w
  2780  0FD6  00FA               	movwf	?___lwtoft+1
  2781  0FD7  0872               	movf	?___ftpack+2,w
  2782  0FD8  00FB               	movwf	?___lwtoft+2
  2783  0FD9  0008               	return
  2784  0FDA                     __end_of___lwtoft:	
  2785                           
  2786                           	psect	text13
  2787  02CD                     __ptext13:	
  2788 ;; *************** function ___ftmul *****************
  2789 ;; Defined at:
  2790 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftmul.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  f1              3    8[COMMON] float 
  2793 ;;  f2              3   11[COMMON] float 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2796 ;;  sign            1    9[BANK0 ] unsigned char 
  2797 ;;  cntr            1    8[BANK0 ] unsigned char 
  2798 ;;  exp             1    4[BANK0 ] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  3    8[COMMON] float 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         6       0       0       0       0
  2809 ;;      Locals:         0       6       0       0       0
  2810 ;;      Temps:          0       4       0       0       0
  2811 ;;      Totals:         6      10       0       0       0
  2812 ;;Total ram usage:       16 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    1
  2815 ;; This function calls:
  2816 ;;		___ftpack
  2817 ;; This function is called by:
  2818 ;;		_isr
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function ___ftmul
  2824  02CD                     ___ftmul:	
  2825                           
  2826                           ;incstack = 0
  2827                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2828  02CD  0878               	movf	___ftmul@f1,w
  2829  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2830  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2831  02D0  00A0               	movwf	??___ftmul
  2832  02D1  0879               	movf	___ftmul@f1+1,w
  2833  02D2  00A1               	movwf	??___ftmul+1
  2834  02D3  087A               	movf	___ftmul@f1+2,w
  2835  02D4  00A2               	movwf	??___ftmul+2
  2836  02D5  1003               	clrc
  2837  02D6  0D21               	rlf	??___ftmul+1,w
  2838  02D7  0D22               	rlf	??___ftmul+2,w
  2839  02D8  00A3               	movwf	??___ftmul+3
  2840  02D9  0823               	movf	??___ftmul+3,w
  2841  02DA  00A4               	movwf	___ftmul@exp
  2842  02DB  08A4               	movf	___ftmul@exp,f
  2843  02DC  1D03               	skipz
  2844  02DD  2AE5               	goto	i1l2225
  2845  02DE  3000               	movlw	0
  2846  02DF  00F8               	movwf	?___ftmul
  2847  02E0  3000               	movlw	0
  2848  02E1  00F9               	movwf	?___ftmul+1
  2849  02E2  3000               	movlw	0
  2850  02E3  00FA               	movwf	?___ftmul+2
  2851  02E4  0008               	return
  2852  02E5                     i1l2225:	
  2853  02E5  087B               	movf	___ftmul@f2,w
  2854  02E6  00A0               	movwf	??___ftmul
  2855  02E7  087C               	movf	___ftmul@f2+1,w
  2856  02E8  00A1               	movwf	??___ftmul+1
  2857  02E9  087D               	movf	___ftmul@f2+2,w
  2858  02EA  00A2               	movwf	??___ftmul+2
  2859  02EB  1003               	clrc
  2860  02EC  0D21               	rlf	??___ftmul+1,w
  2861  02ED  0D22               	rlf	??___ftmul+2,w
  2862  02EE  00A3               	movwf	??___ftmul+3
  2863  02EF  0823               	movf	??___ftmul+3,w
  2864  02F0  00A9               	movwf	___ftmul@sign
  2865  02F1  08A9               	movf	___ftmul@sign,f
  2866  02F2  1D03               	skipz
  2867  02F3  2AFB               	goto	i1l2231
  2868  02F4  3000               	movlw	0
  2869  02F5  00F8               	movwf	?___ftmul
  2870  02F6  3000               	movlw	0
  2871  02F7  00F9               	movwf	?___ftmul+1
  2872  02F8  3000               	movlw	0
  2873  02F9  00FA               	movwf	?___ftmul+2
  2874  02FA  0008               	return
  2875  02FB                     i1l2231:	
  2876  02FB  0829               	movf	___ftmul@sign,w
  2877  02FC  3E7B               	addlw	123
  2878  02FD  00A0               	movwf	??___ftmul
  2879  02FE  0820               	movf	??___ftmul,w
  2880  02FF  07A4               	addwf	___ftmul@exp,f
  2881  0300  0878               	movf	___ftmul@f1,w
  2882  0301  00A0               	movwf	??___ftmul
  2883  0302  0879               	movf	___ftmul@f1+1,w
  2884  0303  00A1               	movwf	??___ftmul+1
  2885  0304  087A               	movf	___ftmul@f1+2,w
  2886  0305  00A2               	movwf	??___ftmul+2
  2887  0306  3010               	movlw	16
  2888  0307                     u174_25:	
  2889  0307  1003               	clrc
  2890  0308  0CA2               	rrf	??___ftmul+2,f
  2891  0309  0CA1               	rrf	??___ftmul+1,f
  2892  030A  0CA0               	rrf	??___ftmul,f
  2893  030B  3EFF               	addlw	-1
  2894  030C  1D03               	skipz
  2895  030D  2B07               	goto	u174_25
  2896  030E  0820               	movf	??___ftmul,w
  2897  030F  00A3               	movwf	??___ftmul+3
  2898  0310  0823               	movf	??___ftmul+3,w
  2899  0311  00A9               	movwf	___ftmul@sign
  2900  0312  087B               	movf	___ftmul@f2,w
  2901  0313  00A0               	movwf	??___ftmul
  2902  0314  087C               	movf	___ftmul@f2+1,w
  2903  0315  00A1               	movwf	??___ftmul+1
  2904  0316  087D               	movf	___ftmul@f2+2,w
  2905  0317  00A2               	movwf	??___ftmul+2
  2906  0318  3010               	movlw	16
  2907  0319                     u175_25:	
  2908  0319  1003               	clrc
  2909  031A  0CA2               	rrf	??___ftmul+2,f
  2910  031B  0CA1               	rrf	??___ftmul+1,f
  2911  031C  0CA0               	rrf	??___ftmul,f
  2912  031D  3EFF               	addlw	-1
  2913  031E  1D03               	skipz
  2914  031F  2B19               	goto	u175_25
  2915  0320  0820               	movf	??___ftmul,w
  2916  0321  00A3               	movwf	??___ftmul+3
  2917  0322  0823               	movf	??___ftmul+3,w
  2918  0323  06A9               	xorwf	___ftmul@sign,f
  2919  0324  3080               	movlw	128
  2920  0325  00A0               	movwf	??___ftmul
  2921  0326  0820               	movf	??___ftmul,w
  2922  0327  05A9               	andwf	___ftmul@sign,f
  2923  0328  17F9               	bsf	___ftmul@f1+1,7
  2924  0329  17FC               	bsf	___ftmul@f2+1,7
  2925  032A  30FF               	movlw	255
  2926  032B  05FB               	andwf	___ftmul@f2,f
  2927  032C  30FF               	movlw	255
  2928  032D  05FC               	andwf	___ftmul@f2+1,f
  2929  032E  3000               	movlw	0
  2930  032F  05FD               	andwf	___ftmul@f2+2,f
  2931  0330  3000               	movlw	0
  2932  0331  00A5               	movwf	___ftmul@f3_as_product
  2933  0332  3000               	movlw	0
  2934  0333  00A6               	movwf	___ftmul@f3_as_product+1
  2935  0334  3000               	movlw	0
  2936  0335  00A7               	movwf	___ftmul@f3_as_product+2
  2937  0336  3007               	movlw	7
  2938  0337  00A0               	movwf	??___ftmul
  2939  0338  0820               	movf	??___ftmul,w
  2940  0339  00A8               	movwf	___ftmul@cntr
  2941  033A                     i1l2243:	
  2942  033A  1C78               	btfss	___ftmul@f1,0
  2943  033B  2B4A               	goto	i1l2247
  2944  033C  087B               	movf	___ftmul@f2,w
  2945  033D  07A5               	addwf	___ftmul@f3_as_product,f
  2946  033E  087C               	movf	___ftmul@f2+1,w
  2947  033F  1103               	clrz
  2948  0340  1803               	skipnc
  2949  0341  0A7C               	incf	___ftmul@f2+1,w
  2950  0342  1D03               	btfss	3,2
  2951  0343  07A6               	addwf	___ftmul@f3_as_product+1,f
  2952  0344  087D               	movf	___ftmul@f2+2,w
  2953  0345  1103               	clrz
  2954  0346  1803               	skipnc
  2955  0347  0A7D               	incf	___ftmul@f2+2,w
  2956  0348  1D03               	btfss	3,2
  2957  0349  07A7               	addwf	___ftmul@f3_as_product+2,f
  2958  034A                     i1l2247:	
  2959  034A  3001               	movlw	1
  2960  034B                     u178_25:	
  2961  034B  1003               	clrc
  2962  034C  0CFA               	rrf	___ftmul@f1+2,f
  2963  034D  0CF9               	rrf	___ftmul@f1+1,f
  2964  034E  0CF8               	rrf	___ftmul@f1,f
  2965  034F  3EFF               	addlw	-1
  2966  0350  1D03               	skipz
  2967  0351  2B4B               	goto	u178_25
  2968  0352  3001               	movlw	1
  2969  0353                     u179_25:	
  2970  0353  1003               	clrc
  2971  0354  0DFB               	rlf	___ftmul@f2,f
  2972  0355  0DFC               	rlf	___ftmul@f2+1,f
  2973  0356  0DFD               	rlf	___ftmul@f2+2,f
  2974  0357  3EFF               	addlw	-1
  2975  0358  1D03               	skipz
  2976  0359  2B53               	goto	u179_25
  2977  035A  3001               	movlw	1
  2978  035B  02A8               	subwf	___ftmul@cntr,f
  2979  035C  1D03               	btfss	3,2
  2980  035D  2B3A               	goto	i1l2243
  2981  035E  3009               	movlw	9
  2982  035F  00A0               	movwf	??___ftmul
  2983  0360  0820               	movf	??___ftmul,w
  2984  0361  00A8               	movwf	___ftmul@cntr
  2985  0362                     i1l2255:	
  2986  0362  1C78               	btfss	___ftmul@f1,0
  2987  0363  2B72               	goto	i1l2259
  2988  0364  087B               	movf	___ftmul@f2,w
  2989  0365  07A5               	addwf	___ftmul@f3_as_product,f
  2990  0366  087C               	movf	___ftmul@f2+1,w
  2991  0367  1103               	clrz
  2992  0368  1803               	skipnc
  2993  0369  0A7C               	incf	___ftmul@f2+1,w
  2994  036A  1D03               	btfss	3,2
  2995  036B  07A6               	addwf	___ftmul@f3_as_product+1,f
  2996  036C  087D               	movf	___ftmul@f2+2,w
  2997  036D  1103               	clrz
  2998  036E  1803               	skipnc
  2999  036F  0A7D               	incf	___ftmul@f2+2,w
  3000  0370  1D03               	btfss	3,2
  3001  0371  07A7               	addwf	___ftmul@f3_as_product+2,f
  3002  0372                     i1l2259:	
  3003  0372  3001               	movlw	1
  3004  0373                     u183_25:	
  3005  0373  1003               	clrc
  3006  0374  0CFA               	rrf	___ftmul@f1+2,f
  3007  0375  0CF9               	rrf	___ftmul@f1+1,f
  3008  0376  0CF8               	rrf	___ftmul@f1,f
  3009  0377  3EFF               	addlw	-1
  3010  0378  1D03               	skipz
  3011  0379  2B73               	goto	u183_25
  3012  037A  3001               	movlw	1
  3013  037B                     u184_25:	
  3014  037B  1003               	clrc
  3015  037C  0CA7               	rrf	___ftmul@f3_as_product+2,f
  3016  037D  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3017  037E  0CA5               	rrf	___ftmul@f3_as_product,f
  3018  037F  3EFF               	addlw	-1
  3019  0380  1D03               	skipz
  3020  0381  2B7B               	goto	u184_25
  3021  0382  3001               	movlw	1
  3022  0383  02A8               	subwf	___ftmul@cntr,f
  3023  0384  1D03               	btfss	3,2
  3024  0385  2B62               	goto	i1l2255
  3025  0386  0825               	movf	___ftmul@f3_as_product,w
  3026  0387  00F0               	movwf	?___ftpack
  3027  0388  0826               	movf	___ftmul@f3_as_product+1,w
  3028  0389  00F1               	movwf	?___ftpack+1
  3029  038A  0827               	movf	___ftmul@f3_as_product+2,w
  3030  038B  00F2               	movwf	?___ftpack+2
  3031  038C  0824               	movf	___ftmul@exp,w
  3032  038D  00A0               	movwf	??___ftmul
  3033  038E  0820               	movf	??___ftmul,w
  3034  038F  00F3               	movwf	?___ftpack+3
  3035  0390  0829               	movf	___ftmul@sign,w
  3036  0391  00A1               	movwf	??___ftmul+1
  3037  0392  0821               	movf	??___ftmul+1,w
  3038  0393  00F4               	movwf	?___ftpack+4
  3039  0394  120A  118A  2575   	fcall	___ftpack
  3040  0397  0870               	movf	?___ftpack,w
  3041  0398  00F8               	movwf	?___ftmul
  3042  0399  0871               	movf	?___ftpack+1,w
  3043  039A  00F9               	movwf	?___ftmul+1
  3044  039B  0872               	movf	?___ftpack+2,w
  3045  039C  00FA               	movwf	?___ftmul+2
  3046  039D  0008               	return
  3047  039E                     __end_of___ftmul:	
  3048                           
  3049                           	psect	text14
  3050  039E                     __ptext14:	
  3051 ;; *************** function ___ftdiv *****************
  3052 ;; Defined at:
  3053 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftdiv.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  f2              3    8[COMMON] float 
  3056 ;;  f1              3   11[COMMON] float 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  f3              3    5[BANK0 ] float 
  3059 ;;  sign            1    9[BANK0 ] unsigned char 
  3060 ;;  exp             1    8[BANK0 ] unsigned char 
  3061 ;;  cntr            1    4[BANK0 ] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  3    8[COMMON] float 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0, pclath, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         6       0       0       0       0
  3072 ;;      Locals:         0       6       0       0       0
  3073 ;;      Temps:          0       4       0       0       0
  3074 ;;      Totals:         6      10       0       0       0
  3075 ;;Total ram usage:       16 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    1
  3078 ;; This function calls:
  3079 ;;		___ftpack
  3080 ;; This function is called by:
  3081 ;;		_isr
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function ___ftdiv
  3087  039E                     ___ftdiv:	
  3088                           
  3089                           ;incstack = 0
  3090                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3091  039E  087B               	movf	___ftdiv@f1,w
  3092  039F  1283               	bcf	3,5	;RP0=0, select bank0
  3093  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  3094  03A1  00A0               	movwf	??___ftdiv
  3095  03A2  087C               	movf	___ftdiv@f1+1,w
  3096  03A3  00A1               	movwf	??___ftdiv+1
  3097  03A4  087D               	movf	___ftdiv@f1+2,w
  3098  03A5  00A2               	movwf	??___ftdiv+2
  3099  03A6  1003               	clrc
  3100  03A7  0D21               	rlf	??___ftdiv+1,w
  3101  03A8  0D22               	rlf	??___ftdiv+2,w
  3102  03A9  00A3               	movwf	??___ftdiv+3
  3103  03AA  0823               	movf	??___ftdiv+3,w
  3104  03AB  00A8               	movwf	___ftdiv@exp
  3105  03AC  08A8               	movf	___ftdiv@exp,f
  3106  03AD  1D03               	skipz
  3107  03AE  2BB6               	goto	i1l2183
  3108  03AF  3000               	movlw	0
  3109  03B0  00F8               	movwf	?___ftdiv
  3110  03B1  3000               	movlw	0
  3111  03B2  00F9               	movwf	?___ftdiv+1
  3112  03B3  3000               	movlw	0
  3113  03B4  00FA               	movwf	?___ftdiv+2
  3114  03B5  0008               	return
  3115  03B6                     i1l2183:	
  3116  03B6  0878               	movf	___ftdiv@f2,w
  3117  03B7  00A0               	movwf	??___ftdiv
  3118  03B8  0879               	movf	___ftdiv@f2+1,w
  3119  03B9  00A1               	movwf	??___ftdiv+1
  3120  03BA  087A               	movf	___ftdiv@f2+2,w
  3121  03BB  00A2               	movwf	??___ftdiv+2
  3122  03BC  1003               	clrc
  3123  03BD  0D21               	rlf	??___ftdiv+1,w
  3124  03BE  0D22               	rlf	??___ftdiv+2,w
  3125  03BF  00A3               	movwf	??___ftdiv+3
  3126  03C0  0823               	movf	??___ftdiv+3,w
  3127  03C1  00A9               	movwf	___ftdiv@sign
  3128  03C2  08A9               	movf	___ftdiv@sign,f
  3129  03C3  1D03               	skipz
  3130  03C4  2BCC               	goto	i1l2189
  3131  03C5  3000               	movlw	0
  3132  03C6  00F8               	movwf	?___ftdiv
  3133  03C7  3000               	movlw	0
  3134  03C8  00F9               	movwf	?___ftdiv+1
  3135  03C9  3000               	movlw	0
  3136  03CA  00FA               	movwf	?___ftdiv+2
  3137  03CB  0008               	return
  3138  03CC                     i1l2189:	
  3139  03CC  3000               	movlw	0
  3140  03CD  00A5               	movwf	___ftdiv@f3
  3141  03CE  3000               	movlw	0
  3142  03CF  00A6               	movwf	___ftdiv@f3+1
  3143  03D0  3000               	movlw	0
  3144  03D1  00A7               	movwf	___ftdiv@f3+2
  3145  03D2  3089               	movlw	137
  3146  03D3  0729               	addwf	___ftdiv@sign,w
  3147  03D4  00A0               	movwf	??___ftdiv
  3148  03D5  0820               	movf	??___ftdiv,w
  3149  03D6  02A8               	subwf	___ftdiv@exp,f
  3150  03D7  087B               	movf	___ftdiv@f1,w
  3151  03D8  00A0               	movwf	??___ftdiv
  3152  03D9  087C               	movf	___ftdiv@f1+1,w
  3153  03DA  00A1               	movwf	??___ftdiv+1
  3154  03DB  087D               	movf	___ftdiv@f1+2,w
  3155  03DC  00A2               	movwf	??___ftdiv+2
  3156  03DD  3010               	movlw	16
  3157  03DE                     u166_25:	
  3158  03DE  1003               	clrc
  3159  03DF  0CA2               	rrf	??___ftdiv+2,f
  3160  03E0  0CA1               	rrf	??___ftdiv+1,f
  3161  03E1  0CA0               	rrf	??___ftdiv,f
  3162  03E2  3EFF               	addlw	-1
  3163  03E3  1D03               	skipz
  3164  03E4  2BDE               	goto	u166_25
  3165  03E5  0820               	movf	??___ftdiv,w
  3166  03E6  00A3               	movwf	??___ftdiv+3
  3167  03E7  0823               	movf	??___ftdiv+3,w
  3168  03E8  00A9               	movwf	___ftdiv@sign
  3169  03E9  0878               	movf	___ftdiv@f2,w
  3170  03EA  00A0               	movwf	??___ftdiv
  3171  03EB  0879               	movf	___ftdiv@f2+1,w
  3172  03EC  00A1               	movwf	??___ftdiv+1
  3173  03ED  087A               	movf	___ftdiv@f2+2,w
  3174  03EE  00A2               	movwf	??___ftdiv+2
  3175  03EF  3010               	movlw	16
  3176  03F0                     u167_25:	
  3177  03F0  1003               	clrc
  3178  03F1  0CA2               	rrf	??___ftdiv+2,f
  3179  03F2  0CA1               	rrf	??___ftdiv+1,f
  3180  03F3  0CA0               	rrf	??___ftdiv,f
  3181  03F4  3EFF               	addlw	-1
  3182  03F5  1D03               	skipz
  3183  03F6  2BF0               	goto	u167_25
  3184  03F7  0820               	movf	??___ftdiv,w
  3185  03F8  00A3               	movwf	??___ftdiv+3
  3186  03F9  0823               	movf	??___ftdiv+3,w
  3187  03FA  06A9               	xorwf	___ftdiv@sign,f
  3188  03FB  3080               	movlw	128
  3189  03FC  00A0               	movwf	??___ftdiv
  3190  03FD  0820               	movf	??___ftdiv,w
  3191  03FE  05A9               	andwf	___ftdiv@sign,f
  3192  03FF  17FC               	bsf	___ftdiv@f1+1,7
  3193  0400  30FF               	movlw	255
  3194  0401  05FB               	andwf	___ftdiv@f1,f
  3195  0402  30FF               	movlw	255
  3196  0403  05FC               	andwf	___ftdiv@f1+1,f
  3197  0404  3000               	movlw	0
  3198  0405  05FD               	andwf	___ftdiv@f1+2,f
  3199  0406  17F9               	bsf	___ftdiv@f2+1,7
  3200  0407  30FF               	movlw	255
  3201  0408  05F8               	andwf	___ftdiv@f2,f
  3202  0409  30FF               	movlw	255
  3203  040A  05F9               	andwf	___ftdiv@f2+1,f
  3204  040B  3000               	movlw	0
  3205  040C  05FA               	andwf	___ftdiv@f2+2,f
  3206  040D  3018               	movlw	24
  3207  040E  00A0               	movwf	??___ftdiv
  3208  040F  0820               	movf	??___ftdiv,w
  3209  0410  00A4               	movwf	___ftdiv@cntr
  3210  0411                     i1l2203:	
  3211  0411  3001               	movlw	1
  3212  0412                     u168_25:	
  3213  0412  1003               	clrc
  3214  0413  0DA5               	rlf	___ftdiv@f3,f
  3215  0414  0DA6               	rlf	___ftdiv@f3+1,f
  3216  0415  0DA7               	rlf	___ftdiv@f3+2,f
  3217  0416  3EFF               	addlw	-1
  3218  0417  1D03               	skipz
  3219  0418  2C12               	goto	u168_25
  3220  0419  087A               	movf	___ftdiv@f2+2,w
  3221  041A  027D               	subwf	___ftdiv@f1+2,w
  3222  041B  1D03               	skipz
  3223  041C  2C23               	goto	u169_25
  3224  041D  0879               	movf	___ftdiv@f2+1,w
  3225  041E  027C               	subwf	___ftdiv@f1+1,w
  3226  041F  1D03               	skipz
  3227  0420  2C23               	goto	u169_25
  3228  0421  0878               	movf	___ftdiv@f2,w
  3229  0422  027B               	subwf	___ftdiv@f1,w
  3230  0423                     u169_25:	
  3231  0423  1C03               	skipc
  3232  0424  2C30               	goto	i1l2211
  3233  0425  0878               	movf	___ftdiv@f2,w
  3234  0426  02FB               	subwf	___ftdiv@f1,f
  3235  0427  0879               	movf	___ftdiv@f2+1,w
  3236  0428  1C03               	skipc
  3237  0429  0F79               	incfsz	___ftdiv@f2+1,w
  3238  042A  02FC               	subwf	___ftdiv@f1+1,f
  3239  042B  087A               	movf	___ftdiv@f2+2,w
  3240  042C  1C03               	skipc
  3241  042D  0A7A               	incf	___ftdiv@f2+2,w
  3242  042E  02FD               	subwf	___ftdiv@f1+2,f
  3243  042F  1425               	bsf	___ftdiv@f3,0
  3244  0430                     i1l2211:	
  3245  0430  3001               	movlw	1
  3246  0431                     u170_25:	
  3247  0431  1003               	clrc
  3248  0432  0DFB               	rlf	___ftdiv@f1,f
  3249  0433  0DFC               	rlf	___ftdiv@f1+1,f
  3250  0434  0DFD               	rlf	___ftdiv@f1+2,f
  3251  0435  3EFF               	addlw	-1
  3252  0436  1D03               	skipz
  3253  0437  2C31               	goto	u170_25
  3254  0438  3001               	movlw	1
  3255  0439  02A4               	subwf	___ftdiv@cntr,f
  3256  043A  1D03               	btfss	3,2
  3257  043B  2C11               	goto	i1l2203
  3258  043C  0825               	movf	___ftdiv@f3,w
  3259  043D  00F0               	movwf	?___ftpack
  3260  043E  0826               	movf	___ftdiv@f3+1,w
  3261  043F  00F1               	movwf	?___ftpack+1
  3262  0440  0827               	movf	___ftdiv@f3+2,w
  3263  0441  00F2               	movwf	?___ftpack+2
  3264  0442  0828               	movf	___ftdiv@exp,w
  3265  0443  00A0               	movwf	??___ftdiv
  3266  0444  0820               	movf	??___ftdiv,w
  3267  0445  00F3               	movwf	?___ftpack+3
  3268  0446  0829               	movf	___ftdiv@sign,w
  3269  0447  00A1               	movwf	??___ftdiv+1
  3270  0448  0821               	movf	??___ftdiv+1,w
  3271  0449  00F4               	movwf	?___ftpack+4
  3272  044A  120A  118A  2575   	fcall	___ftpack
  3273  044D  0870               	movf	?___ftpack,w
  3274  044E  00F8               	movwf	?___ftdiv
  3275  044F  0871               	movf	?___ftpack+1,w
  3276  0450  00F9               	movwf	?___ftdiv+1
  3277  0451  0872               	movf	?___ftpack+2,w
  3278  0452  00FA               	movwf	?___ftdiv+2
  3279  0453  0008               	return
  3280  0454                     __end_of___ftdiv:	
  3281                           
  3282                           	psect	text15
  3283  0575                     __ptext15:	
  3284 ;; *************** function ___ftpack *****************
  3285 ;; Defined at:
  3286 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\float.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  arg             3    0[COMMON] unsigned um
  3289 ;;  exp             1    3[COMMON] unsigned char 
  3290 ;;  sign            1    4[COMMON] unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  3    0[COMMON] float 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3302 ;;      Params:         5       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0
  3304 ;;      Temps:          3       0       0       0       0
  3305 ;;      Totals:         8       0       0       0       0
  3306 ;;Total ram usage:        8 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		___ftdiv
  3312 ;;		___ftmul
  3313 ;;		___lwtoft
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function ___ftpack
  3319  0575                     ___ftpack:	
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3323  0575  0873               	movf	___ftpack@exp,w
  3324  0576  1903               	btfsc	3,2
  3325  0577  2D7D               	goto	i1l1903
  3326  0578  0872               	movf	___ftpack@arg+2,w
  3327  0579  0471               	iorwf	___ftpack@arg+1,w
  3328  057A  0470               	iorwf	___ftpack@arg,w
  3329  057B  1D03               	skipz
  3330  057C  2D90               	goto	i1l1909
  3331  057D                     i1l1903:	
  3332  057D  3000               	movlw	0
  3333  057E  00F0               	movwf	?___ftpack
  3334  057F  3000               	movlw	0
  3335  0580  00F1               	movwf	?___ftpack+1
  3336  0581  3000               	movlw	0
  3337  0582  00F2               	movwf	?___ftpack+2
  3338  0583  0008               	return
  3339  0584                     i1l1907:	
  3340  0584  3001               	movlw	1
  3341  0585  00F5               	movwf	??___ftpack
  3342  0586  0875               	movf	??___ftpack,w
  3343  0587  07F3               	addwf	___ftpack@exp,f
  3344  0588  3001               	movlw	1
  3345  0589                     u107_25:	
  3346  0589  1003               	clrc
  3347  058A  0CF2               	rrf	___ftpack@arg+2,f
  3348  058B  0CF1               	rrf	___ftpack@arg+1,f
  3349  058C  0CF0               	rrf	___ftpack@arg,f
  3350  058D  3EFF               	addlw	-1
  3351  058E  1D03               	skipz
  3352  058F  2D89               	goto	u107_25
  3353  0590                     i1l1909:	
  3354  0590  30FE               	movlw	254
  3355  0591  0572               	andwf	___ftpack@arg+2,w
  3356  0592  1903               	btfsc	3,2
  3357  0593  2DAB               	goto	i1l401
  3358  0594  2D84               	goto	i1l1907
  3359  0595                     i1l1911:	
  3360  0595  3001               	movlw	1
  3361  0596  00F5               	movwf	??___ftpack
  3362  0597  0875               	movf	??___ftpack,w
  3363  0598  07F3               	addwf	___ftpack@exp,f
  3364  0599  3001               	movlw	1
  3365  059A  07F0               	addwf	___ftpack@arg,f
  3366  059B  3000               	movlw	0
  3367  059C  1803               	skipnc
  3368  059D  3001               	movlw	1
  3369  059E  07F1               	addwf	___ftpack@arg+1,f
  3370  059F  3000               	movlw	0
  3371  05A0  1803               	skipnc
  3372  05A1  3001               	movlw	1
  3373  05A2  07F2               	addwf	___ftpack@arg+2,f
  3374  05A3  3001               	movlw	1
  3375  05A4                     u109_25:	
  3376  05A4  1003               	clrc
  3377  05A5  0CF2               	rrf	___ftpack@arg+2,f
  3378  05A6  0CF1               	rrf	___ftpack@arg+1,f
  3379  05A7  0CF0               	rrf	___ftpack@arg,f
  3380  05A8  3EFF               	addlw	-1
  3381  05A9  1D03               	skipz
  3382  05AA  2DA4               	goto	u109_25
  3383  05AB                     i1l401:	
  3384  05AB  30FF               	movlw	255
  3385  05AC  0572               	andwf	___ftpack@arg+2,w
  3386  05AD  1903               	btfsc	3,2
  3387  05AE  2DBA               	goto	i1l1919
  3388  05AF  2D95               	goto	i1l1911
  3389  05B0                     i1l1917:	
  3390  05B0  3001               	movlw	1
  3391  05B1  02F3               	subwf	___ftpack@exp,f
  3392  05B2  3001               	movlw	1
  3393  05B3                     u111_25:	
  3394  05B3  1003               	clrc
  3395  05B4  0DF0               	rlf	___ftpack@arg,f
  3396  05B5  0DF1               	rlf	___ftpack@arg+1,f
  3397  05B6  0DF2               	rlf	___ftpack@arg+2,f
  3398  05B7  3EFF               	addlw	-1
  3399  05B8  1D03               	skipz
  3400  05B9  2DB3               	goto	u111_25
  3401  05BA                     i1l1919:	
  3402  05BA  1FF1               	btfss	___ftpack@arg+1,7
  3403  05BB  2DB0               	goto	i1l1917
  3404  05BC  1873               	btfsc	___ftpack@exp,0
  3405  05BD  2DC4               	goto	i1l407
  3406  05BE  30FF               	movlw	255
  3407  05BF  05F0               	andwf	___ftpack@arg,f
  3408  05C0  307F               	movlw	127
  3409  05C1  05F1               	andwf	___ftpack@arg+1,f
  3410  05C2  30FF               	movlw	255
  3411  05C3  05F2               	andwf	___ftpack@arg+2,f
  3412  05C4                     i1l407:	
  3413  05C4  1003               	clrc
  3414  05C5  0CF3               	rrf	___ftpack@exp,f
  3415  05C6  0873               	movf	___ftpack@exp,w
  3416  05C7  00F5               	movwf	??___ftpack
  3417  05C8  01F6               	clrf	??___ftpack+1
  3418  05C9  01F7               	clrf	??___ftpack+2
  3419  05CA  3010               	movlw	16
  3420  05CB                     u114_25:	
  3421  05CB  1003               	clrc
  3422  05CC  0DF5               	rlf	??___ftpack,f
  3423  05CD  0DF6               	rlf	??___ftpack+1,f
  3424  05CE  0DF7               	rlf	??___ftpack+2,f
  3425  05CF  3EFF               	addlw	-1
  3426  05D0  1D03               	skipz
  3427  05D1  2DCB               	goto	u114_25
  3428  05D2  0875               	movf	??___ftpack,w
  3429  05D3  04F0               	iorwf	___ftpack@arg,f
  3430  05D4  0876               	movf	??___ftpack+1,w
  3431  05D5  04F1               	iorwf	___ftpack@arg+1,f
  3432  05D6  0877               	movf	??___ftpack+2,w
  3433  05D7  04F2               	iorwf	___ftpack@arg+2,f
  3434  05D8  0874               	movf	___ftpack@sign,w
  3435  05D9  1903               	btfsc	3,2
  3436  05DA  0008               	return
  3437  05DB  17F2               	bsf	___ftpack@arg+2,7
  3438  05DC  0008               	return
  3439  05DD                     __end_of___ftpack:	
  3440                           
  3441                           	psect	text16
  3442  01E0                     __ptext16:	
  3443 ;; *************** function _ReadADC *****************
  3444 ;; Defined at:
  3445 ;;		line 13 in file "ADC0808.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  Channel         1    wreg     unsigned char 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  Channel         1    4[COMMON] unsigned char 
  3450 ;;  i               2    7[COMMON] unsigned int 
  3451 ;;  ADC_value       2    5[COMMON] unsigned int 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2    0[COMMON] unsigned int 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         2       0       0       0       0
  3462 ;;      Locals:         5       0       0       0       0
  3463 ;;      Temps:          2       0       0       0       0
  3464 ;;      Totals:         9       0       0       0       0
  3465 ;;Total ram usage:        9 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_isr
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function _ReadADC
  3476  01E0                     _ReadADC:	
  3477                           
  3478                           ;incstack = 0
  3479                           ; Regs used in _ReadADC: [wreg-fsr0h+status,2+status,0]
  3480                           ;ReadADC@Channel stored from wreg
  3481  01E0  00F4               	movwf	ReadADC@Channel
  3482                           
  3483                           ;ADC0808.c: 14: unsigned int i = 0;
  3484  01E1  01F7               	clrf	ReadADC@i
  3485  01E2  01F8               	clrf	ReadADC@i+1
  3486                           
  3487                           ;ADC0808.c: 15: unsigned int ADC_value = 0;
  3488  01E3  01F5               	clrf	ReadADC@ADC_value
  3489  01E4  01F6               	clrf	ReadADC@ADC_value+1
  3490                           
  3491                           ;ADC0808.c: 17: i='a';
  3492  01E5  3061               	movlw	97
  3493  01E6  00F7               	movwf	ReadADC@i
  3494  01E7  3000               	movlw	0
  3495  01E8  00F8               	movwf	ReadADC@i+1
  3496                           
  3497                           ;ADC0808.c: 20: switch(Channel)
  3498  01E9  2A10               	goto	i1l2109
  3499  01EA                     i1l159:	
  3500                           ;ADC0808.c: 21: {
  3501                           ;ADC0808.c: 22: case 0: PORTCbits.RC2 = 0; PORTCbits.RC1 = 0; PORTCbits.RC0 = 0; break;
  3502                           
  3503  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3504  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3505  01EC  1107               	bcf	7,2	;volatile
  3506  01ED  29FD               	goto	L13
  3507  01EE                     i1l161:	
  3508                           ;ADC0808.c: 23: case 1: PORTCbits.RC2 = 0; PORTCbits.RC1 = 0; PORTCbits.RC0 = 1; break;
  3509                           
  3510  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3511  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  3512  01F0  1107               	bcf	7,2	;volatile
  3513  01F1  2A02               	goto	L14
  3514  01F2                     i1l162:	
  3515                           ;ADC0808.c: 24: case 2: PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 = 0; break;
  3516                           
  3517  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3518  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3519  01F4  1107               	bcf	7,2	;volatile
  3520  01F5  2A07               	goto	L11
  3521  01F6                     i1l163:	
  3522                           ;ADC0808.c: 25: case 3: PORTCbits.RC2 = 0; PORTCbits.RC1 = 1; PORTCbits.RC0 = 1; break;
  3523                           
  3524  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3525  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  3526  01F8  1107               	bcf	7,2	;volatile
  3527  01F9  2A0D               	goto	L12
  3528  01FA                     i1l164:	
  3529                           ;ADC0808.c: 26: case 4: PORTCbits.RC2 = 1; PORTCbits.RC1 = 0; PORTCbits.RC0 = 0; break;
  3530                           
  3531  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3532  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  3533  01FC  1507               	bsf	7,2	;volatile
  3534  01FD                     L13:	
  3535  01FD  1087               	bcf	7,1	;volatile
  3536  01FE  2A08               	goto	L9
  3537  01FF                     i1l165:	
  3538                           ;ADC0808.c: 27: case 5: PORTCbits.RC2 = 1; PORTCbits.RC1 = 0; PORTCbits.RC0 = 1; break;
  3539                           
  3540  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0200  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0201  1507               	bsf	7,2	;volatile
  3543  0202                     L14:	
  3544  0202  1087               	bcf	7,1	;volatile
  3545  0203  2A0E               	goto	L10
  3546  0204                     i1l166:	
  3547                           ;ADC0808.c: 28: case 6: PORTCbits.RC2 = 1; PORTCbits.RC1 = 1; PORTCbits.RC0 = 0; break;
  3548                           
  3549  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3551  0206  1507               	bsf	7,2	;volatile
  3552  0207                     L11:	
  3553  0207  1487               	bsf	7,1	;volatile
  3554  0208                     L9:	
  3555  0208  1007               	bcf	7,0	;volatile
  3556  0209  2A2A               	goto	i1l2111
  3557  020A                     i1l167:	
  3558                           ;ADC0808.c: 29: case 7: PORTCbits.RC2 = 1; PORTCbits.RC1 = 1; PORTCbits.RC0 = 1; break;
  3559                           
  3560  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3561  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3562  020C  1507               	bsf	7,2	;volatile
  3563  020D                     L12:	
  3564  020D  1487               	bsf	7,1	;volatile
  3565  020E                     L10:	
  3566  020E  1407               	bsf	7,0	;volatile
  3567                           
  3568                           ;ADC0808.c: 30: }
  3569  020F  2A2A               	goto	i1l2111
  3570  0210                     i1l2109:	
  3571  0210  0874               	movf	ReadADC@Channel,w
  3572                           
  3573                           ; Switch size 1, requested type "space"
  3574                           ; Number of cases is 8, Range of values is 0 to 7
  3575                           ; switch strategies available:
  3576                           ; Name         Instructions Cycles
  3577                           ; simple_byte           25    13 (average)
  3578                           ; direct_byte           32     8 (fixed)
  3579                           ; jumptable            260     6 (fixed)
  3580                           ;	Chosen strategy is simple_byte
  3581  0211  3A00               	xorlw	0	; case 0
  3582  0212  1903               	skipnz
  3583  0213  29EA               	goto	i1l159
  3584  0214  3A01               	xorlw	1	; case 1
  3585  0215  1903               	skipnz
  3586  0216  29EE               	goto	i1l161
  3587  0217  3A03               	xorlw	3	; case 2
  3588  0218  1903               	skipnz
  3589  0219  29F2               	goto	i1l162
  3590  021A  3A01               	xorlw	1	; case 3
  3591  021B  1903               	skipnz
  3592  021C  29F6               	goto	i1l163
  3593  021D  3A07               	xorlw	7	; case 4
  3594  021E  1903               	skipnz
  3595  021F  29FA               	goto	i1l164
  3596  0220  3A01               	xorlw	1	; case 5
  3597  0221  1903               	skipnz
  3598  0222  29FF               	goto	i1l165
  3599  0223  3A03               	xorlw	3	; case 6
  3600  0224  1903               	skipnz
  3601  0225  2A04               	goto	i1l166
  3602  0226  3A01               	xorlw	1	; case 7
  3603  0227  1903               	skipnz
  3604  0228  2A0A               	goto	i1l167
  3605  0229  2A2A               	goto	i1l2111
  3606  022A                     i1l2111:	
  3607                           
  3608                           ;ADC0808.c: 32: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3609  022A  300D               	movlw	13
  3610  022B  00F2               	movwf	??_ReadADC
  3611  022C                     u192_27:	
  3612  022C  0BF2               	decfsz	??_ReadADC,f
  3613  022D  2A2C               	goto	u192_27
  3614                           
  3615                           ;ADC0808.c: 33: PORTCbits.RC3 = 1;
  3616  022E  1283               	bcf	3,5	;RP0=0, select bank0
  3617  022F  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0230  1587               	bsf	7,3	;volatile
  3619                           
  3620                           ;ADC0808.c: 34: PORTCbits.RC7 = 1;
  3621  0231  1787               	bsf	7,7	;volatile
  3622                           
  3623                           ;ADC0808.c: 35: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3624  0232  300D               	movlw	13
  3625  0233  00F2               	movwf	??_ReadADC
  3626  0234                     u193_27:	
  3627  0234  0BF2               	decfsz	??_ReadADC,f
  3628  0235  2A34               	goto	u193_27
  3629                           
  3630                           ;ADC0808.c: 36: PORTCbits.RC7 = 0;
  3631  0236  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0237  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0238  1387               	bcf	7,7	;volatile
  3634                           
  3635                           ;ADC0808.c: 37: PORTCbits.RC6 = 1;
  3636  0239  1707               	bsf	7,6	;volatile
  3637                           
  3638                           ;ADC0808.c: 38: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3639  023A  300D               	movlw	13
  3640  023B  00F2               	movwf	??_ReadADC
  3641  023C                     u194_27:	
  3642  023C  0BF2               	decfsz	??_ReadADC,f
  3643  023D  2A3C               	goto	u194_27
  3644                           
  3645                           ;ADC0808.c: 39: PORTCbits.RC7 = 1;
  3646  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3647  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0240  1787               	bsf	7,7	;volatile
  3649                           
  3650                           ;ADC0808.c: 40: PORTCbits.RC3 = 0;
  3651  0241  1187               	bcf	7,3	;volatile
  3652                           
  3653                           ;ADC0808.c: 41: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3654  0242  300D               	movlw	13
  3655  0243  00F2               	movwf	??_ReadADC
  3656  0244                     u195_27:	
  3657  0244  0BF2               	decfsz	??_ReadADC,f
  3658  0245  2A44               	goto	u195_27
  3659                           
  3660                           ;ADC0808.c: 42: PORTCbits.RC7 = 0;
  3661  0246  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0247  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0248  1387               	bcf	7,7	;volatile
  3664                           
  3665                           ;ADC0808.c: 43: PORTCbits.RC6 = 0;
  3666  0249  1307               	bcf	7,6	;volatile
  3667                           
  3668                           ;ADC0808.c: 45: for(i=0;i<2000;i++)
  3669  024A  01F7               	clrf	ReadADC@i
  3670  024B  01F8               	clrf	ReadADC@i+1
  3671  024C  3007               	movlw	7
  3672  024D  0278               	subwf	ReadADC@i+1,w
  3673  024E  30D0               	movlw	208
  3674  024F  1903               	skipnz
  3675  0250  0277               	subwf	ReadADC@i,w
  3676  0251  1803               	btfsc	3,0
  3677  0252  2A73               	goto	i1l2145
  3678  0253                     i1l2135:	
  3679                           
  3680                           ;ADC0808.c: 46: {
  3681                           ;ADC0808.c: 47: PORTCbits.RC7 = !PORTCbits.RC7;
  3682  0253  3000               	movlw	0
  3683  0254  1F87               	btfss	7,7	;volatile
  3684  0255  3001               	movlw	1
  3685  0256  00F2               	movwf	??_ReadADC
  3686  0257  0CF2               	rrf	??_ReadADC,f
  3687  0258  0CF2               	rrf	??_ReadADC,f
  3688  0259  0807               	movf	7,w	;volatile
  3689  025A  0672               	xorwf	??_ReadADC,w
  3690  025B  397F               	andlw	-129
  3691  025C  0672               	xorwf	??_ReadADC,w
  3692  025D  0087               	movwf	7	;volatile
  3693                           
  3694                           ;ADC0808.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3695  025E  300D               	movlw	13
  3696  025F  00F2               	movwf	??_ReadADC
  3697  0260                     u196_27:	
  3698  0260  0BF2               	decfsz	??_ReadADC,f
  3699  0261  2A60               	goto	u196_27
  3700                           
  3701                           ;ADC0808.c: 50: if(!PORTCbits.RC4)
  3702  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0264  1E07               	btfss	7,4	;volatile
  3705  0265  2A73               	goto	i1l2145
  3706                           
  3707                           ;ADC0808.c: 51: break;
  3708  0266  3001               	movlw	1
  3709  0267  07F7               	addwf	ReadADC@i,f
  3710  0268  1803               	skipnc
  3711  0269  0AF8               	incf	ReadADC@i+1,f
  3712  026A  3000               	movlw	0
  3713  026B  07F8               	addwf	ReadADC@i+1,f
  3714  026C  3007               	movlw	7
  3715  026D  0278               	subwf	ReadADC@i+1,w
  3716  026E  30D0               	movlw	208
  3717  026F  1903               	skipnz
  3718  0270  0277               	subwf	ReadADC@i,w
  3719  0271  1C03               	skipc
  3720  0272  2A53               	goto	i1l2135
  3721  0273                     i1l2145:	
  3722                           
  3723                           ;ADC0808.c: 52: }
  3724                           ;ADC0808.c: 54: for(i=0;i<2000;i++)
  3725  0273  01F7               	clrf	ReadADC@i
  3726  0274  01F8               	clrf	ReadADC@i+1
  3727  0275  3007               	movlw	7
  3728  0276  0278               	subwf	ReadADC@i+1,w
  3729  0277  30D0               	movlw	208
  3730  0278  1903               	skipnz
  3731  0279  0277               	subwf	ReadADC@i,w
  3732  027A  1803               	btfsc	3,0
  3733  027B  2A9C               	goto	i1l172
  3734  027C                     i1l2151:	
  3735                           
  3736                           ;ADC0808.c: 55: {
  3737                           ;ADC0808.c: 56: PORTCbits.RC7 = !PORTCbits.RC7;
  3738  027C  3000               	movlw	0
  3739  027D  1F87               	btfss	7,7	;volatile
  3740  027E  3001               	movlw	1
  3741  027F  00F2               	movwf	??_ReadADC
  3742  0280  0CF2               	rrf	??_ReadADC,f
  3743  0281  0CF2               	rrf	??_ReadADC,f
  3744  0282  0807               	movf	7,w	;volatile
  3745  0283  0672               	xorwf	??_ReadADC,w
  3746  0284  397F               	andlw	-129
  3747  0285  0672               	xorwf	??_ReadADC,w
  3748  0286  0087               	movwf	7	;volatile
  3749                           
  3750                           ;ADC0808.c: 57: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3751  0287  300D               	movlw	13
  3752  0288  00F2               	movwf	??_ReadADC
  3753  0289                     u197_27:	
  3754  0289  0BF2               	decfsz	??_ReadADC,f
  3755  028A  2A89               	goto	u197_27
  3756                           
  3757                           ;ADC0808.c: 59: if(PORTCbits.RC4)
  3758  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3759  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3760  028D  1A07               	btfsc	7,4	;volatile
  3761  028E  2A9C               	goto	i1l172
  3762                           
  3763                           ;ADC0808.c: 60: break;
  3764  028F  3001               	movlw	1
  3765  0290  07F7               	addwf	ReadADC@i,f
  3766  0291  1803               	skipnc
  3767  0292  0AF8               	incf	ReadADC@i+1,f
  3768  0293  3000               	movlw	0
  3769  0294  07F8               	addwf	ReadADC@i+1,f
  3770  0295  3007               	movlw	7
  3771  0296  0278               	subwf	ReadADC@i+1,w
  3772  0297  30D0               	movlw	208
  3773  0298  1903               	skipnz
  3774  0299  0277               	subwf	ReadADC@i,w
  3775  029A  1C03               	skipc
  3776  029B  2A7C               	goto	i1l2151
  3777  029C                     i1l172:	
  3778                           
  3779                           ;ADC0808.c: 61: }
  3780                           ;ADC0808.c: 63: PORTCbits.RC7 = 0;
  3781  029C  1387               	bcf	7,7	;volatile
  3782                           
  3783                           ;ADC0808.c: 64: PORTCbits.RC5 = 1;
  3784  029D  1687               	bsf	7,5	;volatile
  3785                           
  3786                           ;ADC0808.c: 65: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3787  029E  300D               	movlw	13
  3788  029F  00F2               	movwf	??_ReadADC
  3789  02A0                     u198_27:	
  3790  02A0  0BF2               	decfsz	??_ReadADC,f
  3791  02A1  2AA0               	goto	u198_27
  3792                           
  3793                           ;ADC0808.c: 66: PORTCbits.RC7 = 1;
  3794  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3795  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3796  02A4  1787               	bsf	7,7	;volatile
  3797                           
  3798                           ;ADC0808.c: 67: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3799  02A5  300D               	movlw	13
  3800  02A6  00F2               	movwf	??_ReadADC
  3801  02A7                     u199_27:	
  3802  02A7  0BF2               	decfsz	??_ReadADC,f
  3803  02A8  2AA7               	goto	u199_27
  3804                           
  3805                           ;ADC0808.c: 68: PORTCbits.RC7 = 0;
  3806  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3807  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  3808  02AB  1387               	bcf	7,7	;volatile
  3809                           
  3810                           ;ADC0808.c: 69: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3811  02AC  300D               	movlw	13
  3812  02AD  00F2               	movwf	??_ReadADC
  3813  02AE                     u200_27:	
  3814  02AE  0BF2               	decfsz	??_ReadADC,f
  3815  02AF  2AAE               	goto	u200_27
  3816                           
  3817                           ;ADC0808.c: 70: PORTCbits.RC7 = 1;
  3818  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3819  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3820  02B2  1787               	bsf	7,7	;volatile
  3821                           
  3822                           ;ADC0808.c: 72: ADC_value = PORTB;
  3823  02B3  0806               	movf	6,w	;volatile
  3824  02B4  00F2               	movwf	??_ReadADC
  3825  02B5  01F3               	clrf	??_ReadADC+1
  3826  02B6  0872               	movf	??_ReadADC,w
  3827  02B7  00F5               	movwf	ReadADC@ADC_value
  3828  02B8  0873               	movf	??_ReadADC+1,w
  3829  02B9  00F6               	movwf	ReadADC@ADC_value+1
  3830                           
  3831                           ;ADC0808.c: 74: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3832  02BA  300D               	movlw	13
  3833  02BB  00F2               	movwf	??_ReadADC
  3834  02BC                     u201_27:	
  3835  02BC  0BF2               	decfsz	??_ReadADC,f
  3836  02BD  2ABC               	goto	u201_27
  3837                           
  3838                           ;ADC0808.c: 75: PORTCbits.RC5 = 0;
  3839  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3840  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3841  02C0  1287               	bcf	7,5	;volatile
  3842                           
  3843                           ;ADC0808.c: 76: PORTCbits.RC7 = 0;
  3844  02C1  1387               	bcf	7,7	;volatile
  3845                           
  3846                           ;ADC0808.c: 77: _delay((unsigned long)((10)*(16000000/4000000.0)));
  3847  02C2  300D               	movlw	13
  3848  02C3  00F2               	movwf	??_ReadADC
  3849  02C4                     u202_27:	
  3850  02C4  0BF2               	decfsz	??_ReadADC,f
  3851  02C5  2AC4               	goto	u202_27
  3852                           
  3853                           ;ADC0808.c: 79: return ADC_value;
  3854  02C6  0876               	movf	ReadADC@ADC_value+1,w
  3855  02C7  01F1               	clrf	?_ReadADC+1
  3856  02C8  07F1               	addwf	?_ReadADC+1,f
  3857  02C9  0875               	movf	ReadADC@ADC_value,w
  3858  02CA  01F0               	clrf	?_ReadADC
  3859  02CB  07F0               	addwf	?_ReadADC,f
  3860  02CC  0008               	return
  3861  02CD                     __end_of_ReadADC:	
  3862  007E                     btemp	set	126	;btemp
  3863  007E                     wtemp0	set	126


Data Sizes:
    Strings     35
    Constant    0
    Data        64
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      64
    BANK1            80      0      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?_ReadADC	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___ftdiv
    _isr->___ftmul
    ___lwtoft->_ReadADC
    ___ftmul->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _main in BANK0

    _main->_LCDInit
    ___lwdiv->___lwmod
    _LCDGotoXY->_LCDByte
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _isr in BANK0

    _isr->___ftdiv
    _isr->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    2591
                                             30 BANK0     10    10      0
                  _timer2_initialize
                            _LCDInit
                            _InitADC
                            _LCDByte
                     _LCDWriteString
                          _LCDGotoXY
                            ___fttol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     159
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     162
                                             20 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     252
                                             14 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1     345
                                             26 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0     454
                                             26 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0     482
                                             26 BANK0      4     4      0
                            _LCDByte
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1     275
                                             19 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             14 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0    1395
                                             10 BANK0      4     4      0
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3     231
                                              9 COMMON     4     1      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6     535
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6     489
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5     209
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              9     7      2     140
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer2_initialize
   _LCDInit
     _LCDByte
       _LCDBusyLoop
     _LCDBusyLoop
   _InitADC
   _LCDByte
     _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   ___fttol
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod

 _isr (ROOT)
   _ReadADC
   ___ftdiv
     ___ftpack
   ___ftmul
     ___ftpack
   ___lwtoft
     _ReadADC (ARG)
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      8E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       9       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Mon Mar 15 03:18:40 2021

              ?_LCDBusyLoop 0070                           _i 005C                           pc 0002  
               __CFG_CP$OFF 0000                          l94 0704                          l95 0705  
                        fsr 0004                 __CFG_LVP$ON 0000                         l140 0FE2  
                       l139 0FF9                         _GIE 005F                         _RA1 0029  
                       _RA2 002A                         _RA3 002B                         _PR2 0092  
              __CFG_CPD$OFF 0000                         u905 06F1                         u975 065E  
                       _isr 0454                         fsr0 0004                         indf 0000  
              __CFG_FOSC$XT 0000             __end_of_LCDByte 072E             __end_of_LCDInit 0643  
               LCDByte@temp 0039                ___ftdiv@cntr 0024                ___ftdiv@sign 0029  
                      l2017 0501                        l2051 056C                        l2043 0550  
                      l2035 0533                        l2045 055B                        l2037 0543  
                      l2047 055E                        l2073 079C                        l2065 0778  
                      l2067 0786                        l2091 07C4                        l2077 07A7  
                      l2095 07D2                        l2089 07B6                        l1811 0FEB  
                      l2099 07DD                        l1805 0FE4                        l1645 0071  
                      l1807 0FE6                        l1825 0651                        l1791 06CA  
                      l1795 06D4                        l1799 069C                        ?_isr 0070  
                      STR_1 081E                        STR_2 0806                        STR_3 0812  
                      u1425 0552                        u1505 079D                        u1365 0508  
                      u1535 07B9                        u1465 077B                        u1395 0534  
                      u1555 07CA                        u1485 0787                        u1565 07D3  
                      u1495 0793                        u1907 0062                        u1917 05E4  
                      _PEIE 005E                        i1l64 04DB                        _Dong 0050  
              __CFG_WRT$OFF 0000                        _main 002D                ___ftpack@arg 0070  
        __size_of_LCDGotoXY 0026                ___ftpack@exp 0073                        btemp 007E  
             __CFG_BOREN$ON 0000                        start 0012                ___ftmul@cntr 0028  
              ___ftmul@sign 0029             __end_of_InitADC 0800             __end_of_ReadADC 02CD  
              ___fttol@exp1 003B                ___fttol@lval 0037                       ??_isr 002A  
                     ?_main 0070               __CFG_WDTE$OFF 0000             __end_of___ftdiv 0454  
              LCDInit@style 003C             __end_of___ftmul 039E             __end_of___fttol 0575  
           __end_of___lwdiv 07AE                       i1l161 01EE                       i1l401 05AB  
                     i1l162 01F2                       i1l163 01F6                       i1l172 029C  
                     i1l164 01FA                       i1l165 01FF                       i1l166 0204  
                     i1l167 020A                       i1l159 01EA                       i1l407 05C4  
           __end_of___lwmod 07E4                       _PORTB 0006                       _PORTD 0008  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
             __CFG_PWRTE$ON 0000                       _count 0056               ___ftpack@sign 0074  
                     pclath 000A              ReadADC@Channel 0074                       status 0003  
                     wtemp0 007E             __initialization 0015                __end_of_main 01E0  
                    ??_main 003E               ___fttol@sign1 0036           __end_of_LCDGotoXY 1000  
             LCDByte@isdata 0033                   ??_LCDByte 0034                   ??_LCDInit 003A  
                    _ADCON1 009F            __end_of___ftpack 05DD                      i1l2111 022A  
                    i1l2211 0430                      i1l2203 0411                      i1l2109 0210  
                    u111_25 05B3                      i1l2151 027C                      i1l2135 0253  
                    i1l2231 02FB                      i1l2145 0273                      i1l2225 02E5  
                    i1l2243 033A                      u200_27 02AE                      i1l2183 03B6  
                    i1l2255 0362                      i1l2247 034A                      i1l2259 0372  
                    i1l2189 03CC                      i1l2293 04A8                      u201_27 02BC  
                    i1l1911 0595                      i1l1903 057D                      i1l2297 04DA  
                    i1l1907 0584                      u114_25 05CB                      i1l1917 05B0  
                    i1l1909 0590                      u202_27 02C4                      i1l1919 05BA  
                    u107_25 0589                      u109_25 05A4                      u170_25 0431  
                    u166_25 03DE                      u174_25 0307                      u167_25 03F0  
                    u183_25 0373                      u175_25 0319                      u168_25 0412  
                    u184_25 037B                      u192_27 022C                      u169_25 0423  
                    u193_27 0234            __end_of___lwtoft 0FDA                      u178_25 034B  
                    u194_27 023C                      u179_25 0353                      u195_27 0244  
                    u196_27 0260                      u197_27 0289                      u198_27 02A0  
                    u199_27 02A7                      _TMR2IE 0461                      _TMR2IF 0061  
                    _TMR2ON 0092                   ??_InitADC 002E                   ??_ReadADC 0072  
                    _Dienap 004D              _LCDWriteString 0699                      _adc_ok 005E  
                 ??___ftdiv 0020                   ??___ftmul 0020                   ??___fttol 0032  
                 ??___lwdiv 0038                   ??___lwmod 0032                      _count1 0058  
      __size_of_LCDBusyLoop 0056       ___ftmul@f3_as_product 0025                      saved_w 007E  
   __end_of__initialization 0029      __end_of_LCDWriteString 06EB                  ___ftdiv@f1 007B  
                ___ftdiv@f2 0078                  ___ftdiv@f3 0025                   LCDByte@hn 0036  
                 LCDByte@ln 0037                  ___ftmul@f1 0078                  ___ftmul@f2 007B  
                ___fttol@f1 002E              __pcstackCOMMON 0070                __pidataBANK1 072E  
                ___lwtoft@c 0079                  __pbssBANK0 0048             ?_LCDWriteString 0070  
                __pmaintext 002D            ReadADC@ADC_value 0075                  __pintentry 0004  
                 ?___ftpack 0070                     _T2CKPS0 0090                     _T2CKPS1 0091  
                 ?___lwtoft 0079                     _LCDByte 06EB                     _LCDInit 05DD  
                   _TOUTPS0 0093                     _TOUTPS1 0094                     _TOUTPS2 0095  
                __stringtab 0800                     _InitADC 07F9                     _ReadADC 01E0  
                   ___cgram 00A0                     ___ftdiv 039E                     ___ftmul 02CD  
                   ___fttol 04E7                     ___lwdiv 076E                     ___lwmod 07AE  
         _timer2_initialize 07E4                  ??___ftpack 0075                     __ptext1 07AE  
                   __ptext2 076E                     __ptext3 04E7                     __ptext4 0FDA  
                   __ptext5 0699                     __ptext6 07F9                     __ptext7 05DD  
                   __ptext8 06EB                     __ptext9 0643                  ??___lwtoft 007C  
        ?_timer2_initialize 0070                     _count_s 005A                __size_of_isr 0093  
                 _LCDGotoXY 0FDA         ??_timer2_initialize 002E                     clrloop0 0FAE  
      end_of_initialization 0029   __end_of_timer2_initialize 07F9                   _PORTCbits 0007  
         LCDWriteString@msg 003C                   _TRISAbits 0085                  ?_LCDGotoXY 003A  
                LCDInit@__i 003D                 ___ftdiv@exp 0028                  LCDGotoXY@x 003C  
                LCDGotoXY@y 003A                 ___ftmul@exp 0024               ??_LCDBusyLoop 002E  
       start_initialization 0015                 __end_of_isr 04E7            ??_LCDWriteString 003A  
__size_of_timer2_initialize 0015                  init_fetch0 0FB5                 __pdataBANK1 00A0  
       __end_of_LCDBusyLoop 0699                    ?_LCDByte 0033                    ?_LCDInit 0070  
         __size_of___ftpack 0068                    LCDByte@c 0038           __size_of___lwtoft 0014  
             __pcstackBANK0 0020                 ??_LCDGotoXY 003B         __end_of__stringdata 0829  
          LCDWriteInt@F1160 0048                    ?_InitADC 0070                    ?_ReadADC 0070  
          ___lwdiv@dividend 0036                   _do_dienap 005F                    ?___ftdiv 0078  
                  ?___ftmul 0078                    ?___fttol 002E                    ?___lwdiv 0034  
                  ?___lwmod 002E                   __pstrings 0800             LCDBusyLoop@busy 0030  
           LCDBusyLoop@temp 0031            ___lwdiv@quotient 0039           interrupt_function 0004  
                 clear_ram0 0FAD                   main@F1147 0053                 _LCDBusyLoop 0643  
          LCDWriteString@cc 003B                   main@Digit 0043                    ReadADC@i 0077  
               __stringbase 0805                 __stringdata 0806            __size_of_LCDByte 0043  
          __size_of_LCDInit 0066            __size_of_InitADC 0007            __size_of_ReadADC 00ED  
          __size_of___ftdiv 00B6            __size_of___ftmul 00D1            __size_of___fttol 008E  
         LCDBusyLoop@status 0032            __size_of___lwdiv 0040            __size_of___lwmod 0036  
                  ___ftpack 0575          __end_of__stringtab 0806                    ___lwtoft 0FC6  
                  _main$590 0041             ___lwdiv@divisor 0034             ___lwdiv@counter 003B  
                  __ptext10 07E4                    __ptext11 0454                    __ptext12 0FC6  
                  __ptext13 02CD                    __ptext14 039E                    __ptext15 0575  
                  __ptext16 01E0               __size_of_main 01B3               main@ADC_Value 0046  
                  init_ram0 0FB9                    intlevel1 0000            ___lwmod@dividend 0030  
                 stringcode 0800             ___lwmod@divisor 002E             ___lwmod@counter 0033  
                  stringdir 0800                    stringtab 0800     __size_of_LCDWriteString 0052  
