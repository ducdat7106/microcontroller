

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 08 17:46:31 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.30
    24                           ; Generated 26/08/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0088                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180  020F                     __pidataBANK0:
   181                           
   182                           ;initializer for _number
   183  020F  34C0               	retlw	192
   184  0210  34F9               	retlw	249
   185  0211  34A4               	retlw	164
   186  0212  34B0               	retlw	176
   187  0213  3499               	retlw	153
   188  0214  3492               	retlw	146
   189  0215  3482               	retlw	130
   190  0216  34F8               	retlw	248
   191  0217  3480               	retlw	128
   192  0218  3490               	retlw	144
   193  0005                     _PORTAbits	set	5
   194  0009                     _PORTEbits	set	9
   195  0007                     _PORTCbits	set	7
   196  0008                     _PORTD	set	8
   197  0061                     _TMR2IF	set	97
   198  005F                     _GIE	set	95
   199  005E                     _PEIE	set	94
   200  0092                     _TMR2ON	set	146
   201  0095                     _TOUTPS2	set	149
   202  0094                     _TOUTPS1	set	148
   203  0093                     _TOUTPS0	set	147
   204  0091                     _T2CKPS1	set	145
   205  0090                     _T2CKPS0	set	144
   206  0088                     _TRISD	set	136
   207  0087                     _TRISCbits	set	135
   208  0089                     _TRISEbits	set	137
   209  0085                     _TRISAbits	set	133
   210  009F                     _ADCON1	set	159
   211  0092                     _PR2	set	146
   212  0461                     _TMR2IE	set	1121
   213                           
   214                           	psect	cinit
   215  0011                     start_initialization:	
   216                           ; #config settings
   217                           
   218  0011                     __initialization:
   219                           
   220                           ; Initialize objects allocated to BANK0
   221  0011  1383               	bcf	3,7	;select IRP bank0
   222  0012  303B               	movlw	low (__pdataBANK0+10)
   223  0013  00FD               	movwf	btemp+-1
   224  0014  3002               	movlw	high __pidataBANK0
   225  0015  00FE               	movwf	btemp
   226  0016  300F               	movlw	low __pidataBANK0
   227  0017  00FF               	movwf	btemp+1
   228  0018  3031               	movlw	low __pdataBANK0
   229  0019  0084               	movwf	4
   230  001A  120A  118A  2202  120A  118A  	fcall	init_ram0
   231                           
   232                           ; Clear objects allocated to BANK0
   233  001F  3020               	movlw	low __pbssBANK0
   234  0020  0084               	movwf	4
   235  0021  3031               	movlw	low (__pbssBANK0+17)
   236  0022  120A  118A  2219   	fcall	clear_ram0
   237                           
   238                           ; Clear objects allocated to COMMON
   239  0025  01FC               	clrf	__pbssCOMMON& (0+127)
   240  0026  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   241  0027                     end_of_initialization:	
   242                           ;End of C runtime variable initialization code
   243                           
   244  0027                     __end_of__initialization:
   245  0027  0183               	clrf	3
   246  0028  120A  118A  28E7   	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMMON
   249  007C                     __pbssCOMMON:
   250  007C                     _digit:
   251  007C                     	ds	1
   252  007D                     _bLed:
   253  007D                     	ds	1
   254                           
   255                           	psect	bssBANK0
   256  0020                     __pbssBANK0:
   257  0020                     _count_s:
   258  0020                     	ds	2
   259  0022                     _count:
   260  0022                     	ds	2
   261  0024                     _j:
   262  0024                     	ds	2
   263  0026                     _num:
   264  0026                     	ds	2
   265  0028                     _i:
   266  0028                     	ds	2
   267  002A                     _pre_kb2:
   268  002A                     	ds	1
   269  002B                     _pre_kb1:
   270  002B                     	ds	1
   271  002C                     _pre_kb0:
   272  002C                     	ds	1
   273  002D                     _ngin:
   274  002D                     	ds	1
   275  002E                     _tram:
   276  002E                     	ds	1
   277  002F                     _truc:
   278  002F                     	ds	1
   279  0030                     _donvi:
   280  0030                     	ds	1
   281                           
   282                           	psect	dataBANK0
   283  0031                     __pdataBANK0:
   284  0031                     _number:
   285  0031                     	ds	10
   286                           
   287                           	psect	inittext
   288  01FE                     init_fetch0:	
   289                           ;	Called with low address in FSR and high address in W
   290                           
   291  01FE  087E               	movf	126,w
   292  01FF  008A               	movwf	10
   293  0200  087F               	movf	127,w
   294  0201  0082               	movwf	2
   295  0202                     init_ram0:	
   296                           ;Called with:
   297                           ;	high address of idata address in btemp 
   298                           ;	low address of idata address in btemp+1 
   299                           ;	low address of data in FSR
   300                           ;	high address + 1 of data in btemp-1
   301                           
   302  0202  21FE  120A  118A   	fcall	init_fetch0
   303  0205  0080               	movwf	0
   304  0206  0A84               	incf	4,f
   305  0207  0804               	movf	4,w
   306  0208  067D               	xorwf	125,w
   307  0209  1903               	btfsc	3,2
   308  020A  3400               	retlw	0
   309  020B  0AFF               	incf	127,f
   310  020C  1903               	btfsc	3,2
   311  020D  0AFE               	incf	126,f
   312  020E  2A02               	goto	init_ram0
   313                           
   314                           	psect	clrtext
   315  0219                     clear_ram0:	
   316                           ;	Called with FSR containing the base address, and
   317                           ;	W with the last address+1
   318                           
   319  0219  0064               	clrwdt	;clear the watchdog before getting into this loop
   320  021A                     clrloop0:
   321  021A  0180               	clrf	0	;clear RAM location pointed to by FSR
   322  021B  0A84               	incf	4,f	;increment pointer
   323  021C  0604               	xorwf	4,w	;XOR with final address
   324  021D  1903               	btfsc	3,2	;have we reached the end yet?
   325  021E  3400               	retlw	0	;all done for this memory range, return
   326  021F  0604               	xorwf	4,w	;XOR again to restore value
   327  0220  2A1A               	goto	clrloop0	;do the next byte
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_hienthi:
   332  0070                     ??_hienthi:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_timer2_initialize:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_Count_Up:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?___lwdiv:	
   345                           ; 2 bytes @ 0x0
   346                           
   347  0070                     ?___lwmod:	
   348                           ; 2 bytes @ 0x0
   349                           
   350  0070                     ___lwdiv@divisor:	
   351                           ; 2 bytes @ 0x0
   352                           
   353  0070                     ___lwmod@divisor:	
   354                           ; 2 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358  0070                     	ds	2
   359  0072                     ___lwdiv@dividend:
   360  0072                     ___lwmod@dividend:	
   361                           ; 2 bytes @ 0x2
   362                           
   363                           
   364                           ; 2 bytes @ 0x2
   365  0072                     	ds	2
   366  0074                     ??___lwdiv:
   367  0074                     ??___lwmod:	
   368                           ; 1 bytes @ 0x4
   369                           
   370                           
   371                           ; 1 bytes @ 0x4
   372  0074                     	ds	1
   373  0075                     ___lwmod@counter:
   374  0075                     ___lwdiv@quotient:	
   375                           ; 1 bytes @ 0x5
   376                           
   377                           
   378                           ; 2 bytes @ 0x5
   379  0075                     	ds	2
   380  0077                     ___lwdiv@counter:
   381                           
   382                           ; 1 bytes @ 0x7
   383  0077                     	ds	1
   384  0078                     ??_Count_Up:
   385                           
   386                           ; 1 bytes @ 0x8
   387  0078                     	ds	4
   388                           
   389                           	psect	cstackBANK0
   390  0000                     __pcstackBANK0:
   391  0000                     ??_timer2_initialize:
   392  0000                     ??_main:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           	psect	maintext
   397  00E7                     __pmaintext:	
   398                           ; 1 bytes @ 0x0
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 127 in file "Led_7seg.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  2   97[None  ] int 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : B00/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels required when called:    3
   424 ;; This function calls:
   425 ;;		_timer2_initialize
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _main
   433  00E7                     _main:
   434                           
   435                           ;Led_7seg.c: 129:      ADCON1 = 0x06;
   436                           
   437                           ;incstack = 0
   438                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   439  00E7  3006               	movlw	6
   440  00E8  1683               	bsf	3,5	;RP0=1, select bank1
   441  00E9  1303               	bcf	3,6	;RP1=0, select bank1
   442  00EA  009F               	movwf	31	;volatile
   443                           
   444                           ;Led_7seg.c: 131:     TRISAbits.TRISA2=1 ;
   445  00EB  1505               	bsf	5,2	;volatile
   446                           
   447                           ;Led_7seg.c: 132:     TRISAbits.TRISA3=1;
   448  00EC  1585               	bsf	5,3	;volatile
   449                           
   450                           ;Led_7seg.c: 133:     TRISAbits.TRISA4=1;
   451  00ED  1605               	bsf	5,4	;volatile
   452                           
   453                           ;Led_7seg.c: 134:     TRISAbits.TRISA5=1;
   454  00EE  1685               	bsf	5,5	;volatile
   455                           
   456                           ;Led_7seg.c: 136:     TRISEbits.TRISE2=0;
   457  00EF  1109               	bcf	9,2	;volatile
   458                           
   459                           ;Led_7seg.c: 137:     TRISCbits.TRISC4=0;
   460  00F0  1207               	bcf	7,4	;volatile
   461                           
   462                           ;Led_7seg.c: 138:     TRISCbits.TRISC5=0;
   463  00F1  1287               	bcf	7,5	;volatile
   464                           
   465                           ;Led_7seg.c: 139:     TRISCbits.TRISC6=0;
   466  00F2  1307               	bcf	7,6	;volatile
   467                           
   468                           ;Led_7seg.c: 140:     TRISCbits.TRISC7=0;
   469  00F3  1387               	bcf	7,7	;volatile
   470                           
   471                           ;Led_7seg.c: 141:     TRISD=0;
   472  00F4  0188               	clrf	8	;volatile
   473                           
   474                           ;Led_7seg.c: 143:     timer2_initialize ();
   475  00F5  120A  118A  21E9  120A  118A  	fcall	_timer2_initialize
   476  00FA                     l1004:
   477                           
   478                           ;Led_7seg.c: 145:  {;Led_7seg.c: 146:          if(PORTAbits.RA2)
   479  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   480  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   481  00FC  1D05               	btfss	5,2	;volatile
   482  00FD  2900               	goto	l1008
   483                           
   484                           ;Led_7seg.c: 147:                pre_kb0=1;
   485  00FE  01AC               	clrf	_pre_kb0
   486  00FF  0AAC               	incf	_pre_kb0,f
   487  0100                     l1008:
   488                           
   489                           ;Led_7seg.c: 148:          if(pre_kb0&&!PORTAbits.RA2)
   490  0100  082C               	movf	_pre_kb0,w
   491  0101  1D03               	btfss	3,2
   492  0102  1905               	btfsc	5,2	;volatile
   493  0103  2907               	goto	l1014
   494                           
   495                           ;Led_7seg.c: 149:   {;Led_7seg.c: 151:          pre_kb0=0;
   496  0104  01AC               	clrf	_pre_kb0
   497                           
   498                           ;Led_7seg.c: 152:     num=0;
   499  0105  01A6               	clrf	_num
   500  0106  01A7               	clrf	_num+1
   501  0107                     l1014:
   502                           
   503                           ;Led_7seg.c: 154:         if(PORTAbits.RA3)
   504  0107  1D85               	btfss	5,3	;volatile
   505  0108  290B               	goto	l1018
   506                           
   507                           ;Led_7seg.c: 155:          pre_kb1=1;
   508  0109  01AB               	clrf	_pre_kb1
   509  010A  0AAB               	incf	_pre_kb1,f
   510  010B                     l1018:
   511                           
   512                           ;Led_7seg.c: 156:          if(pre_kb1&&!PORTAbits.RA3)
   513  010B  082B               	movf	_pre_kb1,w
   514  010C  1D03               	btfss	3,2
   515  010D  1985               	btfsc	5,3	;volatile
   516  010E  291F               	goto	l1030
   517                           
   518                           ;Led_7seg.c: 157:   {;Led_7seg.c: 159:          pre_kb1=0;
   519  010F  01AB               	clrf	_pre_kb1
   520                           
   521                           ;Led_7seg.c: 160:          num++;
   522  0110  3001               	movlw	1
   523  0111  07A6               	addwf	_num,f
   524  0112  1803               	skipnc
   525  0113  0AA7               	incf	_num+1,f
   526  0114  3000               	movlw	0
   527  0115  07A7               	addwf	_num+1,f
   528                           
   529                           ;Led_7seg.c: 161:    if(num==10000)
   530  0116  3010               	movlw	16
   531  0117  0626               	xorwf	_num,w
   532  0118  3027               	movlw	39
   533  0119  1903               	skipnz
   534  011A  0627               	xorwf	_num+1,w
   535  011B  1D03               	btfss	3,2
   536  011C  291F               	goto	l1030
   537                           
   538                           ;Led_7seg.c: 162:     num=0;
   539  011D  01A6               	clrf	_num
   540  011E  01A7               	clrf	_num+1
   541  011F                     l1030:
   542                           
   543                           ;Led_7seg.c: 164:    if(PORTAbits.RA4)
   544  011F  1E05               	btfss	5,4	;volatile
   545  0120  2923               	goto	l1034
   546                           
   547                           ;Led_7seg.c: 165:          pre_kb2=1;
   548  0121  01AA               	clrf	_pre_kb2
   549  0122  0AAA               	incf	_pre_kb2,f
   550  0123                     l1034:
   551                           
   552                           ;Led_7seg.c: 166:          if(pre_kb2&&!PORTAbits.RA4)
   553  0123  082A               	movf	_pre_kb2,w
   554  0124  1D03               	btfss	3,2
   555  0125  1A05               	btfsc	5,4	;volatile
   556  0126  28FA               	goto	l1004
   557                           
   558                           ;Led_7seg.c: 167:   {;Led_7seg.c: 169:          pre_kb2=0;
   559  0127  01AA               	clrf	_pre_kb2
   560                           
   561                           ;Led_7seg.c: 170:    if(num>0)
   562  0128  0826               	movf	_num,w
   563  0129  0427               	iorwf	_num+1,w
   564  012A  1903               	btfsc	3,2
   565  012B  28FA               	goto	l1004
   566                           
   567                           ;Led_7seg.c: 171:          num--;
   568  012C  3001               	movlw	1
   569  012D  02A6               	subwf	_num,f
   570  012E  3000               	movlw	0
   571  012F  1C03               	skipc
   572  0130  03A7               	decf	_num+1,f
   573  0131  02A7               	subwf	_num+1,f
   574  0132  28FA               	goto	l1004
   575  0133                     __end_of_main:
   576                           
   577                           	psect	text1
   578  01E9                     __ptext1:	
   579 ;; *************** function _timer2_initialize *****************
   580 ;; Defined at:
   581 ;;		line 78 in file "Led_7seg.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    2
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _timer2_initialize
   611  01E9                     _timer2_initialize:
   612                           
   613                           ;Led_7seg.c: 80:     T2CKPS0=1;
   614                           
   615                           ;incstack = 0
   616                           ; Regs used in _timer2_initialize: [wreg]
   617  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   618  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   619  01EB  1412               	bsf	18,0	;volatile
   620                           
   621                           ;Led_7seg.c: 81:     T2CKPS1=0;
   622  01EC  1092               	bcf	18,1	;volatile
   623                           
   624                           ;Led_7seg.c: 82:     PR2=100;
   625  01ED  3064               	movlw	100
   626  01EE  1683               	bsf	3,5	;RP0=1, select bank1
   627  01EF  1303               	bcf	3,6	;RP1=0, select bank1
   628  01F0  0092               	movwf	18	;volatile
   629                           
   630                           ;Led_7seg.c: 83:     TOUTPS0=1;
   631  01F1  1283               	bcf	3,5	;RP0=0, select bank0
   632  01F2  1303               	bcf	3,6	;RP1=0, select bank0
   633  01F3  1592               	bsf	18,3	;volatile
   634                           
   635                           ;Led_7seg.c: 84:     TOUTPS1=1;
   636  01F4  1612               	bsf	18,4	;volatile
   637                           
   638                           ;Led_7seg.c: 85:     TOUTPS2=1;
   639  01F5  1692               	bsf	18,5	;volatile
   640                           
   641                           ;Led_7seg.c: 86:     TOUTPS2=1;
   642  01F6  1692               	bsf	18,5	;volatile
   643                           
   644                           ;Led_7seg.c: 87:     TMR2ON=1;
   645  01F7  1512               	bsf	18,2	;volatile
   646                           
   647                           ;Led_7seg.c: 88:     TMR2IE=1;
   648  01F8  1683               	bsf	3,5	;RP0=1, select bank1
   649  01F9  1303               	bcf	3,6	;RP1=0, select bank1
   650  01FA  148C               	bsf	12,1	;volatile
   651                           
   652                           ;Led_7seg.c: 89:     PEIE=1;
   653  01FB  170B               	bsf	11,6	;volatile
   654                           
   655                           ;Led_7seg.c: 90:     GIE=1;
   656  01FC  178B               	bsf	11,7	;volatile
   657  01FD  0008               	return
   658  01FE                     __end_of_timer2_initialize:
   659                           
   660                           	psect	text2
   661  002B                     __ptext2:	
   662 ;; *************** function _Count_Up *****************
   663 ;; Defined at:
   664 ;;		line 93 in file "Led_7seg.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          4       0       0       0       0
   681 ;;      Totals:         4       0       0       0       0
   682 ;;Total ram usage:        4 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    1
   685 ;; This function calls:
   686 ;;		___lwdiv
   687 ;;		___lwmod
   688 ;;		_hienthi
   689 ;; This function is called by:
   690 ;;		Interrupt level 1
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _Count_Up
   696  002B                     _Count_Up:
   697                           
   698                           ;Led_7seg.c: 95: if (TMR2IE && TMR2IF)
   699  002B  1683               	bsf	3,5	;RP0=1, select bank1
   700  002C  1303               	bcf	3,6	;RP1=0, select bank1
   701  002D  1C8C               	btfss	12,1	;volatile
   702  002E  28DE               	goto	i1l93
   703  002F  1283               	bcf	3,5	;RP0=0, select bank0
   704  0030  1303               	bcf	3,6	;RP1=0, select bank0
   705  0031  1C8C               	btfss	12,1	;volatile
   706  0032  28DE               	goto	i1l93
   707                           
   708                           ;Led_7seg.c: 96: {;Led_7seg.c: 97:   TMR2IF=0;
   709  0033  108C               	bcf	12,1	;volatile
   710                           
   711                           ;Led_7seg.c: 98:     count++;
   712  0034  3001               	movlw	1
   713  0035  07A2               	addwf	_count,f
   714  0036  1803               	skipnc
   715  0037  0AA3               	incf	_count+1,f
   716  0038  3000               	movlw	0
   717  0039  07A3               	addwf	_count+1,f
   718                           
   719                           ;Led_7seg.c: 100:   if(count==5)
   720  003A  3005               	movlw	5
   721  003B  0622               	xorwf	_count,w
   722  003C  0423               	iorwf	_count+1,w
   723  003D  1D03               	btfss	3,2
   724  003E  28DE               	goto	i1l93
   725                           
   726                           ;Led_7seg.c: 101:   {;Led_7seg.c: 102:       count=0;
   727  003F  01A2               	clrf	_count
   728  0040  01A3               	clrf	_count+1
   729                           
   730                           ;Led_7seg.c: 103:       hienthi();
   731  0041  120A  118A  2133  120A  118A  	fcall	_hienthi
   732                           
   733                           ;Led_7seg.c: 104:       digit++;
   734  0046  3001               	movlw	1
   735  0047  00F8               	movwf	??_Count_Up
   736  0048  0878               	movf	??_Count_Up,w
   737  0049  07FC               	addwf	_digit,f
   738                           
   739                           ;Led_7seg.c: 105:       if(digit==4)
   740  004A  3004               	movlw	4
   741  004B  067C               	xorwf	_digit,w
   742  004C  1903               	btfsc	3,2
   743                           
   744                           ;Led_7seg.c: 106:         digit=0;
   745  004D  01FC               	clrf	_digit
   746                           
   747                           ;Led_7seg.c: 107:       count_s++;
   748  004E  3001               	movlw	1
   749  004F  1283               	bcf	3,5	;RP0=0, select bank0
   750  0050  1303               	bcf	3,6	;RP1=0, select bank0
   751  0051  07A0               	addwf	_count_s,f
   752  0052  1803               	skipnc
   753  0053  0AA1               	incf	_count_s+1,f
   754  0054  3000               	movlw	0
   755  0055  07A1               	addwf	_count_s+1,f
   756                           
   757                           ;Led_7seg.c: 108:       if(count_s==25)
   758  0056  3019               	movlw	25
   759  0057  0620               	xorwf	_count_s,w
   760  0058  0421               	iorwf	_count_s+1,w
   761  0059  1D03               	btfss	3,2
   762  005A  28CF               	goto	i1l974
   763                           
   764                           ;Led_7seg.c: 109:       {;Led_7seg.c: 110:           count_s=0;
   765  005B  01A0               	clrf	_count_s
   766  005C  01A1               	clrf	_count_s+1
   767                           
   768                           ;Led_7seg.c: 111:       ngin=num/1000;
   769  005D  30E8               	movlw	232
   770  005E  00F0               	movwf	___lwdiv@divisor
   771  005F  3003               	movlw	3
   772  0060  00F1               	movwf	___lwdiv@divisor+1
   773  0061  0827               	movf	_num+1,w
   774  0062  00F3               	movwf	___lwdiv@dividend+1
   775  0063  0826               	movf	_num,w
   776  0064  00F2               	movwf	___lwdiv@dividend
   777  0065  120A  118A  217B  120A  118A  	fcall	___lwdiv
   778  006A  0870               	movf	?___lwdiv,w
   779  006B  00F8               	movwf	??_Count_Up
   780  006C  0878               	movf	??_Count_Up,w
   781  006D  1283               	bcf	3,5	;RP0=0, select bank0
   782  006E  1303               	bcf	3,6	;RP1=0, select bank0
   783  006F  00AD               	movwf	_ngin
   784                           
   785                           ;Led_7seg.c: 112:        j=num%1000;
   786  0070  30E8               	movlw	232
   787  0071  00F0               	movwf	___lwmod@divisor
   788  0072  3003               	movlw	3
   789  0073  00F1               	movwf	___lwmod@divisor+1
   790  0074  0827               	movf	_num+1,w
   791  0075  00F3               	movwf	___lwmod@dividend+1
   792  0076  0826               	movf	_num,w
   793  0077  00F2               	movwf	___lwmod@dividend
   794  0078  120A  118A  21B7  120A  118A  	fcall	___lwmod
   795  007D  0871               	movf	?___lwmod+1,w
   796  007E  1283               	bcf	3,5	;RP0=0, select bank0
   797  007F  1303               	bcf	3,6	;RP1=0, select bank0
   798  0080  00A5               	movwf	_j+1
   799  0081  0870               	movf	?___lwmod,w
   800  0082  00A4               	movwf	_j
   801                           
   802                           ;Led_7seg.c: 113:         tram=j/100;
   803  0083  3064               	movlw	100
   804  0084  00F0               	movwf	___lwdiv@divisor
   805  0085  3000               	movlw	0
   806  0086  00F1               	movwf	___lwdiv@divisor+1
   807  0087  0825               	movf	_j+1,w
   808  0088  00F3               	movwf	___lwdiv@dividend+1
   809  0089  0824               	movf	_j,w
   810  008A  00F2               	movwf	___lwdiv@dividend
   811  008B  120A  118A  217B  120A  118A  	fcall	___lwdiv
   812  0090  0870               	movf	?___lwdiv,w
   813  0091  00F8               	movwf	??_Count_Up
   814  0092  0878               	movf	??_Count_Up,w
   815  0093  1283               	bcf	3,5	;RP0=0, select bank0
   816  0094  1303               	bcf	3,6	;RP1=0, select bank0
   817  0095  00AE               	movwf	_tram
   818                           
   819                           ;Led_7seg.c: 114:     j=j%100;
   820  0096  3064               	movlw	100
   821  0097  00F0               	movwf	___lwmod@divisor
   822  0098  3000               	movlw	0
   823  0099  00F1               	movwf	___lwmod@divisor+1
   824  009A  0825               	movf	_j+1,w
   825  009B  00F3               	movwf	___lwmod@dividend+1
   826  009C  0824               	movf	_j,w
   827  009D  00F2               	movwf	___lwmod@dividend
   828  009E  120A  118A  21B7  120A  118A  	fcall	___lwmod
   829  00A3  0871               	movf	?___lwmod+1,w
   830  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   831  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   832  00A6  00A5               	movwf	_j+1
   833  00A7  0870               	movf	?___lwmod,w
   834  00A8  00A4               	movwf	_j
   835                           
   836                           ;Led_7seg.c: 115:        truc=j/10;
   837  00A9  300A               	movlw	10
   838  00AA  00F0               	movwf	___lwdiv@divisor
   839  00AB  3000               	movlw	0
   840  00AC  00F1               	movwf	___lwdiv@divisor+1
   841  00AD  0825               	movf	_j+1,w
   842  00AE  00F3               	movwf	___lwdiv@dividend+1
   843  00AF  0824               	movf	_j,w
   844  00B0  00F2               	movwf	___lwdiv@dividend
   845  00B1  120A  118A  217B  120A  118A  	fcall	___lwdiv
   846  00B6  0870               	movf	?___lwdiv,w
   847  00B7  00F8               	movwf	??_Count_Up
   848  00B8  0878               	movf	??_Count_Up,w
   849  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   850  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   851  00BB  00AF               	movwf	_truc
   852                           
   853                           ;Led_7seg.c: 116:        donvi=j%10;
   854  00BC  300A               	movlw	10
   855  00BD  00F0               	movwf	___lwmod@divisor
   856  00BE  3000               	movlw	0
   857  00BF  00F1               	movwf	___lwmod@divisor+1
   858  00C0  0825               	movf	_j+1,w
   859  00C1  00F3               	movwf	___lwmod@dividend+1
   860  00C2  0824               	movf	_j,w
   861  00C3  00F2               	movwf	___lwmod@dividend
   862  00C4  120A  118A  21B7  120A  118A  	fcall	___lwmod
   863  00C9  0870               	movf	?___lwmod,w
   864  00CA  00F8               	movwf	??_Count_Up
   865  00CB  0878               	movf	??_Count_Up,w
   866  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   867  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   868  00CE  00B0               	movwf	_donvi
   869  00CF                     i1l974:
   870                           
   871                           ;Led_7seg.c: 118:    bLed=!bLed;
   872  00CF  087D               	movf	_bLed,w
   873  00D0  1D03               	btfss	3,2
   874  00D1  28D4               	goto	u51_20
   875  00D2  3001               	movlw	1
   876  00D3  28D5               	goto	u52_20
   877  00D4                     u51_20:
   878  00D4  3000               	movlw	0
   879  00D5                     u52_20:
   880  00D5  00F8               	movwf	??_Count_Up
   881  00D6  0878               	movf	??_Count_Up,w
   882  00D7  00FD               	movwf	_bLed
   883                           
   884                           ;Led_7seg.c: 119:       if(bLed)
   885  00D8  087D               	movf	_bLed,w
   886  00D9  1903               	btfsc	3,2
   887  00DA  28DD               	goto	i1l91
   888                           
   889                           ;Led_7seg.c: 120:           PORTEbits.RE2=1;
   890  00DB  1509               	bsf	9,2	;volatile
   891  00DC  28DE               	goto	i1l93
   892  00DD                     i1l91:	
   893                           ;Led_7seg.c: 121:       else
   894                           
   895                           
   896                           ;Led_7seg.c: 122:           PORTEbits.RE2=0;
   897  00DD  1109               	bcf	9,2	;volatile
   898  00DE                     i1l93:
   899  00DE  087B               	movf	??_Count_Up+3,w
   900  00DF  008A               	movwf	10
   901  00E0  087A               	movf	??_Count_Up+2,w
   902  00E1  0084               	movwf	4
   903  00E2  0E79               	swapf	??_Count_Up+1,w
   904  00E3  0083               	movwf	3
   905  00E4  0EFE               	swapf	126,f
   906  00E5  0E7E               	swapf	126,w
   907  00E6  0009               	retfie
   908  00E7                     __end_of_Count_Up:
   909                           
   910                           	psect	intentry
   911  0004                     __pintentry:	
   912                           ;incstack = 0
   913                           ; Regs used in _Count_Up: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   914                           
   915  0004                     interrupt_function:
   916  007E                     saved_w	set	btemp
   917  0004  00FE               	movwf	btemp
   918  0005  0E03               	swapf	3,w
   919  0006  00F9               	movwf	??_Count_Up+1
   920  0007  0804               	movf	4,w
   921  0008  00FA               	movwf	??_Count_Up+2
   922  0009  080A               	movf	10,w
   923  000A  00FB               	movwf	??_Count_Up+3
   924  000B  120A  118A  282B   	ljmp	_Count_Up
   925                           
   926                           	psect	text3
   927  0133                     __ptext3:	
   928 ;; *************** function _hienthi *****************
   929 ;; Defined at:
   930 ;;		line 52 in file "Led_7seg.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0
   946 ;;      Temps:          2       0       0       0       0
   947 ;;      Totals:         2       0       0       0       0
   948 ;;Total ram usage:        2 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_Count_Up
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           
   958                           ;psect for function _hienthi
   959  0133                     _hienthi:
   960                           
   961                           ;Led_7seg.c: 54:      PORTD=0xff;
   962                           
   963                           ;incstack = 0
   964                           ; Regs used in _hienthi: [wreg-fsr0h+status,2+status,0]
   965  0133  30FF               	movlw	255
   966  0134  1283               	bcf	3,5	;RP0=0, select bank0
   967  0135  1303               	bcf	3,6	;RP1=0, select bank0
   968  0136  0088               	movwf	8	;volatile
   969                           
   970                           ;Led_7seg.c: 55:     switch (digit)
   971  0137  2964               	goto	i1l862
   972  0138                     i1l74:	
   973                           ;Led_7seg.c: 56:     {;Led_7seg.c: 57:        case 0:
   974                           
   975                           
   976                           ;Led_7seg.c: 59:         PORTCbits.RC7=1;PORTCbits.RC4=0;PORTCbits.RC5=1;PORTCbits.RC6=1
      +                          ;
   977  0138  1787               	bsf	7,7	;volatile
   978  0139  1207               	bcf	7,4	;volatile
   979  013A  1687               	bsf	7,5	;volatile
   980  013B  1707               	bsf	7,6	;volatile
   981                           
   982                           ;Led_7seg.c: 60:           PORTD=number[ngin];
   983  013C  082D               	movf	_ngin,w
   984  013D  3E31               	addlw	(low (_number| 0))& (0+255)
   985  013E  0084               	movwf	4
   986  013F  1383               	bcf	3,7	;select IRP bank0
   987  0140  0800               	movf	0,w
   988  0141  0088               	movwf	8	;volatile
   989                           
   990                           ;Led_7seg.c: 61:           break;
   991  0142  0008               	return
   992  0143                     i1l76:	
   993                           ;Led_7seg.c: 62:         case 1:
   994                           
   995                           
   996                           ;Led_7seg.c: 64:          PORTCbits.RC4=1;PORTCbits.RC5=0;PORTCbits.RC6=1;PORTCbits.RC7=
      +                          1;
   997  0143  1607               	bsf	7,4	;volatile
   998  0144  1287               	bcf	7,5	;volatile
   999  0145  1707               	bsf	7,6	;volatile
  1000  0146  1787               	bsf	7,7	;volatile
  1001                           
  1002                           ;Led_7seg.c: 65:          PORTD=number[tram];
  1003  0147  082E               	movf	_tram,w
  1004  0148  3E31               	addlw	(low (_number| 0))& (0+255)
  1005  0149  0084               	movwf	4
  1006  014A  1383               	bcf	3,7	;select IRP bank0
  1007  014B  0800               	movf	0,w
  1008  014C  0088               	movwf	8	;volatile
  1009                           
  1010                           ;Led_7seg.c: 66:           break;
  1011  014D  0008               	return
  1012  014E                     i1l77:	
  1013                           ;Led_7seg.c: 67:         case 2:
  1014                           
  1015                           
  1016                           ;Led_7seg.c: 69:          PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=0;PORTCbits.RC7=
      +                          1;
  1017  014E  1607               	bsf	7,4	;volatile
  1018  014F  1687               	bsf	7,5	;volatile
  1019  0150  1307               	bcf	7,6	;volatile
  1020  0151  1787               	bsf	7,7	;volatile
  1021                           
  1022                           ;Led_7seg.c: 70:          PORTD=number[truc];
  1023  0152  082F               	movf	_truc,w
  1024  0153  3E31               	addlw	(low (_number| 0))& (0+255)
  1025  0154  0084               	movwf	4
  1026  0155  1383               	bcf	3,7	;select IRP bank0
  1027  0156  0800               	movf	0,w
  1028  0157  0088               	movwf	8	;volatile
  1029                           
  1030                           ;Led_7seg.c: 71:           break;
  1031  0158  0008               	return
  1032  0159                     i1l78:	
  1033                           ;Led_7seg.c: 72:           case 3:
  1034                           
  1035                           
  1036                           ;Led_7seg.c: 74:          PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=1;PORTCbits.RC7=
      +                          0;
  1037  0159  1607               	bsf	7,4	;volatile
  1038  015A  1687               	bsf	7,5	;volatile
  1039  015B  1707               	bsf	7,6	;volatile
  1040  015C  1387               	bcf	7,7	;volatile
  1041                           
  1042                           ;Led_7seg.c: 75:          PORTD=number[donvi];
  1043  015D  0830               	movf	_donvi,w
  1044  015E  3E31               	addlw	(low (_number| 0))& (0+255)
  1045  015F  0084               	movwf	4
  1046  0160  1383               	bcf	3,7	;select IRP bank0
  1047  0161  0800               	movf	0,w
  1048  0162  0088               	movwf	8	;volatile
  1049                           
  1050                           ;Led_7seg.c: 76:     }
  1051  0163  0008               	return
  1052  0164                     i1l862:
  1053  0164  087C               	movf	_digit,w
  1054  0165  00F0               	movwf	??_hienthi
  1055  0166  01F1               	clrf	??_hienthi+1
  1056                           
  1057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1058                           ; Switch size 1, requested type "simple"
  1059                           ; Number of cases is 1, Range of values is 0 to 0
  1060                           ; switch strategies available:
  1061                           ; Name         Instructions Cycles
  1062                           ; simple_byte            4     3 (average)
  1063                           ; direct_byte           11     8 (fixed)
  1064                           ; jumptable            260     6 (fixed)
  1065                           ;	Chosen strategy is simple_byte
  1066  0167  0871               	movf	??_hienthi+1,w
  1067  0168  3A00               	xorlw	0	; case 0
  1068  0169  1903               	skipnz
  1069  016A  296C               	goto	i1l1064
  1070  016B  297A               	goto	i1l79
  1071  016C                     i1l1064:
  1072                           
  1073                           ; Switch size 1, requested type "simple"
  1074                           ; Number of cases is 4, Range of values is 0 to 3
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte           13     7 (average)
  1078                           ; direct_byte           20     8 (fixed)
  1079                           ; jumptable            260     6 (fixed)
  1080                           ;	Chosen strategy is simple_byte
  1081  016C  0870               	movf	??_hienthi,w
  1082  016D  3A00               	xorlw	0	; case 0
  1083  016E  1903               	skipnz
  1084  016F  2938               	goto	i1l74
  1085  0170  3A01               	xorlw	1	; case 1
  1086  0171  1903               	skipnz
  1087  0172  2943               	goto	i1l76
  1088  0173  3A03               	xorlw	3	; case 2
  1089  0174  1903               	skipnz
  1090  0175  294E               	goto	i1l77
  1091  0176  3A01               	xorlw	1	; case 3
  1092  0177  1903               	skipnz
  1093  0178  2959               	goto	i1l78
  1094  0179  297A               	goto	i1l79
  1095  017A                     i1l79:
  1096  017A  0008               	return
  1097  017B                     __end_of_hienthi:
  1098                           
  1099                           	psect	text4
  1100  01B7                     __ptext4:	
  1101 ;; *************** function ___lwmod *****************
  1102 ;; Defined at:
  1103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  divisor         2    0[COMMON] unsigned int 
  1106 ;;  dividend        2    2[COMMON] unsigned int 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  counter         1    5[COMMON] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  2    0[COMMON] unsigned int 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         4       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0
  1120 ;;      Temps:          1       0       0       0       0
  1121 ;;      Totals:         6       0       0       0       0
  1122 ;;Total ram usage:        6 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_Count_Up
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function ___lwmod
  1133  01B7                     ___lwmod:
  1134                           
  1135                           ;incstack = 0
  1136                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1137  01B7  0870               	movf	___lwmod@divisor,w
  1138  01B8  0471               	iorwf	___lwmod@divisor+1,w
  1139  01B9  1903               	btfsc	3,2
  1140  01BA  29E4               	goto	i1l932
  1141  01BB  01F5               	clrf	___lwmod@counter
  1142  01BC  0AF5               	incf	___lwmod@counter,f
  1143  01BD                     i1l922:
  1144  01BD  1BF1               	btfsc	___lwmod@divisor+1,7
  1145  01BE  29CB               	goto	i1l924
  1146  01BF  3001               	movlw	1
  1147  01C0                     u41_25:
  1148  01C0  1003               	clrc
  1149  01C1  0DF0               	rlf	___lwmod@divisor,f
  1150  01C2  0DF1               	rlf	___lwmod@divisor+1,f
  1151  01C3  3EFF               	addlw	-1
  1152  01C4  1D03               	skipz
  1153  01C5  29C0               	goto	u41_25
  1154  01C6  3001               	movlw	1
  1155  01C7  00F4               	movwf	??___lwmod
  1156  01C8  0874               	movf	??___lwmod,w
  1157  01C9  07F5               	addwf	___lwmod@counter,f
  1158  01CA  29BD               	goto	i1l922
  1159  01CB                     i1l924:
  1160  01CB  0871               	movf	___lwmod@divisor+1,w
  1161  01CC  0273               	subwf	___lwmod@dividend+1,w
  1162  01CD  1D03               	skipz
  1163  01CE  29D1               	goto	u43_25
  1164  01CF  0870               	movf	___lwmod@divisor,w
  1165  01D0  0272               	subwf	___lwmod@dividend,w
  1166  01D1                     u43_25:
  1167  01D1  1C03               	skipc
  1168  01D2  29D9               	goto	i1l928
  1169  01D3  0870               	movf	___lwmod@divisor,w
  1170  01D4  02F2               	subwf	___lwmod@dividend,f
  1171  01D5  0871               	movf	___lwmod@divisor+1,w
  1172  01D6  1C03               	skipc
  1173  01D7  03F3               	decf	___lwmod@dividend+1,f
  1174  01D8  02F3               	subwf	___lwmod@dividend+1,f
  1175  01D9                     i1l928:
  1176  01D9  3001               	movlw	1
  1177  01DA                     u44_25:
  1178  01DA  1003               	clrc
  1179  01DB  0CF1               	rrf	___lwmod@divisor+1,f
  1180  01DC  0CF0               	rrf	___lwmod@divisor,f
  1181  01DD  3EFF               	addlw	-1
  1182  01DE  1D03               	skipz
  1183  01DF  29DA               	goto	u44_25
  1184  01E0  3001               	movlw	1
  1185  01E1  02F5               	subwf	___lwmod@counter,f
  1186  01E2  1D03               	btfss	3,2
  1187  01E3  29CB               	goto	i1l924
  1188  01E4                     i1l932:
  1189  01E4  0873               	movf	___lwmod@dividend+1,w
  1190  01E5  00F1               	movwf	?___lwmod+1
  1191  01E6  0872               	movf	___lwmod@dividend,w
  1192  01E7  00F0               	movwf	?___lwmod
  1193  01E8  0008               	return
  1194  01E9                     __end_of___lwmod:
  1195                           
  1196                           	psect	text5
  1197  017B                     __ptext5:	
  1198 ;; *************** function ___lwdiv *****************
  1199 ;; Defined at:
  1200 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  divisor         2    0[COMMON] unsigned int 
  1203 ;;  dividend        2    2[COMMON] unsigned int 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  quotient        2    5[COMMON] unsigned int 
  1206 ;;  counter         1    7[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  2    0[COMMON] unsigned int 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         4       0       0       0       0
  1217 ;;      Locals:         3       0       0       0       0
  1218 ;;      Temps:          1       0       0       0       0
  1219 ;;      Totals:         8       0       0       0       0
  1220 ;;Total ram usage:        8 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_Count_Up
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function ___lwdiv
  1231  017B                     ___lwdiv:
  1232                           
  1233                           ;incstack = 0
  1234                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1235  017B  01F5               	clrf	___lwdiv@quotient
  1236  017C  01F6               	clrf	___lwdiv@quotient+1
  1237  017D  0870               	movf	___lwdiv@divisor,w
  1238  017E  0471               	iorwf	___lwdiv@divisor+1,w
  1239  017F  1903               	btfsc	3,2
  1240  0180  29B2               	goto	i1l910
  1241  0181  01F7               	clrf	___lwdiv@counter
  1242  0182  0AF7               	incf	___lwdiv@counter,f
  1243  0183                     i1l898:
  1244  0183  1BF1               	btfsc	___lwdiv@divisor+1,7
  1245  0184  2991               	goto	i1l900
  1246  0185  3001               	movlw	1
  1247  0186                     u34_25:
  1248  0186  1003               	clrc
  1249  0187  0DF0               	rlf	___lwdiv@divisor,f
  1250  0188  0DF1               	rlf	___lwdiv@divisor+1,f
  1251  0189  3EFF               	addlw	-1
  1252  018A  1D03               	skipz
  1253  018B  2986               	goto	u34_25
  1254  018C  3001               	movlw	1
  1255  018D  00F4               	movwf	??___lwdiv
  1256  018E  0874               	movf	??___lwdiv,w
  1257  018F  07F7               	addwf	___lwdiv@counter,f
  1258  0190  2983               	goto	i1l898
  1259  0191                     i1l900:
  1260  0191  3001               	movlw	1
  1261  0192                     u36_25:
  1262  0192  1003               	clrc
  1263  0193  0DF5               	rlf	___lwdiv@quotient,f
  1264  0194  0DF6               	rlf	___lwdiv@quotient+1,f
  1265  0195  3EFF               	addlw	-1
  1266  0196  1D03               	skipz
  1267  0197  2992               	goto	u36_25
  1268  0198  0871               	movf	___lwdiv@divisor+1,w
  1269  0199  0273               	subwf	___lwdiv@dividend+1,w
  1270  019A  1D03               	skipz
  1271  019B  299E               	goto	u37_25
  1272  019C  0870               	movf	___lwdiv@divisor,w
  1273  019D  0272               	subwf	___lwdiv@dividend,w
  1274  019E                     u37_25:
  1275  019E  1C03               	skipc
  1276  019F  29A7               	goto	i1l906
  1277  01A0  0870               	movf	___lwdiv@divisor,w
  1278  01A1  02F2               	subwf	___lwdiv@dividend,f
  1279  01A2  0871               	movf	___lwdiv@divisor+1,w
  1280  01A3  1C03               	skipc
  1281  01A4  03F3               	decf	___lwdiv@dividend+1,f
  1282  01A5  02F3               	subwf	___lwdiv@dividend+1,f
  1283  01A6  1475               	bsf	___lwdiv@quotient,0
  1284  01A7                     i1l906:
  1285  01A7  3001               	movlw	1
  1286  01A8                     u38_25:
  1287  01A8  1003               	clrc
  1288  01A9  0CF1               	rrf	___lwdiv@divisor+1,f
  1289  01AA  0CF0               	rrf	___lwdiv@divisor,f
  1290  01AB  3EFF               	addlw	-1
  1291  01AC  1D03               	skipz
  1292  01AD  29A8               	goto	u38_25
  1293  01AE  3001               	movlw	1
  1294  01AF  02F7               	subwf	___lwdiv@counter,f
  1295  01B0  1D03               	btfss	3,2
  1296  01B1  2991               	goto	i1l900
  1297  01B2                     i1l910:
  1298  01B2  0876               	movf	___lwdiv@quotient+1,w
  1299  01B3  00F1               	movwf	?___lwdiv+1
  1300  01B4  0875               	movf	___lwdiv@quotient,w
  1301  01B5  00F0               	movwf	?___lwdiv
  1302  01B6  0008               	return
  1303  01B7                     __end_of___lwdiv:
  1304  007E                     btemp	set	126	;btemp
  1305  007E                     wtemp0	set	126
  1306                           
  1307                           	psect	config
  1308                           
  1309                           ;Config register CONFIG @ 0x2007
  1310                           ;	Oscillator Selection bits
  1311                           ;	FOSC = XT, XT oscillator
  1312                           ;	Watchdog Timer Enable bit
  1313                           ;	WDTE = OFF, WDT disabled
  1314                           ;	Power-up Timer Enable bit
  1315                           ;	PWRTE = ON, PWRT enabled
  1316                           ;	Brown-out Reset Enable bit
  1317                           ;	BOREN = ON, BOR enabled
  1318                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1319                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1320                           ;	Data EEPROM Memory Code Protection bit
  1321                           ;	CPD = OFF, Data EEPROM code protection off
  1322                           ;	Flash Program Memory Write Enable bits
  1323                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1324                           ;	In-Circuit Debugger Mode bit
  1325                           ;	DEBUG = 0x1, unprogrammed default
  1326                           ;	Flash Program Memory Code Protection bit
  1327                           ;	CP = OFF, Code protection off
  1328  2007                     	org	8199
  1329  2007  3FF1               	dw	16369

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Count_Up in COMMON

    _Count_Up->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _Count_Up in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Count_Up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_Up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_Up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _timer2_initialize
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Count_Up                                             4     4      0     957
                                              8 COMMON     4     4      0
                            ___lwdiv
                            ___lwmod
                            _hienthi
 ---------------------------------------------------------------------------------
 (3) _hienthi                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer2_initialize

 _Count_Up (ROOT)
   ___lwdiv
   ___lwmod
   _hienthi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 08 17:46:31 2020

                         _i 0028                           _j 0024                           pc 0002  
                        fsr 0004                         _GIE 005F                         _PR2 0092  
                       _num 0026                         fsr0 0004                         indf 0000  
                      l1004 00FA                        l1030 011F                        l1014 0107  
                      l1008 0100                        l1034 0123                        l1018 010B  
                      _PEIE 005E                        i1l74 0138                        i1l91 00DD  
                      i1l76 0143                        i1l77 014E                        i1l93 00DE  
                      i1l78 0159                        i1l79 017A                        _bLed 007D  
                      _main 00E7                        _ngin 002D                        _tram 002E  
                      btemp 007E                        _truc 002F                        start 000E  
                     ?_main 0070             __end_of___lwdiv 01B7             __end_of___lwmod 01E9  
                     i1l900 0191                       i1l910 01B2                       i1l906 01A7  
                     i1l922 01BD                       i1l924 01CB                       i1l932 01E4  
                     i1l862 0164                       i1l928 01D9                       i1l974 00CF  
                     i1l898 0183                       u41_25 01C0                       u34_25 0186  
                     u51_20 00D4                       _PORTD 0008                       u43_25 01D1  
                     u52_20 00D5                       u36_25 0192                       u44_25 01DA  
                     u37_25 019E                       u38_25 01A8                       _TRISD 0088  
           __end_of_hienthi 017B                       _digit 007C                       _donvi 0030  
                     _count 0022                       pclath 000A                       status 0003  
                     wtemp0 007E             __initialization 0011                __end_of_main 0133  
          __end_of_Count_Up 00E7                      ??_main 0000                      _ADCON1 009F  
                    i1l1064 016C                      _TMR2IE 0461                      _TMR2IF 0061  
                    _TMR2ON 0092                   ??___lwdiv 0074                   ??___lwmod 0074  
                    _number 0031                   ??_hienthi 0070                      saved_w 007E  
   __end_of__initialization 0027              __pcstackCOMMON 0070                __pidataBANK0 020F  
                __pbssBANK0 0020                   ?_Count_Up 0070                  __pmaintext 00E7  
                __pintentry 0004                     _T2CKPS0 0090                     _T2CKPS1 0091  
                   _TOUTPS0 0093                     _TOUTPS1 0094                     _TOUTPS2 0095  
                ??_Count_Up 0078                     ___lwdiv 017B                     ___lwmod 01B7  
         _timer2_initialize 01E9                     __ptext1 01E9                     __ptext2 002B  
                   __ptext3 0133                     __ptext4 01B7                     __ptext5 017B  
        ?_timer2_initialize 0070                     _hienthi 0133                     _count_s 0020  
                   _pre_kb0 002C                     _pre_kb1 002B                     _pre_kb2 002A  
       ??_timer2_initialize 0000                     clrloop0 021A        end_of_initialization 0027  
 __end_of_timer2_initialize 01FE                   _PORTAbits 0005                   _PORTCbits 0007  
                 _PORTEbits 0009                   _TRISAbits 0085                   _TRISCbits 0087  
                 _TRISEbits 0089         start_initialization 0011           __size_of_Count_Up 00BC  
__size_of_timer2_initialize 0015                  init_fetch0 01FE                 __pdataBANK0 0031  
               __pbssCOMMON 007C                   ___latbits 0002               __pcstackBANK0 0000  
          ___lwdiv@dividend 0072                    ?___lwdiv 0070                    ?___lwmod 0070  
                  ?_hienthi 0070            ___lwdiv@quotient 0075           interrupt_function 0004  
                 clear_ram0 0219                    _Count_Up 002B            __size_of___lwdiv 003C  
          __size_of___lwmod 0032            __size_of_hienthi 0048             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077               __size_of_main 004C                    init_ram0 0202  
                  intlevel1 0000            ___lwmod@dividend 0072             ___lwmod@divisor 0070  
           ___lwmod@counter 0075  
