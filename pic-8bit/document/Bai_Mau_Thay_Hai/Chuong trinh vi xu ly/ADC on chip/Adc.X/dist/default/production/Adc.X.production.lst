

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Sep 15 17:00:34 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK1
   375  06F8                     __pidataBANK1:
   376                           
   377                           ;initializer for ___cgram
   378  06F8  340C               	retlw	12
   379  06F9  3412               	retlw	18
   380  06FA  3412               	retlw	18
   381  06FB  340C               	retlw	12
   382  06FC  3400               	retlw	0
   383  06FD  3400               	retlw	0
   384  06FE  3400               	retlw	0
   385  06FF  3400               	retlw	0
   386  0700  3400               	retlw	0
   387  0701  3404               	retlw	4
   388  0702  340E               	retlw	14
   389  0703  341F               	retlw	31
   390  0704  340E               	retlw	14
   391  0705  3404               	retlw	4
   392  0706  3400               	retlw	0
   393  0707  3400               	retlw	0
   394  0708  3404               	retlw	4
   395  0709  3404               	retlw	4
   396  070A  3404               	retlw	4
   397  070B  3404               	retlw	4
   398  070C  341F               	retlw	31
   399  070D  340E               	retlw	14
   400  070E  3404               	retlw	4
   401  070F  3400               	retlw	0
   402  0710  340A               	retlw	10
   403  0711  3415               	retlw	21
   404  0712  3411               	retlw	17
   405  0713  340A               	retlw	10
   406  0714  3404               	retlw	4
   407  0715  3400               	retlw	0
   408  0716  3400               	retlw	0
   409  0717  3400               	retlw	0
   410  0718  340A               	retlw	10
   411  0719  341F               	retlw	31
   412  071A  341F               	retlw	31
   413  071B  340E               	retlw	14
   414  071C  3404               	retlw	4
   415  071D  3400               	retlw	0
   416  071E  3400               	retlw	0
   417  071F  3400               	retlw	0
   418  0720  3400               	retlw	0
   419  0721  3400               	retlw	0
   420  0722  3400               	retlw	0
   421  0723  3400               	retlw	0
   422  0724  3400               	retlw	0
   423  0725  3400               	retlw	0
   424  0726  3400               	retlw	0
   425  0727  3400               	retlw	0
   426  0728  3400               	retlw	0
   427  0729  3400               	retlw	0
   428  072A  3400               	retlw	0
   429  072B  3400               	retlw	0
   430  072C  3400               	retlw	0
   431  072D  3400               	retlw	0
   432  072E  3400               	retlw	0
   433  072F  3400               	retlw	0
   434  0730  3400               	retlw	0
   435  0731  3400               	retlw	0
   436  0732  3400               	retlw	0
   437  0733  3400               	retlw	0
   438  0734  3400               	retlw	0
   439  0735  3400               	retlw	0
   440  0736  3400               	retlw	0
   441  0737  3400               	retlw	0
   442  0019                     _TXREG	set	25
   443  0018                     _RCSTA	set	24
   444  001E                     _ADRESH	set	30
   445  001F                     _ADCON0	set	31
   446  0009                     _PORTEbits	set	9
   447  001A                     _RCREG	set	26
   448  0008                     _PORTD	set	8
   449  00FA                     _GO_DONE	set	250
   450  00F8                     _ADON	set	248
   451  00FD                     _CHS2	set	253
   452  00FC                     _CHS1	set	252
   453  00FB                     _CHS0	set	251
   454  0065                     _RCIF	set	101
   455  0061                     _TMR2IF	set	97
   456  005F                     _GIE	set	95
   457  005E                     _PEIE	set	94
   458  0092                     _TMR2ON	set	146
   459  0095                     _TOUTPS2	set	149
   460  0094                     _TOUTPS1	set	148
   461  0093                     _TOUTPS0	set	147
   462  0091                     _T2CKPS1	set	145
   463  0090                     _T2CKPS0	set	144
   464  0045                     _RD5	set	69
   465  0046                     _RD6	set	70
   466  0044                     _RD4	set	68
   467  0099                     _SPBRG	set	153
   468  0098                     _TXSTA	set	152
   469  009E                     _ADRESL	set	158
   470  009F                     _ADCON1	set	159
   471  0089                     _TRISEbits	set	137
   472  0092                     _PR2	set	146
   473  0088                     _TRISDbits	set	136
   474  0088                     _TRISD	set	136
   475  04C1                     _TRMT	set	1217
   476  0465                     _RCIE	set	1125
   477  0461                     _TMR2IE	set	1121
   478                           
   479                           	psect	strings
   480  0800                     __pstrings:
   481  0800                     stringtab:
   482  0800                     __stringtab:
   483  0800                     stringcode:	
   484                           ;	String table - string pointers are 1 byte each
   485                           
   486  0800                     stringdir:
   487  0800  3008               	movlw	high stringdir
   488  0801  008A               	movwf	10
   489  0802  0804               	movf	4,w
   490  0803  0A84               	incf	4,f
   491  0804  0782               	addwf	2,f
   492  0805                     __stringbase:
   493  0805  3400               	retlw	0
   494  0806                     __end_of__stringtab:
   495  0806                     STR_4:
   496  0806  3447               	retlw	71	;'G'
   497  0807  3469               	retlw	105	;'i'
   498  0808  3461               	retlw	97	;'a'
   499  0809  3420               	retlw	32	;' '
   500  080A  3474               	retlw	116	;'t'
   501  080B  3472               	retlw	114	;'r'
   502  080C  3469               	retlw	105	;'i'
   503  080D  3420               	retlw	32	;' '
   504  080E  3449               	retlw	73	;'I'
   505  080F  343D               	retlw	61	;'='
   506  0810  3420               	retlw	32	;' '
   507  0811  3400               	retlw	0
   508  0812                     STR_5:
   509  0812  3447               	retlw	71	;'G'
   510  0813  3469               	retlw	105	;'i'
   511  0814  3461               	retlw	97	;'a'
   512  0815  3420               	retlw	32	;' '
   513  0816  3474               	retlw	116	;'t'
   514  0817  3472               	retlw	114	;'r'
   515  0818  3469               	retlw	105	;'i'
   516  0819  3420               	retlw	32	;' '
   517  081A  3455               	retlw	85	;'U'
   518  081B  343D               	retlw	61	;'='
   519  081C  3420               	retlw	32	;' '
   520  081D  3400               	retlw	0
   521  081E                     STR_3:
   522  081E  3444               	retlw	68	;'D'
   523  081F  346F               	retlw	111	;'o'
   524  0820  3420               	retlw	32	;' '
   525  0821  3455               	retlw	85	;'U'
   526  0822  342F               	retlw	47	;'/'
   527  0823  3449               	retlw	73	;'I'
   528  0824  3420               	retlw	32	;' '
   529  0825  342E               	retlw	46	;'.'
   530  0826  342E               	retlw	46	;'.'
   531  0827  342E               	retlw	46	;'.'
   532  0828  3400               	retlw	0
   533  0829                     STR_1:
   534  0829  3453               	retlw	83	;'S'
   535  082A  3461               	retlw	97	;'a'
   536  082B  346E               	retlw	110	;'n'
   537  082C  3467               	retlw	103	;'g'
   538  082D  3400               	retlw	0
   539  082E                     STR_2:
   540  082E  3454               	retlw	84	;'T'
   541  082F  3461               	retlw	97	;'a'
   542  0830  3474               	retlw	116	;'t'
   543  0831  3400               	retlw	0
   544                           
   545                           	psect	cinit
   546  0015                     start_initialization:	
   547                           ; #config settings
   548                           
   549  0015                     __initialization:
   550                           
   551                           ; Initialize objects allocated to BANK1
   552  0015  1383               	bcf	3,7	;select IRP bank0
   553  0016  30E0               	movlw	low (__pdataBANK1+64)
   554  0017  00FD               	movwf	btemp+-1
   555  0018  3006               	movlw	high __pidataBANK1
   556  0019  00FE               	movwf	btemp
   557  001A  30F8               	movlw	low __pidataBANK1
   558  001B  00FF               	movwf	btemp+1
   559  001C  30A0               	movlw	low __pdataBANK1
   560  001D  0084               	movwf	4
   561  001E  120A  158A  277D  120A  118A  	fcall	init_ram0
   562                           
   563                           ; Clear objects allocated to BANK1
   564  0023  30E0               	movlw	low __pbssBANK1
   565  0024  0084               	movwf	4
   566  0025  30EA               	movlw	low (__pbssBANK1+10)
   567  0026  120A  158A  275A  120A  118A  	fcall	clear_ram0
   568                           
   569                           ; Clear objects allocated to BANK0
   570  002B  3020               	movlw	low __pbssBANK0
   571  002C  0084               	movwf	4
   572  002D  3040               	movlw	low (__pbssBANK0+32)
   573  002E  120A  158A  275A   	fcall	clear_ram0
   574  0031                     end_of_initialization:	
   575                           ;End of C runtime variable initialization code
   576                           
   577  0031                     __end_of__initialization:
   578  0031  0183               	clrf	3
   579  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   580                           
   581                           	psect	bssBANK0
   582  0020                     __pbssBANK0:
   583  0020                     LCDWriteInt@F912:
   584  0020                     	ds	5
   585  0025                     main@F1000:
   586  0025                     	ds	3
   587  0028                     _Dienap:
   588  0028                     	ds	3
   589  002B                     _Dong:
   590  002B                     	ds	3
   591  002E                     _count_s:
   592  002E                     	ds	2
   593  0030                     _count1:
   594  0030                     	ds	2
   595  0032                     _count:
   596  0032                     	ds	2
   597  0034                     _i:
   598  0034                     	ds	2
   599  0036                     _check_sang:
   600  0036                     	ds	1
   601  0037                     _in_count:
   602  0037                     	ds	1
   603  0038                     _adc_ok:
   604  0038                     	ds	1
   605  0039                     _do_dienap:
   606  0039                     	ds	1
   607  003A                     _in_buffer:
   608  003A                     	ds	6
   609                           
   610                           	psect	bssBANK1
   611  00E0                     __pbssBANK1:
   612  00E0                     _commbuffer:
   613  00E0                     	ds	10
   614                           
   615                           	psect	dataBANK1
   616  00A0                     __pdataBANK1:
   617  00A0                     ___cgram:
   618  00A0                     	ds	64
   619                           
   620                           	psect	inittext
   621  0F79                     init_fetch0:	
   622                           ;	Called with low address in FSR and high address in W
   623                           
   624  0F79  087E               	movf	126,w
   625  0F7A  008A               	movwf	10
   626  0F7B  087F               	movf	127,w
   627  0F7C  0082               	movwf	2
   628  0F7D                     init_ram0:	
   629                           ;Called with:
   630                           ;	high address of idata address in btemp 
   631                           ;	low address of idata address in btemp+1 
   632                           ;	low address of data in FSR
   633                           ;	high address + 1 of data in btemp-1
   634                           
   635  0F7D  2779  120A  158A   	fcall	init_fetch0
   636  0F80  0080               	movwf	0
   637  0F81  0A84               	incf	4,f
   638  0F82  0804               	movf	4,w
   639  0F83  067D               	xorwf	125,w
   640  0F84  1903               	btfsc	3,2
   641  0F85  3400               	retlw	0
   642  0F86  0AFF               	incf	127,f
   643  0F87  1903               	btfsc	3,2
   644  0F88  0AFE               	incf	126,f
   645  0F89  2F7D               	goto	init_ram0
   646                           
   647                           	psect	clrtext
   648  0F5A                     clear_ram0:	
   649                           ;	Called with FSR containing the base address, and
   650                           ;	W with the last address+1
   651                           
   652  0F5A  0064               	clrwdt	;clear the watchdog before getting into this loop
   653  0F5B                     clrloop0:
   654  0F5B  0180               	clrf	0	;clear RAM location pointed to by FSR
   655  0F5C  0A84               	incf	4,f	;increment pointer
   656  0F5D  0604               	xorwf	4,w	;XOR with final address
   657  0F5E  1903               	btfsc	3,2	;have we reached the end yet?
   658  0F5F  3400               	retlw	0	;all done for this memory range, return
   659  0F60  0604               	xorwf	4,w	;XOR again to restore value
   660  0F61  2F5B               	goto	clrloop0	;do the next byte
   661                           
   662                           	psect	cstackBANK3
   663  0190                     __pcstackBANK3:
   664  0190                     ??_main:
   665                           
   666                           ; 1 bytes @ 0x0
   667  0190                     	ds	3
   668  0193                     _main$810:
   669                           
   670                           ; 2 bytes @ 0x3
   671  0193                     	ds	2
   672  0195                     main@Digit:
   673                           
   674                           ; 3 bytes @ 0x5
   675  0195                     	ds	3
   676  0198                     main@ADC_Value:
   677                           
   678                           ; 2 bytes @ 0x8
   679  0198                     	ds	2
   680                           
   681                           	psect	cstackBANK1
   682  00EA                     __pcstackBANK1:
   683  00EA                     ??_Send_data:
   684                           
   685                           ; 1 bytes @ 0x0
   686  00EA                     	ds	1
   687  00EB                     Send_data@k:
   688                           
   689                           ; 2 bytes @ 0x1
   690  00EB                     	ds	2
   691  00ED                     Send_data@i:
   692                           
   693                           ; 1 bytes @ 0x3
   694  00ED                     	ds	1
   695                           
   696                           	psect	cstackCOMMON
   697  0070                     __pcstackCOMMON:
   698  0070                     ?_LCDBusyLoop:
   699  0070                     ?_InitADC:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Init_uart:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_LCDInit:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_LCDWriteString:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_timer2_initialize:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_isr:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_ReadAdc:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_strncmp:	
   721                           ; 2 bytes @ 0x0
   722                           
   723  0070                     ?_main:	
   724                           ; 2 bytes @ 0x0
   725                           
   726  0070                     ?___ftpack:	
   727                           ; 2 bytes @ 0x0
   728                           
   729  0070                     strncmp@s2:	
   730                           ; 3 bytes @ 0x0
   731                           
   732  0070                     ___ftpack@arg:	
   733                           ; 1 bytes @ 0x0
   734                           
   735                           
   736                           ; 3 bytes @ 0x0
   737  0070                     	ds	1
   738  0071                     strncmp@len:
   739                           
   740                           ; 2 bytes @ 0x1
   741  0071                     	ds	1
   742  0072                     ??_ReadAdc:
   743                           
   744                           ; 1 bytes @ 0x2
   745  0072                     	ds	1
   746  0073                     ??_strncmp:
   747  0073                     ___ftpack@exp:	
   748                           ; 1 bytes @ 0x3
   749                           
   750                           
   751                           ; 1 bytes @ 0x3
   752  0073                     	ds	1
   753  0074                     ___ftpack@sign:
   754  0074                     ReadAdc@value:	
   755                           ; 1 bytes @ 0x4
   756                           
   757                           
   758                           ; 2 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     ??___ftpack:
   761  0075                     strncmp@s1:	
   762                           ; 1 bytes @ 0x5
   763                           
   764                           
   765                           ; 1 bytes @ 0x5
   766  0075                     	ds	1
   767  0076                     ReadAdc@Channel:
   768                           
   769                           ; 1 bytes @ 0x6
   770  0076                     	ds	2
   771  0078                     ?___ftmul:
   772  0078                     ?___lwtoft:	
   773                           ; 3 bytes @ 0x8
   774                           
   775  0078                     ___lwtoft@c:	
   776                           ; 3 bytes @ 0x8
   777                           
   778  0078                     ___ftmul@f1:	
   779                           ; 2 bytes @ 0x8
   780                           
   781                           
   782                           ; 3 bytes @ 0x8
   783  0078                     	ds	3
   784  007B                     ??___lwtoft:
   785  007B                     ___ftmul@f2:	
   786                           ; 1 bytes @ 0xB
   787                           
   788                           
   789                           ; 3 bytes @ 0xB
   790  007B                     	ds	3
   791                           
   792                           	psect	cstackBANK0
   793  0040                     __pcstackBANK0:
   794  0040                     ??___ftmul:
   795                           
   796                           ; 1 bytes @ 0x0
   797  0040                     	ds	4
   798  0044                     ___ftmul@exp:
   799                           
   800                           ; 1 bytes @ 0x4
   801  0044                     	ds	1
   802  0045                     ___ftmul@f3_as_product:
   803                           
   804                           ; 3 bytes @ 0x5
   805  0045                     	ds	3
   806  0048                     ___ftmul@cntr:
   807                           
   808                           ; 1 bytes @ 0x8
   809  0048                     	ds	1
   810  0049                     ___ftmul@sign:
   811                           
   812                           ; 1 bytes @ 0x9
   813  0049                     	ds	1
   814  004A                     ??_isr:
   815                           
   816                           ; 1 bytes @ 0xA
   817  004A                     	ds	5
   818  004F                     isr@ch:
   819                           
   820                           ; 1 bytes @ 0xF
   821  004F                     	ds	1
   822  0050                     ??_LCDBusyLoop:
   823  0050                     ??_InitADC:	
   824                           ; 1 bytes @ 0x10
   825                           
   826  0050                     ??_Init_uart:	
   827                           ; 1 bytes @ 0x10
   828                           
   829  0050                     ??_timer2_initialize:	
   830                           ; 1 bytes @ 0x10
   831                           
   832  0050                     ?___lwmod:	
   833                           ; 1 bytes @ 0x10
   834                           
   835  0050                     ?___fttol:	
   836                           ; 2 bytes @ 0x10
   837                           
   838  0050                     ___lwmod@divisor:	
   839                           ; 4 bytes @ 0x10
   840                           
   841  0050                     ___fttol@f1:	
   842                           ; 2 bytes @ 0x10
   843                           
   844                           
   845                           ; 3 bytes @ 0x10
   846  0050                     	ds	2
   847  0052                     LCDBusyLoop@busy:
   848  0052                     ___lwmod@dividend:	
   849                           ; 1 bytes @ 0x12
   850                           
   851                           
   852                           ; 2 bytes @ 0x12
   853  0052                     	ds	1
   854  0053                     LCDBusyLoop@temp:
   855                           
   856                           ; 1 bytes @ 0x13
   857  0053                     	ds	1
   858  0054                     ??___fttol:
   859  0054                     ??___lwmod:	
   860                           ; 1 bytes @ 0x14
   861                           
   862  0054                     LCDBusyLoop@status:	
   863                           ; 1 bytes @ 0x14
   864                           
   865                           
   866                           ; 1 bytes @ 0x14
   867  0054                     	ds	1
   868  0055                     ?_LCDByte:
   869  0055                     LCDByte@isdata:	
   870                           ; 1 bytes @ 0x15
   871                           
   872  0055                     ___lwmod@counter:	
   873                           ; 1 bytes @ 0x15
   874                           
   875                           
   876                           ; 1 bytes @ 0x15
   877  0055                     	ds	1
   878  0056                     ??_LCDByte:
   879  0056                     ?___lwdiv:	
   880                           ; 1 bytes @ 0x16
   881                           
   882  0056                     ___lwdiv@divisor:	
   883                           ; 2 bytes @ 0x16
   884                           
   885                           
   886                           ; 2 bytes @ 0x16
   887  0056                     	ds	2
   888  0058                     LCDByte@hn:
   889  0058                     ___fttol@sign1:	
   890                           ; 1 bytes @ 0x18
   891                           
   892  0058                     ___lwdiv@dividend:	
   893                           ; 1 bytes @ 0x18
   894                           
   895                           
   896                           ; 2 bytes @ 0x18
   897  0058                     	ds	1
   898  0059                     LCDByte@ln:
   899  0059                     ___fttol@lval:	
   900                           ; 1 bytes @ 0x19
   901                           
   902                           
   903                           ; 4 bytes @ 0x19
   904  0059                     	ds	1
   905  005A                     ??___lwdiv:
   906  005A                     LCDByte@c:	
   907                           ; 1 bytes @ 0x1A
   908                           
   909                           
   910                           ; 1 bytes @ 0x1A
   911  005A                     	ds	1
   912  005B                     LCDByte@temp:
   913  005B                     ___lwdiv@counter:	
   914                           ; 1 bytes @ 0x1B
   915                           
   916                           
   917                           ; 1 bytes @ 0x1B
   918  005B                     	ds	1
   919  005C                     ??_LCDInit:
   920  005C                     ??_LCDWriteString:	
   921                           ; 1 bytes @ 0x1C
   922                           
   923  005C                     ?_LCDGotoXY:	
   924                           ; 1 bytes @ 0x1C
   925                           
   926  005C                     LCDGotoXY@y:	
   927                           ; 1 bytes @ 0x1C
   928                           
   929  005C                     ___lwdiv@quotient:	
   930                           ; 1 bytes @ 0x1C
   931                           
   932                           
   933                           ; 2 bytes @ 0x1C
   934  005C                     	ds	1
   935  005D                     ??_LCDGotoXY:
   936  005D                     LCDWriteString@cc:	
   937                           ; 1 bytes @ 0x1D
   938                           
   939  005D                     ___fttol@exp1:	
   940                           ; 1 bytes @ 0x1D
   941                           
   942                           
   943                           ; 1 bytes @ 0x1D
   944  005D                     	ds	1
   945  005E                     ?_Send_data:
   946  005E                     LCDInit@style:	
   947                           ; 1 bytes @ 0x1E
   948                           
   949  005E                     LCDWriteString@msg:	
   950                           ; 1 bytes @ 0x1E
   951                           
   952  005E                     Send_data@Value:	
   953                           ; 1 bytes @ 0x1E
   954                           
   955                           
   956                           ; 2 bytes @ 0x1E
   957  005E                     	ds	1
   958  005F                     LCDInit@__i:
   959  005F                     LCDGotoXY@x:	
   960                           ; 1 bytes @ 0x1F
   961                           
   962                           
   963                           ; 1 bytes @ 0x1F
   964  005F                     	ds	1
   965                           
   966                           	psect	maintext
   967  0035                     __pmaintext:	
   968 ;;
   969 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   970 ;;
   971 ;; *************** function _main *****************
   972 ;; Defined at:
   973 ;;		line 110 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  Digit           3    5[BANK3 ] unsigned char [3]
   978 ;;  ADC_Value       2    8[BANK3 ] unsigned int 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  2  170[None  ] int 
   981 ;; Registers used:
   982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : B00/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       7       0
   990 ;;      Temps:          0       0       0       3       0
   991 ;;      Totals:         0       0       0      10       0
   992 ;;Total ram usage:       10 bytes
   993 ;; Hardware stack levels required when called:    6
   994 ;; This function calls:
   995 ;;		_InitADC
   996 ;;		_Init_uart
   997 ;;		_LCDByte
   998 ;;		_LCDGotoXY
   999 ;;		_LCDInit
  1000 ;;		_LCDWriteString
  1001 ;;		_Send_data
  1002 ;;		___fttol
  1003 ;;		___lwdiv
  1004 ;;		___lwmod
  1005 ;;		_timer2_initialize
  1006 ;; This function is called by:
  1007 ;;		Startup code after reset
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _main
  1013  0035                     _main:
  1014                           
  1015                           ;main.c: 112:     unsigned char Digit[3] = { 0,0,0 };
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1019  0035  3000               	movlw	0
  1020  0036  1683               	bsf	3,5	;RP0=1, select bank3
  1021  0037  1703               	bsf	3,6	;RP1=1, select bank3
  1022  0038  0095               	movwf	main@Digit^(0+384)
  1023  0039  3000               	movlw	0
  1024  003A  0096               	movwf	(main@Digit+1)^(0+384)
  1025  003B  3000               	movlw	0
  1026  003C  0097               	movwf	(main@Digit+2)^(0+384)
  1027                           
  1028                           ;main.c: 115:     TRISEbits.TRISE2=0;
  1029  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1030  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1031  003F  1109               	bcf	9,2	;volatile
  1032                           
  1033                           ;main.c: 116:    InitADC();
  1034  0040  120A  158A  2762  120A  118A  	fcall	_InitADC
  1035                           
  1036                           ;main.c: 117:    LCDInit(0B00000000);
  1037  0045  3000               	movlw	0
  1038  0046  120A  118A  25A7  120A  118A  	fcall	_LCDInit
  1039                           
  1040                           ;main.c: 119:    timer2_initialize ();
  1041  004B  120A  118A  27EA  120A  118A  	fcall	_timer2_initialize
  1042                           
  1043                           ;main.c: 121:   (LCDByte(0b00000001,0));
  1044  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0052  01D5               	clrf	LCDByte@isdata
  1047  0053  3001               	movlw	1
  1048  0054  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1049                           
  1050                           ;main.c: 122:   Init_uart();
  1051  0059  120A  158A  276B  120A  118A  	fcall	_Init_uart
  1052                           
  1053                           ;main.c: 124:    LCDWriteString("Do U/I ...");
  1054  005E  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1055  005F  120A  118A  2665  120A  118A  	fcall	_LCDWriteString
  1056                           
  1057                           ;main.c: 126:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1058  0064  3003               	movlw	3
  1059  0065  1683               	bsf	3,5	;RP0=1, select bank3
  1060  0066  1703               	bsf	3,6	;RP1=1, select bank3
  1061  0067  0092               	movwf	(??_main^(0+384)+2)
  1062  0068  3008               	movlw	8
  1063  0069  0091               	movwf	(??_main^(0+384)+1)
  1064  006A  3076               	movlw	118
  1065  006B  0090               	movwf	??_main^(0+384)
  1066  006C                     u2337:
  1067  006C  0B90               	decfsz	??_main^(0+384),f
  1068  006D  286C               	goto	u2337
  1069  006E  0B91               	decfsz	(??_main^(0+384)+1),f
  1070  006F  286C               	goto	u2337
  1071  0070  0B92               	decfsz	(??_main^(0+384)+2),f
  1072  0071  286C               	goto	u2337
  1073  0072  0000               	nop
  1074                           
  1075                           ;main.c: 127:     (LCDByte(0b00000001,0));
  1076  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0075  01D5               	clrf	LCDByte@isdata
  1079  0076  3001               	movlw	1
  1080  0077                     L1:
  1081  0077  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1082  007C                     l2509:
  1083                           
  1084                           ;main.c: 129:  {;main.c: 130:        if(adc_ok&&count1==25)
  1085  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1086  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1087  007E  0838               	movf	_adc_ok,w
  1088  007F  1903               	btfsc	3,2
  1089  0080  287C               	goto	l2509
  1090  0081  3019               	movlw	25
  1091  0082  0630               	xorwf	_count1,w
  1092  0083  0431               	iorwf	_count1+1,w
  1093  0084  1D03               	btfss	3,2
  1094  0085  287C               	goto	l2509
  1095                           
  1096                           ;main.c: 131:        {;main.c: 132:          count1=0;
  1097  0086  01B0               	clrf	_count1
  1098  0087  01B1               	clrf	_count1+1
  1099                           
  1100                           ;main.c: 133:          ADC_Value=(unsigned int)Dong;
  1101  0088  082B               	movf	_Dong,w
  1102  0089  00D0               	movwf	___fttol@f1
  1103  008A  082C               	movf	_Dong+1,w
  1104  008B  00D1               	movwf	___fttol@f1+1
  1105  008C  082D               	movf	_Dong+2,w
  1106  008D  00D2               	movwf	___fttol@f1+2
  1107  008E  120A  118A  24BE  120A  118A  	fcall	___fttol
  1108  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0095  0851               	movf	?___fttol+1,w
  1111  0096  1683               	bsf	3,5	;RP0=1, select bank3
  1112  0097  1703               	bsf	3,6	;RP1=1, select bank3
  1113  0098  0099               	movwf	(main@ADC_Value+1)^(0+384)
  1114  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1115  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1116  009B  0850               	movf	?___fttol,w
  1117  009C  1683               	bsf	3,5	;RP0=1, select bank3
  1118  009D  1703               	bsf	3,6	;RP1=1, select bank3
  1119  009E  0098               	movwf	main@ADC_Value^(0+384)
  1120                           
  1121                           ;main.c: 134:   Digit[2] = (ADC_Value/100);
  1122  009F  3064               	movlw	100
  1123  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1124  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1125  00A2  00D6               	movwf	___lwdiv@divisor
  1126  00A3  3000               	movlw	0
  1127  00A4  00D7               	movwf	___lwdiv@divisor+1
  1128  00A5  1683               	bsf	3,5	;RP0=1, select bank3
  1129  00A6  1703               	bsf	3,6	;RP1=1, select bank3
  1130  00A7  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1131  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1132  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1133  00AA  00D9               	movwf	___lwdiv@dividend+1
  1134  00AB  1683               	bsf	3,5	;RP0=1, select bank3
  1135  00AC  1703               	bsf	3,6	;RP1=1, select bank3
  1136  00AD  0818               	movf	main@ADC_Value^(0+384),w
  1137  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1138  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1139  00B0  00D8               	movwf	___lwdiv@dividend
  1140  00B1  120A  118A  2738  120A  118A  	fcall	___lwdiv
  1141  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1142  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1143  00B8  0856               	movf	?___lwdiv,w
  1144  00B9  1683               	bsf	3,5	;RP0=1, select bank3
  1145  00BA  1703               	bsf	3,6	;RP1=1, select bank3
  1146  00BB  0090               	movwf	??_main^(0+384)
  1147  00BC  0810               	movf	??_main^(0+384),w
  1148  00BD  0097               	movwf	(main@Digit^(0+384)+2)
  1149                           
  1150                           ;main.c: 135:   Digit[1] = (ADC_Value%100)/10;
  1151  00BE  300A               	movlw	10
  1152  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1153  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1154  00C1  00D6               	movwf	___lwdiv@divisor
  1155  00C2  3000               	movlw	0
  1156  00C3  00D7               	movwf	___lwdiv@divisor+1
  1157  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  1158  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  1159  00C6  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1160  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00C9  00D3               	movwf	___lwmod@dividend+1
  1163  00CA  1683               	bsf	3,5	;RP0=1, select bank3
  1164  00CB  1703               	bsf	3,6	;RP1=1, select bank3
  1165  00CC  0818               	movf	main@ADC_Value^(0+384),w
  1166  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1168  00CF  00D2               	movwf	___lwmod@dividend
  1169  00D0  3064               	movlw	100
  1170  00D1  00D0               	movwf	___lwmod@divisor
  1171  00D2  3000               	movlw	0
  1172  00D3  00D1               	movwf	___lwmod@divisor+1
  1173  00D4  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1174  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1175  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1176  00DB  0851               	movf	?___lwmod+1,w
  1177  00DC  00D9               	movwf	___lwdiv@dividend+1
  1178  00DD  0850               	movf	?___lwmod,w
  1179  00DE  00D8               	movwf	___lwdiv@dividend
  1180  00DF  120A  118A  2738  120A  118A  	fcall	___lwdiv
  1181  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00E6  0856               	movf	?___lwdiv,w
  1184  00E7  1683               	bsf	3,5	;RP0=1, select bank3
  1185  00E8  1703               	bsf	3,6	;RP1=1, select bank3
  1186  00E9  0090               	movwf	??_main^(0+384)
  1187  00EA  0810               	movf	??_main^(0+384),w
  1188  00EB  0096               	movwf	(main@Digit^(0+384)+1)
  1189                           
  1190                           ;main.c: 136:   Digit[0] = (ADC_Value%100)%10;
  1191  00EC  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1192  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1193  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1194  00EF  00D3               	movwf	___lwmod@dividend+1
  1195  00F0  1683               	bsf	3,5	;RP0=1, select bank3
  1196  00F1  1703               	bsf	3,6	;RP1=1, select bank3
  1197  00F2  0818               	movf	main@ADC_Value^(0+384),w
  1198  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1200  00F5  00D2               	movwf	___lwmod@dividend
  1201  00F6  3064               	movlw	100
  1202  00F7  00D0               	movwf	___lwmod@divisor
  1203  00F8  3000               	movlw	0
  1204  00F9  00D1               	movwf	___lwmod@divisor+1
  1205  00FA  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1206  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0101  0851               	movf	?___lwmod+1,w
  1209  0102  1683               	bsf	3,5	;RP0=1, select bank3
  1210  0103  1703               	bsf	3,6	;RP1=1, select bank3
  1211  0104  0094               	movwf	(_main$810+1)^(0+384)
  1212  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0107  0850               	movf	?___lwmod,w
  1215  0108  1683               	bsf	3,5	;RP0=1, select bank3
  1216  0109  1703               	bsf	3,6	;RP1=1, select bank3
  1217  010A  0093               	movwf	_main$810^(0+384)
  1218                           
  1219                           ;main.c: 136:   Digit[0] = (ADC_Value%100)%10;
  1220  010B  300A               	movlw	10
  1221  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1222  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1223  010E  00D0               	movwf	___lwmod@divisor
  1224  010F  3000               	movlw	0
  1225  0110  00D1               	movwf	___lwmod@divisor+1
  1226  0111  1683               	bsf	3,5	;RP0=1, select bank3
  1227  0112  1703               	bsf	3,6	;RP1=1, select bank3
  1228  0113  0814               	movf	(_main$810+1)^(0+384),w
  1229  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0116  00D3               	movwf	___lwmod@dividend+1
  1232  0117  1683               	bsf	3,5	;RP0=1, select bank3
  1233  0118  1703               	bsf	3,6	;RP1=1, select bank3
  1234  0119  0813               	movf	_main$810^(0+384),w
  1235  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1236  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1237  011C  00D2               	movwf	___lwmod@dividend
  1238  011D  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1239  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0124  0850               	movf	?___lwmod,w
  1242  0125  1683               	bsf	3,5	;RP0=1, select bank3
  1243  0126  1703               	bsf	3,6	;RP1=1, select bank3
  1244  0127  0090               	movwf	??_main^(0+384)
  1245  0128  0810               	movf	??_main^(0+384),w
  1246  0129  0095               	movwf	main@Digit^(0+384)
  1247                           
  1248                           ;main.c: 137:        Send_data(ADC_Value);
  1249  012A  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1250  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1251  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1252  012D  00DF               	movwf	Send_data@Value+1
  1253  012E  1683               	bsf	3,5	;RP0=1, select bank3
  1254  012F  1703               	bsf	3,6	;RP1=1, select bank3
  1255  0130  0818               	movf	main@ADC_Value^(0+384),w
  1256  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0133  00DE               	movwf	Send_data@Value
  1259  0134  120A  118A  2423  120A  118A  	fcall	_Send_data
  1260                           
  1261                           ;main.c: 139:       LCDGotoXY(1,0);
  1262  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1263  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1264  013B  01DC               	clrf	LCDGotoXY@y
  1265  013C  3001               	movlw	1
  1266  013D  120A  158A  279E  120A  118A  	fcall	_LCDGotoXY
  1267                           
  1268                           ;main.c: 140:  LCDWriteString("Gia tri I= ");
  1269  0142  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1270  0143  120A  118A  2665  120A  118A  	fcall	_LCDWriteString
  1271                           
  1272                           ;main.c: 141:  (LCDByte(Digit[2]+0x30,1));
  1273  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1275  014A  01D5               	clrf	LCDByte@isdata
  1276  014B  0AD5               	incf	LCDByte@isdata,f
  1277  014C  1683               	bsf	3,5	;RP0=1, select bank3
  1278  014D  1703               	bsf	3,6	;RP1=1, select bank3
  1279  014E  0817               	movf	(main@Digit^(0+384)+2),w
  1280  014F  3E30               	addlw	48
  1281  0150  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1282                           
  1283                           ;main.c: 142:  (LCDByte('.',1));
  1284  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0157  01D5               	clrf	LCDByte@isdata
  1287  0158  0AD5               	incf	LCDByte@isdata,f
  1288  0159  302E               	movlw	46
  1289  015A  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1290                           
  1291                           ;main.c: 143:  (LCDByte(Digit[1]+0x30,1));
  1292  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0161  01D5               	clrf	LCDByte@isdata
  1295  0162  0AD5               	incf	LCDByte@isdata,f
  1296  0163  1683               	bsf	3,5	;RP0=1, select bank3
  1297  0164  1703               	bsf	3,6	;RP1=1, select bank3
  1298  0165  0816               	movf	(main@Digit^(0+384)+1),w
  1299  0166  3E30               	addlw	48
  1300  0167  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1301                           
  1302                           ;main.c: 144:  (LCDByte(Digit[0]+0x30,1));
  1303  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1304  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1305  016E  01D5               	clrf	LCDByte@isdata
  1306  016F  0AD5               	incf	LCDByte@isdata,f
  1307  0170  1683               	bsf	3,5	;RP0=1, select bank3
  1308  0171  1703               	bsf	3,6	;RP1=1, select bank3
  1309  0172  0815               	movf	main@Digit^(0+384),w
  1310  0173  3E30               	addlw	48
  1311  0174  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1312                           
  1313                           ;main.c: 148:   ADC_Value=(unsigned int)Dienap;
  1314  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1315  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1316  017B  0828               	movf	_Dienap,w
  1317  017C  00D0               	movwf	___fttol@f1
  1318  017D  0829               	movf	_Dienap+1,w
  1319  017E  00D1               	movwf	___fttol@f1+1
  1320  017F  082A               	movf	_Dienap+2,w
  1321  0180  00D2               	movwf	___fttol@f1+2
  1322  0181  120A  118A  24BE  120A  118A  	fcall	___fttol
  1323  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0188  0851               	movf	?___fttol+1,w
  1326  0189  1683               	bsf	3,5	;RP0=1, select bank3
  1327  018A  1703               	bsf	3,6	;RP1=1, select bank3
  1328  018B  0099               	movwf	(main@ADC_Value+1)^(0+384)
  1329  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1330  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1331  018E  0850               	movf	?___fttol,w
  1332  018F  1683               	bsf	3,5	;RP0=1, select bank3
  1333  0190  1703               	bsf	3,6	;RP1=1, select bank3
  1334  0191  0098               	movwf	main@ADC_Value^(0+384)
  1335                           
  1336                           ;main.c: 149:   Digit[2] = (ADC_Value/100);
  1337  0192  3064               	movlw	100
  1338  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0195  00D6               	movwf	___lwdiv@divisor
  1341  0196  3000               	movlw	0
  1342  0197  00D7               	movwf	___lwdiv@divisor+1
  1343  0198  1683               	bsf	3,5	;RP0=1, select bank3
  1344  0199  1703               	bsf	3,6	;RP1=1, select bank3
  1345  019A  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1346  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1347  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1348  019D  00D9               	movwf	___lwdiv@dividend+1
  1349  019E  1683               	bsf	3,5	;RP0=1, select bank3
  1350  019F  1703               	bsf	3,6	;RP1=1, select bank3
  1351  01A0  0818               	movf	main@ADC_Value^(0+384),w
  1352  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1353  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1354  01A3  00D8               	movwf	___lwdiv@dividend
  1355  01A4  120A  118A  2738  120A  118A  	fcall	___lwdiv
  1356  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1357  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1358  01AB  0856               	movf	?___lwdiv,w
  1359  01AC  1683               	bsf	3,5	;RP0=1, select bank3
  1360  01AD  1703               	bsf	3,6	;RP1=1, select bank3
  1361  01AE  0090               	movwf	??_main^(0+384)
  1362  01AF  0810               	movf	??_main^(0+384),w
  1363  01B0  0097               	movwf	(main@Digit^(0+384)+2)
  1364                           
  1365                           ;main.c: 150:   Digit[1] = (ADC_Value%100)/10;
  1366  01B1  300A               	movlw	10
  1367  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1368  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1369  01B4  00D6               	movwf	___lwdiv@divisor
  1370  01B5  3000               	movlw	0
  1371  01B6  00D7               	movwf	___lwdiv@divisor+1
  1372  01B7  1683               	bsf	3,5	;RP0=1, select bank3
  1373  01B8  1703               	bsf	3,6	;RP1=1, select bank3
  1374  01B9  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1375  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1376  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1377  01BC  00D3               	movwf	___lwmod@dividend+1
  1378  01BD  1683               	bsf	3,5	;RP0=1, select bank3
  1379  01BE  1703               	bsf	3,6	;RP1=1, select bank3
  1380  01BF  0818               	movf	main@ADC_Value^(0+384),w
  1381  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1382  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1383  01C2  00D2               	movwf	___lwmod@dividend
  1384  01C3  3064               	movlw	100
  1385  01C4  00D0               	movwf	___lwmod@divisor
  1386  01C5  3000               	movlw	0
  1387  01C6  00D1               	movwf	___lwmod@divisor+1
  1388  01C7  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1389  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1390  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1391  01CE  0851               	movf	?___lwmod+1,w
  1392  01CF  00D9               	movwf	___lwdiv@dividend+1
  1393  01D0  0850               	movf	?___lwmod,w
  1394  01D1  00D8               	movwf	___lwdiv@dividend
  1395  01D2  120A  118A  2738  120A  118A  	fcall	___lwdiv
  1396  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1397  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1398  01D9  0856               	movf	?___lwdiv,w
  1399  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  1400  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  1401  01DC  0090               	movwf	??_main^(0+384)
  1402  01DD  0810               	movf	??_main^(0+384),w
  1403  01DE  0096               	movwf	(main@Digit^(0+384)+1)
  1404                           
  1405                           ;main.c: 151:   Digit[0] = (ADC_Value%100)%10;
  1406  01DF  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1407  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1408  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1409  01E2  00D3               	movwf	___lwmod@dividend+1
  1410  01E3  1683               	bsf	3,5	;RP0=1, select bank3
  1411  01E4  1703               	bsf	3,6	;RP1=1, select bank3
  1412  01E5  0818               	movf	main@ADC_Value^(0+384),w
  1413  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1414  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1415  01E8  00D2               	movwf	___lwmod@dividend
  1416  01E9  3064               	movlw	100
  1417  01EA  00D0               	movwf	___lwmod@divisor
  1418  01EB  3000               	movlw	0
  1419  01EC  00D1               	movwf	___lwmod@divisor+1
  1420  01ED  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1421  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1422  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1423  01F4  0851               	movf	?___lwmod+1,w
  1424  01F5  1683               	bsf	3,5	;RP0=1, select bank3
  1425  01F6  1703               	bsf	3,6	;RP1=1, select bank3
  1426  01F7  0094               	movwf	(_main$810+1)^(0+384)
  1427  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1428  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1429  01FA  0850               	movf	?___lwmod,w
  1430  01FB  1683               	bsf	3,5	;RP0=1, select bank3
  1431  01FC  1703               	bsf	3,6	;RP1=1, select bank3
  1432  01FD  0093               	movwf	_main$810^(0+384)
  1433                           
  1434                           ;main.c: 151:   Digit[0] = (ADC_Value%100)%10;
  1435  01FE  300A               	movlw	10
  1436  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0201  00D0               	movwf	___lwmod@divisor
  1439  0202  3000               	movlw	0
  1440  0203  00D1               	movwf	___lwmod@divisor+1
  1441  0204  1683               	bsf	3,5	;RP0=1, select bank3
  1442  0205  1703               	bsf	3,6	;RP1=1, select bank3
  1443  0206  0814               	movf	(_main$810+1)^(0+384),w
  1444  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0209  00D3               	movwf	___lwmod@dividend+1
  1447  020A  1683               	bsf	3,5	;RP0=1, select bank3
  1448  020B  1703               	bsf	3,6	;RP1=1, select bank3
  1449  020C  0813               	movf	_main$810^(0+384),w
  1450  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1451  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1452  020F  00D2               	movwf	___lwmod@dividend
  1453  0210  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1454  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0217  0850               	movf	?___lwmod,w
  1457  0218  1683               	bsf	3,5	;RP0=1, select bank3
  1458  0219  1703               	bsf	3,6	;RP1=1, select bank3
  1459  021A  0090               	movwf	??_main^(0+384)
  1460  021B  0810               	movf	??_main^(0+384),w
  1461  021C  0095               	movwf	main@Digit^(0+384)
  1462                           
  1463                           ;main.c: 152:       Send_data(ADC_Value);
  1464  021D  0819               	movf	(main@ADC_Value+1)^(0+384),w
  1465  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1466  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0220  00DF               	movwf	Send_data@Value+1
  1468  0221  1683               	bsf	3,5	;RP0=1, select bank3
  1469  0222  1703               	bsf	3,6	;RP1=1, select bank3
  1470  0223  0818               	movf	main@ADC_Value^(0+384),w
  1471  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0226  00DE               	movwf	Send_data@Value
  1474  0227  120A  118A  2423  120A  118A  	fcall	_Send_data
  1475                           
  1476                           ;main.c: 153:      LCDGotoXY(1,1);
  1477  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1478  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1479  022E  01DC               	clrf	LCDGotoXY@y
  1480  022F  0ADC               	incf	LCDGotoXY@y,f
  1481  0230  3001               	movlw	1
  1482  0231  120A  158A  279E  120A  118A  	fcall	_LCDGotoXY
  1483                           
  1484                           ;main.c: 154:  LCDWriteString("Gia tri U= ");
  1485  0236  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1486  0237  120A  118A  2665  120A  118A  	fcall	_LCDWriteString
  1487                           
  1488                           ;main.c: 155:  (LCDByte(Digit[2]+0x30,1));
  1489  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1490  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1491  023E  01D5               	clrf	LCDByte@isdata
  1492  023F  0AD5               	incf	LCDByte@isdata,f
  1493  0240  1683               	bsf	3,5	;RP0=1, select bank3
  1494  0241  1703               	bsf	3,6	;RP1=1, select bank3
  1495  0242  0817               	movf	(main@Digit^(0+384)+2),w
  1496  0243  3E30               	addlw	48
  1497  0244  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1498                           
  1499                           ;main.c: 156:  (LCDByte('.',1));
  1500  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1501  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1502  024B  01D5               	clrf	LCDByte@isdata
  1503  024C  0AD5               	incf	LCDByte@isdata,f
  1504  024D  302E               	movlw	46
  1505  024E  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1506                           
  1507                           ;main.c: 157:  (LCDByte(Digit[1]+0x30,1));
  1508  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0255  01D5               	clrf	LCDByte@isdata
  1511  0256  0AD5               	incf	LCDByte@isdata,f
  1512  0257  1683               	bsf	3,5	;RP0=1, select bank3
  1513  0258  1703               	bsf	3,6	;RP1=1, select bank3
  1514  0259  0816               	movf	(main@Digit^(0+384)+1),w
  1515  025A  3E30               	addlw	48
  1516  025B  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  1517                           
  1518                           ;main.c: 158:  (LCDByte(Digit[0]+0x30,1));
  1519  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0262  01D5               	clrf	LCDByte@isdata
  1522  0263  0AD5               	incf	LCDByte@isdata,f
  1523  0264  1683               	bsf	3,5	;RP0=1, select bank3
  1524  0265  1703               	bsf	3,6	;RP1=1, select bank3
  1525  0266  0815               	movf	main@Digit^(0+384),w
  1526  0267  3E30               	addlw	48
  1527  0268  2877               	goto	L1
  1528  0269                     __end_of_main:
  1529                           
  1530                           	psect	text1
  1531  07EA                     __ptext1:	
  1532 ;; *************** function _timer2_initialize *****************
  1533 ;; Defined at:
  1534 ;;		line 41 in file "main.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    3
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _timer2_initialize
  1564  07EA                     _timer2_initialize:
  1565                           
  1566                           ;main.c: 43:     T2CKPS0=1;
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _timer2_initialize: [wreg]
  1570  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1571  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1572  07EC  1412               	bsf	18,0	;volatile
  1573                           
  1574                           ;main.c: 44:     T2CKPS1=0;
  1575  07ED  1092               	bcf	18,1	;volatile
  1576                           
  1577                           ;main.c: 45:     PR2=100;
  1578  07EE  3064               	movlw	100
  1579  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  1580  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  1581  07F1  0092               	movwf	18	;volatile
  1582                           
  1583                           ;main.c: 46:     TOUTPS0=1;
  1584  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  1585  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  1586  07F4  1592               	bsf	18,3	;volatile
  1587                           
  1588                           ;main.c: 47:     TOUTPS1=1;
  1589  07F5  1612               	bsf	18,4	;volatile
  1590                           
  1591                           ;main.c: 48:     TOUTPS2=1;
  1592  07F6  1692               	bsf	18,5	;volatile
  1593                           
  1594                           ;main.c: 49:     TOUTPS2=1;
  1595  07F7  1692               	bsf	18,5	;volatile
  1596                           
  1597                           ;main.c: 50:     TMR2ON=1;
  1598  07F8  1512               	bsf	18,2	;volatile
  1599                           
  1600                           ;main.c: 51:     TMR2IE=1;
  1601  07F9  1683               	bsf	3,5	;RP0=1, select bank1
  1602  07FA  1303               	bcf	3,6	;RP1=0, select bank1
  1603  07FB  148C               	bsf	12,1	;volatile
  1604                           
  1605                           ;main.c: 52:     PEIE=1;
  1606  07FC  170B               	bsf	11,6	;volatile
  1607                           
  1608                           ;main.c: 53:     GIE=1;
  1609  07FD  178B               	bsf	11,7	;volatile
  1610  07FE  0008               	return
  1611  07FF                     __end_of_timer2_initialize:
  1612                           
  1613                           	psect	text2
  1614  04BE                     __ptext2:	
  1615 ;; *************** function ___fttol *****************
  1616 ;; Defined at:
  1617 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  f1              3   16[BANK0 ] float 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  lval            4   25[BANK0 ] unsigned long 
  1622 ;;  exp1            1   29[BANK0 ] unsigned char 
  1623 ;;  sign1           1   24[BANK0 ] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  4   16[BANK0 ] long 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1633 ;;      Params:         0       4       0       0       0
  1634 ;;      Locals:         0       6       0       0       0
  1635 ;;      Temps:          0       4       0       0       0
  1636 ;;      Totals:         0      14       0       0       0
  1637 ;;Total ram usage:       14 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    3
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function ___fttol
  1649  04BE                     ___fttol:
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1653  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1654  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1655  04C0  0850               	movf	___fttol@f1,w
  1656  04C1  00D4               	movwf	??___fttol
  1657  04C2  0851               	movf	___fttol@f1+1,w
  1658  04C3  00D5               	movwf	??___fttol+1
  1659  04C4  0852               	movf	___fttol@f1+2,w
  1660  04C5  00D6               	movwf	??___fttol+2
  1661  04C6  1003               	clrc
  1662  04C7  0D55               	rlf	??___fttol+1,w
  1663  04C8  0D56               	rlf	??___fttol+2,w
  1664  04C9  00D7               	movwf	??___fttol+3
  1665  04CA  0857               	movf	??___fttol+3,w
  1666  04CB  00DD               	movwf	___fttol@exp1
  1667  04CC  085D               	movf	___fttol@exp1,w
  1668  04CD  1D03               	btfss	3,2
  1669  04CE  2CD8               	goto	l2411
  1670  04CF                     l2407:
  1671  04CF  3000               	movlw	0
  1672  04D0  00D3               	movwf	?___fttol+3
  1673  04D1  3000               	movlw	0
  1674  04D2  00D2               	movwf	?___fttol+2
  1675  04D3  3000               	movlw	0
  1676  04D4  00D1               	movwf	?___fttol+1
  1677  04D5  3000               	movlw	0
  1678  04D6  00D0               	movwf	?___fttol
  1679  04D7  0008               	return
  1680  04D8                     l2411:
  1681  04D8  0850               	movf	___fttol@f1,w
  1682  04D9  00D4               	movwf	??___fttol
  1683  04DA  0851               	movf	___fttol@f1+1,w
  1684  04DB  00D5               	movwf	??___fttol+1
  1685  04DC  0852               	movf	___fttol@f1+2,w
  1686  04DD  00D6               	movwf	??___fttol+2
  1687  04DE  3017               	movlw	23
  1688  04DF                     u2165:
  1689  04DF  1003               	clrc
  1690  04E0  0CD6               	rrf	??___fttol+2,f
  1691  04E1  0CD5               	rrf	??___fttol+1,f
  1692  04E2  0CD4               	rrf	??___fttol,f
  1693  04E3  3EFF               	addlw	-1
  1694  04E4  1D03               	skipz
  1695  04E5  2CDF               	goto	u2165
  1696  04E6  0854               	movf	??___fttol,w
  1697  04E7  00D7               	movwf	??___fttol+3
  1698  04E8  0857               	movf	??___fttol+3,w
  1699  04E9  00D8               	movwf	___fttol@sign1
  1700  04EA  17D1               	bsf	___fttol@f1+1,7
  1701  04EB  30FF               	movlw	255
  1702  04EC  05D0               	andwf	___fttol@f1,f
  1703  04ED  30FF               	movlw	255
  1704  04EE  05D1               	andwf	___fttol@f1+1,f
  1705  04EF  3000               	movlw	0
  1706  04F0  05D2               	andwf	___fttol@f1+2,f
  1707  04F1  0850               	movf	___fttol@f1,w
  1708  04F2  00D9               	movwf	___fttol@lval
  1709  04F3  0851               	movf	___fttol@f1+1,w
  1710  04F4  00DA               	movwf	___fttol@lval+1
  1711  04F5  0852               	movf	___fttol@f1+2,w
  1712  04F6  00DB               	movwf	___fttol@lval+2
  1713  04F7  01DC               	clrf	___fttol@lval+3
  1714  04F8  308E               	movlw	142
  1715  04F9  02DD               	subwf	___fttol@exp1,f
  1716  04FA  1FDD               	btfss	___fttol@exp1,7
  1717  04FB  2D11               	goto	l2431
  1718  04FC  085D               	movf	___fttol@exp1,w
  1719  04FD  3A80               	xorlw	128
  1720  04FE  3E8F               	addlw	143
  1721  04FF  1C03               	btfss	3,0
  1722  0500  2CCF               	goto	l2407
  1723  0501                     l2429:
  1724  0501  3001               	movlw	1
  1725  0502                     u2195:
  1726  0502  1003               	clrc
  1727  0503  0CDC               	rrf	___fttol@lval+3,f
  1728  0504  0CDB               	rrf	___fttol@lval+2,f
  1729  0505  0CDA               	rrf	___fttol@lval+1,f
  1730  0506  0CD9               	rrf	___fttol@lval,f
  1731  0507  3EFF               	addlw	-1
  1732  0508  1D03               	skipz
  1733  0509  2D02               	goto	u2195
  1734  050A  3001               	movlw	1
  1735  050B  00D4               	movwf	??___fttol
  1736  050C  0854               	movf	??___fttol,w
  1737  050D  07DD               	addwf	___fttol@exp1,f
  1738  050E  1903               	btfsc	3,2
  1739  050F  2D24               	goto	l2439
  1740  0510  2D01               	goto	l2429
  1741  0511                     l2431:
  1742  0511  3018               	movlw	24
  1743  0512  025D               	subwf	___fttol@exp1,w
  1744  0513  1803               	btfsc	3,0
  1745  0514  2CCF               	goto	l2407
  1746  0515                     l624:
  1747  0515  085D               	movf	___fttol@exp1,w
  1748  0516  1903               	btfsc	3,2
  1749  0517  2D24               	goto	l2439
  1750  0518  3001               	movlw	1
  1751  0519  00D4               	movwf	??___fttol
  1752  051A                     u2225:
  1753  051A  1003               	clrc
  1754  051B  0DD9               	rlf	___fttol@lval,f
  1755  051C  0DDA               	rlf	___fttol@lval+1,f
  1756  051D  0DDB               	rlf	___fttol@lval+2,f
  1757  051E  0DDC               	rlf	___fttol@lval+3,f
  1758  051F  0BD4               	decfsz	??___fttol,f
  1759  0520  2D1A               	goto	u2225
  1760  0521  3001               	movlw	1
  1761  0522  02DD               	subwf	___fttol@exp1,f
  1762  0523  2D15               	goto	l624
  1763  0524                     l2439:
  1764  0524  0858               	movf	___fttol@sign1,w
  1765  0525  1903               	btfsc	3,2
  1766  0526  2D32               	goto	l2443
  1767  0527  09D9               	comf	___fttol@lval,f
  1768  0528  09DA               	comf	___fttol@lval+1,f
  1769  0529  09DB               	comf	___fttol@lval+2,f
  1770  052A  09DC               	comf	___fttol@lval+3,f
  1771  052B  0AD9               	incf	___fttol@lval,f
  1772  052C  1903               	skipnz
  1773  052D  0ADA               	incf	___fttol@lval+1,f
  1774  052E  1903               	skipnz
  1775  052F  0ADB               	incf	___fttol@lval+2,f
  1776  0530  1903               	skipnz
  1777  0531  0ADC               	incf	___fttol@lval+3,f
  1778  0532                     l2443:
  1779  0532  085C               	movf	___fttol@lval+3,w
  1780  0533  00D3               	movwf	?___fttol+3
  1781  0534  085B               	movf	___fttol@lval+2,w
  1782  0535  00D2               	movwf	?___fttol+2
  1783  0536  085A               	movf	___fttol@lval+1,w
  1784  0537  00D1               	movwf	?___fttol+1
  1785  0538  0859               	movf	___fttol@lval,w
  1786  0539  00D0               	movwf	?___fttol
  1787  053A  0008               	return
  1788  053B                     __end_of___fttol:
  1789                           
  1790                           	psect	text3
  1791  0423                     __ptext3:	
  1792 ;; *************** function _Send_data *****************
  1793 ;; Defined at:
  1794 ;;		line 15 in file "uart.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  Value           2   30[BANK0 ] unsigned int 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  k               2    1[BANK1 ] unsigned int 
  1799 ;;  i               1    3[BANK1 ] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       2       0       0       0
  1810 ;;      Locals:         0       0       3       0       0
  1811 ;;      Temps:          0       0       1       0       0
  1812 ;;      Totals:         0       2       4       0       0
  1813 ;;Total ram usage:        6 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    4
  1816 ;; This function calls:
  1817 ;;		___lwdiv
  1818 ;;		___lwmod
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _Send_data
  1826  0423                     _Send_data:
  1827                           
  1828                           ;uart.c: 15: void Send_data(unsigned int Value);uart.c: 16: {;uart.c: 17:     unsigned c
      +                          har i;;uart.c: 18:     unsigned int k;;uart.c: 20:  commbuffer[0]='{';
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in _Send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1832  0423  307B               	movlw	123
  1833  0424  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0425  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0426  00EA               	movwf	??_Send_data^(0+128)
  1836  0427  086A               	movf	??_Send_data^(0+128),w
  1837  0428  00E0               	movwf	_commbuffer^(0+128)
  1838                           
  1839                           ;uart.c: 21:  commbuffer[1]=Value/100+0x30;
  1840  0429  3064               	movlw	100
  1841  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1842  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1843  042C  00D6               	movwf	___lwdiv@divisor
  1844  042D  3000               	movlw	0
  1845  042E  00D7               	movwf	___lwdiv@divisor+1
  1846  042F  085F               	movf	Send_data@Value+1,w
  1847  0430  00D9               	movwf	___lwdiv@dividend+1
  1848  0431  085E               	movf	Send_data@Value,w
  1849  0432  00D8               	movwf	___lwdiv@dividend
  1850  0433  120A  118A  2738  120A  118A  	fcall	___lwdiv
  1851  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1853  043A  0856               	movf	?___lwdiv,w
  1854  043B  3E30               	addlw	48
  1855  043C  1683               	bsf	3,5	;RP0=1, select bank1
  1856  043D  1303               	bcf	3,6	;RP1=0, select bank1
  1857  043E  00EA               	movwf	??_Send_data^(0+128)
  1858  043F  086A               	movf	??_Send_data^(0+128),w
  1859  0440  00E1               	movwf	(_commbuffer^(0+128)+1)
  1860                           
  1861                           ;uart.c: 22:     commbuffer[2]='.';
  1862  0441  302E               	movlw	46
  1863  0442  00EA               	movwf	??_Send_data^(0+128)
  1864  0443  086A               	movf	??_Send_data^(0+128),w
  1865  0444  00E2               	movwf	(_commbuffer^(0+128)+2)
  1866                           
  1867                           ;uart.c: 23:     k=Value%100;
  1868  0445  3064               	movlw	100
  1869  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0448  00D0               	movwf	___lwmod@divisor
  1872  0449  3000               	movlw	0
  1873  044A  00D1               	movwf	___lwmod@divisor+1
  1874  044B  085F               	movf	Send_data@Value+1,w
  1875  044C  00D3               	movwf	___lwmod@dividend+1
  1876  044D  085E               	movf	Send_data@Value,w
  1877  044E  00D2               	movwf	___lwmod@dividend
  1878  044F  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1879  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0456  0851               	movf	?___lwmod+1,w
  1882  0457  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0458  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0459  00EC               	movwf	(Send_data@k+1)^(0+128)
  1885  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1886  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1887  045C  0850               	movf	?___lwmod,w
  1888  045D  1683               	bsf	3,5	;RP0=1, select bank1
  1889  045E  1303               	bcf	3,6	;RP1=0, select bank1
  1890  045F  00EB               	movwf	Send_data@k^(0+128)
  1891                           
  1892                           ;uart.c: 24:  commbuffer[3]=k/10+0x30;
  1893  0460  300A               	movlw	10
  1894  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0463  00D6               	movwf	___lwdiv@divisor
  1897  0464  3000               	movlw	0
  1898  0465  00D7               	movwf	___lwdiv@divisor+1
  1899  0466  1683               	bsf	3,5	;RP0=1, select bank1
  1900  0467  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0468  086C               	movf	(Send_data@k+1)^(0+128),w
  1902  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1903  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1904  046B  00D9               	movwf	___lwdiv@dividend+1
  1905  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1906  046D  1303               	bcf	3,6	;RP1=0, select bank1
  1907  046E  086B               	movf	Send_data@k^(0+128),w
  1908  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0471  00D8               	movwf	___lwdiv@dividend
  1911  0472  120A  118A  2738  120A  118A  	fcall	___lwdiv
  1912  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0479  0856               	movf	?___lwdiv,w
  1915  047A  3E30               	addlw	48
  1916  047B  1683               	bsf	3,5	;RP0=1, select bank1
  1917  047C  1303               	bcf	3,6	;RP1=0, select bank1
  1918  047D  00EA               	movwf	??_Send_data^(0+128)
  1919  047E  086A               	movf	??_Send_data^(0+128),w
  1920  047F  00E3               	movwf	(_commbuffer^(0+128)+3)
  1921                           
  1922                           ;uart.c: 25:  commbuffer[4]=k%10+0x30;
  1923  0480  300A               	movlw	10
  1924  0481  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0482  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0483  00D0               	movwf	___lwmod@divisor
  1927  0484  3000               	movlw	0
  1928  0485  00D1               	movwf	___lwmod@divisor+1
  1929  0486  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0487  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0488  086C               	movf	(Send_data@k+1)^(0+128),w
  1932  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1933  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1934  048B  00D3               	movwf	___lwmod@dividend+1
  1935  048C  1683               	bsf	3,5	;RP0=1, select bank1
  1936  048D  1303               	bcf	3,6	;RP1=0, select bank1
  1937  048E  086B               	movf	Send_data@k^(0+128),w
  1938  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0491  00D2               	movwf	___lwmod@dividend
  1941  0492  120A  158A  27CC  120A  118A  	fcall	___lwmod
  1942  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0499  0850               	movf	?___lwmod,w
  1945  049A  3E30               	addlw	48
  1946  049B  1683               	bsf	3,5	;RP0=1, select bank1
  1947  049C  1303               	bcf	3,6	;RP1=0, select bank1
  1948  049D  00EA               	movwf	??_Send_data^(0+128)
  1949  049E  086A               	movf	??_Send_data^(0+128),w
  1950  049F  00E4               	movwf	(_commbuffer^(0+128)+4)
  1951                           
  1952                           ;uart.c: 26:  commbuffer[5]=0x7d;
  1953  04A0  307D               	movlw	125
  1954  04A1  00EA               	movwf	??_Send_data^(0+128)
  1955  04A2  086A               	movf	??_Send_data^(0+128),w
  1956  04A3  00E5               	movwf	(_commbuffer^(0+128)+5)
  1957                           
  1958                           ;uart.c: 27:     commbuffer[6]='\r';
  1959  04A4  300D               	movlw	13
  1960  04A5  00EA               	movwf	??_Send_data^(0+128)
  1961  04A6  086A               	movf	??_Send_data^(0+128),w
  1962  04A7  00E6               	movwf	(_commbuffer^(0+128)+6)
  1963                           
  1964                           ;uart.c: 29:      for(i=0;i<7;i++)
  1965  04A8  01ED               	clrf	Send_data@i^(0+128)
  1966  04A9                     l2399:
  1967                           
  1968                           ;uart.c: 30:     {;uart.c: 31:       TXREG=commbuffer[i];
  1969  04A9  086D               	movf	Send_data@i^(0+128),w
  1970  04AA  3EE0               	addlw	(low (_commbuffer| 0))& (0+255)
  1971  04AB  0084               	movwf	4
  1972  04AC  1383               	bcf	3,7	;select IRP bank1
  1973  04AD  0800               	movf	0,w
  1974  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1975  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1976  04B0  0099               	movwf	25	;volatile
  1977  04B1                     l232:	
  1978                           ;uart.c: 32:       while(TRMT==0);
  1979                           
  1980  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  1981  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  1982  04B3  1C98               	btfss	24,1	;volatile
  1983  04B4  2CB1               	goto	l232
  1984                           
  1985                           ;uart.c: 33:     }
  1986  04B5  3001               	movlw	1
  1987  04B6  00EA               	movwf	??_Send_data^(0+128)
  1988  04B7  086A               	movf	??_Send_data^(0+128),w
  1989  04B8  07ED               	addwf	Send_data@i^(0+128),f
  1990  04B9  3007               	movlw	7
  1991  04BA  026D               	subwf	Send_data@i^(0+128),w
  1992  04BB  1803               	btfsc	3,0
  1993  04BC  0008               	return
  1994  04BD  2CA9               	goto	l2399
  1995  04BE                     __end_of_Send_data:
  1996                           
  1997                           	psect	text4
  1998  0FCC                     __ptext4:	
  1999 ;; *************** function ___lwmod *****************
  2000 ;; Defined at:
  2001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  divisor         2   16[BANK0 ] unsigned int 
  2004 ;;  dividend        2   18[BANK0 ] unsigned int 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  counter         1   21[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2   16[BANK0 ] unsigned int 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       4       0       0       0
  2017 ;;      Locals:         0       1       0       0       0
  2018 ;;      Temps:          0       1       0       0       0
  2019 ;;      Totals:         0       6       0       0       0
  2020 ;;Total ram usage:        6 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    3
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;;		_Send_data
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function ___lwmod
  2033  0FCC                     ___lwmod:
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2037  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0FCE  0850               	movf	___lwmod@divisor,w
  2040  0FCF  0451               	iorwf	___lwmod@divisor+1,w
  2041  0FD0  1903               	btfsc	3,2
  2042  0FD1  2FFB               	goto	l2261
  2043  0FD2  01D5               	clrf	___lwmod@counter
  2044  0FD3  0AD5               	incf	___lwmod@counter,f
  2045  0FD4                     l2251:
  2046  0FD4  1BD1               	btfsc	___lwmod@divisor+1,7
  2047  0FD5  2FE2               	goto	l2253
  2048  0FD6  3001               	movlw	1
  2049  0FD7                     u2025:
  2050  0FD7  1003               	clrc
  2051  0FD8  0DD0               	rlf	___lwmod@divisor,f
  2052  0FD9  0DD1               	rlf	___lwmod@divisor+1,f
  2053  0FDA  3EFF               	addlw	-1
  2054  0FDB  1D03               	skipz
  2055  0FDC  2FD7               	goto	u2025
  2056  0FDD  3001               	movlw	1
  2057  0FDE  00D4               	movwf	??___lwmod
  2058  0FDF  0854               	movf	??___lwmod,w
  2059  0FE0  07D5               	addwf	___lwmod@counter,f
  2060  0FE1  2FD4               	goto	l2251
  2061  0FE2                     l2253:
  2062  0FE2  0851               	movf	___lwmod@divisor+1,w
  2063  0FE3  0253               	subwf	___lwmod@dividend+1,w
  2064  0FE4  1D03               	skipz
  2065  0FE5  2FE8               	goto	u2045
  2066  0FE6  0850               	movf	___lwmod@divisor,w
  2067  0FE7  0252               	subwf	___lwmod@dividend,w
  2068  0FE8                     u2045:
  2069  0FE8  1C03               	skipc
  2070  0FE9  2FF0               	goto	l2257
  2071  0FEA  0850               	movf	___lwmod@divisor,w
  2072  0FEB  02D2               	subwf	___lwmod@dividend,f
  2073  0FEC  0851               	movf	___lwmod@divisor+1,w
  2074  0FED  1C03               	skipc
  2075  0FEE  03D3               	decf	___lwmod@dividend+1,f
  2076  0FEF  02D3               	subwf	___lwmod@dividend+1,f
  2077  0FF0                     l2257:
  2078  0FF0  3001               	movlw	1
  2079  0FF1                     u2055:
  2080  0FF1  1003               	clrc
  2081  0FF2  0CD1               	rrf	___lwmod@divisor+1,f
  2082  0FF3  0CD0               	rrf	___lwmod@divisor,f
  2083  0FF4  3EFF               	addlw	-1
  2084  0FF5  1D03               	skipz
  2085  0FF6  2FF1               	goto	u2055
  2086  0FF7  3001               	movlw	1
  2087  0FF8  02D5               	subwf	___lwmod@counter,f
  2088  0FF9  1D03               	btfss	3,2
  2089  0FFA  2FE2               	goto	l2253
  2090  0FFB                     l2261:
  2091  0FFB  0853               	movf	___lwmod@dividend+1,w
  2092  0FFC  00D1               	movwf	?___lwmod+1
  2093  0FFD  0852               	movf	___lwmod@dividend,w
  2094  0FFE  00D0               	movwf	?___lwmod
  2095  0FFF  0008               	return
  2096  1000                     __end_of___lwmod:
  2097                           
  2098                           	psect	text5
  2099  0738                     __ptext5:	
  2100 ;; *************** function ___lwdiv *****************
  2101 ;; Defined at:
  2102 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  divisor         2   22[BANK0 ] unsigned int 
  2105 ;;  dividend        2   24[BANK0 ] unsigned int 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  quotient        2   28[BANK0 ] unsigned int 
  2108 ;;  counter         1   27[BANK0 ] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2   22[BANK0 ] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       4       0       0       0
  2119 ;;      Locals:         0       3       0       0       0
  2120 ;;      Temps:          0       1       0       0       0
  2121 ;;      Totals:         0       8       0       0       0
  2122 ;;Total ram usage:        8 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    3
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;;		_Send_data
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function ___lwdiv
  2135  0738                     ___lwdiv:
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2139  0738  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0739  1303               	bcf	3,6	;RP1=0, select bank0
  2141  073A  01DC               	clrf	___lwdiv@quotient
  2142  073B  01DD               	clrf	___lwdiv@quotient+1
  2143  073C  0856               	movf	___lwdiv@divisor,w
  2144  073D  0457               	iorwf	___lwdiv@divisor+1,w
  2145  073E  1903               	btfsc	3,2
  2146  073F  2F71               	goto	l2239
  2147  0740  01DB               	clrf	___lwdiv@counter
  2148  0741  0ADB               	incf	___lwdiv@counter,f
  2149  0742                     l2227:
  2150  0742  1BD7               	btfsc	___lwdiv@divisor+1,7
  2151  0743  2F50               	goto	l2229
  2152  0744  3001               	movlw	1
  2153  0745                     u1955:
  2154  0745  1003               	clrc
  2155  0746  0DD6               	rlf	___lwdiv@divisor,f
  2156  0747  0DD7               	rlf	___lwdiv@divisor+1,f
  2157  0748  3EFF               	addlw	-1
  2158  0749  1D03               	skipz
  2159  074A  2F45               	goto	u1955
  2160  074B  3001               	movlw	1
  2161  074C  00DA               	movwf	??___lwdiv
  2162  074D  085A               	movf	??___lwdiv,w
  2163  074E  07DB               	addwf	___lwdiv@counter,f
  2164  074F  2F42               	goto	l2227
  2165  0750                     l2229:
  2166  0750  3001               	movlw	1
  2167  0751                     u1975:
  2168  0751  1003               	clrc
  2169  0752  0DDC               	rlf	___lwdiv@quotient,f
  2170  0753  0DDD               	rlf	___lwdiv@quotient+1,f
  2171  0754  3EFF               	addlw	-1
  2172  0755  1D03               	skipz
  2173  0756  2F51               	goto	u1975
  2174  0757  0857               	movf	___lwdiv@divisor+1,w
  2175  0758  0259               	subwf	___lwdiv@dividend+1,w
  2176  0759  1D03               	skipz
  2177  075A  2F5D               	goto	u1985
  2178  075B  0856               	movf	___lwdiv@divisor,w
  2179  075C  0258               	subwf	___lwdiv@dividend,w
  2180  075D                     u1985:
  2181  075D  1C03               	skipc
  2182  075E  2F66               	goto	l2235
  2183  075F  0856               	movf	___lwdiv@divisor,w
  2184  0760  02D8               	subwf	___lwdiv@dividend,f
  2185  0761  0857               	movf	___lwdiv@divisor+1,w
  2186  0762  1C03               	skipc
  2187  0763  03D9               	decf	___lwdiv@dividend+1,f
  2188  0764  02D9               	subwf	___lwdiv@dividend+1,f
  2189  0765  145C               	bsf	___lwdiv@quotient,0
  2190  0766                     l2235:
  2191  0766  3001               	movlw	1
  2192  0767                     u1995:
  2193  0767  1003               	clrc
  2194  0768  0CD7               	rrf	___lwdiv@divisor+1,f
  2195  0769  0CD6               	rrf	___lwdiv@divisor,f
  2196  076A  3EFF               	addlw	-1
  2197  076B  1D03               	skipz
  2198  076C  2F67               	goto	u1995
  2199  076D  3001               	movlw	1
  2200  076E  02DB               	subwf	___lwdiv@counter,f
  2201  076F  1D03               	btfss	3,2
  2202  0770  2F50               	goto	l2229
  2203  0771                     l2239:
  2204  0771  085D               	movf	___lwdiv@quotient+1,w
  2205  0772  00D7               	movwf	?___lwdiv+1
  2206  0773  085C               	movf	___lwdiv@quotient,w
  2207  0774  00D6               	movwf	?___lwdiv
  2208  0775  0008               	return
  2209  0776                     __end_of___lwdiv:
  2210                           
  2211                           	psect	text6
  2212  0665                     __ptext6:	
  2213 ;; *************** function _LCDWriteString *****************
  2214 ;; Defined at:
  2215 ;;		line 210 in file "lcd_hd44780_pic16.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  msg             1    wreg     PTR const unsigned char 
  2218 ;;		 -> STR_5(12), STR_4(12), STR_3(11), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  msg             1   30[BANK0 ] PTR const unsigned char 
  2221 ;;		 -> STR_5(12), STR_4(12), STR_3(11), 
  2222 ;;  cc              1   29[BANK0 ] char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       0       0       0       0
  2233 ;;      Locals:         0       2       0       0       0
  2234 ;;      Temps:          0       1       0       0       0
  2235 ;;      Totals:         0       3       0       0       0
  2236 ;;Total ram usage:        3 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    5
  2239 ;; This function calls:
  2240 ;;		_LCDByte
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _LCDWriteString
  2248  0665                     _LCDWriteString:
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2252                           ;LCDWriteString@msg stored from wreg
  2253  0665  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0666  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0667  00DE               	movwf	LCDWriteString@msg
  2256  0668                     l2337:	
  2257                           ;lcd_hd44780_pic16.c: 210: void LCDWriteString(const char *msg);lcd_hd44780_pic16.c: 211
      +                          : {;lcd_hd44780_pic16.c: 240:  while(*msg!='\0')
  2258                           
  2259                           
  2260                           ;lcd_hd44780_pic16.c: 240:  while(*msg!='\0')
  2261  0668  085E               	movf	LCDWriteString@msg,w
  2262  0669  0084               	movwf	4
  2263  066A  120A  158A  2000  120A  118A  	fcall	stringdir
  2264  066F  3A00               	xorlw	0
  2265  0670  1903               	btfsc	3,2
  2266  0671  0008               	return
  2267                           
  2268                           ;lcd_hd44780_pic16.c: 241:  {;lcd_hd44780_pic16.c: 243:  if(*msg=='%')
  2269  0672  085E               	movf	LCDWriteString@msg,w
  2270  0673  0084               	movwf	4
  2271  0674  120A  158A  2000  120A  118A  	fcall	stringdir
  2272  0679  3A25               	xorlw	37
  2273  067A  1D03               	skipz
  2274  067B  2EA0               	goto	l2333
  2275                           
  2276                           ;lcd_hd44780_pic16.c: 244:  {;lcd_hd44780_pic16.c: 245:   msg++;
  2277  067C  3001               	movlw	1
  2278  067D  00DC               	movwf	??_LCDWriteString
  2279  067E  085C               	movf	??_LCDWriteString,w
  2280  067F  07DE               	addwf	LCDWriteString@msg,f
  2281                           
  2282                           ;lcd_hd44780_pic16.c: 246:   int8_t cc=*msg-'0';
  2283  0680  085E               	movf	LCDWriteString@msg,w
  2284  0681  0084               	movwf	4
  2285  0682  120A  158A  2000  120A  118A  	fcall	stringdir
  2286  0687  3ED0               	addlw	-48
  2287  0688  00DC               	movwf	??_LCDWriteString
  2288  0689  085C               	movf	??_LCDWriteString,w
  2289  068A  00DD               	movwf	LCDWriteString@cc
  2290                           
  2291                           ;lcd_hd44780_pic16.c: 248:   if(cc>=0 && cc<=7)
  2292  068B  1BDD               	btfsc	LCDWriteString@cc,7
  2293  068C  2E96               	goto	l2329
  2294  068D  085D               	movf	LCDWriteString@cc,w
  2295  068E  3A80               	xorlw	128
  2296  068F  3E78               	addlw	-136
  2297  0690  1803               	skipnc
  2298  0691  2E96               	goto	l2329
  2299                           
  2300                           ;lcd_hd44780_pic16.c: 249:   {;lcd_hd44780_pic16.c: 250:    (LCDByte(cc,1));
  2301  0692  01D5               	clrf	LCDByte@isdata
  2302  0693  0AD5               	incf	LCDByte@isdata,f
  2303  0694  085D               	movf	LCDWriteString@cc,w
  2304  0695  2EA9               	goto	L2
  2305  0696                     l2329:	
  2306                           ;lcd_hd44780_pic16.c: 251:   }
  2307                           
  2308                           
  2309                           ;lcd_hd44780_pic16.c: 253:   {;lcd_hd44780_pic16.c: 254:    (LCDByte('%',1));
  2310  0696  01D5               	clrf	LCDByte@isdata
  2311  0697  0AD5               	incf	LCDByte@isdata,f
  2312  0698  3025               	movlw	37
  2313  0699  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  2314                           
  2315                           ;lcd_hd44780_pic16.c: 255:    (LCDByte(*msg,1));
  2316  069E  1283               	bcf	3,5	;RP0=0, select bank0
  2317  069F  1303               	bcf	3,6	;RP1=0, select bank0
  2318  06A0                     l2333:
  2319                           
  2320                           ;lcd_hd44780_pic16.c: 259:  {;lcd_hd44780_pic16.c: 260:   (LCDByte(*msg,1));
  2321  06A0  01D5               	clrf	LCDByte@isdata
  2322  06A1  0AD5               	incf	LCDByte@isdata,f
  2323  06A2  085E               	movf	LCDWriteString@msg,w
  2324  06A3  0084               	movwf	4
  2325  06A4  120A  158A  2000  120A  118A  	fcall	stringdir
  2326  06A9                     L2:
  2327  06A9  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  2328                           
  2329                           ;lcd_hd44780_pic16.c: 262:  msg++;
  2330  06AE  3001               	movlw	1
  2331  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  2332  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  2333  06B1  00DC               	movwf	??_LCDWriteString
  2334  06B2  085C               	movf	??_LCDWriteString,w
  2335  06B3  07DE               	addwf	LCDWriteString@msg,f
  2336  06B4  2E68               	goto	l2337
  2337  06B5                     __end_of_LCDWriteString:
  2338                           
  2339                           	psect	text7
  2340  05A7                     __ptext7:	
  2341 ;; *************** function _LCDInit *****************
  2342 ;; Defined at:
  2343 ;;		line 152 in file "lcd_hd44780_pic16.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  style           1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  style           1   30[BANK0 ] unsigned char 
  2348 ;;  __i             1   31[BANK0 ] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       0       0       0       0
  2359 ;;      Locals:         0       2       0       0       0
  2360 ;;      Temps:          0       2       0       0       0
  2361 ;;      Totals:         0       4       0       0       0
  2362 ;;Total ram usage:        4 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    5
  2365 ;; This function calls:
  2366 ;;		_LCDBusyLoop
  2367 ;;		_LCDByte
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _LCDInit
  2375  05A7                     _LCDInit:
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2379                           ;LCDInit@style stored from wreg
  2380  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2381  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2382  05A9  00DE               	movwf	LCDInit@style
  2383                           
  2384                           ;lcd_hd44780_pic16.c: 152: void LCDInit(uint8_t style);lcd_hd44780_pic16.c: 153: {;lcd_h
      +                          d44780_pic16.c: 168:   _delay((unsigned long)((30)*(16000000/4000.0)));
  2385  05AA  309C               	movlw	156
  2386  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2387  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2388  05AD  00DD               	movwf	??_LCDInit+1
  2389  05AE  30D6               	movlw	214
  2390  05AF  00DC               	movwf	??_LCDInit
  2391  05B0                     u2347:
  2392  05B0  0BDC               	decfsz	??_LCDInit,f
  2393  05B1  2DB0               	goto	u2347
  2394  05B2  0BDD               	decfsz	??_LCDInit+1,f
  2395  05B3  2DB0               	goto	u2347
  2396  05B4  0000               	nop
  2397                           
  2398                           ;lcd_hd44780_pic16.c: 171:  TRISD&=(~(0x0F<<0));
  2399  05B5  30F0               	movlw	240
  2400  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2401  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2402  05B8  00DC               	movwf	??_LCDInit
  2403  05B9  085C               	movf	??_LCDInit,w
  2404  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  2405  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  2406  05BC  0588               	andwf	8,f	;volatile
  2407                           
  2408                           ;lcd_hd44780_pic16.c: 173:         TRISDbits.TRISD6=0;
  2409  05BD  1308               	bcf	8,6	;volatile
  2410                           
  2411                           ;lcd_hd44780_pic16.c: 174:         TRISDbits.TRISD4=0;
  2412  05BE  1208               	bcf	8,4	;volatile
  2413                           
  2414                           ;lcd_hd44780_pic16.c: 175:         TRISDbits.TRISD5=0;
  2415  05BF  1288               	bcf	8,5	;volatile
  2416                           
  2417                           ;lcd_hd44780_pic16.c: 177:  PORTD&=(~(0x0F<<0));
  2418  05C0  30F0               	movlw	240
  2419  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2420  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2421  05C3  00DC               	movwf	??_LCDInit
  2422  05C4  085C               	movf	??_LCDInit,w
  2423  05C5  0588               	andwf	8,f	;volatile
  2424                           
  2425                           ;lcd_hd44780_pic16.c: 179:         (RD6=0);
  2426  05C6  1308               	bcf	8,6	;volatile
  2427                           
  2428                           ;lcd_hd44780_pic16.c: 180:  (RD5=0);
  2429  05C7  1288               	bcf	8,5	;volatile
  2430                           
  2431                           ;lcd_hd44780_pic16.c: 181:  (RD4=0);
  2432  05C8  1208               	bcf	8,4	;volatile
  2433                           
  2434                           ;lcd_hd44780_pic16.c: 184:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2435  05C9  2DCA               	nop2	;2 cycle nop
  2436                           
  2437                           ;lcd_hd44780_pic16.c: 186:  (RD6=1);
  2438  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2439  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2440  05CC  1708               	bsf	8,6	;volatile
  2441                           
  2442                           ;lcd_hd44780_pic16.c: 187:  PORTD|=((0b00000010)<<0);
  2443  05CD  1488               	bsf	8,1	;volatile
  2444                           
  2445                           ;lcd_hd44780_pic16.c: 188:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  2446  05CE  2DCF               	nop2	;2 cycle nop
  2447  05CF  2DD0               	nop2	;2 cycle nop
  2448                           
  2449                           ;lcd_hd44780_pic16.c: 189:  (RD6=0);
  2450  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2451  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2452  05D2  1308               	bcf	8,6	;volatile
  2453                           
  2454                           ;lcd_hd44780_pic16.c: 190:  _delay((unsigned long)((1)*(16000000/4000000.0)));
  2455  05D3  2DD4               	nop2	;2 cycle nop
  2456  05D4  2DD5               	nop2	;2 cycle nop
  2457                           
  2458                           ;lcd_hd44780_pic16.c: 193:  LCDBusyLoop();
  2459  05D5  120A  118A  2610  120A  118A  	fcall	_LCDBusyLoop
  2460                           
  2461                           ;lcd_hd44780_pic16.c: 198:  (LCDByte(0b00101000,0));
  2462  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2463  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2464  05DC  01D5               	clrf	LCDByte@isdata
  2465  05DD  3028               	movlw	40
  2466  05DE  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  2467                           
  2468                           ;lcd_hd44780_pic16.c: 199:         (LCDByte(0b00001100|style,0));
  2469  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2470  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2471  05E5  01D5               	clrf	LCDByte@isdata
  2472  05E6  085E               	movf	LCDInit@style,w
  2473  05E7  380C               	iorlw	12
  2474  05E8  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  2475                           
  2476                           ;lcd_hd44780_pic16.c: 202:         (LCDByte(0b01000000,0));
  2477  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2478  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2479  05EF  01D5               	clrf	LCDByte@isdata
  2480  05F0  3040               	movlw	64
  2481  05F1  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  2482                           
  2483                           ;lcd_hd44780_pic16.c: 204:  uint8_t __i;;lcd_hd44780_pic16.c: 205:  for(__i=0;__i<sizeof
      +                          (__cgram);__i++)
  2484  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  2485  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  2486  05F8  01DF               	clrf	LCDInit@__i
  2487  05F9                     l2309:
  2488                           
  2489                           ;lcd_hd44780_pic16.c: 206:   (LCDByte(__cgram[__i],1));
  2490  05F9  01D5               	clrf	LCDByte@isdata
  2491  05FA  0AD5               	incf	LCDByte@isdata,f
  2492  05FB  085F               	movf	LCDInit@__i,w
  2493  05FC  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  2494  05FD  0084               	movwf	4
  2495  05FE  1383               	bcf	3,7	;select IRP bank1
  2496  05FF  0800               	movf	0,w
  2497  0600  120A  118A  26B5  120A  118A  	fcall	_LCDByte
  2498  0605  3001               	movlw	1
  2499  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0608  00DC               	movwf	??_LCDInit
  2502  0609  085C               	movf	??_LCDInit,w
  2503  060A  07DF               	addwf	LCDInit@__i,f
  2504  060B  3040               	movlw	64
  2505  060C  025F               	subwf	LCDInit@__i,w
  2506  060D  1803               	btfsc	3,0
  2507  060E  0008               	return
  2508  060F  2DF9               	goto	l2309
  2509  0610                     __end_of_LCDInit:
  2510                           
  2511                           	psect	text8
  2512  0F9E                     __ptext8:	
  2513 ;; *************** function _LCDGotoXY *****************
  2514 ;; Defined at:
  2515 ;;		line 311 in file "lcd_hd44780_pic16.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  x               1    wreg     unsigned char 
  2518 ;;  y               1   28[BANK0 ] unsigned char 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  x               1   31[BANK0 ] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2530 ;;      Params:         0       1       0       0       0
  2531 ;;      Locals:         0       1       0       0       0
  2532 ;;      Temps:          0       2       0       0       0
  2533 ;;      Totals:         0       4       0       0       0
  2534 ;;Total ram usage:        4 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    5
  2537 ;; This function calls:
  2538 ;;		_LCDByte
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _LCDGotoXY
  2546  0F9E                     _LCDGotoXY:
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2550                           ;LCDGotoXY@x stored from wreg
  2551  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0FA0  00DF               	movwf	LCDGotoXY@x
  2554                           
  2555                           ;lcd_hd44780_pic16.c: 311: void LCDGotoXY(uint8_t x,uint8_t y);lcd_hd44780_pic16.c: 312:
      +                           {;lcd_hd44780_pic16.c: 313:   if(x>=20) return;
  2556  0FA1  3014               	movlw	20
  2557  0FA2  025F               	subwf	LCDGotoXY@x,w
  2558  0FA3  1803               	btfsc	3,0
  2559  0FA4  0008               	return
  2560  0FA5  2FAF               	goto	l2349
  2561  0FA6                     l67:	
  2562                           ;lcd_hd44780_pic16.c: 321:   case 1:
  2563                           
  2564                           
  2565                           ;lcd_hd44780_pic16.c: 322:    x|=0b01000000;
  2566  0FA6  175F               	bsf	LCDGotoXY@x,6
  2567                           
  2568                           ;lcd_hd44780_pic16.c: 323:    break;
  2569  0FA7  2FC5               	goto	l66
  2570  0FA8                     l2343:
  2571                           
  2572                           ;lcd_hd44780_pic16.c: 325:    x+=0x14;
  2573  0FA8  3014               	movlw	20
  2574  0FA9  2FAB               	goto	L3
  2575  0FAA                     l2345:	
  2576                           ;lcd_hd44780_pic16.c: 326:    break;
  2577                           
  2578                           
  2579                           ;lcd_hd44780_pic16.c: 328:    x+=0x54;
  2580  0FAA  3054               	movlw	84
  2581  0FAB                     L3:
  2582  0FAB  00DD               	movwf	??_LCDGotoXY
  2583  0FAC  085D               	movf	??_LCDGotoXY,w
  2584  0FAD  07DF               	addwf	LCDGotoXY@x,f
  2585                           
  2586                           ;lcd_hd44780_pic16.c: 329:    break;
  2587  0FAE  2FC5               	goto	l66
  2588  0FAF                     l2349:
  2589  0FAF  085C               	movf	LCDGotoXY@y,w
  2590  0FB0  00DD               	movwf	??_LCDGotoXY
  2591  0FB1  01DE               	clrf	??_LCDGotoXY+1
  2592                           
  2593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2594                           ; Switch size 1, requested type "simple"
  2595                           ; Number of cases is 1, Range of values is 0 to 0
  2596                           ; switch strategies available:
  2597                           ; Name         Instructions Cycles
  2598                           ; simple_byte            4     3 (average)
  2599                           ; direct_byte           11     8 (fixed)
  2600                           ; jumptable            260     6 (fixed)
  2601                           ;	Chosen strategy is simple_byte
  2602  0FB2  085E               	movf	??_LCDGotoXY+1,w
  2603  0FB3  3A00               	xorlw	0	; case 0
  2604  0FB4  1903               	skipnz
  2605  0FB5  2FB7               	goto	l2603
  2606  0FB6  2FC5               	goto	l66
  2607  0FB7                     l2603:
  2608                           
  2609                           ; Switch size 1, requested type "simple"
  2610                           ; Number of cases is 4, Range of values is 0 to 3
  2611                           ; switch strategies available:
  2612                           ; Name         Instructions Cycles
  2613                           ; simple_byte           13     7 (average)
  2614                           ; direct_byte           20     8 (fixed)
  2615                           ; jumptable            260     6 (fixed)
  2616                           ;	Chosen strategy is simple_byte
  2617  0FB7  085D               	movf	??_LCDGotoXY,w
  2618  0FB8  3A00               	xorlw	0	; case 0
  2619  0FB9  1903               	skipnz
  2620  0FBA  2FC5               	goto	l66
  2621  0FBB  3A01               	xorlw	1	; case 1
  2622  0FBC  1903               	skipnz
  2623  0FBD  2FA6               	goto	l67
  2624  0FBE  3A03               	xorlw	3	; case 2
  2625  0FBF  1903               	skipnz
  2626  0FC0  2FA8               	goto	l2343
  2627  0FC1  3A01               	xorlw	1	; case 3
  2628  0FC2  1903               	skipnz
  2629  0FC3  2FAA               	goto	l2345
  2630  0FC4  2FC5               	goto	l66
  2631  0FC5                     l66:
  2632                           
  2633                           ;lcd_hd44780_pic16.c: 352:  x|=0b10000000;
  2634  0FC5  17DF               	bsf	LCDGotoXY@x,7
  2635                           
  2636                           ;lcd_hd44780_pic16.c: 353:    (LCDByte(x,0));
  2637  0FC6  01D5               	clrf	LCDByte@isdata
  2638  0FC7  085F               	movf	LCDGotoXY@x,w
  2639  0FC8  120A  118A  26B5   	fcall	_LCDByte
  2640  0FCB  0008               	return
  2641  0FCC                     __end_of_LCDGotoXY:
  2642                           
  2643                           	psect	text9
  2644  06B5                     __ptext9:	
  2645 ;; *************** function _LCDByte *****************
  2646 ;; Defined at:
  2647 ;;		line 39 in file "lcd_hd44780_pic16.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  c               1    wreg     unsigned char 
  2650 ;;  isdata          1   21[BANK0 ] unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  c               1   26[BANK0 ] unsigned char 
  2653 ;;  temp            1   27[BANK0 ] unsigned char 
  2654 ;;  ln              1   25[BANK0 ] unsigned char 
  2655 ;;  hn              1   24[BANK0 ] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2665 ;;      Params:         0       1       0       0       0
  2666 ;;      Locals:         0       4       0       0       0
  2667 ;;      Temps:          0       2       0       0       0
  2668 ;;      Totals:         0       7       0       0       0
  2669 ;;Total ram usage:        7 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    4
  2672 ;; This function calls:
  2673 ;;		_LCDBusyLoop
  2674 ;; This function is called by:
  2675 ;;		_LCDInit
  2676 ;;		_LCDWriteString
  2677 ;;		_LCDGotoXY
  2678 ;;		_main
  2679 ;;		_LCDWriteInt
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function _LCDByte
  2685  06B5                     _LCDByte:
  2686                           
  2687                           ;incstack = 0
  2688                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2689                           ;LCDByte@c stored from wreg
  2690  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  2691  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  2692  06B7  00DA               	movwf	LCDByte@c
  2693                           
  2694                           ;lcd_hd44780_pic16.c: 39: void LCDByte(uint8_t c,uint8_t isdata);lcd_hd44780_pic16.c: 40
      +                          : {;lcd_hd44780_pic16.c: 48: uint8_t hn,ln;;lcd_hd44780_pic16.c: 49: uint8_t temp;;lcd_h
      +                          d44780_pic16.c: 51: hn=c>>4;
  2695  06B8  085A               	movf	LCDByte@c,w
  2696  06B9  00D6               	movwf	??_LCDByte
  2697  06BA  3004               	movlw	4
  2698  06BB                     u1925:
  2699  06BB  1003               	clrc
  2700  06BC  0CD6               	rrf	??_LCDByte,f
  2701  06BD  3EFF               	addlw	-1
  2702  06BE  1D03               	skipz
  2703  06BF  2EBB               	goto	u1925
  2704  06C0  0856               	movf	??_LCDByte,w
  2705  06C1  00D7               	movwf	??_LCDByte+1
  2706  06C2  0857               	movf	??_LCDByte+1,w
  2707  06C3  00D8               	movwf	LCDByte@hn
  2708                           
  2709                           ;lcd_hd44780_pic16.c: 52: ln=(c & 0x0F);
  2710  06C4  085A               	movf	LCDByte@c,w
  2711  06C5  390F               	andlw	15
  2712  06C6  00D6               	movwf	??_LCDByte
  2713  06C7  0856               	movf	??_LCDByte,w
  2714  06C8  00D9               	movwf	LCDByte@ln
  2715                           
  2716                           ;lcd_hd44780_pic16.c: 54: if(isdata==0)
  2717  06C9  0855               	movf	LCDByte@isdata,w
  2718  06CA  1D03               	btfss	3,2
  2719  06CB  2ECE               	goto	l21
  2720                           
  2721                           ;lcd_hd44780_pic16.c: 55:  (RD4=0);
  2722  06CC  1208               	bcf	8,4	;volatile
  2723  06CD  2ECF               	goto	l22
  2724  06CE                     l21:	
  2725                           ;lcd_hd44780_pic16.c: 56: else
  2726                           
  2727                           
  2728                           ;lcd_hd44780_pic16.c: 57:  (RD4=1);
  2729  06CE  1608               	bsf	8,4	;volatile
  2730  06CF                     l22:
  2731                           
  2732                           ;lcd_hd44780_pic16.c: 59: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2733  06CF  2ED0               	nop2	;2 cycle nop
  2734                           
  2735                           ;lcd_hd44780_pic16.c: 61: (RD6=1);
  2736  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  2737  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  2738  06D2  1708               	bsf	8,6	;volatile
  2739                           
  2740                           ;lcd_hd44780_pic16.c: 65: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  2741  06D3  0808               	movf	8,w	;volatile
  2742  06D4  39F0               	andlw	240
  2743  06D5  0458               	iorwf	LCDByte@hn,w
  2744  06D6  00D6               	movwf	??_LCDByte
  2745  06D7  0856               	movf	??_LCDByte,w
  2746  06D8  00DB               	movwf	LCDByte@temp
  2747                           
  2748                           ;lcd_hd44780_pic16.c: 66: PORTD=temp;
  2749  06D9  085B               	movf	LCDByte@temp,w
  2750  06DA  0088               	movwf	8	;volatile
  2751                           
  2752                           ;lcd_hd44780_pic16.c: 68: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2753  06DB  2EDC               	nop2	;2 cycle nop
  2754  06DC  2EDD               	nop2	;2 cycle nop
  2755                           
  2756                           ;lcd_hd44780_pic16.c: 72: (RD6=0);
  2757  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2758  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2759  06DF  1308               	bcf	8,6	;volatile
  2760                           
  2761                           ;lcd_hd44780_pic16.c: 74: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2762  06E0  2EE1               	nop2	;2 cycle nop
  2763  06E1  2EE2               	nop2	;2 cycle nop
  2764                           
  2765                           ;lcd_hd44780_pic16.c: 77: (RD6=1);
  2766  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2767  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2768  06E4  1708               	bsf	8,6	;volatile
  2769                           
  2770                           ;lcd_hd44780_pic16.c: 79: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  2771  06E5  0808               	movf	8,w	;volatile
  2772  06E6  39F0               	andlw	240
  2773  06E7  0459               	iorwf	LCDByte@ln,w
  2774  06E8  00D6               	movwf	??_LCDByte
  2775  06E9  0856               	movf	??_LCDByte,w
  2776  06EA  00DB               	movwf	LCDByte@temp
  2777                           
  2778                           ;lcd_hd44780_pic16.c: 81: PORTD=temp;
  2779  06EB  085B               	movf	LCDByte@temp,w
  2780  06EC  0088               	movwf	8	;volatile
  2781                           
  2782                           ;lcd_hd44780_pic16.c: 83: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2783  06ED  2EEE               	nop2	;2 cycle nop
  2784  06EE  2EEF               	nop2	;2 cycle nop
  2785                           
  2786                           ;lcd_hd44780_pic16.c: 87: (RD6=0);
  2787  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2788  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  2789  06F1  1308               	bcf	8,6	;volatile
  2790                           
  2791                           ;lcd_hd44780_pic16.c: 89: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2792  06F2  2EF3               	nop2	;2 cycle nop
  2793  06F3  2EF4               	nop2	;2 cycle nop
  2794                           
  2795                           ;lcd_hd44780_pic16.c: 91: LCDBusyLoop();
  2796  06F4  120A  118A  2610   	fcall	_LCDBusyLoop
  2797  06F7  0008               	return
  2798  06F8                     __end_of_LCDByte:
  2799                           
  2800                           	psect	text10
  2801  0610                     __ptext10:	
  2802 ;; *************** function _LCDBusyLoop *****************
  2803 ;; Defined at:
  2804 ;;		line 94 in file "lcd_hd44780_pic16.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  status          1   20[BANK0 ] unsigned char 
  2809 ;;  temp            1   19[BANK0 ] unsigned char 
  2810 ;;  busy            1   18[BANK0 ] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         0       3       0       0       0
  2822 ;;      Temps:          0       2       0       0       0
  2823 ;;      Totals:         0       5       0       0       0
  2824 ;;Total ram usage:        5 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    3
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_LCDByte
  2831 ;;		_LCDInit
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _LCDBusyLoop
  2837  0610                     _LCDBusyLoop:
  2838                           
  2839                           ;lcd_hd44780_pic16.c: 101:  TRISD|=(0x0f<<0);
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2843  0610  300F               	movlw	15
  2844  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0613  00D0               	movwf	??_LCDBusyLoop
  2847  0614  0850               	movf	??_LCDBusyLoop,w
  2848  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0617  0488               	iorwf	8,f	;volatile
  2851                           
  2852                           ;lcd_hd44780_pic16.c: 104:  (RD5=1);
  2853  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2855  061A  1688               	bsf	8,5	;volatile
  2856                           
  2857                           ;lcd_hd44780_pic16.c: 105:  (RD4=0);
  2858  061B  1208               	bcf	8,4	;volatile
  2859                           
  2860                           ;lcd_hd44780_pic16.c: 109:  _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2861  061C  2E1D               	nop2	;2 cycle nop
  2862  061D                     l2151:
  2863                           
  2864                           ;lcd_hd44780_pic16.c: 113:  {;lcd_hd44780_pic16.c: 115:   (RD6=1);
  2865  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2866  061E  1303               	bcf	3,6	;RP1=0, select bank0
  2867  061F  1708               	bsf	8,6	;volatile
  2868                           
  2869                           ;lcd_hd44780_pic16.c: 118:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2870  0620  2E21               	nop2	;2 cycle nop
  2871                           
  2872                           ;lcd_hd44780_pic16.c: 120:   status=(PORTD>>0);
  2873  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0623  0808               	movf	8,w	;volatile
  2876  0624  00D0               	movwf	??_LCDBusyLoop
  2877  0625  0850               	movf	??_LCDBusyLoop,w
  2878  0626  00D4               	movwf	LCDBusyLoop@status
  2879                           
  2880                           ;lcd_hd44780_pic16.c: 121:   status=status<<4;
  2881  0627  0854               	movf	LCDBusyLoop@status,w
  2882  0628  00D0               	movwf	??_LCDBusyLoop
  2883  0629  3003               	movlw	3
  2884  062A                     u1905:
  2885  062A  1003               	clrc
  2886  062B  0DD0               	rlf	??_LCDBusyLoop,f
  2887  062C  3EFF               	addlw	-1
  2888  062D  1D03               	skipz
  2889  062E  2E2A               	goto	u1905
  2890  062F  1003               	clrc
  2891  0630  0D50               	rlf	??_LCDBusyLoop,w
  2892  0631  00D1               	movwf	??_LCDBusyLoop+1
  2893  0632  0851               	movf	??_LCDBusyLoop+1,w
  2894  0633  00D4               	movwf	LCDBusyLoop@status
  2895                           
  2896                           ;lcd_hd44780_pic16.c: 123:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2897  0634  2E35               	nop2	;2 cycle nop
  2898                           
  2899                           ;lcd_hd44780_pic16.c: 126:   (RD6=0);
  2900  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0637  1308               	bcf	8,6	;volatile
  2903                           
  2904                           ;lcd_hd44780_pic16.c: 127:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2905  0638  2E39               	nop2	;2 cycle nop
  2906  0639  2E3A               	nop2	;2 cycle nop
  2907                           
  2908                           ;lcd_hd44780_pic16.c: 129:   (RD6=1);
  2909  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2910  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2911  063C  1708               	bsf	8,6	;volatile
  2912                           
  2913                           ;lcd_hd44780_pic16.c: 130:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2914  063D  2E3E               	nop2	;2 cycle nop
  2915                           
  2916                           ;lcd_hd44780_pic16.c: 132:   temp=(PORTD>>0);
  2917  063E  1283               	bcf	3,5	;RP0=0, select bank0
  2918  063F  1303               	bcf	3,6	;RP1=0, select bank0
  2919  0640  0808               	movf	8,w	;volatile
  2920  0641  00D0               	movwf	??_LCDBusyLoop
  2921  0642  0850               	movf	??_LCDBusyLoop,w
  2922  0643  00D3               	movwf	LCDBusyLoop@temp
  2923                           
  2924                           ;lcd_hd44780_pic16.c: 133:   temp&=0x0F;
  2925  0644  300F               	movlw	15
  2926  0645  00D0               	movwf	??_LCDBusyLoop
  2927  0646  0850               	movf	??_LCDBusyLoop,w
  2928  0647  05D3               	andwf	LCDBusyLoop@temp,f
  2929                           
  2930                           ;lcd_hd44780_pic16.c: 135:   status=status|temp;
  2931  0648  0854               	movf	LCDBusyLoop@status,w
  2932  0649  0453               	iorwf	LCDBusyLoop@temp,w
  2933  064A  00D0               	movwf	??_LCDBusyLoop
  2934  064B  0850               	movf	??_LCDBusyLoop,w
  2935  064C  00D4               	movwf	LCDBusyLoop@status
  2936                           
  2937                           ;lcd_hd44780_pic16.c: 137:   busy=status & 0b10000000;
  2938  064D  0854               	movf	LCDBusyLoop@status,w
  2939  064E  3980               	andlw	128
  2940  064F  00D0               	movwf	??_LCDBusyLoop
  2941  0650  0850               	movf	??_LCDBusyLoop,w
  2942  0651  00D2               	movwf	LCDBusyLoop@busy
  2943                           
  2944                           ;lcd_hd44780_pic16.c: 139:   _delay((unsigned long)((0.5)*(16000000/4000000.0)));
  2945  0652  2E53               	nop2	;2 cycle nop
  2946                           
  2947                           ;lcd_hd44780_pic16.c: 141:                 (RD6=0);
  2948  0653  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0654  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0655  1308               	bcf	8,6	;volatile
  2951                           
  2952                           ;lcd_hd44780_pic16.c: 142:   _delay((unsigned long)((1)*(16000000/4000000.0)));
  2953  0656  2E57               	nop2	;2 cycle nop
  2954  0657  2E58               	nop2	;2 cycle nop
  2955                           
  2956                           ;lcd_hd44780_pic16.c: 143:  }while(busy);
  2957  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2959  065A  0852               	movf	LCDBusyLoop@busy,w
  2960  065B  1D03               	btfss	3,2
  2961  065C  2E1D               	goto	l2151
  2962                           
  2963                           ;lcd_hd44780_pic16.c: 145:  (RD5=0);
  2964  065D  1288               	bcf	8,5	;volatile
  2965                           
  2966                           ;lcd_hd44780_pic16.c: 148:  TRISD&=(~(0x0F<<0));
  2967  065E  30F0               	movlw	240
  2968  065F  00D0               	movwf	??_LCDBusyLoop
  2969  0660  0850               	movf	??_LCDBusyLoop,w
  2970  0661  1683               	bsf	3,5	;RP0=1, select bank1
  2971  0662  1303               	bcf	3,6	;RP1=0, select bank1
  2972  0663  0588               	andwf	8,f	;volatile
  2973  0664  0008               	return
  2974  0665                     __end_of_LCDBusyLoop:
  2975                           
  2976                           	psect	text11
  2977  0F6B                     __ptext11:	
  2978 ;; *************** function _Init_uart *****************
  2979 ;; Defined at:
  2980 ;;		line 8 in file "uart.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0
  2997 ;;      Totals:         0       0       0       0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    3
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _Init_uart
  3010  0F6B                     _Init_uart:
  3011                           
  3012                           ;uart.c: 10:     TXSTA=0x20;
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _Init_uart: [wreg]
  3016  0F6B  3020               	movlw	32
  3017  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  3018  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  3019  0F6E  0098               	movwf	24	;volatile
  3020                           
  3021                           ;uart.c: 11:     RCSTA=0x90;
  3022  0F6F  3090               	movlw	144
  3023  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0F72  0098               	movwf	24	;volatile
  3026                           
  3027                           ;uart.c: 12:     SPBRG=25;
  3028  0F73  3019               	movlw	25
  3029  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  3031  0F76  0099               	movwf	25	;volatile
  3032                           
  3033                           ;uart.c: 13:     RCIE=1;
  3034  0F77  168C               	bsf	12,5	;volatile
  3035  0F78  0008               	return
  3036  0F79                     __end_of_Init_uart:
  3037                           
  3038                           	psect	text12
  3039  0F62                     __ptext12:	
  3040 ;; *************** function _InitADC *****************
  3041 ;; Defined at:
  3042 ;;		line 4 in file "adc.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    3
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _InitADC
  3072  0F62                     _InitADC:
  3073                           
  3074                           ;adc.c: 6:     ADCON1 = 0b11000100;
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _InitADC: [wreg]
  3078  0F62  30C4               	movlw	196
  3079  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  3081  0F65  009F               	movwf	31	;volatile
  3082                           
  3083                           ;adc.c: 7:     ADCON0 =0x80;
  3084  0F66  3080               	movlw	128
  3085  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0F69  009F               	movwf	31	;volatile
  3088  0F6A  0008               	return
  3089  0F6B                     __end_of_InitADC:
  3090                           
  3091                           	psect	text13
  3092  0269                     __ptext13:	
  3093 ;; *************** function _isr *****************
  3094 ;; Defined at:
  3095 ;;		line 55 in file "main.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  ch              1   15[BANK0 ] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3109 ;;      Params:         0       0       0       0       0
  3110 ;;      Locals:         0       1       0       0       0
  3111 ;;      Temps:          0       5       0       0       0
  3112 ;;      Totals:         0       6       0       0       0
  3113 ;;Total ram usage:        6 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    2
  3116 ;; This function calls:
  3117 ;;		_ReadAdc
  3118 ;;		___ftmul
  3119 ;;		___lwtoft
  3120 ;;		_strncmp
  3121 ;; This function is called by:
  3122 ;;		Interrupt level 1
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _isr
  3128  0269                     _isr:
  3129                           
  3130                           ;main.c: 57:     char ch;;main.c: 58:   if (TMR2IE && TMR2IF)
  3131  0269  1683               	bsf	3,5	;RP0=1, select bank1
  3132  026A  1303               	bcf	3,6	;RP1=0, select bank1
  3133  026B  1C8C               	btfss	12,1	;volatile
  3134  026C  2AEC               	goto	i1l1909
  3135  026D  1283               	bcf	3,5	;RP0=0, select bank0
  3136  026E  1303               	bcf	3,6	;RP1=0, select bank0
  3137  026F  1C8C               	btfss	12,1	;volatile
  3138  0270  2AEC               	goto	i1l1909
  3139                           
  3140                           ;main.c: 59:    {;main.c: 60:   TMR2IF=0;
  3141  0271  108C               	bcf	12,1	;volatile
  3142                           
  3143                           ;main.c: 61:     count++;
  3144  0272  3001               	movlw	1
  3145  0273  07B2               	addwf	_count,f
  3146  0274  1803               	skipnc
  3147  0275  0AB3               	incf	_count+1,f
  3148  0276  3000               	movlw	0
  3149  0277  07B3               	addwf	_count+1,f
  3150                           
  3151                           ;main.c: 62:        if(count==20)
  3152  0278  3014               	movlw	20
  3153  0279  0632               	xorwf	_count,w
  3154  027A  0433               	iorwf	_count+1,w
  3155  027B  1D03               	btfss	3,2
  3156  027C  2AEC               	goto	i1l1909
  3157                           
  3158                           ;main.c: 63:        {;main.c: 64:          count=0;
  3159  027D  01B2               	clrf	_count
  3160  027E  01B3               	clrf	_count+1
  3161                           
  3162                           ;main.c: 65:          count1++;
  3163  027F  3001               	movlw	1
  3164  0280  07B0               	addwf	_count1,f
  3165  0281  1803               	skipnc
  3166  0282  0AB1               	incf	_count1+1,f
  3167  0283  3000               	movlw	0
  3168  0284  07B1               	addwf	_count1+1,f
  3169                           
  3170                           ;main.c: 66:         if(do_dienap)
  3171  0285  0839               	movf	_do_dienap,w
  3172  0286  1903               	btfsc	3,2
  3173  0287  2ABB               	goto	i1l1903
  3174                           
  3175                           ;main.c: 67:         {;main.c: 68:           Dienap=(float)(ReadAdc(0));
  3176  0288  3000               	movlw	0
  3177  0289  120A  118A  27B3  120A  118A  	fcall	_ReadAdc
  3178  028E  0871               	movf	?_ReadAdc+1,w
  3179  028F  00F9               	movwf	___lwtoft@c+1
  3180  0290  0870               	movf	?_ReadAdc,w
  3181  0291  00F8               	movwf	___lwtoft@c
  3182  0292  120A  158A  278A  120A  118A  	fcall	___lwtoft
  3183  0297  0878               	movf	?___lwtoft,w
  3184  0298  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0299  1303               	bcf	3,6	;RP1=0, select bank0
  3186  029A  00A8               	movwf	_Dienap
  3187  029B  0879               	movf	?___lwtoft+1,w
  3188  029C  00A9               	movwf	_Dienap+1
  3189  029D  087A               	movf	?___lwtoft+2,w
  3190  029E  00AA               	movwf	_Dienap+2
  3191                           
  3192                           ;main.c: 69:           Dienap=Dienap*0.489;
  3193  029F  305E               	movlw	94
  3194  02A0  00F8               	movwf	___ftmul@f1
  3195  02A1  30FA               	movlw	250
  3196  02A2  00F9               	movwf	___ftmul@f1+1
  3197  02A3  303E               	movlw	62
  3198  02A4  00FA               	movwf	___ftmul@f1+2
  3199  02A5  0828               	movf	_Dienap,w
  3200  02A6  00FB               	movwf	___ftmul@f2
  3201  02A7  0829               	movf	_Dienap+1,w
  3202  02A8  00FC               	movwf	___ftmul@f2+1
  3203  02A9  082A               	movf	_Dienap+2,w
  3204  02AA  00FD               	movwf	___ftmul@f2+2
  3205  02AB  120A  118A  2352  120A  118A  	fcall	___ftmul
  3206  02B0  0878               	movf	?___ftmul,w
  3207  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3208  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  3209  02B3  00A8               	movwf	_Dienap
  3210  02B4  0879               	movf	?___ftmul+1,w
  3211  02B5  00A9               	movwf	_Dienap+1
  3212  02B6  087A               	movf	?___ftmul+2,w
  3213  02B7  00AA               	movwf	_Dienap+2
  3214                           
  3215                           ;main.c: 70:           adc_ok=1;
  3216  02B8  01B8               	clrf	_adc_ok
  3217  02B9  0AB8               	incf	_adc_ok,f
  3218                           
  3219                           ;main.c: 71:         }
  3220  02BA  2AEB               	goto	i1l1907
  3221  02BB                     i1l1903:
  3222                           
  3223                           ;main.c: 73:          {;main.c: 74:          Dong = (float)(ReadAdc(1));
  3224  02BB  3001               	movlw	1
  3225  02BC  120A  118A  27B3  120A  118A  	fcall	_ReadAdc
  3226  02C1  0871               	movf	?_ReadAdc+1,w
  3227  02C2  00F9               	movwf	___lwtoft@c+1
  3228  02C3  0870               	movf	?_ReadAdc,w
  3229  02C4  00F8               	movwf	___lwtoft@c
  3230  02C5  120A  158A  278A  120A  118A  	fcall	___lwtoft
  3231  02CA  0878               	movf	?___lwtoft,w
  3232  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3233  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  3234  02CD  00AB               	movwf	_Dong
  3235  02CE  0879               	movf	?___lwtoft+1,w
  3236  02CF  00AC               	movwf	_Dong+1
  3237  02D0  087A               	movf	?___lwtoft+2,w
  3238  02D1  00AD               	movwf	_Dong+2
  3239                           
  3240                           ;main.c: 75:          Dong=Dong*0.0978;
  3241  02D2  304B               	movlw	75
  3242  02D3  00F8               	movwf	___ftmul@f1
  3243  02D4  30C8               	movlw	200
  3244  02D5  00F9               	movwf	___ftmul@f1+1
  3245  02D6  303D               	movlw	61
  3246  02D7  00FA               	movwf	___ftmul@f1+2
  3247  02D8  082B               	movf	_Dong,w
  3248  02D9  00FB               	movwf	___ftmul@f2
  3249  02DA  082C               	movf	_Dong+1,w
  3250  02DB  00FC               	movwf	___ftmul@f2+1
  3251  02DC  082D               	movf	_Dong+2,w
  3252  02DD  00FD               	movwf	___ftmul@f2+2
  3253  02DE  120A  118A  2352  120A  118A  	fcall	___ftmul
  3254  02E3  0878               	movf	?___ftmul,w
  3255  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3256  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3257  02E6  00AB               	movwf	_Dong
  3258  02E7  0879               	movf	?___ftmul+1,w
  3259  02E8  00AC               	movwf	_Dong+1
  3260  02E9  087A               	movf	?___ftmul+2,w
  3261  02EA  00AD               	movwf	_Dong+2
  3262  02EB                     i1l1907:
  3263                           
  3264                           ;main.c: 77:          do_dienap=~do_dienap;
  3265  02EB  09B9               	comf	_do_dienap,f
  3266  02EC                     i1l1909:
  3267                           
  3268                           ;main.c: 80:   if (RCIE && RCIF)
  3269  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  3270  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  3271  02EE  1E8C               	btfss	12,5	;volatile
  3272  02EF  2B45               	goto	i1l166
  3273  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  3274  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  3275  02F2  1E8C               	btfss	12,5	;volatile
  3276  02F3  2B45               	goto	i1l166
  3277                           
  3278                           ;main.c: 81:    {;main.c: 82:        ch=RCREG;
  3279  02F4  081A               	movf	26,w	;volatile
  3280  02F5  00CA               	movwf	??_isr
  3281  02F6  084A               	movf	??_isr,w
  3282  02F7  00CF               	movwf	isr@ch
  3283                           
  3284                           ;main.c: 83:        if(check_sang)
  3285  02F8  0836               	movf	_check_sang,w
  3286  02F9  1903               	btfsc	3,2
  3287  02FA  2B07               	goto	i1l1921
  3288                           
  3289                           ;main.c: 84:         in_buffer[in_count++]=ch;
  3290  02FB  084F               	movf	isr@ch,w
  3291  02FC  00CA               	movwf	??_isr
  3292  02FD  0837               	movf	_in_count,w
  3293  02FE  3E3A               	addlw	(low (_in_buffer| 0))& (0+255)
  3294  02FF  0084               	movwf	4
  3295  0300  084A               	movf	??_isr,w
  3296  0301  1383               	bcf	3,7	;select IRP bank0
  3297  0302  0080               	movwf	0
  3298  0303  3001               	movlw	1
  3299  0304  00CA               	movwf	??_isr
  3300  0305  084A               	movf	??_isr,w
  3301  0306  07B7               	addwf	_in_count,f
  3302  0307                     i1l1921:
  3303                           
  3304                           ;main.c: 86:    if(in_count==6)
  3305  0307  3006               	movlw	6
  3306  0308  0637               	xorwf	_in_count,w
  3307  0309  1D03               	btfss	3,2
  3308  030A  2B0D               	goto	i1l1925
  3309                           
  3310                           ;main.c: 87:    {;main.c: 88:       in_count=0;
  3311  030B  01B7               	clrf	_in_count
  3312                           
  3313                           ;main.c: 89:    check_sang=0;
  3314  030C  01B6               	clrf	_check_sang
  3315  030D                     i1l1925:
  3316                           
  3317                           ;main.c: 93:       if(ch=='{')
  3318  030D  307B               	movlw	123
  3319  030E  064F               	xorwf	isr@ch,w
  3320  030F  1D03               	btfss	3,2
  3321  0310  2B14               	goto	i1l1931
  3322                           
  3323                           ;main.c: 94:        {;main.c: 95:         in_count=0;
  3324  0311  01B7               	clrf	_in_count
  3325                           
  3326                           ;main.c: 96:         check_sang=1;
  3327  0312  01B6               	clrf	_check_sang
  3328  0313  0AB6               	incf	_check_sang,f
  3329  0314                     i1l1931:
  3330                           
  3331                           ;main.c: 98:       if(ch=='}')
  3332  0314  307D               	movlw	125
  3333  0315  064F               	xorwf	isr@ch,w
  3334  0316  1D03               	btfss	3,2
  3335  0317  2B45               	goto	i1l166
  3336                           
  3337                           ;main.c: 99:        {;main.c: 100:          check_sang=0;
  3338  0318  01B6               	clrf	_check_sang
  3339                           
  3340                           ;main.c: 101:          if(strncmp(in_buffer,"Sang",4)==0)
  3341  0319  3024               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3342  031A  00CA               	movwf	??_isr
  3343  031B  084A               	movf	??_isr,w
  3344  031C  00F0               	movwf	strncmp@s2
  3345  031D  3004               	movlw	4
  3346  031E  00F1               	movwf	strncmp@len
  3347  031F  3000               	movlw	0
  3348  0320  00F2               	movwf	strncmp@len+1
  3349  0321  303A               	movlw	(low (_in_buffer| 0))& (0+255)
  3350  0322  120A  118A  2776  120A  118A  	fcall	_strncmp
  3351  0327  0870               	movf	?_strncmp,w
  3352  0328  0471               	iorwf	?_strncmp+1,w
  3353  0329  1D03               	btfss	3,2
  3354  032A  2B2E               	goto	i1l1939
  3355                           
  3356                           ;main.c: 102:            PORTEbits.RE2=0;
  3357  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3358  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3359  032D  1109               	bcf	9,2	;volatile
  3360  032E                     i1l1939:
  3361                           
  3362                           ;main.c: 103:          if(strncmp(in_buffer,"Tat",3)==0)
  3363  032E  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3364  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0331  00CA               	movwf	??_isr
  3367  0332  084A               	movf	??_isr,w
  3368  0333  00F0               	movwf	strncmp@s2
  3369  0334  3003               	movlw	3
  3370  0335  00F1               	movwf	strncmp@len
  3371  0336  3000               	movlw	0
  3372  0337  00F2               	movwf	strncmp@len+1
  3373  0338  303A               	movlw	(low (_in_buffer| 0))& (0+255)
  3374  0339  120A  118A  2776  120A  118A  	fcall	_strncmp
  3375  033E  0870               	movf	?_strncmp,w
  3376  033F  0471               	iorwf	?_strncmp+1,w
  3377  0340  1D03               	btfss	3,2
  3378  0341  2B45               	goto	i1l166
  3379                           
  3380                           ;main.c: 104:            PORTEbits.RE2=1;
  3381  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0344  1509               	bsf	9,2	;volatile
  3384  0345                     i1l166:
  3385  0345  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0346  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0347  084E               	movf	??_isr+4,w
  3388  0348  00FF               	movwf	127
  3389  0349  084D               	movf	??_isr+3,w
  3390  034A  008A               	movwf	10
  3391  034B  084C               	movf	??_isr+2,w
  3392  034C  0084               	movwf	4
  3393  034D  0E4B               	swapf	??_isr+1,w
  3394  034E  0083               	movwf	3
  3395  034F  0EFE               	swapf	126,f
  3396  0350  0E7E               	swapf	126,w
  3397  0351  0009               	retfie
  3398  0352                     __end_of_isr:
  3399                           
  3400                           	psect	intentry
  3401  0004                     __pintentry:	
  3402                           ;incstack = 0
  3403                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3404                           
  3405  0004                     interrupt_function:
  3406  007E                     saved_w	set	btemp
  3407  0004  00FE               	movwf	btemp
  3408  0005  0E03               	swapf	3,w
  3409  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3411  0008  00CB               	movwf	??_isr+1
  3412  0009  0804               	movf	4,w
  3413  000A  00CC               	movwf	??_isr+2
  3414  000B  080A               	movf	10,w
  3415  000C  00CD               	movwf	??_isr+3
  3416  000D  087F               	movf	btemp+1,w
  3417  000E  00CE               	movwf	??_isr+4
  3418  000F  120A  118A  2A69   	ljmp	_isr
  3419                           
  3420                           	psect	text14
  3421  0776                     __ptext14:	
  3422 ;; *************** function _strncmp *****************
  3423 ;; Defined at:
  3424 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strncmp.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  s1              1    wreg     PTR const unsigned char 
  3427 ;;		 -> in_buffer(6), 
  3428 ;;  s2              1    0[COMMON] PTR const unsigned char 
  3429 ;;		 -> STR_2(4), STR_1(5), 
  3430 ;;  len             2    1[COMMON] unsigned int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  s1              1    5[COMMON] PTR const unsigned char 
  3433 ;;		 -> in_buffer(6), 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2    0[COMMON] int 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         3       0       0       0       0
  3444 ;;      Locals:         1       0       0       0       0
  3445 ;;      Temps:          2       0       0       0       0
  3446 ;;      Totals:         6       0       0       0       0
  3447 ;;Total ram usage:        6 bytes
  3448 ;; Hardware stack levels used:    2
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_isr
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           
  3457                           ;psect for function _strncmp
  3458  0776                     _strncmp:
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  3462                           ;strncmp@s1 stored from wreg
  3463  0776  00F5               	movwf	strncmp@s1
  3464  0777                     i1l747:
  3465  0777  3001               	movlw	1
  3466  0778  02F1               	subwf	strncmp@len,f
  3467  0779  3000               	movlw	0
  3468  077A  1C03               	skipc
  3469  077B  03F2               	decf	strncmp@len+1,f
  3470  077C  02F2               	subwf	strncmp@len+1,f
  3471  077D  0A71               	incf	strncmp@len,w
  3472  077E  1903               	btfsc	3,2
  3473  077F  0A72               	incf	strncmp@len+1,w
  3474  0780  1903               	btfsc	3,2
  3475  0781  2FB0               	goto	i1l1715
  3476  0782  0875               	movf	strncmp@s1,w
  3477  0783  0084               	movwf	4
  3478  0784  1383               	bcf	3,7	;select IRP bank0
  3479  0785  0800               	movf	0,w
  3480  0786  1903               	btfsc	3,2
  3481  0787  2F96               	goto	i1l1709
  3482  0788  0870               	movf	strncmp@s2,w
  3483  0789  0084               	movwf	4
  3484  078A  120A  158A  2000  120A  118A  	fcall	stringdir
  3485  078F  00F3               	movwf	??_strncmp
  3486  0790  0875               	movf	strncmp@s1,w
  3487  0791  0084               	movwf	4
  3488  0792  0800               	movf	0,w
  3489  0793  0673               	xorwf	??_strncmp,w
  3490  0794  1903               	skipnz
  3491  0795  2FA7               	goto	i1l1713
  3492  0796                     i1l1709:
  3493  0796  0870               	movf	strncmp@s2,w
  3494  0797  0084               	movwf	4
  3495  0798  120A  158A  2000   	fcall	stringdir
  3496  079B  00F3               	movwf	??_strncmp
  3497  079C  0875               	movf	strncmp@s1,w
  3498  079D  0084               	movwf	4
  3499  079E  0800               	movf	0,w
  3500  079F  00F4               	movwf	??_strncmp+1
  3501  07A0  0873               	movf	??_strncmp,w
  3502  07A1  0274               	subwf	??_strncmp+1,w
  3503  07A2  00F0               	movwf	?_strncmp
  3504  07A3  01F1               	clrf	?_strncmp+1
  3505  07A4  1C03               	skipc
  3506  07A5  03F1               	decf	?_strncmp+1,f
  3507  07A6  0008               	return
  3508  07A7                     i1l1713:
  3509  07A7  3001               	movlw	1
  3510  07A8  00F3               	movwf	??_strncmp
  3511  07A9  0873               	movf	??_strncmp,w
  3512  07AA  07F5               	addwf	strncmp@s1,f
  3513  07AB  3001               	movlw	1
  3514  07AC  00F3               	movwf	??_strncmp
  3515  07AD  0873               	movf	??_strncmp,w
  3516  07AE  07F0               	addwf	strncmp@s2,f
  3517  07AF  2F77               	goto	i1l747
  3518  07B0                     i1l1715:
  3519  07B0  01F0               	clrf	?_strncmp
  3520  07B1  01F1               	clrf	?_strncmp+1
  3521  07B2  0008               	return
  3522  07B3                     __end_of_strncmp:
  3523                           
  3524                           	psect	text15
  3525  0F8A                     __ptext15:	
  3526 ;; *************** function ___lwtoft *****************
  3527 ;; Defined at:
  3528 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwtoft.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  c               2    8[COMMON] unsigned int 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  3    8[COMMON] float 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         3       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0
  3544 ;;      Temps:          1       0       0       0       0
  3545 ;;      Totals:         4       0       0       0       0
  3546 ;;Total ram usage:        4 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    1
  3549 ;; This function calls:
  3550 ;;		___ftpack
  3551 ;; This function is called by:
  3552 ;;		_isr
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function ___lwtoft
  3558  0F8A                     ___lwtoft:
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3562  0F8A  0878               	movf	___lwtoft@c,w
  3563  0F8B  00F0               	movwf	___ftpack@arg
  3564  0F8C  0879               	movf	___lwtoft@c+1,w
  3565  0F8D  00F1               	movwf	___ftpack@arg+1
  3566  0F8E  01F2               	clrf	___ftpack@arg+2
  3567  0F8F  308E               	movlw	142
  3568  0F90  00FB               	movwf	??___lwtoft
  3569  0F91  087B               	movf	??___lwtoft,w
  3570  0F92  00F3               	movwf	___ftpack@exp
  3571  0F93  01F4               	clrf	___ftpack@sign
  3572  0F94  120A  118A  253B   	fcall	___ftpack
  3573  0F97  0870               	movf	?___ftpack,w
  3574  0F98  00F8               	movwf	?___lwtoft
  3575  0F99  0871               	movf	?___ftpack+1,w
  3576  0F9A  00F9               	movwf	?___lwtoft+1
  3577  0F9B  0872               	movf	?___ftpack+2,w
  3578  0F9C  00FA               	movwf	?___lwtoft+2
  3579  0F9D  0008               	return
  3580  0F9E                     __end_of___lwtoft:
  3581                           
  3582                           	psect	text16
  3583  0352                     __ptext16:	
  3584 ;; *************** function ___ftmul *****************
  3585 ;; Defined at:
  3586 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  f1              3    8[COMMON] float 
  3589 ;;  f2              3   11[COMMON] float 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3592 ;;  sign            1    9[BANK0 ] unsigned char 
  3593 ;;  cntr            1    8[BANK0 ] unsigned char 
  3594 ;;  exp             1    4[BANK0 ] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  3    8[COMMON] float 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, pclath, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         6       0       0       0       0
  3605 ;;      Locals:         0       6       0       0       0
  3606 ;;      Temps:          0       4       0       0       0
  3607 ;;      Totals:         6      10       0       0       0
  3608 ;;Total ram usage:       16 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    1
  3611 ;; This function calls:
  3612 ;;		___ftpack
  3613 ;; This function is called by:
  3614 ;;		_isr
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function ___ftmul
  3620  0352                     ___ftmul:
  3621                           
  3622                           ;incstack = 0
  3623                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3624  0352  0878               	movf	___ftmul@f1,w
  3625  0353  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0354  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0355  00C0               	movwf	??___ftmul
  3628  0356  0879               	movf	___ftmul@f1+1,w
  3629  0357  00C1               	movwf	??___ftmul+1
  3630  0358  087A               	movf	___ftmul@f1+2,w
  3631  0359  00C2               	movwf	??___ftmul+2
  3632  035A  1003               	clrc
  3633  035B  0D41               	rlf	??___ftmul+1,w
  3634  035C  0D42               	rlf	??___ftmul+2,w
  3635  035D  00C3               	movwf	??___ftmul+3
  3636  035E  0843               	movf	??___ftmul+3,w
  3637  035F  00C4               	movwf	___ftmul@exp
  3638  0360  0844               	movf	___ftmul@exp,w
  3639  0361  1D03               	btfss	3,2
  3640  0362  2B6A               	goto	i1l1753
  3641  0363  3000               	movlw	0
  3642  0364  00F8               	movwf	?___ftmul
  3643  0365  3000               	movlw	0
  3644  0366  00F9               	movwf	?___ftmul+1
  3645  0367  3000               	movlw	0
  3646  0368  00FA               	movwf	?___ftmul+2
  3647  0369  0008               	return
  3648  036A                     i1l1753:
  3649  036A  087B               	movf	___ftmul@f2,w
  3650  036B  00C0               	movwf	??___ftmul
  3651  036C  087C               	movf	___ftmul@f2+1,w
  3652  036D  00C1               	movwf	??___ftmul+1
  3653  036E  087D               	movf	___ftmul@f2+2,w
  3654  036F  00C2               	movwf	??___ftmul+2
  3655  0370  1003               	clrc
  3656  0371  0D41               	rlf	??___ftmul+1,w
  3657  0372  0D42               	rlf	??___ftmul+2,w
  3658  0373  00C3               	movwf	??___ftmul+3
  3659  0374  0843               	movf	??___ftmul+3,w
  3660  0375  00C9               	movwf	___ftmul@sign
  3661  0376  0849               	movf	___ftmul@sign,w
  3662  0377  1D03               	btfss	3,2
  3663  0378  2B80               	goto	i1l1759
  3664  0379  3000               	movlw	0
  3665  037A  00F8               	movwf	?___ftmul
  3666  037B  3000               	movlw	0
  3667  037C  00F9               	movwf	?___ftmul+1
  3668  037D  3000               	movlw	0
  3669  037E  00FA               	movwf	?___ftmul+2
  3670  037F  0008               	return
  3671  0380                     i1l1759:
  3672  0380  0849               	movf	___ftmul@sign,w
  3673  0381  3E7B               	addlw	123
  3674  0382  00C0               	movwf	??___ftmul
  3675  0383  0840               	movf	??___ftmul,w
  3676  0384  07C4               	addwf	___ftmul@exp,f
  3677  0385  0878               	movf	___ftmul@f1,w
  3678  0386  00C0               	movwf	??___ftmul
  3679  0387  0879               	movf	___ftmul@f1+1,w
  3680  0388  00C1               	movwf	??___ftmul+1
  3681  0389  087A               	movf	___ftmul@f1+2,w
  3682  038A  00C2               	movwf	??___ftmul+2
  3683  038B  3010               	movlw	16
  3684  038C                     u129_25:
  3685  038C  1003               	clrc
  3686  038D  0CC2               	rrf	??___ftmul+2,f
  3687  038E  0CC1               	rrf	??___ftmul+1,f
  3688  038F  0CC0               	rrf	??___ftmul,f
  3689  0390  3EFF               	addlw	-1
  3690  0391  1D03               	skipz
  3691  0392  2B8C               	goto	u129_25
  3692  0393  0840               	movf	??___ftmul,w
  3693  0394  00C3               	movwf	??___ftmul+3
  3694  0395  0843               	movf	??___ftmul+3,w
  3695  0396  00C9               	movwf	___ftmul@sign
  3696  0397  087B               	movf	___ftmul@f2,w
  3697  0398  00C0               	movwf	??___ftmul
  3698  0399  087C               	movf	___ftmul@f2+1,w
  3699  039A  00C1               	movwf	??___ftmul+1
  3700  039B  087D               	movf	___ftmul@f2+2,w
  3701  039C  00C2               	movwf	??___ftmul+2
  3702  039D  3010               	movlw	16
  3703  039E                     u130_25:
  3704  039E  1003               	clrc
  3705  039F  0CC2               	rrf	??___ftmul+2,f
  3706  03A0  0CC1               	rrf	??___ftmul+1,f
  3707  03A1  0CC0               	rrf	??___ftmul,f
  3708  03A2  3EFF               	addlw	-1
  3709  03A3  1D03               	skipz
  3710  03A4  2B9E               	goto	u130_25
  3711  03A5  0840               	movf	??___ftmul,w
  3712  03A6  00C3               	movwf	??___ftmul+3
  3713  03A7  0843               	movf	??___ftmul+3,w
  3714  03A8  06C9               	xorwf	___ftmul@sign,f
  3715  03A9  3080               	movlw	128
  3716  03AA  00C0               	movwf	??___ftmul
  3717  03AB  0840               	movf	??___ftmul,w
  3718  03AC  05C9               	andwf	___ftmul@sign,f
  3719  03AD  17F9               	bsf	___ftmul@f1+1,7
  3720  03AE  17FC               	bsf	___ftmul@f2+1,7
  3721  03AF  30FF               	movlw	255
  3722  03B0  05FB               	andwf	___ftmul@f2,f
  3723  03B1  30FF               	movlw	255
  3724  03B2  05FC               	andwf	___ftmul@f2+1,f
  3725  03B3  3000               	movlw	0
  3726  03B4  05FD               	andwf	___ftmul@f2+2,f
  3727  03B5  3000               	movlw	0
  3728  03B6  00C5               	movwf	___ftmul@f3_as_product
  3729  03B7  3000               	movlw	0
  3730  03B8  00C6               	movwf	___ftmul@f3_as_product+1
  3731  03B9  3000               	movlw	0
  3732  03BA  00C7               	movwf	___ftmul@f3_as_product+2
  3733  03BB  3007               	movlw	7
  3734  03BC  00C0               	movwf	??___ftmul
  3735  03BD  0840               	movf	??___ftmul,w
  3736  03BE  00C8               	movwf	___ftmul@cntr
  3737  03BF                     i1l1771:
  3738  03BF  1C78               	btfss	___ftmul@f1,0
  3739  03C0  2BCF               	goto	i1l1775
  3740  03C1  087B               	movf	___ftmul@f2,w
  3741  03C2  07C5               	addwf	___ftmul@f3_as_product,f
  3742  03C3  087C               	movf	___ftmul@f2+1,w
  3743  03C4  1103               	clrz
  3744  03C5  1803               	skipnc
  3745  03C6  0A7C               	incf	___ftmul@f2+1,w
  3746  03C7  1D03               	btfss	3,2
  3747  03C8  07C6               	addwf	___ftmul@f3_as_product+1,f
  3748  03C9  087D               	movf	___ftmul@f2+2,w
  3749  03CA  1103               	clrz
  3750  03CB  1803               	skipnc
  3751  03CC  0A7D               	incf	___ftmul@f2+2,w
  3752  03CD  1D03               	btfss	3,2
  3753  03CE  07C7               	addwf	___ftmul@f3_as_product+2,f
  3754  03CF                     i1l1775:
  3755  03CF  3001               	movlw	1
  3756  03D0                     u133_25:
  3757  03D0  1003               	clrc
  3758  03D1  0CFA               	rrf	___ftmul@f1+2,f
  3759  03D2  0CF9               	rrf	___ftmul@f1+1,f
  3760  03D3  0CF8               	rrf	___ftmul@f1,f
  3761  03D4  3EFF               	addlw	-1
  3762  03D5  1D03               	skipz
  3763  03D6  2BD0               	goto	u133_25
  3764  03D7  3001               	movlw	1
  3765  03D8                     u134_25:
  3766  03D8  1003               	clrc
  3767  03D9  0DFB               	rlf	___ftmul@f2,f
  3768  03DA  0DFC               	rlf	___ftmul@f2+1,f
  3769  03DB  0DFD               	rlf	___ftmul@f2+2,f
  3770  03DC  3EFF               	addlw	-1
  3771  03DD  1D03               	skipz
  3772  03DE  2BD8               	goto	u134_25
  3773  03DF  3001               	movlw	1
  3774  03E0  02C8               	subwf	___ftmul@cntr,f
  3775  03E1  1D03               	btfss	3,2
  3776  03E2  2BBF               	goto	i1l1771
  3777  03E3  3009               	movlw	9
  3778  03E4  00C0               	movwf	??___ftmul
  3779  03E5  0840               	movf	??___ftmul,w
  3780  03E6  00C8               	movwf	___ftmul@cntr
  3781  03E7                     i1l1783:
  3782  03E7  1C78               	btfss	___ftmul@f1,0
  3783  03E8  2BF7               	goto	i1l1787
  3784  03E9  087B               	movf	___ftmul@f2,w
  3785  03EA  07C5               	addwf	___ftmul@f3_as_product,f
  3786  03EB  087C               	movf	___ftmul@f2+1,w
  3787  03EC  1103               	clrz
  3788  03ED  1803               	skipnc
  3789  03EE  0A7C               	incf	___ftmul@f2+1,w
  3790  03EF  1D03               	btfss	3,2
  3791  03F0  07C6               	addwf	___ftmul@f3_as_product+1,f
  3792  03F1  087D               	movf	___ftmul@f2+2,w
  3793  03F2  1103               	clrz
  3794  03F3  1803               	skipnc
  3795  03F4  0A7D               	incf	___ftmul@f2+2,w
  3796  03F5  1D03               	btfss	3,2
  3797  03F6  07C7               	addwf	___ftmul@f3_as_product+2,f
  3798  03F7                     i1l1787:
  3799  03F7  3001               	movlw	1
  3800  03F8                     u138_25:
  3801  03F8  1003               	clrc
  3802  03F9  0CFA               	rrf	___ftmul@f1+2,f
  3803  03FA  0CF9               	rrf	___ftmul@f1+1,f
  3804  03FB  0CF8               	rrf	___ftmul@f1,f
  3805  03FC  3EFF               	addlw	-1
  3806  03FD  1D03               	skipz
  3807  03FE  2BF8               	goto	u138_25
  3808  03FF  3001               	movlw	1
  3809  0400                     u139_25:
  3810  0400  1003               	clrc
  3811  0401  0CC7               	rrf	___ftmul@f3_as_product+2,f
  3812  0402  0CC6               	rrf	___ftmul@f3_as_product+1,f
  3813  0403  0CC5               	rrf	___ftmul@f3_as_product,f
  3814  0404  3EFF               	addlw	-1
  3815  0405  1D03               	skipz
  3816  0406  2C00               	goto	u139_25
  3817  0407  3001               	movlw	1
  3818  0408  02C8               	subwf	___ftmul@cntr,f
  3819  0409  1D03               	btfss	3,2
  3820  040A  2BE7               	goto	i1l1783
  3821  040B  0845               	movf	___ftmul@f3_as_product,w
  3822  040C  00F0               	movwf	___ftpack@arg
  3823  040D  0846               	movf	___ftmul@f3_as_product+1,w
  3824  040E  00F1               	movwf	___ftpack@arg+1
  3825  040F  0847               	movf	___ftmul@f3_as_product+2,w
  3826  0410  00F2               	movwf	___ftpack@arg+2
  3827  0411  0844               	movf	___ftmul@exp,w
  3828  0412  00C0               	movwf	??___ftmul
  3829  0413  0840               	movf	??___ftmul,w
  3830  0414  00F3               	movwf	___ftpack@exp
  3831  0415  0849               	movf	___ftmul@sign,w
  3832  0416  00C1               	movwf	??___ftmul+1
  3833  0417  0841               	movf	??___ftmul+1,w
  3834  0418  00F4               	movwf	___ftpack@sign
  3835  0419  120A  118A  253B   	fcall	___ftpack
  3836  041C  0870               	movf	?___ftpack,w
  3837  041D  00F8               	movwf	?___ftmul
  3838  041E  0871               	movf	?___ftpack+1,w
  3839  041F  00F9               	movwf	?___ftmul+1
  3840  0420  0872               	movf	?___ftpack+2,w
  3841  0421  00FA               	movwf	?___ftmul+2
  3842  0422  0008               	return
  3843  0423                     __end_of___ftmul:
  3844                           
  3845                           	psect	text17
  3846  053B                     __ptext17:	
  3847 ;; *************** function ___ftpack *****************
  3848 ;; Defined at:
  3849 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  arg             3    0[COMMON] unsigned um
  3852 ;;  exp             1    3[COMMON] unsigned char 
  3853 ;;  sign            1    4[COMMON] unsigned char 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  3    0[COMMON] float 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3865 ;;      Params:         5       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0
  3867 ;;      Temps:          3       0       0       0       0
  3868 ;;      Totals:         8       0       0       0       0
  3869 ;;Total ram usage:        8 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		___ftmul
  3875 ;;		___lwtoft
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function ___ftpack
  3881  053B                     ___ftpack:
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3885  053B  0873               	movf	___ftpack@exp,w
  3886  053C  1903               	btfsc	3,2
  3887  053D  2D43               	goto	i1l1497
  3888  053E  0872               	movf	___ftpack@arg+2,w
  3889  053F  0471               	iorwf	___ftpack@arg+1,w
  3890  0540  0470               	iorwf	___ftpack@arg,w
  3891  0541  1D03               	skipz
  3892  0542  2D56               	goto	i1l1503
  3893  0543                     i1l1497:
  3894  0543  3000               	movlw	0
  3895  0544  00F0               	movwf	?___ftpack
  3896  0545  3000               	movlw	0
  3897  0546  00F1               	movwf	?___ftpack+1
  3898  0547  3000               	movlw	0
  3899  0548  00F2               	movwf	?___ftpack+2
  3900  0549  0008               	return
  3901  054A                     i1l1501:
  3902  054A  3001               	movlw	1
  3903  054B  00F5               	movwf	??___ftpack
  3904  054C  0875               	movf	??___ftpack,w
  3905  054D  07F3               	addwf	___ftpack@exp,f
  3906  054E  3001               	movlw	1
  3907  054F                     u92_25:
  3908  054F  1003               	clrc
  3909  0550  0CF2               	rrf	___ftpack@arg+2,f
  3910  0551  0CF1               	rrf	___ftpack@arg+1,f
  3911  0552  0CF0               	rrf	___ftpack@arg,f
  3912  0553  3EFF               	addlw	-1
  3913  0554  1D03               	skipz
  3914  0555  2D4F               	goto	u92_25
  3915  0556                     i1l1503:
  3916  0556  30FE               	movlw	254
  3917  0557  0572               	andwf	___ftpack@arg+2,w
  3918  0558  1903               	btfsc	3,2
  3919  0559  2D71               	goto	i1l533
  3920  055A  2D4A               	goto	i1l1501
  3921  055B                     i1l1505:
  3922  055B  3001               	movlw	1
  3923  055C  00F5               	movwf	??___ftpack
  3924  055D  0875               	movf	??___ftpack,w
  3925  055E  07F3               	addwf	___ftpack@exp,f
  3926  055F  3001               	movlw	1
  3927  0560  07F0               	addwf	___ftpack@arg,f
  3928  0561  3000               	movlw	0
  3929  0562  1803               	skipnc
  3930  0563  3001               	movlw	1
  3931  0564  07F1               	addwf	___ftpack@arg+1,f
  3932  0565  3000               	movlw	0
  3933  0566  1803               	skipnc
  3934  0567  3001               	movlw	1
  3935  0568  07F2               	addwf	___ftpack@arg+2,f
  3936  0569  3001               	movlw	1
  3937  056A                     u94_25:
  3938  056A  1003               	clrc
  3939  056B  0CF2               	rrf	___ftpack@arg+2,f
  3940  056C  0CF1               	rrf	___ftpack@arg+1,f
  3941  056D  0CF0               	rrf	___ftpack@arg,f
  3942  056E  3EFF               	addlw	-1
  3943  056F  1D03               	skipz
  3944  0570  2D6A               	goto	u94_25
  3945  0571                     i1l533:
  3946  0571  30FF               	movlw	255
  3947  0572  0572               	andwf	___ftpack@arg+2,w
  3948  0573  1903               	btfsc	3,2
  3949  0574  2D84               	goto	i1l1513
  3950  0575  2D5B               	goto	i1l1505
  3951  0576                     i1l1515:
  3952  0576  3002               	movlw	2
  3953  0577  0273               	subwf	___ftpack@exp,w
  3954  0578  1C03               	btfss	3,0
  3955  0579  2D86               	goto	i1l540
  3956  057A  3001               	movlw	1
  3957  057B  02F3               	subwf	___ftpack@exp,f
  3958  057C  3001               	movlw	1
  3959  057D                     u96_25:
  3960  057D  1003               	clrc
  3961  057E  0DF0               	rlf	___ftpack@arg,f
  3962  057F  0DF1               	rlf	___ftpack@arg+1,f
  3963  0580  0DF2               	rlf	___ftpack@arg+2,f
  3964  0581  3EFF               	addlw	-1
  3965  0582  1D03               	skipz
  3966  0583  2D7D               	goto	u96_25
  3967  0584                     i1l1513:
  3968  0584  1FF1               	btfss	___ftpack@arg+1,7
  3969  0585  2D76               	goto	i1l1515
  3970  0586                     i1l540:
  3971  0586  1873               	btfsc	___ftpack@exp,0
  3972  0587  2D8E               	goto	i1l541
  3973  0588  30FF               	movlw	255
  3974  0589  05F0               	andwf	___ftpack@arg,f
  3975  058A  307F               	movlw	127
  3976  058B  05F1               	andwf	___ftpack@arg+1,f
  3977  058C  30FF               	movlw	255
  3978  058D  05F2               	andwf	___ftpack@arg+2,f
  3979  058E                     i1l541:
  3980  058E  1003               	clrc
  3981  058F  0CF3               	rrf	___ftpack@exp,f
  3982  0590  0873               	movf	___ftpack@exp,w
  3983  0591  00F5               	movwf	??___ftpack
  3984  0592  01F6               	clrf	??___ftpack+1
  3985  0593  01F7               	clrf	??___ftpack+2
  3986  0594  3010               	movlw	16
  3987  0595                     u100_25:
  3988  0595  1003               	clrc
  3989  0596  0DF5               	rlf	??___ftpack,f
  3990  0597  0DF6               	rlf	??___ftpack+1,f
  3991  0598  0DF7               	rlf	??___ftpack+2,f
  3992  0599  3EFF               	addlw	-1
  3993  059A  1D03               	skipz
  3994  059B  2D95               	goto	u100_25
  3995  059C  0875               	movf	??___ftpack,w
  3996  059D  04F0               	iorwf	___ftpack@arg,f
  3997  059E  0876               	movf	??___ftpack+1,w
  3998  059F  04F1               	iorwf	___ftpack@arg+1,f
  3999  05A0  0877               	movf	??___ftpack+2,w
  4000  05A1  04F2               	iorwf	___ftpack@arg+2,f
  4001  05A2  0874               	movf	___ftpack@sign,w
  4002  05A3  1903               	btfsc	3,2
  4003  05A4  0008               	return
  4004  05A5  17F2               	bsf	___ftpack@arg+2,7
  4005  05A6  0008               	return
  4006  05A7                     __end_of___ftpack:
  4007                           
  4008                           	psect	text18
  4009  07B3                     __ptext18:	
  4010 ;; *************** function _ReadAdc *****************
  4011 ;; Defined at:
  4012 ;;		line 11 in file "adc.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  Channel         1    wreg     unsigned char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  Channel         1    6[COMMON] unsigned char 
  4017 ;;  value           2    4[COMMON] unsigned int 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    0[COMMON] unsigned int 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4027 ;;      Params:         2       0       0       0       0
  4028 ;;      Locals:         3       0       0       0       0
  4029 ;;      Temps:          2       0       0       0       0
  4030 ;;      Totals:         7       0       0       0       0
  4031 ;;Total ram usage:        7 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_isr
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function _ReadAdc
  4042  07B3                     _ReadAdc:
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in _ReadAdc: [wreg-fsr0h+status,2+status,0]
  4046                           ;ReadAdc@Channel stored from wreg
  4047  07B3  00F6               	movwf	ReadAdc@Channel
  4048                           
  4049                           ;adc.c: 11: unsigned int ReadAdc(unsigned char Channel);adc.c: 12: {;adc.c: 13:     unsi
      +                          gned int value;;adc.c: 14:     switch(Channel)
  4050  07B4  2FBF               	goto	i1l1687
  4051  07B5                     i1l204:	
  4052                           ;adc.c: 15:  {;adc.c: 16:  case 0: CHS0 = 0; CHS1 = 0; CHS2 = 0; break;
  4053                           
  4054  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4055  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  4056  07B7  119F               	bcf	31,3	;volatile
  4057  07B8  2FBC               	goto	L4
  4058  07B9                     i1l206:	
  4059                           ;adc.c: 17:     case 1: CHS0 = 1; CHS1 = 0; CHS2 = 0;
  4060                           
  4061  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  4062  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  4063  07BB  159F               	bsf	31,3	;volatile
  4064  07BC                     L4:
  4065  07BC  121F               	bcf	31,4	;volatile
  4066  07BD  129F               	bcf	31,5	;volatile
  4067                           
  4068                           ;adc.c: 18:     }
  4069  07BE  2FCF               	goto	i1l205
  4070  07BF                     i1l1687:
  4071  07BF  0876               	movf	ReadAdc@Channel,w
  4072  07C0  00F2               	movwf	??_ReadAdc
  4073  07C1  01F3               	clrf	??_ReadAdc+1
  4074                           
  4075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4076                           ; Switch size 1, requested type "simple"
  4077                           ; Number of cases is 1, Range of values is 0 to 0
  4078                           ; switch strategies available:
  4079                           ; Name         Instructions Cycles
  4080                           ; simple_byte            4     3 (average)
  4081                           ; direct_byte           11     8 (fixed)
  4082                           ; jumptable            260     6 (fixed)
  4083                           ;	Chosen strategy is simple_byte
  4084  07C2  0873               	movf	??_ReadAdc+1,w
  4085  07C3  3A00               	xorlw	0	; case 0
  4086  07C4  1903               	skipnz
  4087  07C5  2FC7               	goto	i1l2605
  4088  07C6  2FCF               	goto	i1l205
  4089  07C7                     i1l2605:
  4090                           
  4091                           ; Switch size 1, requested type "simple"
  4092                           ; Number of cases is 2, Range of values is 0 to 1
  4093                           ; switch strategies available:
  4094                           ; Name         Instructions Cycles
  4095                           ; simple_byte            7     4 (average)
  4096                           ; direct_byte           14     8 (fixed)
  4097                           ; jumptable            260     6 (fixed)
  4098                           ;	Chosen strategy is simple_byte
  4099  07C7  0872               	movf	??_ReadAdc,w
  4100  07C8  3A00               	xorlw	0	; case 0
  4101  07C9  1903               	skipnz
  4102  07CA  2FB5               	goto	i1l204
  4103  07CB  3A01               	xorlw	1	; case 1
  4104  07CC  1903               	skipnz
  4105  07CD  2FB9               	goto	i1l206
  4106  07CE  2FCF               	goto	i1l205
  4107  07CF                     i1l205:
  4108                           
  4109                           ;adc.c: 19:     ADON=1;
  4110  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  4111  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  4112  07D1  141F               	bsf	31,0	;volatile
  4113                           
  4114                           ;adc.c: 20:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4115  07D2  3006               	movlw	6
  4116  07D3  00F2               	movwf	??_ReadAdc
  4117  07D4                     u235_27:
  4118  07D4  0BF2               	decfsz	??_ReadAdc,f
  4119  07D5  2FD4               	goto	u235_27
  4120  07D6  0000               	nop
  4121                           
  4122                           ;adc.c: 21:     GO_DONE=1;
  4123  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  4124  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  4125  07D9  151F               	bsf	31,2	;volatile
  4126  07DA                     i1l207:	
  4127                           ;adc.c: 22:     while(GO_DONE);
  4128                           
  4129  07DA  191F               	btfsc	31,2	;volatile
  4130  07DB  2FDA               	goto	i1l207
  4131                           
  4132                           ;adc.c: 23:     value=(unsigned int)ADRESH*256+ADRESL;
  4133  07DC  081E               	movf	30,w	;volatile
  4134  07DD  00F5               	movwf	ReadAdc@value+1
  4135  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  4136  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  4137  07E0  081E               	movf	30,w	;volatile
  4138  07E1  00F4               	movwf	ReadAdc@value
  4139                           
  4140                           ;adc.c: 24:     ADON=0;
  4141  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  4142  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  4143  07E4  101F               	bcf	31,0	;volatile
  4144                           
  4145                           ;adc.c: 26:     return value;
  4146  07E5  0875               	movf	ReadAdc@value+1,w
  4147  07E6  00F1               	movwf	?_ReadAdc+1
  4148  07E7  0874               	movf	ReadAdc@value,w
  4149  07E8  00F0               	movwf	?_ReadAdc
  4150  07E9  0008               	return
  4151  07EA                     __end_of_ReadAdc:
  4152  007E                     btemp	set	126	;btemp
  4153  007E                     wtemp0	set	126
  4154                           
  4155                           	psect	config
  4156                           
  4157                           ;Config register CONFIG @ 0x2007
  4158                           ;	Oscillator Selection bits
  4159                           ;	FOSC = XT, XT oscillator
  4160                           ;	Watchdog Timer Enable bit
  4161                           ;	WDTE = OFF, WDT disabled
  4162                           ;	Power-up Timer Enable bit
  4163                           ;	PWRTE = ON, PWRT enabled
  4164                           ;	Brown-out Reset Enable bit
  4165                           ;	BOREN = ON, BOR enabled
  4166                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4167                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4168                           ;	Data EEPROM Memory Code Protection bit
  4169                           ;	CPD = OFF, Data EEPROM code protection off
  4170                           ;	Flash Program Memory Write Enable bits
  4171                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4172                           ;	In-Circuit Debugger Mode bit
  4173                           ;	DEBUG = 0x1, unprogrammed default
  4174                           ;	Flash Program Memory Code Protection bit
  4175                           ;	CP = OFF, Code protection off
  4176  2007                     	org	8199
  4177  2007  3FF1               	dw	16369

Data Sizes:
    Strings     44
    Constant    0
    Data        64
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      64
    BANK1            80      4      78
    BANK3            96     10      10
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[4]), STR_1(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 6
		 -> in_buffer(BANK0[6]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_Send_data
    _Send_data->___lwdiv
    ___lwdiv->___lwmod
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _isr in BANK0

    _isr->___ftmul

Critical Paths under _main in BANK1

    _main->_Send_data

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   14091
                                              0 BANK3     10    10      0
                            _InitADC
                          _Init_uart
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                          _Send_data
                            ___fttol
                            ___lwdiv
                            ___lwmod
                  _timer2_initialize
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     501
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _Send_data                                            6     4      2    2649
                                             30 BANK0      2     0      2
                                              0 BANK1      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1272
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1021
                                             22 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    2117
                                             28 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    2076
                                             28 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            4     3      1    2005
                                             28 BANK0      4     3      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1770
                                             21 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     176
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0    4916
                                             10 BANK0      6     6      0
                            _ReadAdc
                            ___ftmul
                           ___lwtoft
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     3      3     400
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    1997
                                              8 COMMON     4     1      3
                            _ReadAdc (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2407
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1869
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _ReadAdc                                              7     5      2      45
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitADC
   _Init_uart
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _Send_data
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   ___fttol
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _timer2_initialize

 _isr (ROOT)
   _ReadAdc
   ___ftmul
     ___ftpack
   ___lwtoft
     _ReadAdc (ARG)
     ___ftpack (ARG)
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      A       A       9       10.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A6      12        0.0%
ABS                  0      0      A6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Sep 15 17:00:34 2021

              ?_LCDBusyLoop 0070                           _i 0034                           pc 0002  
                        l21 06CE                          l22 06CF                          l66 0FC5  
                        l67 0FA6                          fsr 0004                         l232 04B1  
                       l624 0515                         _GIE 005F                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _PR2 0092  
                       _isr 0269                         fsr0 0004                         indf 0000  
           __end_of_LCDByte 06F8             __end_of_LCDInit 0610                 LCDByte@temp 005B  
                      l2151 061D                        l2235 0766                        l2227 0742  
                      l2251 0FD4                        l2411 04D8                        l2309 05F9  
                      l2333 06A0                        l2229 0750                        l2253 0FE2  
                      l2261 0FFB                        l2343 0FA8                        l2239 0771  
                      l2431 0511                        l2407 04CF                        l2345 0FAA  
                      l2329 0696                        l2337 0668                        l2257 0FF0  
                      l2603 0FB7                        l2443 0532                        l2349 0FAF  
                      l2429 0501                        l2509 007C                        l2439 0524  
                      l2399 04A9                        ?_isr 0070                        _ADON 00F8  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 0829                        STR_2 082E                        STR_3 081E  
                      STR_4 0806                        STR_5 0812                        u2025 0FD7  
                      u2045 0FE8                        u2055 0FF1                        u2225 051A  
                      u2165 04DF                        u2337 006C                        u2347 05B0  
                      u2195 0502                        u1905 062A                        u1925 06BB  
                      u1955 0745                        _PEIE 005E                        u1975 0751  
                      u1985 075D                        u1995 0767                        _RCIE 0465  
                      _RCIF 0065                        _TRMT 04C1                        _Dong 002B  
                      _main 0035                ___ftpack@arg 0070          __size_of_LCDGotoXY 002E  
              ___ftpack@exp 0073                        btemp 007E                        start 0012  
              ___ftmul@cntr 0048                ___ftmul@sign 0049             __end_of_InitADC 0F6B  
           __end_of_ReadAdc 07EA                ___fttol@exp1 005D                ___fttol@lval 0059  
                     ??_isr 004A                       ?_main 0070                LCDInit@style 005E  
           __end_of___ftmul 0423             __end_of___fttol 053B             __end_of___lwdiv 0776  
                     i1l204 07B5                       i1l205 07CF                       i1l206 07B9  
                     i1l207 07DA                       i1l166 0345             __end_of___lwmod 1000  
                     i1l540 0586                       i1l541 058E                       i1l533 0571  
                     i1l747 0777                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099                       _PORTD 0008                       _TRISD 0088  
                     u92_25 054F                       u94_25 056A                       u96_25 057D  
                     _TXREG 0019                       _TXSTA 0098                       _count 0032  
             ___ftpack@sign 0074                       isr@ch 004F                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_strncmp 07B3  
           __initialization 0015                __end_of_main 0269                  Send_data@i 00ED  
                Send_data@k 00EB                ReadAdc@value 0074                      ??_main 0190  
             ___fttol@sign1 0058           __end_of_LCDGotoXY 0FCC               LCDByte@isdata 0055  
                 ??_LCDByte 0056                   ??_LCDInit 005C                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
          __end_of___ftpack 05A7                      u100_25 0595                      i1l1501 054A  
                    i1l1503 0556                      i1l1513 0584                      i1l1505 055B  
                    i1l1515 0576                      i1l1713 07A7                      i1l1715 07B0  
                    i1l2605 07C7                      i1l1709 0796                      i1l1903 02BB  
                    i1l1497 0543                      i1l1753 036A                      i1l1921 0307  
                    i1l1771 03BF                      i1l1931 0314                      i1l1907 02EB  
                    u130_25 039E                      i1l1925 030D                      i1l1909 02EC  
                    i1l1687 07BF                      i1l1783 03E7                      i1l1775 03CF  
                    i1l1759 0380                      i1l1787 03F7                      i1l1939 032E  
                    u133_25 03D0                      u134_25 03D8                      u129_25 038C  
                    u138_25 03F8                      u139_25 0400                      u235_27 07D4  
          __end_of___lwtoft 0F9E                      _TMR2IE 0461                      _TMR2IF 0061  
                    _TMR2ON 0092                   ??_InitADC 0050                   ??_ReadAdc 0072  
        __size_of_Init_uart 000E                      _Dienap 0028              _LCDWriteString 0665  
                    _adc_ok 0038                   ??___ftmul 0040                   ??___fttol 0054  
        __size_of_Send_data 009B                   ??___lwdiv 005A                   ??___lwmod 0054  
                    _count1 0030        __size_of_LCDBusyLoop 0055       ___ftmul@f3_as_product 0045  
                    saved_w 007E                   ??_strncmp 0073     __end_of__initialization 0031  
    __end_of_LCDWriteString 06B5                   LCDByte@hn 0058                   LCDByte@ln 0059  
                ___ftmul@f1 0078                  ___ftmul@f2 007B                  ___fttol@f1 0050  
            __pcstackCOMMON 0070                __pidataBANK1 06F8                  ___lwtoft@c 0078  
            Send_data@Value 005E           __end_of_Init_uart 0F79           __end_of_Send_data 04BE  
                __pbssBANK0 0020                  __pbssBANK1 00E0                  _check_sang 0036  
           ?_LCDWriteString 0070                  __pmaintext 0035                  __pintentry 0004  
                 ?___ftpack 0070                     _T2CKPS0 0090                     _T2CKPS1 0091  
                 ?___lwtoft 0078                     _LCDByte 06B5                     _LCDInit 05A7  
                   _GO_DONE 00FA                  _commbuffer 00E0                     _TOUTPS0 0093  
                   _TOUTPS1 0094                     _TOUTPS2 0095                  __stringtab 0800  
                   _InitADC 0F62                     _ReadAdc 07B3                     ___cgram 00A0  
                   ___ftmul 0352                     ___fttol 04BE                     ___lwdiv 0738  
                   ___lwmod 0FCC           _timer2_initialize 07EA                  ??___ftpack 0075  
                   __ptext1 07EA                     __ptext2 04BE                     __ptext3 0423  
                   __ptext4 0FCC                     __ptext5 0738                     __ptext6 0665  
                   __ptext7 05A7                     __ptext8 0F9E                     __ptext9 06B5  
                ??___lwtoft 007B          ?_timer2_initialize 0070                     _count_s 002E  
              __size_of_isr 00E9                   _LCDGotoXY 0F9E         ??_timer2_initialize 0050  
                   clrloop0 0F5B                     _strncmp 0776        end_of_initialization 0031  
 __end_of_timer2_initialize 07FF                   _PORTEbits 0009           LCDWriteString@msg 005E  
                 _TRISDbits 0088                   _TRISEbits 0089                  ?_LCDGotoXY 005C  
                LCDInit@__i 005F              ReadAdc@Channel 0076                  LCDGotoXY@x 005F  
                LCDGotoXY@y 005C                 ___ftmul@exp 0044               ??_LCDBusyLoop 0050  
       start_initialization 0015                 __end_of_isr 0352                   _Init_uart 0F6B  
          ??_LCDWriteString 005C                   _Send_data 0423  __size_of_timer2_initialize 0015  
                init_fetch0 0F79                 __pdataBANK1 00A0         __end_of_LCDBusyLoop 0665  
                  ?_LCDByte 0055                    ?_LCDInit 0070           __size_of___ftpack 006C  
                  LCDByte@c 005A                   ___latbits 0002           __size_of___lwtoft 0014  
             __pcstackBANK0 0040               __pcstackBANK1 00EA               __pcstackBANK3 0190  
               ??_LCDGotoXY 005D                  ?_Init_uart 0070                    ?_InitADC 0070  
                ?_Send_data 005E                    ?_ReadAdc 0070            ___lwdiv@dividend 0058  
                 _do_dienap 0039                    ?___ftmul 0078                    ?___fttol 0050  
                  ?___lwdiv 0056                    ?___lwmod 0050                   __pstrings 0800  
                 _in_buffer 003A             LCDBusyLoop@busy 0052             LCDBusyLoop@temp 0053  
          ___lwdiv@quotient 005C                    ?_strncmp 0070           interrupt_function 0004  
                 clear_ram0 0F5A                   main@F1000 0025                 _LCDBusyLoop 0610  
          LCDWriteString@cc 005D                   main@Digit 0195                 __stringbase 0805  
          __size_of_LCDByte 0043            __size_of_LCDInit 0069                 ??_Init_uart 0050  
               ??_Send_data 00EA            __size_of_InitADC 0009            __size_of_ReadAdc 0037  
          __size_of___ftmul 00D1            __size_of___fttol 007D           LCDBusyLoop@status 0054  
          __size_of___lwdiv 003E            __size_of___lwmod 0034                    ___ftpack 053B  
        __end_of__stringtab 0806                    ___lwtoft 0F8A             LCDWriteInt@F912 0020  
                  _main$810 0193             ___lwdiv@divisor 0056             ___lwdiv@counter 005B  
                  __ptext10 0610                    __ptext11 0F6B                    __ptext12 0F62  
                  __ptext13 0269                    __ptext14 0776                    __ptext15 0F8A  
                  __ptext16 0352                    __ptext17 053B                    __ptext18 07B3  
                  _in_count 0037            __size_of_strncmp 003D               __size_of_main 0234  
                strncmp@len 0071               main@ADC_Value 0198                    init_ram0 0F7D  
                  intlevel1 0000            ___lwmod@dividend 0052                   strncmp@s1 0075  
                 strncmp@s2 0070                   stringcode 0800             ___lwmod@divisor 0050  
           ___lwmod@counter 0055                    stringdir 0800                    stringtab 0800  
   __size_of_LCDWriteString 0050  
