

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 25 16:50:05 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113                           
   114                           	psect	idataBANK0
   115  0144                     __pidataBANK0:	
   116                           
   117                           ;initializer for _number
   118  0144  34C0               	retlw	192
   119  0145  34F9               	retlw	249
   120  0146  34A4               	retlw	164
   121  0147  34B0               	retlw	176
   122  0148  3499               	retlw	153
   123  0149  3492               	retlw	146
   124  014A  3482               	retlw	130
   125  014B  34F8               	retlw	248
   126  014C  3480               	retlw	128
   127  014D  3490               	retlw	144
   128  0009                     _PORTEbits	set	9
   129  0007                     _PORTCbits	set	7
   130  0008                     _PORTD	set	8
   131  0061                     _TMR2IF	set	97
   132  005F                     _GIE	set	95
   133  005E                     _PEIE	set	94
   134  0092                     _TMR2ON	set	146
   135  0095                     _TOUTPS2	set	149
   136  0094                     _TOUTPS1	set	148
   137  0093                     _TOUTPS0	set	147
   138  0091                     _T2CKPS1	set	145
   139  0090                     _T2CKPS0	set	144
   140  0088                     _TRISD	set	136
   141  0087                     _TRISCbits	set	135
   142  0089                     _TRISEbits	set	137
   143  0085                     _TRISAbits	set	133
   144  0092                     _PR2	set	146
   145  0461                     _TMR2IE	set	1121
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  0015                     start_initialization:	
   151  0015                     __initialization:	
   152                           
   153                           ; Initialize objects allocated to BANK0
   154  0015  1383               	bcf	3,7	;select IRP bank0
   155  0016  3038               	movlw	low (__pdataBANK0+10)
   156  0017  00FD               	movwf	btemp+-1
   157  0018  3001               	movlw	high __pidataBANK0
   158  0019  00FE               	movwf	btemp
   159  001A  3044               	movlw	low __pidataBANK0
   160  001B  00FF               	movwf	btemp+1
   161  001C  302E               	movlw	low __pdataBANK0
   162  001D  0084               	movwf	4
   163  001E  120A  118A  2137   	fcall	init_ram0
   164                           
   165                           ; Clear objects allocated to BANK0
   166  0021  01A0               	clrf	__pbssBANK0& (0+127)
   167  0022  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   168  0023  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   169  0024  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   170  0025  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   171  0026  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   172  0027  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   173  0028  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   174  0029  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   175  002A  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   176  002B  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   177  002C  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   178  002D  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   179  002E  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   180                           
   181                           ; Clear objects allocated to COMMON
   182  002F  01F0               	clrf	__pbssCOMMON& (0+127)
   183  0030  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   184  0031  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   185  0032  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   186  0033  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   187  0034  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   188  0035                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  0035                     __end_of__initialization:	
   192  0035  0183               	clrf	3
   193  0036  120A  118A  2909   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMMON
   196  0070                     __pbssCOMMON:	
   197  0070                     _digit:	
   198  0070                     	ds	1
   199  0071                     _ngin:	
   200  0071                     	ds	1
   201  0072                     _tram:	
   202  0072                     	ds	1
   203  0073                     _truc:	
   204  0073                     	ds	1
   205  0074                     _donvi:	
   206  0074                     	ds	1
   207  0075                     _bLed:	
   208  0075                     	ds	1
   209                           
   210                           	psect	bssBANK0
   211  0020                     __pbssBANK0:	
   212  0020                     _k:	
   213  0020                     	ds	4
   214  0024                     _count:	
   215  0024                     	ds	2
   216  0026                     _delay:	
   217  0026                     	ds	2
   218  0028                     _j:	
   219  0028                     	ds	2
   220  002A                     _num:	
   221  002A                     	ds	2
   222  002C                     _i:	
   223  002C                     	ds	2
   224                           
   225                           	psect	dataBANK0
   226  002E                     __pdataBANK0:	
   227  002E                     _number:	
   228  002E                     	ds	10
   229                           
   230                           	psect	inittext
   231  0133                     init_fetch0:	
   232                           ;	Called with low address in FSR and high address in W
   233                           
   234  0133  087E               	movf	126,w
   235  0134  008A               	movwf	10
   236  0135  087F               	movf	127,w
   237  0136  0082               	movwf	2
   238  0137                     init_ram0:	
   239                           ;Called with:
   240                           ;	high address of idata address in btemp 
   241                           ;	low address of idata address in btemp+1 
   242                           ;	low address of data in FSR
   243                           ;	high address + 1 of data in btemp-1
   244                           
   245  0137  2133  120A  118A   	fcall	init_fetch0
   246  013A  0080               	movwf	0
   247  013B  0A84               	incf	4,f
   248  013C  0804               	movf	4,w
   249  013D  067D               	xorwf	125,w
   250  013E  1903               	btfsc	3,2
   251  013F  3400               	retlw	0
   252  0140  0AFF               	incf	127,f
   253  0141  1903               	btfsc	3,2
   254  0142  0AFE               	incf	126,f
   255  0143  2937               	goto	init_ram0
   256                           
   257                           	psect	cstackCOMMON
   258  0076                     __pcstackCOMMON:	
   259  0076                     ?_hienthi:	
   260  0076                     ??_hienthi:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0076                     ?_timer2_initialize:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0076                     ?_Count_Up:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0076                     ??_Count_Up:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0076                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275                           
   276                           ; 2 bytes @ 0x0
   277  0076                     	ds	5
   278                           
   279                           	psect	cstackBANK0
   280  0000                     __pcstackBANK0:	
   281  0000                     ??_timer2_initialize:	
   282  0000                     ??_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285                           
   286                           	psect	maintext
   287  0109                     __pmaintext:	
   288                           ; 1 bytes @ 0x0
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 135 in file "Led_7seg.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  2   87[None  ] int 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, pclath, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels required when called:    3
   314 ;; This function calls:
   315 ;;		_timer2_initialize
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _main
   323  0109                     _main:	
   324                           
   325                           ;Led_7seg.c: 137: TRISAbits.TRISA2=TRISAbits.TRISA3=TRISAbits.TRISA4=TRISAbits.TRISA5=1 
      +                          ;
   326                           
   327                           ;incstack = 0
   328                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   329  0109  1683               	bsf	3,5	;RP0=1, select bank1
   330  010A  1303               	bcf	3,6	;RP1=0, select bank1
   331  010B  1685               	bsf	5,5	;volatile
   332  010C  1E85               	btfss	5,5	;volatile
   333  010D  2912               	goto	u250
   334  010E  1683               	bsf	3,5	;RP0=1, select bank1
   335  010F  1303               	bcf	3,6	;RP1=0, select bank1
   336  0110  1605               	bsf	5,4	;volatile
   337  0111  2915               	goto	u264
   338  0112                     u250:	
   339  0112  1683               	bsf	3,5	;RP0=1, select bank1
   340  0113  1303               	bcf	3,6	;RP1=0, select bank1
   341  0114  1205               	bcf	5,4	;volatile
   342  0115                     u264:	
   343  0115  1E05               	btfss	5,4	;volatile
   344  0116  291B               	goto	u260
   345  0117  1683               	bsf	3,5	;RP0=1, select bank1
   346  0118  1303               	bcf	3,6	;RP1=0, select bank1
   347  0119  1585               	bsf	5,3	;volatile
   348  011A  291E               	goto	u274
   349  011B                     u260:	
   350  011B  1683               	bsf	3,5	;RP0=1, select bank1
   351  011C  1303               	bcf	3,6	;RP1=0, select bank1
   352  011D  1185               	bcf	5,3	;volatile
   353  011E                     u274:	
   354  011E  1D85               	btfss	5,3	;volatile
   355  011F  2924               	goto	u270
   356  0120  1683               	bsf	3,5	;RP0=1, select bank1
   357  0121  1303               	bcf	3,6	;RP1=0, select bank1
   358  0122  1505               	bsf	5,2	;volatile
   359  0123  2927               	goto	u284
   360  0124                     u270:	
   361  0124  1683               	bsf	3,5	;RP0=1, select bank1
   362  0125  1303               	bcf	3,6	;RP1=0, select bank1
   363  0126  1105               	bcf	5,2	;volatile
   364  0127                     u284:	
   365                           
   366                           ;Led_7seg.c: 138: TRISEbits.TRISE2=0;
   367  0127  1109               	bcf	9,2	;volatile
   368                           
   369                           ;Led_7seg.c: 139: TRISCbits.TRISC4=TRISCbits.TRISC5=TRISCbits.TRISC6=TRISCbits.TRISC7=0;
   370  0128  1387               	bcf	7,7	;volatile
   371  0129  1307               	bcf	7,6	;volatile
   372  012A  1287               	bcf	7,5	;volatile
   373  012B  1207               	bcf	7,4	;volatile
   374                           
   375                           ;Led_7seg.c: 140: TRISD=0;
   376  012C  0188               	clrf	8	;volatile
   377                           
   378                           ;Led_7seg.c: 142: timer2_initialize ();
   379  012D  120A  118A  20DC  120A  118A  	fcall	_timer2_initialize
   380  0132                     l88:	
   381                           ;Led_7seg.c: 143: while(1)
   382                           
   383                           
   384                           ;Led_7seg.c: 144: {
   385  0132  2932               	goto	l88
   386  0133                     __end_of_main:	
   387                           
   388                           	psect	text1
   389  00DC                     __ptext1:	
   390 ;; *************** function _timer2_initialize *****************
   391 ;; Defined at:
   392 ;;		line 79 in file "Led_7seg.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; Hardware stack levels required when called:    2
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _timer2_initialize
   422  00DC                     _timer2_initialize:	
   423                           
   424                           ;Led_7seg.c: 81: T2CKPS0=1;
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _timer2_initialize: [wreg]
   428  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   429  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   430  00DE  1412               	bsf	18,0	;volatile
   431                           
   432                           ;Led_7seg.c: 82: T2CKPS1=0;
   433  00DF  1092               	bcf	18,1	;volatile
   434                           
   435                           ;Led_7seg.c: 83: PR2=100;
   436  00E0  3064               	movlw	100
   437  00E1  1683               	bsf	3,5	;RP0=1, select bank1
   438  00E2  1303               	bcf	3,6	;RP1=0, select bank1
   439  00E3  0092               	movwf	18	;volatile
   440                           
   441                           ;Led_7seg.c: 84: TOUTPS0=TOUTPS1=TOUTPS2=TOUTPS2=1;
   442  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   443  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   444  00E6  1692               	bsf	18,5	;volatile
   445  00E7  1E92               	btfss	18,5	;volatile
   446  00E8  28ED               	goto	u210
   447  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   448  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   449  00EB  1692               	bsf	18,5	;volatile
   450  00EC  28F0               	goto	u224
   451  00ED                     u210:	
   452  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   453  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   454  00EF  1292               	bcf	18,5	;volatile
   455  00F0                     u224:	
   456  00F0  1E92               	btfss	18,5	;volatile
   457  00F1  28F6               	goto	u220
   458  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   459  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   460  00F4  1612               	bsf	18,4	;volatile
   461  00F5  28F9               	goto	u234
   462  00F6                     u220:	
   463  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   464  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   465  00F8  1212               	bcf	18,4	;volatile
   466  00F9                     u234:	
   467  00F9  1E12               	btfss	18,4	;volatile
   468  00FA  28FF               	goto	u230
   469  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   470  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   471  00FD  1592               	bsf	18,3	;volatile
   472  00FE  2902               	goto	l705
   473  00FF                     u230:	
   474  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   475  0100  1303               	bcf	3,6	;RP1=0, select bank0
   476  0101  1192               	bcf	18,3	;volatile
   477  0102                     l705:	
   478                           
   479                           ;Led_7seg.c: 85: TMR2ON=1;
   480  0102  1512               	bsf	18,2	;volatile
   481                           
   482                           ;Led_7seg.c: 86: TMR2IE=1;
   483  0103  1683               	bsf	3,5	;RP0=1, select bank1
   484  0104  1303               	bcf	3,6	;RP1=0, select bank1
   485  0105  148C               	bsf	12,1	;volatile
   486                           
   487                           ;Led_7seg.c: 87: PEIE=1;
   488  0106  170B               	bsf	11,6	;volatile
   489                           
   490                           ;Led_7seg.c: 88: GIE=1;
   491  0107  178B               	bsf	11,7	;volatile
   492  0108  0008               	return
   493  0109                     __end_of_timer2_initialize:	
   494                           
   495                           	psect	text2
   496  0039                     __ptext2:	
   497 ;; *************** function _Count_Up *****************
   498 ;; Defined at:
   499 ;;		line 91 in file "Led_7seg.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0
   515 ;;      Temps:          5       0       0       0       0
   516 ;;      Totals:         5       0       0       0       0
   517 ;;Total ram usage:        5 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		_hienthi
   522 ;; This function is called by:
   523 ;;		Interrupt level 1
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _Count_Up
   529  0039                     _Count_Up:	
   530                           
   531                           ;Led_7seg.c: 93: if (TMR2IE && TMR2IF)
   532  0039  1683               	bsf	3,5	;RP0=1, select bank1
   533  003A  1303               	bcf	3,6	;RP1=0, select bank1
   534  003B  1C8C               	btfss	12,1	;volatile
   535  003C  2890               	goto	i1l83
   536  003D  1283               	bcf	3,5	;RP0=0, select bank0
   537  003E  1303               	bcf	3,6	;RP1=0, select bank0
   538  003F  1C8C               	btfss	12,1	;volatile
   539  0040  2890               	goto	i1l83
   540                           
   541                           ;Led_7seg.c: 94: {
   542                           ;Led_7seg.c: 95: TMR2IF=0;
   543  0041  108C               	bcf	12,1	;volatile
   544                           
   545                           ;Led_7seg.c: 97: hienthi();
   546  0042  120A  118A  209C  120A  118A  	fcall	_hienthi
   547                           
   548                           ;Led_7seg.c: 98: ngin=1;
   549  0047  01F1               	clrf	_ngin
   550  0048  0AF1               	incf	_ngin,f
   551                           
   552                           ;Led_7seg.c: 99: tram=1;
   553  0049  01F2               	clrf	_tram
   554  004A  0AF2               	incf	_tram,f
   555                           
   556                           ;Led_7seg.c: 100: truc=1;
   557  004B  01F3               	clrf	_truc
   558  004C  0AF3               	incf	_truc,f
   559                           
   560                           ;Led_7seg.c: 101: donvi=1;
   561  004D  01F4               	clrf	_donvi
   562  004E  0AF4               	incf	_donvi,f
   563                           
   564                           ;Led_7seg.c: 102: digit++;
   565  004F  3001               	movlw	1
   566  0050  00F6               	movwf	??_Count_Up
   567  0051  0876               	movf	??_Count_Up,w
   568  0052  07F0               	addwf	_digit,f
   569                           
   570                           ;Led_7seg.c: 103: count++;
   571  0053  3001               	movlw	1
   572  0054  1283               	bcf	3,5	;RP0=0, select bank0
   573  0055  1303               	bcf	3,6	;RP1=0, select bank0
   574  0056  07A4               	addwf	_count,f
   575  0057  1803               	skipnc
   576  0058  0AA5               	incf	_count+1,f
   577  0059  3000               	movlw	0
   578  005A  07A5               	addwf	_count+1,f
   579                           
   580                           ;Led_7seg.c: 104: if(digit==4)
   581  005B  3004               	movlw	4
   582  005C  0670               	xorwf	_digit,w
   583  005D  1903               	btfsc	3,2
   584                           
   585                           ;Led_7seg.c: 105: digit=0;
   586  005E  01F0               	clrf	_digit
   587                           
   588                           ;Led_7seg.c: 106: if(count==500)
   589  005F  30F4               	movlw	244
   590  0060  0624               	xorwf	_count,w
   591  0061  1D03               	skipz
   592  0062  2890               	goto	i1l83
   593  0063  0325               	decf	_count+1,w
   594  0064  1D03               	btfss	3,2
   595  0065  2890               	goto	i1l83
   596                           
   597                           ;Led_7seg.c: 107: {
   598                           ;Led_7seg.c: 108: count=0;
   599  0066  01A4               	clrf	_count
   600  0067  01A5               	clrf	_count+1
   601                           
   602                           ;Led_7seg.c: 110: num++;
   603  0068  3001               	movlw	1
   604  0069  07AA               	addwf	_num,f
   605  006A  1803               	skipnc
   606  006B  0AAB               	incf	_num+1,f
   607  006C  3000               	movlw	0
   608  006D  07AB               	addwf	_num+1,f
   609                           
   610                           ;Led_7seg.c: 111: num=1235;
   611  006E  30D3               	movlw	211
   612  006F  00AA               	movwf	_num
   613  0070  3004               	movlw	4
   614  0071  00AB               	movwf	_num+1
   615                           
   616                           ;Led_7seg.c: 112: if(num==10000)
   617  0072  3010               	movlw	16
   618  0073  062A               	xorwf	_num,w
   619  0074  3027               	movlw	39
   620  0075  1903               	skipnz
   621  0076  062B               	xorwf	_num+1,w
   622  0077  1D03               	btfss	3,2
   623  0078  287B               	goto	i1l685
   624                           
   625                           ;Led_7seg.c: 113: num=0;
   626  0079  01AA               	clrf	_num
   627  007A  01AB               	clrf	_num+1
   628  007B                     i1l685:	
   629                           
   630                           ;Led_7seg.c: 114: ngin=1;
   631  007B  01F1               	clrf	_ngin
   632  007C  0AF1               	incf	_ngin,f
   633                           
   634                           ;Led_7seg.c: 115: tram=2;
   635  007D  3002               	movlw	2
   636  007E  00F6               	movwf	??_Count_Up
   637  007F  0876               	movf	??_Count_Up,w
   638  0080  00F2               	movwf	_tram
   639                           
   640                           ;Led_7seg.c: 116: truc=4;
   641  0081  3004               	movlw	4
   642  0082  00F6               	movwf	??_Count_Up
   643  0083  0876               	movf	??_Count_Up,w
   644  0084  00F3               	movwf	_truc
   645                           
   646                           ;Led_7seg.c: 117: donvi=5;
   647  0085  3005               	movlw	5
   648  0086  00F6               	movwf	??_Count_Up
   649  0087  0876               	movf	??_Count_Up,w
   650  0088  00F4               	movwf	_donvi
   651                           
   652                           ;Led_7seg.c: 126: bLed=~bLed;
   653  0089  09F5               	comf	_bLed,f
   654                           
   655                           ;Led_7seg.c: 127: if(bLed)
   656  008A  0875               	movf	_bLed,w
   657  008B  1903               	btfsc	3,2
   658  008C  288F               	goto	i1l81
   659                           
   660                           ;Led_7seg.c: 128: PORTEbits.RE2=1;
   661  008D  1509               	bsf	9,2	;volatile
   662  008E  2890               	goto	i1l83
   663  008F                     i1l81:	
   664                           
   665                           ;Led_7seg.c: 129: else
   666                           ;Led_7seg.c: 130: PORTEbits.RE2=0;
   667  008F  1109               	bcf	9,2	;volatile
   668  0090                     i1l83:	
   669  0090  087A               	movf	??_Count_Up+4,w
   670  0091  1283               	bcf	3,5	;RP0=0, select bank0
   671  0092  00FF               	movwf	127
   672  0093  0879               	movf	??_Count_Up+3,w
   673  0094  008A               	movwf	10
   674  0095  0878               	movf	??_Count_Up+2,w
   675  0096  0084               	movwf	4
   676  0097  0E77               	swapf	(??_Count_Up+1)^(0+-128),w
   677  0098  0083               	movwf	3
   678  0099  0EFE               	swapf	126,f
   679  009A  0E7E               	swapf	126,w
   680  009B  0009               	retfie
   681  009C                     __end_of_Count_Up:	
   682                           
   683                           	psect	intentry
   684  0004                     __pintentry:	
   685                           ;incstack = 0
   686                           ; Regs used in _Count_Up: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   687                           
   688  0004                     interrupt_function:	
   689  007E                     saved_w	set	btemp
   690  0004  00FE               	movwf	btemp
   691  0005  0E03               	swapf	3,w
   692  0006  00F7               	movwf	??_Count_Up+1
   693  0007  0804               	movf	4,w
   694  0008  00F8               	movwf	??_Count_Up+2
   695  0009  080A               	movf	10,w
   696  000A  00F9               	movwf	??_Count_Up+3
   697  000B  1283               	bcf	3,5	;RP0=0, select bank0
   698  000C  1303               	bcf	3,6	;RP1=0, select bank0
   699  000D  087F               	movf	btemp+1,w
   700  000E  00FA               	movwf	??_Count_Up+4
   701  000F  120A  118A  2839   	ljmp	_Count_Up
   702                           
   703                           	psect	text3
   704  009C                     __ptext3:	
   705 ;; *************** function _hienthi *****************
   706 ;; Defined at:
   707 ;;		line 52 in file "Led_7seg.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0
   724 ;;      Totals:         0       0       0       0       0
   725 ;;Total ram usage:        0 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_Count_Up
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _hienthi
   736  009C                     _hienthi:	
   737                           
   738                           ;Led_7seg.c: 54: PORTD=0xff;
   739                           
   740                           ;incstack = 0
   741                           ; Regs used in _hienthi: [wreg-fsr0h+status,2+status,0]
   742  009C  30FF               	movlw	255
   743  009D  1283               	bcf	3,5	;RP0=0, select bank0
   744  009E  1303               	bcf	3,6	;RP1=0, select bank0
   745  009F  0088               	movwf	8	;volatile
   746                           
   747                           ;Led_7seg.c: 55: switch (digit)
   748  00A0  28CD               	goto	i1l647
   749  00A1                     i1l66:	
   750                           ;Led_7seg.c: 56: {
   751                           ;Led_7seg.c: 57: case 0:
   752                           
   753                           
   754                           ;Led_7seg.c: 59: PORTCbits.RC6=1;PORTCbits.RC4=0;PORTCbits.RC5=1;PORTCbits.RC6=1;
   755  00A1  1707               	bsf	7,6	;volatile
   756  00A2  1207               	bcf	7,4	;volatile
   757  00A3  1687               	bsf	7,5	;volatile
   758  00A4  1707               	bsf	7,6	;volatile
   759                           
   760                           ;Led_7seg.c: 60: PORTD=number[ngin];
   761  00A5  0871               	movf	_ngin,w
   762  00A6  3E2E               	addlw	(low (_number| 0))& (0+255)
   763  00A7  0084               	movwf	4
   764  00A8  1383               	bcf	3,7	;select IRP bank0
   765  00A9  0800               	movf	0,w
   766  00AA  0088               	movwf	8	;volatile
   767                           
   768                           ;Led_7seg.c: 61: break;
   769  00AB  0008               	return
   770  00AC                     i1l68:	
   771                           ;Led_7seg.c: 62: case 1:
   772                           
   773                           
   774                           ;Led_7seg.c: 64: PORTCbits.RC4=1;PORTCbits.RC5=0;PORTCbits.RC6=1;PORTCbits.RC7=1;
   775  00AC  1607               	bsf	7,4	;volatile
   776  00AD  1287               	bcf	7,5	;volatile
   777  00AE  1707               	bsf	7,6	;volatile
   778  00AF  1787               	bsf	7,7	;volatile
   779                           
   780                           ;Led_7seg.c: 65: PORTD=number[tram];
   781  00B0  0872               	movf	_tram,w
   782  00B1  3E2E               	addlw	(low (_number| 0))& (0+255)
   783  00B2  0084               	movwf	4
   784  00B3  1383               	bcf	3,7	;select IRP bank0
   785  00B4  0800               	movf	0,w
   786  00B5  0088               	movwf	8	;volatile
   787                           
   788                           ;Led_7seg.c: 66: break;
   789  00B6  0008               	return
   790  00B7                     i1l69:	
   791                           ;Led_7seg.c: 67: case 2:
   792                           
   793                           
   794                           ;Led_7seg.c: 69: PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=0;PORTCbits.RC7=1;
   795  00B7  1607               	bsf	7,4	;volatile
   796  00B8  1687               	bsf	7,5	;volatile
   797  00B9  1307               	bcf	7,6	;volatile
   798  00BA  1787               	bsf	7,7	;volatile
   799                           
   800                           ;Led_7seg.c: 70: PORTD=number[truc];
   801  00BB  0873               	movf	_truc,w
   802  00BC  3E2E               	addlw	(low (_number| 0))& (0+255)
   803  00BD  0084               	movwf	4
   804  00BE  1383               	bcf	3,7	;select IRP bank0
   805  00BF  0800               	movf	0,w
   806  00C0  0088               	movwf	8	;volatile
   807                           
   808                           ;Led_7seg.c: 71: break;
   809  00C1  0008               	return
   810  00C2                     i1l70:	
   811                           ;Led_7seg.c: 72: case 3:
   812                           
   813                           
   814                           ;Led_7seg.c: 74: PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=1;PORTCbits.RC7=0;
   815  00C2  1607               	bsf	7,4	;volatile
   816  00C3  1687               	bsf	7,5	;volatile
   817  00C4  1707               	bsf	7,6	;volatile
   818  00C5  1387               	bcf	7,7	;volatile
   819                           
   820                           ;Led_7seg.c: 75: PORTD=number[donvi];
   821  00C6  0874               	movf	_donvi,w
   822  00C7  3E2E               	addlw	(low (_number| 0))& (0+255)
   823  00C8  0084               	movwf	4
   824  00C9  1383               	bcf	3,7	;select IRP bank0
   825  00CA  0800               	movf	0,w
   826  00CB  0088               	movwf	8	;volatile
   827                           
   828                           ;Led_7seg.c: 76: }
   829  00CC  0008               	return
   830  00CD                     i1l647:	
   831  00CD  0870               	movf	_digit,w
   832                           
   833                           ; Switch size 1, requested type "space"
   834                           ; Number of cases is 4, Range of values is 0 to 3
   835                           ; switch strategies available:
   836                           ; Name         Instructions Cycles
   837                           ; simple_byte           13     7 (average)
   838                           ; direct_byte           20     8 (fixed)
   839                           ; jumptable            260     6 (fixed)
   840                           ;	Chosen strategy is simple_byte
   841  00CE  3A00               	xorlw	0	; case 0
   842  00CF  1903               	skipnz
   843  00D0  28A1               	goto	i1l66
   844  00D1  3A01               	xorlw	1	; case 1
   845  00D2  1903               	skipnz
   846  00D3  28AC               	goto	i1l68
   847  00D4  3A03               	xorlw	3	; case 2
   848  00D5  1903               	skipnz
   849  00D6  28B7               	goto	i1l69
   850  00D7  3A01               	xorlw	1	; case 3
   851  00D8  1903               	skipnz
   852  00D9  28C2               	goto	i1l70
   853  00DA  28DB               	goto	i1l71
   854  00DB                     i1l71:	
   855  00DB  0008               	return
   856  00DC                     __end_of_hienthi:	
   857  007E                     btemp	set	126	;btemp
   858  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Count_Up in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Count_Up in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Count_Up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_Up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_Up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _timer2_initialize
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Count_Up                                             5     5      0       0
                                              0 COMMON     5     5      0
                            _hienthi
 ---------------------------------------------------------------------------------
 (3) _hienthi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer2_initialize

 _Count_Up (ROOT)
   _hienthi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 25 16:50:05 2020

                         _i 002C                           _j 0028                           _k 0020  
                         pc 0002                 __CFG_CP$OFF 0000                          l88 0132  
                        fsr 0004                 __CFG_LVP$ON 0000                         l705 0102  
                       _GIE 005F                         u210 00ED                         u220 00F6  
                       u230 00FF                         u224 00F0                         u234 00F9  
                       u250 0112                         u260 011B                         u270 0124  
                       _PR2 0092                         u264 0115                         u274 011E  
              __CFG_CPD$OFF 0000                         u284 0127                         _num 002A  
                       fsr0 0004                         indf 0000                __CFG_FOSC$XT 0000  
                      _PEIE 005E                        i1l70 00C2                        i1l71 00DB  
                      i1l81 008F                        i1l66 00A1                        i1l83 0090  
                      i1l68 00AC                        i1l69 00B7                __CFG_WRT$OFF 0000  
                      _bLed 0075                        _main 0109                        _ngin 0071  
                      _tram 0072                        btemp 007E                        _truc 0073  
             __CFG_BOREN$ON 0000                        start 0012                       ?_main 0076  
             __CFG_WDTE$OFF 0000                       i1l647 00CD                       i1l685 007B  
                     _PORTD 0008                       _TRISD 0088               __CFG_PWRTE$ON 0000  
           __end_of_hienthi 00DC                       _delay 0026                       _digit 0070  
                     _donvi 0074                       _count 0024                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 0015  
              __end_of_main 0133            __end_of_Count_Up 009C                      ??_main 0000  
                    _TMR2IE 0461                      _TMR2IF 0061                      _TMR2ON 0092  
                    _number 002E                   ??_hienthi 0076                      saved_w 007E  
   __end_of__initialization 0035              __pcstackCOMMON 0076                __pidataBANK0 0144  
                __pbssBANK0 0020                   ?_Count_Up 0076                  __pmaintext 0109  
                __pintentry 0004                     _T2CKPS0 0090                     _T2CKPS1 0091  
                   _TOUTPS0 0093                     _TOUTPS1 0094                     _TOUTPS2 0095  
                ??_Count_Up 0076           _timer2_initialize 00DC                     __ptext1 00DC  
                   __ptext2 0039                     __ptext3 009C          ?_timer2_initialize 0076  
                   _hienthi 009C         ??_timer2_initialize 0000        end_of_initialization 0035  
 __end_of_timer2_initialize 0109                   _PORTCbits 0007                   _PORTEbits 0009  
                 _TRISAbits 0085                   _TRISCbits 0087                   _TRISEbits 0089  
       start_initialization 0015           __size_of_Count_Up 0063  __size_of_timer2_initialize 002D  
                init_fetch0 0133                 __pdataBANK0 002E                 __pbssCOMMON 0070  
                 ___latbits 0002               __pcstackBANK0 0000                    ?_hienthi 0076  
         interrupt_function 0004                    _Count_Up 0039            __size_of_hienthi 0040  
             __size_of_main 002A                    init_ram0 0137                    intlevel1 0000  
