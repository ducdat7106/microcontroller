

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Sep 13 16:40:12 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179  01E4                     __pidataBANK0:
   180                           
   181                           ;initializer for _number
   182  01E4  34C0               	retlw	192
   183  01E5  34F9               	retlw	249
   184  01E6  34A4               	retlw	164
   185  01E7  34B0               	retlw	176
   186  01E8  3499               	retlw	153
   187  01E9  3492               	retlw	146
   188  01EA  3482               	retlw	130
   189  01EB  34F8               	retlw	248
   190  01EC  3480               	retlw	128
   191  01ED  3490               	retlw	144
   192  0009                     _PORTEbits	set	9
   193  0007                     _PORTCbits	set	7
   194  0008                     _PORTD	set	8
   195  0061                     _TMR2IF	set	97
   196  005F                     _GIE	set	95
   197  005E                     _PEIE	set	94
   198  0092                     _TMR2ON	set	146
   199  0095                     _TOUTPS2	set	149
   200  0094                     _TOUTPS1	set	148
   201  0093                     _TOUTPS0	set	147
   202  0091                     _T2CKPS1	set	145
   203  0090                     _T2CKPS0	set	144
   204  0088                     _TRISD	set	136
   205  0087                     _TRISCbits	set	135
   206  0089                     _TRISEbits	set	137
   207  0085                     _TRISAbits	set	133
   208  0092                     _PR2	set	146
   209  0461                     _TMR2IE	set	1121
   210                           
   211                           	psect	cinit
   212  0011                     start_initialization:	
   213                           ; #config settings
   214                           
   215  0011                     __initialization:
   216                           
   217                           ; Initialize objects allocated to BANK0
   218  0011  1383               	bcf	3,7	;select IRP bank0
   219  0012  303E               	movlw	low (__pdataBANK0+10)
   220  0013  00FD               	movwf	btemp+-1
   221  0014  3001               	movlw	high __pidataBANK0
   222  0015  00FE               	movwf	btemp
   223  0016  30E4               	movlw	low __pidataBANK0
   224  0017  00FF               	movwf	btemp+1
   225  0018  3034               	movlw	low __pdataBANK0
   226  0019  0084               	movwf	4
   227  001A  120A  118A  21D7  120A  118A  	fcall	init_ram0
   228                           
   229                           ; Clear objects allocated to BANK0
   230  001F  3020               	movlw	low __pbssBANK0
   231  0020  0084               	movwf	4
   232  0021  3034               	movlw	low (__pbssBANK0+20)
   233  0022  120A  118A  21EE   	fcall	clear_ram0
   234                           
   235                           ; Clear objects allocated to COMMON
   236  0025  01FC               	clrf	__pbssCOMMON& (0+127)
   237  0026  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   238  0027                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  0027                     __end_of__initialization:
   242  0027  0183               	clrf	3
   243  0028  120A  118A  29C1   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMMON
   246  007C                     __pbssCOMMON:
   247  007C                     _digit:
   248  007C                     	ds	1
   249  007D                     _bLed:
   250  007D                     	ds	1
   251                           
   252                           	psect	bssBANK0
   253  0020                     __pbssBANK0:
   254  0020                     _k:
   255  0020                     	ds	4
   256  0024                     _count_s:
   257  0024                     	ds	2
   258  0026                     _count:
   259  0026                     	ds	2
   260  0028                     _delay:
   261  0028                     	ds	2
   262  002A                     _j:
   263  002A                     	ds	2
   264  002C                     _num:
   265  002C                     	ds	2
   266  002E                     _i:
   267  002E                     	ds	2
   268  0030                     _ngin:
   269  0030                     	ds	1
   270  0031                     _tram:
   271  0031                     	ds	1
   272  0032                     _truc:
   273  0032                     	ds	1
   274  0033                     _donvi:
   275  0033                     	ds	1
   276                           
   277                           	psect	dataBANK0
   278  0034                     __pdataBANK0:
   279  0034                     _number:
   280  0034                     	ds	10
   281                           
   282                           	psect	inittext
   283  01D3                     init_fetch0:	
   284                           ;	Called with low address in FSR and high address in W
   285                           
   286  01D3  087E               	movf	126,w
   287  01D4  008A               	movwf	10
   288  01D5  087F               	movf	127,w
   289  01D6  0082               	movwf	2
   290  01D7                     init_ram0:	
   291                           ;Called with:
   292                           ;	high address of idata address in btemp 
   293                           ;	low address of idata address in btemp+1 
   294                           ;	low address of data in FSR
   295                           ;	high address + 1 of data in btemp-1
   296                           
   297  01D7  21D3  120A  118A   	fcall	init_fetch0
   298  01DA  0080               	movwf	0
   299  01DB  0A84               	incf	4,f
   300  01DC  0804               	movf	4,w
   301  01DD  067D               	xorwf	125,w
   302  01DE  1903               	btfsc	3,2
   303  01DF  3400               	retlw	0
   304  01E0  0AFF               	incf	127,f
   305  01E1  1903               	btfsc	3,2
   306  01E2  0AFE               	incf	126,f
   307  01E3  29D7               	goto	init_ram0
   308                           
   309                           	psect	clrtext
   310  01EE                     clear_ram0:	
   311                           ;	Called with FSR containing the base address, and
   312                           ;	W with the last address+1
   313                           
   314  01EE  0064               	clrwdt	;clear the watchdog before getting into this loop
   315  01EF                     clrloop0:
   316  01EF  0180               	clrf	0	;clear RAM location pointed to by FSR
   317  01F0  0A84               	incf	4,f	;increment pointer
   318  01F1  0604               	xorwf	4,w	;XOR with final address
   319  01F2  1903               	btfsc	3,2	;have we reached the end yet?
   320  01F3  3400               	retlw	0	;all done for this memory range, return
   321  01F4  0604               	xorwf	4,w	;XOR again to restore value
   322  01F5  29EF               	goto	clrloop0	;do the next byte
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:
   326  0070                     ?_hienthi:
   327  0070                     ??_hienthi:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_timer2_initialize:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_Count_up:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?___lwdiv:	
   340                           ; 2 bytes @ 0x0
   341                           
   342  0070                     ?___lwmod:	
   343                           ; 2 bytes @ 0x0
   344                           
   345  0070                     ___lwdiv@divisor:	
   346                           ; 2 bytes @ 0x0
   347                           
   348  0070                     ___lwmod@divisor:	
   349                           ; 2 bytes @ 0x0
   350                           
   351                           
   352                           ; 2 bytes @ 0x0
   353  0070                     	ds	2
   354  0072                     ___lwdiv@dividend:
   355  0072                     ___lwmod@dividend:	
   356                           ; 2 bytes @ 0x2
   357                           
   358                           
   359                           ; 2 bytes @ 0x2
   360  0072                     	ds	2
   361  0074                     ??___lwdiv:
   362  0074                     ??___lwmod:	
   363                           ; 1 bytes @ 0x4
   364                           
   365                           
   366                           ; 1 bytes @ 0x4
   367  0074                     	ds	1
   368  0075                     ___lwmod@counter:
   369  0075                     ___lwdiv@quotient:	
   370                           ; 1 bytes @ 0x5
   371                           
   372                           
   373                           ; 2 bytes @ 0x5
   374  0075                     	ds	2
   375  0077                     ___lwdiv@counter:
   376                           
   377                           ; 1 bytes @ 0x7
   378  0077                     	ds	1
   379  0078                     ??_Count_up:
   380                           
   381                           ; 1 bytes @ 0x8
   382  0078                     	ds	4
   383                           
   384                           	psect	cstackBANK0
   385  0000                     __pcstackBANK0:
   386  0000                     ??_timer2_initialize:
   387  0000                     ??_main:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           	psect	maintext
   392  01C1                     __pmaintext:	
   393                           ; 1 bytes @ 0x0
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 133 in file "Led_7seg.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2   92[None  ] int 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, pclath, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : B00/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called:    3
   419 ;; This function calls:
   420 ;;		_timer2_initialize
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  01C1                     _main:
   429                           
   430                           ;Led_7seg.c: 135:     TRISAbits.TRISA2=1;;Led_7seg.c: 135:     TRISAbits.TRISA2=1;
   431                           
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   434  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   435  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   436  01C3  1505               	bsf	5,2	;volatile
   437                           
   438                           ;Led_7seg.c: 136:     TRISAbits.TRISA3=1;;Led_7seg.c: 136:     TRISAbits.TRISA3=1;
   439  01C4  1585               	bsf	5,3	;volatile
   440                           
   441                           ;Led_7seg.c: 137:     TRISAbits.TRISA4=1;;Led_7seg.c: 137:     TRISAbits.TRISA4=1;
   442  01C5  1605               	bsf	5,4	;volatile
   443                           
   444                           ;Led_7seg.c: 138:     TRISAbits.TRISA5=1 ;;Led_7seg.c: 138:     TRISAbits.TRISA5=1 ;
   445  01C6  1685               	bsf	5,5	;volatile
   446                           
   447                           ;Led_7seg.c: 139:     TRISEbits.TRISE2=0;;Led_7seg.c: 139:     TRISEbits.TRISE2=0;
   448  01C7  1109               	bcf	9,2	;volatile
   449                           
   450                           ;Led_7seg.c: 140:     TRISCbits.TRISC4=0;;Led_7seg.c: 140:     TRISCbits.TRISC4=0;
   451  01C8  1207               	bcf	7,4	;volatile
   452                           
   453                           ;Led_7seg.c: 141:     TRISCbits.TRISC5=0;;Led_7seg.c: 141:     TRISCbits.TRISC5=0;
   454  01C9  1287               	bcf	7,5	;volatile
   455                           
   456                           ;Led_7seg.c: 142:     TRISCbits.TRISC6=0;;Led_7seg.c: 142:     TRISCbits.TRISC6=0;
   457  01CA  1307               	bcf	7,6	;volatile
   458                           
   459                           ;Led_7seg.c: 143:     TRISCbits.TRISC7=0;;Led_7seg.c: 143:     TRISCbits.TRISC7=0;
   460  01CB  1387               	bcf	7,7	;volatile
   461                           
   462                           ;Led_7seg.c: 144:     TRISD=0;;Led_7seg.c: 144:     TRISD=0;
   463  01CC  0188               	clrf	8	;volatile
   464                           
   465                           ;Led_7seg.c: 146:     timer2_initialize ();;Led_7seg.c: 146:     timer2_initialize ();
   466  01CD  120A  118A  21AC  120A  118A  	fcall	_timer2_initialize
   467  01D2                     l93:	
   468                           ;Led_7seg.c: 147:  while(1);Led_7seg.c: 147:  while(1)
   469                           
   470                           
   471                           ;Led_7seg.c: 148:  {;Led_7seg.c: 148:  {;Led_7seg.c: 150:     };Led_7seg.c: 150:     }
   472  01D2  29D2               	goto	l93
   473  01D3                     __end_of_main:
   474                           
   475                           	psect	text1
   476  01AC                     __ptext1:	
   477 ;; *************** function _timer2_initialize *****************
   478 ;; Defined at:
   479 ;;		line 79 in file "Led_7seg.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    2
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _timer2_initialize
   509  01AC                     _timer2_initialize:
   510                           
   511                           ;Led_7seg.c: 81:     T2CKPS0=1;;Led_7seg.c: 81:     T2CKPS0=1;
   512                           
   513                           ;incstack = 0
   514                           ; Regs used in _timer2_initialize: [wreg]
   515  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   516  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   517  01AE  1412               	bsf	18,0	;volatile
   518                           
   519                           ;Led_7seg.c: 82:     T2CKPS1=0;;Led_7seg.c: 82:     T2CKPS1=0;
   520  01AF  1092               	bcf	18,1	;volatile
   521                           
   522                           ;Led_7seg.c: 83:     PR2=100;;Led_7seg.c: 83:     PR2=100;
   523  01B0  3064               	movlw	100
   524  01B1  1683               	bsf	3,5	;RP0=1, select bank1
   525  01B2  1303               	bcf	3,6	;RP1=0, select bank1
   526  01B3  0092               	movwf	18	;volatile
   527                           
   528                           ;Led_7seg.c: 84:     TOUTPS0=1;;Led_7seg.c: 84:     TOUTPS0=1;
   529  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   530  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   531  01B6  1592               	bsf	18,3	;volatile
   532                           
   533                           ;Led_7seg.c: 85:     TOUTPS1=1;;Led_7seg.c: 85:     TOUTPS1=1;
   534  01B7  1612               	bsf	18,4	;volatile
   535                           
   536                           ;Led_7seg.c: 86:     TOUTPS2=1;;Led_7seg.c: 86:     TOUTPS2=1;
   537  01B8  1692               	bsf	18,5	;volatile
   538                           
   539                           ;Led_7seg.c: 87:     TOUTPS2=1;;Led_7seg.c: 87:     TOUTPS2=1;
   540  01B9  1692               	bsf	18,5	;volatile
   541                           
   542                           ;Led_7seg.c: 88:     TMR2ON=1;;Led_7seg.c: 88:     TMR2ON=1;
   543  01BA  1512               	bsf	18,2	;volatile
   544                           
   545                           ;Led_7seg.c: 89:     TMR2IE=1;;Led_7seg.c: 89:     TMR2IE=1;
   546  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   547  01BC  1303               	bcf	3,6	;RP1=0, select bank1
   548  01BD  148C               	bsf	12,1	;volatile
   549                           
   550                           ;Led_7seg.c: 90:     PEIE=1;;Led_7seg.c: 90:     PEIE=1;
   551  01BE  170B               	bsf	11,6	;volatile
   552                           
   553                           ;Led_7seg.c: 91:     GIE=1;;Led_7seg.c: 91:     GIE=1;
   554  01BF  178B               	bsf	11,7	;volatile
   555  01C0  0008               	return
   556  01C1                     __end_of_timer2_initialize:
   557                           
   558                           	psect	text2
   559  002B                     __ptext2:	
   560 ;; *************** function _Count_up *****************
   561 ;; Defined at:
   562 ;;		line 94 in file "Led_7seg.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          4       0       0       0       0
   579 ;;      Totals:         4       0       0       0       0
   580 ;;Total ram usage:        4 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    1
   583 ;; This function calls:
   584 ;;		___lwdiv
   585 ;;		___lwmod
   586 ;;		_hienthi
   587 ;; This function is called by:
   588 ;;		Interrupt level 1
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _Count_up
   594  002B                     _Count_up:
   595                           
   596                           ;Led_7seg.c: 96: if (TMR2IE && TMR2IF);Led_7seg.c: 96: if (TMR2IE && TMR2IF)
   597  002B  1683               	bsf	3,5	;RP0=1, select bank1
   598  002C  1303               	bcf	3,6	;RP1=0, select bank1
   599  002D  1C8C               	btfss	12,1	;volatile
   600  002E  28ED               	goto	i1l88
   601  002F  1283               	bcf	3,5	;RP0=0, select bank0
   602  0030  1303               	bcf	3,6	;RP1=0, select bank0
   603  0031  1C8C               	btfss	12,1	;volatile
   604  0032  28ED               	goto	i1l88
   605                           
   606                           ;Led_7seg.c: 97: {;Led_7seg.c: 97: {;Led_7seg.c: 98:   TMR2IF=0;;Led_7seg.c: 98:   TMR2I
      +                          F=0;
   607  0033  108C               	bcf	12,1	;volatile
   608                           
   609                           ;Led_7seg.c: 99:     count++;;Led_7seg.c: 99:     count++;
   610  0034  3001               	movlw	1
   611  0035  07A6               	addwf	_count,f
   612  0036  1803               	skipnc
   613  0037  0AA7               	incf	_count+1,f
   614  0038  3000               	movlw	0
   615  0039  07A7               	addwf	_count+1,f
   616                           
   617                           ;Led_7seg.c: 101:   if(count==5);Led_7seg.c: 101:   if(count==5)
   618  003A  3005               	movlw	5
   619  003B  0626               	xorwf	_count,w
   620  003C  0427               	iorwf	_count+1,w
   621  003D  1D03               	btfss	3,2
   622  003E  28ED               	goto	i1l88
   623                           
   624                           ;Led_7seg.c: 102:   {;Led_7seg.c: 102:   {;Led_7seg.c: 103:       count=0;;Led_7seg.c: 1
      +                          03:       count=0;
   625  003F  01A6               	clrf	_count
   626  0040  01A7               	clrf	_count+1
   627                           
   628                           ;Led_7seg.c: 104:       hienthi();;Led_7seg.c: 104:       hienthi();
   629  0041  120A  118A  20F6  120A  118A  	fcall	_hienthi
   630                           
   631                           ;Led_7seg.c: 105:       digit++;;Led_7seg.c: 105:       digit++;
   632  0046  3001               	movlw	1
   633  0047  00F8               	movwf	??_Count_up
   634  0048  0878               	movf	??_Count_up,w
   635  0049  07FC               	addwf	_digit,f
   636                           
   637                           ;Led_7seg.c: 106:       if(digit==4);Led_7seg.c: 106:       if(digit==4)
   638  004A  3004               	movlw	4
   639  004B  067C               	xorwf	_digit,w
   640  004C  1903               	btfsc	3,2
   641                           
   642                           ;Led_7seg.c: 107:         digit=0;;Led_7seg.c: 107:         digit=0;
   643  004D  01FC               	clrf	_digit
   644                           
   645                           ;Led_7seg.c: 108:       count_s++;;Led_7seg.c: 108:       count_s++;
   646  004E  3001               	movlw	1
   647  004F  1283               	bcf	3,5	;RP0=0, select bank0
   648  0050  1303               	bcf	3,6	;RP1=0, select bank0
   649  0051  07A4               	addwf	_count_s,f
   650  0052  1803               	skipnc
   651  0053  0AA5               	incf	_count_s+1,f
   652  0054  3000               	movlw	0
   653  0055  07A5               	addwf	_count_s+1,f
   654                           
   655                           ;Led_7seg.c: 109:       if(count_s==250);Led_7seg.c: 109:       if(count_s==250)
   656  0056  30FA               	movlw	250
   657  0057  0624               	xorwf	_count_s,w
   658  0058  0425               	iorwf	_count_s+1,w
   659  0059  1D03               	btfss	3,2
   660  005A  285D               	goto	i1l897
   661                           
   662                           ;Led_7seg.c: 110:           count_s=0;;Led_7seg.c: 110:           count_s=0;
   663  005B  01A4               	clrf	_count_s
   664  005C  01A5               	clrf	_count_s+1
   665  005D                     i1l897:
   666                           
   667                           ;Led_7seg.c: 111:       {;Led_7seg.c: 111:       {;Led_7seg.c: 112:       num++;;Led_7se
      +                          g.c: 112:       num++;
   668  005D  3001               	movlw	1
   669  005E  07AC               	addwf	_num,f
   670  005F  1803               	skipnc
   671  0060  0AAD               	incf	_num+1,f
   672  0061  3000               	movlw	0
   673  0062  07AD               	addwf	_num+1,f
   674                           
   675                           ;Led_7seg.c: 114:        if(num==10000);Led_7seg.c: 114:        if(num==10000)
   676  0063  3010               	movlw	16
   677  0064  062C               	xorwf	_num,w
   678  0065  3027               	movlw	39
   679  0066  1903               	skipnz
   680  0067  062D               	xorwf	_num+1,w
   681  0068  1D03               	btfss	3,2
   682  0069  286C               	goto	i1l903
   683                           
   684                           ;Led_7seg.c: 115:          num=0;;Led_7seg.c: 115:          num=0;
   685  006A  01AC               	clrf	_num
   686  006B  01AD               	clrf	_num+1
   687  006C                     i1l903:
   688                           
   689                           ;Led_7seg.c: 117:       ngin=num/1000;;Led_7seg.c: 117:       ngin=num/1000;
   690  006C  30E8               	movlw	232
   691  006D  00F0               	movwf	___lwdiv@divisor
   692  006E  3003               	movlw	3
   693  006F  00F1               	movwf	___lwdiv@divisor+1
   694  0070  082D               	movf	_num+1,w
   695  0071  00F3               	movwf	___lwdiv@dividend+1
   696  0072  082C               	movf	_num,w
   697  0073  00F2               	movwf	___lwdiv@dividend
   698  0074  120A  118A  213E  120A  118A  	fcall	___lwdiv
   699  0079  0870               	movf	?___lwdiv,w
   700  007A  00F8               	movwf	??_Count_up
   701  007B  0878               	movf	??_Count_up,w
   702  007C  1283               	bcf	3,5	;RP0=0, select bank0
   703  007D  1303               	bcf	3,6	;RP1=0, select bank0
   704  007E  00B0               	movwf	_ngin
   705                           
   706                           ;Led_7seg.c: 118:        j=num%1000;;Led_7seg.c: 118:        j=num%1000;
   707  007F  30E8               	movlw	232
   708  0080  00F0               	movwf	___lwmod@divisor
   709  0081  3003               	movlw	3
   710  0082  00F1               	movwf	___lwmod@divisor+1
   711  0083  082D               	movf	_num+1,w
   712  0084  00F3               	movwf	___lwmod@dividend+1
   713  0085  082C               	movf	_num,w
   714  0086  00F2               	movwf	___lwmod@dividend
   715  0087  120A  118A  217A  120A  118A  	fcall	___lwmod
   716  008C  0871               	movf	?___lwmod+1,w
   717  008D  1283               	bcf	3,5	;RP0=0, select bank0
   718  008E  1303               	bcf	3,6	;RP1=0, select bank0
   719  008F  00AB               	movwf	_j+1
   720  0090  0870               	movf	?___lwmod,w
   721  0091  00AA               	movwf	_j
   722                           
   723                           ;Led_7seg.c: 119:         tram=j/100;;Led_7seg.c: 119:         tram=j/100;
   724  0092  3064               	movlw	100
   725  0093  00F0               	movwf	___lwdiv@divisor
   726  0094  3000               	movlw	0
   727  0095  00F1               	movwf	___lwdiv@divisor+1
   728  0096  082B               	movf	_j+1,w
   729  0097  00F3               	movwf	___lwdiv@dividend+1
   730  0098  082A               	movf	_j,w
   731  0099  00F2               	movwf	___lwdiv@dividend
   732  009A  120A  118A  213E  120A  118A  	fcall	___lwdiv
   733  009F  0870               	movf	?___lwdiv,w
   734  00A0  00F8               	movwf	??_Count_up
   735  00A1  0878               	movf	??_Count_up,w
   736  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   737  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   738  00A4  00B1               	movwf	_tram
   739                           
   740                           ;Led_7seg.c: 120:     j=j%100;;Led_7seg.c: 120:     j=j%100;
   741  00A5  3064               	movlw	100
   742  00A6  00F0               	movwf	___lwmod@divisor
   743  00A7  3000               	movlw	0
   744  00A8  00F1               	movwf	___lwmod@divisor+1
   745  00A9  082B               	movf	_j+1,w
   746  00AA  00F3               	movwf	___lwmod@dividend+1
   747  00AB  082A               	movf	_j,w
   748  00AC  00F2               	movwf	___lwmod@dividend
   749  00AD  120A  118A  217A  120A  118A  	fcall	___lwmod
   750  00B2  0871               	movf	?___lwmod+1,w
   751  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   752  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   753  00B5  00AB               	movwf	_j+1
   754  00B6  0870               	movf	?___lwmod,w
   755  00B7  00AA               	movwf	_j
   756                           
   757                           ;Led_7seg.c: 121:        truc=j/10;;Led_7seg.c: 121:        truc=j/10;
   758  00B8  300A               	movlw	10
   759  00B9  00F0               	movwf	___lwdiv@divisor
   760  00BA  3000               	movlw	0
   761  00BB  00F1               	movwf	___lwdiv@divisor+1
   762  00BC  082B               	movf	_j+1,w
   763  00BD  00F3               	movwf	___lwdiv@dividend+1
   764  00BE  082A               	movf	_j,w
   765  00BF  00F2               	movwf	___lwdiv@dividend
   766  00C0  120A  118A  213E  120A  118A  	fcall	___lwdiv
   767  00C5  0870               	movf	?___lwdiv,w
   768  00C6  00F8               	movwf	??_Count_up
   769  00C7  0878               	movf	??_Count_up,w
   770  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   771  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   772  00CA  00B2               	movwf	_truc
   773                           
   774                           ;Led_7seg.c: 122:        donvi=j%10;;Led_7seg.c: 122:        donvi=j%10;
   775  00CB  300A               	movlw	10
   776  00CC  00F0               	movwf	___lwmod@divisor
   777  00CD  3000               	movlw	0
   778  00CE  00F1               	movwf	___lwmod@divisor+1
   779  00CF  082B               	movf	_j+1,w
   780  00D0  00F3               	movwf	___lwmod@dividend+1
   781  00D1  082A               	movf	_j,w
   782  00D2  00F2               	movwf	___lwmod@dividend
   783  00D3  120A  118A  217A  120A  118A  	fcall	___lwmod
   784  00D8  0870               	movf	?___lwmod,w
   785  00D9  00F8               	movwf	??_Count_up
   786  00DA  0878               	movf	??_Count_up,w
   787  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   788  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   789  00DD  00B3               	movwf	_donvi
   790                           
   791                           ;Led_7seg.c: 123:       };Led_7seg.c: 123:       };Led_7seg.c: 124:    bLed=!bLed;;Led_7
      +                          seg.c: 124:    bLed=!bLed;
   792  00DE  087D               	movf	_bLed,w
   793  00DF  1D03               	btfss	3,2
   794  00E0  28E3               	goto	u42_20
   795  00E1  3001               	movlw	1
   796  00E2  28E4               	goto	u43_20
   797  00E3                     u42_20:
   798  00E3  3000               	movlw	0
   799  00E4                     u43_20:
   800  00E4  00F8               	movwf	??_Count_up
   801  00E5  0878               	movf	??_Count_up,w
   802  00E6  00FD               	movwf	_bLed
   803                           
   804                           ;Led_7seg.c: 125:       if(bLed);Led_7seg.c: 125:       if(bLed)
   805  00E7  087D               	movf	_bLed,w
   806  00E8  1903               	btfsc	3,2
   807  00E9  28EC               	goto	i1l86
   808                           
   809                           ;Led_7seg.c: 126:           PORTEbits.RE2=1;;Led_7seg.c: 126:           PORTEbits.RE2=1;
   810  00EA  1509               	bsf	9,2	;volatile
   811  00EB  28ED               	goto	i1l88
   812  00EC                     i1l86:	
   813                           ;Led_7seg.c: 127:       else;Led_7seg.c: 127:       else
   814                           
   815                           
   816                           ;Led_7seg.c: 128:           PORTEbits.RE2=0;;Led_7seg.c: 128:           PORTEbits.RE2=0;
   817  00EC  1109               	bcf	9,2	;volatile
   818  00ED                     i1l88:
   819  00ED  087B               	movf	??_Count_up+3,w
   820  00EE  008A               	movwf	10
   821  00EF  087A               	movf	??_Count_up+2,w
   822  00F0  0084               	movwf	4
   823  00F1  0E79               	swapf	??_Count_up+1,w
   824  00F2  0083               	movwf	3
   825  00F3  0EFE               	swapf	126,f
   826  00F4  0E7E               	swapf	126,w
   827  00F5  0009               	retfie
   828  00F6                     __end_of_Count_up:
   829                           
   830                           	psect	intentry
   831  0004                     __pintentry:	
   832                           ;incstack = 0
   833                           ; Regs used in _Count_up: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   834                           
   835  0004                     interrupt_function:
   836  007E                     saved_w	set	btemp
   837  0004  00FE               	movwf	btemp
   838  0005  0E03               	swapf	3,w
   839  0006  00F9               	movwf	??_Count_up+1
   840  0007  0804               	movf	4,w
   841  0008  00FA               	movwf	??_Count_up+2
   842  0009  080A               	movf	10,w
   843  000A  00FB               	movwf	??_Count_up+3
   844  000B  120A  118A  282B   	ljmp	_Count_up
   845                           
   846                           	psect	text3
   847  00F6                     __ptext3:	
   848 ;; *************** function _hienthi *****************
   849 ;; Defined at:
   850 ;;		line 52 in file "Led_7seg.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_Count_up
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _hienthi
   879  00F6                     _hienthi:
   880                           
   881                           ;Led_7seg.c: 54:      PORTD=0xff;;Led_7seg.c: 54:      PORTD=0xff;
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _hienthi: [wreg-fsr0h+status,2+status,0]
   885  00F6  30FF               	movlw	255
   886  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   887  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   888  00F9  0088               	movwf	8	;volatile
   889                           
   890                           ;Led_7seg.c: 55:     switch (digit);Led_7seg.c: 55:     switch (digit)
   891  00FA  2927               	goto	i1l797
   892  00FB                     i1l68:	
   893                           ;Led_7seg.c: 56:     {;Led_7seg.c: 56:     {;Led_7seg.c: 57:        case 0:;Led_7seg.c: 
      +                          57:        case 0:
   894                           
   895                           
   896                           ;Led_7seg.c: 59:         PORTCbits.RC7=1;PORTCbits.RC4=0;PORTCbits.RC5=1;PORTCbits.RC6=1
      +                          ;;Led_7seg.c: 59:         PORTCbits.RC7=1;PORTCbits.RC4=0;PORTCbits.RC5=1;PORTCbits.RC6=
      +                          1;
   897  00FB  1787               	bsf	7,7	;volatile
   898  00FC  1207               	bcf	7,4	;volatile
   899  00FD  1687               	bsf	7,5	;volatile
   900  00FE  1707               	bsf	7,6	;volatile
   901                           
   902                           ;Led_7seg.c: 60:           PORTD=number[ngin];;Led_7seg.c: 60:           PORTD=number[ng
      +                          in];
   903  00FF  0830               	movf	_ngin,w
   904  0100  3E34               	addlw	(low (_number| 0))& (0+255)
   905  0101  0084               	movwf	4
   906  0102  1383               	bcf	3,7	;select IRP bank0
   907  0103  0800               	movf	0,w
   908  0104  0088               	movwf	8	;volatile
   909                           
   910                           ;Led_7seg.c: 61:           break;;Led_7seg.c: 61:           break;
   911  0105  0008               	return
   912  0106                     i1l70:	
   913                           ;Led_7seg.c: 62:         case 1:;Led_7seg.c: 62:         case 1:
   914                           
   915                           
   916                           ;Led_7seg.c: 64:          PORTCbits.RC4=1;PORTCbits.RC5=0;PORTCbits.RC6=1;PORTCbits.RC7=
      +                          1;;Led_7seg.c: 64:          PORTCbits.RC4=1;PORTCbits.RC5=0;PORTCbits.RC6=1;PORTCbits.RC
      +                          7=1;
   917  0106  1607               	bsf	7,4	;volatile
   918  0107  1287               	bcf	7,5	;volatile
   919  0108  1707               	bsf	7,6	;volatile
   920  0109  1787               	bsf	7,7	;volatile
   921                           
   922                           ;Led_7seg.c: 65:          PORTD=number[tram];;Led_7seg.c: 65:          PORTD=number[tram
      +                          ];
   923  010A  0831               	movf	_tram,w
   924  010B  3E34               	addlw	(low (_number| 0))& (0+255)
   925  010C  0084               	movwf	4
   926  010D  1383               	bcf	3,7	;select IRP bank0
   927  010E  0800               	movf	0,w
   928  010F  0088               	movwf	8	;volatile
   929                           
   930                           ;Led_7seg.c: 66:           break;;Led_7seg.c: 66:           break;
   931  0110  0008               	return
   932  0111                     i1l71:	
   933                           ;Led_7seg.c: 67:         case 2:;Led_7seg.c: 67:         case 2:
   934                           
   935                           
   936                           ;Led_7seg.c: 69:          PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=0;PORTCbits.RC7=
      +                          1;;Led_7seg.c: 69:          PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=0;PORTCbits.RC
      +                          7=1;
   937  0111  1607               	bsf	7,4	;volatile
   938  0112  1687               	bsf	7,5	;volatile
   939  0113  1307               	bcf	7,6	;volatile
   940  0114  1787               	bsf	7,7	;volatile
   941                           
   942                           ;Led_7seg.c: 70:          PORTD=number[truc];;Led_7seg.c: 70:          PORTD=number[truc
      +                          ];
   943  0115  0832               	movf	_truc,w
   944  0116  3E34               	addlw	(low (_number| 0))& (0+255)
   945  0117  0084               	movwf	4
   946  0118  1383               	bcf	3,7	;select IRP bank0
   947  0119  0800               	movf	0,w
   948  011A  0088               	movwf	8	;volatile
   949                           
   950                           ;Led_7seg.c: 71:           break;;Led_7seg.c: 71:           break;
   951  011B  0008               	return
   952  011C                     i1l72:	
   953                           ;Led_7seg.c: 72:           case 3:;Led_7seg.c: 72:           case 3:
   954                           
   955                           
   956                           ;Led_7seg.c: 74:          PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=1;PORTCbits.RC7=
      +                          0;;Led_7seg.c: 74:          PORTCbits.RC4=1;PORTCbits.RC5=1;PORTCbits.RC6=1;PORTCbits.RC
      +                          7=0;
   957  011C  1607               	bsf	7,4	;volatile
   958  011D  1687               	bsf	7,5	;volatile
   959  011E  1707               	bsf	7,6	;volatile
   960  011F  1387               	bcf	7,7	;volatile
   961                           
   962                           ;Led_7seg.c: 75:          PORTD=number[donvi];;Led_7seg.c: 75:          PORTD=number[don
      +                          vi];
   963  0120  0833               	movf	_donvi,w
   964  0121  3E34               	addlw	(low (_number| 0))& (0+255)
   965  0122  0084               	movwf	4
   966  0123  1383               	bcf	3,7	;select IRP bank0
   967  0124  0800               	movf	0,w
   968  0125  0088               	movwf	8	;volatile
   969                           
   970                           ;Led_7seg.c: 76:     };Led_7seg.c: 76:     }
   971  0126  0008               	return
   972  0127                     i1l797:
   973  0127  087C               	movf	_digit,w
   974  0128  00F0               	movwf	??_hienthi
   975  0129  01F1               	clrf	??_hienthi+1
   976                           
   977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 1, Range of values is 0 to 0
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte            4     3 (average)
   983                           ; direct_byte           11     8 (fixed)
   984                           ; jumptable            260     6 (fixed)
   985                           ;	Chosen strategy is simple_byte
   986  012A  0871               	movf	??_hienthi+1,w
   987  012B  3A00               	xorlw	0	; case 0
   988  012C  1903               	skipnz
   989  012D  292F               	goto	i1l947
   990  012E  293D               	goto	i1l73
   991  012F                     i1l947:
   992                           
   993                           ; Switch size 1, requested type "simple"
   994                           ; Number of cases is 4, Range of values is 0 to 3
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte           13     7 (average)
   998                           ; direct_byte           20     8 (fixed)
   999                           ; jumptable            260     6 (fixed)
  1000                           ;	Chosen strategy is simple_byte
  1001  012F  0870               	movf	??_hienthi,w
  1002  0130  3A00               	xorlw	0	; case 0
  1003  0131  1903               	skipnz
  1004  0132  28FB               	goto	i1l68
  1005  0133  3A01               	xorlw	1	; case 1
  1006  0134  1903               	skipnz
  1007  0135  2906               	goto	i1l70
  1008  0136  3A03               	xorlw	3	; case 2
  1009  0137  1903               	skipnz
  1010  0138  2911               	goto	i1l71
  1011  0139  3A01               	xorlw	1	; case 3
  1012  013A  1903               	skipnz
  1013  013B  291C               	goto	i1l72
  1014  013C  293D               	goto	i1l73
  1015  013D                     i1l73:
  1016  013D  0008               	return
  1017  013E                     __end_of_hienthi:
  1018                           
  1019                           	psect	text4
  1020  017A                     __ptext4:	
  1021 ;; *************** function ___lwmod *****************
  1022 ;; Defined at:
  1023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  divisor         2    0[COMMON] unsigned int 
  1026 ;;  dividend        2    2[COMMON] unsigned int 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  counter         1    5[COMMON] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  2    0[COMMON] unsigned int 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         4       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0
  1040 ;;      Temps:          1       0       0       0       0
  1041 ;;      Totals:         6       0       0       0       0
  1042 ;;Total ram usage:        6 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_Count_up
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function ___lwmod
  1053  017A                     ___lwmod:
  1054                           
  1055                           ;incstack = 0
  1056                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1057  017A  0870               	movf	___lwmod@divisor,w
  1058  017B  0471               	iorwf	___lwmod@divisor+1,w
  1059  017C  1903               	btfsc	3,2
  1060  017D  29A7               	goto	i1l867
  1061  017E  01F5               	clrf	___lwmod@counter
  1062  017F  0AF5               	incf	___lwmod@counter,f
  1063  0180                     i1l857:
  1064  0180  1BF1               	btfsc	___lwmod@divisor+1,7
  1065  0181  298E               	goto	i1l859
  1066  0182  3001               	movlw	1
  1067  0183                     u31_25:
  1068  0183  1003               	clrc
  1069  0184  0DF0               	rlf	___lwmod@divisor,f
  1070  0185  0DF1               	rlf	___lwmod@divisor+1,f
  1071  0186  3EFF               	addlw	-1
  1072  0187  1D03               	skipz
  1073  0188  2983               	goto	u31_25
  1074  0189  3001               	movlw	1
  1075  018A  00F4               	movwf	??___lwmod
  1076  018B  0874               	movf	??___lwmod,w
  1077  018C  07F5               	addwf	___lwmod@counter,f
  1078  018D  2980               	goto	i1l857
  1079  018E                     i1l859:
  1080  018E  0871               	movf	___lwmod@divisor+1,w
  1081  018F  0273               	subwf	___lwmod@dividend+1,w
  1082  0190  1D03               	skipz
  1083  0191  2994               	goto	u33_25
  1084  0192  0870               	movf	___lwmod@divisor,w
  1085  0193  0272               	subwf	___lwmod@dividend,w
  1086  0194                     u33_25:
  1087  0194  1C03               	skipc
  1088  0195  299C               	goto	i1l863
  1089  0196  0870               	movf	___lwmod@divisor,w
  1090  0197  02F2               	subwf	___lwmod@dividend,f
  1091  0198  0871               	movf	___lwmod@divisor+1,w
  1092  0199  1C03               	skipc
  1093  019A  03F3               	decf	___lwmod@dividend+1,f
  1094  019B  02F3               	subwf	___lwmod@dividend+1,f
  1095  019C                     i1l863:
  1096  019C  3001               	movlw	1
  1097  019D                     u34_25:
  1098  019D  1003               	clrc
  1099  019E  0CF1               	rrf	___lwmod@divisor+1,f
  1100  019F  0CF0               	rrf	___lwmod@divisor,f
  1101  01A0  3EFF               	addlw	-1
  1102  01A1  1D03               	skipz
  1103  01A2  299D               	goto	u34_25
  1104  01A3  3001               	movlw	1
  1105  01A4  02F5               	subwf	___lwmod@counter,f
  1106  01A5  1D03               	btfss	3,2
  1107  01A6  298E               	goto	i1l859
  1108  01A7                     i1l867:
  1109  01A7  0873               	movf	___lwmod@dividend+1,w
  1110  01A8  00F1               	movwf	?___lwmod+1
  1111  01A9  0872               	movf	___lwmod@dividend,w
  1112  01AA  00F0               	movwf	?___lwmod
  1113  01AB  0008               	return
  1114  01AC                     __end_of___lwmod:
  1115                           
  1116                           	psect	text5
  1117  013E                     __ptext5:	
  1118 ;; *************** function ___lwdiv *****************
  1119 ;; Defined at:
  1120 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  divisor         2    0[COMMON] unsigned int 
  1123 ;;  dividend        2    2[COMMON] unsigned int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  quotient        2    5[COMMON] unsigned int 
  1126 ;;  counter         1    7[COMMON] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2    0[COMMON] unsigned int 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         4       0       0       0       0
  1137 ;;      Locals:         3       0       0       0       0
  1138 ;;      Temps:          1       0       0       0       0
  1139 ;;      Totals:         8       0       0       0       0
  1140 ;;Total ram usage:        8 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_Count_up
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function ___lwdiv
  1151  013E                     ___lwdiv:
  1152                           
  1153                           ;incstack = 0
  1154                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1155  013E  01F5               	clrf	___lwdiv@quotient
  1156  013F  01F6               	clrf	___lwdiv@quotient+1
  1157  0140  0870               	movf	___lwdiv@divisor,w
  1158  0141  0471               	iorwf	___lwdiv@divisor+1,w
  1159  0142  1903               	btfsc	3,2
  1160  0143  2975               	goto	i1l845
  1161  0144  01F7               	clrf	___lwdiv@counter
  1162  0145  0AF7               	incf	___lwdiv@counter,f
  1163  0146                     i1l833:
  1164  0146  1BF1               	btfsc	___lwdiv@divisor+1,7
  1165  0147  2954               	goto	i1l835
  1166  0148  3001               	movlw	1
  1167  0149                     u24_25:
  1168  0149  1003               	clrc
  1169  014A  0DF0               	rlf	___lwdiv@divisor,f
  1170  014B  0DF1               	rlf	___lwdiv@divisor+1,f
  1171  014C  3EFF               	addlw	-1
  1172  014D  1D03               	skipz
  1173  014E  2949               	goto	u24_25
  1174  014F  3001               	movlw	1
  1175  0150  00F4               	movwf	??___lwdiv
  1176  0151  0874               	movf	??___lwdiv,w
  1177  0152  07F7               	addwf	___lwdiv@counter,f
  1178  0153  2946               	goto	i1l833
  1179  0154                     i1l835:
  1180  0154  3001               	movlw	1
  1181  0155                     u26_25:
  1182  0155  1003               	clrc
  1183  0156  0DF5               	rlf	___lwdiv@quotient,f
  1184  0157  0DF6               	rlf	___lwdiv@quotient+1,f
  1185  0158  3EFF               	addlw	-1
  1186  0159  1D03               	skipz
  1187  015A  2955               	goto	u26_25
  1188  015B  0871               	movf	___lwdiv@divisor+1,w
  1189  015C  0273               	subwf	___lwdiv@dividend+1,w
  1190  015D  1D03               	skipz
  1191  015E  2961               	goto	u27_25
  1192  015F  0870               	movf	___lwdiv@divisor,w
  1193  0160  0272               	subwf	___lwdiv@dividend,w
  1194  0161                     u27_25:
  1195  0161  1C03               	skipc
  1196  0162  296A               	goto	i1l841
  1197  0163  0870               	movf	___lwdiv@divisor,w
  1198  0164  02F2               	subwf	___lwdiv@dividend,f
  1199  0165  0871               	movf	___lwdiv@divisor+1,w
  1200  0166  1C03               	skipc
  1201  0167  03F3               	decf	___lwdiv@dividend+1,f
  1202  0168  02F3               	subwf	___lwdiv@dividend+1,f
  1203  0169  1475               	bsf	___lwdiv@quotient,0
  1204  016A                     i1l841:
  1205  016A  3001               	movlw	1
  1206  016B                     u28_25:
  1207  016B  1003               	clrc
  1208  016C  0CF1               	rrf	___lwdiv@divisor+1,f
  1209  016D  0CF0               	rrf	___lwdiv@divisor,f
  1210  016E  3EFF               	addlw	-1
  1211  016F  1D03               	skipz
  1212  0170  296B               	goto	u28_25
  1213  0171  3001               	movlw	1
  1214  0172  02F7               	subwf	___lwdiv@counter,f
  1215  0173  1D03               	btfss	3,2
  1216  0174  2954               	goto	i1l835
  1217  0175                     i1l845:
  1218  0175  0876               	movf	___lwdiv@quotient+1,w
  1219  0176  00F1               	movwf	?___lwdiv+1
  1220  0177  0875               	movf	___lwdiv@quotient,w
  1221  0178  00F0               	movwf	?___lwdiv
  1222  0179  0008               	return
  1223  017A                     __end_of___lwdiv:
  1224  007E                     btemp	set	126	;btemp
  1225  007E                     wtemp0	set	126
  1226                           
  1227                           	psect	config
  1228                           
  1229                           ;Config register CONFIG @ 0x2007
  1230                           ;	Oscillator Selection bits
  1231                           ;	FOSC = XT, XT oscillator
  1232                           ;	Watchdog Timer Enable bit
  1233                           ;	WDTE = OFF, WDT disabled
  1234                           ;	Power-up Timer Enable bit
  1235                           ;	PWRTE = ON, PWRT enabled
  1236                           ;	Brown-out Reset Enable bit
  1237                           ;	BOREN = ON, BOR enabled
  1238                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1239                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1240                           ;	Data EEPROM Memory Code Protection bit
  1241                           ;	CPD = OFF, Data EEPROM code protection off
  1242                           ;	Flash Program Memory Write Enable bits
  1243                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1244                           ;	In-Circuit Debugger Mode bit
  1245                           ;	DEBUG = 0x1, unprogrammed default
  1246                           ;	Flash Program Memory Code Protection bit
  1247                           ;	CP = OFF, Code protection off
  1248  2007                     	org	8199
  1249  2007  3FF1               	dw	16369

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Count_up in COMMON

    _Count_up->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _Count_up in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Count_up in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Count_up in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Count_up in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _timer2_initialize
 ---------------------------------------------------------------------------------
 (1) _timer2_initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Count_up                                             4     4      0     957
                                              8 COMMON     4     4      0
                            ___lwdiv
                            ___lwmod
                            _hienthi
 ---------------------------------------------------------------------------------
 (3) _hienthi                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer2_initialize

 _Count_up (ROOT)
   ___lwdiv
   ___lwmod
   _hienthi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Sep 13 16:40:12 2021

                         _i 002E                           _j 002A                           _k 0020  
                         pc 0002                          l93 01D2                          fsr 0004  
                       _GIE 005F                         _PR2 0092                         _num 002C  
                       fsr0 0004                         indf 0000                        _PEIE 005E  
                      i1l70 0106                        i1l71 0111                        i1l72 011C  
                      i1l73 013D                        i1l68 00FB                        i1l86 00EC  
                      i1l88 00ED                        _bLed 007D                        _main 01C1  
                      _ngin 0030                        _tram 0031                        btemp 007E  
                      _truc 0032                        start 000E                       ?_main 0070  
           __end_of___lwdiv 017A             __end_of___lwmod 01AC                       i1l903 006C  
                     i1l841 016A                       i1l833 0146                       i1l835 0154  
                     i1l845 0175                       i1l863 019C                       i1l857 0180  
                     i1l859 018E                       i1l867 01A7                       i1l947 012F  
                     i1l797 0127                       i1l897 005D                       u31_25 0183  
                     u24_25 0149                       u33_25 0194                       u42_20 00E3  
                     u26_25 0155                       u34_25 019D                       u43_20 00E4  
                     _PORTD 0008                       u27_25 0161                       u28_25 016B  
                     _TRISD 0088             __end_of_hienthi 013E                       _delay 0028  
                     _digit 007C                       _donvi 0033                       _count 0026  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 01D3            __end_of_Count_up 00F6  
                    ??_main 0000                      _TMR2IE 0461                      _TMR2IF 0061  
                    _TMR2ON 0092                   ??___lwdiv 0074                   ??___lwmod 0074  
                    _number 0034                   ??_hienthi 0070                      saved_w 007E  
   __end_of__initialization 0027              __pcstackCOMMON 0070                __pidataBANK0 01E4  
                __pbssBANK0 0020                   ?_Count_up 0070                  __pmaintext 01C1  
                __pintentry 0004                     _T2CKPS0 0090                     _T2CKPS1 0091  
                   _TOUTPS0 0093                     _TOUTPS1 0094                     _TOUTPS2 0095  
                ??_Count_up 0078                     ___lwdiv 013E                     ___lwmod 017A  
         _timer2_initialize 01AC                     __ptext1 01AC                     __ptext2 002B  
                   __ptext3 00F6                     __ptext4 017A                     __ptext5 013E  
        ?_timer2_initialize 0070                     _hienthi 00F6                     _count_s 0024  
       ??_timer2_initialize 0000                     clrloop0 01EF        end_of_initialization 0027  
 __end_of_timer2_initialize 01C1                   _PORTCbits 0007                   _PORTEbits 0009  
                 _TRISAbits 0085                   _TRISCbits 0087                   _TRISEbits 0089  
       start_initialization 0011           __size_of_Count_up 00CB  __size_of_timer2_initialize 0015  
                init_fetch0 01D3                 __pdataBANK0 0034                 __pbssCOMMON 007C  
                 ___latbits 0002               __pcstackBANK0 0000            ___lwdiv@dividend 0072  
                  ?___lwdiv 0070                    ?___lwmod 0070                    ?_hienthi 0070  
          ___lwdiv@quotient 0075           interrupt_function 0004                   clear_ram0 01EE  
                  _Count_up 002B            __size_of___lwdiv 003C            __size_of___lwmod 0032  
          __size_of_hienthi 0048             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
             __size_of_main 0012                    init_ram0 01D7                    intlevel1 0000  
          ___lwmod@dividend 0072             ___lwmod@divisor 0070             ___lwmod@counter 0075  
