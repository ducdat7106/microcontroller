

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Nov 21 01:32:45 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  000B                     _INTCONbits	set	11
   360  001E                     _ADRESH	set	30
   361  001F                     _ADCON0	set	31
   362  0043                     _RD3	set	67
   363  0042                     _RD2	set	66
   364  0047                     _RD7	set	71
   365  0046                     _RD6	set	70
   366  0045                     _RD5	set	69
   367  0044                     _RD4	set	68
   368  00FA                     _GO_nDONE	set	250
   369  0030                     _RB0	set	48
   370  009E                     _ADRESL	set	158
   371  009F                     _ADCON1	set	159
   372  0088                     _TRISD	set	136
   373  0430                     _TRISB0	set	1072
   374  042C                     _TRISA4	set	1068
   375  010C                     _EEDATA	set	268
   376  010D                     _EEADR	set	269
   377  018D                     _EECON2	set	397
   378  018C                     _EECON1bits	set	396
   379                           
   380                           	psect	strings
   381  0003                     __pstrings:
   382  0003                     stringtab:
   383  0003                     __stringtab:
   384  0003                     stringcode:	
   385                           ;	String table - string pointers are 1 byte each
   386                           
   387  0003                     stringdir:
   388  0003  3000               	movlw	high stringdir
   389  0004  008A               	movwf	10
   390  0005  0804               	movf	4,w
   391  0006  0A84               	incf	4,f
   392  0007  0782               	addwf	2,f
   393  0008                     __stringbase:
   394  0008  3400               	retlw	0
   395  0009                     __end_of__stringtab:
   396  0009                     STR_2:
   397  0009  3453               	retlw	83	;'S'
   398  000A  3461               	retlw	97	;'a'
   399  000B  3476               	retlw	118	;'v'
   400  000C  3465               	retlw	101	;'e'
   401  000D  3464               	retlw	100	;'d'
   402  000E  3420               	retlw	32	;' '
   403  000F  3441               	retlw	65	;'A'
   404  0010  3444               	retlw	68	;'D'
   405  0011  3443               	retlw	67	;'C'
   406  0012  343A               	retlw	58	;':'
   407  0013  3400               	retlw	0
   408  000F                     
   409                           	psect	cinit
   410  07FC                     start_initialization:	
   411                           ; #config settings
   412                           
   413  07FC                     __initialization:
   414  07FC                     end_of_initialization:	
   415                           ;End of C runtime variable initialization code
   416                           
   417  07FC                     __end_of__initialization:
   418  07FC  0183               	clrf	3
   419  07FD  120A  118A  2E5C   	ljmp	_main	;jump to C main() function
   420                           
   421                           	psect	cstackCOMMON
   422  0070                     __pcstackCOMMON:
   423  0070                     ?_ADC_Initialize:
   424  0070                     ??_ADC_Initialize:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_Lcd_Start:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_Lcd_Clear:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_Lcd_Print_String:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_Lcd_Print_Char:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_EEPROM_Write:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_EEPROM_Read:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_EEPROM_Read:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_Lcd_SetBit:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??_Lcd_SetBit:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_Lcd_Cmd:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_ADC_Read:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_main:	
   461                           ; 2 bytes @ 0x0
   462                           
   463  0070                     ?___awdiv:	
   464                           ; 2 bytes @ 0x0
   465                           
   466  0070                     Lcd_SetBit@data_bit:	
   467                           ; 2 bytes @ 0x0
   468                           
   469  0070                     EEPROM_Write@Data:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     EEPROM_Read@Address:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ___awdiv@divisor:	
   476                           ; 1 bytes @ 0x0
   477                           
   478                           
   479                           ; 2 bytes @ 0x0
   480  0070                     	ds	1
   481  0071                     ??_Lcd_Print_Char:
   482  0071                     ??_EEPROM_Write:	
   483                           ; 1 bytes @ 0x1
   484                           
   485  0071                     ??_Lcd_Cmd:	
   486                           ; 1 bytes @ 0x1
   487                           
   488  0071                     EEPROM_Write@Address:	
   489                           ; 1 bytes @ 0x1
   490                           
   491  0071                     EEPROM_Read@Data:	
   492                           ; 1 bytes @ 0x1
   493                           
   494                           
   495                           ; 1 bytes @ 0x1
   496  0071                     	ds	1
   497  0072                     ??_ADC_Read:
   498  0072                     Lcd_Print_Char@Lower_Nibble:	
   499                           ; 1 bytes @ 0x2
   500                           
   501  0072                     ___awdiv@dividend:	
   502                           ; 1 bytes @ 0x2
   503                           
   504                           
   505                           ; 2 bytes @ 0x2
   506  0072                     	ds	1
   507  0073                     Lcd_Cmd@a:
   508  0073                     Lcd_Print_Char@Upper_Nibble:	
   509                           ; 1 bytes @ 0x3
   510                           
   511                           
   512                           ; 1 bytes @ 0x3
   513  0073                     	ds	1
   514  0074                     ??_Lcd_Start:
   515  0074                     ??_Lcd_Clear:	
   516                           ; 1 bytes @ 0x4
   517                           
   518  0074                     ?_Lcd_Set_Cursor:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0074                     ??___awdiv:	
   522                           ; 1 bytes @ 0x4
   523                           
   524  0074                     ADC_Read@channel:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0074                     Lcd_Set_Cursor@b:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0074                     Lcd_Print_Char@data:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  0074                     ___awdiv@counter:	
   534                           ; 1 bytes @ 0x4
   535                           
   536                           
   537                           ; 1 bytes @ 0x4
   538  0074                     	ds	1
   539  0075                     ??_Lcd_Set_Cursor:
   540  0075                     ___awdiv@sign:	
   541                           ; 1 bytes @ 0x5
   542                           
   543                           
   544                           ; 1 bytes @ 0x5
   545  0075                     	ds	1
   546  0076                     Lcd_Set_Cursor@a:
   547  0076                     ___awdiv@quotient:	
   548                           ; 1 bytes @ 0x6
   549                           
   550                           
   551                           ; 2 bytes @ 0x6
   552  0076                     	ds	1
   553  0077                     Lcd_Set_Cursor@z:
   554                           
   555                           ; 1 bytes @ 0x7
   556  0077                     	ds	1
   557  0078                     ?___awmod:
   558  0078                     Lcd_Set_Cursor@y:	
   559                           ; 2 bytes @ 0x8
   560                           
   561  0078                     ___awmod@divisor:	
   562                           ; 1 bytes @ 0x8
   563                           
   564                           
   565                           ; 2 bytes @ 0x8
   566  0078                     	ds	1
   567  0079                     Lcd_Set_Cursor@temp:
   568                           
   569                           ; 1 bytes @ 0x9
   570  0079                     	ds	1
   571  007A                     ___awmod@dividend:
   572                           
   573                           ; 2 bytes @ 0xA
   574  007A                     	ds	2
   575  007C                     ??___awmod:
   576  007C                     ___awmod@counter:	
   577                           ; 1 bytes @ 0xC
   578                           
   579                           
   580                           ; 1 bytes @ 0xC
   581  007C                     	ds	1
   582  007D                     ??_Lcd_Print_String:
   583  007D                     ___awmod@sign:	
   584                           ; 1 bytes @ 0xD
   585                           
   586                           
   587                           ; 1 bytes @ 0xD
   588  007D                     	ds	1
   589                           
   590                           	psect	cstackBANK0
   591  0020                     __pcstackBANK0:
   592  0020                     Lcd_Print_String@i:
   593                           
   594                           ; 2 bytes @ 0x0
   595  0020                     	ds	2
   596  0022                     Lcd_Print_String@a:
   597                           
   598                           ; 1 bytes @ 0x2
   599  0022                     	ds	1
   600  0023                     ??_main:
   601                           
   602                           ; 1 bytes @ 0x3
   603  0023                     	ds	2
   604  0025                     main@a1:
   605                           
   606                           ; 2 bytes @ 0x5
   607  0025                     	ds	2
   608  0027                     main@a2:
   609                           
   610                           ; 2 bytes @ 0x7
   611  0027                     	ds	2
   612  0029                     main@a3:
   613                           
   614                           ; 2 bytes @ 0x9
   615  0029                     	ds	2
   616  002B                     main@a4:
   617                           
   618                           ; 2 bytes @ 0xB
   619  002B                     	ds	2
   620  002D                     main@Sa1:
   621                           
   622                           ; 2 bytes @ 0xD
   623  002D                     	ds	2
   624  002F                     main@Sa2:
   625                           
   626                           ; 2 bytes @ 0xF
   627  002F                     	ds	2
   628  0031                     main@Sa3:
   629                           
   630                           ; 2 bytes @ 0x11
   631  0031                     	ds	2
   632  0033                     main@Sa4:
   633                           
   634                           ; 2 bytes @ 0x13
   635  0033                     	ds	2
   636  0035                     main@Sadc:
   637                           
   638                           ; 2 bytes @ 0x15
   639  0035                     	ds	2
   640  0037                     main@adc:
   641                           
   642                           ; 2 bytes @ 0x17
   643  0037                     	ds	2
   644                           
   645                           	psect	maintext
   646  065C                     __pmaintext:	
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 15 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  adc             2   23[BANK0 ] int 
   657 ;;  Sadc            2   21[BANK0 ] int 
   658 ;;  Sa4             2   19[BANK0 ] int 
   659 ;;  Sa3             2   17[BANK0 ] int 
   660 ;;  Sa2             2   15[BANK0 ] int 
   661 ;;  Sa1             2   13[BANK0 ] int 
   662 ;;  a4              2   11[BANK0 ] int 
   663 ;;  a3              2    9[BANK0 ] int 
   664 ;;  a2              2    7[BANK0 ] int 
   665 ;;  a1              2    5[BANK0 ] int 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  2   30[None  ] int 
   668 ;; Registers used:
   669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : B00/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0      20       0       0       0
   677 ;;      Temps:          0       2       0       0       0
   678 ;;      Totals:         0      22       0       0       0
   679 ;;Total ram usage:       22 bytes
   680 ;; Hardware stack levels required when called:    3
   681 ;; This function calls:
   682 ;;		_ADC_Initialize
   683 ;;		_ADC_Read
   684 ;;		_EEPROM_Read
   685 ;;		_EEPROM_Write
   686 ;;		_Lcd_Clear
   687 ;;		_Lcd_Print_Char
   688 ;;		_Lcd_Print_String
   689 ;;		_Lcd_Set_Cursor
   690 ;;		_Lcd_Start
   691 ;;		___awdiv
   692 ;;		___awmod
   693 ;; This function is called by:
   694 ;;		Startup code after reset
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _main
   700  065C                     _main:
   701  065C                     l1296:	
   702                           ;incstack = 0
   703                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   704                           
   705                           
   706                           ;main.c: 18:     int a1,a2,a3,a4;;main.c: 20:     int Sadc=0;
   707  065C  1283               	bcf	3,5	;RP0=0, select bank0
   708  065D  1303               	bcf	3,6	;RP1=0, select bank0
   709  065E  01B5               	clrf	main@Sadc
   710  065F  01B6               	clrf	main@Sadc+1
   711                           
   712                           ;main.c: 21:     int Sa1,Sa2,Sa3,Sa4;;main.c: 23:     TRISD = 0x00;
   713  0660  1683               	bsf	3,5	;RP0=1, select bank1
   714  0661  1303               	bcf	3,6	;RP1=0, select bank1
   715  0662  0188               	clrf	8	;volatile
   716  0663                     l1298:
   717                           
   718                           ;main.c: 24:     TRISA4 =1;
   719  0663  1605               	bsf	5,4	;volatile
   720  0664                     l1300:
   721                           
   722                           ;main.c: 25:     TRISB0 = 1;
   723  0664  1406               	bsf	6,0	;volatile
   724  0665                     l1302:
   725                           
   726                           ;main.c: 27:     ADC_Initialize();
   727  0665  120A  118A  23F8  120A  118A  	fcall	_ADC_Initialize
   728  066A                     l1304:
   729                           
   730                           ;main.c: 28:     Lcd_Start();
   731  066A  120A  118A  2547  120A  118A  	fcall	_Lcd_Start
   732  066F                     l1306:
   733                           
   734                           ;main.c: 29:     Lcd_Clear();
   735  066F  120A  118A  2401  120A  118A  	fcall	_Lcd_Clear
   736  0674                     l1308:
   737                           
   738                           ;main.c: 32:     {;main.c: 33:         adc=ADC_Read(4);
   739  0674  3004               	movlw	4
   740  0675  120A  118A  249F  120A  118A  	fcall	_ADC_Read
   741  067A  0871               	movf	?_ADC_Read+1,w
   742  067B  1283               	bcf	3,5	;RP0=0, select bank0
   743  067C  1303               	bcf	3,6	;RP1=0, select bank0
   744  067D  00B8               	movwf	main@adc+1
   745  067E  0870               	movf	?_ADC_Read,w
   746  067F  00B7               	movwf	main@adc
   747  0680                     l1310:
   748                           
   749                           ;main.c: 36:         a1 = (adc/1000)%10;
   750  0680  300A               	movlw	10
   751  0681  00F8               	movwf	___awmod@divisor
   752  0682  3000               	movlw	0
   753  0683  00F9               	movwf	___awmod@divisor+1
   754  0684  30E8               	movlw	232
   755  0685  00F0               	movwf	___awdiv@divisor
   756  0686  3003               	movlw	3
   757  0687  00F1               	movwf	___awdiv@divisor+1
   758  0688  0838               	movf	main@adc+1,w
   759  0689  00F3               	movwf	___awdiv@dividend+1
   760  068A  0837               	movf	main@adc,w
   761  068B  00F2               	movwf	___awdiv@dividend
   762  068C  120A  118A  25F5  120A  118A  	fcall	___awdiv
   763  0691  0871               	movf	?___awdiv+1,w
   764  0692  00FB               	movwf	___awmod@dividend+1
   765  0693  0870               	movf	?___awdiv,w
   766  0694  00FA               	movwf	___awmod@dividend
   767  0695  120A  118A  259C  120A  118A  	fcall	___awmod
   768  069A  0879               	movf	?___awmod+1,w
   769  069B  1283               	bcf	3,5	;RP0=0, select bank0
   770  069C  1303               	bcf	3,6	;RP1=0, select bank0
   771  069D  00A6               	movwf	main@a1+1
   772  069E  0878               	movf	?___awmod,w
   773  069F  00A5               	movwf	main@a1
   774  06A0                     l1312:
   775                           
   776                           ;main.c: 37:         a2 = (adc/100)%10;
   777  06A0  300A               	movlw	10
   778  06A1  00F8               	movwf	___awmod@divisor
   779  06A2  3000               	movlw	0
   780  06A3  00F9               	movwf	___awmod@divisor+1
   781  06A4  3064               	movlw	100
   782  06A5  00F0               	movwf	___awdiv@divisor
   783  06A6  3000               	movlw	0
   784  06A7  00F1               	movwf	___awdiv@divisor+1
   785  06A8  0838               	movf	main@adc+1,w
   786  06A9  00F3               	movwf	___awdiv@dividend+1
   787  06AA  0837               	movf	main@adc,w
   788  06AB  00F2               	movwf	___awdiv@dividend
   789  06AC  120A  118A  25F5  120A  118A  	fcall	___awdiv
   790  06B1  0871               	movf	?___awdiv+1,w
   791  06B2  00FB               	movwf	___awmod@dividend+1
   792  06B3  0870               	movf	?___awdiv,w
   793  06B4  00FA               	movwf	___awmod@dividend
   794  06B5  120A  118A  259C  120A  118A  	fcall	___awmod
   795  06BA  0879               	movf	?___awmod+1,w
   796  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   797  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   798  06BD  00A8               	movwf	main@a2+1
   799  06BE  0878               	movf	?___awmod,w
   800  06BF  00A7               	movwf	main@a2
   801  06C0                     l1314:
   802                           
   803                           ;main.c: 38:         a3 = (adc/10)%10;
   804  06C0  300A               	movlw	10
   805  06C1  00F8               	movwf	___awmod@divisor
   806  06C2  3000               	movlw	0
   807  06C3  00F9               	movwf	___awmod@divisor+1
   808  06C4  300A               	movlw	10
   809  06C5  00F0               	movwf	___awdiv@divisor
   810  06C6  3000               	movlw	0
   811  06C7  00F1               	movwf	___awdiv@divisor+1
   812  06C8  0838               	movf	main@adc+1,w
   813  06C9  00F3               	movwf	___awdiv@dividend+1
   814  06CA  0837               	movf	main@adc,w
   815  06CB  00F2               	movwf	___awdiv@dividend
   816  06CC  120A  118A  25F5  120A  118A  	fcall	___awdiv
   817  06D1  0871               	movf	?___awdiv+1,w
   818  06D2  00FB               	movwf	___awmod@dividend+1
   819  06D3  0870               	movf	?___awdiv,w
   820  06D4  00FA               	movwf	___awmod@dividend
   821  06D5  120A  118A  259C  120A  118A  	fcall	___awmod
   822  06DA  0879               	movf	?___awmod+1,w
   823  06DB  1283               	bcf	3,5	;RP0=0, select bank0
   824  06DC  1303               	bcf	3,6	;RP1=0, select bank0
   825  06DD  00AA               	movwf	main@a3+1
   826  06DE  0878               	movf	?___awmod,w
   827  06DF  00A9               	movwf	main@a3
   828  06E0                     l1316:
   829                           
   830                           ;main.c: 39:         a4 = (adc/1)%10;
   831  06E0  300A               	movlw	10
   832  06E1  00F8               	movwf	___awmod@divisor
   833  06E2  3000               	movlw	0
   834  06E3  00F9               	movwf	___awmod@divisor+1
   835  06E4  0838               	movf	main@adc+1,w
   836  06E5  00FB               	movwf	___awmod@dividend+1
   837  06E6  0837               	movf	main@adc,w
   838  06E7  00FA               	movwf	___awmod@dividend
   839  06E8  120A  118A  259C  120A  118A  	fcall	___awmod
   840  06ED  0879               	movf	?___awmod+1,w
   841  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   842  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   843  06F0  00AC               	movwf	main@a4+1
   844  06F1  0878               	movf	?___awmod,w
   845  06F2  00AB               	movwf	main@a4
   846  06F3                     l1318:
   847                           
   848                           ;main.c: 40:         Lcd_Set_Cursor(1,1);
   849  06F3  01F4               	clrf	Lcd_Set_Cursor@b
   850  06F4  0AF4               	incf	Lcd_Set_Cursor@b,f
   851  06F5  3001               	movlw	1
   852  06F6  120A  118A  24F5  120A  118A  	fcall	_Lcd_Set_Cursor
   853  06FB                     l1320:
   854                           
   855                           ;main.c: 41:         Lcd_Print_String("ADC:");
   856  06FB  3007               	movlw	(low (((STR_2+6)-__stringbase)| (0+32768)))& (0+255)
   857  06FC  120A  118A  2476  120A  118A  	fcall	_Lcd_Print_String
   858  0701                     l1322:
   859                           
   860                           ;main.c: 42:         Lcd_Print_Char(a1+'0');
   861  0701  1283               	bcf	3,5	;RP0=0, select bank0
   862  0702  1303               	bcf	3,6	;RP1=0, select bank0
   863  0703  0825               	movf	main@a1,w
   864  0704  3E30               	addlw	48
   865  0705  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
   866  070A                     l1324:
   867                           
   868                           ;main.c: 43:         Lcd_Print_Char(a2+'0');
   869  070A  1283               	bcf	3,5	;RP0=0, select bank0
   870  070B  1303               	bcf	3,6	;RP1=0, select bank0
   871  070C  0827               	movf	main@a2,w
   872  070D  3E30               	addlw	48
   873  070E  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
   874  0713                     l1326:
   875                           
   876                           ;main.c: 44:         Lcd_Print_Char(a3+'0');
   877  0713  1283               	bcf	3,5	;RP0=0, select bank0
   878  0714  1303               	bcf	3,6	;RP1=0, select bank0
   879  0715  0829               	movf	main@a3,w
   880  0716  3E30               	addlw	48
   881  0717  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
   882  071C                     l1328:
   883                           
   884                           ;main.c: 45:         Lcd_Print_Char(a4+'0');
   885  071C  1283               	bcf	3,5	;RP0=0, select bank0
   886  071D  1303               	bcf	3,6	;RP1=0, select bank0
   887  071E  082B               	movf	main@a4,w
   888  071F  3E30               	addlw	48
   889  0720  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
   890  0725                     l1330:
   891                           
   892                           ;main.c: 48:         Sa1 = (Sadc/1000)%10;
   893  0725  300A               	movlw	10
   894  0726  00F8               	movwf	___awmod@divisor
   895  0727  3000               	movlw	0
   896  0728  00F9               	movwf	___awmod@divisor+1
   897  0729  30E8               	movlw	232
   898  072A  00F0               	movwf	___awdiv@divisor
   899  072B  3003               	movlw	3
   900  072C  00F1               	movwf	___awdiv@divisor+1
   901  072D  1283               	bcf	3,5	;RP0=0, select bank0
   902  072E  1303               	bcf	3,6	;RP1=0, select bank0
   903  072F  0836               	movf	main@Sadc+1,w
   904  0730  00F3               	movwf	___awdiv@dividend+1
   905  0731  0835               	movf	main@Sadc,w
   906  0732  00F2               	movwf	___awdiv@dividend
   907  0733  120A  118A  25F5  120A  118A  	fcall	___awdiv
   908  0738  0871               	movf	?___awdiv+1,w
   909  0739  00FB               	movwf	___awmod@dividend+1
   910  073A  0870               	movf	?___awdiv,w
   911  073B  00FA               	movwf	___awmod@dividend
   912  073C  120A  118A  259C  120A  118A  	fcall	___awmod
   913  0741  0879               	movf	?___awmod+1,w
   914  0742  1283               	bcf	3,5	;RP0=0, select bank0
   915  0743  1303               	bcf	3,6	;RP1=0, select bank0
   916  0744  00AE               	movwf	main@Sa1+1
   917  0745  0878               	movf	?___awmod,w
   918  0746  00AD               	movwf	main@Sa1
   919  0747                     l1332:
   920                           
   921                           ;main.c: 49:         Sa2 = (Sadc/100)%10;
   922  0747  300A               	movlw	10
   923  0748  00F8               	movwf	___awmod@divisor
   924  0749  3000               	movlw	0
   925  074A  00F9               	movwf	___awmod@divisor+1
   926  074B  3064               	movlw	100
   927  074C  00F0               	movwf	___awdiv@divisor
   928  074D  3000               	movlw	0
   929  074E  00F1               	movwf	___awdiv@divisor+1
   930  074F  0836               	movf	main@Sadc+1,w
   931  0750  00F3               	movwf	___awdiv@dividend+1
   932  0751  0835               	movf	main@Sadc,w
   933  0752  00F2               	movwf	___awdiv@dividend
   934  0753  120A  118A  25F5  120A  118A  	fcall	___awdiv
   935  0758  0871               	movf	?___awdiv+1,w
   936  0759  00FB               	movwf	___awmod@dividend+1
   937  075A  0870               	movf	?___awdiv,w
   938  075B  00FA               	movwf	___awmod@dividend
   939  075C  120A  118A  259C  120A  118A  	fcall	___awmod
   940  0761  0879               	movf	?___awmod+1,w
   941  0762  1283               	bcf	3,5	;RP0=0, select bank0
   942  0763  1303               	bcf	3,6	;RP1=0, select bank0
   943  0764  00B0               	movwf	main@Sa2+1
   944  0765  0878               	movf	?___awmod,w
   945  0766  00AF               	movwf	main@Sa2
   946  0767                     l1334:
   947                           
   948                           ;main.c: 50:         Sa3 = (Sadc/10)%10;
   949  0767  300A               	movlw	10
   950  0768  00F8               	movwf	___awmod@divisor
   951  0769  3000               	movlw	0
   952  076A  00F9               	movwf	___awmod@divisor+1
   953  076B  300A               	movlw	10
   954  076C  00F0               	movwf	___awdiv@divisor
   955  076D  3000               	movlw	0
   956  076E  00F1               	movwf	___awdiv@divisor+1
   957  076F  0836               	movf	main@Sadc+1,w
   958  0770  00F3               	movwf	___awdiv@dividend+1
   959  0771  0835               	movf	main@Sadc,w
   960  0772  00F2               	movwf	___awdiv@dividend
   961  0773  120A  118A  25F5  120A  118A  	fcall	___awdiv
   962  0778  0871               	movf	?___awdiv+1,w
   963  0779  00FB               	movwf	___awmod@dividend+1
   964  077A  0870               	movf	?___awdiv,w
   965  077B  00FA               	movwf	___awmod@dividend
   966  077C  120A  118A  259C  120A  118A  	fcall	___awmod
   967  0781  0879               	movf	?___awmod+1,w
   968  0782  1283               	bcf	3,5	;RP0=0, select bank0
   969  0783  1303               	bcf	3,6	;RP1=0, select bank0
   970  0784  00B2               	movwf	main@Sa3+1
   971  0785  0878               	movf	?___awmod,w
   972  0786  00B1               	movwf	main@Sa3
   973  0787                     l1336:
   974                           
   975                           ;main.c: 51:         Sa4 = (Sadc/1)%10;
   976  0787  300A               	movlw	10
   977  0788  00F8               	movwf	___awmod@divisor
   978  0789  3000               	movlw	0
   979  078A  00F9               	movwf	___awmod@divisor+1
   980  078B  0836               	movf	main@Sadc+1,w
   981  078C  00FB               	movwf	___awmod@dividend+1
   982  078D  0835               	movf	main@Sadc,w
   983  078E  00FA               	movwf	___awmod@dividend
   984  078F  120A  118A  259C  120A  118A  	fcall	___awmod
   985  0794  0879               	movf	?___awmod+1,w
   986  0795  1283               	bcf	3,5	;RP0=0, select bank0
   987  0796  1303               	bcf	3,6	;RP1=0, select bank0
   988  0797  00B4               	movwf	main@Sa4+1
   989  0798  0878               	movf	?___awmod,w
   990  0799  00B3               	movwf	main@Sa4
   991  079A                     l1338:
   992                           
   993                           ;main.c: 52:         Lcd_Set_Cursor(2,1);
   994  079A  01F4               	clrf	Lcd_Set_Cursor@b
   995  079B  0AF4               	incf	Lcd_Set_Cursor@b,f
   996  079C  3002               	movlw	2
   997  079D  120A  118A  24F5  120A  118A  	fcall	_Lcd_Set_Cursor
   998  07A2                     l1340:
   999                           
  1000                           ;main.c: 53:         Lcd_Print_String("Saved ADC:");
  1001  07A2  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1002  07A3  120A  118A  2476  120A  118A  	fcall	_Lcd_Print_String
  1003  07A8                     l1342:
  1004                           
  1005                           ;main.c: 54:         Lcd_Print_Char(Sa1+'0');
  1006  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1007  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1008  07AA  082D               	movf	main@Sa1,w
  1009  07AB  3E30               	addlw	48
  1010  07AC  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
  1011  07B1                     l1344:
  1012                           
  1013                           ;main.c: 55:         Lcd_Print_Char(Sa2+'0');
  1014  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1015  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1016  07B3  082F               	movf	main@Sa2,w
  1017  07B4  3E30               	addlw	48
  1018  07B5  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
  1019  07BA                     l1346:
  1020                           
  1021                           ;main.c: 56:         Lcd_Print_Char(Sa3+'0');
  1022  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1023  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1024  07BC  0831               	movf	main@Sa3,w
  1025  07BD  3E30               	addlw	48
  1026  07BE  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
  1027  07C3                     l1348:
  1028                           
  1029                           ;main.c: 57:         Lcd_Print_Char(Sa4+'0');
  1030  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1031  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1032  07C5  0833               	movf	main@Sa4,w
  1033  07C6  3E30               	addlw	48
  1034  07C7  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
  1035  07CC                     l1350:
  1036                           
  1037                           ;main.c: 62:         if (RB0==0)
  1038  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1039  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1040  07CE  1806               	btfsc	6,0	;volatile
  1041  07CF  2FD1               	goto	u671
  1042  07D0  2FD2               	goto	u670
  1043  07D1                     u671:
  1044  07D1  2FDC               	goto	l1354
  1045  07D2                     u670:
  1046  07D2                     l1352:
  1047                           
  1048                           ;main.c: 63:         {;main.c: 64:             EEPROM_Write(0,adc);
  1049  07D2  0837               	movf	main@adc,w
  1050  07D3  00FF               	movwf	btemp+1
  1051  07D4  087F               	movf	btemp+1,w
  1052  07D5  00F0               	movwf	EEPROM_Write@Data
  1053  07D6  3000               	movlw	0
  1054  07D7  120A  118A  2439  120A  118A  	fcall	_EEPROM_Write
  1055  07DC                     l1354:
  1056                           
  1057                           ;main.c: 67:         Sadc = (int)EEPROM_Read(0);
  1058  07DC  3000               	movlw	0
  1059  07DD  120A  118A  240E  120A  118A  	fcall	_EEPROM_Read
  1060  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1061  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1062  07E4  00A3               	movwf	??_main
  1063  07E5  01A4               	clrf	??_main+1
  1064  07E6  0823               	movf	??_main,w
  1065  07E7  00B5               	movwf	main@Sadc
  1066  07E8  0824               	movf	??_main+1,w
  1067  07E9  00B6               	movwf	main@Sadc+1
  1068  07EA                     l1356:
  1069                           
  1070                           ;main.c: 69:         Lcd_Set_Cursor(1,1);
  1071  07EA  01F4               	clrf	Lcd_Set_Cursor@b
  1072  07EB  0AF4               	incf	Lcd_Set_Cursor@b,f
  1073  07EC  3001               	movlw	1
  1074  07ED  120A  118A  24F5  120A  118A  	fcall	_Lcd_Set_Cursor
  1075  07F2                     l1358:
  1076                           
  1077                           ;main.c: 70:         Lcd_Print_String("ADC:");
  1078  07F2  3007               	movlw	(low (((STR_2+6)-__stringbase)| (0+32768)))& (0+255)
  1079  07F3  120A  118A  2476  120A  118A  	fcall	_Lcd_Print_String
  1080  07F8  2E74               	goto	l1308
  1081  07F9  120A  118A  2800   	ljmp	start
  1082  07FC                     __end_of_main:
  1083                           
  1084                           	psect	text1
  1085  059C                     __ptext1:	
  1086 ;; *************** function ___awmod *****************
  1087 ;; Defined at:
  1088 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  divisor         2    8[COMMON] int 
  1091 ;;  dividend        2   10[COMMON] int 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  sign            1   13[COMMON] unsigned char 
  1094 ;;  counter         1   12[COMMON] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2    8[COMMON] int 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0, btemp+1
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         4       0       0       0       0
  1105 ;;      Locals:         2       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0
  1107 ;;      Totals:         6       0       0       0       0
  1108 ;;Total ram usage:        6 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function ___awmod
  1119  059C                     ___awmod:
  1120  059C                     l1258:	
  1121                           ;incstack = 0
  1122                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1123                           
  1124  059C  01FD               	clrf	___awmod@sign
  1125  059D                     l1260:
  1126  059D  1FFB               	btfss	___awmod@dividend+1,7
  1127  059E  2DA0               	goto	u581
  1128  059F  2DA1               	goto	u580
  1129  05A0                     u581:
  1130  05A0  2DA8               	goto	l1266
  1131  05A1                     u580:
  1132  05A1                     l1262:
  1133  05A1  09FA               	comf	___awmod@dividend,f
  1134  05A2  09FB               	comf	___awmod@dividend+1,f
  1135  05A3  0AFA               	incf	___awmod@dividend,f
  1136  05A4  1903               	skipnz
  1137  05A5  0AFB               	incf	___awmod@dividend+1,f
  1138  05A6                     l1264:
  1139  05A6  01FD               	clrf	___awmod@sign
  1140  05A7  0AFD               	incf	___awmod@sign,f
  1141  05A8                     l1266:
  1142  05A8  1FF9               	btfss	___awmod@divisor+1,7
  1143  05A9  2DAB               	goto	u591
  1144  05AA  2DAC               	goto	u590
  1145  05AB                     u591:
  1146  05AB  2DB1               	goto	l1270
  1147  05AC                     u590:
  1148  05AC                     l1268:
  1149  05AC  09F8               	comf	___awmod@divisor,f
  1150  05AD  09F9               	comf	___awmod@divisor+1,f
  1151  05AE  0AF8               	incf	___awmod@divisor,f
  1152  05AF  1903               	skipnz
  1153  05B0  0AF9               	incf	___awmod@divisor+1,f
  1154  05B1                     l1270:
  1155  05B1  0878               	movf	___awmod@divisor,w
  1156  05B2  0479               	iorwf	___awmod@divisor+1,w
  1157  05B3  1903               	btfsc	3,2
  1158  05B4  2DB6               	goto	u601
  1159  05B5  2DB7               	goto	u600
  1160  05B6                     u601:
  1161  05B6  2DE6               	goto	l1288
  1162  05B7                     u600:
  1163  05B7                     l1272:
  1164  05B7  01FC               	clrf	___awmod@counter
  1165  05B8  0AFC               	incf	___awmod@counter,f
  1166  05B9  2DC5               	goto	l1278
  1167  05BA                     l1274:
  1168  05BA  3001               	movlw	1
  1169  05BB                     u615:
  1170  05BB  1003               	clrc
  1171  05BC  0DF8               	rlf	___awmod@divisor,f
  1172  05BD  0DF9               	rlf	___awmod@divisor+1,f
  1173  05BE  3EFF               	addlw	-1
  1174  05BF  1D03               	skipz
  1175  05C0  2DBB               	goto	u615
  1176  05C1                     l1276:
  1177  05C1  3001               	movlw	1
  1178  05C2  00FF               	movwf	btemp+1
  1179  05C3  087F               	movf	btemp+1,w
  1180  05C4  07FC               	addwf	___awmod@counter,f
  1181  05C5                     l1278:
  1182  05C5  1FF9               	btfss	___awmod@divisor+1,7
  1183  05C6  2DC8               	goto	u621
  1184  05C7  2DC9               	goto	u620
  1185  05C8                     u621:
  1186  05C8  2DBA               	goto	l1274
  1187  05C9                     u620:
  1188  05C9                     l1280:
  1189  05C9  0879               	movf	___awmod@divisor+1,w
  1190  05CA  027B               	subwf	___awmod@dividend+1,w
  1191  05CB  1D03               	skipz
  1192  05CC  2DCF               	goto	u635
  1193  05CD  0878               	movf	___awmod@divisor,w
  1194  05CE  027A               	subwf	___awmod@dividend,w
  1195  05CF                     u635:
  1196  05CF  1C03               	skipc
  1197  05D0  2DD2               	goto	u631
  1198  05D1  2DD3               	goto	u630
  1199  05D2                     u631:
  1200  05D2  2DD9               	goto	l1284
  1201  05D3                     u630:
  1202  05D3                     l1282:
  1203  05D3  0878               	movf	___awmod@divisor,w
  1204  05D4  02FA               	subwf	___awmod@dividend,f
  1205  05D5  0879               	movf	___awmod@divisor+1,w
  1206  05D6  1C03               	skipc
  1207  05D7  03FB               	decf	___awmod@dividend+1,f
  1208  05D8  02FB               	subwf	___awmod@dividend+1,f
  1209  05D9                     l1284:
  1210  05D9  3001               	movlw	1
  1211  05DA                     u645:
  1212  05DA  1003               	clrc
  1213  05DB  0CF9               	rrf	___awmod@divisor+1,f
  1214  05DC  0CF8               	rrf	___awmod@divisor,f
  1215  05DD  3EFF               	addlw	-1
  1216  05DE  1D03               	skipz
  1217  05DF  2DDA               	goto	u645
  1218  05E0                     l1286:
  1219  05E0  3001               	movlw	1
  1220  05E1  02FC               	subwf	___awmod@counter,f
  1221  05E2  1D03               	btfss	3,2
  1222  05E3  2DE5               	goto	u651
  1223  05E4  2DE6               	goto	u650
  1224  05E5                     u651:
  1225  05E5  2DC9               	goto	l1280
  1226  05E6                     u650:
  1227  05E6                     l1288:
  1228  05E6  087D               	movf	___awmod@sign,w
  1229  05E7  1903               	btfsc	3,2
  1230  05E8  2DEA               	goto	u661
  1231  05E9  2DEB               	goto	u660
  1232  05EA                     u661:
  1233  05EA  2DF0               	goto	l1292
  1234  05EB                     u660:
  1235  05EB                     l1290:
  1236  05EB  09FA               	comf	___awmod@dividend,f
  1237  05EC  09FB               	comf	___awmod@dividend+1,f
  1238  05ED  0AFA               	incf	___awmod@dividend,f
  1239  05EE  1903               	skipnz
  1240  05EF  0AFB               	incf	___awmod@dividend+1,f
  1241  05F0                     l1292:
  1242  05F0  087B               	movf	___awmod@dividend+1,w
  1243  05F1  00F9               	movwf	?___awmod+1
  1244  05F2  087A               	movf	___awmod@dividend,w
  1245  05F3  00F8               	movwf	?___awmod
  1246  05F4                     l392:
  1247  05F4  0008               	return
  1248  05F5                     __end_of___awmod:
  1249                           
  1250                           	psect	text2
  1251  05F5                     __ptext2:	
  1252 ;; *************** function ___awdiv *****************
  1253 ;; Defined at:
  1254 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  divisor         2    0[COMMON] int 
  1257 ;;  dividend        2    2[COMMON] int 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  quotient        2    6[COMMON] int 
  1260 ;;  sign            1    5[COMMON] unsigned char 
  1261 ;;  counter         1    4[COMMON] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  2    0[COMMON] int 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, btemp+1
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         4       0       0       0       0
  1272 ;;      Locals:         4       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0
  1274 ;;      Totals:         8       0       0       0       0
  1275 ;;Total ram usage:        8 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function ___awdiv
  1286  05F5                     ___awdiv:
  1287  05F5                     l1214:	
  1288                           ;incstack = 0
  1289                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1290                           
  1291  05F5  01F5               	clrf	___awdiv@sign
  1292  05F6                     l1216:
  1293  05F6  1FF1               	btfss	___awdiv@divisor+1,7
  1294  05F7  2DF9               	goto	u481
  1295  05F8  2DFA               	goto	u480
  1296  05F9                     u481:
  1297  05F9  2E01               	goto	l1222
  1298  05FA                     u480:
  1299  05FA                     l1218:
  1300  05FA  09F0               	comf	___awdiv@divisor,f
  1301  05FB  09F1               	comf	___awdiv@divisor+1,f
  1302  05FC  0AF0               	incf	___awdiv@divisor,f
  1303  05FD  1903               	skipnz
  1304  05FE  0AF1               	incf	___awdiv@divisor+1,f
  1305  05FF                     l1220:
  1306  05FF  01F5               	clrf	___awdiv@sign
  1307  0600  0AF5               	incf	___awdiv@sign,f
  1308  0601                     l1222:
  1309  0601  1FF3               	btfss	___awdiv@dividend+1,7
  1310  0602  2E04               	goto	u491
  1311  0603  2E05               	goto	u490
  1312  0604                     u491:
  1313  0604  2E0E               	goto	l1228
  1314  0605                     u490:
  1315  0605                     l1224:
  1316  0605  09F2               	comf	___awdiv@dividend,f
  1317  0606  09F3               	comf	___awdiv@dividend+1,f
  1318  0607  0AF2               	incf	___awdiv@dividend,f
  1319  0608  1903               	skipnz
  1320  0609  0AF3               	incf	___awdiv@dividend+1,f
  1321  060A                     l1226:
  1322  060A  3001               	movlw	1
  1323  060B  00FF               	movwf	btemp+1
  1324  060C  087F               	movf	btemp+1,w
  1325  060D  06F5               	xorwf	___awdiv@sign,f
  1326  060E                     l1228:
  1327  060E  01F6               	clrf	___awdiv@quotient
  1328  060F  01F7               	clrf	___awdiv@quotient+1
  1329  0610                     l1230:
  1330  0610  0870               	movf	___awdiv@divisor,w
  1331  0611  0471               	iorwf	___awdiv@divisor+1,w
  1332  0612  1903               	btfsc	3,2
  1333  0613  2E15               	goto	u501
  1334  0614  2E16               	goto	u500
  1335  0615                     u501:
  1336  0615  2E4D               	goto	l1250
  1337  0616                     u500:
  1338  0616                     l1232:
  1339  0616  01F4               	clrf	___awdiv@counter
  1340  0617  0AF4               	incf	___awdiv@counter,f
  1341  0618  2E24               	goto	l1238
  1342  0619                     l1234:
  1343  0619  3001               	movlw	1
  1344  061A                     u515:
  1345  061A  1003               	clrc
  1346  061B  0DF0               	rlf	___awdiv@divisor,f
  1347  061C  0DF1               	rlf	___awdiv@divisor+1,f
  1348  061D  3EFF               	addlw	-1
  1349  061E  1D03               	skipz
  1350  061F  2E1A               	goto	u515
  1351  0620                     l1236:
  1352  0620  3001               	movlw	1
  1353  0621  00FF               	movwf	btemp+1
  1354  0622  087F               	movf	btemp+1,w
  1355  0623  07F4               	addwf	___awdiv@counter,f
  1356  0624                     l1238:
  1357  0624  1FF1               	btfss	___awdiv@divisor+1,7
  1358  0625  2E27               	goto	u521
  1359  0626  2E28               	goto	u520
  1360  0627                     u521:
  1361  0627  2E19               	goto	l1234
  1362  0628                     u520:
  1363  0628                     l1240:
  1364  0628  3001               	movlw	1
  1365  0629                     u535:
  1366  0629  1003               	clrc
  1367  062A  0DF6               	rlf	___awdiv@quotient,f
  1368  062B  0DF7               	rlf	___awdiv@quotient+1,f
  1369  062C  3EFF               	addlw	-1
  1370  062D  1D03               	skipz
  1371  062E  2E29               	goto	u535
  1372  062F  0871               	movf	___awdiv@divisor+1,w
  1373  0630  0273               	subwf	___awdiv@dividend+1,w
  1374  0631  1D03               	skipz
  1375  0632  2E35               	goto	u545
  1376  0633  0870               	movf	___awdiv@divisor,w
  1377  0634  0272               	subwf	___awdiv@dividend,w
  1378  0635                     u545:
  1379  0635  1C03               	skipc
  1380  0636  2E38               	goto	u541
  1381  0637  2E39               	goto	u540
  1382  0638                     u541:
  1383  0638  2E40               	goto	l1246
  1384  0639                     u540:
  1385  0639                     l1242:
  1386  0639  0870               	movf	___awdiv@divisor,w
  1387  063A  02F2               	subwf	___awdiv@dividend,f
  1388  063B  0871               	movf	___awdiv@divisor+1,w
  1389  063C  1C03               	skipc
  1390  063D  03F3               	decf	___awdiv@dividend+1,f
  1391  063E  02F3               	subwf	___awdiv@dividend+1,f
  1392  063F                     l1244:
  1393  063F  1476               	bsf	___awdiv@quotient,0
  1394  0640                     l1246:
  1395  0640  3001               	movlw	1
  1396  0641                     u555:
  1397  0641  1003               	clrc
  1398  0642  0CF1               	rrf	___awdiv@divisor+1,f
  1399  0643  0CF0               	rrf	___awdiv@divisor,f
  1400  0644  3EFF               	addlw	-1
  1401  0645  1D03               	skipz
  1402  0646  2E41               	goto	u555
  1403  0647                     l1248:
  1404  0647  3001               	movlw	1
  1405  0648  02F4               	subwf	___awdiv@counter,f
  1406  0649  1D03               	btfss	3,2
  1407  064A  2E4C               	goto	u561
  1408  064B  2E4D               	goto	u560
  1409  064C                     u561:
  1410  064C  2E28               	goto	l1240
  1411  064D                     u560:
  1412  064D                     l1250:
  1413  064D  0875               	movf	___awdiv@sign,w
  1414  064E  1903               	btfsc	3,2
  1415  064F  2E51               	goto	u571
  1416  0650  2E52               	goto	u570
  1417  0651                     u571:
  1418  0651  2E57               	goto	l1254
  1419  0652                     u570:
  1420  0652                     l1252:
  1421  0652  09F6               	comf	___awdiv@quotient,f
  1422  0653  09F7               	comf	___awdiv@quotient+1,f
  1423  0654  0AF6               	incf	___awdiv@quotient,f
  1424  0655  1903               	skipnz
  1425  0656  0AF7               	incf	___awdiv@quotient+1,f
  1426  0657                     l1254:
  1427  0657  0877               	movf	___awdiv@quotient+1,w
  1428  0658  00F1               	movwf	?___awdiv+1
  1429  0659  0876               	movf	___awdiv@quotient,w
  1430  065A  00F0               	movwf	?___awdiv
  1431  065B                     l379:
  1432  065B  0008               	return
  1433  065C                     __end_of___awdiv:
  1434                           
  1435                           	psect	text3
  1436  0547                     __ptext3:	
  1437 ;; *************** function _Lcd_Start *****************
  1438 ;; Defined at:
  1439 ;;		line 64 in file "lcd.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  i               4    0        long 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         4       0       0       0       0
  1455 ;;      Temps:          2       0       0       0       0
  1456 ;;      Totals:         6       0       0       0       0
  1457 ;;Total ram usage:        6 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    2
  1460 ;; This function calls:
  1461 ;;		_Lcd_Cmd
  1462 ;;		_Lcd_SetBit
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           
  1469                           ;psect for function _Lcd_Start
  1470  0547                     _Lcd_Start:
  1471  0547                     l1110:	
  1472                           ;incstack = 0
  1473                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  1474                           
  1475                           
  1476                           ;lcd.c: 66:   Lcd_SetBit(0x00);
  1477  0547  3000               	movlw	0
  1478  0548  120A  118A  2454  120A  118A  	fcall	_Lcd_SetBit
  1479  054D                     l1112:
  1480  054D                     l1114:
  1481  054D                     l1122:
  1482                           
  1483                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  1484  054D  3003               	movlw	3
  1485  054E  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1486  0553                     l1124:
  1487                           
  1488                           ;lcd.c: 69: _delay((unsigned long)((5)*(20000000/4000.0)));
  1489  0553  3021               	movlw	33
  1490  0554  00F5               	movwf	??_Lcd_Start+1
  1491  0555  3076               	movlw	118
  1492  0556  00F4               	movwf	??_Lcd_Start
  1493  0557                     u697:
  1494  0557  0BF4               	decfsz	??_Lcd_Start,f
  1495  0558  2D57               	goto	u697
  1496  0559  0BF5               	decfsz	??_Lcd_Start+1,f
  1497  055A  2D57               	goto	u697
  1498  055B  0000               	nop
  1499  055C                     l1126:
  1500                           
  1501                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  1502  055C  3003               	movlw	3
  1503  055D  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1504                           
  1505                           ;lcd.c: 71: _delay((unsigned long)((11)*(20000000/4000.0)));
  1506  0562  3048               	movlw	72
  1507  0563  00F5               	movwf	??_Lcd_Start+1
  1508  0564  306C               	movlw	108
  1509  0565  00F4               	movwf	??_Lcd_Start
  1510  0566                     u707:
  1511  0566  0BF4               	decfsz	??_Lcd_Start,f
  1512  0567  2D66               	goto	u707
  1513  0568  0BF5               	decfsz	??_Lcd_Start+1,f
  1514  0569  2D66               	goto	u707
  1515  056A  0000               	nop
  1516  056B                     l1128:
  1517                           
  1518                           ;lcd.c: 72:   Lcd_Cmd(0x03);
  1519  056B  3003               	movlw	3
  1520  056C  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1521  0571                     l1130:
  1522                           
  1523                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  1524  0571  3002               	movlw	2
  1525  0572  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1526  0577                     l1132:
  1527                           
  1528                           ;lcd.c: 74:   Lcd_Cmd(0x02);
  1529  0577  3002               	movlw	2
  1530  0578  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1531  057D                     l1134:
  1532                           
  1533                           ;lcd.c: 75:   Lcd_Cmd(0x08);
  1534  057D  3008               	movlw	8
  1535  057E  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1536  0583                     l1136:
  1537                           
  1538                           ;lcd.c: 76:   Lcd_Cmd(0x00);
  1539  0583  3000               	movlw	0
  1540  0584  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1541  0589                     l1138:
  1542                           
  1543                           ;lcd.c: 77:   Lcd_Cmd(0x0C);
  1544  0589  300C               	movlw	12
  1545  058A  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1546  058F                     l1140:
  1547                           
  1548                           ;lcd.c: 78:   Lcd_Cmd(0x00);
  1549  058F  3000               	movlw	0
  1550  0590  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1551  0595                     l1142:
  1552                           
  1553                           ;lcd.c: 79:   Lcd_Cmd(0x06);
  1554  0595  3006               	movlw	6
  1555  0596  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1556  059B                     l100:
  1557  059B  0008               	return
  1558  059C                     __end_of_Lcd_Start:
  1559                           
  1560                           	psect	text4
  1561  04F5                     __ptext4:	
  1562 ;; *************** function _Lcd_Set_Cursor *****************
  1563 ;; Defined at:
  1564 ;;		line 43 in file "lcd.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  a               1    wreg     unsigned char 
  1567 ;;  b               1    4[COMMON] unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  a               1    6[COMMON] unsigned char 
  1570 ;;  temp            1    9[COMMON] unsigned char 
  1571 ;;  y               1    8[COMMON] unsigned char 
  1572 ;;  z               1    7[COMMON] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         1       0       0       0       0
  1583 ;;      Locals:         4       0       0       0       0
  1584 ;;      Temps:          1       0       0       0       0
  1585 ;;      Totals:         6       0       0       0       0
  1586 ;;Total ram usage:        6 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    2
  1589 ;; This function calls:
  1590 ;;		_Lcd_Cmd
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _Lcd_Set_Cursor
  1598  04F5                     _Lcd_Set_Cursor:
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1602                           ;Lcd_Set_Cursor@a stored from wreg
  1603  04F5  00F6               	movwf	Lcd_Set_Cursor@a
  1604  04F6                     l1156:
  1605                           
  1606                           ;lcd.c: 43: void Lcd_Set_Cursor(char a, char b);lcd.c: 44: {;lcd.c: 45: char temp,z,y;;l
      +                          cd.c: 46: if(a== 1)
  1607  04F6  0376               	decf	Lcd_Set_Cursor@a,w
  1608  04F7  1D03               	btfss	3,2
  1609  04F8  2CFA               	goto	u421
  1610  04F9  2CFB               	goto	u420
  1611  04FA                     u421:
  1612  04FA  2D1E               	goto	l1166
  1613  04FB                     u420:
  1614  04FB                     l1158:
  1615                           
  1616                           ;lcd.c: 47: {;lcd.c: 48:  temp = 0x80 + b - 1;
  1617  04FB  0874               	movf	Lcd_Set_Cursor@b,w
  1618  04FC  3E7F               	addlw	127
  1619  04FD  00FF               	movwf	btemp+1
  1620  04FE  087F               	movf	btemp+1,w
  1621  04FF  00F9               	movwf	Lcd_Set_Cursor@temp
  1622                           
  1623                           ;lcd.c: 49: z = temp>>4;
  1624  0500  0879               	movf	Lcd_Set_Cursor@temp,w
  1625  0501  00F5               	movwf	??_Lcd_Set_Cursor
  1626  0502  3004               	movlw	4
  1627  0503                     u435:
  1628  0503  1003               	clrc
  1629  0504  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1630  0505  3EFF               	addlw	-1
  1631  0506  1D03               	skipz
  1632  0507  2D03               	goto	u435
  1633  0508  0875               	movf	??_Lcd_Set_Cursor,w
  1634  0509  00FF               	movwf	btemp+1
  1635  050A  087F               	movf	btemp+1,w
  1636  050B  00F7               	movwf	Lcd_Set_Cursor@z
  1637  050C                     l1160:
  1638                           
  1639                           ;lcd.c: 50: y = temp & 0x0F;
  1640  050C  0879               	movf	Lcd_Set_Cursor@temp,w
  1641  050D  390F               	andlw	15
  1642  050E  00FF               	movwf	btemp+1
  1643  050F  087F               	movf	btemp+1,w
  1644  0510  00F8               	movwf	Lcd_Set_Cursor@y
  1645  0511                     l1162:
  1646                           
  1647                           ;lcd.c: 51: Lcd_Cmd(z);
  1648  0511  0877               	movf	Lcd_Set_Cursor@z,w
  1649  0512  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1650  0517                     l1164:
  1651                           
  1652                           ;lcd.c: 52: Lcd_Cmd(y);
  1653  0517  0878               	movf	Lcd_Set_Cursor@y,w
  1654  0518  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1655                           
  1656                           ;lcd.c: 53: }
  1657  051D  2D46               	goto	l95
  1658  051E                     l1166:
  1659  051E  3002               	movlw	2
  1660  051F  0676               	xorwf	Lcd_Set_Cursor@a,w
  1661  0520  1D03               	btfss	3,2
  1662  0521  2D23               	goto	u441
  1663  0522  2D24               	goto	u440
  1664  0523                     u441:
  1665  0523  2D46               	goto	l95
  1666  0524                     u440:
  1667  0524                     l1168:
  1668                           
  1669                           ;lcd.c: 55: {;lcd.c: 56: temp = 0xC0 + b - 1;
  1670  0524  0874               	movf	Lcd_Set_Cursor@b,w
  1671  0525  3EBF               	addlw	191
  1672  0526  00FF               	movwf	btemp+1
  1673  0527  087F               	movf	btemp+1,w
  1674  0528  00F9               	movwf	Lcd_Set_Cursor@temp
  1675                           
  1676                           ;lcd.c: 57: z = temp>>4;
  1677  0529  0879               	movf	Lcd_Set_Cursor@temp,w
  1678  052A  00F5               	movwf	??_Lcd_Set_Cursor
  1679  052B  3004               	movlw	4
  1680  052C                     u455:
  1681  052C  1003               	clrc
  1682  052D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1683  052E  3EFF               	addlw	-1
  1684  052F  1D03               	skipz
  1685  0530  2D2C               	goto	u455
  1686  0531  0875               	movf	??_Lcd_Set_Cursor,w
  1687  0532  00FF               	movwf	btemp+1
  1688  0533  087F               	movf	btemp+1,w
  1689  0534  00F7               	movwf	Lcd_Set_Cursor@z
  1690  0535                     l1170:
  1691                           
  1692                           ;lcd.c: 58: y = temp & 0x0F;
  1693  0535  0879               	movf	Lcd_Set_Cursor@temp,w
  1694  0536  390F               	andlw	15
  1695  0537  00FF               	movwf	btemp+1
  1696  0538  087F               	movf	btemp+1,w
  1697  0539  00F8               	movwf	Lcd_Set_Cursor@y
  1698  053A                     l1172:
  1699                           
  1700                           ;lcd.c: 59: Lcd_Cmd(z);
  1701  053A  0877               	movf	Lcd_Set_Cursor@z,w
  1702  053B  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1703  0540                     l1174:
  1704                           
  1705                           ;lcd.c: 60: Lcd_Cmd(y);
  1706  0540  0878               	movf	Lcd_Set_Cursor@y,w
  1707  0541  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1708  0546                     l95:
  1709  0546  0008               	return
  1710  0547                     __end_of_Lcd_Set_Cursor:
  1711                           
  1712                           	psect	text5
  1713  0476                     __ptext5:	
  1714 ;; *************** function _Lcd_Print_String *****************
  1715 ;; Defined at:
  1716 ;;		line 98 in file "lcd.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  a               1    wreg     PTR unsigned char 
  1719 ;;		 -> STR_3(5), STR_2(11), STR_1(5), 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  a               1    2[BANK0 ] PTR unsigned char 
  1722 ;;		 -> STR_3(5), STR_2(11), STR_1(5), 
  1723 ;;  i               2    0[BANK0 ] int 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         0       0       0       0       0
  1734 ;;      Locals:         0       3       0       0       0
  1735 ;;      Temps:          0       0       0       0       0
  1736 ;;      Totals:         0       3       0       0       0
  1737 ;;Total ram usage:        3 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    2
  1740 ;; This function calls:
  1741 ;;		_Lcd_Print_Char
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _Lcd_Print_String
  1749  0476                     _Lcd_Print_String:
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1753                           ;Lcd_Print_String@a stored from wreg
  1754  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0478  00A2               	movwf	Lcd_Print_String@a
  1757  0479                     l1176:
  1758                           
  1759                           ;lcd.c: 98: void Lcd_Print_String(char *a);lcd.c: 99: {;lcd.c: 100: int i;;lcd.c: 101: f
      +                          or(i=0;a[i]!='\0';i++)
  1760  0479  01A0               	clrf	Lcd_Print_String@i
  1761  047A  01A1               	clrf	Lcd_Print_String@i+1
  1762  047B  2C91               	goto	l1182
  1763  047C                     l1178:
  1764                           
  1765                           ;lcd.c: 102:   Lcd_Print_Char(a[i]);
  1766  047C  0820               	movf	Lcd_Print_String@i,w
  1767  047D  0722               	addwf	Lcd_Print_String@a,w
  1768  047E  0084               	movwf	4
  1769  047F  120A  118A  2003  120A  118A  	fcall	stringdir
  1770  0484  120A  118A  24CA  120A  118A  	fcall	_Lcd_Print_Char
  1771  0489                     l1180:
  1772  0489  3001               	movlw	1
  1773  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1774  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1775  048C  07A0               	addwf	Lcd_Print_String@i,f
  1776  048D  1803               	skipnc
  1777  048E  0AA1               	incf	Lcd_Print_String@i+1,f
  1778  048F  3000               	movlw	0
  1779  0490  07A1               	addwf	Lcd_Print_String@i+1,f
  1780  0491                     l1182:
  1781  0491  0820               	movf	Lcd_Print_String@i,w
  1782  0492  0722               	addwf	Lcd_Print_String@a,w
  1783  0493  0084               	movwf	4
  1784  0494  120A  118A  2003  120A  118A  	fcall	stringdir
  1785  0499  3A00               	xorlw	0
  1786  049A  1D03               	skipz
  1787  049B  2C9D               	goto	u461
  1788  049C  2C9E               	goto	u460
  1789  049D                     u461:
  1790  049D  2C7C               	goto	l1178
  1791  049E                     u460:
  1792  049E                     l113:
  1793  049E  0008               	return
  1794  049F                     __end_of_Lcd_Print_String:
  1795                           
  1796                           	psect	text6
  1797  04CA                     __ptext6:	
  1798 ;; *************** function _Lcd_Print_Char *****************
  1799 ;; Defined at:
  1800 ;;		line 82 in file "lcd.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  data            1    wreg     unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  data            1    4[COMMON] unsigned char 
  1805 ;;  i               4    0        long 
  1806 ;;  i               4    0        long 
  1807 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  1808 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1818 ;;      Params:         0       0       0       0       0
  1819 ;;      Locals:        11       0       0       0       0
  1820 ;;      Temps:          1       0       0       0       0
  1821 ;;      Totals:        12       0       0       0       0
  1822 ;;Total ram usage:       12 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    1
  1825 ;; This function calls:
  1826 ;;		_Lcd_SetBit
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;;		_Lcd_Print_String
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _Lcd_Print_Char
  1835  04CA                     _Lcd_Print_Char:
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1839                           ;Lcd_Print_Char@data stored from wreg
  1840  04CA  00F4               	movwf	Lcd_Print_Char@data
  1841  04CB                     l1066:
  1842                           
  1843                           ;lcd.c: 82: void Lcd_Print_Char(char data);lcd.c: 83: {;lcd.c: 84:    char Lower_Nibble,
      +                          Upper_Nibble;;lcd.c: 85:    Lower_Nibble = data&0x0F;
  1844  04CB  0874               	movf	Lcd_Print_Char@data,w
  1845  04CC  390F               	andlw	15
  1846  04CD  00FF               	movwf	btemp+1
  1847  04CE  087F               	movf	btemp+1,w
  1848  04CF  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  1849                           
  1850                           ;lcd.c: 86:    Upper_Nibble = data&0xF0;
  1851  04D0  0874               	movf	Lcd_Print_Char@data,w
  1852  04D1  39F0               	andlw	240
  1853  04D2  00FF               	movwf	btemp+1
  1854  04D3  087F               	movf	btemp+1,w
  1855  04D4  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  1856  04D5                     l1068:
  1857                           
  1858                           ;lcd.c: 87:    RD2 = 1;
  1859  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1860  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1861  04D7  1508               	bsf	8,2	;volatile
  1862  04D8                     l1070:
  1863                           
  1864                           ;lcd.c: 88:    Lcd_SetBit(Upper_Nibble>>4);
  1865  04D8  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  1866  04D9  00F1               	movwf	??_Lcd_Print_Char
  1867  04DA  3004               	movlw	4
  1868  04DB                     u395:
  1869  04DB  1003               	clrc
  1870  04DC  0CF1               	rrf	??_Lcd_Print_Char,f
  1871  04DD  3EFF               	addlw	-1
  1872  04DE  1D03               	skipz
  1873  04DF  2CDB               	goto	u395
  1874  04E0  0871               	movf	??_Lcd_Print_Char,w
  1875  04E1  120A  118A  2454  120A  118A  	fcall	_Lcd_SetBit
  1876  04E6                     l1072:
  1877                           
  1878                           ;lcd.c: 89:    RD3 = 1;
  1879  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1880  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1881  04E8  1588               	bsf	8,3	;volatile
  1882  04E9                     l1074:
  1883  04E9                     l1076:
  1884  04E9                     l104:
  1885                           
  1886                           ;lcd.c: 91:    RD3 = 0;
  1887  04E9  1188               	bcf	8,3	;volatile
  1888  04EA                     l1084:
  1889                           
  1890                           ;lcd.c: 92:    Lcd_SetBit(Lower_Nibble);
  1891  04EA  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  1892  04EB  120A  118A  2454  120A  118A  	fcall	_Lcd_SetBit
  1893  04F0                     l1086:
  1894                           
  1895                           ;lcd.c: 93:    RD3 = 1;
  1896  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1897  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1898  04F2  1588               	bsf	8,3	;volatile
  1899  04F3                     l1088:
  1900  04F3                     l1090:
  1901  04F3                     l106:
  1902                           
  1903                           ;lcd.c: 95:    RD3 = 0;
  1904  04F3  1188               	bcf	8,3	;volatile
  1905  04F4                     l107:
  1906  04F4  0008               	return
  1907  04F5                     __end_of_Lcd_Print_Char:
  1908                           
  1909                           	psect	text7
  1910  0401                     __ptext7:	
  1911 ;; *************** function _Lcd_Clear *****************
  1912 ;; Defined at:
  1913 ;;		line 37 in file "lcd.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    2
  1934 ;; This function calls:
  1935 ;;		_Lcd_Cmd
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           
  1942                           ;psect for function _Lcd_Clear
  1943  0401                     _Lcd_Clear:
  1944  0401                     l1144:	
  1945                           ;incstack = 0
  1946                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1947                           
  1948                           
  1949                           ;lcd.c: 39: Lcd_Cmd(0);
  1950  0401  3000               	movlw	0
  1951  0402  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1952                           
  1953                           ;lcd.c: 40: Lcd_Cmd(1);
  1954  0407  3001               	movlw	1
  1955  0408  120A  118A  241F  120A  118A  	fcall	_Lcd_Cmd
  1956  040D                     l89:
  1957  040D  0008               	return
  1958  040E                     __end_of_Lcd_Clear:
  1959                           
  1960                           	psect	text8
  1961  041F                     __ptext8:	
  1962 ;; *************** function _Lcd_Cmd *****************
  1963 ;; Defined at:
  1964 ;;		line 28 in file "lcd.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  a               1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  a               1    3[COMMON] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0
  1980 ;;      Temps:          2       0       0       0       0
  1981 ;;      Totals:         3       0       0       0       0
  1982 ;;Total ram usage:        3 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    1
  1985 ;; This function calls:
  1986 ;;		_Lcd_SetBit
  1987 ;; This function is called by:
  1988 ;;		_Lcd_Clear
  1989 ;;		_Lcd_Set_Cursor
  1990 ;;		_Lcd_Start
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _Lcd_Cmd
  1996  041F                     _Lcd_Cmd:
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2000                           ;Lcd_Cmd@a stored from wreg
  2001  041F  00F3               	movwf	Lcd_Cmd@a
  2002  0420                     l1098:
  2003                           
  2004                           ;lcd.c: 28: void Lcd_Cmd(char a);lcd.c: 29: {;lcd.c: 30: RD2 = 0;
  2005  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0421  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0422  1108               	bcf	8,2	;volatile
  2008  0423                     l1100:
  2009                           
  2010                           ;lcd.c: 31: Lcd_SetBit(a);
  2011  0423  0873               	movf	Lcd_Cmd@a,w
  2012  0424  120A  118A  2454  120A  118A  	fcall	_Lcd_SetBit
  2013  0429                     l1102:
  2014                           
  2015                           ;lcd.c: 32: RD3 = 1;
  2016  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2017  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2018  042B  1588               	bsf	8,3	;volatile
  2019  042C                     l1104:
  2020                           
  2021                           ;lcd.c: 33:         _delay((unsigned long)((4)*(20000000/4000.0)));
  2022  042C  301A               	movlw	26
  2023  042D  00F2               	movwf	??_Lcd_Cmd+1
  2024  042E  30F8               	movlw	248
  2025  042F  00F1               	movwf	??_Lcd_Cmd
  2026  0430                     u717:
  2027  0430  0BF1               	decfsz	??_Lcd_Cmd,f
  2028  0431  2C30               	goto	u717
  2029  0432  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2030  0433  2C30               	goto	u717
  2031  0434  0000               	nop
  2032  0435                     l1106:
  2033                           
  2034                           ;lcd.c: 34:         RD3 = 0;
  2035  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0437  1188               	bcf	8,3	;volatile
  2038  0438                     l86:
  2039  0438  0008               	return
  2040  0439                     __end_of_Lcd_Cmd:
  2041                           
  2042                           	psect	text9
  2043  0454                     __ptext9:	
  2044 ;; *************** function _Lcd_SetBit *****************
  2045 ;; Defined at:
  2046 ;;		line 5 in file "lcd.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  data_bit        1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  data_bit        1    0[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         1       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         1       0       0       0       0
  2064 ;;Total ram usage:        1 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_Lcd_Cmd
  2070 ;;		_Lcd_Start
  2071 ;;		_Lcd_Print_Char
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _Lcd_SetBit
  2077  0454                     _Lcd_SetBit:
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _Lcd_SetBit: [wreg]
  2081                           ;Lcd_SetBit@data_bit stored from wreg
  2082  0454  00F0               	movwf	Lcd_SetBit@data_bit
  2083  0455                     l1056:
  2084                           
  2085                           ;lcd.c: 5: void Lcd_SetBit(char data_bit);lcd.c: 6: {;lcd.c: 7: if(data_bit& 1)
  2086  0455  1C70               	btfss	Lcd_SetBit@data_bit,0
  2087  0456  2C58               	goto	u351
  2088  0457  2C59               	goto	u350
  2089  0458                     u351:
  2090  0458  2C5D               	goto	l75
  2091  0459                     u350:
  2092  0459                     l1058:
  2093                           
  2094                           ;lcd.c: 8: RD4 = 1;
  2095  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2096  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2097  045B  1608               	bsf	8,4	;volatile
  2098  045C  2C60               	goto	l76
  2099  045D                     l75:	
  2100                           ;lcd.c: 9: else
  2101                           
  2102                           
  2103                           ;lcd.c: 10: RD4 = 0;
  2104  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2105  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2106  045F  1208               	bcf	8,4	;volatile
  2107  0460                     l76:
  2108                           
  2109                           ;lcd.c: 12: if(data_bit& 2)
  2110  0460  1CF0               	btfss	Lcd_SetBit@data_bit,1
  2111  0461  2C63               	goto	u361
  2112  0462  2C64               	goto	u360
  2113  0463                     u361:
  2114  0463  2C66               	goto	l77
  2115  0464                     u360:
  2116  0464                     l1060:
  2117                           
  2118                           ;lcd.c: 13: RD5 = 1;
  2119  0464  1688               	bsf	8,5	;volatile
  2120  0465  2C67               	goto	l78
  2121  0466                     l77:	
  2122                           ;lcd.c: 14: else
  2123                           
  2124                           
  2125                           ;lcd.c: 15: RD5 = 0;
  2126  0466  1288               	bcf	8,5	;volatile
  2127  0467                     l78:
  2128                           
  2129                           ;lcd.c: 17: if(data_bit& 4)
  2130  0467  1D70               	btfss	Lcd_SetBit@data_bit,2
  2131  0468  2C6A               	goto	u371
  2132  0469  2C6B               	goto	u370
  2133  046A                     u371:
  2134  046A  2C6D               	goto	l79
  2135  046B                     u370:
  2136  046B                     l1062:
  2137                           
  2138                           ;lcd.c: 18: RD6 = 1;
  2139  046B  1708               	bsf	8,6	;volatile
  2140  046C  2C6E               	goto	l80
  2141  046D                     l79:	
  2142                           ;lcd.c: 19: else
  2143                           
  2144                           
  2145                           ;lcd.c: 20: RD6 = 0;
  2146  046D  1308               	bcf	8,6	;volatile
  2147  046E                     l80:
  2148                           
  2149                           ;lcd.c: 22: if(data_bit& 8)
  2150  046E  1DF0               	btfss	Lcd_SetBit@data_bit,3
  2151  046F  2C71               	goto	u381
  2152  0470  2C72               	goto	u380
  2153  0471                     u381:
  2154  0471  2C74               	goto	l81
  2155  0472                     u380:
  2156  0472                     l1064:
  2157                           
  2158                           ;lcd.c: 23: RD7 = 1;
  2159  0472  1788               	bsf	8,7	;volatile
  2160  0473  2C75               	goto	l83
  2161  0474                     l81:	
  2162                           ;lcd.c: 24: else
  2163                           
  2164                           
  2165                           ;lcd.c: 25: RD7 = 0;
  2166  0474  1388               	bcf	8,7	;volatile
  2167  0475                     l83:
  2168  0475  0008               	return
  2169  0476                     __end_of_Lcd_SetBit:
  2170                           
  2171                           	psect	text10
  2172  0439                     __ptext10:	
  2173 ;; *************** function _EEPROM_Write *****************
  2174 ;; Defined at:
  2175 ;;		line 6 in file "eeprom.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  Address         1    wreg     unsigned char 
  2178 ;;  Data            1    0[COMMON] unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  Address         1    1[COMMON] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         1       0       0       0       0
  2191 ;;      Locals:         1       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         2       0       0       0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;;		_EEPROM_Write_String
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _EEPROM_Write
  2206  0439                     _EEPROM_Write:
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _EEPROM_Write: [wreg]
  2210                           ;EEPROM_Write@Address stored from wreg
  2211  0439  00F1               	movwf	EEPROM_Write@Address
  2212  043A                     l1184:
  2213  043A                     l128:	
  2214                           ;eeprom.c: 6: void EEPROM_Write(uint8_t Address, uint8_t Data);eeprom.c: 7: {;eeprom.c: 
      +                          8:   while(EECON1bits.WR);
  2215                           
  2216  043A  1683               	bsf	3,5	;RP0=1, select bank3
  2217  043B  1703               	bsf	3,6	;RP1=1, select bank3
  2218  043C  188C               	btfsc	12,1	;volsfr
  2219  043D  2C3F               	goto	u471
  2220  043E  2C40               	goto	u470
  2221  043F                     u471:
  2222  043F  2C3A               	goto	l128
  2223  0440                     u470:
  2224  0440                     l1186:
  2225                           
  2226                           ;eeprom.c: 9:   EEADR = Address;
  2227  0440  0871               	movf	EEPROM_Write@Address,w
  2228  0441  1283               	bcf	3,5	;RP0=0, select bank2
  2229  0442  1703               	bsf	3,6	;RP1=1, select bank2
  2230  0443  008D               	movwf	13	;volatile
  2231                           
  2232                           ;eeprom.c: 10:   EEDATA = Data;
  2233  0444  0870               	movf	EEPROM_Write@Data,w
  2234  0445  008C               	movwf	12	;volatile
  2235  0446                     l1188:
  2236                           
  2237                           ;eeprom.c: 11:   EECON1bits.EEPGD = 0;
  2238  0446  1683               	bsf	3,5	;RP0=1, select bank3
  2239  0447  1703               	bsf	3,6	;RP1=1, select bank3
  2240  0448  138C               	bcf	12,7	;volsfr
  2241  0449                     l1190:
  2242                           
  2243                           ;eeprom.c: 12:   EECON1bits.WREN = 1;
  2244  0449  150C               	bsf	12,2	;volsfr
  2245  044A                     l1192:
  2246                           
  2247                           ;eeprom.c: 13:   INTCONbits.GIE = 0;
  2248  044A  138B               	bcf	11,7	;volatile
  2249                           
  2250                           ;eeprom.c: 14:   EECON2 = 0x55;
  2251  044B  3055               	movlw	85
  2252  044C  008D               	movwf	13	;volsfr
  2253                           
  2254                           ;eeprom.c: 15:   EECON2 = 0xAA;
  2255  044D  30AA               	movlw	170
  2256  044E  008D               	movwf	13	;volsfr
  2257  044F                     l1194:
  2258                           
  2259                           ;eeprom.c: 16:   EECON1bits.WR = 1;
  2260  044F  148C               	bsf	12,1	;volsfr
  2261  0450                     l1196:
  2262                           
  2263                           ;eeprom.c: 17:   INTCONbits.GIE = 1;
  2264  0450  178B               	bsf	11,7	;volatile
  2265  0451                     l1198:
  2266                           
  2267                           ;eeprom.c: 18:   EECON1bits.WREN = 0;
  2268  0451  110C               	bcf	12,2	;volsfr
  2269  0452                     l1200:
  2270                           
  2271                           ;eeprom.c: 19:   EECON1bits.WR = 0;
  2272  0452  108C               	bcf	12,1	;volsfr
  2273  0453                     l131:
  2274  0453  0008               	return
  2275  0454                     __end_of_EEPROM_Write:
  2276                           
  2277                           	psect	text11
  2278  040E                     __ptext11:	
  2279 ;; *************** function _EEPROM_Read *****************
  2280 ;; Defined at:
  2281 ;;		line 35 in file "eeprom.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  Address         1    wreg     unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  Address         1    0[COMMON] unsigned char 
  2286 ;;  Data            1    1[COMMON] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      unsigned char 
  2289 ;; Registers used:
  2290 ;;		wreg, btemp+1
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         2       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0
  2299 ;;      Totals:         2       0       0       0       0
  2300 ;;Total ram usage:        2 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _EEPROM_Read
  2311  040E                     _EEPROM_Read:
  2312                           
  2313                           ;incstack = 0
  2314                           ; Regs used in _EEPROM_Read: [wreg+btemp+1]
  2315                           ;EEPROM_Read@Address stored from wreg
  2316  040E  00F0               	movwf	EEPROM_Read@Address
  2317  040F                     l1202:
  2318                           
  2319                           ;eeprom.c: 35: uint8_t EEPROM_Read(uint8_t Address);eeprom.c: 36: {;eeprom.c: 37:   uint
      +                          8_t Data;;eeprom.c: 38:   EEADR = Address;
  2320  040F  0870               	movf	EEPROM_Read@Address,w
  2321  0410  1283               	bcf	3,5	;RP0=0, select bank2
  2322  0411  1703               	bsf	3,6	;RP1=1, select bank2
  2323  0412  008D               	movwf	13	;volatile
  2324  0413                     l1204:
  2325                           
  2326                           ;eeprom.c: 39:   EECON1bits.EEPGD = 0;
  2327  0413  1683               	bsf	3,5	;RP0=1, select bank3
  2328  0414  1703               	bsf	3,6	;RP1=1, select bank3
  2329  0415  138C               	bcf	12,7	;volsfr
  2330  0416                     l1206:
  2331                           
  2332                           ;eeprom.c: 40:   EECON1bits.RD = 1;
  2333  0416  140C               	bsf	12,0	;volsfr
  2334  0417                     l1208:
  2335                           
  2336                           ;eeprom.c: 41:   Data = EEDATA;
  2337  0417  1283               	bcf	3,5	;RP0=0, select bank2
  2338  0418  1703               	bsf	3,6	;RP1=1, select bank2
  2339  0419  080C               	movf	12,w	;volatile
  2340  041A  00FF               	movwf	btemp+1
  2341  041B  087F               	movf	btemp+1,w
  2342  041C  00F1               	movwf	EEPROM_Read@Data
  2343  041D                     l1210:
  2344                           
  2345                           ;eeprom.c: 42:   return Data;
  2346  041D  0871               	movf	EEPROM_Read@Data,w
  2347  041E                     l140:
  2348  041E  0008               	return
  2349  041F                     __end_of_EEPROM_Read:
  2350                           
  2351                           	psect	text12
  2352  049F                     __ptext12:	
  2353 ;; *************** function _ADC_Read *****************
  2354 ;; Defined at:
  2355 ;;		line 11 in file "adc.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  channel         1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  channel         1    4[COMMON] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    0[COMMON] unsigned int 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, btemp+1
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         2       0       0       0       0
  2370 ;;      Locals:         1       0       0       0       0
  2371 ;;      Temps:          2       0       0       0       0
  2372 ;;      Totals:         5       0       0       0       0
  2373 ;;Total ram usage:        5 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _ADC_Read
  2384  049F                     _ADC_Read:
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
  2388                           ;ADC_Read@channel stored from wreg
  2389  049F  00F4               	movwf	ADC_Read@channel
  2390  04A0                     l1146:
  2391                           
  2392                           ;adc.c: 11: unsigned int ADC_Read(unsigned char channel);adc.c: 12: {;adc.c: 13:   ADCON
      +                          0 &= 0xC5;
  2393  04A0  30C5               	movlw	197
  2394  04A1  00FF               	movwf	btemp+1
  2395  04A2  087F               	movf	btemp+1,w
  2396  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2397  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2398  04A5  059F               	andwf	31,f	;volatile
  2399                           
  2400                           ;adc.c: 14:   ADCON0 |= channel<<3;
  2401  04A6  0874               	movf	ADC_Read@channel,w	;volatile
  2402  04A7  00F2               	movwf	??_ADC_Read
  2403  04A8  3002               	movlw	2
  2404  04A9                     u405:
  2405  04A9  1003               	clrc
  2406  04AA  0DF2               	rlf	??_ADC_Read,f
  2407  04AB  3EFF               	addlw	-1
  2408  04AC  1D03               	skipz
  2409  04AD  2CA9               	goto	u405
  2410  04AE  1003               	clrc
  2411  04AF  0D72               	rlf	??_ADC_Read,w
  2412  04B0  00FF               	movwf	btemp+1
  2413  04B1  087F               	movf	btemp+1,w
  2414  04B2  049F               	iorwf	31,f	;volatile
  2415  04B3                     l1148:
  2416                           
  2417                           ;adc.c: 15:   _delay((unsigned long)((2)*(20000000/4000.0)));
  2418  04B3  300D               	movlw	13
  2419  04B4  00F3               	movwf	??_ADC_Read+1
  2420  04B5  30FB               	movlw	251
  2421  04B6  00F2               	movwf	??_ADC_Read
  2422  04B7                     u727:
  2423  04B7  0BF2               	decfsz	??_ADC_Read,f
  2424  04B8  2CB7               	goto	u727
  2425  04B9  0BF3               	decfsz	??_ADC_Read+1,f
  2426  04BA  2CB7               	goto	u727
  2427  04BB  2CBC               	nop2
  2428  04BC                     l1150:
  2429                           
  2430                           ;adc.c: 16:   GO_nDONE = 1;
  2431  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2432  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2433  04BE  151F               	bsf	31,2	;volatile
  2434  04BF                     l53:	
  2435                           ;adc.c: 17:   while(GO_nDONE);
  2436                           
  2437  04BF  191F               	btfsc	31,2	;volatile
  2438  04C0  2CC2               	goto	u411
  2439  04C1  2CC3               	goto	u410
  2440  04C2                     u411:
  2441  04C2  2CBF               	goto	l53
  2442  04C3                     u410:
  2443  04C3                     l1152:
  2444                           
  2445                           ;adc.c: 18:   return ((ADRESH<<8)+ADRESL);
  2446  04C3  081E               	movf	30,w	;volatile
  2447  04C4  00F1               	movwf	?_ADC_Read+1
  2448  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2449  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2450  04C7  081E               	movf	30,w	;volatile
  2451  04C8  00F0               	movwf	?_ADC_Read
  2452  04C9                     l56:
  2453  04C9  0008               	return
  2454  04CA                     __end_of_ADC_Read:
  2455                           
  2456                           	psect	text13
  2457  03F8                     __ptext13:	
  2458 ;; *************** function _ADC_Initialize *****************
  2459 ;; Defined at:
  2460 ;;		line 5 in file "adc.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _ADC_Initialize
  2489  03F8                     _ADC_Initialize:
  2490  03F8                     l1108:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _ADC_Initialize: [wreg]
  2493                           
  2494                           
  2495                           ;adc.c: 7:   ADCON0 = 0b01000001;
  2496  03F8  3041               	movlw	65
  2497  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2498  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2499  03FB  009F               	movwf	31	;volatile
  2500                           
  2501                           ;adc.c: 8:   ADCON1 = 0b11000000;
  2502  03FC  30C0               	movlw	192
  2503  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2504  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2505  03FF  009F               	movwf	31	;volatile
  2506  0400                     l50:
  2507  0400  0008               	return
  2508  0401                     __end_of_ADC_Initialize:
  2509  007E                     btemp	set	126	;btemp
  2510  007E                     wtemp0	set	126
  2511                           
  2512                           	psect	config
  2513                           
  2514                           ;Config register CONFIG @ 0x2007
  2515                           ;	Oscillator Selection bits
  2516                           ;	FOSC = HS, HS oscillator
  2517                           ;	Watchdog Timer Enable bit
  2518                           ;	WDTE = OFF, WDT disabled
  2519                           ;	Power-up Timer Enable bit
  2520                           ;	PWRTE = ON, PWRT enabled
  2521                           ;	Brown-out Reset Enable bit
  2522                           ;	BOREN = ON, BOR enabled
  2523                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2524                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2525                           ;	Data EEPROM Memory Code Protection bit
  2526                           ;	CPD = OFF, Data EEPROM code protection off
  2527                           ;	Flash Program Memory Write Enable bits
  2528                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2529                           ;	In-Circuit Debugger Mode bit
  2530                           ;	DEBUG = 0x1, unprogrammed default
  2531                           ;	Flash Program Memory Code Protection bit
  2532                           ;	CP = OFF, Code protection off
  2533  2007                     	org	8199
  2534  2007  3F72               	dw	16242

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[5]), STR_2(CODE[11]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->___awmod
    ___awmod->___awdiv
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _main->_Lcd_Print_String

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5064
                                              3 BANK0     22    22      0
                     _ADC_Initialize
                           _ADC_Read
                        _EEPROM_Read
                       _EEPROM_Write
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1512
                                              8 COMMON     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            6     6      0     244
                                              4 COMMON     6     6      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     459
                                              0 BANK0      3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                      12    12      0     270
                                              1 COMMON    12    12      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _EEPROM_Read
   _EEPROM_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Nov 21 01:32:45 2021

                         pc 0002                          l50 0400                          l53 04BF  
                        l56 04C9                          l80 046E                          l81 0474  
                        l83 0475                          l75 045D                          l76 0460  
                        l77 0466                          l78 0467                          l86 0438  
                        l79 046D                          l95 0546                          l89 040D  
              ___awdiv@sign 0075                          fsr 0004                         l100 059B  
                       l104 04E9                         l113 049E                         l106 04F3  
                       l131 0453                         l107 04F4                         l140 041E  
                       l128 043A                         l392 05F4                         l379 065B  
                       _RB0 0030                         _RD2 0042                         _RD3 0043  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _RD7 0047                         u410 04C3                         u411 04C2  
                       u420 04FB                         u500 0616                         u405 04A9  
                       u421 04FA                         u501 0615                         u350 0459  
                       u351 0458                         u360 0464                         u440 0524  
                       u520 0628                         u600 05B7                         u361 0463  
                       u441 0523                         u521 0627                         u601 05B6  
                       u370 046B                         u371 046A                         u435 0503  
                       u515 061A                         u380 0472                         u460 049E  
                       u540 0639                         u620 05C9                         u381 0471  
                       u461 049D                         u541 0638                         u621 05C8  
                       u470 0440                         u630 05D3                         u471 043F  
                       u455 052C                         u535 0629                         u631 05D2  
                       u615 05BB                         u560 064D                         u480 05FA  
                       u561 064C                         u545 0635                         u481 05F9  
                       u570 0652                         u490 0605                         u650 05E6  
                       u395 04DB                         u707 0566                         u571 0651  
                       u555 0641                         u491 0604                         u651 05E5  
                       u635 05CF                         u660 05EB                         u580 05A1  
                       u717 0430                         u661 05EA                         u645 05DA  
                       u581 05A0                         u590 05AC                         u670 07D2  
                       u727 04B7                         u591 05AB                         u671 07D1  
                       u697 0557                         fsr0 0004                ___awmod@sign 007D  
                      l1100 0423                        l1102 0429                        l1110 0547  
                      l1200 0452                        l1104 042C                        l1112 054D  
                      l1210 041D                        l1202 040F                        l1106 0435  
                      l1130 0571                        l1122 054D                        l1114 054D  
                      l1108 03F8                        l1204 0413                        l1060 0464  
                      l1140 058F                        l1132 0577                        l1124 0553  
                      l1220 05FF                        l1300 0664                        l1150 04BC  
                      l1206 0416                        l1062 046B                        l1070 04D8  
                      l1142 0595                        l1134 057D                        l1126 055C  
                      l1230 0610                        l1222 0601                        l1214 05F5  
                      l1310 0680                        l1302 0665                        l1152 04C3  
                      l1208 0417                        l1064 0472                        l1056 0455  
                      l1144 0401                        l1072 04E6                        l1160 050C  
                      l1136 0583                        l1128 056B                        l1240 0628  
                      l1232 0616                        l1224 0605                        l1216 05F6  
                      l1320 06FB                        l1312 06A0                        l1304 066A  
                      l1146 04A0                        l1058 0459                        l1090 04F3  
                      l1074 04E9                        l1066 04CB                        l1170 0535  
                      l1162 0511                        l1138 0589                        l1242 0639  
                      l1234 0619                        l1250 064D                        l1226 060A  
                      l1218 05FA                        l1330 0725                        l1322 0701  
                      l1314 06C0                        l1306 066F                        l1148 04B3  
                      l1084 04EA                        l1076 04E9                        l1068 04D5  
                      l1180 0489                        l1172 053A                        l1164 0517  
                      l1156 04F6                        l1252 0652                        l1244 063F  
                      l1236 0620                        l1228 060E                        l1260 059D  
                      l1340 07A2                        l1332 0747                        l1324 070A  
                      l1316 06E0                        l1308 0674                        l1190 0449  
                      l1086 04F0                        l1182 0491                        l1174 0540  
                      l1158 04FB                        l1166 051E                        l1254 0657  
                      l1246 0640                        l1238 0624                        l1270 05B1  
                      l1262 05A1                        l1350 07CC                        l1342 07A8  
                      l1334 0767                        l1326 0713                        l1318 06F3  
                      l1192 044A                        l1184 043A                        l1088 04F3  
                      l1176 0479                        l1168 0524                        l1248 0647  
                      l1280 05C9                        l1272 05B7                        l1264 05A6  
                      l1352 07D2                        l1344 07B1                        l1336 0787  
                      l1328 071C                        l1194 044F                        l1186 0440  
                      l1098 0420                        l1178 047C                        l1290 05EB  
                      l1282 05D3                        l1274 05BA                        l1266 05A8  
                      l1258 059C                        l1354 07DC                        l1346 07BA  
                      l1338 079A                        l1196 0450                        l1188 0446  
                      l1292 05F0                        l1284 05D9                        l1276 05C1  
                      l1268 05AC                        l1356 07EA                        l1348 07C3  
                      l1198 0451                        l1286 05E0                        l1278 05C5  
                      l1358 07F2                        l1288 05E6                        l1296 065C  
                      l1298 0663                        STR_1 000F                        STR_2 0009  
                      STR_3 000F                        _main 065C                        btemp 007E  
          __end_of_ADC_Read 04CA                        start 0000          Lcd_Print_Char@data 0074  
           __end_of_Lcd_Cmd 0439        __end_of_EEPROM_Write 0454                  _Lcd_SetBit 0454  
                     ?_main 0070             __end_of___awdiv 065C                       _EEADR 010D  
           __end_of___awmod 05F5             ___awdiv@divisor 0070             ___awdiv@counter 0074  
   __size_of_Lcd_Set_Cursor 0052                       _TRISD 0088                       pclath 000A  
 __size_of_Lcd_Print_String 0029                       status 0003                       wtemp0 007E  
          EEPROM_Write@Data 0070     __size_of_Lcd_Print_Char 002B        __size_of_EEPROM_Read 0011  
           __initialization 07FC                __end_of_main 07FC                      ??_main 0023  
        __size_of_Lcd_Clear 000D          __size_of_Lcd_Start 0055                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON2 018D            ___awdiv@dividend 0072  
                 ??_Lcd_Cmd 0071                      _TRISB0 0430                      _TRISA4 042C  
                 ??___awdiv 0074                   ??___awmod 007C             ADC_Read@channel 0074  
               ?_Lcd_SetBit 0070            ___awdiv@quotient 0076             ___awmod@divisor 0078  
           ___awmod@counter 007C                      main@a1 0025                      main@a2 0027  
                    main@a3 0029                      main@a4 002B                   ?_ADC_Read 0070  
           Lcd_Set_Cursor@a 0076             Lcd_Set_Cursor@b 0074             Lcd_Set_Cursor@y 0078  
           Lcd_Set_Cursor@z 0077     __end_of__initialization 07FC           __end_of_Lcd_Clear 040E  
     __size_of_EEPROM_Write 001B           __end_of_Lcd_Start 059C              __pcstackCOMMON 0070  
            _Lcd_Set_Cursor 04F5                  ??_ADC_Read 0072                _EEPROM_Write 0439  
          _Lcd_Print_String 0476         __size_of_Lcd_SetBit 0022              _Lcd_Print_Char 04CA  
                __pmaintext 065C          Lcd_SetBit@data_bit 0070      __end_of_Lcd_Set_Cursor 0547  
   __size_of_ADC_Initialize 0009                  __stringtab 0003                     _Lcd_Cmd 041F  
    __end_of_Lcd_Print_Char 04F5                     ___awdiv 05F5                     ___awmod 059C  
           ?_Lcd_Set_Cursor 0074                     __ptext1 059C                     __ptext2 05F5  
                   __ptext3 0547                     __ptext4 04F5                     __ptext5 0476  
                   __ptext6 04CA                     __ptext7 0401                     __ptext8 041F  
                   __ptext9 0454            ___awmod@dividend 007A                     main@Sa1 002D  
                   main@Sa2 002F                     main@Sa3 0031                     main@Sa4 0033  
                   main@adc 0037        end_of_initialization 07FC               ??_EEPROM_Read 0070  
           ?_Lcd_Print_Char 0070                ??_Lcd_SetBit 0070           __size_of_ADC_Read 002B  
        __end_of_Lcd_SetBit 0476         __end_of_EEPROM_Read 041F                   _Lcd_Clear 0401  
                 _Lcd_Start 0547              _ADC_Initialize 03F8    __end_of_Lcd_Print_String 049F  
       start_initialization 07FC           Lcd_Print_String@a 0022           Lcd_Print_String@i 0020  
                ?_Lcd_Clear 0070                  ?_Lcd_Start 0070      __end_of_ADC_Initialize 0401  
Lcd_Print_Char@Lower_Nibble 0072                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_Lcd_Cmd 0070                 _EEPROM_Read 040E            ??_Lcd_Set_Cursor 0075  
                  ?___awdiv 0070                    ?___awmod 0078             ?_ADC_Initialize 0070  
                 __pstrings 0003                    _ADC_Read 049F            ??_Lcd_Print_Char 0071  
                  Lcd_Cmd@a 0073                    _GO_nDONE 00FA                 ??_Lcd_Clear 0074  
               ??_Lcd_Start 0074                 __stringbase 0008            __size_of_Lcd_Cmd 001A  
                _EECON1bits 018C            __size_of___awdiv 0067            __size_of___awmod 0059  
        __end_of__stringtab 0009           ?_Lcd_Print_String 0070          ??_Lcd_Print_String 007D  
                  __ptext10 0439                    __ptext11 040E                    __ptext12 049F  
                  __ptext13 03F8               ?_EEPROM_Write 0070               __size_of_main 01A0  
                  main@Sadc 0035  Lcd_Print_Char@Upper_Nibble 0073                  _INTCONbits 000B  
        EEPROM_Read@Address 0070              ??_EEPROM_Write 0071                ?_EEPROM_Read 0070  
          ??_ADC_Initialize 0070                   stringcode 0003          Lcd_Set_Cursor@temp 0079  
       EEPROM_Write@Address 0071                    stringdir 0003                    stringtab 0003  
           EEPROM_Read@Data 0071  
