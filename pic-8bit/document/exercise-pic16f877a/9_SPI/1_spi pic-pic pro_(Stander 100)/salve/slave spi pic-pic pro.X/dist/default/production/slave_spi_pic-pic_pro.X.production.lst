

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Dec 12 08:52:35 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0013                     _SSPBUF	set	19
   230  0014                     _SSPCON	set	20
   231  0006                     _PORTBbits	set	6
   232  0008                     _PORTD	set	8
   233  0094                     _SSPSTATbits	set	148
   234  0094                     _SSPSTAT	set	148
   235  0085                     _TRISAbits	set	133
   236  0088                     _TRISD	set	136
   237  009F                     _ADCON1	set	159
   238  043B                     _TRISC3	set	1083
   239  043D                     _TRISC5	set	1085
   240  040F                     _nRBPU	set	1039
   241                           
   242                           	psect	cinit
   243  07FC                     start_initialization:	
   244                           ; #config settings
   245                           
   246  07FC                     __initialization:
   247  07FC                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  07FC                     __end_of__initialization:
   251  07FC  0183               	clrf	3
   252  07FD  120A  118A  2F98   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_SPI_Init:
   257  0070                     ?_SPI_Read:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ??_SPI_Read:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_SPI_Write:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ??_SPI_Write:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_SPI_ReceiveWait:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ??_SPI_ReceiveWait:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_SPI_DataReady:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     SPI_Init@sDataSample:	
   282                           ; 2 bytes @ 0x0
   283                           
   284  0070                     SPI_Write@dat:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289  0070                     	ds	1
   290  0071                     SPI_Init@sClockIdle:
   291                           
   292                           ; 1 bytes @ 0x1
   293  0071                     	ds	1
   294  0072                     ??_SPI_DataReady:
   295  0072                     SPI_Init@sTransmitEdge:	
   296                           ; 1 bytes @ 0x2
   297                           
   298                           
   299                           ; 1 bytes @ 0x2
   300  0072                     	ds	1
   301  0073                     ??_SPI_Init:
   302  0073                     SPI_Init@sType:	
   303                           ; 1 bytes @ 0x3
   304                           
   305                           
   306                           ; 1 bytes @ 0x3
   307  0073                     	ds	1
   308  0074                     ??_main:
   309                           
   310                           ; 1 bytes @ 0x4
   311  0074                     	ds	3
   312  0077                     main@r_data:
   313                           
   314                           ; 1 bytes @ 0x7
   315  0077                     	ds	1
   316  0078                     main@w_data:
   317                           
   318                           ; 1 bytes @ 0x8
   319  0078                     	ds	1
   320                           
   321                           	psect	maintext
   322  0798                     __pmaintext:	
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 27 in file "main slave.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  w_data          1    8[COMMON] unsigned char 
   333 ;;  r_data          1    7[COMMON] unsigned char 
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : B00/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         2       0       0       0       0
   345 ;;      Temps:          3       0       0       0       0
   346 ;;      Totals:         5       0       0       0       0
   347 ;;Total ram usage:        5 bytes
   348 ;; Hardware stack levels required when called:    2
   349 ;; This function calls:
   350 ;;		_SPI_DataReady
   351 ;;		_SPI_Init
   352 ;;		_SPI_Read
   353 ;;		_SPI_Write
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _main
   361  0798                     _main:
   362  0798                     l749:	
   363                           ;incstack = 0
   364                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   365                           
   366                           
   367                           ;main slave.c: 29:     ADCON1=0x07;
   368  0798  3007               	movlw	7
   369  0799  1683               	bsf	3,5	;RP0=1, select bank1
   370  079A  1303               	bcf	3,6	;RP1=0, select bank1
   371  079B  009F               	movwf	31	;volatile
   372  079C                     l751:
   373                           
   374                           ;main slave.c: 30:     nRBPU = 0;
   375  079C  1381               	bcf	1,7	;volatile
   376  079D                     l753:
   377                           
   378                           ;main slave.c: 32:     TRISD = 0x00;
   379  079D  0188               	clrf	8	;volatile
   380  079E                     l755:
   381                           
   382                           ;main slave.c: 33:     PORTD = 0x00;
   383  079E  1283               	bcf	3,5	;RP0=0, select bank0
   384  079F  1303               	bcf	3,6	;RP1=0, select bank0
   385  07A0  0188               	clrf	8	;volatile
   386  07A1                     l757:
   387                           
   388                           ;main slave.c: 35:     TRISAbits.TRISA5 = 1;
   389  07A1  1683               	bsf	3,5	;RP0=1, select bank1
   390  07A2  1303               	bcf	3,6	;RP1=0, select bank1
   391  07A3  1685               	bsf	5,5	;volatile
   392  07A4                     l759:
   393                           
   394                           ;main slave.c: 37:     char w_data = 0;
   395  07A4  01F8               	clrf	main@w_data
   396  07A5                     l761:
   397                           
   398                           ;main slave.c: 38:     char r_data = 0;
   399  07A5  01F7               	clrf	main@r_data
   400  07A6                     l763:
   401                           
   402                           ;main slave.c: 40:     SPI_Init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   403  07A6  01F0               	clrf	SPI_Init@sDataSample
   404  07A7  01F1               	clrf	SPI_Init@sClockIdle
   405  07A8  01F2               	clrf	SPI_Init@sTransmitEdge
   406  07A9  3024               	movlw	36
   407  07AA  120A  118A  2782  120A  118A  	fcall	_SPI_Init
   408  07AF                     l765:
   409                           
   410                           ;main slave.c: 43:     {;main slave.c: 44:         if(!PORTBbits.RB0)
   411  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   412  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   413  07B1  1806               	btfsc	6,0	;volatile
   414  07B2  2FB4               	goto	u91
   415  07B3  2FB5               	goto	u90
   416  07B4                     u91:
   417  07B4  2FC6               	goto	l771
   418  07B5                     u90:
   419  07B5                     l767:
   420                           
   421                           ;main slave.c: 45:         {;main slave.c: 46:             w_data++;
   422  07B5  3001               	movlw	1
   423  07B6  00FF               	movwf	btemp+1
   424  07B7  087F               	movf	btemp+1,w
   425  07B8  07F8               	addwf	main@w_data,f
   426  07B9                     l769:
   427                           
   428                           ;main slave.c: 47:             _delay((unsigned long)((250)*(8000000/4000.0)));
   429  07B9  3003               	movlw	3
   430  07BA  00F6               	movwf	??_main+2
   431  07BB  308A               	movlw	138
   432  07BC  00F5               	movwf	??_main+1
   433  07BD  3055               	movlw	85
   434  07BE  00F4               	movwf	??_main
   435  07BF                     u127:
   436  07BF  0BF4               	decfsz	??_main,f
   437  07C0  2FBF               	goto	u127
   438  07C1  0BF5               	decfsz	??_main+1,f
   439  07C2  2FBF               	goto	u127
   440  07C3  0BF6               	decfsz	??_main+2,f
   441  07C4  2FBF               	goto	u127
   442  07C5  2FC6               	nop2
   443  07C6                     l771:
   444                           
   445                           ;main slave.c: 49:         if(!PORTBbits.RB1)
   446  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   447  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   448  07C8  1886               	btfsc	6,1	;volatile
   449  07C9  2FCB               	goto	u101
   450  07CA  2FCC               	goto	u100
   451  07CB                     u101:
   452  07CB  2FDB               	goto	l777
   453  07CC                     u100:
   454  07CC                     l773:
   455                           
   456                           ;main slave.c: 50:         {;main slave.c: 51:             w_data--;
   457  07CC  3001               	movlw	1
   458  07CD  02F8               	subwf	main@w_data,f
   459  07CE                     l775:
   460                           
   461                           ;main slave.c: 52:             _delay((unsigned long)((250)*(8000000/4000.0)));
   462  07CE  3003               	movlw	3
   463  07CF  00F6               	movwf	??_main+2
   464  07D0  308A               	movlw	138
   465  07D1  00F5               	movwf	??_main+1
   466  07D2  3055               	movlw	85
   467  07D3  00F4               	movwf	??_main
   468  07D4                     u137:
   469  07D4  0BF4               	decfsz	??_main,f
   470  07D5  2FD4               	goto	u137
   471  07D6  0BF5               	decfsz	??_main+1,f
   472  07D7  2FD4               	goto	u137
   473  07D8  0BF6               	decfsz	??_main+2,f
   474  07D9  2FD4               	goto	u137
   475  07DA  2FDB               	nop2
   476  07DB                     l777:
   477                           
   478                           ;main slave.c: 56:         {;main slave.c: 58:         };main slave.c: 61:         if(SP
      +                          I_DataReady())
   479  07DB  120A  118A  2774  120A  118A  	fcall	_SPI_DataReady
   480  07E0  0870               	movf	?_SPI_DataReady,w
   481  07E1  0471               	iorwf	?_SPI_DataReady+1,w
   482  07E2  1903               	btfsc	3,2
   483  07E3  2FE5               	goto	u111
   484  07E4  2FE6               	goto	u110
   485  07E5                     u111:
   486  07E5  2FF4               	goto	l783
   487  07E6                     u110:
   488  07E6                     l779:
   489                           
   490                           ;main slave.c: 62:         {;main slave.c: 63:             r_data = SPI_Read();
   491  07E6  120A  118A  276B  120A  118A  	fcall	_SPI_Read
   492  07EB  00FF               	movwf	btemp+1
   493  07EC  087F               	movf	btemp+1,w
   494  07ED  00F7               	movwf	main@r_data
   495  07EE                     l781:
   496                           
   497                           ;main slave.c: 64:             SPI_Write(w_data);
   498  07EE  0878               	movf	main@w_data,w
   499  07EF  120A  118A  275E  120A  118A  	fcall	_SPI_Write
   500  07F4                     l783:
   501                           
   502                           ;main slave.c: 66:         PORTD = r_data;
   503  07F4  0877               	movf	main@r_data,w
   504  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   505  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   506  07F7  0088               	movwf	8	;volatile
   507  07F8  2FAF               	goto	l765
   508  07F9  120A  118A  2800   	ljmp	start
   509  07FC                     __end_of_main:
   510                           
   511                           	psect	text1
   512  075E                     __ptext1:	
   513 ;; *************** function _SPI_Write *****************
   514 ;; Defined at:
   515 ;;		line 39 in file "spi.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  dat             1    wreg     unsigned char 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  dat             1    0[COMMON] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         1       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         1       0       0       0       0
   533 ;;Total ram usage:        1 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _SPI_Write
   544  075E                     _SPI_Write:
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _SPI_Write: [wreg]
   548                           ;SPI_Write@dat stored from wreg
   549  075E  00F0               	movwf	SPI_Write@dat
   550  075F                     l689:
   551                           
   552                           ;spi.c: 39: void SPI_Write(char dat);spi.c: 40: {;spi.c: 41:     SSPBUF = dat;
   553  075F  0870               	movf	SPI_Write@dat,w
   554  0760  1283               	bcf	3,5	;RP0=0, select bank0
   555  0761  1303               	bcf	3,6	;RP1=0, select bank0
   556  0762  0093               	movwf	19	;volatile
   557  0763                     l59:
   558  0763  0008               	return
   559  0764                     __end_of_SPI_Write:
   560                           
   561                           	psect	text2
   562  076B                     __ptext2:	
   563 ;; *************** function _SPI_Read *****************
   564 ;; Defined at:
   565 ;;		line 68 in file "spi.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      unsigned char 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    1
   586 ;; This function calls:
   587 ;;		_SPI_ReceiveWait
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _SPI_Read
   595  076B                     _SPI_Read:
   596  076B                     l683:	
   597                           ;incstack = 0
   598                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   599                           
   600                           
   601                           ;spi.c: 70:     SPI_ReceiveWait();
   602  076B  120A  118A  2764  120A  118A  	fcall	_SPI_ReceiveWait
   603  0770                     l685:
   604                           
   605                           ;spi.c: 71:     return(SSPBUF);
   606  0770  1283               	bcf	3,5	;RP0=0, select bank0
   607  0771  1303               	bcf	3,6	;RP1=0, select bank0
   608  0772  0813               	movf	19,w	;volatile
   609  0773                     l67:
   610  0773  0008               	return
   611  0774                     __end_of_SPI_Read:
   612                           
   613                           	psect	text3
   614  0764                     __ptext3:	
   615 ;; *************** function _SPI_ReceiveWait *****************
   616 ;; Defined at:
   617 ;;		line 28 in file "spi.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		None
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_SPI_Read
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _SPI_ReceiveWait
   646  0764                     _SPI_ReceiveWait:
   647  0764                     l659:	
   648                           ;incstack = 0
   649                           ; Regs used in _SPI_ReceiveWait: []
   650                           
   651  0764                     l53:	
   652                           ;spi.c: 30:     while ( !SSPSTATbits.BF );
   653                           
   654  0764  1683               	bsf	3,5	;RP0=1, select bank1
   655  0765  1303               	bcf	3,6	;RP1=0, select bank1
   656  0766  1C14               	btfss	20,0	;volatile
   657  0767  2F69               	goto	u11
   658  0768  2F6A               	goto	u10
   659  0769                     u11:
   660  0769  2F64               	goto	l53
   661  076A                     u10:
   662  076A                     l56:
   663  076A  0008               	return
   664  076B                     __end_of_SPI_ReceiveWait:
   665                           
   666                           	psect	text4
   667  0782                     __ptext4:	
   668 ;; *************** function _SPI_Init *****************
   669 ;; Defined at:
   670 ;;		line 6 in file "spi.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  sType           1    wreg     enum E850
   673 ;;  sDataSample     1    0[COMMON] enum E858
   674 ;;  sClockIdle      1    1[COMMON] enum E862
   675 ;;  sTransmitEdg    1    2[COMMON] enum E866
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  sType           1    3[COMMON] enum E850
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         3       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         4       0       0       0       0
   691 ;;Total ram usage:        4 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _SPI_Init
   702  0782                     _SPI_Init:
   703                           
   704                           ;incstack = 0
   705                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   706                           ;SPI_Init@sType stored from wreg
   707  0782  00F3               	movwf	SPI_Init@sType
   708  0783                     l727:
   709                           
   710                           ;spi.c: 6: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 7: {;spi.c: 8:     TRISC5 = 0;
   711  0783  1683               	bsf	3,5	;RP0=1, select bank1
   712  0784  1303               	bcf	3,6	;RP1=0, select bank1
   713  0785  1287               	bcf	7,5	;volatile
   714                           
   715                           ;spi.c: 9:     if(sType & 0b00000100)
   716  0786  1D73               	btfss	SPI_Init@sType,2
   717  0787  2F89               	goto	u71
   718  0788  2F8A               	goto	u70
   719  0789                     u71:
   720  0789  2F8E               	goto	l733
   721  078A                     u70:
   722  078A                     l729:
   723                           
   724                           ;spi.c: 10:     {;spi.c: 11:         SSPSTAT = sTransmitEdge;
   725  078A  0872               	movf	SPI_Init@sTransmitEdge,w
   726  078B  0094               	movwf	20	;volatile
   727  078C                     l731:
   728                           
   729                           ;spi.c: 12:         TRISC3 = 1;
   730  078C  1587               	bsf	7,3	;volatile
   731                           
   732                           ;spi.c: 13:     }
   733  078D  2F92               	goto	l49
   734  078E                     l733:
   735                           
   736                           ;spi.c: 15:     {;spi.c: 16:         SSPSTAT = sDataSample | sTransmitEdge;
   737  078E  0870               	movf	SPI_Init@sDataSample,w
   738  078F  0472               	iorwf	SPI_Init@sTransmitEdge,w
   739  0790  0094               	movwf	20	;volatile
   740  0791                     l735:
   741                           
   742                           ;spi.c: 17:         TRISC3 = 0;
   743  0791  1187               	bcf	7,3	;volatile
   744  0792                     l49:	
   745                           ;spi.c: 18:     }
   746                           
   747                           
   748                           ;spi.c: 20:     SSPCON = sType | sClockIdle;
   749  0792  0873               	movf	SPI_Init@sType,w
   750  0793  0471               	iorwf	SPI_Init@sClockIdle,w
   751  0794  1283               	bcf	3,5	;RP0=0, select bank0
   752  0795  1303               	bcf	3,6	;RP1=0, select bank0
   753  0796  0094               	movwf	20	;volatile
   754  0797                     l50:
   755  0797  0008               	return
   756  0798                     __end_of_SPI_Init:
   757                           
   758                           	psect	text5
   759  0774                     __ptext5:	
   760 ;; *************** function _SPI_DataReady *****************
   761 ;; Defined at:
   762 ;;		line 50 in file "spi.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  2    0[COMMON] unsigned int 
   769 ;; Registers used:
   770 ;;		wreg, status,2
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         2       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0
   779 ;;      Totals:         2       0       0       0       0
   780 ;;Total ram usage:        2 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _SPI_DataReady
   791  0774                     _SPI_DataReady:
   792  0774                     l737:	
   793                           ;incstack = 0
   794                           ; Regs used in _SPI_DataReady: [wreg+status,2]
   795                           
   796                           
   797                           ;spi.c: 52:     if(SSPSTATbits.BF)
   798  0774  1683               	bsf	3,5	;RP0=1, select bank1
   799  0775  1303               	bcf	3,6	;RP1=0, select bank1
   800  0776  1C14               	btfss	20,0	;volatile
   801  0777  2F79               	goto	u81
   802  0778  2F7A               	goto	u80
   803  0779                     u81:
   804  0779  2F7F               	goto	l745
   805  077A                     u80:
   806  077A                     l739:
   807                           
   808                           ;spi.c: 53:         return 1;
   809  077A  3001               	movlw	1
   810  077B  00F0               	movwf	?_SPI_DataReady
   811  077C  3000               	movlw	0
   812  077D  00F1               	movwf	?_SPI_DataReady+1
   813  077E  2F81               	goto	l63
   814  077F                     l745:
   815                           
   816                           ;spi.c: 55:         return 0;
   817  077F  01F0               	clrf	?_SPI_DataReady
   818  0780  01F1               	clrf	?_SPI_DataReady+1
   819  0781                     l63:
   820  0781  0008               	return
   821  0782                     __end_of_SPI_DataReady:
   822  007E                     btemp	set	126	;btemp
   823  007E                     wtemp0	set	126
   824                           
   825                           	psect	config
   826                           
   827                           ;Config register CONFIG @ 0x2007
   828                           ;	Oscillator Selection bits
   829                           ;	FOSC = HS, HS oscillator
   830                           ;	Watchdog Timer Enable bit
   831                           ;	WDTE = OFF, WDT disabled
   832                           ;	Power-up Timer Enable bit
   833                           ;	PWRTE = ON, PWRT enabled
   834                           ;	Brown-out Reset Enable bit
   835                           ;	BOREN = ON, BOR enabled
   836                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   837                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   838                           ;	Data EEPROM Memory Code Protection bit
   839                           ;	CPD = OFF, Data EEPROM code protection off
   840                           ;	Flash Program Memory Write Enable bits
   841                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   842                           ;	In-Circuit Debugger Mode bit
   843                           ;	DEBUG = 0x1, unprogrammed default
   844                           ;	Flash Program Memory Code Protection bit
   845                           ;	CP = OFF, Code protection off
   846  2007                     	org	8199
   847  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     424
                                              4 COMMON     5     5      0
                      _SPI_DataReady
                           _SPI_Init
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             0     0      0       0
                    _SPI_ReceiveWait
 ---------------------------------------------------------------------------------
 (2) _SPI_ReceiveWait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _SPI_DataReady                                        2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_DataReady
   _SPI_Init
   _SPI_Read
     _SPI_ReceiveWait
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Dec 12 08:52:35 2021

             _SSPSTATbits 0094                        l50 0797                        l53 0764  
                      l63 0781                        l56 076A                        l49 0792  
                      l67 0773                        l59 0763            ?_SPI_DataReady 0070  
                      u10 076A                        u11 0769                        u70 078A  
                      u71 0789                        u80 077A                        u81 0779  
                      u90 07B5                        u91 07B4                       l731 078C  
                     l733 078E                       l735 0791                       l727 0783  
                     l751 079C                       l745 077F                       l737 0774  
                     l729 078A                       l761 07A5                       l753 079D  
                     l739 077A                       l659 0764                       l683 076B  
                     l771 07C6                       l763 07A6                       l755 079E  
                     l685 0770                       l781 07EE                       l773 07CC  
                     l765 07AF                       l757 07A1                       l749 0798  
                     l783 07F4                       l775 07CE                       l767 07B5  
                     l759 07A4                       l689 075F                       l777 07DB  
                     l769 07B9                       l779 07E6                       u100 07CC  
                     u101 07CB                       u110 07E6                       u111 07E5  
                     u127 07BF                       u137 07D4           _SPI_ReceiveWait 0764  
                    _main 0798                      btemp 007E        SPI_Init@sClockIdle 0071  
                    start 0000       SPI_Init@sDataSample 0070                     ?_main 0070  
                   _PORTD 0008                     _TRISD 0088                     _nRBPU 040F  
   SPI_Init@sTransmitEdge 0072          __end_of_SPI_Init 0798          __end_of_SPI_Read 0774  
                   status 0003                     wtemp0 007E        __size_of_SPI_Write 0006  
         __initialization 07FC           ??_SPI_DataReady 0072              __end_of_main 07FC  
 __end_of_SPI_ReceiveWait 076B                    ??_main 0074                    _ADCON1 009F  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013              SPI_Write@dat 0070         __end_of_SPI_Write 0764  
 __end_of__initialization 07FC             SPI_Init@sType 0073            __pcstackCOMMON 0070  
               ?_SPI_Init 0070                 ?_SPI_Read 0070          ?_SPI_ReceiveWait 0070  
              __pmaintext 0798                ??_SPI_Init 0073                ??_SPI_Read 0070  
                 _SSPSTAT 0094                   __ptext1 075E                   __ptext2 076B  
                 __ptext3 0764                   __ptext4 0782                   __ptext5 0774  
    end_of_initialization 07FC     __end_of_SPI_DataReady 0782                 _PORTBbits 0006  
               _TRISAbits 0085                 _SPI_Write 075E                main@r_data 0077  
              main@w_data 0078         __size_of_SPI_Init 0016         __size_of_SPI_Read 0009  
     start_initialization 07FC                ?_SPI_Write 0070                 ___latbits 0002  
__size_of_SPI_ReceiveWait 0007               ??_SPI_Write 0070                  _SPI_Init 0782  
                _SPI_Read 076B         ??_SPI_ReceiveWait 0070    __size_of_SPI_DataReady 000E  
           __size_of_main 0064             _SPI_DataReady 0774  
