

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Dec 25 09:22:12 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  0239                     __pidataBANK0:
   376                           
   377                           ;initializer for _BackLight_State
   378  0239  3408               	retlw	8
   379                           
   380                           ;initializer for _temp
   381  023A  3430               	retlw	48
   382  023B  3430               	retlw	48
   383  023C  3430               	retlw	48
   384  023D  342E               	retlw	46
   385  023E  3430               	retlw	48
   386  023F  3430               	retlw	48
   387  0240  3430               	retlw	48
   388  0241  3430               	retlw	48
   389  0242  3420               	retlw	32
   390  0243  3443               	retlw	67
   391  0244  3400               	retlw	0
   392  0013                     _SSPBUF	set	19
   393  0014                     _SSPCON	set	20
   394  0063                     _SSPIF	set	99
   395  0047                     _RD7	set	71
   396  0093                     _SSPADD	set	147
   397  0094                     _SSPSTAT	set	148
   398  0091                     _SSPCON2	set	145
   399  009F                     _ADCON1	set	159
   400  009C                     _CMCON	set	156
   401  048B                     _RCEN	set	1163
   402  048E                     _ACKSTAT	set	1166
   403  048C                     _ACKEN	set	1164
   404  048D                     _ACKDT	set	1165
   405  048A                     _PEN	set	1162
   406  0489                     _RSEN	set	1161
   407  0488                     _SEN	set	1160
   408  043C                     _TRISC4	set	1084
   409  043B                     _TRISC3	set	1083
   410  0447                     _TRISD7	set	1095
   411                           
   412                           	psect	strings
   413  0003                     __pstrings:
   414  0003                     stringtab:
   415  0003                     __stringtab:
   416                           
   417                           ;	String table - string pointers are 1 byte each
   418  0003  1BFF               	btfsc	btemp+1,7
   419  0004  280D               	ljmp	stringcode
   420  0005  1383               	bcf	3,7
   421  0006  187F               	btfsc	btemp+1,0
   422  0007  1783               	bsf	3,7
   423  0008  0800               	movf	0,w
   424  0009  0A84               	incf	4,f
   425  000A  1903               	skipnz
   426  000B  0AFF               	incf	btemp+1,f
   427  000C  0008               	return
   428  000D                     stringcode:
   429  000D                     stringdir:
   430  000D  3000               	movlw	high stringdir
   431  000E  008A               	movwf	10
   432  000F  0804               	movf	4,w
   433  0010  0A84               	incf	4,f
   434  0011  0782               	addwf	2,f
   435  0012                     __stringbase:
   436  0012  3400               	retlw	0
   437  0013                     __end_of__stringtab:
   438  0013                     STR_1:
   439  0013  3454               	retlw	84	;'T'
   440  0014  3465               	retlw	101	;'e'
   441  0015  346D               	retlw	109	;'m'
   442  0016  3470               	retlw	112	;'p'
   443  0017  3465               	retlw	101	;'e'
   444  0018  3472               	retlw	114	;'r'
   445  0019  3461               	retlw	97	;'a'
   446  001A  3474               	retlw	116	;'t'
   447  001B  3475               	retlw	117	;'u'
   448  001C  3472               	retlw	114	;'r'
   449  001D  3465               	retlw	101	;'e'
   450  001E  343A               	retlw	58	;':'
   451  001F  3400               	retlw	0
   452  0020                     STR_2:
   453  0020  3420               	retlw	32	;' '
   454  0021  3420               	retlw	32	;' '
   455  0022  3445               	retlw	69	;'E'
   456  0023  3472               	retlw	114	;'r'
   457  0024  3472               	retlw	114	;'r'
   458  0025  346F               	retlw	111	;'o'
   459  0026  3472               	retlw	114	;'r'
   460  0027  3421               	retlw	33	;'!'
   461  0028  3420               	retlw	32	;' '
   462  0029  3420               	retlw	32	;' '
   463  002A  3400               	retlw	0
   464                           
   465                           	psect	cinit
   466  07EA                     start_initialization:	
   467                           ; #config settings
   468                           
   469  07EA                     __initialization:
   470                           
   471                           ; Initialize objects allocated to BANK0
   472  07EA  1383               	bcf	3,7	;select IRP bank0
   473  07EB  303D               	movlw	low (__pdataBANK0+12)
   474  07EC  00FD               	movwf	btemp+-1
   475  07ED  3002               	movlw	high __pidataBANK0
   476  07EE  00FE               	movwf	btemp
   477  07EF  3039               	movlw	low __pidataBANK0
   478  07F0  00FF               	movwf	btemp+1
   479  07F1  3031               	movlw	low __pdataBANK0
   480  07F2  0084               	movwf	4
   481  07F3  120A  118A  2266  120A  118A  	fcall	init_ram0
   482                           
   483                           ; Clear objects allocated to BANK0
   484  07F8  01BD               	clrf	__pbssBANK0& (0+127)
   485  07F9  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   486  07FA  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   487                           
   488                           ; Clear objects allocated to BITBANK0
   489  07FB  01C0               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   490  07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493  07FC                     __end_of__initialization:
   494  07FC  0183               	clrf	3
   495  07FD  120A  118A  2E49   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	bitbssBANK0
   498  0200                     __pbitbssBANK0:
   499  0200                     ds18b20_read_bit@value:
   500  0200                     	ds	1
   501                           
   502                           	psect	bssBANK0
   503  003D                     __pbssBANK0:
   504  003D                     _RS:
   505  003D                     	ds	1
   506  003E                     _raw_temp:
   507  003E                     	ds	2
   508                           
   509                           	psect	dataBANK0
   510  0031                     __pdataBANK0:
   511  0031                     _BackLight_State:
   512  0031                     	ds	1
   513  0032                     _temp:
   514  0032                     	ds	11
   515                           
   516                           	psect	inittext
   517  0262                     init_fetch0:	
   518                           ;	Called with low address in FSR and high address in W
   519                           
   520  0262  087E               	movf	btemp,w
   521  0263  008A               	movwf	10
   522  0264  087F               	movf	btemp+1,w
   523  0265  0082               	movwf	2
   524  0266                     init_ram0:	
   525                           ;Called with:
   526                           ;	high address of idata address in btemp 
   527                           ;	low address of idata address in btemp+1 
   528                           ;	low address of data in FSR
   529                           ;	high address + 1 of data in btemp-1
   530                           
   531  0266  120A  118A  2262  120A  118A  	fcall	init_fetch0
   532  026B  0080               	movwf	0
   533  026C  0A84               	incf	4,f
   534  026D  0804               	movf	4,w
   535  026E  067D               	xorwf	btemp+-1,w
   536  026F  1903               	btfsc	3,2
   537  0270  3400               	retlw	0
   538  0271  0AFF               	incf	btemp+1,f
   539  0272  1903               	btfsc	3,2
   540  0273  0AFE               	incf	btemp,f
   541  0274  2A66               	goto	init_ram0
   542                           
   543                           	psect	cstackCOMMON
   544  0070                     __pcstackCOMMON:
   545  0070                     ?_ds18b20_start:
   546  0070                     ?_ds18b20_read_bit:	
   547                           ; 1 bit 
   548                           
   549  0070                     ?_ds18b20_read:	
   550                           ; 1 bit 
   551                           
   552  0070                     ??_ds18b20_start:	
   553                           ; 1 bit 
   554                           
   555  0070                     ?_ds18b20_write_bit:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ??_ds18b20_write_bit:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_ds18b20_write_byte:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ??_ds18b20_read_bit:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_ds18b20_read_byte:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_main:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_I2C_Wait:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ??_I2C_Wait:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_I2C_Start:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ??_I2C_Start:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_I2C_Stop:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ??_I2C_Stop:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_I2C_Write_Char:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ??_I2C_Write_Char:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_IO_Expander_Write:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_LCD_Write_4Bit:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_LCD_CMD:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_LCD_Write_Char:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?___wmul:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?___lldiv:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0070                     I2C_Write_Char@Data:	
   616                           ; 4 bytes @ 0x0
   617                           
   618  0070                     ___wmul@multiplier:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ___lldiv@divisor:	
   622                           ; 2 bytes @ 0x0
   623                           
   624                           
   625                           ; 4 bytes @ 0x0
   626  0070                     	ds	1
   627  0071                     ??_ds18b20_read_byte:
   628  0071                     ??_IO_Expander_Write:	
   629                           ; 1 bytes @ 0x1
   630                           
   631  0071                     ds18b20_write_bit@value:	
   632                           ; 1 bytes @ 0x1
   633                           
   634  0071                     IO_Expander_Write@Data:	
   635                           ; 1 bytes @ 0x1
   636                           
   637                           
   638                           ; 1 bytes @ 0x1
   639  0071                     	ds	1
   640  0072                     ??_ds18b20_write_byte:
   641  0072                     ??_LCD_Write_4Bit:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     ___wmul@multiplicand:	
   645                           ; 1 bytes @ 0x2
   646                           
   647                           
   648                           ; 2 bytes @ 0x2
   649  0072                     	ds	1
   650  0073                     ds18b20_write_byte@value:
   651  0073                     ds18b20_read_byte@value:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     LCD_Write_4Bit@Nibble:	
   655                           ; 1 bytes @ 0x3
   656                           
   657                           
   658                           ; 1 bytes @ 0x3
   659  0073                     	ds	1
   660  0074                     ??_LCD_CMD:
   661  0074                     ??_LCD_Write_Char:	
   662                           ; 1 bytes @ 0x4
   663                           
   664  0074                     ??___wmul:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     ds18b20_write_byte@i:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     ds18b20_read_byte@i:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ___wmul@product:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ___lldiv@dividend:	
   677                           ; 2 bytes @ 0x4
   678                           
   679                           
   680                           ; 4 bytes @ 0x4
   681  0074                     	ds	1
   682  0075                     ??_ds18b20_read:
   683  0075                     LCD_CMD@CMD:	
   684                           ; 1 bytes @ 0x5
   685                           
   686  0075                     LCD_Write_Char@Data:	
   687                           ; 1 bytes @ 0x5
   688                           
   689                           
   690                           ; 1 bytes @ 0x5
   691  0075                     	ds	1
   692  0076                     ?_LCD_Set_Cursor:
   693  0076                     ?_LCD_Write_String:	
   694                           ; 1 bytes @ 0x6
   695                           
   696  0076                     ?___lwdiv:	
   697                           ; 1 bytes @ 0x6
   698                           
   699  0076                     LCD_Set_Cursor@COL:	
   700                           ; 2 bytes @ 0x6
   701                           
   702  0076                     LCD_Write_String@Str:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     ___lwdiv@divisor:	
   706                           ; 2 bytes @ 0x6
   707                           
   708                           
   709                           ; 2 bytes @ 0x6
   710  0076                     	ds	1
   711  0077                     ??_LCD_Set_Cursor:
   712  0077                     ds18b20_read@raw_temp_value:	
   713                           ; 1 bytes @ 0x7
   714                           
   715                           
   716                           ; 1 bytes @ 0x7
   717  0077                     	ds	1
   718  0078                     ??_LCD_Write_String:
   719  0078                     ??___lldiv:	
   720                           ; 1 bytes @ 0x8
   721                           
   722  0078                     ___lwdiv@dividend:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 2 bytes @ 0x8
   727  0078                     	ds	1
   728  0079                     LCD_Set_Cursor@ROW:
   729  0079                     ___lldiv@quotient:	
   730                           ; 1 bytes @ 0x9
   731                           
   732                           
   733                           ; 4 bytes @ 0x9
   734  0079                     	ds	1
   735  007A                     ??___lwdiv:
   736                           
   737                           ; 1 bytes @ 0xA
   738  007A                     	ds	1
   739  007B                     LCD_Write_String@i:
   740  007B                     ___lwdiv@quotient:	
   741                           ; 2 bytes @ 0xB
   742                           
   743                           
   744                           ; 2 bytes @ 0xB
   745  007B                     	ds	2
   746  007D                     ___lldiv@counter:
   747  007D                     ___lwdiv@counter:	
   748                           ; 1 bytes @ 0xD
   749                           
   750                           
   751                           ; 1 bytes @ 0xD
   752  007D                     	ds	1
   753                           
   754                           	psect	cstackBANK0
   755  0020                     __pcstackBANK0:
   756  0020                     ?_I2C_Master_Init:
   757  0020                     ?___lwmod:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     ___lwmod@divisor:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0020                     I2C_Master_Init@I2C_BaudRate:	
   764                           ; 2 bytes @ 0x0
   765                           
   766                           
   767                           ; 4 bytes @ 0x0
   768  0020                     	ds	2
   769  0022                     ___lwmod@dividend:
   770                           
   771                           ; 2 bytes @ 0x2
   772  0022                     	ds	2
   773  0024                     ??_I2C_Master_Init:
   774  0024                     ??___lwmod:	
   775                           ; 1 bytes @ 0x4
   776                           
   777                           
   778                           ; 1 bytes @ 0x4
   779  0024                     	ds	1
   780  0025                     ___lwmod@counter:
   781                           
   782                           ; 1 bytes @ 0x5
   783  0025                     	ds	3
   784  0028                     ?_LCD_Init:
   785  0028                     LCD_Init@I2C_BaudRate:	
   786                           ; 1 bytes @ 0x8
   787                           
   788                           
   789                           ; 4 bytes @ 0x8
   790  0028                     	ds	4
   791  002C                     ??_LCD_Init:
   792                           
   793                           ; 1 bytes @ 0xC
   794  002C                     	ds	2
   795  002E                     ??_main:
   796                           
   797                           ; 1 bytes @ 0xE
   798  002E                     	ds	3
   799                           
   800                           	psect	maintext
   801  0649                     __pmaintext:	
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 26 in file "main_ds18b20.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : B00/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       3       0       0       0
   824 ;;      Totals:         0       3       0       0       0
   825 ;;Total ram usage:        3 bytes
   826 ;; Hardware stack levels required when called:    6
   827 ;; This function calls:
   828 ;;		_LCD_Init
   829 ;;		_LCD_Set_Cursor
   830 ;;		_LCD_Write_String
   831 ;;		___lwdiv
   832 ;;		___lwmod
   833 ;;		___wmul
   834 ;;		_ds18b20_read
   835 ;; This function is called by:
   836 ;;		Startup code after reset
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _main
   842  0649                     _main:
   843  0649                     l1483:	
   844                           ;incstack = 0
   845                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   846                           
   847                           
   848                           ;main_ds18b20.c: 28:     CMCON |=7;
   849  0649  3007               	movlw	7
   850  064A  1283               	bcf	3,5	;RP0=0, select bank0
   851  064B  1303               	bcf	3,6	;RP1=0, select bank0
   852  064C  00AE               	movwf	??_main
   853  064D  082E               	movf	??_main,w
   854  064E  1683               	bsf	3,5	;RP0=1, select bank1
   855  064F  1303               	bcf	3,6	;RP1=0, select bank1
   856  0650  049C               	iorwf	28,f	;volatile
   857  0651                     l1485:
   858                           
   859                           ;main_ds18b20.c: 29:     ADCON1 = 0x06;
   860  0651  3006               	movlw	6
   861  0652  009F               	movwf	31	;volatile
   862  0653                     l1487:
   863                           
   864                           ;main_ds18b20.c: 31:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   865  0653  300B               	movlw	11
   866  0654  1283               	bcf	3,5	;RP0=0, select bank0
   867  0655  1303               	bcf	3,6	;RP1=0, select bank0
   868  0656  00B0               	movwf	??_main+2
   869  0657  3026               	movlw	38
   870  0658  00AF               	movwf	??_main+1
   871  0659  305D               	movlw	93
   872  065A  00AE               	movwf	??_main
   873  065B                     u1037:
   874  065B  0BAE               	decfsz	??_main,f
   875  065C  2E5B               	goto	u1037
   876  065D  0BAF               	decfsz	??_main+1,f
   877  065E  2E5B               	goto	u1037
   878  065F  0BB0               	decfsz	??_main+2,f
   879  0660  2E5B               	goto	u1037
   880  0661                     l1489:
   881                           
   882                           ;main_ds18b20.c: 33:     LCD_Init(100000);
   883  0661  3000               	movlw	0
   884  0662  1283               	bcf	3,5	;RP0=0, select bank0
   885  0663  1303               	bcf	3,6	;RP1=0, select bank0
   886  0664  00AB               	movwf	LCD_Init@I2C_BaudRate+3
   887  0665  3001               	movlw	1
   888  0666  00AA               	movwf	LCD_Init@I2C_BaudRate+2
   889  0667  3086               	movlw	134
   890  0668  00A9               	movwf	LCD_Init@I2C_BaudRate+1
   891  0669  30A0               	movlw	160
   892  066A  00A8               	movwf	LCD_Init@I2C_BaudRate
   893  066B  120A  118A  259E  120A  118A  	fcall	_LCD_Init
   894  0670                     l1491:
   895                           
   896                           ;main_ds18b20.c: 34:     LCD_Set_Cursor(1,3);
   897  0670  3003               	movlw	3
   898  0671  1283               	bcf	3,5	;RP0=0, select bank0
   899  0672  1303               	bcf	3,6	;RP1=0, select bank0
   900  0673  00AE               	movwf	??_main
   901  0674  082E               	movf	??_main,w
   902  0675  00F6               	movwf	LCD_Set_Cursor@COL
   903  0676  3001               	movlw	1
   904  0677  120A  118A  23AD  120A  118A  	fcall	_LCD_Set_Cursor
   905  067C                     l1493:
   906                           
   907                           ;main_ds18b20.c: 35:     LCD_Write_String("Temperature:");
   908  067C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   909  067D  00F6               	movwf	LCD_Write_String@Str
   910  067E  3080               	movlw	128
   911  067F  00F7               	movwf	LCD_Write_String@Str+1
   912  0680  120A  118A  2457  120A  118A  	fcall	_LCD_Write_String
   913  0685                     l1495:
   914                           
   915                           ;main_ds18b20.c: 37:     temp[8] = 223;
   916  0685  30DF               	movlw	223
   917  0686  1283               	bcf	3,5	;RP0=0, select bank0
   918  0687  1303               	bcf	3,6	;RP1=0, select bank0
   919  0688  00AE               	movwf	??_main
   920  0689  082E               	movf	??_main,w
   921  068A  00BA               	movwf	_temp+8
   922  068B                     l1497:
   923                           
   924                           ;main_ds18b20.c: 40:     {;main_ds18b20.c: 42:       if(ds18b20_read(&raw_temp))
   925  068B  303E               	movlw	(low (_raw_temp| 0))& (0+255)
   926  068C  120A  118A  24DD  120A  118A  	fcall	_ds18b20_read
   927  0691  1C03               	btfss	3,0
   928  0692  2E94               	goto	u971
   929  0693  2E95               	goto	u970
   930  0694                     u971:
   931  0694  2FC3               	goto	l1527
   932  0695                     u970:
   933  0695                     l1499:
   934                           
   935                           ;main_ds18b20.c: 43:       {;main_ds18b20.c: 44:         if(raw_temp & 0x8000)
   936  0695  1283               	bcf	3,5	;RP0=0, select bank0
   937  0696  1303               	bcf	3,6	;RP1=0, select bank0
   938  0697  1FBF               	btfss	_raw_temp+1,7
   939  0698  2E9A               	goto	u981
   940  0699  2E9B               	goto	u980
   941  069A                     u981:
   942  069A  2EA5               	goto	l1505
   943  069B                     u980:
   944  069B                     l1501:
   945                           
   946                           ;main_ds18b20.c: 45:         {;main_ds18b20.c: 46:           temp[0] = '-';
   947  069B  302D               	movlw	45
   948  069C  00AE               	movwf	??_main
   949  069D  082E               	movf	??_main,w
   950  069E  00B2               	movwf	_temp
   951  069F                     l1503:
   952                           
   953                           ;main_ds18b20.c: 47:           raw_temp = (~raw_temp) + 1;
   954  069F  09BE               	comf	_raw_temp,f
   955  06A0  09BF               	comf	_raw_temp+1,f
   956  06A1  0ABE               	incf	_raw_temp,f
   957  06A2  1903               	skipnz
   958  06A3  0ABF               	incf	_raw_temp+1,f
   959                           
   960                           ;main_ds18b20.c: 48:         }
   961  06A4  2EC2               	goto	l1511
   962  06A5                     l1505:
   963                           
   964                           ;main_ds18b20.c: 51:         {;main_ds18b20.c: 52:           if((raw_temp >> 4) >= 100)
   965  06A5  083F               	movf	_raw_temp+1,w
   966  06A6  00AF               	movwf	??_main+1
   967  06A7  083E               	movf	_raw_temp,w
   968  06A8  00AE               	movwf	??_main
   969  06A9  3004               	movlw	4
   970  06AA                     u995:
   971  06AA  1003               	clrc
   972  06AB  0CAF               	rrf	??_main+1,f
   973  06AC  0CAE               	rrf	??_main,f
   974  06AD  3EFF               	addlw	-1
   975  06AE  1D03               	skipz
   976  06AF  2EAA               	goto	u995
   977  06B0  3000               	movlw	0
   978  06B1  022F               	subwf	??_main+1,w
   979  06B2  3064               	movlw	100
   980  06B3  1903               	skipnz
   981  06B4  022E               	subwf	??_main,w
   982  06B5  1C03               	skipc
   983  06B6  2EB8               	goto	u1001
   984  06B7  2EB9               	goto	u1000
   985  06B8                     u1001:
   986  06B8  2EBE               	goto	l1509
   987  06B9                     u1000:
   988  06B9                     l1507:
   989                           
   990                           ;main_ds18b20.c: 53:             temp[0] = '1';
   991  06B9  3031               	movlw	49
   992  06BA  00AE               	movwf	??_main
   993  06BB  082E               	movf	??_main,w
   994  06BC  00B2               	movwf	_temp
   995  06BD  2EC2               	goto	l1511
   996  06BE                     l1509:
   997                           
   998                           ;main_ds18b20.c: 55:             temp[0] = ' ';
   999  06BE  3020               	movlw	32
  1000  06BF  00AE               	movwf	??_main
  1001  06C0  082E               	movf	??_main,w
  1002  06C1  00B2               	movwf	_temp
  1003  06C2                     l1511:
  1004                           
  1005                           ;main_ds18b20.c: 59:         temp[1] = ( (raw_temp >> 4) / 10 ) % 10 + '0';
  1006  06C2  300A               	movlw	10
  1007  06C3  00A0               	movwf	___lwmod@divisor
  1008  06C4  3000               	movlw	0
  1009  06C5  00A1               	movwf	___lwmod@divisor+1
  1010  06C6  300A               	movlw	10
  1011  06C7  00F6               	movwf	___lwdiv@divisor
  1012  06C8  3000               	movlw	0
  1013  06C9  00F7               	movwf	___lwdiv@divisor+1
  1014  06CA  0E3E               	swapf	_raw_temp,w
  1015  06CB  390F               	andlw	15
  1016  06CC  00F8               	movwf	___lwdiv@dividend
  1017  06CD  0E3F               	swapf	_raw_temp+1,w
  1018  06CE  39F0               	andlw	240
  1019  06CF  04F8               	iorwf	___lwdiv@dividend,f
  1020  06D0  0E3F               	swapf	_raw_temp+1,w
  1021  06D1  390F               	andlw	15
  1022  06D2  00F9               	movwf	___lwdiv@dividend+1
  1023  06D3  120A  118A  2499  120A  118A  	fcall	___lwdiv
  1024  06D8  0877               	movf	?___lwdiv+1,w
  1025  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1026  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1027  06DB  00A3               	movwf	___lwmod@dividend+1
  1028  06DC  0876               	movf	?___lwdiv,w
  1029  06DD  00A2               	movwf	___lwmod@dividend
  1030  06DE  120A  118A  241B  120A  118A  	fcall	___lwmod
  1031  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1032  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1033  06E5  0820               	movf	?___lwmod,w
  1034  06E6  3E30               	addlw	48
  1035  06E7  00AE               	movwf	??_main
  1036  06E8  082E               	movf	??_main,w
  1037  06E9  00B3               	movwf	_temp+1
  1038  06EA                     l1513:
  1039                           
  1040                           ;main_ds18b20.c: 60:         temp[2] = (raw_temp >> 4) % 10 + '0';
  1041  06EA  300A               	movlw	10
  1042  06EB  00A0               	movwf	___lwmod@divisor
  1043  06EC  3000               	movlw	0
  1044  06ED  00A1               	movwf	___lwmod@divisor+1
  1045  06EE  0E3E               	swapf	_raw_temp,w
  1046  06EF  390F               	andlw	15
  1047  06F0  00A2               	movwf	___lwmod@dividend
  1048  06F1  0E3F               	swapf	_raw_temp+1,w
  1049  06F2  39F0               	andlw	240
  1050  06F3  04A2               	iorwf	___lwmod@dividend,f
  1051  06F4  0E3F               	swapf	_raw_temp+1,w
  1052  06F5  390F               	andlw	15
  1053  06F6  00A3               	movwf	___lwmod@dividend+1
  1054  06F7  120A  118A  241B  120A  118A  	fcall	___lwmod
  1055  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1056  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1057  06FE  0820               	movf	?___lwmod,w
  1058  06FF  3E30               	addlw	48
  1059  0700  00AE               	movwf	??_main
  1060  0701  082E               	movf	??_main,w
  1061  0702  00B4               	movwf	_temp+2
  1062  0703                     l1515:
  1063                           
  1064                           ;main_ds18b20.c: 64:         temp[4] = ( (raw_temp & 0x0F) * 625) / 1000 + '0';
  1065  0703  30E8               	movlw	232
  1066  0704  00F6               	movwf	___lwdiv@divisor
  1067  0705  3003               	movlw	3
  1068  0706  00F7               	movwf	___lwdiv@divisor+1
  1069  0707  300F               	movlw	15
  1070  0708  053E               	andwf	_raw_temp,w
  1071  0709  00F0               	movwf	___wmul@multiplier
  1072  070A  3000               	movlw	0
  1073  070B  053F               	andwf	_raw_temp+1,w
  1074  070C  00F1               	movwf	___wmul@multiplier+1
  1075  070D  3071               	movlw	113
  1076  070E  00F2               	movwf	___wmul@multiplicand
  1077  070F  3002               	movlw	2
  1078  0710  00F3               	movwf	___wmul@multiplicand+1
  1079  0711  120A  118A  2362  120A  118A  	fcall	___wmul
  1080  0716  0871               	movf	?___wmul+1,w
  1081  0717  00F9               	movwf	___lwdiv@dividend+1
  1082  0718  0870               	movf	?___wmul,w
  1083  0719  00F8               	movwf	___lwdiv@dividend
  1084  071A  120A  118A  2499  120A  118A  	fcall	___lwdiv
  1085  071F  0876               	movf	?___lwdiv,w
  1086  0720  3E30               	addlw	48
  1087  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0723  00AE               	movwf	??_main
  1090  0724  082E               	movf	??_main,w
  1091  0725  00B6               	movwf	_temp+4
  1092  0726                     l1517:
  1093                           
  1094                           ;main_ds18b20.c: 65:         temp[5] = (((raw_temp & 0x0F) * 625) / 100 ) % 10 + '0';
  1095  0726  300A               	movlw	10
  1096  0727  00A0               	movwf	___lwmod@divisor
  1097  0728  3000               	movlw	0
  1098  0729  00A1               	movwf	___lwmod@divisor+1
  1099  072A  3064               	movlw	100
  1100  072B  00F6               	movwf	___lwdiv@divisor
  1101  072C  3000               	movlw	0
  1102  072D  00F7               	movwf	___lwdiv@divisor+1
  1103  072E  300F               	movlw	15
  1104  072F  053E               	andwf	_raw_temp,w
  1105  0730  00F0               	movwf	___wmul@multiplier
  1106  0731  3000               	movlw	0
  1107  0732  053F               	andwf	_raw_temp+1,w
  1108  0733  00F1               	movwf	___wmul@multiplier+1
  1109  0734  3071               	movlw	113
  1110  0735  00F2               	movwf	___wmul@multiplicand
  1111  0736  3002               	movlw	2
  1112  0737  00F3               	movwf	___wmul@multiplicand+1
  1113  0738  120A  118A  2362  120A  118A  	fcall	___wmul
  1114  073D  0871               	movf	?___wmul+1,w
  1115  073E  00F9               	movwf	___lwdiv@dividend+1
  1116  073F  0870               	movf	?___wmul,w
  1117  0740  00F8               	movwf	___lwdiv@dividend
  1118  0741  120A  118A  2499  120A  118A  	fcall	___lwdiv
  1119  0746  0877               	movf	?___lwdiv+1,w
  1120  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0749  00A3               	movwf	___lwmod@dividend+1
  1123  074A  0876               	movf	?___lwdiv,w
  1124  074B  00A2               	movwf	___lwmod@dividend
  1125  074C  120A  118A  241B  120A  118A  	fcall	___lwmod
  1126  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0753  0820               	movf	?___lwmod,w
  1129  0754  3E30               	addlw	48
  1130  0755  00AE               	movwf	??_main
  1131  0756  082E               	movf	??_main,w
  1132  0757  00B7               	movwf	_temp+5
  1133  0758                     l1519:
  1134                           
  1135                           ;main_ds18b20.c: 66:         temp[6] = (((raw_temp & 0x0F) * 625) / 10 ) % 10 + '0';
  1136  0758  300A               	movlw	10
  1137  0759  00A0               	movwf	___lwmod@divisor
  1138  075A  3000               	movlw	0
  1139  075B  00A1               	movwf	___lwmod@divisor+1
  1140  075C  300A               	movlw	10
  1141  075D  00F6               	movwf	___lwdiv@divisor
  1142  075E  3000               	movlw	0
  1143  075F  00F7               	movwf	___lwdiv@divisor+1
  1144  0760  300F               	movlw	15
  1145  0761  053E               	andwf	_raw_temp,w
  1146  0762  00F0               	movwf	___wmul@multiplier
  1147  0763  3000               	movlw	0
  1148  0764  053F               	andwf	_raw_temp+1,w
  1149  0765  00F1               	movwf	___wmul@multiplier+1
  1150  0766  3071               	movlw	113
  1151  0767  00F2               	movwf	___wmul@multiplicand
  1152  0768  3002               	movlw	2
  1153  0769  00F3               	movwf	___wmul@multiplicand+1
  1154  076A  120A  118A  2362  120A  118A  	fcall	___wmul
  1155  076F  0871               	movf	?___wmul+1,w
  1156  0770  00F9               	movwf	___lwdiv@dividend+1
  1157  0771  0870               	movf	?___wmul,w
  1158  0772  00F8               	movwf	___lwdiv@dividend
  1159  0773  120A  118A  2499  120A  118A  	fcall	___lwdiv
  1160  0778  0877               	movf	?___lwdiv+1,w
  1161  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1162  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1163  077B  00A3               	movwf	___lwmod@dividend+1
  1164  077C  0876               	movf	?___lwdiv,w
  1165  077D  00A2               	movwf	___lwmod@dividend
  1166  077E  120A  118A  241B  120A  118A  	fcall	___lwmod
  1167  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0785  0820               	movf	?___lwmod,w
  1170  0786  3E30               	addlw	48
  1171  0787  00AE               	movwf	??_main
  1172  0788  082E               	movf	??_main,w
  1173  0789  00B8               	movwf	_temp+6
  1174  078A                     l1521:
  1175                           
  1176                           ;main_ds18b20.c: 67:         temp[7] = ( (raw_temp & 0x0F) * 625) % 10 + '0';
  1177  078A  300A               	movlw	10
  1178  078B  00A0               	movwf	___lwmod@divisor
  1179  078C  3000               	movlw	0
  1180  078D  00A1               	movwf	___lwmod@divisor+1
  1181  078E  300F               	movlw	15
  1182  078F  053E               	andwf	_raw_temp,w
  1183  0790  00F0               	movwf	___wmul@multiplier
  1184  0791  3000               	movlw	0
  1185  0792  053F               	andwf	_raw_temp+1,w
  1186  0793  00F1               	movwf	___wmul@multiplier+1
  1187  0794  3071               	movlw	113
  1188  0795  00F2               	movwf	___wmul@multiplicand
  1189  0796  3002               	movlw	2
  1190  0797  00F3               	movwf	___wmul@multiplicand+1
  1191  0798  120A  118A  2362  120A  118A  	fcall	___wmul
  1192  079D  0871               	movf	?___wmul+1,w
  1193  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1194  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1195  07A0  00A3               	movwf	___lwmod@dividend+1
  1196  07A1  0870               	movf	?___wmul,w
  1197  07A2  00A2               	movwf	___lwmod@dividend
  1198  07A3  120A  118A  241B  120A  118A  	fcall	___lwmod
  1199  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1200  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1201  07AA  0820               	movf	?___lwmod,w
  1202  07AB  3E30               	addlw	48
  1203  07AC  00AE               	movwf	??_main
  1204  07AD  082E               	movf	??_main,w
  1205  07AE  00B9               	movwf	_temp+7
  1206  07AF                     l1523:
  1207                           
  1208                           ;main_ds18b20.c: 69:         LCD_Set_Cursor(2,4);
  1209  07AF  3004               	movlw	4
  1210  07B0  00AE               	movwf	??_main
  1211  07B1  082E               	movf	??_main,w
  1212  07B2  00F6               	movwf	LCD_Set_Cursor@COL
  1213  07B3  3002               	movlw	2
  1214  07B4  120A  118A  23AD  120A  118A  	fcall	_LCD_Set_Cursor
  1215  07B9                     l1525:
  1216                           
  1217                           ;main_ds18b20.c: 70:         LCD_Write_String(temp);
  1218  07B9  3032               	movlw	(low (_temp| 0))& (0+255)
  1219  07BA  00F6               	movwf	LCD_Write_String@Str
  1220  07BB  3000               	movlw	0
  1221  07BC  00F7               	movwf	LCD_Write_String@Str+1
  1222  07BD  120A  118A  2457  120A  118A  	fcall	_LCD_Write_String
  1223                           
  1224                           ;main_ds18b20.c: 71:       }
  1225  07C2  2FD8               	goto	l1531
  1226  07C3                     l1527:
  1227                           
  1228                           ;main_ds18b20.c: 74:       {;main_ds18b20.c: 75:         LCD_Set_Cursor(2, 4);
  1229  07C3  3004               	movlw	4
  1230  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1231  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1232  07C6  00AE               	movwf	??_main
  1233  07C7  082E               	movf	??_main,w
  1234  07C8  00F6               	movwf	LCD_Set_Cursor@COL
  1235  07C9  3002               	movlw	2
  1236  07CA  120A  118A  23AD  120A  118A  	fcall	_LCD_Set_Cursor
  1237  07CF                     l1529:
  1238                           
  1239                           ;main_ds18b20.c: 76:         LCD_Write_String("  Error!  ");
  1240  07CF  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1241  07D0  00F6               	movwf	LCD_Write_String@Str
  1242  07D1  3080               	movlw	128
  1243  07D2  00F7               	movwf	LCD_Write_String@Str+1
  1244  07D3  120A  118A  2457  120A  118A  	fcall	_LCD_Write_String
  1245  07D8                     l1531:
  1246                           
  1247                           ;main_ds18b20.c: 79:       _delay((unsigned long)((1000)*(8000000/4000.0)));
  1248  07D8  300B               	movlw	11
  1249  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1250  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1251  07DB  00B0               	movwf	??_main+2
  1252  07DC  3026               	movlw	38
  1253  07DD  00AF               	movwf	??_main+1
  1254  07DE  305D               	movlw	93
  1255  07DF  00AE               	movwf	??_main
  1256  07E0                     u1047:
  1257  07E0  0BAE               	decfsz	??_main,f
  1258  07E1  2FE0               	goto	u1047
  1259  07E2  0BAF               	decfsz	??_main+1,f
  1260  07E3  2FE0               	goto	u1047
  1261  07E4  0BB0               	decfsz	??_main+2,f
  1262  07E5  2FE0               	goto	u1047
  1263  07E6  2E8B               	goto	l1497
  1264  07E7  120A  118A  2800   	ljmp	start
  1265  07EA                     __end_of_main:
  1266                           
  1267                           	psect	text1
  1268  04DD                     __ptext1:	
  1269 ;; *************** function _ds18b20_read *****************
  1270 ;; Defined at:
  1271 ;;		line 91 in file "ds18b20.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  raw_temp_val    1    wreg     PTR unsigned int 
  1274 ;;		 -> raw_temp(2), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  raw_temp_val    1    7[COMMON] PTR unsigned int 
  1277 ;;		 -> raw_temp(2), 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;		None               void
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         1       0       0       0       0
  1289 ;;      Temps:          2       0       0       0       0
  1290 ;;      Totals:         3       0       0       0       0
  1291 ;;Total ram usage:        3 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    2
  1294 ;; This function calls:
  1295 ;;		_ds18b20_read_byte
  1296 ;;		_ds18b20_start
  1297 ;;		_ds18b20_write_byte
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _ds18b20_read
  1305  04DD                     _ds18b20_read:
  1306                           
  1307                           ;incstack = 0
  1308                           ; Regs used in _ds18b20_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1309                           ;ds18b20_read@raw_temp_value stored from wreg
  1310  04DD  00F7               	movwf	ds18b20_read@raw_temp_value
  1311  04DE                     l1331:
  1312                           
  1313                           ;ds18b20.c: 91: __bit ds18b20_read(uint16_t *raw_temp_value);ds18b20.c: 92: {;ds18b20.c:
      +                           93:   if (!ds18b20_start())
  1314  04DE  120A  118A  2387  120A  118A  	fcall	_ds18b20_start
  1315  04E3  1803               	btfsc	3,0
  1316  04E4  2CE6               	goto	u741
  1317  04E5  2CE7               	goto	u740
  1318  04E6                     u741:
  1319  04E6  2CE9               	goto	l1337
  1320  04E7                     u740:
  1321  04E7                     l1333:
  1322                           
  1323                           ;ds18b20.c: 94:     return 0;
  1324  04E7  1003               	clrc
  1325  04E8  2D37               	goto	l36
  1326  04E9                     l1337:
  1327                           
  1328                           ;ds18b20.c: 96:   ds18b20_write_byte(0xCC);
  1329  04E9  30CC               	movlw	204
  1330  04EA  120A  118A  22C6  120A  118A  	fcall	_ds18b20_write_byte
  1331                           
  1332                           ;ds18b20.c: 97:   ds18b20_write_byte(0x44);
  1333  04EF  3044               	movlw	68
  1334  04F0  120A  118A  22C6  120A  118A  	fcall	_ds18b20_write_byte
  1335  04F5                     l1339:	
  1336                           ;ds18b20.c: 99:   while(ds18b20_read_byte() == 0);
  1337                           
  1338  04F5  120A  118A  231C  120A  118A  	fcall	_ds18b20_read_byte
  1339  04FA  3A00               	xorlw	0
  1340  04FB  1903               	skipnz
  1341  04FC  2CFE               	goto	u751
  1342  04FD  2CFF               	goto	u750
  1343  04FE                     u751:
  1344  04FE  2CF5               	goto	l1339
  1345  04FF                     u750:
  1346  04FF                     l1341:
  1347                           
  1348                           ;ds18b20.c: 101:   if (!ds18b20_start())
  1349  04FF  120A  118A  2387  120A  118A  	fcall	_ds18b20_start
  1350  0504  1803               	btfsc	3,0
  1351  0505  2D07               	goto	u761
  1352  0506  2D08               	goto	u760
  1353  0507                     u761:
  1354  0507  2D09               	goto	l1347
  1355  0508                     u760:
  1356  0508  2CE7               	goto	l1333
  1357  0509                     l1347:
  1358                           
  1359                           ;ds18b20.c: 104:   ds18b20_write_byte(0xCC);
  1360  0509  30CC               	movlw	204
  1361  050A  120A  118A  22C6  120A  118A  	fcall	_ds18b20_write_byte
  1362                           
  1363                           ;ds18b20.c: 105:   ds18b20_write_byte(0xBE);
  1364  050F  30BE               	movlw	190
  1365  0510  120A  118A  22C6  120A  118A  	fcall	_ds18b20_write_byte
  1366  0515                     l1349:
  1367                           
  1368                           ;ds18b20.c: 108:   *raw_temp_value = ds18b20_read_byte();
  1369  0515  120A  118A  231C  120A  118A  	fcall	_ds18b20_read_byte
  1370  051A  00F5               	movwf	??_ds18b20_read
  1371  051B  01F6               	clrf	??_ds18b20_read+1
  1372  051C  0877               	movf	ds18b20_read@raw_temp_value,w
  1373  051D  0084               	movwf	4
  1374  051E  0875               	movf	??_ds18b20_read,w
  1375  051F  1383               	bcf	3,7	;select IRP bank0
  1376  0520  0080               	movwf	0
  1377  0521  0A84               	incf	4,f
  1378  0522  0876               	movf	??_ds18b20_read+1,w
  1379  0523  0080               	movwf	0
  1380  0524                     l1351:
  1381                           
  1382                           ;ds18b20.c: 110:   *raw_temp_value |= (uint16_t)(ds18b20_read_byte() << 8);
  1383  0524  120A  118A  231C  120A  118A  	fcall	_ds18b20_read_byte
  1384  0529  00F5               	movwf	??_ds18b20_read
  1385  052A  01F6               	clrf	??_ds18b20_read+1
  1386  052B  0875               	movf	??_ds18b20_read,w
  1387  052C  00F6               	movwf	??_ds18b20_read+1
  1388  052D  01F5               	clrf	??_ds18b20_read
  1389  052E  0877               	movf	ds18b20_read@raw_temp_value,w
  1390  052F  0084               	movwf	4
  1391  0530  0875               	movf	??_ds18b20_read,w
  1392  0531  1383               	bcf	3,7	;select IRP bank0
  1393  0532  0480               	iorwf	0,f
  1394  0533  0A84               	incf	4,f
  1395  0534  0876               	movf	??_ds18b20_read+1,w
  1396  0535  0480               	iorwf	0,f
  1397  0536                     l1353:
  1398                           
  1399                           ;ds18b20.c: 112:   return 1;
  1400  0536  1403               	setc
  1401  0537                     l36:
  1402  0537  0008               	return
  1403  0538                     __end_of_ds18b20_read:
  1404                           
  1405                           	psect	text2
  1406  02C6                     __ptext2:	
  1407 ;; *************** function _ds18b20_write_byte *****************
  1408 ;; Defined at:
  1409 ;;		line 47 in file "ds18b20.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  value           1    wreg     unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  value           1    3[COMMON] unsigned char 
  1414 ;;  i               1    4[COMMON] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0, pclath, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         2       0       0       0       0
  1426 ;;      Temps:          1       0       0       0       0
  1427 ;;      Totals:         3       0       0       0       0
  1428 ;;Total ram usage:        3 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    1
  1431 ;; This function calls:
  1432 ;;		_ds18b20_write_bit
  1433 ;; This function is called by:
  1434 ;;		_ds18b20_read
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _ds18b20_write_byte
  1440  02C6                     _ds18b20_write_byte:
  1441                           
  1442                           ;incstack = 0
  1443                           ; Regs used in _ds18b20_write_byte: [wreg+status,2+status,0+pclath+cstack]
  1444                           ;ds18b20_write_byte@value stored from wreg
  1445  02C6  00F3               	movwf	ds18b20_write_byte@value
  1446  02C7                     l1281:
  1447                           
  1448                           ;ds18b20.c: 47: void ds18b20_write_byte(uint8_t value);ds18b20.c: 48: {;ds18b20.c: 49:  
      +                           for(uint8_t i = 0; i < 8; i++)
  1449  02C7  01F4               	clrf	ds18b20_write_byte@i
  1450  02C8                     l1287:
  1451                           
  1452                           ;ds18b20.c: 50:     ds18b20_write_bit(value >> i);
  1453  02C8  0873               	movf	ds18b20_write_byte@value,w
  1454  02C9  00F2               	movwf	??_ds18b20_write_byte
  1455  02CA  0A74               	incf	ds18b20_write_byte@i,w
  1456  02CB  2ACE               	goto	u674
  1457  02CC                     u675:
  1458  02CC  1003               	clrc
  1459  02CD  0CF2               	rrf	??_ds18b20_write_byte,f
  1460  02CE                     u674:
  1461  02CE  3EFF               	addlw	-1
  1462  02CF  1D03               	skipz
  1463  02D0  2ACC               	goto	u675
  1464  02D1  0872               	movf	??_ds18b20_write_byte,w
  1465  02D2  120A  118A  22FF  120A  118A  	fcall	_ds18b20_write_bit
  1466  02D7                     l1289:
  1467  02D7  3001               	movlw	1
  1468  02D8  00F2               	movwf	??_ds18b20_write_byte
  1469  02D9  0872               	movf	??_ds18b20_write_byte,w
  1470  02DA  07F4               	addwf	ds18b20_write_byte@i,f
  1471  02DB                     l1291:
  1472  02DB  3008               	movlw	8
  1473  02DC  0274               	subwf	ds18b20_write_byte@i,w
  1474  02DD  1C03               	skipc
  1475  02DE  2AE0               	goto	u681
  1476  02DF  2AE1               	goto	u680
  1477  02E0                     u681:
  1478  02E0  2AC8               	goto	l1287
  1479  02E1                     u680:
  1480  02E1                     l18:
  1481  02E1  0008               	return
  1482  02E2                     __end_of_ds18b20_write_byte:
  1483                           
  1484                           	psect	text3
  1485  02FF                     __ptext3:	
  1486 ;; *************** function _ds18b20_write_bit *****************
  1487 ;; Defined at:
  1488 ;;		line 30 in file "ds18b20.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  value           1    wreg     unsigned char 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  value           1    1[COMMON] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0
  1504 ;;      Temps:          1       0       0       0       0
  1505 ;;      Totals:         2       0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_ds18b20_write_byte
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _ds18b20_write_bit
  1517  02FF                     _ds18b20_write_bit:
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _ds18b20_write_bit: [wreg]
  1521                           ;ds18b20_write_bit@value stored from wreg
  1522  02FF  00F1               	movwf	ds18b20_write_bit@value
  1523  0300                     l1211:
  1524                           
  1525                           ;ds18b20.c: 30: void ds18b20_write_bit(uint8_t value);ds18b20.c: 31: {;ds18b20.c: 32:   
      +                          RD7 = 0;
  1526  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0302  1388               	bcf	8,7	;volatile
  1529                           
  1530                           ;ds18b20.c: 33:   TRISD7 = 0;
  1531  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1532  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1533  0305  1388               	bcf	8,7	;volatile
  1534                           
  1535                           ;ds18b20.c: 34:   _delay((unsigned long)((2)*(8000000/4000000.0)));
  1536  0306  2B07               	nop2	;2 cycle nop
  1537  0307  2B08               	nop2	;2 cycle nop
  1538                           
  1539                           ;ds18b20.c: 36:   RD7 = (__bit)value;
  1540  0308  1871               	btfsc	ds18b20_write_bit@value,0
  1541  0309  2B0B               	goto	u551
  1542  030A  2B0F               	goto	u550
  1543  030B                     u551:
  1544  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1545  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1546  030D  1788               	bsf	8,7	;volatile
  1547  030E  2B12               	goto	u564
  1548  030F                     u550:
  1549  030F  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0310  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0311  1388               	bcf	8,7	;volatile
  1552  0312                     u564:
  1553  0312                     l1213:
  1554                           
  1555                           ;ds18b20.c: 37:   _delay((unsigned long)((80)*(8000000/4000000.0)));
  1556  0312  3035               	movlw	53
  1557  0313  00F0               	movwf	??_ds18b20_write_bit
  1558  0314                     u1057:
  1559  0314  0BF0               	decfsz	??_ds18b20_write_bit,f
  1560  0315  2B14               	goto	u1057
  1561  0316                     l1215:
  1562                           
  1563                           ;ds18b20.c: 39:   TRISD7 = 1;
  1564  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0318  1788               	bsf	8,7	;volatile
  1567  0319                     l1217:
  1568                           
  1569                           ;ds18b20.c: 40:   _delay((unsigned long)((2)*(8000000/4000000.0)));
  1570  0319  2B1A               	nop2	;2 cycle nop
  1571  031A  2B1B               	nop2	;2 cycle nop
  1572  031B                     l13:
  1573  031B  0008               	return
  1574  031C                     __end_of_ds18b20_write_bit:
  1575                           
  1576                           	psect	text4
  1577  0387                     __ptext4:	
  1578 ;; *************** function _ds18b20_start *****************
  1579 ;; Defined at:
  1580 ;;		line 8 in file "ds18b20.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;		None               void
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          1       0       0       0       0
  1597 ;;      Totals:         1       0       0       0       0
  1598 ;;Total ram usage:        1 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_ds18b20_read
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _ds18b20_start
  1609  0387                     _ds18b20_start:
  1610  0387                     l1263:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _ds18b20_start: [wreg+status,2+status,0]
  1613                           
  1614                           
  1615                           ;ds18b20.c: 10:   RD7 = 0;
  1616  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0389  1388               	bcf	8,7	;volatile
  1619                           
  1620                           ;ds18b20.c: 11:   TRISD7 = 0;
  1621  038A  1683               	bsf	3,5	;RP0=1, select bank1
  1622  038B  1303               	bcf	3,6	;RP1=0, select bank1
  1623  038C  1388               	bcf	8,7	;volatile
  1624  038D                     l1265:
  1625                           
  1626                           ;ds18b20.c: 12:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  1627  038D  30C7               	movlw	199
  1628  038E  00F0               	movwf	??_ds18b20_start
  1629  038F                     u1067:
  1630  038F  2B90               	nop2
  1631  0390  0BF0               	decfsz	??_ds18b20_start,f
  1632  0391  2B8F               	goto	u1067
  1633  0392  2B93               	nop2
  1634  0393  2B94               	nop2
  1635  0394                     l1267:
  1636                           
  1637                           ;ds18b20.c: 14:   TRISD7 = 1;
  1638  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0396  1788               	bsf	8,7	;volatile
  1641                           
  1642                           ;ds18b20.c: 15:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  1643  0397  3042               	movlw	66
  1644  0398  00F0               	movwf	??_ds18b20_start
  1645  0399                     u1077:
  1646  0399  0BF0               	decfsz	??_ds18b20_start,f
  1647  039A  2B99               	goto	u1077
  1648  039B  0000               	nop
  1649  039C                     l1269:
  1650                           
  1651                           ;ds18b20.c: 17:   if (!RD7)
  1652  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1653  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1654  039E  1B88               	btfsc	8,7	;volatile
  1655  039F  2BA1               	goto	u661
  1656  03A0  2BA2               	goto	u660
  1657  03A1                     u661:
  1658  03A1  2BAB               	goto	l1277
  1659  03A2                     u660:
  1660  03A2                     l1271:
  1661                           
  1662                           ;ds18b20.c: 18:   {;ds18b20.c: 19:     _delay((unsigned long)((400)*(8000000/4000000.0))
      +                          );
  1663  03A2  309F               	movlw	159
  1664  03A3  00F0               	movwf	??_ds18b20_start
  1665  03A4                     u1087:
  1666  03A4  2BA5               	nop2
  1667  03A5  0BF0               	decfsz	??_ds18b20_start,f
  1668  03A6  2BA4               	goto	u1087
  1669  03A7  2BA8               	nop2
  1670  03A8  2BA9               	nop2
  1671  03A9                     l1273:
  1672                           
  1673                           ;ds18b20.c: 20:     return 1;
  1674  03A9  1403               	setc
  1675  03AA  2BAC               	goto	l10
  1676  03AB                     l1277:
  1677                           
  1678                           ;ds18b20.c: 23:   return 0;
  1679  03AB  1003               	clrc
  1680  03AC                     l10:
  1681  03AC  0008               	return
  1682  03AD                     __end_of_ds18b20_start:
  1683                           
  1684                           	psect	text5
  1685  031C                     __ptext5:	
  1686 ;; *************** function _ds18b20_read_byte *****************
  1687 ;; Defined at:
  1688 ;;		line 77 in file "ds18b20.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  i               1    4[COMMON] unsigned char 
  1693 ;;  value           1    3[COMMON] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      unsigned char 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0, pclath, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       0       0       0       0
  1704 ;;      Locals:         2       0       0       0       0
  1705 ;;      Temps:          2       0       0       0       0
  1706 ;;      Totals:         4       0       0       0       0
  1707 ;;Total ram usage:        4 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    1
  1710 ;; This function calls:
  1711 ;;		_ds18b20_read_bit
  1712 ;; This function is called by:
  1713 ;;		_ds18b20_read
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _ds18b20_read_byte
  1719  031C                     _ds18b20_read_byte:
  1720  031C                     l1293:	
  1721                           ;incstack = 0
  1722                           ; Regs used in _ds18b20_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1723                           
  1724                           
  1725                           ;ds18b20.c: 79:   uint8_t value = 0;
  1726  031C  01F3               	clrf	ds18b20_read_byte@value
  1727                           
  1728                           ;ds18b20.c: 81:   for(uint8_t i = 0; i < 8; i++)
  1729  031D  01F4               	clrf	ds18b20_read_byte@i
  1730  031E                     l1299:
  1731                           
  1732                           ;ds18b20.c: 82:     value |= ds18b20_read_bit() << i;
  1733  031E  120A  118A  233E  120A  118A  	fcall	_ds18b20_read_bit
  1734  0323  3000               	movlw	0
  1735  0324  1803               	skipnc
  1736  0325  3001               	movlw	1
  1737  0326  00F1               	movwf	??_ds18b20_read_byte
  1738  0327  0A74               	incf	ds18b20_read_byte@i,w
  1739  0328  2B2B               	goto	u694
  1740  0329                     u695:
  1741  0329  1003               	clrc
  1742  032A  0DF1               	rlf	??_ds18b20_read_byte,f
  1743  032B                     u694:
  1744  032B  3EFF               	addlw	-1
  1745  032C  1D03               	skipz
  1746  032D  2B29               	goto	u695
  1747  032E  0871               	movf	??_ds18b20_read_byte,w
  1748  032F  00F2               	movwf	??_ds18b20_read_byte+1
  1749  0330  0872               	movf	??_ds18b20_read_byte+1,w
  1750  0331  04F3               	iorwf	ds18b20_read_byte@value,f
  1751  0332                     l1301:
  1752  0332  3001               	movlw	1
  1753  0333  00F1               	movwf	??_ds18b20_read_byte
  1754  0334  0871               	movf	??_ds18b20_read_byte,w
  1755  0335  07F4               	addwf	ds18b20_read_byte@i,f
  1756  0336                     l1303:
  1757  0336  3008               	movlw	8
  1758  0337  0274               	subwf	ds18b20_read_byte@i,w
  1759  0338  1C03               	skipc
  1760  0339  2B3B               	goto	u701
  1761  033A  2B3C               	goto	u700
  1762  033B                     u701:
  1763  033B  2B1E               	goto	l1299
  1764  033C                     u700:
  1765  033C                     l1305:
  1766                           
  1767                           ;ds18b20.c: 84:   return value;
  1768  033C  0873               	movf	ds18b20_read_byte@value,w
  1769  033D                     l32:
  1770  033D  0008               	return
  1771  033E                     __end_of_ds18b20_read_byte:
  1772                           
  1773                           	psect	text6
  1774  033E                     __ptext6:	
  1775 ;; *************** function _ds18b20_read_bit *****************
  1776 ;; Defined at:
  1777 ;;		line 56 in file "ds18b20.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;		None               void
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0
  1793 ;;      Temps:          1       0       0       0       0
  1794 ;;      Totals:         1       0       0       0       0
  1795 ;;Total ram usage:        1 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_ds18b20_read_byte
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _ds18b20_read_bit
  1806  033E                     _ds18b20_read_bit:
  1807  033E                     l1219:	
  1808                           ;incstack = 0
  1809                           ; Regs used in _ds18b20_read_bit: [wreg+status,2+status,0]
  1810                           
  1811                           
  1812                           ;ds18b20.c: 58:   static __bit value;;ds18b20.c: 60:   RD7 = 0;
  1813  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1814  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0340  1388               	bcf	8,7	;volatile
  1816                           
  1817                           ;ds18b20.c: 61:   TRISD7 = 0;
  1818  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1820  0343  1388               	bcf	8,7	;volatile
  1821                           
  1822                           ;ds18b20.c: 62:   _delay((unsigned long)((2)*(8000000/4000000.0)));
  1823  0344  2B45               	nop2	;2 cycle nop
  1824  0345  2B46               	nop2	;2 cycle nop
  1825                           
  1826                           ;ds18b20.c: 64:   TRISD7 = 1;
  1827  0346  1683               	bsf	3,5	;RP0=1, select bank1
  1828  0347  1303               	bcf	3,6	;RP1=0, select bank1
  1829  0348  1788               	bsf	8,7	;volatile
  1830  0349                     l1221:
  1831                           
  1832                           ;ds18b20.c: 65:   _delay((unsigned long)((5)*(8000000/4000000.0)));
  1833  0349  3003               	movlw	3
  1834  034A  00F0               	movwf	??_ds18b20_read_bit
  1835  034B                     u1097:
  1836  034B  0BF0               	decfsz	??_ds18b20_read_bit,f
  1837  034C  2B4B               	goto	u1097
  1838  034D                     l1223:
  1839                           
  1840                           ;ds18b20.c: 67:   value = RD7;
  1841  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1842  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1843  034F  1040               	bcf	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  1844  0350  1F88               	btfss	8,7	;volatile
  1845  0351  2B53               	goto	u575
  1846  0352  1440               	bsf	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  1847  0353                     u575:
  1848                           
  1849                           ;ds18b20.c: 68:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  1850  0353  3042               	movlw	66
  1851  0354  00F0               	movwf	??_ds18b20_read_bit
  1852  0355                     u1107:
  1853  0355  0BF0               	decfsz	??_ds18b20_read_bit,f
  1854  0356  2B55               	goto	u1107
  1855  0357  0000               	nop
  1856  0358                     l1225:
  1857                           
  1858                           ;ds18b20.c: 70:   return value;
  1859  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1861  035A  1840               	btfsc	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  1862  035B  2B5D               	goto	u581
  1863  035C  2B5E               	goto	u580
  1864  035D                     u581:
  1865  035D  2B60               	goto	l1229
  1866  035E                     u580:
  1867  035E                     l1227:
  1868  035E  1003               	clrc
  1869  035F  2B61               	goto	l27
  1870  0360                     l1229:
  1871  0360  1403               	setc
  1872  0361                     l27:
  1873  0361  0008               	return
  1874  0362                     __end_of_ds18b20_read_bit:
  1875                           
  1876                           	psect	text7
  1877  0362                     __ptext7:	
  1878 ;; *************** function ___wmul *****************
  1879 ;; Defined at:
  1880 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  multiplier      2    0[COMMON] unsigned int 
  1883 ;;  multiplicand    2    2[COMMON] unsigned int 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  product         2    4[COMMON] unsigned int 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2    0[COMMON] unsigned int 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         4       0       0       0       0
  1896 ;;      Locals:         2       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0
  1898 ;;      Totals:         6       0       0       0       0
  1899 ;;Total ram usage:        6 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function ___wmul
  1910  0362                     ___wmul:
  1911  0362                     l1421:	
  1912                           ;incstack = 0
  1913                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1914                           
  1915  0362  01F4               	clrf	___wmul@product
  1916  0363  01F5               	clrf	___wmul@product+1
  1917  0364                     l1423:
  1918  0364  1C70               	btfss	___wmul@multiplier,0
  1919  0365  2B67               	goto	u801
  1920  0366  2B68               	goto	u800
  1921  0367                     u801:
  1922  0367  2B6E               	goto	l285
  1923  0368                     u800:
  1924  0368                     l1425:
  1925  0368  0872               	movf	___wmul@multiplicand,w
  1926  0369  07F4               	addwf	___wmul@product,f
  1927  036A  1803               	skipnc
  1928  036B  0AF5               	incf	___wmul@product+1,f
  1929  036C  0873               	movf	___wmul@multiplicand+1,w
  1930  036D  07F5               	addwf	___wmul@product+1,f
  1931  036E                     l285:
  1932  036E  3001               	movlw	1
  1933  036F                     u815:
  1934  036F  1003               	clrc
  1935  0370  0DF2               	rlf	___wmul@multiplicand,f
  1936  0371  0DF3               	rlf	___wmul@multiplicand+1,f
  1937  0372  3EFF               	addlw	-1
  1938  0373  1D03               	skipz
  1939  0374  2B6F               	goto	u815
  1940  0375                     l1427:
  1941  0375  3001               	movlw	1
  1942  0376                     u825:
  1943  0376  1003               	clrc
  1944  0377  0CF1               	rrf	___wmul@multiplier+1,f
  1945  0378  0CF0               	rrf	___wmul@multiplier,f
  1946  0379  3EFF               	addlw	-1
  1947  037A  1D03               	skipz
  1948  037B  2B76               	goto	u825
  1949  037C                     l1429:
  1950  037C  0870               	movf	___wmul@multiplier,w
  1951  037D  0471               	iorwf	___wmul@multiplier+1,w
  1952  037E  1D03               	btfss	3,2
  1953  037F  2B81               	goto	u831
  1954  0380  2B82               	goto	u830
  1955  0381                     u831:
  1956  0381  2B64               	goto	l1423
  1957  0382                     u830:
  1958  0382                     l1431:
  1959  0382  0875               	movf	___wmul@product+1,w
  1960  0383  00F1               	movwf	?___wmul+1
  1961  0384  0874               	movf	___wmul@product,w
  1962  0385  00F0               	movwf	?___wmul
  1963  0386                     l287:
  1964  0386  0008               	return
  1965  0387                     __end_of___wmul:
  1966                           
  1967                           	psect	text8
  1968  041B                     __ptext8:	
  1969 ;; *************** function ___lwmod *****************
  1970 ;; Defined at:
  1971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  divisor         2    0[BANK0 ] unsigned int 
  1974 ;;  dividend        2    2[BANK0 ] unsigned int 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  counter         1    5[BANK0 ] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  2    0[BANK0 ] unsigned int 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1986 ;;      Params:         0       4       0       0       0
  1987 ;;      Locals:         0       1       0       0       0
  1988 ;;      Temps:          0       1       0       0       0
  1989 ;;      Totals:         0       6       0       0       0
  1990 ;;Total ram usage:        6 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function ___lwmod
  2001  041B                     ___lwmod:
  2002  041B                     l1461:	
  2003                           ;incstack = 0
  2004                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2005                           
  2006  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2007  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2008  041D  0820               	movf	___lwmod@divisor,w
  2009  041E  0421               	iorwf	___lwmod@divisor+1,w
  2010  041F  1903               	btfsc	3,2
  2011  0420  2C22               	goto	u911
  2012  0421  2C23               	goto	u910
  2013  0422                     u911:
  2014  0422  2C52               	goto	l1479
  2015  0423                     u910:
  2016  0423                     l1463:
  2017  0423  01A5               	clrf	___lwmod@counter
  2018  0424  0AA5               	incf	___lwmod@counter,f
  2019  0425  2C31               	goto	l1469
  2020  0426                     l1465:
  2021  0426  3001               	movlw	1
  2022  0427                     u925:
  2023  0427  1003               	clrc
  2024  0428  0DA0               	rlf	___lwmod@divisor,f
  2025  0429  0DA1               	rlf	___lwmod@divisor+1,f
  2026  042A  3EFF               	addlw	-1
  2027  042B  1D03               	skipz
  2028  042C  2C27               	goto	u925
  2029  042D                     l1467:
  2030  042D  3001               	movlw	1
  2031  042E  00A4               	movwf	??___lwmod
  2032  042F  0824               	movf	??___lwmod,w
  2033  0430  07A5               	addwf	___lwmod@counter,f
  2034  0431                     l1469:
  2035  0431  1FA1               	btfss	___lwmod@divisor+1,7
  2036  0432  2C34               	goto	u931
  2037  0433  2C35               	goto	u930
  2038  0434                     u931:
  2039  0434  2C26               	goto	l1465
  2040  0435                     u930:
  2041  0435                     l1471:
  2042  0435  0821               	movf	___lwmod@divisor+1,w
  2043  0436  0223               	subwf	___lwmod@dividend+1,w
  2044  0437  1D03               	skipz
  2045  0438  2C3B               	goto	u945
  2046  0439  0820               	movf	___lwmod@divisor,w
  2047  043A  0222               	subwf	___lwmod@dividend,w
  2048  043B                     u945:
  2049  043B  1C03               	skipc
  2050  043C  2C3E               	goto	u941
  2051  043D  2C3F               	goto	u940
  2052  043E                     u941:
  2053  043E  2C45               	goto	l1475
  2054  043F                     u940:
  2055  043F                     l1473:
  2056  043F  0820               	movf	___lwmod@divisor,w
  2057  0440  02A2               	subwf	___lwmod@dividend,f
  2058  0441  0821               	movf	___lwmod@divisor+1,w
  2059  0442  1C03               	skipc
  2060  0443  03A3               	decf	___lwmod@dividend+1,f
  2061  0444  02A3               	subwf	___lwmod@dividend+1,f
  2062  0445                     l1475:
  2063  0445  3001               	movlw	1
  2064  0446                     u955:
  2065  0446  1003               	clrc
  2066  0447  0CA1               	rrf	___lwmod@divisor+1,f
  2067  0448  0CA0               	rrf	___lwmod@divisor,f
  2068  0449  3EFF               	addlw	-1
  2069  044A  1D03               	skipz
  2070  044B  2C46               	goto	u955
  2071  044C                     l1477:
  2072  044C  3001               	movlw	1
  2073  044D  02A5               	subwf	___lwmod@counter,f
  2074  044E  1D03               	btfss	3,2
  2075  044F  2C51               	goto	u961
  2076  0450  2C52               	goto	u960
  2077  0451                     u961:
  2078  0451  2C35               	goto	l1471
  2079  0452                     u960:
  2080  0452                     l1479:
  2081  0452  0823               	movf	___lwmod@dividend+1,w
  2082  0453  00A1               	movwf	?___lwmod+1
  2083  0454  0822               	movf	___lwmod@dividend,w
  2084  0455  00A0               	movwf	?___lwmod
  2085  0456                     l567:
  2086  0456  0008               	return
  2087  0457                     __end_of___lwmod:
  2088                           
  2089                           	psect	text9
  2090  0499                     __ptext9:	
  2091 ;; *************** function ___lwdiv *****************
  2092 ;; Defined at:
  2093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  divisor         2    6[COMMON] unsigned int 
  2096 ;;  dividend        2    8[COMMON] unsigned int 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  quotient        2   11[COMMON] unsigned int 
  2099 ;;  counter         1   13[COMMON] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  2    6[COMMON] unsigned int 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2109 ;;      Params:         4       0       0       0       0
  2110 ;;      Locals:         3       0       0       0       0
  2111 ;;      Temps:          1       0       0       0       0
  2112 ;;      Totals:         8       0       0       0       0
  2113 ;;Total ram usage:        8 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function ___lwdiv
  2124  0499                     ___lwdiv:
  2125  0499                     l1435:	
  2126                           ;incstack = 0
  2127                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2128                           
  2129  0499  01FB               	clrf	___lwdiv@quotient
  2130  049A  01FC               	clrf	___lwdiv@quotient+1
  2131  049B                     l1437:
  2132  049B  0876               	movf	___lwdiv@divisor,w
  2133  049C  0477               	iorwf	___lwdiv@divisor+1,w
  2134  049D  1903               	btfsc	3,2
  2135  049E  2CA0               	goto	u841
  2136  049F  2CA1               	goto	u840
  2137  04A0                     u841:
  2138  04A0  2CD8               	goto	l1457
  2139  04A1                     u840:
  2140  04A1                     l1439:
  2141  04A1  01FD               	clrf	___lwdiv@counter
  2142  04A2  0AFD               	incf	___lwdiv@counter,f
  2143  04A3  2CAF               	goto	l1445
  2144  04A4                     l1441:
  2145  04A4  3001               	movlw	1
  2146  04A5                     u855:
  2147  04A5  1003               	clrc
  2148  04A6  0DF6               	rlf	___lwdiv@divisor,f
  2149  04A7  0DF7               	rlf	___lwdiv@divisor+1,f
  2150  04A8  3EFF               	addlw	-1
  2151  04A9  1D03               	skipz
  2152  04AA  2CA5               	goto	u855
  2153  04AB                     l1443:
  2154  04AB  3001               	movlw	1
  2155  04AC  00FA               	movwf	??___lwdiv
  2156  04AD  087A               	movf	??___lwdiv,w
  2157  04AE  07FD               	addwf	___lwdiv@counter,f
  2158  04AF                     l1445:
  2159  04AF  1FF7               	btfss	___lwdiv@divisor+1,7
  2160  04B0  2CB2               	goto	u861
  2161  04B1  2CB3               	goto	u860
  2162  04B2                     u861:
  2163  04B2  2CA4               	goto	l1441
  2164  04B3                     u860:
  2165  04B3                     l1447:
  2166  04B3  3001               	movlw	1
  2167  04B4                     u875:
  2168  04B4  1003               	clrc
  2169  04B5  0DFB               	rlf	___lwdiv@quotient,f
  2170  04B6  0DFC               	rlf	___lwdiv@quotient+1,f
  2171  04B7  3EFF               	addlw	-1
  2172  04B8  1D03               	skipz
  2173  04B9  2CB4               	goto	u875
  2174  04BA  0877               	movf	___lwdiv@divisor+1,w
  2175  04BB  0279               	subwf	___lwdiv@dividend+1,w
  2176  04BC  1D03               	skipz
  2177  04BD  2CC0               	goto	u885
  2178  04BE  0876               	movf	___lwdiv@divisor,w
  2179  04BF  0278               	subwf	___lwdiv@dividend,w
  2180  04C0                     u885:
  2181  04C0  1C03               	skipc
  2182  04C1  2CC3               	goto	u881
  2183  04C2  2CC4               	goto	u880
  2184  04C3                     u881:
  2185  04C3  2CCB               	goto	l1453
  2186  04C4                     u880:
  2187  04C4                     l1449:
  2188  04C4  0876               	movf	___lwdiv@divisor,w
  2189  04C5  02F8               	subwf	___lwdiv@dividend,f
  2190  04C6  0877               	movf	___lwdiv@divisor+1,w
  2191  04C7  1C03               	skipc
  2192  04C8  03F9               	decf	___lwdiv@dividend+1,f
  2193  04C9  02F9               	subwf	___lwdiv@dividend+1,f
  2194  04CA                     l1451:
  2195  04CA  147B               	bsf	___lwdiv@quotient,0
  2196  04CB                     l1453:
  2197  04CB  3001               	movlw	1
  2198  04CC                     u895:
  2199  04CC  1003               	clrc
  2200  04CD  0CF7               	rrf	___lwdiv@divisor+1,f
  2201  04CE  0CF6               	rrf	___lwdiv@divisor,f
  2202  04CF  3EFF               	addlw	-1
  2203  04D0  1D03               	skipz
  2204  04D1  2CCC               	goto	u895
  2205  04D2                     l1455:
  2206  04D2  3001               	movlw	1
  2207  04D3  02FD               	subwf	___lwdiv@counter,f
  2208  04D4  1D03               	btfss	3,2
  2209  04D5  2CD7               	goto	u901
  2210  04D6  2CD8               	goto	u900
  2211  04D7                     u901:
  2212  04D7  2CB3               	goto	l1447
  2213  04D8                     u900:
  2214  04D8                     l1457:
  2215  04D8  087C               	movf	___lwdiv@quotient+1,w
  2216  04D9  00F7               	movwf	?___lwdiv+1
  2217  04DA  087B               	movf	___lwdiv@quotient,w
  2218  04DB  00F6               	movwf	?___lwdiv
  2219  04DC                     l557:
  2220  04DC  0008               	return
  2221  04DD                     __end_of___lwdiv:
  2222                           
  2223                           	psect	text10
  2224  0457                     __ptext10:	
  2225 ;; *************** function _LCD_Write_String *****************
  2226 ;; Defined at:
  2227 ;;		line 67 in file "i2c_lcd.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  Str             2    6[COMMON] PTR unsigned char 
  2230 ;;		 -> STR_2(11), temp(11), STR_1(13), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  i               2   11[COMMON] int 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         2       0       0       0       0
  2243 ;;      Locals:         2       0       0       0       0
  2244 ;;      Temps:          3       0       0       0       0
  2245 ;;      Totals:         7       0       0       0       0
  2246 ;;Total ram usage:        7 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    5
  2249 ;; This function calls:
  2250 ;;		_LCD_Write_Char
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _LCD_Write_String
  2258  0457                     _LCD_Write_String:
  2259  0457                     l1401:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2262                           
  2263                           
  2264                           ;i2c_lcd.c: 67: void LCD_Write_String(char* Str);i2c_lcd.c: 68: {;i2c_lcd.c: 69:   for(i
      +                          nt i=0; Str[i]!='\0'; i++)
  2265  0457  01FB               	clrf	LCD_Write_String@i
  2266  0458  01FC               	clrf	LCD_Write_String@i+1
  2267  0459  2C7C               	goto	l1407
  2268  045A                     l1403:
  2269                           
  2270                           ;i2c_lcd.c: 70:     LCD_Write_Char(Str[i]);
  2271  045A  087B               	movf	LCD_Write_String@i,w
  2272  045B  0776               	addwf	LCD_Write_String@Str,w
  2273  045C  00F9               	movwf	??_LCD_Write_String+1
  2274  045D  0877               	movf	LCD_Write_String@Str+1,w
  2275  045E  00F8               	movwf	??_LCD_Write_String
  2276  045F  1803               	skipnc
  2277  0460  0AF8               	incf	??_LCD_Write_String,f
  2278  0461  1FFB               	btfss	LCD_Write_String@i,7
  2279  0462  2C64               	goto	u770
  2280  0463  03F8               	decf	??_LCD_Write_String,f
  2281  0464                     u770:
  2282  0464  0878               	movf	??_LCD_Write_String,w
  2283  0465  00FA               	movwf	??_LCD_Write_String+2
  2284  0466  087A               	movf	??_LCD_Write_String+2,w
  2285  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0469  00FF               	movwf	btemp+1
  2288  046A  0879               	movf	??_LCD_Write_String+1,w
  2289  046B  0084               	movwf	4
  2290  046C  120A  118A  2003  120A  118A  	fcall	stringtab
  2291  0471  120A  118A  22E2  120A  118A  	fcall	_LCD_Write_Char
  2292  0476                     l1405:
  2293  0476  3001               	movlw	1
  2294  0477  07FB               	addwf	LCD_Write_String@i,f
  2295  0478  1803               	skipnc
  2296  0479  0AFC               	incf	LCD_Write_String@i+1,f
  2297  047A  3000               	movlw	0
  2298  047B  07FC               	addwf	LCD_Write_String@i+1,f
  2299  047C                     l1407:
  2300  047C  087B               	movf	LCD_Write_String@i,w
  2301  047D  0776               	addwf	LCD_Write_String@Str,w
  2302  047E  00F9               	movwf	??_LCD_Write_String+1
  2303  047F  0877               	movf	LCD_Write_String@Str+1,w
  2304  0480  00F8               	movwf	??_LCD_Write_String
  2305  0481  1803               	skipnc
  2306  0482  0AF8               	incf	??_LCD_Write_String,f
  2307  0483  1FFB               	btfss	LCD_Write_String@i,7
  2308  0484  2C86               	goto	u780
  2309  0485  03F8               	decf	??_LCD_Write_String,f
  2310  0486                     u780:
  2311  0486  0878               	movf	??_LCD_Write_String,w
  2312  0487  00FA               	movwf	??_LCD_Write_String+2
  2313  0488  087A               	movf	??_LCD_Write_String+2,w
  2314  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2315  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2316  048B  00FF               	movwf	btemp+1
  2317  048C  0879               	movf	??_LCD_Write_String+1,w
  2318  048D  0084               	movwf	4
  2319  048E  120A  118A  2003  120A  118A  	fcall	stringtab
  2320  0493  3A00               	xorlw	0
  2321  0494  1D03               	skipz
  2322  0495  2C97               	goto	u791
  2323  0496  2C98               	goto	u790
  2324  0497                     u791:
  2325  0497  2C5A               	goto	l1403
  2326  0498                     u790:
  2327  0498                     l175:
  2328  0498  0008               	return
  2329  0499                     __end_of_LCD_Write_String:
  2330                           
  2331                           	psect	text11
  2332  02E2                     __ptext11:	
  2333 ;; *************** function _LCD_Write_Char *****************
  2334 ;; Defined at:
  2335 ;;		line 60 in file "i2c_lcd.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  Data            1    wreg     unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  Data            1    5[COMMON] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         1       0       0       0       0
  2351 ;;      Temps:          1       0       0       0       0
  2352 ;;      Totals:         2       0       0       0       0
  2353 ;;Total ram usage:        2 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    4
  2356 ;; This function calls:
  2357 ;;		_LCD_Write_4Bit
  2358 ;; This function is called by:
  2359 ;;		_LCD_Write_String
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _LCD_Write_Char
  2365  02E2                     _LCD_Write_Char:
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2369                           ;LCD_Write_Char@Data stored from wreg
  2370  02E2  00F5               	movwf	LCD_Write_Char@Data
  2371  02E3                     l1327:
  2372                           
  2373                           ;i2c_lcd.c: 60: void LCD_Write_Char(char Data);i2c_lcd.c: 61: {;i2c_lcd.c: 62:   RS = 1;
  2374  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2375  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2376  02E5  01BD               	clrf	_RS
  2377  02E6  0ABD               	incf	_RS,f
  2378  02E7                     l1329:
  2379                           
  2380                           ;i2c_lcd.c: 63:   LCD_Write_4Bit(Data & 0xF0);
  2381  02E7  0875               	movf	LCD_Write_Char@Data,w
  2382  02E8  39F0               	andlw	240
  2383  02E9  120A  118A  2275  120A  118A  	fcall	_LCD_Write_4Bit
  2384                           
  2385                           ;i2c_lcd.c: 64:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2386  02EE  0875               	movf	LCD_Write_Char@Data,w
  2387  02EF  00F4               	movwf	??_LCD_Write_Char
  2388  02F0  3003               	movlw	3
  2389  02F1                     u735:
  2390  02F1  1003               	clrc
  2391  02F2  0DF4               	rlf	??_LCD_Write_Char,f
  2392  02F3  3EFF               	addlw	-1
  2393  02F4  1D03               	skipz
  2394  02F5  2AF1               	goto	u735
  2395  02F6  1003               	clrc
  2396  02F7  0D74               	rlf	??_LCD_Write_Char,w
  2397  02F8  39F0               	andlw	240
  2398  02F9  120A  118A  2275  120A  118A  	fcall	_LCD_Write_4Bit
  2399  02FE                     l169:
  2400  02FE  0008               	return
  2401  02FF                     __end_of_LCD_Write_Char:
  2402                           
  2403                           	psect	text12
  2404  03AD                     __ptext12:	
  2405 ;; *************** function _LCD_Set_Cursor *****************
  2406 ;; Defined at:
  2407 ;;		line 77 in file "i2c_lcd.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  ROW             1    wreg     unsigned char 
  2410 ;;  COL             1    6[COMMON] unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  ROW             1    9[COMMON] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         1       0       0       0       0
  2423 ;;      Locals:         1       0       0       0       0
  2424 ;;      Temps:          2       0       0       0       0
  2425 ;;      Totals:         4       0       0       0       0
  2426 ;;Total ram usage:        4 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    5
  2429 ;; This function calls:
  2430 ;;		_LCD_CMD
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _LCD_Set_Cursor
  2438  03AD                     _LCD_Set_Cursor:
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2442                           ;LCD_Set_Cursor@ROW stored from wreg
  2443  03AD  00F9               	movwf	LCD_Set_Cursor@ROW
  2444  03AE                     l1385:
  2445                           
  2446                           ;i2c_lcd.c: 77: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);i2c_lcd.c: 78:
      +                           {;i2c_lcd.c: 79:   switch(ROW)
  2447  03AE  2BCF               	goto	l1395
  2448  03AF                     l1387:
  2449                           
  2450                           ;i2c_lcd.c: 82:       LCD_CMD(0xC0 + COL-1);
  2451  03AF  0876               	movf	LCD_Set_Cursor@COL,w
  2452  03B0  3EBF               	addlw	191
  2453  03B1  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2454                           
  2455                           ;i2c_lcd.c: 83:       break;
  2456  03B6  2BE2               	goto	l184
  2457  03B7                     l1389:
  2458                           
  2459                           ;i2c_lcd.c: 85:       LCD_CMD(0x94 + COL-1);
  2460  03B7  0876               	movf	LCD_Set_Cursor@COL,w
  2461  03B8  3E93               	addlw	147
  2462  03B9  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2463                           
  2464                           ;i2c_lcd.c: 86:       break;
  2465  03BE  2BE2               	goto	l184
  2466  03BF                     l1391:
  2467                           
  2468                           ;i2c_lcd.c: 88:       LCD_CMD(0xD4 + COL-1);
  2469  03BF  0876               	movf	LCD_Set_Cursor@COL,w
  2470  03C0  3ED3               	addlw	211
  2471  03C1  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2472                           
  2473                           ;i2c_lcd.c: 89:       break;
  2474  03C6  2BE2               	goto	l184
  2475  03C7                     l1393:
  2476                           
  2477                           ;i2c_lcd.c: 92:       LCD_CMD(0x80 + COL-1);
  2478  03C7  0876               	movf	LCD_Set_Cursor@COL,w
  2479  03C8  3E7F               	addlw	127
  2480  03C9  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2481                           
  2482                           ;i2c_lcd.c: 93:   }
  2483  03CE  2BE2               	goto	l184
  2484  03CF                     l1395:
  2485  03CF  0879               	movf	LCD_Set_Cursor@ROW,w
  2486  03D0  00F7               	movwf	??_LCD_Set_Cursor
  2487  03D1  01F8               	clrf	??_LCD_Set_Cursor+1
  2488                           
  2489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2490                           ; Switch size 1, requested type "simple"
  2491                           ; Number of cases is 1, Range of values is 0 to 0
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte            4     3 (average)
  2495                           ; direct_byte           11     8 (fixed)
  2496                           ; jumptable            260     6 (fixed)
  2497                           ;	Chosen strategy is simple_byte
  2498  03D2  0878               	movf	??_LCD_Set_Cursor+1,w
  2499  03D3  3A00               	xorlw	0	; case 0
  2500  03D4  1903               	skipnz
  2501  03D5  2BD7               	goto	l1595
  2502  03D6  2BC7               	goto	l1393
  2503  03D7                     l1595:
  2504                           
  2505                           ; Switch size 1, requested type "simple"
  2506                           ; Number of cases is 3, Range of values is 2 to 4
  2507                           ; switch strategies available:
  2508                           ; Name         Instructions Cycles
  2509                           ; simple_byte           10     6 (average)
  2510                           ; direct_byte           20    11 (fixed)
  2511                           ; jumptable            263     9 (fixed)
  2512                           ;	Chosen strategy is simple_byte
  2513  03D7  0877               	movf	??_LCD_Set_Cursor,w
  2514  03D8  3A02               	xorlw	2	; case 2
  2515  03D9  1903               	skipnz
  2516  03DA  2BAF               	goto	l1387
  2517  03DB  3A01               	xorlw	1	; case 3
  2518  03DC  1903               	skipnz
  2519  03DD  2BB7               	goto	l1389
  2520  03DE  3A07               	xorlw	7	; case 4
  2521  03DF  1903               	skipnz
  2522  03E0  2BBF               	goto	l1391
  2523  03E1  2BC7               	goto	l1393
  2524  03E2                     l184:
  2525  03E2  0008               	return
  2526  03E3                     __end_of_LCD_Set_Cursor:
  2527                           
  2528                           	psect	text13
  2529  059E                     __ptext13:	
  2530 ;; *************** function _LCD_Init *****************
  2531 ;; Defined at:
  2532 ;;		line 33 in file "i2c_lcd.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  I2C_BaudRate    4    8[BANK0 ] const unsigned long 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       4       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          0       2       0       0       0
  2549 ;;      Totals:         0       6       0       0       0
  2550 ;;Total ram usage:        6 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    5
  2553 ;; This function calls:
  2554 ;;		_I2C_Master_Init
  2555 ;;		_IO_Expander_Write
  2556 ;;		_LCD_CMD
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _LCD_Init
  2564  059E                     _LCD_Init:
  2565  059E                     l1357:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2568                           
  2569                           
  2570                           ;i2c_lcd.c: 33: void LCD_Init(const unsigned long I2C_BaudRate);i2c_lcd.c: 34: {;i2c_lcd
      +                          .c: 35:   I2C_Master_Init(I2C_BaudRate);
  2571  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2572  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2573  05A0  082B               	movf	LCD_Init@I2C_BaudRate+3,w
  2574  05A1  00A3               	movwf	I2C_Master_Init@I2C_BaudRate+3
  2575  05A2  082A               	movf	LCD_Init@I2C_BaudRate+2,w
  2576  05A3  00A2               	movwf	I2C_Master_Init@I2C_BaudRate+2
  2577  05A4  0829               	movf	LCD_Init@I2C_BaudRate+1,w
  2578  05A5  00A1               	movwf	I2C_Master_Init@I2C_BaudRate+1
  2579  05A6  0828               	movf	LCD_Init@I2C_BaudRate,w
  2580  05A7  00A0               	movwf	I2C_Master_Init@I2C_BaudRate
  2581  05A8  120A  118A  23E3  120A  118A  	fcall	_I2C_Master_Init
  2582  05AD                     l1359:
  2583                           
  2584                           ;i2c_lcd.c: 36:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2585  05AD  300D               	movlw	13
  2586  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2587  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2588  05B0  00AD               	movwf	??_LCD_Init+1
  2589  05B1  30FB               	movlw	251
  2590  05B2  00AC               	movwf	??_LCD_Init
  2591  05B3                     u1117:
  2592  05B3  0BAC               	decfsz	??_LCD_Init,f
  2593  05B4  2DB3               	goto	u1117
  2594  05B5  0BAD               	decfsz	??_LCD_Init+1,f
  2595  05B6  2DB3               	goto	u1117
  2596  05B7                     l1361:
  2597                           
  2598                           ;i2c_lcd.c: 38:   IO_Expander_Write(0x00);
  2599  05B7  3000               	movlw	0
  2600  05B8  120A  118A  228F  120A  118A  	fcall	_IO_Expander_Write
  2601                           
  2602                           ;i2c_lcd.c: 39:   _delay((unsigned long)((30)*(8000000/4000.0)));
  2603  05BD  304E               	movlw	78
  2604  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2605  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2606  05C0  00AD               	movwf	??_LCD_Init+1
  2607  05C1  30EA               	movlw	234
  2608  05C2  00AC               	movwf	??_LCD_Init
  2609  05C3                     u1127:
  2610  05C3  0BAC               	decfsz	??_LCD_Init,f
  2611  05C4  2DC3               	goto	u1127
  2612  05C5  0BAD               	decfsz	??_LCD_Init+1,f
  2613  05C6  2DC3               	goto	u1127
  2614  05C7  0000               	nop
  2615  05C8                     l1363:
  2616                           
  2617                           ;i2c_lcd.c: 40:   LCD_CMD(0x03);
  2618  05C8  3003               	movlw	3
  2619  05C9  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2620  05CE                     l1365:
  2621                           
  2622                           ;i2c_lcd.c: 41:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2623  05CE  300D               	movlw	13
  2624  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2625  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2626  05D1  00AD               	movwf	??_LCD_Init+1
  2627  05D2  30FB               	movlw	251
  2628  05D3  00AC               	movwf	??_LCD_Init
  2629  05D4                     u1137:
  2630  05D4  0BAC               	decfsz	??_LCD_Init,f
  2631  05D5  2DD4               	goto	u1137
  2632  05D6  0BAD               	decfsz	??_LCD_Init+1,f
  2633  05D7  2DD4               	goto	u1137
  2634                           
  2635                           ;i2c_lcd.c: 42:   LCD_CMD(0x03);
  2636  05D8  3003               	movlw	3
  2637  05D9  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2638  05DE                     l1367:
  2639                           
  2640                           ;i2c_lcd.c: 43:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2641  05DE  300D               	movlw	13
  2642  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2643  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2644  05E1  00AD               	movwf	??_LCD_Init+1
  2645  05E2  30FB               	movlw	251
  2646  05E3  00AC               	movwf	??_LCD_Init
  2647  05E4                     u1147:
  2648  05E4  0BAC               	decfsz	??_LCD_Init,f
  2649  05E5  2DE4               	goto	u1147
  2650  05E6  0BAD               	decfsz	??_LCD_Init+1,f
  2651  05E7  2DE4               	goto	u1147
  2652  05E8                     l1369:
  2653                           
  2654                           ;i2c_lcd.c: 44:   LCD_CMD(0x03);
  2655  05E8  3003               	movlw	3
  2656  05E9  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2657                           
  2658                           ;i2c_lcd.c: 45:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2659  05EE  300D               	movlw	13
  2660  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2661  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2662  05F1  00AD               	movwf	??_LCD_Init+1
  2663  05F2  30FB               	movlw	251
  2664  05F3  00AC               	movwf	??_LCD_Init
  2665  05F4                     u1157:
  2666  05F4  0BAC               	decfsz	??_LCD_Init,f
  2667  05F5  2DF4               	goto	u1157
  2668  05F6  0BAD               	decfsz	??_LCD_Init+1,f
  2669  05F7  2DF4               	goto	u1157
  2670  05F8                     l1371:
  2671                           
  2672                           ;i2c_lcd.c: 46:   LCD_CMD(0x02);
  2673  05F8  3002               	movlw	2
  2674  05F9  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2675  05FE                     l1373:
  2676                           
  2677                           ;i2c_lcd.c: 47:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2678  05FE  300D               	movlw	13
  2679  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0601  00AD               	movwf	??_LCD_Init+1
  2682  0602  30FB               	movlw	251
  2683  0603  00AC               	movwf	??_LCD_Init
  2684  0604                     u1167:
  2685  0604  0BAC               	decfsz	??_LCD_Init,f
  2686  0605  2E04               	goto	u1167
  2687  0606  0BAD               	decfsz	??_LCD_Init+1,f
  2688  0607  2E04               	goto	u1167
  2689                           
  2690                           ;i2c_lcd.c: 48:   LCD_CMD(0x20 | (2 << 2));
  2691  0608  3028               	movlw	40
  2692  0609  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2693  060E                     l1375:
  2694                           
  2695                           ;i2c_lcd.c: 49:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2696  060E  3082               	movlw	130
  2697  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0611  00AD               	movwf	??_LCD_Init+1
  2700  0612  30DD               	movlw	221
  2701  0613  00AC               	movwf	??_LCD_Init
  2702  0614                     u1177:
  2703  0614  0BAC               	decfsz	??_LCD_Init,f
  2704  0615  2E14               	goto	u1177
  2705  0616  0BAD               	decfsz	??_LCD_Init+1,f
  2706  0617  2E14               	goto	u1177
  2707  0618                     l1377:
  2708                           
  2709                           ;i2c_lcd.c: 50:   LCD_CMD(0x0C);
  2710  0618  300C               	movlw	12
  2711  0619  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2712                           
  2713                           ;i2c_lcd.c: 51:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2714  061E  3082               	movlw	130
  2715  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0621  00AD               	movwf	??_LCD_Init+1
  2718  0622  30DD               	movlw	221
  2719  0623  00AC               	movwf	??_LCD_Init
  2720  0624                     u1187:
  2721  0624  0BAC               	decfsz	??_LCD_Init,f
  2722  0625  2E24               	goto	u1187
  2723  0626  0BAD               	decfsz	??_LCD_Init+1,f
  2724  0627  2E24               	goto	u1187
  2725  0628                     l1379:
  2726                           
  2727                           ;i2c_lcd.c: 52:   LCD_CMD(0x01);
  2728  0628  3001               	movlw	1
  2729  0629  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2730  062E                     l1381:
  2731                           
  2732                           ;i2c_lcd.c: 53:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2733  062E  3082               	movlw	130
  2734  062F  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0630  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0631  00AD               	movwf	??_LCD_Init+1
  2737  0632  30DD               	movlw	221
  2738  0633  00AC               	movwf	??_LCD_Init
  2739  0634                     u1197:
  2740  0634  0BAC               	decfsz	??_LCD_Init,f
  2741  0635  2E34               	goto	u1197
  2742  0636  0BAD               	decfsz	??_LCD_Init+1,f
  2743  0637  2E34               	goto	u1197
  2744                           
  2745                           ;i2c_lcd.c: 54:   LCD_CMD(0x04 | 0x02);
  2746  0638  3006               	movlw	6
  2747  0639  120A  118A  22AA  120A  118A  	fcall	_LCD_CMD
  2748  063E                     l1383:
  2749                           
  2750                           ;i2c_lcd.c: 55:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2751  063E  3082               	movlw	130
  2752  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0641  00AD               	movwf	??_LCD_Init+1
  2755  0642  30DD               	movlw	221
  2756  0643  00AC               	movwf	??_LCD_Init
  2757  0644                     u1207:
  2758  0644  0BAC               	decfsz	??_LCD_Init,f
  2759  0645  2E44               	goto	u1207
  2760  0646  0BAD               	decfsz	??_LCD_Init+1,f
  2761  0647  2E44               	goto	u1207
  2762  0648                     l166:
  2763  0648  0008               	return
  2764  0649                     __end_of_LCD_Init:
  2765                           
  2766                           	psect	text14
  2767  02AA                     __ptext14:	
  2768 ;; *************** function _LCD_CMD *****************
  2769 ;; Defined at:
  2770 ;;		line 25 in file "i2c_lcd.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  CMD             1    wreg     unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  CMD             1    5[COMMON] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         1       0       0       0       0
  2786 ;;      Temps:          1       0       0       0       0
  2787 ;;      Totals:         2       0       0       0       0
  2788 ;;Total ram usage:        2 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    4
  2791 ;; This function calls:
  2792 ;;		_LCD_Write_4Bit
  2793 ;; This function is called by:
  2794 ;;		_LCD_Init
  2795 ;;		_LCD_Set_Cursor
  2796 ;;		_LCD_SL
  2797 ;;		_LCD_SR
  2798 ;;		_LCD_Clear
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _LCD_CMD
  2804  02AA                     _LCD_CMD:
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2808                           ;LCD_CMD@CMD stored from wreg
  2809  02AA  00F5               	movwf	LCD_CMD@CMD
  2810  02AB                     l1321:
  2811                           
  2812                           ;i2c_lcd.c: 25: void LCD_CMD(unsigned char CMD);i2c_lcd.c: 26: {;i2c_lcd.c: 27:   RS = 0
      +                          ;
  2813  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2814  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2815  02AD  01BD               	clrf	_RS
  2816  02AE                     l1323:
  2817                           
  2818                           ;i2c_lcd.c: 28:   LCD_Write_4Bit(CMD & 0xF0);
  2819  02AE  0875               	movf	LCD_CMD@CMD,w
  2820  02AF  39F0               	andlw	240
  2821  02B0  120A  118A  2275  120A  118A  	fcall	_LCD_Write_4Bit
  2822  02B5                     l1325:
  2823                           
  2824                           ;i2c_lcd.c: 29:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  2825  02B5  0875               	movf	LCD_CMD@CMD,w
  2826  02B6  00F4               	movwf	??_LCD_CMD
  2827  02B7  3003               	movlw	3
  2828  02B8                     u725:
  2829  02B8  1003               	clrc
  2830  02B9  0DF4               	rlf	??_LCD_CMD,f
  2831  02BA  3EFF               	addlw	-1
  2832  02BB  1D03               	skipz
  2833  02BC  2AB8               	goto	u725
  2834  02BD  1003               	clrc
  2835  02BE  0D74               	rlf	??_LCD_CMD,w
  2836  02BF  39F0               	andlw	240
  2837  02C0  120A  118A  2275  120A  118A  	fcall	_LCD_Write_4Bit
  2838  02C5                     l163:
  2839  02C5  0008               	return
  2840  02C6                     __end_of_LCD_CMD:
  2841                           
  2842                           	psect	text15
  2843  0275                     __ptext15:	
  2844 ;; *************** function _LCD_Write_4Bit *****************
  2845 ;; Defined at:
  2846 ;;		line 16 in file "i2c_lcd.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  Nibble          1    wreg     unsigned char 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  Nibble          1    3[COMMON] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       0       0       0       0
  2861 ;;      Locals:         1       0       0       0       0
  2862 ;;      Temps:          1       0       0       0       0
  2863 ;;      Totals:         2       0       0       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    3
  2867 ;; This function calls:
  2868 ;;		_IO_Expander_Write
  2869 ;; This function is called by:
  2870 ;;		_LCD_CMD
  2871 ;;		_LCD_Write_Char
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           
  2876                           ;psect for function _LCD_Write_4Bit
  2877  0275                     _LCD_Write_4Bit:
  2878                           
  2879                           ;incstack = 0
  2880                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  2881                           ;LCD_Write_4Bit@Nibble stored from wreg
  2882  0275  00F3               	movwf	LCD_Write_4Bit@Nibble
  2883  0276                     l1233:
  2884                           
  2885                           ;i2c_lcd.c: 16: void LCD_Write_4Bit(unsigned char Nibble);i2c_lcd.c: 17: {;i2c_lcd.c: 19
      +                          :   Nibble |= RS;
  2886  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0278  083D               	movf	_RS,w
  2889  0279  00F2               	movwf	??_LCD_Write_4Bit
  2890  027A  0872               	movf	??_LCD_Write_4Bit,w
  2891  027B  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  2892  027C                     l1235:
  2893                           
  2894                           ;i2c_lcd.c: 20:   IO_Expander_Write(Nibble | 0x04);
  2895  027C  0873               	movf	LCD_Write_4Bit@Nibble,w
  2896  027D  3804               	iorlw	4
  2897  027E  120A  118A  228F  120A  118A  	fcall	_IO_Expander_Write
  2898  0283                     l1237:
  2899                           
  2900                           ;i2c_lcd.c: 21:   IO_Expander_Write(Nibble & 0xFB);
  2901  0283  0873               	movf	LCD_Write_4Bit@Nibble,w
  2902  0284  39FB               	andlw	251
  2903  0285  120A  118A  228F  120A  118A  	fcall	_IO_Expander_Write
  2904                           
  2905                           ;i2c_lcd.c: 22:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  2906  028A  3021               	movlw	33
  2907  028B  00F2               	movwf	??_LCD_Write_4Bit
  2908  028C                     u1217:
  2909  028C  0BF2               	decfsz	??_LCD_Write_4Bit,f
  2910  028D  2A8C               	goto	u1217
  2911  028E                     l160:
  2912  028E  0008               	return
  2913  028F                     __end_of_LCD_Write_4Bit:
  2914                           
  2915                           	psect	text16
  2916  028F                     __ptext16:	
  2917 ;; *************** function _IO_Expander_Write *****************
  2918 ;; Defined at:
  2919 ;;		line 8 in file "i2c_lcd.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  Data            1    wreg     unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  Data            1    1[COMMON] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       0       0       0       0
  2934 ;;      Locals:         1       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0
  2936 ;;      Totals:         1       0       0       0       0
  2937 ;;Total ram usage:        1 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    2
  2940 ;; This function calls:
  2941 ;;		_I2C_Start
  2942 ;;		_I2C_Stop
  2943 ;;		_I2C_Write_Char
  2944 ;; This function is called by:
  2945 ;;		_LCD_Write_4Bit
  2946 ;;		_LCD_Init
  2947 ;;		_Backlight
  2948 ;;		_noBacklight
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           
  2953                           ;psect for function _IO_Expander_Write
  2954  028F                     _IO_Expander_Write:
  2955                           
  2956                           ;incstack = 0
  2957                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2958                           ;IO_Expander_Write@Data stored from wreg
  2959  028F  00F1               	movwf	IO_Expander_Write@Data
  2960  0290                     l1209:
  2961                           
  2962                           ;i2c_lcd.c: 8: void IO_Expander_Write(unsigned char Data);i2c_lcd.c: 9: {;i2c_lcd.c: 10:
      +                             I2C_Start();
  2963  0290  120A  118A  2227  120A  118A  	fcall	_I2C_Start
  2964                           
  2965                           ;i2c_lcd.c: 11:   I2C_Write_Char(0x4E);
  2966  0295  304E               	movlw	78
  2967  0296  120A  118A  2252  120A  118A  	fcall	_I2C_Write_Char
  2968                           
  2969                           ;i2c_lcd.c: 12:   I2C_Write_Char(Data | BackLight_State);
  2970  029B  0871               	movf	IO_Expander_Write@Data,w
  2971  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2972  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2973  029E  0431               	iorwf	_BackLight_State,w
  2974  029F  120A  118A  2252  120A  118A  	fcall	_I2C_Write_Char
  2975                           
  2976                           ;i2c_lcd.c: 13:   I2C_Stop();
  2977  02A4  120A  118A  2230  120A  118A  	fcall	_I2C_Stop
  2978  02A9                     l157:
  2979  02A9  0008               	return
  2980  02AA                     __end_of_IO_Expander_Write:
  2981                           
  2982                           	psect	text17
  2983  0252                     __ptext17:	
  2984 ;; *************** function _I2C_Write_Char *****************
  2985 ;; Defined at:
  2986 ;;		line 76 in file "i2c_master.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  Data            1    wreg     unsigned char 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  Data            1    0[COMMON] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      unsigned char 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       0       0       0       0
  3001 ;;      Locals:         1       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0
  3003 ;;      Totals:         1       0       0       0       0
  3004 ;;Total ram usage:        1 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    1
  3007 ;; This function calls:
  3008 ;;		_I2C_Wait
  3009 ;; This function is called by:
  3010 ;;		_IO_Expander_Write
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _I2C_Write_Char
  3016  0252                     _I2C_Write_Char:
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _I2C_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3020                           ;I2C_Write_Char@Data stored from wreg
  3021  0252  00F0               	movwf	I2C_Write_Char@Data
  3022  0253                     l1205:
  3023                           
  3024                           ;i2c_master.c: 76: unsigned char I2C_Write_Char(unsigned char Data);i2c_master.c: 77: {;
      +                          i2c_master.c: 79:   I2C_Wait();
  3025  0253  120A  118A  2245  120A  118A  	fcall	_I2C_Wait
  3026  0258                     l1207:
  3027                           
  3028                           ;i2c_master.c: 80:   SSPBUF = Data;
  3029  0258  0870               	movf	I2C_Write_Char@Data,w
  3030  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3031  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3032  025B  0093               	movwf	19	;volatile
  3033  025C                     l129:	
  3034                           ;i2c_master.c: 81:   while(!SSPIF);
  3035                           
  3036  025C  1D8C               	btfss	12,3	;volatile
  3037  025D  2A5F               	goto	u541
  3038  025E  2A60               	goto	u540
  3039  025F                     u541:
  3040  025F  2A5C               	goto	l129
  3041  0260                     u540:
  3042  0260                     l131:
  3043                           
  3044                           ;i2c_master.c: 82:   SSPIF = 0;
  3045  0260  118C               	bcf	12,3	;volatile
  3046  0261                     l132:	
  3047                           ;i2c_master.c: 83:   return ACKSTAT;;	Return value of _I2C_Write_Char is never used
  3048                           
  3049  0261  0008               	return
  3050  0262                     __end_of_I2C_Write_Char:
  3051                           
  3052                           	psect	text18
  3053  0230                     __ptext18:	
  3054 ;; *************** function _I2C_Stop *****************
  3055 ;; Defined at:
  3056 ;;		line 49 in file "i2c_master.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3070 ;;      Params:         0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0
  3073 ;;      Totals:         0       0       0       0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    1
  3077 ;; This function calls:
  3078 ;;		_I2C_Wait
  3079 ;; This function is called by:
  3080 ;;		_IO_Expander_Write
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _I2C_Stop
  3086  0230                     _I2C_Stop:
  3087  0230                     l1201:	
  3088                           ;incstack = 0
  3089                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3090                           
  3091                           
  3092                           ;i2c_master.c: 52:  I2C_Wait();
  3093  0230  120A  118A  2245  120A  118A  	fcall	_I2C_Wait
  3094  0235                     l1203:
  3095                           
  3096                           ;i2c_master.c: 53:  PEN = 1;
  3097  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0236  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0237  1511               	bsf	17,2	;volatile
  3100  0238                     l120:
  3101  0238  0008               	return
  3102  0239                     __end_of_I2C_Stop:
  3103                           
  3104                           	psect	text19
  3105  0227                     __ptext19:	
  3106 ;; *************** function _I2C_Start *****************
  3107 ;; Defined at:
  3108 ;;		line 31 in file "i2c_master.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    1
  3129 ;; This function calls:
  3130 ;;		_I2C_Wait
  3131 ;; This function is called by:
  3132 ;;		_IO_Expander_Write
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _I2C_Start
  3138  0227                     _I2C_Start:
  3139  0227                     l1197:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3142                           
  3143                           
  3144                           ;i2c_master.c: 34:  I2C_Wait();
  3145  0227  120A  118A  2245  120A  118A  	fcall	_I2C_Wait
  3146  022C                     l1199:
  3147                           
  3148                           ;i2c_master.c: 35:  SEN = 1;
  3149  022C  1683               	bsf	3,5	;RP0=1, select bank1
  3150  022D  1303               	bcf	3,6	;RP1=0, select bank1
  3151  022E  1411               	bsf	17,0	;volatile
  3152  022F                     l114:
  3153  022F  0008               	return
  3154  0230                     __end_of_I2C_Start:
  3155                           
  3156                           	psect	text20
  3157  0245                     __ptext20:	
  3158 ;; *************** function _I2C_Wait *****************
  3159 ;; Defined at:
  3160 ;;		line 23 in file "i2c_master.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_I2C_Start
  3184 ;;		_I2C_Stop
  3185 ;;		_I2C_Write_Char
  3186 ;;		_I2C_Restart
  3187 ;;		_I2C_ACK
  3188 ;;		_I2C_NACK
  3189 ;;		_I2C_Read_Char
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _I2C_Wait
  3195  0245                     _I2C_Wait:
  3196  0245                     l1193:	
  3197                           ;incstack = 0
  3198                           ; Regs used in _I2C_Wait: [wreg+status,2]
  3199                           
  3200  0245                     l108:	
  3201                           ;i2c_master.c: 25:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3202                           
  3203  0245  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0246  1303               	bcf	3,6	;RP1=0, select bank1
  3205  0247  1914               	btfsc	20,2	;volatile
  3206  0248  2A4A               	goto	u521
  3207  0249  2A4B               	goto	u520
  3208  024A                     u521:
  3209  024A  2A45               	goto	l108
  3210  024B                     u520:
  3211  024B                     l1195:
  3212  024B  0811               	movf	17,w	;volatile
  3213  024C  391F               	andlw	31
  3214  024D  1D03               	btfss	3,2
  3215  024E  2A50               	goto	u531
  3216  024F  2A51               	goto	u530
  3217  0250                     u531:
  3218  0250  2A45               	goto	l108
  3219  0251                     u530:
  3220  0251                     l111:
  3221  0251  0008               	return
  3222  0252                     __end_of_I2C_Wait:
  3223                           
  3224                           	psect	text21
  3225  03E3                     __ptext21:	
  3226 ;; *************** function _I2C_Master_Init *****************
  3227 ;; Defined at:
  3228 ;;		line 3 in file "i2c_master.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  I2C_BaudRate    4    0[BANK0 ] const unsigned long 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       4       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       4       0       0       0
  3245 ;;      Totals:         0       8       0       0       0
  3246 ;;Total ram usage:        8 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    1
  3249 ;; This function calls:
  3250 ;;		___lldiv
  3251 ;; This function is called by:
  3252 ;;		_LCD_Init
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _I2C_Master_Init
  3258  03E3                     _I2C_Master_Init:
  3259  03E3                     l1309:	
  3260                           ;incstack = 0
  3261                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3262                           
  3263                           
  3264                           ;i2c_master.c: 3: void I2C_Master_Init(const unsigned long I2C_BaudRate);i2c_master.c: 4
      +                          : {;i2c_master.c: 8:  SSPCON = 0x28;
  3265  03E3  3028               	movlw	40
  3266  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3267  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  3268  03E6  0094               	movwf	20	;volatile
  3269  03E7                     l1311:
  3270                           
  3271                           ;i2c_master.c: 9:  SSPCON2 = 0x00;
  3272  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  3273  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  3274  03E9  0191               	clrf	17	;volatile
  3275  03EA                     l1313:
  3276                           
  3277                           ;i2c_master.c: 10:  SSPSTAT = 0x00;
  3278  03EA  0194               	clrf	20	;volatile
  3279  03EB                     l1315:
  3280                           
  3281                           ;i2c_master.c: 12:  SSPADD = (unsigned char)( 8000000/(4*I2C_BaudRate) ) - 1;
  3282  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3283  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3284  03ED  0820               	movf	I2C_Master_Init@I2C_BaudRate,w
  3285  03EE  00A4               	movwf	??_I2C_Master_Init
  3286  03EF  0821               	movf	I2C_Master_Init@I2C_BaudRate+1,w
  3287  03F0  00A5               	movwf	??_I2C_Master_Init+1
  3288  03F1  0822               	movf	I2C_Master_Init@I2C_BaudRate+2,w
  3289  03F2  00A6               	movwf	??_I2C_Master_Init+2
  3290  03F3  0823               	movf	I2C_Master_Init@I2C_BaudRate+3,w
  3291  03F4  00A7               	movwf	??_I2C_Master_Init+3
  3292  03F5  3002               	movlw	2
  3293  03F6                     u715:
  3294  03F6  1003               	clrc
  3295  03F7  0DA4               	rlf	??_I2C_Master_Init,f
  3296  03F8  0DA5               	rlf	??_I2C_Master_Init+1,f
  3297  03F9  0DA6               	rlf	??_I2C_Master_Init+2,f
  3298  03FA  0DA7               	rlf	??_I2C_Master_Init+3,f
  3299  03FB                     u710:
  3300  03FB  3EFF               	addlw	-1
  3301  03FC  1D03               	skipz
  3302  03FD  2BF6               	goto	u715
  3303  03FE  0827               	movf	??_I2C_Master_Init+3,w
  3304  03FF  00F3               	movwf	___lldiv@divisor+3
  3305  0400  0826               	movf	??_I2C_Master_Init+2,w
  3306  0401  00F2               	movwf	___lldiv@divisor+2
  3307  0402  0825               	movf	??_I2C_Master_Init+1,w
  3308  0403  00F1               	movwf	___lldiv@divisor+1
  3309  0404  0824               	movf	??_I2C_Master_Init,w
  3310  0405  00F0               	movwf	___lldiv@divisor
  3311  0406  3000               	movlw	0
  3312  0407  00F7               	movwf	___lldiv@dividend+3
  3313  0408  307A               	movlw	122
  3314  0409  00F6               	movwf	___lldiv@dividend+2
  3315  040A  3012               	movlw	18
  3316  040B  00F5               	movwf	___lldiv@dividend+1
  3317  040C  3000               	movlw	0
  3318  040D  00F4               	movwf	___lldiv@dividend
  3319  040E  120A  118A  2538  120A  118A  	fcall	___lldiv
  3320  0413  0870               	movf	?___lldiv,w
  3321  0414  3EFF               	addlw	255
  3322  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3323  0416  1303               	bcf	3,6	;RP1=0, select bank1
  3324  0417  0093               	movwf	19	;volatile
  3325  0418                     l1317:
  3326                           
  3327                           ;i2c_master.c: 13:  TRISC3 = 1;
  3328  0418  1587               	bsf	7,3	;volatile
  3329  0419                     l1319:
  3330                           
  3331                           ;i2c_master.c: 14:  TRISC4 = 1;
  3332  0419  1607               	bsf	7,4	;volatile
  3333  041A                     l105:
  3334  041A  0008               	return
  3335  041B                     __end_of_I2C_Master_Init:
  3336                           
  3337                           	psect	text22
  3338  0538                     __ptext22:	
  3339 ;; *************** function ___lldiv *****************
  3340 ;; Defined at:
  3341 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  divisor         4    0[COMMON] unsigned long 
  3344 ;;  dividend        4    4[COMMON] unsigned long 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  quotient        4    9[COMMON] unsigned long 
  3347 ;;  counter         1   13[COMMON] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  4    0[COMMON] unsigned long 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         8       0       0       0       0
  3358 ;;      Locals:         5       0       0       0       0
  3359 ;;      Temps:          1       0       0       0       0
  3360 ;;      Totals:        14       0       0       0       0
  3361 ;;Total ram usage:       14 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_I2C_Master_Init
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function ___lldiv
  3372  0538                     ___lldiv:
  3373  0538                     l1239:	
  3374                           ;incstack = 0
  3375                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3376                           
  3377  0538  3000               	movlw	0
  3378  0539  00FC               	movwf	___lldiv@quotient+3
  3379  053A  3000               	movlw	0
  3380  053B  00FB               	movwf	___lldiv@quotient+2
  3381  053C  3000               	movlw	0
  3382  053D  00FA               	movwf	___lldiv@quotient+1
  3383  053E  3000               	movlw	0
  3384  053F  00F9               	movwf	___lldiv@quotient
  3385  0540  0873               	movf	___lldiv@divisor+3,w
  3386  0541  0472               	iorwf	___lldiv@divisor+2,w
  3387  0542  0471               	iorwf	___lldiv@divisor+1,w
  3388  0543  0470               	iorwf	___lldiv@divisor,w
  3389  0544  1903               	skipnz
  3390  0545  2D47               	goto	u591
  3391  0546  2D48               	goto	u590
  3392  0547                     u591:
  3393  0547  2D95               	goto	l1259
  3394  0548                     u590:
  3395  0548                     l1241:
  3396  0548  01FD               	clrf	___lldiv@counter
  3397  0549  0AFD               	incf	___lldiv@counter,f
  3398  054A  2D58               	goto	l1245
  3399  054B                     l1243:
  3400  054B  3001               	movlw	1
  3401  054C  00F8               	movwf	??___lldiv
  3402  054D                     u605:
  3403  054D  1003               	clrc
  3404  054E  0DF0               	rlf	___lldiv@divisor,f
  3405  054F  0DF1               	rlf	___lldiv@divisor+1,f
  3406  0550  0DF2               	rlf	___lldiv@divisor+2,f
  3407  0551  0DF3               	rlf	___lldiv@divisor+3,f
  3408  0552  0BF8               	decfsz	??___lldiv,f
  3409  0553  2D4D               	goto	u605
  3410  0554  3001               	movlw	1
  3411  0555  00F8               	movwf	??___lldiv
  3412  0556  0878               	movf	??___lldiv,w
  3413  0557  07FD               	addwf	___lldiv@counter,f
  3414  0558                     l1245:
  3415  0558  1FF3               	btfss	___lldiv@divisor+3,7
  3416  0559  2D5B               	goto	u611
  3417  055A  2D5C               	goto	u610
  3418  055B                     u611:
  3419  055B  2D4B               	goto	l1243
  3420  055C                     u610:
  3421  055C                     l1247:
  3422  055C  3001               	movlw	1
  3423  055D  00F8               	movwf	??___lldiv
  3424  055E                     u625:
  3425  055E  1003               	clrc
  3426  055F  0DF9               	rlf	___lldiv@quotient,f
  3427  0560  0DFA               	rlf	___lldiv@quotient+1,f
  3428  0561  0DFB               	rlf	___lldiv@quotient+2,f
  3429  0562  0DFC               	rlf	___lldiv@quotient+3,f
  3430  0563  0BF8               	decfsz	??___lldiv,f
  3431  0564  2D5E               	goto	u625
  3432  0565                     l1249:
  3433  0565  0873               	movf	___lldiv@divisor+3,w
  3434  0566  0277               	subwf	___lldiv@dividend+3,w
  3435  0567  1D03               	skipz
  3436  0568  2D73               	goto	u635
  3437  0569  0872               	movf	___lldiv@divisor+2,w
  3438  056A  0276               	subwf	___lldiv@dividend+2,w
  3439  056B  1D03               	skipz
  3440  056C  2D73               	goto	u635
  3441  056D  0871               	movf	___lldiv@divisor+1,w
  3442  056E  0275               	subwf	___lldiv@dividend+1,w
  3443  056F  1D03               	skipz
  3444  0570  2D73               	goto	u635
  3445  0571  0870               	movf	___lldiv@divisor,w
  3446  0572  0274               	subwf	___lldiv@dividend,w
  3447  0573                     u635:
  3448  0573  1C03               	skipc
  3449  0574  2D76               	goto	u631
  3450  0575  2D77               	goto	u630
  3451  0576                     u631:
  3452  0576  2D86               	goto	l1255
  3453  0577                     u630:
  3454  0577                     l1251:
  3455  0577  0870               	movf	___lldiv@divisor,w
  3456  0578  02F4               	subwf	___lldiv@dividend,f
  3457  0579  0871               	movf	___lldiv@divisor+1,w
  3458  057A  1C03               	skipc
  3459  057B  0F71               	incfsz	___lldiv@divisor+1,w
  3460  057C  02F5               	subwf	___lldiv@dividend+1,f
  3461  057D  0872               	movf	___lldiv@divisor+2,w
  3462  057E  1C03               	skipc
  3463  057F  0F72               	incfsz	___lldiv@divisor+2,w
  3464  0580  02F6               	subwf	___lldiv@dividend+2,f
  3465  0581  0873               	movf	___lldiv@divisor+3,w
  3466  0582  1C03               	skipc
  3467  0583  0F73               	incfsz	___lldiv@divisor+3,w
  3468  0584  02F7               	subwf	___lldiv@dividend+3,f
  3469  0585                     l1253:
  3470  0585  1479               	bsf	___lldiv@quotient,0
  3471  0586                     l1255:
  3472  0586  3001               	movlw	1
  3473  0587                     u645:
  3474  0587  1003               	clrc
  3475  0588  0CF3               	rrf	___lldiv@divisor+3,f
  3476  0589  0CF2               	rrf	___lldiv@divisor+2,f
  3477  058A  0CF1               	rrf	___lldiv@divisor+1,f
  3478  058B  0CF0               	rrf	___lldiv@divisor,f
  3479  058C  3EFF               	addlw	-1
  3480  058D  1D03               	skipz
  3481  058E  2D87               	goto	u645
  3482  058F                     l1257:
  3483  058F  3001               	movlw	1
  3484  0590  02FD               	subwf	___lldiv@counter,f
  3485  0591  1D03               	btfss	3,2
  3486  0592  2D94               	goto	u651
  3487  0593  2D95               	goto	u650
  3488  0594                     u651:
  3489  0594  2D5C               	goto	l1247
  3490  0595                     u650:
  3491  0595                     l1259:
  3492  0595  087C               	movf	___lldiv@quotient+3,w
  3493  0596  00F3               	movwf	?___lldiv+3
  3494  0597  087B               	movf	___lldiv@quotient+2,w
  3495  0598  00F2               	movwf	?___lldiv+2
  3496  0599  087A               	movf	___lldiv@quotient+1,w
  3497  059A  00F1               	movwf	?___lldiv+1
  3498  059B  0879               	movf	___lldiv@quotient,w
  3499  059C  00F0               	movwf	?___lldiv
  3500  059D                     l321:
  3501  059D  0008               	return
  3502  059E                     __end_of___lldiv:
  3503  007E                     btemp	set	126	;btemp
  3504  007E                     wtemp0	set	126
  3505                           
  3506                           	psect	config
  3507                           
  3508                           ;Config register CONFIG @ 0x2007
  3509                           ;	Oscillator Selection bits
  3510                           ;	FOSC = HS, HS oscillator
  3511                           ;	Watchdog Timer Enable bit
  3512                           ;	WDTE = OFF, WDT disabled
  3513                           ;	Power-up Timer Enable bit
  3514                           ;	PWRTE = ON, PWRT enabled
  3515                           ;	Brown-out Reset Enable bit
  3516                           ;	BOREN = ON, BOR enabled
  3517                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3518                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3519                           ;	Data EEPROM Memory Code Protection bit
  3520                           ;	CPD = OFF, Data EEPROM code protection off
  3521                           ;	Flash Program Memory Write Enable bits
  3522                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3523                           ;	In-Circuit Debugger Mode bit
  3524                           ;	DEBUG = 0x1, unprogrammed default
  3525                           ;	Flash Program Memory Code Protection bit
  3526                           ;	CP = OFF, Code protection off
  3527  2007                     	org	8199
  3528  2007  3FF2               	dw	16370

Data Sizes:
    Strings     24
    Constant    0
    Data        12
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[11]), temp(BANK0[11]), STR_1(CODE[13]), 

    ds18b20_read@raw_temp_value	PTR unsigned int  size(1) Largest target is 2
		 -> raw_temp(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _ds18b20_read->_ds18b20_read_byte
    _ds18b20_read->_ds18b20_write_byte
    _ds18b20_write_byte->_ds18b20_write_bit
    _ds18b20_read_byte->_ds18b20_read_bit
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Write_Char
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_LCD_Init
    _LCD_Init->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4279
                                             14 BANK0      3     3      0
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            ___lwdiv
                            ___lwmod
                             ___wmul
                       _ds18b20_read
 ---------------------------------------------------------------------------------
 (1) _ds18b20_read                                         3     3      0     281
                                              5 COMMON     3     3      0
                  _ds18b20_read_byte
                      _ds18b20_start
                 _ds18b20_write_byte
 ---------------------------------------------------------------------------------
 (2) _ds18b20_write_byte                                   3     3      0     112
                                              2 COMMON     3     3      0
                  _ds18b20_write_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_write_bit                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_start                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_read_byte                                    4     4      0      92
                                              1 COMMON     4     4      0
                   _ds18b20_read_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_read_bit                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     919
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     451
                                              6 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     471
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             6     2      4     687
                                              8 BANK0      6     2      4
                    _I2C_Master_Init
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Char                                       1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _I2C_Master_Init
       ___lldiv
     _IO_Expander_Write
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write_Char
         _I2C_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Start
             _I2C_Wait
           _I2C_Stop
             _I2C_Wait
           _I2C_Write_Char
             _I2C_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Start
             _I2C_Wait
           _I2C_Stop
             _I2C_Wait
           _I2C_Write_Char
             _I2C_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Start
             _I2C_Wait
           _I2C_Stop
             _I2C_Wait
           _I2C_Write_Char
             _I2C_Wait
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   ___wmul
   _ds18b20_read
     _ds18b20_read_byte
       _ds18b20_read_bit
     _ds18b20_start
     _ds18b20_write_byte
       _ds18b20_write_bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      21       5       41.2%
BITBANK0            50      0       1       4        1.2%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Dec 25 09:22:12 2021

                          pc 0002           __size_of_I2C_Start 0009                           l10 03AC  
                         l13 031B                           l32 033D                           l18 02E1  
                         l27 0361                           l36 0537                           _RS 003D  
                         fsr 0004          ___wmul@multiplicand 0072                          l111 0251  
                        l120 0238                          l105 041A                          l114 022F  
                        l131 0260                          l108 0245                          l132 0261  
                        l160 028E                          l321 059D                          l129 025C  
                        l163 02C5                          l157 02A9                          l166 0648  
                        l175 0498                          l184 03E2                          l169 02FE  
                        l285 036E                          l287 0386                          l557 04DC  
                        l567 0456                          _RD7 0047                          u520 024B  
                        _PEN 048A                          u521 024A                          u610 055C  
                        u530 0251                          u611 055B                          u531 0250  
                        u540 0260                          u700 033C                          u605 054D  
                        u541 025F                          u701 033B                          u630 0577  
                        u710 03FB                          u550 030F                          u631 0576  
                        u551 030B                          u800 0368                          u625 055E  
                        u801 0367                          u650 0595                          u651 0594  
                        u635 0573                          u715 03F6                          u900 04D8  
                        u580 035E                          u660 03A2                          u564 0312  
                        u740 04E7                          _SEN 0488                          u645 0587  
                        u725 02B8                          u901 04D7                          u581 035D  
                        u661 03A1                          u741 04E6                          u590 0548  
                        u910 0423                          u830 0382                          u750 04FF  
                        u591 0547                          u735 02F1                          u911 0422  
                        u831 0381                          u815 036F                          u575 0353  
                        u751 04FE                          u840 04A1                          u680 02E1  
                        u760 0508                          u841 04A0                          u825 0376  
                        u681 02E0                          u761 0507                          u770 0464  
                        u930 0435                          u674 02CE                          u931 0434  
                        u675 02CC                          u780 0486                          u860 04B3  
                        u940 043F                          u861 04B2                          u941 043E  
                        u925 0427                          u790 0498                          u694 032B  
                        u791 0497                          u855 04A5                          u695 0329  
                        u880 04C4                          u960 0452                          u881 04C3  
                        u961 0451                          u945 043B                          u970 0695  
                        u875 04B4                          u955 0446                          u971 0694  
                        u980 069B                          u885 04C0                          u981 069A  
                        u895 04CC                          u995 06AA                          fsr0 0004  
                        indf 0000              __end_of_LCD_CMD 02C6          LCD_Write_String@Str 0076  
             _LCD_Set_Cursor 03AD                         l1201 0230                         l1203 0235  
                       l1211 0300                         l1205 0253                         l1221 0349  
                       l1301 0332                         l1213 0312                         l1311 03E7  
                       l1207 0258                         l1223 034D                         l1303 0336  
                       l1215 0316                         l1241 0548                         l1313 03EA  
                       l1209 0290                         l1233 0276                         l1321 02AB  
                       l1401 0457                         l1225 0358                         l1305 033C  
                       l1217 0319                         l1251 0577                         l1243 054B  
                       l1315 03EB                         l1235 027C                         l1323 02AE  
                       l1403 045A                         l1227 035E                         l1219 033E  
                       l1331 04DE                         l1253 0585                         l1245 0558  
                       l1317 0418                         l1309 03E3                         l1237 0283  
                       l1325 02B5                         l1405 0476                         l1421 0362  
                       l1229 0360                         l1341 04FF                         l1333 04E7  
                       l1501 069B                         l1255 0586                         l1247 055C  
                       l1239 0538                         l1319 0419                         l1327 02E3  
                       l1407 047C                         l1431 0382                         l1423 0364  
                       l1271 03A2                         l1263 0387                         l1351 0524  
                       l1511 06C2                         l1503 069F                         l1257 058F  
                       l1249 0565                         l1193 0245                         l1361 05B7  
                       l1329 02E7                         l1441 04A4                         l1425 0368  
                       l1273 03A9                         l1265 038D                         l1281 02C7  
                       l1353 0536                         l1337 04E9                         l1521 078A  
                       l1513 06EA                         l1505 06A5                         l1259 0595  
                       l1195 024B                         l1371 05F8                         l1363 05C8  
                       l1451 04CA                         l1443 04AB                         l1435 0499  
                       l1427 0375                         l1267 0394                         l1291 02DB  
                       l1347 0509                         l1339 04F5                         l1531 07D8  
                       l1523 07AF                         l1515 0703                         l1507 06B9  
                       l1197 0227                         l1381 062E                         l1373 05FE  
                       l1365 05CE                         l1357 059E                         l1453 04CB  
                       l1445 04AF                         l1437 049B                         l1461 041B  
                       l1429 037C                         l1293 031C                         l1277 03AB  
                       l1269 039C                         l1349 0515                         l1525 07B9  
                       l1517 0726                         l1509 06BE                         l1199 022C  
                       l1383 063E                         l1375 060E                         l1367 05DE  
                       l1359 05AD                         l1391 03BF                         l1455 04D2  
                       l1447 04B3                         l1439 04A1                         l1471 0435  
                       l1463 0423                         l1287 02C8                         l1519 0758  
                       l1527 07C3                         l1377 0618                         l1369 05E8  
                       l1393 03C7                         l1385 03AE                         l1449 04C4  
                       l1457 04D8                         l1473 043F                         l1465 0426  
                       l1289 02D7                         l1529 07CF                         l1379 0628  
                       l1387 03AF                         l1395 03CF                         l1475 0445  
                       l1467 042D                         l1299 031E                         l1491 0670  
                       l1483 0649                         l1389 03B7                         l1477 044C  
                       l1469 0431                         l1493 067C                         l1485 0651  
                       l1479 0452                         l1495 0685                         l1487 0653  
                       l1497 068B                         l1489 0661                         l1595 03D7  
                       l1499 0695        __end_of_ds18b20_start 03AD                         STR_1 0013  
                       STR_2 0020                         u1000 06B9                         u1001 06B8  
                       u1107 0355                         u1117 05B3                         u1037 065B  
                       u1207 0644                         u1127 05C3                         u1047 07E0  
                       u1217 028C                         u1137 05D4                         u1057 0314  
                       u1147 05E4                         u1067 038F                         u1157 05F4  
                       u1077 0399                         u1167 0604                         u1087 03A4  
                       u1177 0614                         u1097 034B                         u1187 0624  
                       u1197 0634                         _RCEN 048B                         _RSEN 0489  
          ?_LCD_Write_String 0076                         _main 0649                         _temp 0032  
                       btemp 007E             __end_of_I2C_Wait 0252             __end_of_I2C_Stop 0239  
                       start 0000           ??_LCD_Write_String 0078         LCD_Write_4Bit@Nibble 0073  
           __end_of_LCD_Init 0649             ?_I2C_Master_Init 0020                        ?_main 0070  
           _ds18b20_read_bit 033E                        _ACKEN 048C                        _ACKDT 048D  
                      _CMCON 009C              __end_of___lldiv 059E              __end_of___lwdiv 04DD  
            __end_of___lwmod 0457                        _SSPIF 0063       __end_of_LCD_Set_Cursor 03E3  
          __end_of_I2C_Start 0230                        pclath 000A                        status 0003  
                      wtemp0 007E               _LCD_Write_4Bit 0275               _LCD_Write_Char 02E2  
            __initialization 07EA                 __end_of_main 07EA            _IO_Expander_Write 028F  
         ?_IO_Expander_Write 0070                       ??_main 002E                    ??_LCD_CMD 0074  
 ds18b20_read@raw_temp_value 0077          ??_IO_Expander_Write 0071              ?_LCD_Set_Cursor 0076  
                     _ADCON1 009F            _ds18b20_read_byte 031C           ?_ds18b20_read_byte 0070  
                     _SSPADD 0093                       _TRISC3 043B                       _TRISC4 043C  
 __end_of_ds18b20_write_byte 02E2                       _TRISD7 0447                       _SSPCON 0014  
                     _SSPBUF 0013       __end_of_LCD_Write_4Bit 028F       __end_of_LCD_Write_Char 02FF  
        ??_ds18b20_read_byte 0071    __end_of_IO_Expander_Write 02AA          ds18b20_write_byte@i 0074  
                     ___wmul 0362                    ??___lldiv 0078                    ??___lwdiv 007A  
                  ??___lwmod 0024      ds18b20_write_byte@value 0073                    ?_I2C_Wait 0070  
                  ?_I2C_Stop 0070    __end_of_ds18b20_read_byte 033E            _ds18b20_write_bit 02FF  
         ?_ds18b20_write_bit 0070      __end_of__initialization 07FC                    ?_LCD_Init 0028  
            ?_LCD_Write_4Bit 0070              ?_LCD_Write_Char 0070          ??_ds18b20_write_bit 0070  
             __pcstackCOMMON 0070                 __pidataBANK0 0239                ?_ds18b20_read 0070  
                 ??_I2C_Wait 0070                   ??_I2C_Stop 0070    __end_of_ds18b20_write_bit 031C  
                 __pbssBANK0 003D                   ??_LCD_Init 002C     __end_of_ds18b20_read_bit 0362  
 __size_of_IO_Expander_Write 001B                   __pmaintext 0649           ds18b20_read_byte@i 0074  
                    ?___wmul 0070      __size_of_I2C_Write_Char 0010                      _ACKSTAT 048E  
  __size_of_LCD_Write_String 0042               ??_ds18b20_read 0075                      _LCD_CMD 02AA  
       LCD_Init@I2C_BaudRate 0028   __size_of_ds18b20_read_byte 0022                      _SSPCON2 0091  
                    _SSPSTAT 0094                   __stringtab 0003                    _I2C_Start 0227  
     ds18b20_read_byte@value 0073                      ___lldiv 0538              __size_of___wmul 0025  
                    ___lwdiv 0499                      ___lwmod 041B       __size_of_ds18b20_start 0026  
           ??_LCD_Set_Cursor 0077                      __ptext1 04DD                      __ptext2 02C6  
                    __ptext3 02FF                      __ptext4 0387                      __ptext5 031C  
                    __ptext6 033E                      __ptext7 0362                      __ptext8 041B  
                    __ptext9 0499   __size_of_ds18b20_write_bit 001D     __size_of_I2C_Master_Init 0038  
       end_of_initialization 07FC                   ?_I2C_Start 0070              ___lldiv@divisor 0070  
            ___lldiv@counter 007D           _ds18b20_write_byte 02C6                   LCD_CMD@CMD 0075  
        ?_ds18b20_write_byte 0070            __size_of_I2C_Wait 000D            __size_of_I2C_Stop 0009  
           ??_LCD_Write_4Bit 0072            LCD_Write_String@i 007B             ??_LCD_Write_Char 0074  
              _ds18b20_start 0387         __end_of_ds18b20_read 0538         ??_ds18b20_write_byte 0072  
          __size_of_LCD_Init 00AB               _I2C_Write_Char 0252               __end_of___wmul 0387  
           _LCD_Write_String 0457                __pbitbssBANK0 0200          start_initialization 07EA  
     ds18b20_write_bit@value 0071               ?_ds18b20_start 0070            ??_I2C_Master_Init 0024  
                ??_I2C_Start 0070            ?_ds18b20_read_bit 0070           ??_ds18b20_read_bit 0070  
     __end_of_I2C_Write_Char 0262                     ??___wmul 0074                   init_fetch0 0262  
                __pdataBANK0 0031                     ?_LCD_CMD 0070                    ___latbits 0002  
              __pcstackBANK0 0020        ds18b20_read_bit@value 0200             ___lwdiv@dividend 0078  
      IO_Expander_Write@Data 0071              ?_I2C_Write_Char 0070                     ?___lldiv 0070  
                   ?___lwdiv 0076                     ?___lwmod 0020                    __pstrings 0003  
                   _I2C_Wait 0245                     _I2C_Stop 0230              ??_ds18b20_start 0070  
           ___lwdiv@quotient 007B        __size_of_ds18b20_read 005B                     _LCD_Init 059E  
             ___wmul@product 0074                  __stringbase 0012            ___wmul@multiplier 0070  
               _ds18b20_read 04DD             __size_of_LCD_CMD 001C     __end_of_LCD_Write_String 0499  
           __size_of___lldiv 0066             __size_of___lwdiv 0044             __size_of___lwmod 003C  
         __end_of__stringtab 0013              _I2C_Master_Init 03E3              ___lwdiv@divisor 0076  
            ___lwdiv@counter 007D                     __ptext10 0457                     __ptext11 02E2  
                   __ptext20 0245                     __ptext12 03AD                     __ptext21 03E3  
                   __ptext13 059E                     __ptext22 0538                     __ptext14 02AA  
                   __ptext15 0275                     __ptext16 028F                     __ptext17 0252  
                   __ptext18 0230                     __ptext19 0227      __size_of_LCD_Set_Cursor 0036  
            _BackLight_State 0031                __size_of_main 01A1  __size_of_ds18b20_write_byte 001C  
                   _raw_temp 003E    __size_of_ds18b20_read_bit 0024           LCD_Write_Char@Data 0075  
                   init_ram0 0266             ___lwmod@dividend 0022             ___lldiv@dividend 0074  
           ??_I2C_Write_Char 0070                    stringcode 000D      __size_of_LCD_Write_4Bit 001A  
I2C_Master_Init@I2C_BaudRate 0020      __size_of_LCD_Write_Char 001D      __end_of_I2C_Master_Init 041B  
           ___lldiv@quotient 0079              ___lwmod@divisor 0020              ___lwmod@counter 0025  
                   stringdir 000D                     stringtab 0003            LCD_Set_Cursor@COL 0076  
          LCD_Set_Cursor@ROW 0079           I2C_Write_Char@Data 0070  
