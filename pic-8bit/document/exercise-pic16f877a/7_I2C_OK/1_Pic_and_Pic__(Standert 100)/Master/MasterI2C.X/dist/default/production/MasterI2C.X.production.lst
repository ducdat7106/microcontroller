

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Feb 13 18:10:31 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0006                     _PORTB	set	6
   175  0008                     _PORTD	set	8
   176  0013                     _SSPBUF	set	19
   177  0014                     _SSPCON	set	20
   178  0063                     _SSPIF	set	99
   179  0088                     _TRISD	set	136
   180  0086                     _TRISB	set	134
   181  0094                     _SSPSTAT	set	148
   182  0093                     _SSPADD	set	147
   183  0091                     _SSPCON2	set	145
   184  040F                     _nRBPU	set	1039
   185  048B                     _RCEN	set	1163
   186  048E                     _ACKSTAT	set	1166
   187  048C                     _ACKEN	set	1164
   188  048D                     _ACKDT	set	1165
   189  048A                     _PEN	set	1162
   190  0489                     _RSEN	set	1161
   191  0488                     _SEN	set	1160
   192  043C                     _TRISC4	set	1084
   193  043B                     _TRISC3	set	1083
   194                           
   195                           	psect	cinit
   196  07F9                     start_initialization:	
   197                           ; #config settings
   198                           
   199  07F9                     __initialization:
   200                           
   201                           ; Clear objects allocated to BANK0
   202  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   203  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   204  07FB  01AA               	clrf	__pbssBANK0& (0+127)
   205  07FC                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208  07FC                     __end_of__initialization:
   209  07FC  0183               	clrf	3
   210  07FD  120A  118A  2EBA   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	bssBANK0
   213  002A                     __pbssBANK0:
   214  002A                     write_data_display_led@value:
   215  002A                     	ds	1
   216                           
   217                           	psect	cstackCOMMON
   218  0070                     __pcstackCOMMON:
   219  0070                     ?_write_data_display_led:
   220  0070                     ?_I2C_Master_Init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_I2C_Master_Wait:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ??_I2C_Master_Wait:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_I2C_Master_Start:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_I2C_Master_Start:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_I2C_Master_Stop:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ??_I2C_Master_Stop:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_I2C_Master_Write:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ??_I2C_Master_Write:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?___wmul:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     I2C_Master_Write@data:	
   254                           ; 2 bytes @ 0x0
   255                           
   256  0070                     ___wmul@multiplier:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 2 bytes @ 0x0
   261  0070                     	ds	1
   262  0071                     ??_write_data_display_led:
   263                           
   264                           ; 1 bytes @ 0x1
   265  0071                     	ds	1
   266  0072                     ___wmul@multiplicand:
   267                           
   268                           ; 2 bytes @ 0x2
   269  0072                     	ds	2
   270  0074                     ??___wmul:
   271  0074                     ___wmul@product:	
   272                           ; 1 bytes @ 0x4
   273                           
   274                           
   275                           ; 2 bytes @ 0x4
   276  0074                     	ds	2
   277  0076                     ?___aldiv:
   278  0076                     ___aldiv@divisor:	
   279                           ; 4 bytes @ 0x6
   280                           
   281                           
   282                           ; 4 bytes @ 0x6
   283  0076                     	ds	4
   284  007A                     ___aldiv@dividend:
   285                           
   286                           ; 4 bytes @ 0xA
   287  007A                     	ds	4
   288  007E                     ??_main:
   289                           
   290                           	psect	cstackBANK0
   291  0020                     __pcstackBANK0:	
   292                           ; 1 bytes @ 0xE
   293                           
   294  0020                     ??___aldiv:
   295                           
   296                           ; 1 bytes @ 0x0
   297  0020                     	ds	1
   298  0021                     ___aldiv@counter:
   299                           
   300                           ; 1 bytes @ 0x1
   301  0021                     	ds	1
   302  0022                     ___aldiv@sign:
   303                           
   304                           ; 1 bytes @ 0x2
   305  0022                     	ds	1
   306  0023                     ___aldiv@quotient:
   307                           
   308                           ; 4 bytes @ 0x3
   309  0023                     	ds	4
   310  0027                     ??_I2C_Master_Init:
   311                           
   312                           ; 1 bytes @ 0x7
   313  0027                     	ds	2
   314  0029                     I2C_Master_Init@c:
   315                           
   316                           ; 1 bytes @ 0x9
   317  0029                     	ds	1
   318                           
   319                           	psect	maintext
   320  06BA                     __pmaintext:	
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 142 in file "main_master.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, pclath, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : B00/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   340 ;;      Params:         0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels required when called: 3
   346 ;; This function calls:
   347 ;;		_I2C_Master_Init
   348 ;;		_write_data_display_led
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function _main
   356  06BA                     _main:
   357  06BA                     l946:	
   358                           ;incstack = 0
   359                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   360                           
   361                           
   362                           ;main_master.c: 144:     nRBPU = 0;
   363  06BA  1683               	bsf	3,5	;RP0=1, select bank1
   364  06BB  1303               	bcf	3,6	;RP1=0, select bank1
   365  06BC  1381               	bcf	1,7	;volatile
   366  06BD                     l948:
   367                           
   368                           ;main_master.c: 145:     TRISB = 0xFF;
   369  06BD  30FF               	movlw	255
   370  06BE  0086               	movwf	6	;volatile
   371  06BF                     l950:
   372                           
   373                           ;main_master.c: 146:     TRISD = 0x00;
   374  06BF  0188               	clrf	8	;volatile
   375  06C0                     l952:
   376                           
   377                           ;main_master.c: 147:     PORTD = 0x00;
   378  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   379  06C1  1303               	bcf	3,6	;RP1=0, select bank0
   380  06C2  0188               	clrf	8	;volatile
   381  06C3                     l954:
   382                           
   383                           ;main_master.c: 148:     I2C_Master_Init(100);
   384  06C3  3064               	movlw	100
   385  06C4  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Init
   386  06C9                     l956:
   387                           
   388                           ;main_master.c: 151:     {;main_master.c: 153:         write_data_display_led();
   389  06C9  120A  118A  26F7  120A  118A  	fcall	_write_data_display_led
   390  06CE  2EC9               	goto	l956
   391  06CF  120A  118A  2800   	ljmp	start
   392  06D2                     __end_of_main:
   393                           
   394                           	psect	text1
   395  06F7                     __ptext1:	
   396 ;; *************** function _write_data_display_led *****************
   397 ;; Defined at:
   398 ;;		line 174 in file "main_master.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0
   414 ;;      Temps:          3       0       0       0       0
   415 ;;      Totals:         3       0       0       0       0
   416 ;;Total ram usage:        3 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; Hardware stack levels required when called: 2
   419 ;; This function calls:
   420 ;;		_I2C_Master_Start
   421 ;;		_I2C_Master_Stop
   422 ;;		_I2C_Master_Write
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _write_data_display_led
   430  06F7                     _write_data_display_led:
   431  06F7                     l928:	
   432                           ;incstack = 0
   433                           ; Regs used in _write_data_display_led: [wreg+status,2+status,0+pclath+cstack]
   434                           
   435                           
   436                           ;main_master.c: 176:     static unsigned char value=0;;main_master.c: 177:     I2C_Maste
      +                          r_Start();
   437  06F7  120A  118A  268B  120A  118A  	fcall	_I2C_Master_Start
   438                           
   439                           ;main_master.c: 178:     I2C_Master_Write(0x30);
   440  06FC  3030               	movlw	48
   441  06FD  120A  118A  26AA  120A  118A  	fcall	_I2C_Master_Write
   442                           
   443                           ;main_master.c: 179:     I2C_Master_Write(value++);
   444  0702  1283               	bcf	3,5	;RP0=0, select bank0
   445  0703  1303               	bcf	3,6	;RP1=0, select bank0
   446  0704  082A               	movf	write_data_display_led@value,w
   447  0705  120A  118A  26AA  120A  118A  	fcall	_I2C_Master_Write
   448  070A                     l930:
   449  070A  3001               	movlw	1
   450  070B  00F1               	movwf	??_write_data_display_led
   451  070C  0871               	movf	??_write_data_display_led,w
   452  070D  1283               	bcf	3,5	;RP0=0, select bank0
   453  070E  1303               	bcf	3,6	;RP1=0, select bank0
   454  070F  07AA               	addwf	write_data_display_led@value,f
   455  0710                     l932:
   456                           
   457                           ;main_master.c: 180:     I2C_Master_Stop();
   458  0710  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Stop
   459  0715                     l934:
   460                           
   461                           ;main_master.c: 181:     _delay((unsigned long)((500)*(8000000/4000.0)));
   462  0715  3006               	movlw	6
   463  0716  00F3               	movwf	??_write_data_display_led+2
   464  0717  3013               	movlw	19
   465  0718  00F2               	movwf	??_write_data_display_led+1
   466  0719  30AD               	movlw	173
   467  071A  00F1               	movwf	??_write_data_display_led
   468  071B                     u377:
   469  071B  0BF1               	decfsz	??_write_data_display_led,f
   470  071C  2F1B               	goto	u377
   471  071D  0BF2               	decfsz	??_write_data_display_led+1,f
   472  071E  2F1B               	goto	u377
   473  071F  0BF3               	decfsz	??_write_data_display_led+2,f
   474  0720  2F1B               	goto	u377
   475  0721  2F22               	nop2
   476  0722                     l96:
   477  0722  0008               	return
   478  0723                     __end_of_write_data_display_led:
   479                           
   480                           	psect	text2
   481  06AA                     __ptext2:	
   482 ;; *************** function _I2C_Master_Write *****************
   483 ;; Defined at:
   484 ;;		line 118 in file "main_master.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  data            1    wreg     unsigned char 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  data            1    0[COMMON] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      unsigned char 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         1       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         1       0       0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		_I2C_Master_Wait
   507 ;; This function is called by:
   508 ;;		_write_data_display_led
   509 ;;		_read_button_display_led
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _I2C_Master_Write
   515  06AA                     _I2C_Master_Write:
   516                           
   517                           ;incstack = 0
   518                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
   519                           ;I2C_Master_Write@data stored from wreg
   520  06AA  00F0               	movwf	I2C_Master_Write@data
   521  06AB                     l842:
   522                           
   523                           ;main_master.c: 118: unsigned char I2C_Master_Write(unsigned char data);main_master.c: 1
      +                          19: {;main_master.c: 120:   I2C_Master_Wait();
   524  06AB  120A  118A  269D  120A  118A  	fcall	_I2C_Master_Wait
   525  06B0                     l844:
   526                           
   527                           ;main_master.c: 121:   SSPBUF = data;
   528  06B0  0870               	movf	I2C_Master_Write@data,w
   529  06B1  1283               	bcf	3,5	;RP0=0, select bank0
   530  06B2  1303               	bcf	3,6	;RP1=0, select bank0
   531  06B3  0093               	movwf	19	;volatile
   532  06B4                     l71:	
   533                           ;main_master.c: 122:   while(!SSPIF);
   534                           
   535  06B4  1D8C               	btfss	12,3	;volatile
   536  06B5  2EB7               	goto	u211
   537  06B6  2EB8               	goto	u210
   538  06B7                     u211:
   539  06B7  2EB4               	goto	l71
   540  06B8                     u210:
   541  06B8                     l73:
   542                           
   543                           ;main_master.c: 123:   SSPIF = 0;
   544  06B8  118C               	bcf	12,3	;volatile
   545  06B9                     l74:	
   546                           ;main_master.c: 124:   return ACKSTAT;;	Return value of _I2C_Master_Write is never used
   547                           
   548  06B9  0008               	return
   549  06BA                     __end_of_I2C_Master_Write:
   550                           
   551                           	psect	text3
   552  0694                     __ptext3:	
   553 ;; *************** function _I2C_Master_Stop *****************
   554 ;; Defined at:
   555 ;;		line 97 in file "main_master.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0
   572 ;;      Totals:         0       0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 1
   576 ;; This function calls:
   577 ;;		_I2C_Master_Wait
   578 ;; This function is called by:
   579 ;;		_write_data_display_led
   580 ;;		_read_button_display_led
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           
   585                           ;psect for function _I2C_Master_Stop
   586  0694                     _I2C_Master_Stop:
   587  0694                     l838:	
   588                           ;incstack = 0
   589                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
   590                           
   591                           
   592                           ;main_master.c: 99:   I2C_Master_Wait();
   593  0694  120A  118A  269D  120A  118A  	fcall	_I2C_Master_Wait
   594  0699                     l840:
   595                           
   596                           ;main_master.c: 100:   PEN = 1;
   597  0699  1683               	bsf	3,5	;RP0=1, select bank1
   598  069A  1303               	bcf	3,6	;RP1=0, select bank1
   599  069B  1511               	bsf	17,2	;volatile
   600  069C                     l62:
   601  069C  0008               	return
   602  069D                     __end_of_I2C_Master_Stop:
   603                           
   604                           	psect	text4
   605  068B                     __ptext4:	
   606 ;; *************** function _I2C_Master_Start *****************
   607 ;; Defined at:
   608 ;;		line 83 in file "main_master.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 1
   629 ;; This function calls:
   630 ;;		_I2C_Master_Wait
   631 ;; This function is called by:
   632 ;;		_write_data_display_led
   633 ;;		_read_button_display_led
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _I2C_Master_Start
   639  068B                     _I2C_Master_Start:
   640  068B                     l834:	
   641                           ;incstack = 0
   642                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
   643                           
   644                           
   645                           ;main_master.c: 85:   I2C_Master_Wait();
   646  068B  120A  118A  269D  120A  118A  	fcall	_I2C_Master_Wait
   647  0690                     l836:
   648                           
   649                           ;main_master.c: 86:   SEN = 1;
   650  0690  1683               	bsf	3,5	;RP0=1, select bank1
   651  0691  1303               	bcf	3,6	;RP1=0, select bank1
   652  0692  1411               	bsf	17,0	;volatile
   653  0693                     l56:
   654  0693  0008               	return
   655  0694                     __end_of_I2C_Master_Start:
   656                           
   657                           	psect	text5
   658  069D                     __ptext5:	
   659 ;; *************** function _I2C_Master_Wait *****************
   660 ;; Defined at:
   661 ;;		line 77 in file "main_master.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_I2C_Master_Start
   685 ;;		_I2C_Master_Stop
   686 ;;		_I2C_Master_Write
   687 ;;		_I2C_Master_RepeatedStart
   688 ;;		_I2C_Master_ACK
   689 ;;		_I2C_Master_NACK
   690 ;;		_I2C_Master_Read
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _I2C_Master_Wait
   696  069D                     _I2C_Master_Wait:
   697  069D                     l830:	
   698                           ;incstack = 0
   699                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
   700                           
   701  069D                     l50:	
   702                           ;main_master.c: 79:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   703                           
   704  069D  1683               	bsf	3,5	;RP0=1, select bank1
   705  069E  1303               	bcf	3,6	;RP1=0, select bank1
   706  069F  1914               	btfsc	20,2	;volatile
   707  06A0  2EA2               	goto	u191
   708  06A1  2EA3               	goto	u190
   709  06A2                     u191:
   710  06A2  2E9D               	goto	l50
   711  06A3                     u190:
   712  06A3                     l832:
   713  06A3  0811               	movf	17,w	;volatile
   714  06A4  391F               	andlw	31
   715  06A5  1D03               	btfss	3,2
   716  06A6  2EA8               	goto	u201
   717  06A7  2EA9               	goto	u200
   718  06A8                     u201:
   719  06A8  2E9D               	goto	l50
   720  06A9                     u200:
   721  06A9                     l53:
   722  06A9  0008               	return
   723  06AA                     __end_of_I2C_Master_Wait:
   724                           
   725                           	psect	text6
   726  0723                     __ptext6:	
   727 ;; *************** function _I2C_Master_Init *****************
   728 ;; Defined at:
   729 ;;		line 66 in file "main_master.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  c               1    wreg     unsigned char 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  c               1    9[BANK0 ] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       1       0       0       0
   745 ;;      Temps:          0       2       0       0       0
   746 ;;      Totals:         0       3       0       0       0
   747 ;;Total ram usage:        3 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 1
   750 ;; This function calls:
   751 ;;		___aldiv
   752 ;;		___wmul
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _I2C_Master_Init
   760  0723                     _I2C_Master_Init:
   761                           
   762                           ;incstack = 0
   763                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   764                           ;I2C_Master_Init@c stored from wreg
   765  0723  1283               	bcf	3,5	;RP0=0, select bank0
   766  0724  1303               	bcf	3,6	;RP1=0, select bank0
   767  0725  00A9               	movwf	I2C_Master_Init@c
   768  0726                     l900:
   769                           
   770                           ;main_master.c: 66: void I2C_Master_Init(unsigned char c);main_master.c: 67: {;main_mast
      +                          er.c: 68:   SSPCON = 0b00101000;
   771  0726  3028               	movlw	40
   772  0727  0094               	movwf	20	;volatile
   773  0728                     l902:
   774                           
   775                           ;main_master.c: 69:   SSPCON2 = 0;
   776  0728  1683               	bsf	3,5	;RP0=1, select bank1
   777  0729  1303               	bcf	3,6	;RP1=0, select bank1
   778  072A  0191               	clrf	17	;volatile
   779  072B                     l904:
   780                           
   781                           ;main_master.c: 70:   SSPADD = (unsigned char)(8000000/(4000*c))-1;
   782  072B  30A0               	movlw	160
   783  072C  00F2               	movwf	___wmul@multiplicand
   784  072D  300F               	movlw	15
   785  072E  00F3               	movwf	___wmul@multiplicand+1
   786  072F  1283               	bcf	3,5	;RP0=0, select bank0
   787  0730  1303               	bcf	3,6	;RP1=0, select bank0
   788  0731  0829               	movf	I2C_Master_Init@c,w
   789  0732  00A7               	movwf	??_I2C_Master_Init
   790  0733  01A8               	clrf	??_I2C_Master_Init+1
   791  0734  0827               	movf	??_I2C_Master_Init,w
   792  0735  00F0               	movwf	___wmul@multiplier
   793  0736  0828               	movf	??_I2C_Master_Init+1,w
   794  0737  00F1               	movwf	___wmul@multiplier+1
   795  0738  120A  118A  26D2  120A  118A  	fcall	___wmul
   796  073D  0870               	movf	?___wmul,w
   797  073E  00F6               	movwf	___aldiv@divisor
   798  073F  0871               	movf	?___wmul+1,w
   799  0740  00F7               	movwf	___aldiv@divisor+1
   800  0741  3000               	movlw	0
   801  0742  1BF7               	btfsc	___aldiv@divisor+1,7
   802  0743  30FF               	movlw	255
   803  0744  00F8               	movwf	___aldiv@divisor+2
   804  0745  00F9               	movwf	___aldiv@divisor+3
   805  0746  3000               	movlw	0
   806  0747  00FD               	movwf	___aldiv@dividend+3
   807  0748  307A               	movlw	122
   808  0749  00FC               	movwf	___aldiv@dividend+2
   809  074A  3012               	movlw	18
   810  074B  00FB               	movwf	___aldiv@dividend+1
   811  074C  3000               	movlw	0
   812  074D  00FA               	movwf	___aldiv@dividend
   813  074E  120A  118A  275C  120A  118A  	fcall	___aldiv
   814  0753  0876               	movf	?___aldiv,w
   815  0754  3EFF               	addlw	255
   816  0755  1683               	bsf	3,5	;RP0=1, select bank1
   817  0756  1303               	bcf	3,6	;RP1=0, select bank1
   818  0757  0093               	movwf	19	;volatile
   819  0758                     l906:
   820                           
   821                           ;main_master.c: 71:   SSPSTAT = 0;
   822  0758  0194               	clrf	20	;volatile
   823  0759                     l908:
   824                           
   825                           ;main_master.c: 72:   TRISC3 = 1;
   826  0759  1587               	bsf	7,3	;volatile
   827  075A                     l910:
   828                           
   829                           ;main_master.c: 73:   TRISC4 = 1;
   830  075A  1607               	bsf	7,4	;volatile
   831  075B                     l47:
   832  075B  0008               	return
   833  075C                     __end_of_I2C_Master_Init:
   834                           
   835                           	psect	text7
   836  06D2                     __ptext7:	
   837 ;; *************** function ___wmul *****************
   838 ;; Defined at:
   839 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  multiplier      2    0[COMMON] unsigned int 
   842 ;;  multiplicand    2    2[COMMON] unsigned int 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  product         2    4[COMMON] unsigned int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2    0[COMMON] unsigned int 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         4       0       0       0       0
   855 ;;      Locals:         2       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0
   857 ;;      Totals:         6       0       0       0       0
   858 ;;Total ram usage:        6 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_I2C_Master_Init
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function ___wmul
   869  06D2                     ___wmul:
   870  06D2                     l846:	
   871                           ;incstack = 0
   872                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   873                           
   874  06D2  01F4               	clrf	___wmul@product
   875  06D3  01F5               	clrf	___wmul@product+1
   876  06D4                     l848:
   877  06D4  1C70               	btfss	___wmul@multiplier,0
   878  06D5  2ED7               	goto	u221
   879  06D6  2ED8               	goto	u220
   880  06D7                     u221:
   881  06D7  2EDE               	goto	l182
   882  06D8                     u220:
   883  06D8                     l850:
   884  06D8  0872               	movf	___wmul@multiplicand,w
   885  06D9  07F4               	addwf	___wmul@product,f
   886  06DA  1803               	skipnc
   887  06DB  0AF5               	incf	___wmul@product+1,f
   888  06DC  0873               	movf	___wmul@multiplicand+1,w
   889  06DD  07F5               	addwf	___wmul@product+1,f
   890  06DE                     l182:
   891  06DE  3001               	movlw	1
   892  06DF                     u235:
   893  06DF  1003               	clrc
   894  06E0  0DF2               	rlf	___wmul@multiplicand,f
   895  06E1  0DF3               	rlf	___wmul@multiplicand+1,f
   896  06E2  3EFF               	addlw	-1
   897  06E3  1D03               	skipz
   898  06E4  2EDF               	goto	u235
   899  06E5                     l852:
   900  06E5  3001               	movlw	1
   901  06E6                     u245:
   902  06E6  1003               	clrc
   903  06E7  0CF1               	rrf	___wmul@multiplier+1,f
   904  06E8  0CF0               	rrf	___wmul@multiplier,f
   905  06E9  3EFF               	addlw	-1
   906  06EA  1D03               	skipz
   907  06EB  2EE6               	goto	u245
   908  06EC                     l854:
   909  06EC  0870               	movf	___wmul@multiplier,w
   910  06ED  0471               	iorwf	___wmul@multiplier+1,w
   911  06EE  1D03               	btfss	3,2
   912  06EF  2EF1               	goto	u251
   913  06F0  2EF2               	goto	u250
   914  06F1                     u251:
   915  06F1  2ED4               	goto	l848
   916  06F2                     u250:
   917  06F2                     l856:
   918  06F2  0875               	movf	___wmul@product+1,w
   919  06F3  00F1               	movwf	?___wmul+1
   920  06F4  0874               	movf	___wmul@product,w
   921  06F5  00F0               	movwf	?___wmul
   922  06F6                     l184:
   923  06F6  0008               	return
   924  06F7                     __end_of___wmul:
   925                           
   926                           	psect	text8
   927  075C                     __ptext8:	
   928 ;; *************** function ___aldiv *****************
   929 ;; Defined at:
   930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  divisor         4    6[COMMON] long 
   933 ;;  dividend        4   10[COMMON] long 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  quotient        4    3[BANK0 ] long 
   936 ;;  sign            1    2[BANK0 ] unsigned char 
   937 ;;  counter         1    1[BANK0 ] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  4    6[COMMON] long 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         8       0       0       0       0
   948 ;;      Locals:         0       6       0       0       0
   949 ;;      Temps:          0       1       0       0       0
   950 ;;      Totals:         8       7       0       0       0
   951 ;;Total ram usage:       15 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_I2C_Master_Init
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function ___aldiv
   962  075C                     ___aldiv:
   963  075C                     l860:	
   964                           ;incstack = 0
   965                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   966                           
   967  075C  1283               	bcf	3,5	;RP0=0, select bank0
   968  075D  1303               	bcf	3,6	;RP1=0, select bank0
   969  075E  01A2               	clrf	___aldiv@sign
   970  075F                     l862:
   971  075F  1FF9               	btfss	___aldiv@divisor+3,7
   972  0760  2F62               	goto	u261
   973  0761  2F63               	goto	u260
   974  0762                     u261:
   975  0762  2F70               	goto	l247
   976  0763                     u260:
   977  0763                     l864:
   978  0763  09F6               	comf	___aldiv@divisor,f
   979  0764  09F7               	comf	___aldiv@divisor+1,f
   980  0765  09F8               	comf	___aldiv@divisor+2,f
   981  0766  09F9               	comf	___aldiv@divisor+3,f
   982  0767  0AF6               	incf	___aldiv@divisor,f
   983  0768  1903               	skipnz
   984  0769  0AF7               	incf	___aldiv@divisor+1,f
   985  076A  1903               	skipnz
   986  076B  0AF8               	incf	___aldiv@divisor+2,f
   987  076C  1903               	skipnz
   988  076D  0AF9               	incf	___aldiv@divisor+3,f
   989  076E  01A2               	clrf	___aldiv@sign
   990  076F  0AA2               	incf	___aldiv@sign,f
   991  0770                     l247:
   992  0770  1FFD               	btfss	___aldiv@dividend+3,7
   993  0771  2F73               	goto	u271
   994  0772  2F74               	goto	u270
   995  0773                     u271:
   996  0773  2F83               	goto	l870
   997  0774                     u270:
   998  0774                     l866:
   999  0774  09FA               	comf	___aldiv@dividend,f
  1000  0775  09FB               	comf	___aldiv@dividend+1,f
  1001  0776  09FC               	comf	___aldiv@dividend+2,f
  1002  0777  09FD               	comf	___aldiv@dividend+3,f
  1003  0778  0AFA               	incf	___aldiv@dividend,f
  1004  0779  1903               	skipnz
  1005  077A  0AFB               	incf	___aldiv@dividend+1,f
  1006  077B  1903               	skipnz
  1007  077C  0AFC               	incf	___aldiv@dividend+2,f
  1008  077D  1903               	skipnz
  1009  077E  0AFD               	incf	___aldiv@dividend+3,f
  1010  077F                     l868:
  1011  077F  3001               	movlw	1
  1012  0780  00A0               	movwf	??___aldiv
  1013  0781  0820               	movf	??___aldiv,w
  1014  0782  06A2               	xorwf	___aldiv@sign,f
  1015  0783                     l870:
  1016  0783  3000               	movlw	0
  1017  0784  00A6               	movwf	___aldiv@quotient+3
  1018  0785  3000               	movlw	0
  1019  0786  00A5               	movwf	___aldiv@quotient+2
  1020  0787  3000               	movlw	0
  1021  0788  00A4               	movwf	___aldiv@quotient+1
  1022  0789  3000               	movlw	0
  1023  078A  00A3               	movwf	___aldiv@quotient
  1024  078B                     l872:
  1025  078B  0879               	movf	___aldiv@divisor+3,w
  1026  078C  0478               	iorwf	___aldiv@divisor+2,w
  1027  078D  0477               	iorwf	___aldiv@divisor+1,w
  1028  078E  0476               	iorwf	___aldiv@divisor,w
  1029  078F  1903               	skipnz
  1030  0790  2F92               	goto	u281
  1031  0791  2F93               	goto	u280
  1032  0792                     u281:
  1033  0792  2FE0               	goto	l892
  1034  0793                     u280:
  1035  0793                     l874:
  1036  0793  01A1               	clrf	___aldiv@counter
  1037  0794  0AA1               	incf	___aldiv@counter,f
  1038  0795  2FA3               	goto	l878
  1039  0796                     l876:
  1040  0796  3001               	movlw	1
  1041  0797  00A0               	movwf	??___aldiv
  1042  0798                     u295:
  1043  0798  1003               	clrc
  1044  0799  0DF6               	rlf	___aldiv@divisor,f
  1045  079A  0DF7               	rlf	___aldiv@divisor+1,f
  1046  079B  0DF8               	rlf	___aldiv@divisor+2,f
  1047  079C  0DF9               	rlf	___aldiv@divisor+3,f
  1048  079D  0BA0               	decfsz	??___aldiv,f
  1049  079E  2F98               	goto	u295
  1050  079F  3001               	movlw	1
  1051  07A0  00A0               	movwf	??___aldiv
  1052  07A1  0820               	movf	??___aldiv,w
  1053  07A2  07A1               	addwf	___aldiv@counter,f
  1054  07A3                     l878:
  1055  07A3  1FF9               	btfss	___aldiv@divisor+3,7
  1056  07A4  2FA6               	goto	u301
  1057  07A5  2FA7               	goto	u300
  1058  07A6                     u301:
  1059  07A6  2F96               	goto	l876
  1060  07A7                     u300:
  1061  07A7                     l880:
  1062  07A7  3001               	movlw	1
  1063  07A8  00A0               	movwf	??___aldiv
  1064  07A9                     u315:
  1065  07A9  1003               	clrc
  1066  07AA  0DA3               	rlf	___aldiv@quotient,f
  1067  07AB  0DA4               	rlf	___aldiv@quotient+1,f
  1068  07AC  0DA5               	rlf	___aldiv@quotient+2,f
  1069  07AD  0DA6               	rlf	___aldiv@quotient+3,f
  1070  07AE  0BA0               	decfsz	??___aldiv,f
  1071  07AF  2FA9               	goto	u315
  1072  07B0                     l882:
  1073  07B0  0879               	movf	___aldiv@divisor+3,w
  1074  07B1  027D               	subwf	___aldiv@dividend+3,w
  1075  07B2  1D03               	skipz
  1076  07B3  2FBE               	goto	u325
  1077  07B4  0878               	movf	___aldiv@divisor+2,w
  1078  07B5  027C               	subwf	___aldiv@dividend+2,w
  1079  07B6  1D03               	skipz
  1080  07B7  2FBE               	goto	u325
  1081  07B8  0877               	movf	___aldiv@divisor+1,w
  1082  07B9  027B               	subwf	___aldiv@dividend+1,w
  1083  07BA  1D03               	skipz
  1084  07BB  2FBE               	goto	u325
  1085  07BC  0876               	movf	___aldiv@divisor,w
  1086  07BD  027A               	subwf	___aldiv@dividend,w
  1087  07BE                     u325:
  1088  07BE  1C03               	skipc
  1089  07BF  2FC1               	goto	u321
  1090  07C0  2FC2               	goto	u320
  1091  07C1                     u321:
  1092  07C1  2FD1               	goto	l888
  1093  07C2                     u320:
  1094  07C2                     l884:
  1095  07C2  0876               	movf	___aldiv@divisor,w
  1096  07C3  02FA               	subwf	___aldiv@dividend,f
  1097  07C4  0877               	movf	___aldiv@divisor+1,w
  1098  07C5  1C03               	skipc
  1099  07C6  0F77               	incfsz	___aldiv@divisor+1,w
  1100  07C7  02FB               	subwf	___aldiv@dividend+1,f
  1101  07C8  0878               	movf	___aldiv@divisor+2,w
  1102  07C9  1C03               	skipc
  1103  07CA  0F78               	incfsz	___aldiv@divisor+2,w
  1104  07CB  02FC               	subwf	___aldiv@dividend+2,f
  1105  07CC  0879               	movf	___aldiv@divisor+3,w
  1106  07CD  1C03               	skipc
  1107  07CE  0F79               	incfsz	___aldiv@divisor+3,w
  1108  07CF  02FD               	subwf	___aldiv@dividend+3,f
  1109  07D0                     l886:
  1110  07D0  1423               	bsf	___aldiv@quotient,0
  1111  07D1                     l888:
  1112  07D1  3001               	movlw	1
  1113  07D2                     u335:
  1114  07D2  1003               	clrc
  1115  07D3  0CF9               	rrf	___aldiv@divisor+3,f
  1116  07D4  0CF8               	rrf	___aldiv@divisor+2,f
  1117  07D5  0CF7               	rrf	___aldiv@divisor+1,f
  1118  07D6  0CF6               	rrf	___aldiv@divisor,f
  1119  07D7  3EFF               	addlw	-1
  1120  07D8  1D03               	skipz
  1121  07D9  2FD2               	goto	u335
  1122  07DA                     l890:
  1123  07DA  3001               	movlw	1
  1124  07DB  02A1               	subwf	___aldiv@counter,f
  1125  07DC  1D03               	btfss	3,2
  1126  07DD  2FDF               	goto	u341
  1127  07DE  2FE0               	goto	u340
  1128  07DF                     u341:
  1129  07DF  2FA7               	goto	l880
  1130  07E0                     u340:
  1131  07E0                     l892:
  1132  07E0  0822               	movf	___aldiv@sign,w
  1133  07E1  1903               	btfsc	3,2
  1134  07E2  2FE4               	goto	u351
  1135  07E3  2FE5               	goto	u350
  1136  07E4                     u351:
  1137  07E4  2FF0               	goto	l896
  1138  07E5                     u350:
  1139  07E5                     l894:
  1140  07E5  09A3               	comf	___aldiv@quotient,f
  1141  07E6  09A4               	comf	___aldiv@quotient+1,f
  1142  07E7  09A5               	comf	___aldiv@quotient+2,f
  1143  07E8  09A6               	comf	___aldiv@quotient+3,f
  1144  07E9  0AA3               	incf	___aldiv@quotient,f
  1145  07EA  1903               	skipnz
  1146  07EB  0AA4               	incf	___aldiv@quotient+1,f
  1147  07EC  1903               	skipnz
  1148  07ED  0AA5               	incf	___aldiv@quotient+2,f
  1149  07EE  1903               	skipnz
  1150  07EF  0AA6               	incf	___aldiv@quotient+3,f
  1151  07F0                     l896:
  1152  07F0  0826               	movf	___aldiv@quotient+3,w
  1153  07F1  00F9               	movwf	?___aldiv+3
  1154  07F2  0825               	movf	___aldiv@quotient+2,w
  1155  07F3  00F8               	movwf	?___aldiv+2
  1156  07F4  0824               	movf	___aldiv@quotient+1,w
  1157  07F5  00F7               	movwf	?___aldiv+1
  1158  07F6  0823               	movf	___aldiv@quotient,w
  1159  07F7  00F6               	movwf	?___aldiv
  1160  07F8                     l257:
  1161  07F8  0008               	return
  1162  07F9                     __end_of___aldiv:
  1163  007E                     btemp	set	126	;btemp
  1164  007E                     wtemp0	set	126
  1165                           
  1166                           	psect	config
  1167                           
  1168                           ;Config register CONFIG @ 0x2007
  1169                           ;	Oscillator Selection bits
  1170                           ;	FOSC = XT, XT oscillator
  1171                           ;	Watchdog Timer Enable bit
  1172                           ;	WDTE = OFF, WDT disabled
  1173                           ;	Power-up Timer Enable bit
  1174                           ;	PWRTE = OFF, PWRT disabled
  1175                           ;	Brown-out Reset Enable bit
  1176                           ;	BOREN = OFF, BOR disabled
  1177                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1178                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1179                           ;	Data EEPROM Memory Code Protection bit
  1180                           ;	CPD = OFF, Data EEPROM code protection off
  1181                           ;	Flash Program Memory Write Enable bits
  1182                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1183                           ;	In-Circuit Debugger Mode bit
  1184                           ;	DEBUG = 0x1, unprogrammed default
  1185                           ;	Flash Program Memory Code Protection bit
  1186                           ;	CP = OFF, Code protection off
  1187  2007                     	org	8199
  1188  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _write_data_display_led->_I2C_Master_Write
    _I2C_Master_Init->___aldiv
    ___aldiv->___wmul

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     740
                    _I2C_Master_Init
             _write_data_display_led
 ---------------------------------------------------------------------------------
 (1) _write_data_display_led                               3     3      0      22
                                              1 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      3     3      0     718
                                              7 BANK0      3     3      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              6 COMMON     8     0      8
                                              0 BANK0      7     7      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___aldiv
       ___wmul (ARG)
     ___wmul
   _write_data_display_led
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Feb 13 18:10:31 2022

                             l50 069D                               l53 06A9                               l62 069C  
                             l47 075B                               l71 06B4                               l56 0693  
                             l73 06B8                               l74 06B9                               l96 0722  
            ___wmul@multiplicand 0072                              l182 06DE                              l247 0770  
                            l184 06F6                              l257 07F8                              l900 0726  
                            l910 075A                              l902 0728                              l830 069D  
                            l904 072B                              l832 06A3                              l840 0699  
                            l850 06D8                              l906 0758                              l834 068B  
                            l842 06AB                              l930 070A                              l860 075C  
                            l852 06E5                              l908 0759                              l836 0690  
                            l844 06B0                              l932 0710                              l870 0783  
                            l862 075F                              l854 06EC                              l846 06D2  
                            l838 0694                              l934 0715                              l950 06BF  
                            l880 07A7                              l872 078B                              l864 0763  
                            l856 06F2                              l848 06D4                              l928 06F7  
                            l952 06C0                              l890 07DA                              l882 07B0  
                            l874 0793                              l866 0774                              l954 06C3  
                            l946 06BA                              l884 07C2                              l876 0796  
                            l892 07E0                              l868 077F                              l956 06C9  
                            l948 06BD                              l894 07E5                              l886 07D0  
                            l878 07A3                              l896 07F0                              l888 07D1  
                            u200 06A9                              u201 06A8                              u210 06B8  
                            u211 06B7                              u300 07A7                              u220 06D8  
                            u301 07A6                              u221 06D7                              u320 07C2  
                            u321 07C1                              u250 06F2                              u315 07A9  
                            u251 06F1                              u235 06DF                              u340 07E0  
                            u260 0763                              u341 07DF                              u325 07BE  
                            u261 0762                              u245 06E6                              u350 07E5  
                            u270 0774                              u190 06A3                              u351 07E4  
                            u335 07D2                              u271 0773                              u191 06A2  
                            u280 0793                              _PEN 048A                              u281 0792  
                            u295 0798                              u377 071B                              _SEN 0488  
                           _RCEN 048B                             _RSEN 0489                             _main 06BA  
                           btemp 007E                             start 0000         ??_write_data_display_led 0071  
               ?_I2C_Master_Init 0070                 ?_I2C_Master_Wait 0070                 ?_I2C_Master_Stop 0070  
                __end_of___aldiv 07F9                            ?_main 0070                            _ACKEN 048C  
                          _ACKDT 048D                            _PORTB 0006                            _PORTD 0008  
                          _TRISB 0086                            _TRISD 0088                            _SSPIF 0063  
                          _nRBPU 040F                            status 0003                            wtemp0 007E  
                __initialization 07F9                     __end_of_main 06D2                           ??_main 007E  
              ?_I2C_Master_Start 0070                ?_I2C_Master_Write 0070               ??_I2C_Master_Start 0070  
             ??_I2C_Master_Write 0070                           _SSPADD 0093                           _TRISC3 043B  
                         _TRISC4 043C                           _SSPCON 0014                           _SSPBUF 0013  
__size_of_write_data_display_led 002C                        ??___aldiv 0020                           ___wmul 06D2  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070           _write_data_display_led 06F7  
                     __pbssBANK0 002A                       __pmaintext 06BA                          ?___wmul 0070  
    write_data_display_led@value 002A                          _ACKSTAT 048E                          _SSPCON2 0091  
                        _SSPSTAT 0094                          ___aldiv 075C                  __size_of___wmul 0025  
                        __ptext1 06F7                          __ptext2 06AA                          __ptext3 0694  
                        __ptext4 068B                          __ptext5 069D                          __ptext6 0723  
                        __ptext7 06D2                          __ptext8 075C                 ___aldiv@dividend 007A  
       __size_of_I2C_Master_Init 0039         __size_of_I2C_Master_Wait 000D         __size_of_I2C_Master_Stop 0009  
           end_of_initialization 07FC        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 0010  
               ___aldiv@quotient 0023                 I2C_Master_Init@c 0029                   __end_of___wmul 06F7  
        ?_write_data_display_led 0070              start_initialization 07F9                ??_I2C_Master_Init 0027  
              ??_I2C_Master_Wait 0070                ??_I2C_Master_Stop 0070                         ??___wmul 0074  
 __end_of_write_data_display_led 0723                        ___latbits 0002                    __pcstackBANK0 0020  
               _I2C_Master_Start 068B                 _I2C_Master_Write 06AA                         ?___aldiv 0076  
           I2C_Master_Write@data 0070                  ___aldiv@divisor 0076                  ___aldiv@counter 0021  
                 ___wmul@product 0074                ___wmul@multiplier 0070                 __size_of___aldiv 009D  
                _I2C_Master_Init 0723                  _I2C_Master_Wait 069D                  _I2C_Master_Stop 0694  
                  __size_of_main 0018         __end_of_I2C_Master_Start 0694         __end_of_I2C_Master_Write 06BA  
        __end_of_I2C_Master_Init 075C          __end_of_I2C_Master_Wait 06AA          __end_of_I2C_Master_Stop 069D  
                   ___aldiv@sign 0022  
