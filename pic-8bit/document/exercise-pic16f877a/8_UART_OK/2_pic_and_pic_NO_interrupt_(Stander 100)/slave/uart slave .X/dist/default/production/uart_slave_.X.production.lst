

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 14 05:37:01 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0088                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305                           
   306                           	psect	idataBANK0
   307  024F                     __pidataBANK0:
   308                           
   309                           ;initializer for _w_data
   310  024F  3445               	retlw	69
   311  0250  3446               	retlw	70
   312  0251  3447               	retlw	71
   313  0252  3448               	retlw	72
   314  0253  3449               	retlw	73
   315  001A                     _RCREG	set	26
   316  0019                     _TXREG	set	25
   317  0005                     _PORTAbits	set	5
   318  00C1                     _OERR	set	193
   319  0065                     _RCIF	set	101
   320  0064                     _TXIF	set	100
   321  00C6                     _RX9	set	198
   322  00C4                     _CREN	set	196
   323  00C7                     _SPEN	set	199
   324  0043                     _RD3	set	67
   325  0042                     _RD2	set	66
   326  0047                     _RD7	set	71
   327  0046                     _RD6	set	70
   328  0045                     _RD5	set	69
   329  0044                     _RD4	set	68
   330  0030                     _RB0	set	48
   331  0099                     _SPBRG	set	153
   332  0088                     _TRISD	set	136
   333  0085                     _TRISAbits	set	133
   334  009F                     _ADCON1	set	159
   335  04C1                     _TRMT	set	1217
   336  04C6                     _TX9	set	1222
   337  04C5                     _TXEN	set	1221
   338  043E                     _TRISC6	set	1086
   339  043F                     _TRISC7	set	1087
   340  04C4                     _SYNC	set	1220
   341  04C2                     _BRGH	set	1218
   342  0443                     _TRISD3	set	1091
   343  0442                     _TRISD2	set	1090
   344  0430                     _TRISB0	set	1072
   345                           
   346                           	psect	strings
   347  0003                     __pstrings:
   348  0003                     stringtab:
   349  0003                     __stringtab:
   350  0003                     stringcode:	
   351                           ;	String table - string pointers are 1 byte each
   352                           
   353  0003                     stringdir:
   354  0003  3000               	movlw	high stringdir
   355  0004  008A               	movwf	10
   356  0005  0804               	movf	4,w
   357  0006  0A84               	incf	4,f
   358  0007  0782               	addwf	2,f
   359  0008                     __stringbase:
   360  0008  3400               	retlw	0
   361  0009                     __end_of__stringtab:
   362  0009                     STR_1:
   363  0009  344C               	retlw	76	;'L'
   364  000A  3443               	retlw	67	;'C'
   365  000B  3444               	retlw	68	;'D'
   366  000C  345F               	retlw	95	;'_'
   367  000D  3455               	retlw	85	;'U'
   368  000E  3441               	retlw	65	;'A'
   369  000F  3452               	retlw	82	;'R'
   370  0010  3454               	retlw	84	;'T'
   371  0011  3400               	retlw	0
   372  0012                     STR_3:
   373  0012  3420               	retlw	32	;' '
   374  0013  3400               	retlw	0
   375  0014                     STR_4:
   376  0014  3452               	retlw	82	;'R'
   377  0015  3400               	retlw	0
   378  0012                     
   379                           	psect	cinit
   380  07D2                     start_initialization:	
   381                           ; #config settings
   382                           
   383  07D2                     __initialization:
   384                           
   385                           ; Initialize objects allocated to BANK0
   386  07D2  120A  118A  224F  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   387  07D7  00CE               	movwf	__pdataBANK0& (0+127)
   388  07D8  120A  118A  2250  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   389  07DD  00CF               	movwf	(__pdataBANK0+1)& (0+127)
   390  07DE  120A  118A  2251  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   391  07E3  00D0               	movwf	(__pdataBANK0+2)& (0+127)
   392  07E4  120A  118A  2252  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   393  07E9  00D1               	movwf	(__pdataBANK0+3)& (0+127)
   394  07EA  120A  118A  2253  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   395  07EF  00D2               	movwf	(__pdataBANK0+4)& (0+127)
   396                           
   397                           ; Clear objects allocated to BANK0
   398  07F0  01C2               	clrf	__pbssBANK0& (0+127)
   399  07F1  01C3               	clrf	(__pbssBANK0+1)& (0+127)
   400  07F2  01C4               	clrf	(__pbssBANK0+2)& (0+127)
   401  07F3  01C5               	clrf	(__pbssBANK0+3)& (0+127)
   402  07F4  01C6               	clrf	(__pbssBANK0+4)& (0+127)
   403  07F5  01C7               	clrf	(__pbssBANK0+5)& (0+127)
   404  07F6  01C8               	clrf	(__pbssBANK0+6)& (0+127)
   405  07F7  01C9               	clrf	(__pbssBANK0+7)& (0+127)
   406  07F8  01CA               	clrf	(__pbssBANK0+8)& (0+127)
   407  07F9  01CB               	clrf	(__pbssBANK0+9)& (0+127)
   408  07FA  01CC               	clrf	(__pbssBANK0+10)& (0+127)
   409  07FB  01CD               	clrf	(__pbssBANK0+11)& (0+127)
   410  07FC                     end_of_initialization:	
   411                           ;End of C runtime variable initialization code
   412                           
   413  07FC                     __end_of__initialization:
   414  07FC  0183               	clrf	3
   415  07FD  120A  118A  2E9E   	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssBANK0
   418  0042                     __pbssBANK0:
   419  0042                     _r_data:
   420  0042                     	ds	10
   421  004C                     _a:
   422  004C                     	ds	2
   423                           
   424                           	psect	dataBANK0
   425  004E                     __pdataBANK0:
   426  004E                     _w_data:
   427  004E                     	ds	5
   428                           
   429                           	psect	cstackCOMMON
   430  0070                     __pcstackCOMMON:
   431  0070                     ?_LCD_Init:
   432  0070                     ?_LCD_Write_String:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_LCD_Clear:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_UART_Write_Char:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_UART_Write_Char:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_UART_Data_Ready:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_UART_Data_Ready:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_UART_Read_Char:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ??_UART_Read_Char:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_main:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_LCD_DATA:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ??_LCD_DATA:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_LCD_CMD:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_LCD_Write_Char:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_strlen:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?___lwdiv:	
   475                           ; 2 bytes @ 0x0
   476                           
   477  0070                     ?___lwmod:	
   478                           ; 2 bytes @ 0x0
   479                           
   480  0070                     ?___lldiv:	
   481                           ; 2 bytes @ 0x0
   482                           
   483  0070                     LCD_DATA@Data:	
   484                           ; 4 bytes @ 0x0
   485                           
   486  0070                     UART_Write_Char@ch:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ___lwdiv@divisor:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ___lwmod@divisor:	
   493                           ; 2 bytes @ 0x0
   494                           
   495  0070                     ___lldiv@divisor:	
   496                           ; 2 bytes @ 0x0
   497                           
   498                           
   499                           ; 4 bytes @ 0x0
   500  0070                     	ds	1
   501  0071                     ??_LCD_CMD:
   502  0071                     ??_LCD_Write_Char:	
   503                           ; 1 bytes @ 0x1
   504                           
   505                           
   506                           ; 1 bytes @ 0x1
   507  0071                     	ds	1
   508  0072                     ??_strlen:
   509  0072                     ___lwdiv@dividend:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  0072                     ___lwmod@dividend:	
   513                           ; 2 bytes @ 0x2
   514                           
   515                           
   516                           ; 2 bytes @ 0x2
   517  0072                     	ds	1
   518  0073                     LCD_CMD@CMD:
   519  0073                     LCD_Write_Char@Low4:	
   520                           ; 1 bytes @ 0x3
   521                           
   522  0073                     strlen@s:	
   523                           ; 1 bytes @ 0x3
   524                           
   525                           
   526                           ; 1 bytes @ 0x3
   527  0073                     	ds	1
   528  0074                     ??_LCD_Init:
   529  0074                     ?_LCD_Set_Cursor:	
   530                           ; 1 bytes @ 0x4
   531                           
   532  0074                     ??_LCD_Clear:	
   533                           ; 1 bytes @ 0x4
   534                           
   535  0074                     ??___lwdiv:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  0074                     ??___lwmod:	
   539                           ; 1 bytes @ 0x4
   540                           
   541  0074                     LCD_Set_Cursor@column:	
   542                           ; 1 bytes @ 0x4
   543                           
   544  0074                     LCD_Write_Char@High4:	
   545                           ; 1 bytes @ 0x4
   546                           
   547  0074                     strlen@cp:	
   548                           ; 1 bytes @ 0x4
   549                           
   550  0074                     ___lldiv@dividend:	
   551                           ; 1 bytes @ 0x4
   552                           
   553                           
   554                           ; 4 bytes @ 0x4
   555  0074                     	ds	1
   556  0075                     ??_LCD_Set_Cursor:
   557  0075                     LCD_Write_Char@Data:	
   558                           ; 1 bytes @ 0x5
   559                           
   560  0075                     ___lwmod@counter:	
   561                           ; 1 bytes @ 0x5
   562                           
   563  0075                     ___lwdiv@quotient:	
   564                           ; 1 bytes @ 0x5
   565                           
   566                           
   567                           ; 2 bytes @ 0x5
   568  0075                     	ds	1
   569  0076                     ??_LCD_Write_String:
   570  0076                     LCD_Write_String@i:	
   571                           ; 1 bytes @ 0x6
   572                           
   573                           
   574                           ; 2 bytes @ 0x6
   575  0076                     	ds	1
   576  0077                     LCD_Set_Cursor@row:
   577  0077                     ___lwdiv@counter:	
   578                           ; 1 bytes @ 0x7
   579                           
   580                           
   581                           ; 1 bytes @ 0x7
   582  0077                     	ds	1
   583  0078                     ?_LCD_Write_Number:
   584  0078                     ??___lldiv:	
   585                           ; 1 bytes @ 0x8
   586                           
   587  0078                     LCD_Set_Cursor@Low4:	
   588                           ; 1 bytes @ 0x8
   589                           
   590  0078                     LCD_Write_String@str:	
   591                           ; 1 bytes @ 0x8
   592                           
   593  0078                     LCD_Write_Number@number:	
   594                           ; 1 bytes @ 0x8
   595                           
   596                           
   597                           ; 2 bytes @ 0x8
   598  0078                     	ds	1
   599  0079                     LCD_Set_Cursor@High4:
   600  0079                     ___lldiv@quotient:	
   601                           ; 1 bytes @ 0x9
   602                           
   603                           
   604                           ; 4 bytes @ 0x9
   605  0079                     	ds	1
   606  007A                     ??_LCD_Write_Number:
   607  007A                     LCD_Set_Cursor@Temp:	
   608                           ; 1 bytes @ 0xA
   609                           
   610                           
   611                           ; 1 bytes @ 0xA
   612  007A                     	ds	3
   613  007D                     ___lldiv@counter:
   614                           
   615                           ; 1 bytes @ 0xD
   616  007D                     	ds	1
   617                           
   618                           	psect	cstackBANK0
   619  0020                     __pcstackBANK0:
   620  0020                     ?_UART_Init:
   621  0020                     UART_Init@uart_baudRate:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0020                     LCD_Write_Number@num:	
   625                           ; 4 bytes @ 0x0
   626                           
   627                           
   628                           ; 20 bytes @ 0x0
   629  0020                     	ds	4
   630  0024                     ??_UART_Init:
   631                           
   632                           ; 1 bytes @ 0x4
   633  0024                     	ds	12
   634  0030                     UART_Init@x:
   635                           
   636                           ; 2 bytes @ 0x10
   637  0030                     	ds	4
   638  0034                     LCD_Write_Number@k:
   639                           
   640                           ; 2 bytes @ 0x14
   641  0034                     	ds	2
   642  0036                     LCD_Write_Number@c:
   643                           
   644                           ; 1 bytes @ 0x16
   645  0036                     	ds	1
   646  0037                     LCD_Write_Number@p:
   647                           
   648                           ; 2 bytes @ 0x17
   649  0037                     	ds	2
   650  0039                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x19
   653  0039                     	ds	3
   654  003C                     main@t:
   655                           
   656                           ; 2 bytes @ 0x1C
   657  003C                     	ds	2
   658  003E                     main@k:
   659                           
   660                           ; 2 bytes @ 0x1E
   661  003E                     	ds	2
   662  0040                     main@k_138:
   663                           
   664                           ; 2 bytes @ 0x20
   665  0040                     	ds	2
   666                           
   667                           	psect	maintext
   668  069E                     __pmaintext:	
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 23 in file "main slave.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  t               2   28[BANK0 ] int 
   679 ;;  k               2   32[BANK0 ] int 
   680 ;;  k               2   30[BANK0 ] int 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : B00/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       6       0       0       0
   692 ;;      Temps:          0       3       0       0       0
   693 ;;      Totals:         0       9       0       0       0
   694 ;;Total ram usage:        9 bytes
   695 ;; Hardware stack levels required when called: 3
   696 ;; This function calls:
   697 ;;		_LCD_Clear
   698 ;;		_LCD_Init
   699 ;;		_LCD_Set_Cursor
   700 ;;		_LCD_Write_Number
   701 ;;		_LCD_Write_String
   702 ;;		_UART_Data_Ready
   703 ;;		_UART_Init
   704 ;;		_UART_Read_Char
   705 ;;		_UART_Write_Char
   706 ;;		_strlen
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function _main
   714  069E                     _main:
   715  069E                     l1484:	
   716                           ;incstack = 0
   717                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   718                           
   719                           
   720                           ;main slave.c: 25:     ADCON1 = 0x07;
   721  069E  3007               	movlw	7
   722  069F  1683               	bsf	3,5	;RP0=1, select bank1
   723  06A0  1303               	bcf	3,6	;RP1=0, select bank1
   724  06A1  009F               	movwf	31	;volatile
   725  06A2                     l1486:
   726                           
   727                           ;main slave.c: 27:     TRISAbits.TRISA0 = 0;
   728  06A2  1005               	bcf	5,0	;volatile
   729  06A3                     l1488:
   730                           
   731                           ;main slave.c: 28:     PORTAbits.RA0 = 1;
   732  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   733  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   734  06A5  1405               	bsf	5,0	;volatile
   735  06A6                     l1490:
   736                           
   737                           ;main slave.c: 30:     TRISB0 =1;
   738  06A6  1683               	bsf	3,5	;RP0=1, select bank1
   739  06A7  1303               	bcf	3,6	;RP1=0, select bank1
   740  06A8  1406               	bsf	6,0	;volatile
   741  06A9                     l1492:
   742                           
   743                           ;main slave.c: 32:     UART_Init(19200);
   744  06A9  3000               	movlw	0
   745  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   746  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   747  06AC  00A3               	movwf	UART_Init@uart_baudRate+3
   748  06AD  3000               	movlw	0
   749  06AE  00A2               	movwf	UART_Init@uart_baudRate+2
   750  06AF  304B               	movlw	75
   751  06B0  00A1               	movwf	UART_Init@uart_baudRate+1
   752  06B1  3000               	movlw	0
   753  06B2  00A0               	movwf	UART_Init@uart_baudRate
   754  06B3  120A  118A  25B8  120A  118A  	fcall	_UART_Init
   755  06B8                     l1494:
   756                           
   757                           ;main slave.c: 34:     LCD_Init();
   758  06B8  120A  118A  2431  120A  118A  	fcall	_LCD_Init
   759  06BD                     l1496:
   760                           
   761                           ;main slave.c: 35:     LCD_Set_Cursor(1,1);
   762  06BD  01F4               	clrf	LCD_Set_Cursor@column
   763  06BE  0AF4               	incf	LCD_Set_Cursor@column,f
   764  06BF  3001               	movlw	1
   765  06C0  120A  118A  2513  120A  118A  	fcall	_LCD_Set_Cursor
   766  06C5                     l1498:
   767                           
   768                           ;main slave.c: 36:     LCD_Write_String("LCD_UART");
   769  06C5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   770  06C6  120A  118A  22D5  120A  118A  	fcall	_LCD_Write_String
   771  06CB                     l1500:
   772                           
   773                           ;main slave.c: 38:     LCD_Clear();
   774  06CB  120A  118A  2264  120A  118A  	fcall	_LCD_Clear
   775  06D0                     l1502:
   776                           
   777                           ;main slave.c: 41:     {;main slave.c: 42:         if(RB0 == 1)
   778  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   779  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   780  06D2  1C06               	btfss	6,0	;volatile
   781  06D3  2ED5               	goto	u1101
   782  06D4  2ED6               	goto	u1100
   783  06D5                     u1101:
   784  06D5  2F0F               	goto	l1514
   785  06D6                     u1100:
   786  06D6                     l45:
   787  06D6  1806               	btfsc	6,0	;volatile
   788  06D7  2ED9               	goto	u1111
   789  06D8  2EDA               	goto	u1110
   790  06D9                     u1111:
   791  06D9  2ED6               	goto	l45
   792  06DA                     u1110:
   793  06DA                     l1506:
   794                           
   795                           ;main slave.c: 45:             for(int t=0; t<=(strlen(w_data)); t++)
   796  06DA  01BC               	clrf	main@t
   797  06DB  01BD               	clrf	main@t+1
   798  06DC  2EFD               	goto	l48
   799  06DD                     l1508:
   800                           
   801                           ;main slave.c: 46:             {;main slave.c: 47:                 UART_Write_Char(w_dat
      +                          a[t]);
   802  06DD  083C               	movf	main@t,w
   803  06DE  3E4E               	addlw	(low (_w_data| 0))& (0+255)
   804  06DF  0084               	movwf	4
   805  06E0  1383               	bcf	3,7	;select IRP bank0
   806  06E1  0800               	movf	0,w
   807  06E2  120A  118A  225A  120A  118A  	fcall	_UART_Write_Char
   808  06E7                     l1510:
   809                           
   810                           ;main slave.c: 48:                 _delay((unsigned long)((150)*(20000000/4000.0)));
   811  06E7  3004               	movlw	4
   812  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   813  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   814  06EA  00BB               	movwf	??_main+2
   815  06EB  30CF               	movlw	207
   816  06EC  00BA               	movwf	??_main+1
   817  06ED  3001               	movlw	1
   818  06EE  00B9               	movwf	??_main
   819  06EF                     u1197:
   820  06EF  0BB9               	decfsz	??_main,f
   821  06F0  2EEF               	goto	u1197
   822  06F1  0BBA               	decfsz	??_main+1,f
   823  06F2  2EEF               	goto	u1197
   824  06F3  0BBB               	decfsz	??_main+2,f
   825  06F4  2EEF               	goto	u1197
   826  06F5                     l1512:
   827                           
   828                           ;main slave.c: 49:             }
   829  06F5  3001               	movlw	1
   830  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   831  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   832  06F8  07BC               	addwf	main@t,f
   833  06F9  1803               	skipnc
   834  06FA  0ABD               	incf	main@t+1,f
   835  06FB  3000               	movlw	0
   836  06FC  07BD               	addwf	main@t+1,f
   837  06FD                     l48:
   838  06FD  304E               	movlw	(low (_w_data| 0))& (0+255)
   839  06FE  120A  118A  2280  120A  118A  	fcall	_strlen
   840  0703  1283               	bcf	3,5	;RP0=0, select bank0
   841  0704  1303               	bcf	3,6	;RP1=0, select bank0
   842  0705  083D               	movf	main@t+1,w
   843  0706  0271               	subwf	?_strlen+1,w
   844  0707  1D03               	skipz
   845  0708  2F0B               	goto	u1125
   846  0709  083C               	movf	main@t,w
   847  070A  0270               	subwf	?_strlen,w
   848  070B                     u1125:
   849  070B  1803               	skipnc
   850  070C  2F0E               	goto	u1121
   851  070D  2F0F               	goto	u1120
   852  070E                     u1121:
   853  070E  2EDD               	goto	l1508
   854  070F                     u1120:
   855  070F                     l1514:
   856                           
   857                           ;main slave.c: 52:         if(UART_Data_Ready())
   858  070F  120A  118A  2254  120A  118A  	fcall	_UART_Data_Ready
   859  0714  3A00               	xorlw	0
   860  0715  1903               	skipnz
   861  0716  2F18               	goto	u1131
   862  0717  2F19               	goto	u1130
   863  0718                     u1131:
   864  0718  2F3E               	goto	l1524
   865  0719                     u1130:
   866  0719                     l1516:
   867                           
   868                           ;main slave.c: 53:         {;main slave.c: 54:             r_data[a++] = UART_Read_Char(
      +                          );
   869  0719  120A  118A  2271  120A  118A  	fcall	_UART_Read_Char
   870  071E  1283               	bcf	3,5	;RP0=0, select bank0
   871  071F  1303               	bcf	3,6	;RP1=0, select bank0
   872  0720  00B9               	movwf	??_main
   873  0721  084C               	movf	_a,w
   874  0722  3E42               	addlw	(low (_r_data| 0))& (0+255)
   875  0723  0084               	movwf	4
   876  0724  0839               	movf	??_main,w
   877  0725  1383               	bcf	3,7	;select IRP bank0
   878  0726  0080               	movwf	0
   879  0727                     l1518:
   880  0727  3001               	movlw	1
   881  0728  07CC               	addwf	_a,f
   882  0729  1803               	skipnc
   883  072A  0ACD               	incf	_a+1,f
   884  072B  3000               	movlw	0
   885  072C  07CD               	addwf	_a+1,f
   886  072D                     l1520:
   887                           
   888                           ;main slave.c: 55:             if(a>5)
   889  072D  084D               	movf	_a+1,w
   890  072E  3A80               	xorlw	128
   891  072F  00FF               	movwf	btemp+1
   892  0730  3080               	movlw	128
   893  0731  027F               	subwf	btemp+1,w
   894  0732  1D03               	skipz
   895  0733  2F36               	goto	u1145
   896  0734  3006               	movlw	6
   897  0735  024C               	subwf	_a,w
   898  0736                     u1145:
   899  0736  1C03               	skipc
   900  0737  2F39               	goto	u1141
   901  0738  2F3A               	goto	u1140
   902  0739                     u1141:
   903  0739  2F3E               	goto	l1524
   904  073A                     u1140:
   905  073A                     l1522:
   906                           
   907                           ;main slave.c: 56:                 a=0;
   908  073A  1283               	bcf	3,5	;RP0=0, select bank0
   909  073B  1303               	bcf	3,6	;RP1=0, select bank0
   910  073C  01CC               	clrf	_a
   911  073D  01CD               	clrf	_a+1
   912  073E                     l1524:
   913                           
   914                           ;main slave.c: 58:         LCD_Set_Cursor(1,1);
   915  073E  01F4               	clrf	LCD_Set_Cursor@column
   916  073F  0AF4               	incf	LCD_Set_Cursor@column,f
   917  0740  3001               	movlw	1
   918  0741  120A  118A  2513  120A  118A  	fcall	_LCD_Set_Cursor
   919  0746                     l1526:
   920                           
   921                           ;main slave.c: 59:         LCD_Write_String("T");
   922  0746  3008               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
   923  0747  120A  118A  22D5  120A  118A  	fcall	_LCD_Write_String
   924  074C                     l1528:
   925                           
   926                           ;main slave.c: 61:         LCD_Set_Cursor(1,2);
   927  074C  3002               	movlw	2
   928  074D  1283               	bcf	3,5	;RP0=0, select bank0
   929  074E  1303               	bcf	3,6	;RP1=0, select bank0
   930  074F  00B9               	movwf	??_main
   931  0750  0839               	movf	??_main,w
   932  0751  00F4               	movwf	LCD_Set_Cursor@column
   933  0752  3001               	movlw	1
   934  0753  120A  118A  2513  120A  118A  	fcall	_LCD_Set_Cursor
   935  0758                     l1530:
   936                           
   937                           ;main slave.c: 63:         for(int k=0; w_data[k] != '\0'; k++)
   938  0758  1283               	bcf	3,5	;RP0=0, select bank0
   939  0759  1303               	bcf	3,6	;RP1=0, select bank0
   940  075A  01BE               	clrf	main@k
   941  075B  01BF               	clrf	main@k+1
   942  075C  2F7A               	goto	l1536
   943  075D                     l1532:
   944                           
   945                           ;main slave.c: 64:         {;main slave.c: 65:             LCD_Write_Number(w_data[k]);
   946  075D  083E               	movf	main@k,w
   947  075E  3E4E               	addlw	(low (_w_data| 0))& (0+255)
   948  075F  0084               	movwf	4
   949  0760  0800               	movf	0,w
   950  0761  00B9               	movwf	??_main
   951  0762  01BA               	clrf	??_main+1
   952  0763  0839               	movf	??_main,w
   953  0764  00F8               	movwf	LCD_Write_Number@number
   954  0765  083A               	movf	??_main+1,w
   955  0766  00F9               	movwf	LCD_Write_Number@number+1
   956  0767  120A  118A  2498  120A  118A  	fcall	_LCD_Write_Number
   957                           
   958                           ;main slave.c: 66:             LCD_Write_String(" ");
   959  076C  300A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   960  076D  120A  118A  22D5  120A  118A  	fcall	_LCD_Write_String
   961  0772                     l1534:
   962                           
   963                           ;main slave.c: 67:         }
   964  0772  3001               	movlw	1
   965  0773  1283               	bcf	3,5	;RP0=0, select bank0
   966  0774  1303               	bcf	3,6	;RP1=0, select bank0
   967  0775  07BE               	addwf	main@k,f
   968  0776  1803               	skipnc
   969  0777  0ABF               	incf	main@k+1,f
   970  0778  3000               	movlw	0
   971  0779  07BF               	addwf	main@k+1,f
   972  077A                     l1536:
   973  077A  083E               	movf	main@k,w
   974  077B  3E4E               	addlw	(low (_w_data| 0))& (0+255)
   975  077C  0084               	movwf	4
   976  077D  1383               	bcf	3,7	;select IRP bank0
   977  077E  0800               	movf	0,w
   978  077F  1D03               	btfss	3,2
   979  0780  2F82               	goto	u1151
   980  0781  2F83               	goto	u1150
   981  0782                     u1151:
   982  0782  2F5D               	goto	l1532
   983  0783                     u1150:
   984  0783                     l1538:
   985                           
   986                           ;main slave.c: 68:          LCD_Set_Cursor(2,1);
   987  0783  01F4               	clrf	LCD_Set_Cursor@column
   988  0784  0AF4               	incf	LCD_Set_Cursor@column,f
   989  0785  3002               	movlw	2
   990  0786  120A  118A  2513  120A  118A  	fcall	_LCD_Set_Cursor
   991  078B                     l1540:
   992                           
   993                           ;main slave.c: 69:         LCD_Write_String("R");
   994  078B  300C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   995  078C  120A  118A  22D5  120A  118A  	fcall	_LCD_Write_String
   996  0791                     l1542:
   997                           
   998                           ;main slave.c: 71:         LCD_Set_Cursor(2,2);
   999  0791  3002               	movlw	2
  1000  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0794  00B9               	movwf	??_main
  1003  0795  0839               	movf	??_main,w
  1004  0796  00F4               	movwf	LCD_Set_Cursor@column
  1005  0797  3002               	movlw	2
  1006  0798  120A  118A  2513  120A  118A  	fcall	_LCD_Set_Cursor
  1007  079D                     l1544:
  1008                           
  1009                           ;main slave.c: 73:             for(int k=0; k<6; k++)
  1010  079D  1283               	bcf	3,5	;RP0=0, select bank0
  1011  079E  1303               	bcf	3,6	;RP1=0, select bank0
  1012  079F  01C0               	clrf	main@k_138
  1013  07A0  01C1               	clrf	main@k_138+1
  1014  07A1                     l1550:
  1015                           
  1016                           ;main slave.c: 74:             {;main slave.c: 75:                 LCD_Write_Number(r_da
      +                          ta[k]);
  1017  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1018  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1019  07A3  0840               	movf	main@k_138,w
  1020  07A4  3E42               	addlw	(low (_r_data| 0))& (0+255)
  1021  07A5  0084               	movwf	4
  1022  07A6  1383               	bcf	3,7	;select IRP bank0
  1023  07A7  0800               	movf	0,w
  1024  07A8  00B9               	movwf	??_main
  1025  07A9  01BA               	clrf	??_main+1
  1026  07AA  0839               	movf	??_main,w
  1027  07AB  00F8               	movwf	LCD_Write_Number@number
  1028  07AC  083A               	movf	??_main+1,w
  1029  07AD  00F9               	movwf	LCD_Write_Number@number+1
  1030  07AE  120A  118A  2498  120A  118A  	fcall	_LCD_Write_Number
  1031                           
  1032                           ;main slave.c: 76:                 LCD_Write_String(" ");
  1033  07B3  300A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1034  07B4  120A  118A  22D5  120A  118A  	fcall	_LCD_Write_String
  1035  07B9                     l1552:
  1036                           
  1037                           ;main slave.c: 77:             }
  1038  07B9  3001               	movlw	1
  1039  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1040  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1041  07BC  07C0               	addwf	main@k_138,f
  1042  07BD  1803               	skipnc
  1043  07BE  0AC1               	incf	main@k_138+1,f
  1044  07BF  3000               	movlw	0
  1045  07C0  07C1               	addwf	main@k_138+1,f
  1046  07C1                     l1554:
  1047  07C1  0841               	movf	main@k_138+1,w
  1048  07C2  3A80               	xorlw	128
  1049  07C3  00FF               	movwf	btemp+1
  1050  07C4  3080               	movlw	128
  1051  07C5  027F               	subwf	btemp+1,w
  1052  07C6  1D03               	skipz
  1053  07C7  2FCA               	goto	u1165
  1054  07C8  3006               	movlw	6
  1055  07C9  0240               	subwf	main@k_138,w
  1056  07CA                     u1165:
  1057  07CA  1C03               	skipc
  1058  07CB  2FCD               	goto	u1161
  1059  07CC  2FCE               	goto	u1160
  1060  07CD                     u1161:
  1061  07CD  2FA1               	goto	l1550
  1062  07CE                     u1160:
  1063  07CE  2ED0               	goto	l1502
  1064  07CF  120A  118A  2800   	ljmp	start
  1065  07D2                     __end_of_main:
  1066                           
  1067                           	psect	text1
  1068  0280                     __ptext1:	
  1069 ;; *************** function _strlen *****************
  1070 ;; Defined at:
  1071 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  s               1    wreg     PTR const unsigned char 
  1074 ;;		 -> w_data(5), 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  s               1    3[COMMON] PTR const unsigned char 
  1077 ;;		 -> w_data(5), 
  1078 ;;  cp              1    4[COMMON] PTR const unsigned char 
  1079 ;;		 -> w_data(5), 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2    0[COMMON] unsigned int 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         2       0       0       0       0
  1090 ;;      Locals:         2       0       0       0       0
  1091 ;;      Temps:          1       0       0       0       0
  1092 ;;      Totals:         5       0       0       0       0
  1093 ;;Total ram usage:        5 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _strlen
  1104  0280                     _strlen:
  1105                           
  1106                           ;incstack = 0
  1107                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1108                           ;strlen@s stored from wreg
  1109  0280  00F3               	movwf	strlen@s
  1110  0281                     l1428:
  1111  0281  0873               	movf	strlen@s,w
  1112  0282  00F2               	movwf	??_strlen
  1113  0283  0872               	movf	??_strlen,w
  1114  0284  00F4               	movwf	strlen@cp
  1115  0285  2A8A               	goto	l1432
  1116  0286                     l1430:
  1117  0286  3001               	movlw	1
  1118  0287  00F2               	movwf	??_strlen
  1119  0288  0872               	movf	??_strlen,w
  1120  0289  07F4               	addwf	strlen@cp,f
  1121  028A                     l1432:
  1122  028A  0874               	movf	strlen@cp,w
  1123  028B  0084               	movwf	4
  1124  028C  1383               	bcf	3,7	;select IRP bank0
  1125  028D  0800               	movf	0,w
  1126  028E  1D03               	btfss	3,2
  1127  028F  2A91               	goto	u1031
  1128  0290  2A92               	goto	u1030
  1129  0291                     u1031:
  1130  0291  2A86               	goto	l1430
  1131  0292                     u1030:
  1132  0292                     l1434:
  1133  0292  0873               	movf	strlen@s,w
  1134  0293  0274               	subwf	strlen@cp,w
  1135  0294  00F0               	movwf	?_strlen
  1136  0295  01F1               	clrf	?_strlen+1
  1137  0296  1BF0               	btfsc	?_strlen,7
  1138  0297  03F1               	decf	?_strlen+1,f
  1139  0298                     l748:
  1140  0298  0008               	return
  1141  0299                     __end_of_strlen:
  1142                           
  1143                           	psect	text2
  1144  025A                     __ptext2:	
  1145 ;; *************** function _UART_Write_Char *****************
  1146 ;; Defined at:
  1147 ;;		line 77 in file "uart_pic_pic.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  ch              1    wreg     unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  ch              1    0[COMMON] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         1       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0
  1164 ;;      Totals:         1       0       0       0       0
  1165 ;;Total ram usage:        1 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;;		_UART_Write_String
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _UART_Write_Char
  1177  025A                     _UART_Write_Char:
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _UART_Write_Char: [wreg]
  1181                           ;UART_Write_Char@ch stored from wreg
  1182  025A  00F0               	movwf	UART_Write_Char@ch
  1183  025B                     l1424:
  1184  025B                     l183:	
  1185                           ;uart_pic_pic.c: 77: void UART_Write_Char(char ch);uart_pic_pic.c: 78: {;uart_pic_pic.c:
      +                           79:     while(TXIF==0);
  1186                           
  1187  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1188  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1189  025D  1E0C               	btfss	12,4	;volatile
  1190  025E  2A60               	goto	u1021
  1191  025F  2A61               	goto	u1020
  1192  0260                     u1021:
  1193  0260  2A5B               	goto	l183
  1194  0261                     u1020:
  1195  0261                     l1426:
  1196                           
  1197                           ;uart_pic_pic.c: 80:     TXREG=ch;
  1198  0261  0870               	movf	UART_Write_Char@ch,w
  1199  0262  0099               	movwf	25	;volatile
  1200  0263                     l186:
  1201  0263  0008               	return
  1202  0264                     __end_of_UART_Write_Char:
  1203                           
  1204                           	psect	text3
  1205  0271                     __ptext3:	
  1206 ;; *************** function _UART_Read_Char *****************
  1207 ;; Defined at:
  1208 ;;		line 126 in file "uart_pic_pic.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      unsigned char 
  1215 ;; Registers used:
  1216 ;;		wreg
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;;		_UART_Read_String
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _UART_Read_Char
  1238  0271                     _UART_Read_Char:
  1239  0271                     l1442:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _UART_Read_Char: [wreg]
  1242                           
  1243                           
  1244                           ;uart_pic_pic.c: 131:     if(OERR)
  1245  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0273  1C98               	btfss	24,1	;volatile
  1248  0274  2A76               	goto	u1041
  1249  0275  2A77               	goto	u1040
  1250  0276                     u1041:
  1251  0276  2A79               	goto	l199
  1252  0277                     u1040:
  1253  0277                     l1444:
  1254                           
  1255                           ;uart_pic_pic.c: 132:     {;uart_pic_pic.c: 133:         CREN = 0;
  1256  0277  1218               	bcf	24,4	;volatile
  1257                           
  1258                           ;uart_pic_pic.c: 134:         CREN = 1;
  1259  0278  1618               	bsf	24,4	;volatile
  1260  0279                     l199:
  1261  0279  1E8C               	btfss	12,5	;volatile
  1262  027A  2A7C               	goto	u1051
  1263  027B  2A7D               	goto	u1050
  1264  027C                     u1051:
  1265  027C  2A79               	goto	l199
  1266  027D                     u1050:
  1267  027D                     l201:
  1268                           
  1269                           ;uart_pic_pic.c: 138:     RCIF=0;
  1270  027D  128C               	bcf	12,5	;volatile
  1271  027E                     l1446:
  1272                           
  1273                           ;uart_pic_pic.c: 140:     return RCREG;
  1274  027E  081A               	movf	26,w	;volatile
  1275  027F                     l202:
  1276  027F  0008               	return
  1277  0280                     __end_of_UART_Read_Char:
  1278                           
  1279                           	psect	text4
  1280  05B8                     __ptext4:	
  1281 ;; *************** function _UART_Init *****************
  1282 ;; Defined at:
  1283 ;;		line 15 in file "uart_pic_pic.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  uart_baudRat    4    0[BANK0 ] unsigned long 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  x               2   16[BANK0 ] unsigned int 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       4       0       0       0
  1298 ;;      Locals:         0       2       0       0       0
  1299 ;;      Temps:          0      12       0       0       0
  1300 ;;      Totals:         0      18       0       0       0
  1301 ;;Total ram usage:       18 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 1
  1304 ;; This function calls:
  1305 ;;		___lldiv
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           
  1312                           ;psect for function _UART_Init
  1313  05B8                     _UART_Init:
  1314  05B8                     l1308:	
  1315                           ;incstack = 0
  1316                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1317                           
  1318                           
  1319                           ;uart_pic_pic.c: 15: char UART_Init( unsigned long uart_baudRate );uart_pic_pic.c: 16: {
      +                          ;uart_pic_pic.c: 17:     unsigned int x;;uart_pic_pic.c: 19:  x = (20000000 - uart_baudR
      +                          ate*64)/(uart_baudRate*64);
  1320  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1321  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1322  05BA  0820               	movf	UART_Init@uart_baudRate,w
  1323  05BB  00A4               	movwf	??_UART_Init
  1324  05BC  0821               	movf	UART_Init@uart_baudRate+1,w
  1325  05BD  00A5               	movwf	??_UART_Init+1
  1326  05BE  0822               	movf	UART_Init@uart_baudRate+2,w
  1327  05BF  00A6               	movwf	??_UART_Init+2
  1328  05C0  0823               	movf	UART_Init@uart_baudRate+3,w
  1329  05C1  00A7               	movwf	??_UART_Init+3
  1330  05C2  3006               	movlw	6
  1331  05C3                     u855:
  1332  05C3  1003               	clrc
  1333  05C4  0DA4               	rlf	??_UART_Init,f
  1334  05C5  0DA5               	rlf	??_UART_Init+1,f
  1335  05C6  0DA6               	rlf	??_UART_Init+2,f
  1336  05C7  0DA7               	rlf	??_UART_Init+3,f
  1337  05C8                     u850:
  1338  05C8  3EFF               	addlw	-1
  1339  05C9  1D03               	skipz
  1340  05CA  2DC3               	goto	u855
  1341  05CB  0827               	movf	??_UART_Init+3,w
  1342  05CC  00F3               	movwf	___lldiv@divisor+3
  1343  05CD  0826               	movf	??_UART_Init+2,w
  1344  05CE  00F2               	movwf	___lldiv@divisor+2
  1345  05CF  0825               	movf	??_UART_Init+1,w
  1346  05D0  00F1               	movwf	___lldiv@divisor+1
  1347  05D1  0824               	movf	??_UART_Init,w
  1348  05D2  00F0               	movwf	___lldiv@divisor
  1349  05D3  0820               	movf	UART_Init@uart_baudRate,w
  1350  05D4  00A8               	movwf	??_UART_Init+4
  1351  05D5  0821               	movf	UART_Init@uart_baudRate+1,w
  1352  05D6  00A9               	movwf	??_UART_Init+5
  1353  05D7  0822               	movf	UART_Init@uart_baudRate+2,w
  1354  05D8  00AA               	movwf	??_UART_Init+6
  1355  05D9  0823               	movf	UART_Init@uart_baudRate+3,w
  1356  05DA  00AB               	movwf	??_UART_Init+7
  1357  05DB  3006               	movlw	6
  1358  05DC                     u865:
  1359  05DC  1003               	clrc
  1360  05DD  0DA8               	rlf	??_UART_Init+4,f
  1361  05DE  0DA9               	rlf	??_UART_Init+5,f
  1362  05DF  0DAA               	rlf	??_UART_Init+6,f
  1363  05E0  0DAB               	rlf	??_UART_Init+7,f
  1364  05E1                     u860:
  1365  05E1  3EFF               	addlw	-1
  1366  05E2  1D03               	skipz
  1367  05E3  2DDC               	goto	u865
  1368  05E4  3000               	movlw	0
  1369  05E5  00AC               	movwf	??_UART_Init+8
  1370  05E6  302D               	movlw	45
  1371  05E7  00AD               	movwf	??_UART_Init+9
  1372  05E8  3031               	movlw	49
  1373  05E9  00AE               	movwf	??_UART_Init+10
  1374  05EA  3001               	movlw	1
  1375  05EB  00AF               	movwf	??_UART_Init+11
  1376  05EC  0828               	movf	??_UART_Init+4,w
  1377  05ED  02AC               	subwf	??_UART_Init+8,f
  1378  05EE  0829               	movf	??_UART_Init+5,w
  1379  05EF  1C03               	skipc
  1380  05F0  0F29               	incfsz	??_UART_Init+5,w
  1381  05F1  2DF3               	goto	u871
  1382  05F2  2DF4               	goto	u872
  1383  05F3                     u871:
  1384  05F3  02AD               	subwf	??_UART_Init+9,f
  1385  05F4                     u872:
  1386  05F4  082A               	movf	??_UART_Init+6,w
  1387  05F5  1C03               	skipc
  1388  05F6  0F2A               	incfsz	??_UART_Init+6,w
  1389  05F7  2DF9               	goto	u873
  1390  05F8  2DFA               	goto	u874
  1391  05F9                     u873:
  1392  05F9  02AE               	subwf	??_UART_Init+10,f
  1393  05FA                     u874:
  1394  05FA  082B               	movf	??_UART_Init+7,w
  1395  05FB  1C03               	skipc
  1396  05FC  0F2B               	incfsz	??_UART_Init+7,w
  1397  05FD  2DFF               	goto	u875
  1398  05FE  2E00               	goto	u876
  1399  05FF                     u875:
  1400  05FF  02AF               	subwf	??_UART_Init+11,f
  1401  0600                     u876:
  1402  0600  082F               	movf	??_UART_Init+11,w
  1403  0601  00F7               	movwf	___lldiv@dividend+3
  1404  0602  082E               	movf	??_UART_Init+10,w
  1405  0603  00F6               	movwf	___lldiv@dividend+2
  1406  0604  082D               	movf	??_UART_Init+9,w
  1407  0605  00F5               	movwf	___lldiv@dividend+1
  1408  0606  082C               	movf	??_UART_Init+8,w
  1409  0607  00F4               	movwf	___lldiv@dividend
  1410  0608  120A  118A  23CB  120A  118A  	fcall	___lldiv
  1411  060D  0871               	movf	?___lldiv+1,w
  1412  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1413  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0610  00B1               	movwf	UART_Init@x+1
  1415  0611  0870               	movf	?___lldiv,w
  1416  0612  00B0               	movwf	UART_Init@x
  1417  0613                     l1310:
  1418                           
  1419                           ;uart_pic_pic.c: 20:  if(x>255)
  1420  0613  3001               	movlw	1
  1421  0614  0231               	subwf	UART_Init@x+1,w
  1422  0615  3000               	movlw	0
  1423  0616  1903               	skipnz
  1424  0617  0230               	subwf	UART_Init@x,w
  1425  0618  1C03               	skipc
  1426  0619  2E1B               	goto	u881
  1427  061A  2E1C               	goto	u880
  1428  061B                     u881:
  1429  061B  2E79               	goto	l174
  1430  061C                     u880:
  1431  061C                     l1312:
  1432                           
  1433                           ;uart_pic_pic.c: 21:  {;uart_pic_pic.c: 22:   x = (20000000 - uart_baudRate*16)/(uart_ba
      +                          udRate*16);
  1434  061C  0820               	movf	UART_Init@uart_baudRate,w
  1435  061D  00A4               	movwf	??_UART_Init
  1436  061E  0821               	movf	UART_Init@uart_baudRate+1,w
  1437  061F  00A5               	movwf	??_UART_Init+1
  1438  0620  0822               	movf	UART_Init@uart_baudRate+2,w
  1439  0621  00A6               	movwf	??_UART_Init+2
  1440  0622  0823               	movf	UART_Init@uart_baudRate+3,w
  1441  0623  00A7               	movwf	??_UART_Init+3
  1442  0624  3004               	movlw	4
  1443  0625                     u895:
  1444  0625  1003               	clrc
  1445  0626  0DA4               	rlf	??_UART_Init,f
  1446  0627  0DA5               	rlf	??_UART_Init+1,f
  1447  0628  0DA6               	rlf	??_UART_Init+2,f
  1448  0629  0DA7               	rlf	??_UART_Init+3,f
  1449  062A                     u890:
  1450  062A  3EFF               	addlw	-1
  1451  062B  1D03               	skipz
  1452  062C  2E25               	goto	u895
  1453  062D  0827               	movf	??_UART_Init+3,w
  1454  062E  00F3               	movwf	___lldiv@divisor+3
  1455  062F  0826               	movf	??_UART_Init+2,w
  1456  0630  00F2               	movwf	___lldiv@divisor+2
  1457  0631  0825               	movf	??_UART_Init+1,w
  1458  0632  00F1               	movwf	___lldiv@divisor+1
  1459  0633  0824               	movf	??_UART_Init,w
  1460  0634  00F0               	movwf	___lldiv@divisor
  1461  0635  0820               	movf	UART_Init@uart_baudRate,w
  1462  0636  00A8               	movwf	??_UART_Init+4
  1463  0637  0821               	movf	UART_Init@uart_baudRate+1,w
  1464  0638  00A9               	movwf	??_UART_Init+5
  1465  0639  0822               	movf	UART_Init@uart_baudRate+2,w
  1466  063A  00AA               	movwf	??_UART_Init+6
  1467  063B  0823               	movf	UART_Init@uart_baudRate+3,w
  1468  063C  00AB               	movwf	??_UART_Init+7
  1469  063D  3004               	movlw	4
  1470  063E                     u905:
  1471  063E  1003               	clrc
  1472  063F  0DA8               	rlf	??_UART_Init+4,f
  1473  0640  0DA9               	rlf	??_UART_Init+5,f
  1474  0641  0DAA               	rlf	??_UART_Init+6,f
  1475  0642  0DAB               	rlf	??_UART_Init+7,f
  1476  0643                     u900:
  1477  0643  3EFF               	addlw	-1
  1478  0644  1D03               	skipz
  1479  0645  2E3E               	goto	u905
  1480  0646  3000               	movlw	0
  1481  0647  00AC               	movwf	??_UART_Init+8
  1482  0648  302D               	movlw	45
  1483  0649  00AD               	movwf	??_UART_Init+9
  1484  064A  3031               	movlw	49
  1485  064B  00AE               	movwf	??_UART_Init+10
  1486  064C  3001               	movlw	1
  1487  064D  00AF               	movwf	??_UART_Init+11
  1488  064E  0828               	movf	??_UART_Init+4,w
  1489  064F  02AC               	subwf	??_UART_Init+8,f
  1490  0650  0829               	movf	??_UART_Init+5,w
  1491  0651  1C03               	skipc
  1492  0652  0F29               	incfsz	??_UART_Init+5,w
  1493  0653  2E55               	goto	u911
  1494  0654  2E56               	goto	u912
  1495  0655                     u911:
  1496  0655  02AD               	subwf	??_UART_Init+9,f
  1497  0656                     u912:
  1498  0656  082A               	movf	??_UART_Init+6,w
  1499  0657  1C03               	skipc
  1500  0658  0F2A               	incfsz	??_UART_Init+6,w
  1501  0659  2E5B               	goto	u913
  1502  065A  2E5C               	goto	u914
  1503  065B                     u913:
  1504  065B  02AE               	subwf	??_UART_Init+10,f
  1505  065C                     u914:
  1506  065C  082B               	movf	??_UART_Init+7,w
  1507  065D  1C03               	skipc
  1508  065E  0F2B               	incfsz	??_UART_Init+7,w
  1509  065F  2E61               	goto	u915
  1510  0660  2E62               	goto	u916
  1511  0661                     u915:
  1512  0661  02AF               	subwf	??_UART_Init+11,f
  1513  0662                     u916:
  1514  0662  082F               	movf	??_UART_Init+11,w
  1515  0663  00F7               	movwf	___lldiv@dividend+3
  1516  0664  082E               	movf	??_UART_Init+10,w
  1517  0665  00F6               	movwf	___lldiv@dividend+2
  1518  0666  082D               	movf	??_UART_Init+9,w
  1519  0667  00F5               	movwf	___lldiv@dividend+1
  1520  0668  082C               	movf	??_UART_Init+8,w
  1521  0669  00F4               	movwf	___lldiv@dividend
  1522  066A  120A  118A  23CB  120A  118A  	fcall	___lldiv
  1523  066F  0871               	movf	?___lldiv+1,w
  1524  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0672  00B1               	movwf	UART_Init@x+1
  1527  0673  0870               	movf	?___lldiv,w
  1528  0674  00B0               	movwf	UART_Init@x
  1529  0675                     l1314:
  1530                           
  1531                           ;uart_pic_pic.c: 23:   BRGH = 1;
  1532  0675  1683               	bsf	3,5	;RP0=1, select bank1
  1533  0676  1303               	bcf	3,6	;RP1=0, select bank1
  1534  0677  1518               	bsf	24,2	;volatile
  1535                           
  1536                           ;uart_pic_pic.c: 24:  }
  1537  0678  2E7C               	goto	l1316
  1538  0679                     l174:	
  1539                           ;uart_pic_pic.c: 25:  else
  1540                           
  1541                           
  1542                           ;uart_pic_pic.c: 26:   BRGH = 0;
  1543  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1544  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1545  067B  1118               	bcf	24,2	;volatile
  1546  067C                     l1316:
  1547                           
  1548                           ;uart_pic_pic.c: 28:  if(x<255)
  1549  067C  3000               	movlw	0
  1550  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1551  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1552  067F  0231               	subwf	UART_Init@x+1,w
  1553  0680  30FF               	movlw	255
  1554  0681  1903               	skipnz
  1555  0682  0230               	subwf	UART_Init@x,w
  1556  0683  1803               	skipnc
  1557  0684  2E86               	goto	u921
  1558  0685  2E87               	goto	u920
  1559  0686                     u921:
  1560  0686  2E9D               	goto	l177
  1561  0687                     u920:
  1562  0687                     l1318:
  1563                           
  1564                           ;uart_pic_pic.c: 29:  {;uart_pic_pic.c: 30:    SPBRG = x;
  1565  0687  0830               	movf	UART_Init@x,w
  1566  0688  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0689  1303               	bcf	3,6	;RP1=0, select bank1
  1568  068A  0099               	movwf	25	;volatile
  1569  068B                     l1320:
  1570                           
  1571                           ;uart_pic_pic.c: 33:    SYNC = 0;
  1572  068B  1218               	bcf	24,4	;volatile
  1573  068C                     l1322:
  1574                           
  1575                           ;uart_pic_pic.c: 34:    SPEN = 1;
  1576  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1577  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1578  068E  1798               	bsf	24,7	;volatile
  1579  068F                     l1324:
  1580                           
  1581                           ;uart_pic_pic.c: 37:    TRISC7 = 1;
  1582  068F  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0690  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0691  1787               	bsf	7,7	;volatile
  1585  0692                     l1326:
  1586                           
  1587                           ;uart_pic_pic.c: 38:   TRISC6 = 1;
  1588  0692  1707               	bsf	7,6	;volatile
  1589  0693                     l1328:
  1590                           
  1591                           ;uart_pic_pic.c: 51:    TXEN = 1;
  1592  0693  1698               	bsf	24,5	;volatile
  1593  0694                     l1330:
  1594                           
  1595                           ;uart_pic_pic.c: 52:   CREN = 1;
  1596  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0696  1618               	bsf	24,4	;volatile
  1599  0697                     l1332:
  1600                           
  1601                           ;uart_pic_pic.c: 55:     TX9 = 0;
  1602  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1603  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1604  0699  1318               	bcf	24,6	;volatile
  1605  069A                     l1334:
  1606                           
  1607                           ;uart_pic_pic.c: 56:     RX9 = 0;
  1608  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1609  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1610  069C  1318               	bcf	24,6	;volatile
  1611  069D                     l177:
  1612  069D  0008               	return
  1613  069E                     __end_of_UART_Init:
  1614                           
  1615                           	psect	text5
  1616  03CB                     __ptext5:	
  1617 ;; *************** function ___lldiv *****************
  1618 ;; Defined at:
  1619 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  divisor         4    0[COMMON] unsigned long 
  1622 ;;  dividend        4    4[COMMON] unsigned long 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  quotient        4    9[COMMON] unsigned long 
  1625 ;;  counter         1   13[COMMON] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  4    0[COMMON] unsigned long 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         8       0       0       0       0
  1636 ;;      Locals:         5       0       0       0       0
  1637 ;;      Temps:          1       0       0       0       0
  1638 ;;      Totals:        14       0       0       0       0
  1639 ;;Total ram usage:       14 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_UART_Init
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function ___lldiv
  1650  03CB                     ___lldiv:
  1651  03CB                     l1236:	
  1652                           ;incstack = 0
  1653                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1654                           
  1655  03CB  3000               	movlw	0
  1656  03CC  00FC               	movwf	___lldiv@quotient+3
  1657  03CD  3000               	movlw	0
  1658  03CE  00FB               	movwf	___lldiv@quotient+2
  1659  03CF  3000               	movlw	0
  1660  03D0  00FA               	movwf	___lldiv@quotient+1
  1661  03D1  3000               	movlw	0
  1662  03D2  00F9               	movwf	___lldiv@quotient
  1663  03D3  0873               	movf	___lldiv@divisor+3,w
  1664  03D4  0472               	iorwf	___lldiv@divisor+2,w
  1665  03D5  0471               	iorwf	___lldiv@divisor+1,w
  1666  03D6  0470               	iorwf	___lldiv@divisor,w
  1667  03D7  1903               	skipnz
  1668  03D8  2BDA               	goto	u651
  1669  03D9  2BDB               	goto	u650
  1670  03DA                     u651:
  1671  03DA  2C28               	goto	l1256
  1672  03DB                     u650:
  1673  03DB                     l1238:
  1674  03DB  01FD               	clrf	___lldiv@counter
  1675  03DC  0AFD               	incf	___lldiv@counter,f
  1676  03DD  2BEB               	goto	l1242
  1677  03DE                     l1240:
  1678  03DE  3001               	movlw	1
  1679  03DF  00F8               	movwf	??___lldiv
  1680  03E0                     u665:
  1681  03E0  1003               	clrc
  1682  03E1  0DF0               	rlf	___lldiv@divisor,f
  1683  03E2  0DF1               	rlf	___lldiv@divisor+1,f
  1684  03E3  0DF2               	rlf	___lldiv@divisor+2,f
  1685  03E4  0DF3               	rlf	___lldiv@divisor+3,f
  1686  03E5  0BF8               	decfsz	??___lldiv,f
  1687  03E6  2BE0               	goto	u665
  1688  03E7  3001               	movlw	1
  1689  03E8  00F8               	movwf	??___lldiv
  1690  03E9  0878               	movf	??___lldiv,w
  1691  03EA  07FD               	addwf	___lldiv@counter,f
  1692  03EB                     l1242:
  1693  03EB  1FF3               	btfss	___lldiv@divisor+3,7
  1694  03EC  2BEE               	goto	u671
  1695  03ED  2BEF               	goto	u670
  1696  03EE                     u671:
  1697  03EE  2BDE               	goto	l1240
  1698  03EF                     u670:
  1699  03EF                     l1244:
  1700  03EF  3001               	movlw	1
  1701  03F0  00F8               	movwf	??___lldiv
  1702  03F1                     u685:
  1703  03F1  1003               	clrc
  1704  03F2  0DF9               	rlf	___lldiv@quotient,f
  1705  03F3  0DFA               	rlf	___lldiv@quotient+1,f
  1706  03F4  0DFB               	rlf	___lldiv@quotient+2,f
  1707  03F5  0DFC               	rlf	___lldiv@quotient+3,f
  1708  03F6  0BF8               	decfsz	??___lldiv,f
  1709  03F7  2BF1               	goto	u685
  1710  03F8                     l1246:
  1711  03F8  0873               	movf	___lldiv@divisor+3,w
  1712  03F9  0277               	subwf	___lldiv@dividend+3,w
  1713  03FA  1D03               	skipz
  1714  03FB  2C06               	goto	u695
  1715  03FC  0872               	movf	___lldiv@divisor+2,w
  1716  03FD  0276               	subwf	___lldiv@dividend+2,w
  1717  03FE  1D03               	skipz
  1718  03FF  2C06               	goto	u695
  1719  0400  0871               	movf	___lldiv@divisor+1,w
  1720  0401  0275               	subwf	___lldiv@dividend+1,w
  1721  0402  1D03               	skipz
  1722  0403  2C06               	goto	u695
  1723  0404  0870               	movf	___lldiv@divisor,w
  1724  0405  0274               	subwf	___lldiv@dividend,w
  1725  0406                     u695:
  1726  0406  1C03               	skipc
  1727  0407  2C09               	goto	u691
  1728  0408  2C0A               	goto	u690
  1729  0409                     u691:
  1730  0409  2C19               	goto	l1252
  1731  040A                     u690:
  1732  040A                     l1248:
  1733  040A  0870               	movf	___lldiv@divisor,w
  1734  040B  02F4               	subwf	___lldiv@dividend,f
  1735  040C  0871               	movf	___lldiv@divisor+1,w
  1736  040D  1C03               	skipc
  1737  040E  0F71               	incfsz	___lldiv@divisor+1,w
  1738  040F  02F5               	subwf	___lldiv@dividend+1,f
  1739  0410  0872               	movf	___lldiv@divisor+2,w
  1740  0411  1C03               	skipc
  1741  0412  0F72               	incfsz	___lldiv@divisor+2,w
  1742  0413  02F6               	subwf	___lldiv@dividend+2,f
  1743  0414  0873               	movf	___lldiv@divisor+3,w
  1744  0415  1C03               	skipc
  1745  0416  0F73               	incfsz	___lldiv@divisor+3,w
  1746  0417  02F7               	subwf	___lldiv@dividend+3,f
  1747  0418                     l1250:
  1748  0418  1479               	bsf	___lldiv@quotient,0
  1749  0419                     l1252:
  1750  0419  3001               	movlw	1
  1751  041A                     u705:
  1752  041A  1003               	clrc
  1753  041B  0CF3               	rrf	___lldiv@divisor+3,f
  1754  041C  0CF2               	rrf	___lldiv@divisor+2,f
  1755  041D  0CF1               	rrf	___lldiv@divisor+1,f
  1756  041E  0CF0               	rrf	___lldiv@divisor,f
  1757  041F  3EFF               	addlw	-1
  1758  0420  1D03               	skipz
  1759  0421  2C1A               	goto	u705
  1760  0422                     l1254:
  1761  0422  3001               	movlw	1
  1762  0423  02FD               	subwf	___lldiv@counter,f
  1763  0424  1D03               	btfss	3,2
  1764  0425  2C27               	goto	u711
  1765  0426  2C28               	goto	u710
  1766  0427                     u711:
  1767  0427  2BEF               	goto	l1244
  1768  0428                     u710:
  1769  0428                     l1256:
  1770  0428  087C               	movf	___lldiv@quotient+3,w
  1771  0429  00F3               	movwf	?___lldiv+3
  1772  042A  087B               	movf	___lldiv@quotient+2,w
  1773  042B  00F2               	movwf	?___lldiv+2
  1774  042C  087A               	movf	___lldiv@quotient+1,w
  1775  042D  00F1               	movwf	?___lldiv+1
  1776  042E  0879               	movf	___lldiv@quotient,w
  1777  042F  00F0               	movwf	?___lldiv
  1778  0430                     l330:
  1779  0430  0008               	return
  1780  0431                     __end_of___lldiv:
  1781                           
  1782                           	psect	text6
  1783  0254                     __ptext6:	
  1784 ;; *************** function _UART_Data_Ready *****************
  1785 ;; Defined at:
  1786 ;;		line 115 in file "uart_pic_pic.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      unsigned char 
  1793 ;; Registers used:
  1794 ;;		wreg
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0
  1803 ;;      Totals:         0       0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _UART_Data_Ready
  1815  0254                     _UART_Data_Ready:
  1816  0254                     l1438:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _UART_Data_Ready: [wreg]
  1819                           
  1820                           
  1821                           ;uart_pic_pic.c: 117:     return RCIF;
  1822  0254  3000               	movlw	0
  1823  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0257  1A8C               	btfsc	12,5	;volatile
  1826  0258  3001               	movlw	1
  1827  0259                     l195:
  1828  0259  0008               	return
  1829  025A                     __end_of_UART_Data_Ready:
  1830                           
  1831                           	psect	text7
  1832  02D5                     __ptext7:	
  1833 ;; *************** function _LCD_Write_String *****************
  1834 ;; Defined at:
  1835 ;;		line 141 in file "lcd.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  str             1    wreg     PTR unsigned char 
  1838 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1839 ;;		 -> STR_1(9), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  str             1    8[COMMON] PTR unsigned char 
  1842 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1843 ;;		 -> STR_1(9), 
  1844 ;;  i               2    6[COMMON] int 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         3       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0
  1857 ;;      Totals:         3       0       0       0       0
  1858 ;;Total ram usage:        3 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 2
  1861 ;; This function calls:
  1862 ;;		_LCD_Write_Char
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _LCD_Write_String
  1870  02D5                     _LCD_Write_String:
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1874                           ;LCD_Write_String@str stored from wreg
  1875  02D5  00F8               	movwf	LCD_Write_String@str
  1876  02D6                     l1414:
  1877                           
  1878                           ;lcd.c: 141: void LCD_Write_String(char *str);lcd.c: 142: {;lcd.c: 143:   int i;;lcd.c: 
      +                          144:   for(i=0;str[i]!='\0';i++)
  1879  02D6  01F6               	clrf	LCD_Write_String@i
  1880  02D7  01F7               	clrf	LCD_Write_String@i+1
  1881  02D8  2AEC               	goto	l1420
  1882  02D9                     l1416:
  1883                           
  1884                           ;lcd.c: 145:     LCD_Write_Char(str[i]);
  1885  02D9  0876               	movf	LCD_Write_String@i,w
  1886  02DA  0778               	addwf	LCD_Write_String@str,w
  1887  02DB  0084               	movwf	4
  1888  02DC  120A  118A  2003  120A  118A  	fcall	stringdir
  1889  02E1  120A  118A  2378  120A  118A  	fcall	_LCD_Write_Char
  1890  02E6                     l1418:
  1891  02E6  3001               	movlw	1
  1892  02E7  07F6               	addwf	LCD_Write_String@i,f
  1893  02E8  1803               	skipnc
  1894  02E9  0AF7               	incf	LCD_Write_String@i+1,f
  1895  02EA  3000               	movlw	0
  1896  02EB  07F7               	addwf	LCD_Write_String@i+1,f
  1897  02EC                     l1420:
  1898  02EC  0876               	movf	LCD_Write_String@i,w
  1899  02ED  0778               	addwf	LCD_Write_String@str,w
  1900  02EE  0084               	movwf	4
  1901  02EF  120A  118A  2003  120A  118A  	fcall	stringdir
  1902  02F4  3A00               	xorlw	0
  1903  02F5  1D03               	skipz
  1904  02F6  2AF8               	goto	u1011
  1905  02F7  2AF9               	goto	u1010
  1906  02F8                     u1011:
  1907  02F8  2AD9               	goto	l1416
  1908  02F9                     u1010:
  1909  02F9                     l122:
  1910  02F9  0008               	return
  1911  02FA                     __end_of_LCD_Write_String:
  1912                           
  1913                           	psect	text8
  1914  0498                     __ptext8:	
  1915 ;; *************** function _LCD_Write_Number *****************
  1916 ;; Defined at:
  1917 ;;		line 160 in file "lcd.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  number          2    8[COMMON] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  num            20    0[BANK0 ] int [10]
  1922 ;;  p               2   23[BANK0 ] int 
  1923 ;;  k               2   20[BANK0 ] unsigned int 
  1924 ;;  c               1   22[BANK0 ] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         2       0       0       0       0
  1935 ;;      Locals:         0      25       0       0       0
  1936 ;;      Temps:          2       0       0       0       0
  1937 ;;      Totals:         4      25       0       0       0
  1938 ;;Total ram usage:       29 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 2
  1941 ;; This function calls:
  1942 ;;		_LCD_Write_Char
  1943 ;;		___lwdiv
  1944 ;;		___lwmod
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _LCD_Write_Number
  1952  0498                     _LCD_Write_Number:
  1953  0498                     l1450:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _LCD_Write_Number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1956                           
  1957                           
  1958                           ;lcd.c: 160: void LCD_Write_Number(unsigned int number);lcd.c: 161: {;lcd.c: 162:     in
      +                          t num[10];;lcd.c: 163:     unsigned char c;;lcd.c: 164:     int p;;lcd.c: 165:     unsig
      +                          ned int k=0;
  1959  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1961  049A  01B4               	clrf	LCD_Write_Number@k
  1962  049B  01B5               	clrf	LCD_Write_Number@k+1
  1963  049C                     l1452:
  1964                           
  1965                           ;lcd.c: 168:     if(number == 0)
  1966  049C  0878               	movf	LCD_Write_Number@number,w
  1967  049D  0479               	iorwf	LCD_Write_Number@number+1,w
  1968  049E  1D03               	btfss	3,2
  1969  049F  2CA1               	goto	u1061
  1970  04A0  2CA2               	goto	u1060
  1971  04A1                     u1061:
  1972  04A1  2CA9               	goto	l1458
  1973  04A2                     u1060:
  1974  04A2                     l1454:
  1975  04A2                     l1456:
  1976                           
  1977                           ;lcd.c: 171:      LCD_Write_Char(c);
  1978  04A2  3030               	movlw	48
  1979  04A3  120A  118A  2378  120A  118A  	fcall	_LCD_Write_Char
  1980                           
  1981                           ;lcd.c: 172:  }
  1982  04A8  2D12               	goto	l139
  1983  04A9                     l1458:
  1984  04A9  0878               	movf	LCD_Write_Number@number,w
  1985  04AA  0479               	iorwf	LCD_Write_Number@number+1,w
  1986  04AB  1903               	btfsc	3,2
  1987  04AC  2CAE               	goto	u1071
  1988  04AD  2CAF               	goto	u1070
  1989  04AE                     u1071:
  1990  04AE  2D12               	goto	l139
  1991  04AF                     u1070:
  1992  04AF  2CE3               	goto	l1468
  1993  04B0                     l1462:
  1994                           
  1995                           ;lcd.c: 177:      {;lcd.c: 178:          num[k]=number%10;
  1996  04B0  300A               	movlw	10
  1997  04B1  00F0               	movwf	___lwmod@divisor
  1998  04B2  3000               	movlw	0
  1999  04B3  00F1               	movwf	___lwmod@divisor+1
  2000  04B4  0879               	movf	LCD_Write_Number@number+1,w
  2001  04B5  00F3               	movwf	___lwmod@dividend+1
  2002  04B6  0878               	movf	LCD_Write_Number@number,w
  2003  04B7  00F2               	movwf	___lwmod@dividend
  2004  04B8  120A  118A  22FA  120A  118A  	fcall	___lwmod
  2005  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2006  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2007  04BF  0834               	movf	LCD_Write_Number@k,w
  2008  04C0  00FA               	movwf	??_LCD_Write_Number
  2009  04C1  077A               	addwf	??_LCD_Write_Number,w
  2010  04C2  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
  2011  04C3  0084               	movwf	4
  2012  04C4  0870               	movf	?___lwmod,w
  2013  04C5  1383               	bcf	3,7	;select IRP bank0
  2014  04C6  0080               	movwf	0
  2015  04C7  0A84               	incf	4,f
  2016  04C8  0871               	movf	?___lwmod+1,w
  2017  04C9  0080               	movwf	0
  2018  04CA                     l1464:
  2019                           
  2020                           ;lcd.c: 179:          number = number/10;
  2021  04CA  300A               	movlw	10
  2022  04CB  00F0               	movwf	___lwdiv@divisor
  2023  04CC  3000               	movlw	0
  2024  04CD  00F1               	movwf	___lwdiv@divisor+1
  2025  04CE  0879               	movf	LCD_Write_Number@number+1,w
  2026  04CF  00F3               	movwf	___lwdiv@dividend+1
  2027  04D0  0878               	movf	LCD_Write_Number@number,w
  2028  04D1  00F2               	movwf	___lwdiv@dividend
  2029  04D2  120A  118A  2334  120A  118A  	fcall	___lwdiv
  2030  04D7  0871               	movf	?___lwdiv+1,w
  2031  04D8  00F9               	movwf	LCD_Write_Number@number+1
  2032  04D9  0870               	movf	?___lwdiv,w
  2033  04DA  00F8               	movwf	LCD_Write_Number@number
  2034  04DB                     l1466:
  2035                           
  2036                           ;lcd.c: 180:          k++;
  2037  04DB  3001               	movlw	1
  2038  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2039  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2040  04DE  07B4               	addwf	LCD_Write_Number@k,f
  2041  04DF  1803               	skipnc
  2042  04E0  0AB5               	incf	LCD_Write_Number@k+1,f
  2043  04E1  3000               	movlw	0
  2044  04E2  07B5               	addwf	LCD_Write_Number@k+1,f
  2045  04E3                     l1468:
  2046                           
  2047                           ;lcd.c: 176:      while(number>0)
  2048  04E3  0878               	movf	LCD_Write_Number@number,w
  2049  04E4  0479               	iorwf	LCD_Write_Number@number+1,w
  2050  04E5  1D03               	btfss	3,2
  2051  04E6  2CE8               	goto	u1081
  2052  04E7  2CE9               	goto	u1080
  2053  04E8                     u1081:
  2054  04E8  2CB0               	goto	l1462
  2055  04E9                     u1080:
  2056  04E9                     l1470:
  2057                           
  2058                           ;lcd.c: 183:      k--;
  2059  04E9  3001               	movlw	1
  2060  04EA  02B4               	subwf	LCD_Write_Number@k,f
  2061  04EB  3000               	movlw	0
  2062  04EC  1C03               	skipc
  2063  04ED  03B5               	decf	LCD_Write_Number@k+1,f
  2064  04EE  02B5               	subwf	LCD_Write_Number@k+1,f
  2065                           
  2066                           ;lcd.c: 184:      for(p=k; p>=0; p--)
  2067  04EF  0835               	movf	LCD_Write_Number@k+1,w
  2068  04F0  00B8               	movwf	LCD_Write_Number@p+1
  2069  04F1  0834               	movf	LCD_Write_Number@k,w
  2070  04F2  00B7               	movwf	LCD_Write_Number@p
  2071  04F3                     l1472:
  2072  04F3  1FB8               	btfss	LCD_Write_Number@p+1,7
  2073  04F4  2CF6               	goto	u1091
  2074  04F5  2CF7               	goto	u1090
  2075  04F6                     u1091:
  2076  04F6  2CF8               	goto	l1476
  2077  04F7                     u1090:
  2078  04F7  2D12               	goto	l139
  2079  04F8                     l1476:
  2080                           
  2081                           ;lcd.c: 185:      {;lcd.c: 186:          c=num[p] + '0';
  2082  04F8  0837               	movf	LCD_Write_Number@p,w
  2083  04F9  00FA               	movwf	??_LCD_Write_Number
  2084  04FA  077A               	addwf	??_LCD_Write_Number,w
  2085  04FB  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
  2086  04FC  0084               	movwf	4
  2087  04FD  1383               	bcf	3,7	;select IRP bank0
  2088  04FE  0800               	movf	0,w
  2089  04FF  3E30               	addlw	48
  2090  0500  00FB               	movwf	??_LCD_Write_Number+1
  2091  0501  087B               	movf	??_LCD_Write_Number+1,w
  2092  0502  00B6               	movwf	LCD_Write_Number@c
  2093  0503                     l1478:
  2094                           
  2095                           ;lcd.c: 187:          LCD_Write_Char(c);
  2096  0503  0836               	movf	LCD_Write_Number@c,w
  2097  0504  120A  118A  2378  120A  118A  	fcall	_LCD_Write_Char
  2098  0509                     l1480:
  2099                           
  2100                           ;lcd.c: 188:      }
  2101  0509  30FF               	movlw	255
  2102  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2103  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2104  050C  07B7               	addwf	LCD_Write_Number@p,f
  2105  050D  1803               	skipnc
  2106  050E  0AB8               	incf	LCD_Write_Number@p+1,f
  2107  050F  30FF               	movlw	255
  2108  0510  07B8               	addwf	LCD_Write_Number@p+1,f
  2109  0511  2CF3               	goto	l1472
  2110  0512                     l139:
  2111  0512  0008               	return
  2112  0513                     __end_of_LCD_Write_Number:
  2113                           
  2114                           	psect	text9
  2115  02FA                     __ptext9:	
  2116 ;; *************** function ___lwmod *****************
  2117 ;; Defined at:
  2118 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  divisor         2    0[COMMON] unsigned int 
  2121 ;;  dividend        2    2[COMMON] unsigned int 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  counter         1    5[COMMON] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    0[COMMON] unsigned int 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         4       0       0       0       0
  2134 ;;      Locals:         1       0       0       0       0
  2135 ;;      Temps:          1       0       0       0       0
  2136 ;;      Totals:         6       0       0       0       0
  2137 ;;Total ram usage:        6 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_LCD_Write_Number
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function ___lwmod
  2148  02FA                     ___lwmod:
  2149  02FA                     l1286:	
  2150                           ;incstack = 0
  2151                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2152                           
  2153  02FA  0870               	movf	___lwmod@divisor,w
  2154  02FB  0471               	iorwf	___lwmod@divisor+1,w
  2155  02FC  1903               	btfsc	3,2
  2156  02FD  2AFF               	goto	u791
  2157  02FE  2B00               	goto	u790
  2158  02FF                     u791:
  2159  02FF  2B2F               	goto	l1304
  2160  0300                     u790:
  2161  0300                     l1288:
  2162  0300  01F5               	clrf	___lwmod@counter
  2163  0301  0AF5               	incf	___lwmod@counter,f
  2164  0302  2B0E               	goto	l1294
  2165  0303                     l1290:
  2166  0303  3001               	movlw	1
  2167  0304                     u805:
  2168  0304  1003               	clrc
  2169  0305  0DF0               	rlf	___lwmod@divisor,f
  2170  0306  0DF1               	rlf	___lwmod@divisor+1,f
  2171  0307  3EFF               	addlw	-1
  2172  0308  1D03               	skipz
  2173  0309  2B04               	goto	u805
  2174  030A                     l1292:
  2175  030A  3001               	movlw	1
  2176  030B  00F4               	movwf	??___lwmod
  2177  030C  0874               	movf	??___lwmod,w
  2178  030D  07F5               	addwf	___lwmod@counter,f
  2179  030E                     l1294:
  2180  030E  1FF1               	btfss	___lwmod@divisor+1,7
  2181  030F  2B11               	goto	u811
  2182  0310  2B12               	goto	u810
  2183  0311                     u811:
  2184  0311  2B03               	goto	l1290
  2185  0312                     u810:
  2186  0312                     l1296:
  2187  0312  0871               	movf	___lwmod@divisor+1,w
  2188  0313  0273               	subwf	___lwmod@dividend+1,w
  2189  0314  1D03               	skipz
  2190  0315  2B18               	goto	u825
  2191  0316  0870               	movf	___lwmod@divisor,w
  2192  0317  0272               	subwf	___lwmod@dividend,w
  2193  0318                     u825:
  2194  0318  1C03               	skipc
  2195  0319  2B1B               	goto	u821
  2196  031A  2B1C               	goto	u820
  2197  031B                     u821:
  2198  031B  2B22               	goto	l1300
  2199  031C                     u820:
  2200  031C                     l1298:
  2201  031C  0870               	movf	___lwmod@divisor,w
  2202  031D  02F2               	subwf	___lwmod@dividend,f
  2203  031E  0871               	movf	___lwmod@divisor+1,w
  2204  031F  1C03               	skipc
  2205  0320  03F3               	decf	___lwmod@dividend+1,f
  2206  0321  02F3               	subwf	___lwmod@dividend+1,f
  2207  0322                     l1300:
  2208  0322  3001               	movlw	1
  2209  0323                     u835:
  2210  0323  1003               	clrc
  2211  0324  0CF1               	rrf	___lwmod@divisor+1,f
  2212  0325  0CF0               	rrf	___lwmod@divisor,f
  2213  0326  3EFF               	addlw	-1
  2214  0327  1D03               	skipz
  2215  0328  2B23               	goto	u835
  2216  0329                     l1302:
  2217  0329  3001               	movlw	1
  2218  032A  02F5               	subwf	___lwmod@counter,f
  2219  032B  1D03               	btfss	3,2
  2220  032C  2B2E               	goto	u841
  2221  032D  2B2F               	goto	u840
  2222  032E                     u841:
  2223  032E  2B12               	goto	l1296
  2224  032F                     u840:
  2225  032F                     l1304:
  2226  032F  0873               	movf	___lwmod@dividend+1,w
  2227  0330  00F1               	movwf	?___lwmod+1
  2228  0331  0872               	movf	___lwmod@dividend,w
  2229  0332  00F0               	movwf	?___lwmod
  2230  0333                     l576:
  2231  0333  0008               	return
  2232  0334                     __end_of___lwmod:
  2233                           
  2234                           	psect	text10
  2235  0334                     __ptext10:	
  2236 ;; *************** function ___lwdiv *****************
  2237 ;; Defined at:
  2238 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  divisor         2    0[COMMON] unsigned int 
  2241 ;;  dividend        2    2[COMMON] unsigned int 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  quotient        2    5[COMMON] unsigned int 
  2244 ;;  counter         1    7[COMMON] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  2    0[COMMON] unsigned int 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2254 ;;      Params:         4       0       0       0       0
  2255 ;;      Locals:         3       0       0       0       0
  2256 ;;      Temps:          1       0       0       0       0
  2257 ;;      Totals:         8       0       0       0       0
  2258 ;;Total ram usage:        8 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_LCD_Write_Number
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function ___lwdiv
  2269  0334                     ___lwdiv:
  2270  0334                     l1260:	
  2271                           ;incstack = 0
  2272                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2273                           
  2274  0334  01F5               	clrf	___lwdiv@quotient
  2275  0335  01F6               	clrf	___lwdiv@quotient+1
  2276  0336                     l1262:
  2277  0336  0870               	movf	___lwdiv@divisor,w
  2278  0337  0471               	iorwf	___lwdiv@divisor+1,w
  2279  0338  1903               	btfsc	3,2
  2280  0339  2B3B               	goto	u721
  2281  033A  2B3C               	goto	u720
  2282  033B                     u721:
  2283  033B  2B73               	goto	l1282
  2284  033C                     u720:
  2285  033C                     l1264:
  2286  033C  01F7               	clrf	___lwdiv@counter
  2287  033D  0AF7               	incf	___lwdiv@counter,f
  2288  033E  2B4A               	goto	l1270
  2289  033F                     l1266:
  2290  033F  3001               	movlw	1
  2291  0340                     u735:
  2292  0340  1003               	clrc
  2293  0341  0DF0               	rlf	___lwdiv@divisor,f
  2294  0342  0DF1               	rlf	___lwdiv@divisor+1,f
  2295  0343  3EFF               	addlw	-1
  2296  0344  1D03               	skipz
  2297  0345  2B40               	goto	u735
  2298  0346                     l1268:
  2299  0346  3001               	movlw	1
  2300  0347  00F4               	movwf	??___lwdiv
  2301  0348  0874               	movf	??___lwdiv,w
  2302  0349  07F7               	addwf	___lwdiv@counter,f
  2303  034A                     l1270:
  2304  034A  1FF1               	btfss	___lwdiv@divisor+1,7
  2305  034B  2B4D               	goto	u741
  2306  034C  2B4E               	goto	u740
  2307  034D                     u741:
  2308  034D  2B3F               	goto	l1266
  2309  034E                     u740:
  2310  034E                     l1272:
  2311  034E  3001               	movlw	1
  2312  034F                     u755:
  2313  034F  1003               	clrc
  2314  0350  0DF5               	rlf	___lwdiv@quotient,f
  2315  0351  0DF6               	rlf	___lwdiv@quotient+1,f
  2316  0352  3EFF               	addlw	-1
  2317  0353  1D03               	skipz
  2318  0354  2B4F               	goto	u755
  2319  0355  0871               	movf	___lwdiv@divisor+1,w
  2320  0356  0273               	subwf	___lwdiv@dividend+1,w
  2321  0357  1D03               	skipz
  2322  0358  2B5B               	goto	u765
  2323  0359  0870               	movf	___lwdiv@divisor,w
  2324  035A  0272               	subwf	___lwdiv@dividend,w
  2325  035B                     u765:
  2326  035B  1C03               	skipc
  2327  035C  2B5E               	goto	u761
  2328  035D  2B5F               	goto	u760
  2329  035E                     u761:
  2330  035E  2B66               	goto	l1278
  2331  035F                     u760:
  2332  035F                     l1274:
  2333  035F  0870               	movf	___lwdiv@divisor,w
  2334  0360  02F2               	subwf	___lwdiv@dividend,f
  2335  0361  0871               	movf	___lwdiv@divisor+1,w
  2336  0362  1C03               	skipc
  2337  0363  03F3               	decf	___lwdiv@dividend+1,f
  2338  0364  02F3               	subwf	___lwdiv@dividend+1,f
  2339  0365                     l1276:
  2340  0365  1475               	bsf	___lwdiv@quotient,0
  2341  0366                     l1278:
  2342  0366  3001               	movlw	1
  2343  0367                     u775:
  2344  0367  1003               	clrc
  2345  0368  0CF1               	rrf	___lwdiv@divisor+1,f
  2346  0369  0CF0               	rrf	___lwdiv@divisor,f
  2347  036A  3EFF               	addlw	-1
  2348  036B  1D03               	skipz
  2349  036C  2B67               	goto	u775
  2350  036D                     l1280:
  2351  036D  3001               	movlw	1
  2352  036E  02F7               	subwf	___lwdiv@counter,f
  2353  036F  1D03               	btfss	3,2
  2354  0370  2B72               	goto	u781
  2355  0371  2B73               	goto	u780
  2356  0372                     u781:
  2357  0372  2B4E               	goto	l1272
  2358  0373                     u780:
  2359  0373                     l1282:
  2360  0373  0876               	movf	___lwdiv@quotient+1,w
  2361  0374  00F1               	movwf	?___lwdiv+1
  2362  0375  0875               	movf	___lwdiv@quotient,w
  2363  0376  00F0               	movwf	?___lwdiv
  2364  0377                     l566:
  2365  0377  0008               	return
  2366  0378                     __end_of___lwdiv:
  2367                           
  2368                           	psect	text11
  2369  0378                     __ptext11:	
  2370 ;; *************** function _LCD_Write_Char *****************
  2371 ;; Defined at:
  2372 ;;		line 119 in file "lcd.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  Data            1    wreg     unsigned char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  Data            1    5[COMMON] unsigned char 
  2377 ;;  High4           1    4[COMMON] unsigned char 
  2378 ;;  Low4            1    3[COMMON] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, pclath, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         0       0       0       0       0
  2389 ;;      Locals:         3       0       0       0       0
  2390 ;;      Temps:          2       0       0       0       0
  2391 ;;      Totals:         5       0       0       0       0
  2392 ;;Total ram usage:        5 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 1
  2395 ;; This function calls:
  2396 ;;		_LCD_DATA
  2397 ;; This function is called by:
  2398 ;;		_LCD_Write_String
  2399 ;;		_LCD_Write_Number
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _LCD_Write_Char
  2405  0378                     _LCD_Write_Char:
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2409                           ;LCD_Write_Char@Data stored from wreg
  2410  0378  00F5               	movwf	LCD_Write_Char@Data
  2411  0379                     l1212:
  2412                           
  2413                           ;lcd.c: 119: void LCD_Write_Char(char Data);lcd.c: 120: {;lcd.c: 125:   char Low4,High4;
      +                          ;lcd.c: 126:   Low4 = Data & 0x0F;
  2414  0379  0875               	movf	LCD_Write_Char@Data,w
  2415  037A  390F               	andlw	15
  2416  037B  00F1               	movwf	??_LCD_Write_Char
  2417  037C  0871               	movf	??_LCD_Write_Char,w
  2418  037D  00F3               	movwf	LCD_Write_Char@Low4
  2419                           
  2420                           ;lcd.c: 127:   High4 = Data & 0xF0;
  2421  037E  0875               	movf	LCD_Write_Char@Data,w
  2422  037F  39F0               	andlw	240
  2423  0380  00F1               	movwf	??_LCD_Write_Char
  2424  0381  0871               	movf	??_LCD_Write_Char,w
  2425  0382  00F4               	movwf	LCD_Write_Char@High4
  2426  0383                     l1214:
  2427                           
  2428                           ;lcd.c: 128:   RD2 = 1;
  2429  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0385  1508               	bsf	8,2	;volatile
  2432  0386                     l1216:
  2433                           
  2434                           ;lcd.c: 129:   LCD_DATA(High4>>4);
  2435  0386  0874               	movf	LCD_Write_Char@High4,w
  2436  0387  00F1               	movwf	??_LCD_Write_Char
  2437  0388  3004               	movlw	4
  2438  0389                     u645:
  2439  0389  1003               	clrc
  2440  038A  0CF1               	rrf	??_LCD_Write_Char,f
  2441  038B  3EFF               	addlw	-1
  2442  038C  1D03               	skipz
  2443  038D  2B89               	goto	u645
  2444  038E  0871               	movf	??_LCD_Write_Char,w
  2445  038F  120A  118A  22B3  120A  118A  	fcall	_LCD_DATA
  2446  0394                     l1218:
  2447                           
  2448                           ;lcd.c: 130:   RD3 = 1;
  2449  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0396  1588               	bsf	8,3	;volatile
  2452  0397                     l1220:
  2453                           
  2454                           ;lcd.c: 131:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2455  0397  3004               	movlw	4
  2456  0398  00F2               	movwf	??_LCD_Write_Char+1
  2457  0399  303D               	movlw	61
  2458  039A  00F1               	movwf	??_LCD_Write_Char
  2459  039B                     u1207:
  2460  039B  0BF1               	decfsz	??_LCD_Write_Char,f
  2461  039C  2B9B               	goto	u1207
  2462  039D  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2463  039E  2B9B               	goto	u1207
  2464  039F  2BA0               	nop2
  2465  03A0                     l1222:
  2466                           
  2467                           ;lcd.c: 132:   RD3 = 0;
  2468  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2469  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2470  03A2  1188               	bcf	8,3	;volatile
  2471  03A3                     l1224:
  2472                           
  2473                           ;lcd.c: 133:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2474  03A3  3004               	movlw	4
  2475  03A4  00F2               	movwf	??_LCD_Write_Char+1
  2476  03A5  303D               	movlw	61
  2477  03A6  00F1               	movwf	??_LCD_Write_Char
  2478  03A7                     u1217:
  2479  03A7  0BF1               	decfsz	??_LCD_Write_Char,f
  2480  03A8  2BA7               	goto	u1217
  2481  03A9  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2482  03AA  2BA7               	goto	u1217
  2483  03AB  2BAC               	nop2
  2484  03AC                     l1226:
  2485                           
  2486                           ;lcd.c: 134:   LCD_DATA(Low4);
  2487  03AC  0873               	movf	LCD_Write_Char@Low4,w
  2488  03AD  120A  118A  22B3  120A  118A  	fcall	_LCD_DATA
  2489  03B2                     l1228:
  2490                           
  2491                           ;lcd.c: 135:   RD3 = 1;
  2492  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2493  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2494  03B4  1588               	bsf	8,3	;volatile
  2495  03B5                     l1230:
  2496                           
  2497                           ;lcd.c: 136:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2498  03B5  3004               	movlw	4
  2499  03B6  00F2               	movwf	??_LCD_Write_Char+1
  2500  03B7  303D               	movlw	61
  2501  03B8  00F1               	movwf	??_LCD_Write_Char
  2502  03B9                     u1227:
  2503  03B9  0BF1               	decfsz	??_LCD_Write_Char,f
  2504  03BA  2BB9               	goto	u1227
  2505  03BB  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2506  03BC  2BB9               	goto	u1227
  2507  03BD  2BBE               	nop2
  2508  03BE                     l1232:
  2509                           
  2510                           ;lcd.c: 137:   RD3 = 0;
  2511  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2512  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2513  03C0  1188               	bcf	8,3	;volatile
  2514  03C1                     l1234:
  2515                           
  2516                           ;lcd.c: 138:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2517  03C1  3004               	movlw	4
  2518  03C2  00F2               	movwf	??_LCD_Write_Char+1
  2519  03C3  303D               	movlw	61
  2520  03C4  00F1               	movwf	??_LCD_Write_Char
  2521  03C5                     u1237:
  2522  03C5  0BF1               	decfsz	??_LCD_Write_Char,f
  2523  03C6  2BC5               	goto	u1237
  2524  03C7  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2525  03C8  2BC5               	goto	u1237
  2526  03C9  2BCA               	nop2
  2527  03CA                     l116:
  2528  03CA  0008               	return
  2529  03CB                     __end_of_LCD_Write_Char:
  2530                           
  2531                           	psect	text12
  2532  0513                     __ptext12:	
  2533 ;; *************** function _LCD_Set_Cursor *****************
  2534 ;; Defined at:
  2535 ;;		line 49 in file "lcd.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  row             1    wreg     unsigned char 
  2538 ;;  column          1    4[COMMON] unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  row             1    7[COMMON] unsigned char 
  2541 ;;  Temp            1   10[COMMON] unsigned char 
  2542 ;;  High4           1    9[COMMON] unsigned char 
  2543 ;;  Low4            1    8[COMMON] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, pclath, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         1       0       0       0       0
  2554 ;;      Locals:         4       0       0       0       0
  2555 ;;      Temps:          2       0       0       0       0
  2556 ;;      Totals:         7       0       0       0       0
  2557 ;;Total ram usage:        7 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 2
  2560 ;; This function calls:
  2561 ;;		_LCD_CMD
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _LCD_Set_Cursor
  2569  0513                     _LCD_Set_Cursor:
  2570                           
  2571                           ;incstack = 0
  2572                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2573                           ;LCD_Set_Cursor@row stored from wreg
  2574  0513  00F7               	movwf	LCD_Set_Cursor@row
  2575  0514                     l1374:
  2576                           
  2577                           ;lcd.c: 49: void LCD_Set_Cursor(unsigned char row, unsigned char column);lcd.c: 50: {;lc
      +                          d.c: 56:   unsigned char Temp,Low4,High4;;lcd.c: 58:   if(row == 1)
  2578  0514  0377               	decf	LCD_Set_Cursor@row,w
  2579  0515  1D03               	btfss	3,2
  2580  0516  2D18               	goto	u931
  2581  0517  2D19               	goto	u930
  2582  0518                     u931:
  2583  0518  2D3C               	goto	l1384
  2584  0519                     u930:
  2585  0519                     l1376:
  2586                           
  2587                           ;lcd.c: 59:   {;lcd.c: 60:     Temp = 0x80 + column - 1;
  2588  0519  0874               	movf	LCD_Set_Cursor@column,w
  2589  051A  3E7F               	addlw	127
  2590  051B  00F5               	movwf	??_LCD_Set_Cursor
  2591  051C  0875               	movf	??_LCD_Set_Cursor,w
  2592  051D  00FA               	movwf	LCD_Set_Cursor@Temp
  2593                           
  2594                           ;lcd.c: 61:     High4 = Temp >> 4;
  2595  051E  087A               	movf	LCD_Set_Cursor@Temp,w
  2596  051F  00F5               	movwf	??_LCD_Set_Cursor
  2597  0520  3004               	movlw	4
  2598  0521                     u945:
  2599  0521  1003               	clrc
  2600  0522  0CF5               	rrf	??_LCD_Set_Cursor,f
  2601  0523  3EFF               	addlw	-1
  2602  0524  1D03               	skipz
  2603  0525  2D21               	goto	u945
  2604  0526  0875               	movf	??_LCD_Set_Cursor,w
  2605  0527  00F6               	movwf	??_LCD_Set_Cursor+1
  2606  0528  0876               	movf	??_LCD_Set_Cursor+1,w
  2607  0529  00F9               	movwf	LCD_Set_Cursor@High4
  2608  052A                     l1378:
  2609                           
  2610                           ;lcd.c: 62:     Low4 = Temp & 0x0F;
  2611  052A  087A               	movf	LCD_Set_Cursor@Temp,w
  2612  052B  390F               	andlw	15
  2613  052C  00F5               	movwf	??_LCD_Set_Cursor
  2614  052D  0875               	movf	??_LCD_Set_Cursor,w
  2615  052E  00F8               	movwf	LCD_Set_Cursor@Low4
  2616  052F                     l1380:
  2617                           
  2618                           ;lcd.c: 63:     LCD_CMD(High4);
  2619  052F  0879               	movf	LCD_Set_Cursor@High4,w
  2620  0530  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2621  0535                     l1382:
  2622                           
  2623                           ;lcd.c: 64:     LCD_CMD(Low4);
  2624  0535  0878               	movf	LCD_Set_Cursor@Low4,w
  2625  0536  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2626                           
  2627                           ;lcd.c: 65:   }
  2628  053B  2DB7               	goto	l110
  2629  053C                     l1384:
  2630  053C  3002               	movlw	2
  2631  053D  0677               	xorwf	LCD_Set_Cursor@row,w
  2632  053E  1D03               	btfss	3,2
  2633  053F  2D41               	goto	u951
  2634  0540  2D42               	goto	u950
  2635  0541                     u951:
  2636  0541  2D65               	goto	l1394
  2637  0542                     u950:
  2638  0542                     l1386:
  2639                           
  2640                           ;lcd.c: 67:   {;lcd.c: 68:     Temp = 0xC0 + column - 1;
  2641  0542  0874               	movf	LCD_Set_Cursor@column,w
  2642  0543  3EBF               	addlw	191
  2643  0544  00F5               	movwf	??_LCD_Set_Cursor
  2644  0545  0875               	movf	??_LCD_Set_Cursor,w
  2645  0546  00FA               	movwf	LCD_Set_Cursor@Temp
  2646                           
  2647                           ;lcd.c: 69:     High4 = Temp >> 4;
  2648  0547  087A               	movf	LCD_Set_Cursor@Temp,w
  2649  0548  00F5               	movwf	??_LCD_Set_Cursor
  2650  0549  3004               	movlw	4
  2651  054A                     u965:
  2652  054A  1003               	clrc
  2653  054B  0CF5               	rrf	??_LCD_Set_Cursor,f
  2654  054C  3EFF               	addlw	-1
  2655  054D  1D03               	skipz
  2656  054E  2D4A               	goto	u965
  2657  054F  0875               	movf	??_LCD_Set_Cursor,w
  2658  0550  00F6               	movwf	??_LCD_Set_Cursor+1
  2659  0551  0876               	movf	??_LCD_Set_Cursor+1,w
  2660  0552  00F9               	movwf	LCD_Set_Cursor@High4
  2661  0553                     l1388:
  2662                           
  2663                           ;lcd.c: 70:     Low4 = Temp & 0x0F;
  2664  0553  087A               	movf	LCD_Set_Cursor@Temp,w
  2665  0554  390F               	andlw	15
  2666  0555  00F5               	movwf	??_LCD_Set_Cursor
  2667  0556  0875               	movf	??_LCD_Set_Cursor,w
  2668  0557  00F8               	movwf	LCD_Set_Cursor@Low4
  2669  0558                     l1390:
  2670                           
  2671                           ;lcd.c: 71:     LCD_CMD(High4);
  2672  0558  0879               	movf	LCD_Set_Cursor@High4,w
  2673  0559  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2674  055E                     l1392:
  2675                           
  2676                           ;lcd.c: 72:     LCD_CMD(Low4);
  2677  055E  0878               	movf	LCD_Set_Cursor@Low4,w
  2678  055F  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2679                           
  2680                           ;lcd.c: 73:   }
  2681  0564  2DB7               	goto	l110
  2682  0565                     l1394:
  2683  0565  3003               	movlw	3
  2684  0566  0677               	xorwf	LCD_Set_Cursor@row,w
  2685  0567  1D03               	btfss	3,2
  2686  0568  2D6A               	goto	u971
  2687  0569  2D6B               	goto	u970
  2688  056A                     u971:
  2689  056A  2D8E               	goto	l1404
  2690  056B                     u970:
  2691  056B                     l1396:
  2692                           
  2693                           ;lcd.c: 75:   {;lcd.c: 76:    Temp = 0x94 + column - 1;
  2694  056B  0874               	movf	LCD_Set_Cursor@column,w
  2695  056C  3E93               	addlw	147
  2696  056D  00F5               	movwf	??_LCD_Set_Cursor
  2697  056E  0875               	movf	??_LCD_Set_Cursor,w
  2698  056F  00FA               	movwf	LCD_Set_Cursor@Temp
  2699                           
  2700                           ;lcd.c: 77:     High4 = Temp >> 4;
  2701  0570  087A               	movf	LCD_Set_Cursor@Temp,w
  2702  0571  00F5               	movwf	??_LCD_Set_Cursor
  2703  0572  3004               	movlw	4
  2704  0573                     u985:
  2705  0573  1003               	clrc
  2706  0574  0CF5               	rrf	??_LCD_Set_Cursor,f
  2707  0575  3EFF               	addlw	-1
  2708  0576  1D03               	skipz
  2709  0577  2D73               	goto	u985
  2710  0578  0875               	movf	??_LCD_Set_Cursor,w
  2711  0579  00F6               	movwf	??_LCD_Set_Cursor+1
  2712  057A  0876               	movf	??_LCD_Set_Cursor+1,w
  2713  057B  00F9               	movwf	LCD_Set_Cursor@High4
  2714  057C                     l1398:
  2715                           
  2716                           ;lcd.c: 78:     Low4 = Temp & 0x0F;
  2717  057C  087A               	movf	LCD_Set_Cursor@Temp,w
  2718  057D  390F               	andlw	15
  2719  057E  00F5               	movwf	??_LCD_Set_Cursor
  2720  057F  0875               	movf	??_LCD_Set_Cursor,w
  2721  0580  00F8               	movwf	LCD_Set_Cursor@Low4
  2722  0581                     l1400:
  2723                           
  2724                           ;lcd.c: 79:     LCD_CMD(High4);
  2725  0581  0879               	movf	LCD_Set_Cursor@High4,w
  2726  0582  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2727  0587                     l1402:
  2728                           
  2729                           ;lcd.c: 80:     LCD_CMD(Low4);
  2730  0587  0878               	movf	LCD_Set_Cursor@Low4,w
  2731  0588  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2732                           
  2733                           ;lcd.c: 81:   }
  2734  058D  2DB7               	goto	l110
  2735  058E                     l1404:
  2736  058E  3004               	movlw	4
  2737  058F  0677               	xorwf	LCD_Set_Cursor@row,w
  2738  0590  1D03               	btfss	3,2
  2739  0591  2D93               	goto	u991
  2740  0592  2D94               	goto	u990
  2741  0593                     u991:
  2742  0593  2DB7               	goto	l106
  2743  0594                     u990:
  2744  0594                     l1406:
  2745                           
  2746                           ;lcd.c: 83:   {;lcd.c: 84:    Temp = 0xD4 + column - 1;
  2747  0594  0874               	movf	LCD_Set_Cursor@column,w
  2748  0595  3ED3               	addlw	211
  2749  0596  00F5               	movwf	??_LCD_Set_Cursor
  2750  0597  0875               	movf	??_LCD_Set_Cursor,w
  2751  0598  00FA               	movwf	LCD_Set_Cursor@Temp
  2752                           
  2753                           ;lcd.c: 85:     High4 = Temp >> 4;
  2754  0599  087A               	movf	LCD_Set_Cursor@Temp,w
  2755  059A  00F5               	movwf	??_LCD_Set_Cursor
  2756  059B  3004               	movlw	4
  2757  059C                     u1005:
  2758  059C  1003               	clrc
  2759  059D  0CF5               	rrf	??_LCD_Set_Cursor,f
  2760  059E  3EFF               	addlw	-1
  2761  059F  1D03               	skipz
  2762  05A0  2D9C               	goto	u1005
  2763  05A1  0875               	movf	??_LCD_Set_Cursor,w
  2764  05A2  00F6               	movwf	??_LCD_Set_Cursor+1
  2765  05A3  0876               	movf	??_LCD_Set_Cursor+1,w
  2766  05A4  00F9               	movwf	LCD_Set_Cursor@High4
  2767  05A5                     l1408:
  2768                           
  2769                           ;lcd.c: 86:     Low4 = Temp & 0x0F;
  2770  05A5  087A               	movf	LCD_Set_Cursor@Temp,w
  2771  05A6  390F               	andlw	15
  2772  05A7  00F5               	movwf	??_LCD_Set_Cursor
  2773  05A8  0875               	movf	??_LCD_Set_Cursor,w
  2774  05A9  00F8               	movwf	LCD_Set_Cursor@Low4
  2775  05AA                     l1410:
  2776                           
  2777                           ;lcd.c: 87:     LCD_CMD(High4);
  2778  05AA  0879               	movf	LCD_Set_Cursor@High4,w
  2779  05AB  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2780  05B0                     l1412:
  2781                           
  2782                           ;lcd.c: 88:     LCD_CMD(Low4);
  2783  05B0  0878               	movf	LCD_Set_Cursor@Low4,w
  2784  05B1  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2785  05B6  2DB7               	goto	l110
  2786  05B7                     l106:
  2787  05B7                     l110:
  2788  05B7  0008               	return
  2789  05B8                     __end_of_LCD_Set_Cursor:
  2790                           
  2791                           	psect	text13
  2792  0431                     __ptext13:	
  2793 ;; *************** function _LCD_Init *****************
  2794 ;; Defined at:
  2795 ;;		line 91 in file "lcd.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0
  2811 ;;      Temps:          2       0       0       0       0
  2812 ;;      Totals:         2       0       0       0       0
  2813 ;;Total ram usage:        2 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 2
  2816 ;; This function calls:
  2817 ;;		_LCD_CMD
  2818 ;;		_LCD_DATA
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _LCD_Init
  2826  0431                     _LCD_Init:
  2827  0431                     l1338:	
  2828                           ;incstack = 0
  2829                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2830                           
  2831                           
  2832                           ;lcd.c: 98:   TRISD = 0x00;
  2833  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2834  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2835  0433  0188               	clrf	8	;volatile
  2836  0434                     l1340:
  2837                           
  2838                           ;lcd.c: 99:   TRISD2 = 0;
  2839  0434  1108               	bcf	8,2	;volatile
  2840  0435                     l1342:
  2841                           
  2842                           ;lcd.c: 100:   TRISD3 = 0;
  2843  0435  1188               	bcf	8,3	;volatile
  2844  0436                     l1344:
  2845                           
  2846                           ;lcd.c: 102:   LCD_DATA(0x00);
  2847  0436  3000               	movlw	0
  2848  0437  120A  118A  22B3  120A  118A  	fcall	_LCD_DATA
  2849  043C                     l1346:
  2850                           
  2851                           ;lcd.c: 103:   _delay((unsigned long)((30)*(20000000/4000.0)));
  2852  043C  30C3               	movlw	195
  2853  043D  00F5               	movwf	??_LCD_Init+1
  2854  043E  30CD               	movlw	205
  2855  043F  00F4               	movwf	??_LCD_Init
  2856  0440                     u1247:
  2857  0440  0BF4               	decfsz	??_LCD_Init,f
  2858  0441  2C40               	goto	u1247
  2859  0442  0BF5               	decfsz	??_LCD_Init+1,f
  2860  0443  2C40               	goto	u1247
  2861  0444                     l1348:
  2862                           
  2863                           ;lcd.c: 104:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2864  0444  3004               	movlw	4
  2865  0445  00F5               	movwf	??_LCD_Init+1
  2866  0446  303D               	movlw	61
  2867  0447  00F4               	movwf	??_LCD_Init
  2868  0448                     u1257:
  2869  0448  0BF4               	decfsz	??_LCD_Init,f
  2870  0449  2C48               	goto	u1257
  2871  044A  0BF5               	decfsz	??_LCD_Init+1,f
  2872  044B  2C48               	goto	u1257
  2873  044C  2C4D               	nop2
  2874  044D                     l1350:
  2875                           
  2876                           ;lcd.c: 105:   LCD_CMD(0x03);
  2877  044D  3003               	movlw	3
  2878  044E  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2879  0453                     l1352:
  2880                           
  2881                           ;lcd.c: 106:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2882  0453  3021               	movlw	33
  2883  0454  00F5               	movwf	??_LCD_Init+1
  2884  0455  3076               	movlw	118
  2885  0456  00F4               	movwf	??_LCD_Init
  2886  0457                     u1267:
  2887  0457  0BF4               	decfsz	??_LCD_Init,f
  2888  0458  2C57               	goto	u1267
  2889  0459  0BF5               	decfsz	??_LCD_Init+1,f
  2890  045A  2C57               	goto	u1267
  2891  045B  0000               	nop
  2892  045C                     l1354:
  2893                           
  2894                           ;lcd.c: 107:   LCD_CMD(0x03);
  2895  045C  3003               	movlw	3
  2896  045D  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2897  0462                     l1356:
  2898                           
  2899                           ;lcd.c: 108:   _delay((unsigned long)((150)*(20000000/4000000.0)));
  2900  0462  30F9               	movlw	249
  2901  0463  00F4               	movwf	??_LCD_Init
  2902  0464                     u1277:
  2903  0464  0BF4               	decfsz	??_LCD_Init,f
  2904  0465  2C64               	goto	u1277
  2905  0466  2C67               	nop2
  2906  0467                     l1358:
  2907                           
  2908                           ;lcd.c: 109:   LCD_CMD(0x03);
  2909  0467  3003               	movlw	3
  2910  0468  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2911  046D                     l1360:
  2912                           
  2913                           ;lcd.c: 110:   LCD_CMD(0x02);
  2914  046D  3002               	movlw	2
  2915  046E  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2916  0473                     l1362:
  2917                           
  2918                           ;lcd.c: 111:   LCD_CMD(0x02);
  2919  0473  3002               	movlw	2
  2920  0474  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2921  0479                     l1364:
  2922                           
  2923                           ;lcd.c: 112:   LCD_CMD(0x08);
  2924  0479  3008               	movlw	8
  2925  047A  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2926  047F                     l1366:
  2927                           
  2928                           ;lcd.c: 113:   LCD_CMD(0x00);
  2929  047F  3000               	movlw	0
  2930  0480  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2931  0485                     l1368:
  2932                           
  2933                           ;lcd.c: 114:   LCD_CMD(0x0C);
  2934  0485  300C               	movlw	12
  2935  0486  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2936  048B                     l1370:
  2937                           
  2938                           ;lcd.c: 115:   LCD_CMD(0x00);
  2939  048B  3000               	movlw	0
  2940  048C  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2941  0491                     l1372:
  2942                           
  2943                           ;lcd.c: 116:   LCD_CMD(0x06);
  2944  0491  3006               	movlw	6
  2945  0492  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2946  0497                     l113:
  2947  0497  0008               	return
  2948  0498                     __end_of_LCD_Init:
  2949                           
  2950                           	psect	text14
  2951  0264                     __ptext14:	
  2952 ;; *************** function _LCD_Clear *****************
  2953 ;; Defined at:
  2954 ;;		line 41 in file "lcd.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2968 ;;      Params:         0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0
  2971 ;;      Totals:         0       0       0       0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 2
  2975 ;; This function calls:
  2976 ;;		_LCD_CMD
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _LCD_Clear
  2984  0264                     _LCD_Clear:
  2985  0264                     l1422:	
  2986                           ;incstack = 0
  2987                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2988                           
  2989                           
  2990                           ;lcd.c: 46:   LCD_CMD(0);
  2991  0264  3000               	movlw	0
  2992  0265  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2993                           
  2994                           ;lcd.c: 47:   LCD_CMD(1);
  2995  026A  3001               	movlw	1
  2996  026B  120A  118A  2299  120A  118A  	fcall	_LCD_CMD
  2997  0270                     l100:
  2998  0270  0008               	return
  2999  0271                     __end_of_LCD_Clear:
  3000                           
  3001                           	psect	text15
  3002  0299                     __ptext15:	
  3003 ;; *************** function _LCD_CMD *****************
  3004 ;; Defined at:
  3005 ;;		line 28 in file "lcd.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  CMD             1    wreg     unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  CMD             1    3[COMMON] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         0       0       0       0       0
  3020 ;;      Locals:         1       0       0       0       0
  3021 ;;      Temps:          2       0       0       0       0
  3022 ;;      Totals:         3       0       0       0       0
  3023 ;;Total ram usage:        3 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 1
  3026 ;; This function calls:
  3027 ;;		_LCD_DATA
  3028 ;; This function is called by:
  3029 ;;		_LCD_Clear
  3030 ;;		_LCD_Set_Cursor
  3031 ;;		_LCD_Init
  3032 ;;		_LCD_SL
  3033 ;;		_LCD_SR
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _LCD_CMD
  3039  0299                     _LCD_CMD:
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3043                           ;LCD_CMD@CMD stored from wreg
  3044  0299  00F3               	movwf	LCD_CMD@CMD
  3045  029A                     l1202:
  3046                           
  3047                           ;lcd.c: 28: void LCD_CMD(unsigned char CMD);lcd.c: 29: {;lcd.c: 33:   RD2 = 0;
  3048  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3049  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3050  029C  1108               	bcf	8,2	;volatile
  3051  029D                     l1204:
  3052                           
  3053                           ;lcd.c: 34:   LCD_DATA(CMD);
  3054  029D  0873               	movf	LCD_CMD@CMD,w
  3055  029E  120A  118A  22B3  120A  118A  	fcall	_LCD_DATA
  3056  02A3                     l1206:
  3057                           
  3058                           ;lcd.c: 35:   RD3 = 1;
  3059  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3060  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  3061  02A5  1588               	bsf	8,3	;volatile
  3062  02A6                     l1208:
  3063                           
  3064                           ;lcd.c: 36:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3065  02A6  3004               	movlw	4
  3066  02A7  00F2               	movwf	??_LCD_CMD+1
  3067  02A8  303D               	movlw	61
  3068  02A9  00F1               	movwf	??_LCD_CMD
  3069  02AA                     u1287:
  3070  02AA  0BF1               	decfsz	??_LCD_CMD,f
  3071  02AB  2AAA               	goto	u1287
  3072  02AC  0BF2               	decfsz	??_LCD_CMD+1,f
  3073  02AD  2AAA               	goto	u1287
  3074  02AE  2AAF               	nop2
  3075  02AF                     l1210:
  3076                           
  3077                           ;lcd.c: 37:   RD3 = 0;
  3078  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3079  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3080  02B1  1188               	bcf	8,3	;volatile
  3081  02B2                     l97:
  3082  02B2  0008               	return
  3083  02B3                     __end_of_LCD_CMD:
  3084                           
  3085                           	psect	text16
  3086  02B3                     __ptext16:	
  3087 ;; *************** function _LCD_DATA *****************
  3088 ;; Defined at:
  3089 ;;		line 4 in file "lcd.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  Data            1    wreg     unsigned char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  Data            1    0[COMMON] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       0       0       0       0
  3104 ;;      Locals:         1       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         1       0       0       0       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_LCD_CMD
  3113 ;;		_LCD_Init
  3114 ;;		_LCD_Write_Char
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function _LCD_DATA
  3120  02B3                     _LCD_DATA:
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _LCD_DATA: [wreg]
  3124                           ;LCD_DATA@Data stored from wreg
  3125  02B3  00F0               	movwf	LCD_DATA@Data
  3126  02B4                     l1192:
  3127                           
  3128                           ;lcd.c: 4: void LCD_DATA(unsigned char Data);lcd.c: 5: {;lcd.c: 9:   if(Data & 1)
  3129  02B4  1C70               	btfss	LCD_DATA@Data,0
  3130  02B5  2AB7               	goto	u601
  3131  02B6  2AB8               	goto	u600
  3132  02B7                     u601:
  3133  02B7  2ABC               	goto	l86
  3134  02B8                     u600:
  3135  02B8                     l1194:
  3136                           
  3137                           ;lcd.c: 10:     RD4 = 1;
  3138  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3139  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  3140  02BA  1608               	bsf	8,4	;volatile
  3141  02BB  2ABF               	goto	l87
  3142  02BC                     l86:	
  3143                           ;lcd.c: 11:   else
  3144                           
  3145                           
  3146                           ;lcd.c: 12:     RD4 = 0;
  3147  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3148  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3149  02BE  1208               	bcf	8,4	;volatile
  3150  02BF                     l87:
  3151                           
  3152                           ;lcd.c: 13:   if(Data & 2)
  3153  02BF  1CF0               	btfss	LCD_DATA@Data,1
  3154  02C0  2AC2               	goto	u611
  3155  02C1  2AC3               	goto	u610
  3156  02C2                     u611:
  3157  02C2  2AC5               	goto	l88
  3158  02C3                     u610:
  3159  02C3                     l1196:
  3160                           
  3161                           ;lcd.c: 14:     RD5 = 1;
  3162  02C3  1688               	bsf	8,5	;volatile
  3163  02C4  2AC6               	goto	l89
  3164  02C5                     l88:	
  3165                           ;lcd.c: 15:   else
  3166                           
  3167                           
  3168                           ;lcd.c: 16:     RD5 = 0;
  3169  02C5  1288               	bcf	8,5	;volatile
  3170  02C6                     l89:
  3171                           
  3172                           ;lcd.c: 17:   if(Data & 4)
  3173  02C6  1D70               	btfss	LCD_DATA@Data,2
  3174  02C7  2AC9               	goto	u621
  3175  02C8  2ACA               	goto	u620
  3176  02C9                     u621:
  3177  02C9  2ACC               	goto	l90
  3178  02CA                     u620:
  3179  02CA                     l1198:
  3180                           
  3181                           ;lcd.c: 18:     RD6 = 1;
  3182  02CA  1708               	bsf	8,6	;volatile
  3183  02CB  2ACD               	goto	l91
  3184  02CC                     l90:	
  3185                           ;lcd.c: 19:   else
  3186                           
  3187                           
  3188                           ;lcd.c: 20:     RD6 = 0;
  3189  02CC  1308               	bcf	8,6	;volatile
  3190  02CD                     l91:
  3191                           
  3192                           ;lcd.c: 21:   if(Data & 8)
  3193  02CD  1DF0               	btfss	LCD_DATA@Data,3
  3194  02CE  2AD0               	goto	u631
  3195  02CF  2AD1               	goto	u630
  3196  02D0                     u631:
  3197  02D0  2AD3               	goto	l92
  3198  02D1                     u630:
  3199  02D1                     l1200:
  3200                           
  3201                           ;lcd.c: 22:     RD7 = 1;
  3202  02D1  1788               	bsf	8,7	;volatile
  3203  02D2  2AD4               	goto	l94
  3204  02D3                     l92:	
  3205                           ;lcd.c: 23:   else
  3206                           
  3207                           
  3208                           ;lcd.c: 24:     RD7 = 0;
  3209  02D3  1388               	bcf	8,7	;volatile
  3210  02D4                     l94:
  3211  02D4  0008               	return
  3212  02D5                     __end_of_LCD_DATA:
  3213  007E                     btemp	set	126	;btemp
  3214  007E                     wtemp0	set	126
  3215                           
  3216                           	psect	config
  3217                           
  3218                           ;Config register CONFIG @ 0x2007
  3219                           ;	Oscillator Selection bits
  3220                           ;	FOSC = HS, HS oscillator
  3221                           ;	Watchdog Timer Enable bit
  3222                           ;	WDTE = OFF, WDT disabled
  3223                           ;	Power-up Timer Enable bit
  3224                           ;	PWRTE = ON, PWRT enabled
  3225                           ;	Brown-out Reset Enable bit
  3226                           ;	BOREN = ON, BOR enabled
  3227                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3228                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3229                           ;	Data EEPROM Memory Code Protection bit
  3230                           ;	CPD = OFF, Data EEPROM code protection off
  3231                           ;	Flash Program Memory Write Enable bits
  3232                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3233                           ;	In-Circuit Debugger Mode bit
  3234                           ;	DEBUG = 0x1, unprogrammed default
  3235                           ;	Flash Program Memory Code Protection bit
  3236                           ;	CP = OFF, Code protection off
  3237  2007                     	org	8199
  3238  2007  3FF2               	dw	16370

Data Sizes:
    Strings     13
    Constant    0
    Data        5
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 5
		 -> w_data(BANK0[5]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 5
		 -> w_data(BANK0[5]), 

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _UART_Init->___lldiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Number->___lwdiv
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _main in BANK0

    _main->_LCD_Write_Number

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    4048
                                             25 BANK0      9     9      0
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_Number
                   _LCD_Write_String
                    _UART_Data_Ready
                          _UART_Init
                     _UART_Read_Char
                    _UART_Write_Char
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     698
                                              0 BANK0     18    14      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     433
                                              6 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Number                                    29    27      2    1274
                                              8 COMMON     4     2      2
                                              0 BANK0     25    25      0
                     _LCD_Write_Char
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1030
                                              4 COMMON     7     6      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Init
     _LCD_CMD
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_Number
     _LCD_Write_Char
       _LCD_DATA
     ___lwdiv
     ___lwmod
   _LCD_Write_String
     _LCD_Write_Char
   _UART_Data_Ready
   _UART_Init
     ___lldiv
   _UART_Read_Char
   _UART_Write_Char
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      41      12        0.0%
ABS                  0      0      41       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 14 05:37:01 2022

                        _a 004C                          pc 0002                         l45 06D6  
                       l48 06FD                         l90 02CC                         l91 02CD  
                       l92 02D3                         l94 02D4                         l86 02BC  
                       l87 02BF                         l88 02C5                         l89 02C6  
                       l97 02B2                         fsr 0004                        l100 0270  
                      l110 05B7                        l113 0497                        l201 027D  
                      l106 05B7                        l122 02F9                        l202 027F  
                      l116 03CA                        l330 0430                        l139 0512  
                      l174 0679                        l183 025B                        l177 069D  
                      l186 0263                        l195 0259                        l199 0279  
                      l566 0377                        l576 0333                        l748 0298  
                      _RB0 0030                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u600 02B8                        u601 02B7  
                      u610 02C3                        u611 02C2                        u620 02CA  
                      u621 02C9                        u630 02D1                        u710 0428  
                      u631 02D0                        u711 0427                        u720 033C  
                      u721 033B                        u705 041A                        u810 0312  
                      u650 03DB                        u811 0311                        u651 03DA  
                      u740 034E                        u820 031C                        u900 0643  
                      u645 0389                        u741 034D                        u821 031B  
                      u805 0304                        u670 03EF                        u735 0340  
                      u671 03EE                        u911 0655                        u760 035F  
                      u840 032F                        u920 0687                        u912 0656  
                      u761 035E                        u841 032E                        u825 0318  
                      u665 03E0                        u921 0686                        u913 065B  
                      u905 063E                        u930 0519                        u690 040A  
                      u914 065C                        u850 05C8                        u931 0518  
                      u755 034F                        u835 0323                        u691 0409  
                      u915 0661                        u780 0373                        u916 0662  
                      u860 05E1                        u781 0372                        u765 035B  
                      u685 03F1                        u950 0542                        u790 0300  
                      u951 0541                        u775 0367                        u791 02FF  
                      u695 0406                        u871 05F3                        u855 05C3  
                      u880 061C                        u872 05F4                        u945 0521  
                      u881 061B                        u873 05F9                        u865 05DC  
                      _RX9 00C6                        u970 056B                        u890 062A  
                      u874 05FA                        u971 056A                        u875 05FF  
                      u876 0600                        u965 054A                        u990 0594  
                      u991 0593                        u895 0625                        u985 0573  
                      _TX9 04C6                        fsr0 0004                        indf 0000  
          __end_of_LCD_CMD 02B3             _LCD_Set_Cursor 0513                       l1200 02D1  
                     l1210 02AF                       l1202 029A                       l1204 029D  
                     l1220 0397                       l1212 0379                       l1300 0322  
                     l1206 02A3                       l1230 03B5                       l1222 03A0  
                     l1214 0383                       l1302 0329                       l1310 0613  
                     l1208 02A6                       l1400 0581                       l1232 03BE  
                     l1224 03A3                       l1216 0386                       l1304 032F  
                     l1240 03DE                       l1320 068B                       l1312 061C  
                     l1410 05AA                       l1402 0587                       l1234 03C1  
                     l1226 03AC                       l1218 0394                       l1250 0418  
                     l1242 03EB                       l1330 0694                       l1322 068C  
                     l1314 0675                       l1340 0434                       l1412 05B0  
                     l1404 058E                       l1228 03B2                       l1260 0334  
                     l1420 02EC                       l1252 0419                       l1244 03EF  
                     l1236 03CB                       l1332 0697                       l1324 068F  
                     l1316 067C                       l1308 05B8                       l1500 06CB  
                     l1422 0264                       l1350 044D                       l1342 0435  
                     l1406 0594                       l1270 034A                       l1262 0336  
                     l1414 02D6                       l1254 0422                       l1246 03F8  
                     l1238 03DB                       l1334 069A                       l1326 0692  
                     l1318 0687                       l1430 0286                       l1510 06E7  
                     l1502 06D0                       l1192 02B4                       l1360 046D  
                     l1352 0453                       l1344 0436                       l1408 05A5  
                     l1280 036D                       l1272 034E                       l1264 033C  
                     l1416 02D9                       l1248 040A                       l1256 0428  
                     l1328 0693                       l1424 025B                       l1432 028A  
                     l1520 072D                       l1512 06F5                       l1194 02B8  
                     l1370 048B                       l1362 0473                       l1354 045C  
                     l1346 043C                       l1338 0431                       l1274 035F  
                     l1266 033F                       l1282 0373                       l1290 0303  
                     l1450 0498                       l1418 02E6                       l1442 0271  
                     l1426 0261                       l1434 0292                       l1530 0758  
                     l1522 073A                       l1506 06DA                       l1514 070F  
                     l1196 02C3                       l1372 0491                       l1364 0479  
                     l1356 0462                       l1348 0444                       l1380 052F  
                     l1276 0365                       l1268 0346                       l1292 030A  
                     l1452 049C                       l1444 0277                       l1428 0281  
                     l1540 078B                       l1532 075D                       l1516 0719  
                     l1524 073E                       l1508 06DD                       l1198 02CA  
                     l1366 047F                       l1358 0467                       l1390 0558  
                     l1382 0535                       l1374 0514                       l1278 0366  
                     l1294 030E                       l1286 02FA                       l1470 04E9  
                     l1462 04B0                       l1454 04A2                       l1438 0254  
                     l1446 027E                       l1550 07A1                       l1542 0791  
                     l1534 0772                       l1526 0746                       l1518 0727  
                     l1368 0485                       l1392 055E                       l1376 0519  
                     l1384 053C                       l1296 0312                       l1288 0300  
                     l1480 0509                       l1472 04F3                       l1464 04CA  
                     l1456 04A2                       l1552 07B9                       l1544 079D  
                     l1536 077A                       l1528 074C                       l1386 0542  
                     l1394 0565                       l1378 052A                       l1298 031C  
                     l1466 04DB                       l1458 04A9                       l1554 07C1  
                     l1538 0783                       l1490 06A6                       l1396 056B  
                     l1388 0553                       l1476 04F8                       l1468 04E3  
                     l1492 06A9                       l1484 069E                       l1398 057C  
                     l1478 0503                       l1494 06B8                       l1486 06A2  
                     l1496 06BD                       l1488 06A3                       l1498 06C5  
      LCD_Write_String@str 0078                       STR_1 0009                       STR_2 0010  
                     STR_3 0012                       STR_4 0014                       STR_5 0012  
                     _BRGH 04C2                       _CREN 00C4                       u1010 02F9  
                     u1011 02F8                       u1020 0261                       u1100 06D6  
                     u1005 059C                       u1021 0260                       u1101 06D5  
                     u1030 0292                       u1110 06DA                       u1031 0291  
                     u1111 06D9                       u1040 0277                       u1120 070F  
                     u1041 0276                       u1121 070E                       u1050 027D  
                     u1130 0719                       u1051 027C                       u1131 0718  
                     u1060 04A2                       u1140 073A                       u1061 04A1  
                     u1141 0739                       u1125 070B                       u1070 04AF  
                     u1150 0783                       u1207 039B                       u1071 04AE  
                     u1151 0782                       u1080 04E9                       u1160 07CE  
                     u1217 03A7                       u1081 04E8                       u1161 07CD  
                     u1145 0736                       u1090 04F7                       u1227 03B9  
                     u1091 04F6                       u1237 03C5                       u1165 07CA  
                     u1247 0440                       u1257 0448                       u1267 0457  
                     u1277 0464                       u1197 06EF                       u1287 02AA  
                     _RCIF 0065                       _OERR 00C1                       _SPEN 00C7  
                     _TRMT 04C1                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4          ?_LCD_Write_Number 0078          ?_LCD_Write_String 0070  
                     _main 069E         __size_of_LCD_Clear 000D                       btemp 007E  
       ??_LCD_Write_Number 007A                       start 0000         ??_LCD_Write_String 0076  
  __end_of_UART_Write_Char 0264           __end_of_LCD_DATA 02D5           __end_of_LCD_Init 0498  
                    ?_main 0070            __end_of___lldiv 0431            __end_of___lwdiv 0378  
          __end_of___lwmod 0334                      _RCREG 001A                      _SPBRG 0099  
                    _TRISD 0088                      _TXREG 0019     __end_of_LCD_Set_Cursor 05B8  
       __size_of_UART_Init 00E6                      main@k 003E                      main@t 003C  
                    pclath 000A                      status 0003                      wtemp0 007E  
           _LCD_Write_Char 0378            __initialization 07D2               __end_of_main 07D2  
                   ??_main 0039          __end_of_LCD_Clear 0271                  ??_LCD_CMD 0071  
          ?_LCD_Set_Cursor 0074                     _ADCON1 009F                     _TRISB0 0430  
                   _TRISD2 0442                     _TRISD3 0443                     _TRISC6 043E  
                   _TRISC7 043F     __end_of_LCD_Write_Char 03CB          __end_of_UART_Init 069E  
         ?_UART_Write_Char 0070                  ??___lldiv 0078                  ??___lwdiv 0074  
                ??___lwmod 0074    __size_of_UART_Read_Char 000F                     _r_data 0042  
                   _w_data 004E                     _strlen 0280     UART_Init@uart_baudRate 0020  
                ?_LCD_DATA 0070    __end_of__initialization 07FC                  ?_LCD_Init 0070  
          ?_LCD_Write_Char 0070             __pcstackCOMMON 0070               __pidataBANK0 024F  
               __pbssBANK0 0042                 ??_LCD_DATA 0070                 ??_LCD_Init 0074  
 __size_of_UART_Data_Ready 0006                 __pmaintext 069E  __size_of_LCD_Write_Number 007B  
__size_of_LCD_Write_String 0025                    ?_strlen 0070                    _LCD_CMD 0299  
               __stringtab 0003             _UART_Read_Char 0271                    ___lldiv 03CB  
                  ___lwdiv 0334                    ___lwmod 02FA           ??_LCD_Set_Cursor 0075  
                  __ptext1 0280                    __ptext2 025A                    __ptext3 0271  
                  __ptext4 05B8                    __ptext5 03CB                    __ptext6 0254  
                  __ptext7 02D5                    __ptext8 0498                    __ptext9 02FA  
          __size_of_strlen 0019                  _LCD_Clear 0264       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D     __end_of_UART_Read_Char 0280  
        ??_UART_Data_Ready 0070                    strlen@s 0073                  _UART_Init 05B8  
                _PORTAbits 0005                 LCD_CMD@CMD 0073          LCD_Write_Number@c 0036  
        LCD_Write_Number@k 0034          LCD_Write_Number@p 0037                  _TRISAbits 0085  
               ?_LCD_Clear 0070          LCD_Write_String@i 0076           ??_LCD_Write_Char 0071  
        __size_of_LCD_DATA 0022          __size_of_LCD_Init 0067            ?_UART_Read_Char 0070  
         _LCD_Write_Number 0498           _LCD_Write_String 02D5                 ?_UART_Init 0020  
 __size_of_UART_Write_Char 000A             __end_of_strlen 0299        start_initialization 07D2  
              __pdataBANK0 004E                   ??_strlen 0072                   ?_LCD_CMD 0070  
                ___latbits 0002              __pcstackBANK0 0020                ??_LCD_Clear 0074  
         ___lwdiv@dividend 0072                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0070                ??_UART_Init 0024                  __pstrings 0003  
         ___lwdiv@quotient 0075          ??_UART_Write_Char 0070                 UART_Init@x 0030  
                 _LCD_DATA 02B3                   _LCD_Init 0431            _UART_Data_Ready 0254  
              __stringbase 0008                  main@k_138 0040           __size_of_LCD_CMD 001A  
     LCD_Set_Cursor@column 0074   __end_of_LCD_Write_Number 0513   __end_of_LCD_Write_String 02FA  
         ??_UART_Read_Char 0070        LCD_Write_Char@High4 0074           __size_of___lldiv 0066  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0009  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 0334  
                 __ptext11 0378                   __ptext12 0513                   __ptext13 0431  
                 __ptext14 0264                   __ptext15 0299                   __ptext16 02B3  
  __end_of_UART_Data_Ready 025A    __size_of_LCD_Set_Cursor 00A5              __size_of_main 0134  
      LCD_Set_Cursor@High4 0079     LCD_Write_Number@number 0078         LCD_Write_Char@Data 0075  
       LCD_Write_Char@Low4 0073           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 0003    __size_of_LCD_Write_Char 0053         LCD_Set_Cursor@Low4 0078  
        UART_Write_Char@ch 0070         LCD_Set_Cursor@Temp 007A            _UART_Write_Char 025A  
             LCD_DATA@Data 0070           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
                 strlen@cp 0074            ___lwmod@counter 0075                   stringdir 0003  
                 stringtab 0003          LCD_Set_Cursor@row 0077           ?_UART_Data_Ready 0070  
      LCD_Write_Number@num 0020  
