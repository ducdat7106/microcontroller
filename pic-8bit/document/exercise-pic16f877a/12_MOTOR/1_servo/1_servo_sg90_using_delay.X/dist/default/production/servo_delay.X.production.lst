

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jan 02 14:48:15 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172                           
   173                           	psect	idataCOMMON
   174  00F5                     __pidataCOMMON:
   175                           
   176                           ;initializer for _degree
   177  00F5  34FF               	retlw	255
   178  00F6  34FF               	retlw	255
   179  0036                     _RB6	set	54
   180  0035                     _RB5	set	53
   181  0034                     _RB4	set	52
   182  005F                     _GIE	set	95
   183  0058                     _RBIF	set	88
   184  005B                     _RBIE	set	91
   185  0047                     _RD7	set	71
   186  009F                     _ADCON1	set	159
   187  0447                     _TRISD7	set	1095
   188                           
   189                           	psect	cinit
   190  000F                     start_initialization:	
   191                           ; #config settings
   192                           
   193  000F                     __initialization:
   194                           
   195                           ; Initialize objects allocated to COMMON
   196  000F  120A  118A  20F5  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   197  0014  00F6               	movwf	__pdataCOMMON& (0+127)
   198  0015  120A  118A  20F6  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   199  001A  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   200  001B                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  001B                     __end_of__initialization:
   204  001B  0183               	clrf	3
   205  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	dataCOMMON
   208  0076                     __pdataCOMMON:
   209  0076                     _degree:
   210  0076                     	ds	2
   211                           
   212                           	psect	cstackCOMMON
   213  0070                     __pcstackCOMMON:
   214  0070                     ?_servoRotate0:
   215  0070                     ?_servoRotate90:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_servoRotate180:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_change:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_portB:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ??_portB:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           ; 1 bytes @ 0x0
   235  0070                     	ds	2
   236  0072                     ??_servoRotate0:
   237  0072                     ??_servoRotate90:	
   238                           ; 1 bytes @ 0x2
   239                           
   240  0072                     ??_servoRotate180:	
   241                           ; 1 bytes @ 0x2
   242                           
   243  0072                     ??_change:	
   244                           ; 1 bytes @ 0x2
   245                           
   246                           
   247                           ; 1 bytes @ 0x2
   248  0072                     	ds	2
   249  0074                     servoRotate0@i:
   250  0074                     servoRotate90@i:	
   251                           ; 2 bytes @ 0x4
   252                           
   253  0074                     servoRotate180@i:	
   254                           ; 2 bytes @ 0x4
   255                           
   256                           
   257                           ; 2 bytes @ 0x4
   258  0074                     	ds	2
   259  0076                     ??_main:
   260                           
   261                           	psect	maintext
   262  001F                     __pmaintext:	
   263                           ; 1 bytes @ 0x6
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 78 in file "main.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, status,2, status,0, pclath, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : B00/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   283 ;;      Params:         0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0
   285 ;;      Temps:          0       0       0       0       0
   286 ;;      Totals:         0       0       0       0       0
   287 ;;Total ram usage:        0 bytes
   288 ;; Hardware stack levels required when called:    2
   289 ;; This function calls:
   290 ;;		_change
   291 ;;		_servoRotate0
   292 ;;		_servoRotate180
   293 ;;		_servoRotate90
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           
   300                           ;psect for function _main
   301  001F                     _main:
   302  001F                     l701:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   305                           
   306  001F  3006               	movlw	6
   307  0020  1683               	bsf	3,5	;RP0=1, select bank1
   308  0021  1303               	bcf	3,6	;RP1=0, select bank1
   309  0022  009F               	movwf	31	;volatile
   310  0023                     l703:
   311  0023  1388               	bcf	8,7	;volatile
   312  0024                     l705:
   313  0024  120A  118A  20F1  120A  118A  	fcall	_change
   314  0029                     l707:
   315  0029  0876               	movf	_degree,w
   316  002A  0477               	iorwf	_degree+1,w
   317  002B  1D03               	btfss	3,2
   318  002C  282E               	goto	u91
   319  002D  282F               	goto	u90
   320  002E                     u91:
   321  002E  2834               	goto	l711
   322  002F                     u90:
   323  002F                     l709:
   324  002F  120A  118A  20CA  120A  118A  	fcall	_servoRotate0
   325  0034                     l711:
   326  0034  305A               	movlw	90
   327  0035  0676               	xorwf	_degree,w
   328  0036  0477               	iorwf	_degree+1,w
   329  0037  1D03               	btfss	3,2
   330  0038  283A               	goto	u101
   331  0039  283B               	goto	u100
   332  003A                     u101:
   333  003A  2840               	goto	l715
   334  003B                     u100:
   335  003B                     l713:
   336  003B  120A  118A  2050  120A  118A  	fcall	_servoRotate90
   337  0040                     l715:
   338  0040  30B4               	movlw	180
   339  0041  0676               	xorwf	_degree,w
   340  0042  0477               	iorwf	_degree+1,w
   341  0043  1D03               	btfss	3,2
   342  0044  2846               	goto	u111
   343  0045  2847               	goto	u110
   344  0046                     u111:
   345  0046  2829               	goto	l707
   346  0047                     u110:
   347  0047                     l717:
   348  0047  120A  118A  207A  120A  118A  	fcall	_servoRotate180
   349  004C  2829               	goto	l707
   350  004D  120A  118A  280C   	ljmp	start
   351  0050                     __end_of_main:
   352                           
   353                           	psect	text1
   354  0050                     __ptext1:	
   355 ;; *************** function _servoRotate90 *****************
   356 ;; Defined at:
   357 ;;		line 35 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;  i               2    4[COMMON] unsigned int 
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         2       0       0       0       0
   373 ;;      Temps:          2       0       0       0       0
   374 ;;      Totals:         4       0       0       0       0
   375 ;;Total ram usage:        4 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; Hardware stack levels required when called:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           
   386                           ;psect for function _servoRotate90
   387  0050                     _servoRotate90:
   388  0050                     l661:	
   389                           ;incstack = 0
   390                           ; Regs used in _servoRotate90: [wreg+status,2]
   391                           
   392                           
   393                           ;main.c: 37: void change();main.c: 38: {
   394  0050  01F4               	clrf	servoRotate90@i
   395  0051  01F5               	clrf	servoRotate90@i+1
   396  0052                     l30:
   397                           
   398                           ;main.c: 39:     RBIE=1;;main.c: 40:     RBIF=0;
   399  0052  1283               	bcf	3,5	;RP0=0, select bank0
   400  0053  1303               	bcf	3,6	;RP1=0, select bank0
   401  0054  1788               	bsf	8,7	;volatile
   402  0055                     l667:
   403                           
   404                           ;main.c: 41:     GIE=1;
   405  0055  3004               	movlw	4
   406  0056  00F3               	movwf	??_servoRotate90+1
   407  0057  30E4               	movlw	228
   408  0058  00F2               	movwf	??_servoRotate90
   409  0059                     u127:
   410  0059  0BF2               	decfsz	??_servoRotate90,f
   411  005A  2859               	goto	u127
   412  005B  0BF3               	decfsz	??_servoRotate90+1,f
   413  005C  2859               	goto	u127
   414  005D  0000               	nop
   415  005E                     l669:
   416                           
   417                           ;main.c: 42: }
   418  005E  1283               	bcf	3,5	;RP0=0, select bank0
   419  005F  1303               	bcf	3,6	;RP1=0, select bank0
   420  0060  1388               	bcf	8,7	;volatile
   421                           
   422                           ;main.c: 43: 
   423  0061  3031               	movlw	49
   424  0062  00F3               	movwf	??_servoRotate90+1
   425  0063  300B               	movlw	11
   426  0064  00F2               	movwf	??_servoRotate90
   427  0065                     u137:
   428  0065  0BF2               	decfsz	??_servoRotate90,f
   429  0066  2865               	goto	u137
   430  0067  0BF3               	decfsz	??_servoRotate90+1,f
   431  0068  2865               	goto	u137
   432  0069  286A               	nop2
   433                           
   434                           ;main.c: 44: void __attribute__((picinterrupt(("")))) portB()
   435  006A  3001               	movlw	1
   436  006B  07F4               	addwf	servoRotate90@i,f
   437  006C  1803               	skipnc
   438  006D  0AF5               	incf	servoRotate90@i+1,f
   439  006E  3000               	movlw	0
   440  006F  07F5               	addwf	servoRotate90@i+1,f
   441  0070  3000               	movlw	0
   442  0071  0275               	subwf	servoRotate90@i+1,w
   443  0072  3032               	movlw	50
   444  0073  1903               	skipnz
   445  0074  0274               	subwf	servoRotate90@i,w
   446  0075  1C03               	skipc
   447  0076  2878               	goto	u21
   448  0077  2879               	goto	u20
   449  0078                     u21:
   450  0078  2852               	goto	l30
   451  0079                     u20:
   452  0079                     l32:
   453  0079  0008               	return
   454  007A                     __end_of_servoRotate90:
   455                           
   456                           	psect	text2
   457  007A                     __ptext2:	
   458 ;; *************** function _servoRotate180 *****************
   459 ;; Defined at:
   460 ;;		line 47 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  i               2    4[COMMON] unsigned int 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         2       0       0       0       0
   476 ;;      Temps:          2       0       0       0       0
   477 ;;      Totals:         4       0       0       0       0
   478 ;;Total ram usage:        4 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _servoRotate180
   490  007A                     _servoRotate180:
   491  007A                     l671:	
   492                           ;incstack = 0
   493                           ; Regs used in _servoRotate180: [wreg+status,2]
   494                           
   495                           
   496                           ;main.c: 49:             degree = 0;;main.c: 50:         if(!RB5)
   497  007A  01F4               	clrf	servoRotate180@i
   498  007B  01F5               	clrf	servoRotate180@i+1
   499  007C                     l35:
   500                           
   501                           ;main.c: 51:             degree = 90;;main.c: 52:         if(!RB6)
   502  007C  1283               	bcf	3,5	;RP0=0, select bank0
   503  007D  1303               	bcf	3,6	;RP1=0, select bank0
   504  007E  1788               	bsf	8,7	;volatile
   505  007F                     l677:
   506                           
   507                           ;main.c: 53:             degree = 180;
   508  007F  3007               	movlw	7
   509  0080  00F3               	movwf	??_servoRotate180+1
   510  0081  307D               	movlw	125
   511  0082  00F2               	movwf	??_servoRotate180
   512  0083                     u147:
   513  0083  0BF2               	decfsz	??_servoRotate180,f
   514  0084  2883               	goto	u147
   515  0085  0BF3               	decfsz	??_servoRotate180+1,f
   516  0086  2883               	goto	u147
   517  0087                     l679:
   518                           
   519                           ;main.c: 54:         RBIF=0;
   520  0087  1283               	bcf	3,5	;RP0=0, select bank0
   521  0088  1303               	bcf	3,6	;RP1=0, select bank0
   522  0089  1388               	bcf	8,7	;volatile
   523                           
   524                           ;main.c: 55:     }
   525  008A  302E               	movlw	46
   526  008B  00F3               	movwf	??_servoRotate180+1
   527  008C  3073               	movlw	115
   528  008D  00F2               	movwf	??_servoRotate180
   529  008E                     u157:
   530  008E  0BF2               	decfsz	??_servoRotate180,f
   531  008F  288E               	goto	u157
   532  0090  0BF3               	decfsz	??_servoRotate180+1,f
   533  0091  288E               	goto	u157
   534                           
   535                           ;main.c: 56: }
   536  0092  3001               	movlw	1
   537  0093  07F4               	addwf	servoRotate180@i,f
   538  0094  1803               	skipnc
   539  0095  0AF5               	incf	servoRotate180@i+1,f
   540  0096  3000               	movlw	0
   541  0097  07F5               	addwf	servoRotate180@i+1,f
   542  0098  3000               	movlw	0
   543  0099  0275               	subwf	servoRotate180@i+1,w
   544  009A  3032               	movlw	50
   545  009B  1903               	skipnz
   546  009C  0274               	subwf	servoRotate180@i,w
   547  009D  1C03               	skipc
   548  009E  28A0               	goto	u31
   549  009F  28A1               	goto	u30
   550  00A0                     u31:
   551  00A0  287C               	goto	l35
   552  00A1                     u30:
   553  00A1                     l37:
   554  00A1  0008               	return
   555  00A2                     __end_of_servoRotate180:
   556                           
   557                           	psect	text3
   558  00CA                     __ptext3:	
   559 ;; *************** function _servoRotate0 *****************
   560 ;; Defined at:
   561 ;;		line 23 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  i               2    4[COMMON] unsigned int 
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         2       0       0       0       0
   577 ;;      Temps:          2       0       0       0       0
   578 ;;      Totals:         4       0       0       0       0
   579 ;;Total ram usage:        4 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _servoRotate0
   591  00CA                     _servoRotate0:
   592  00CA                     l651:	
   593                           ;incstack = 0
   594                           ; Regs used in _servoRotate0: [wreg+status,2]
   595                           
   596                           
   597                           ;main.c: 25: ;main.c: 26: void servoRotate180()
   598  00CA  01F4               	clrf	servoRotate0@i
   599  00CB  01F5               	clrf	servoRotate0@i+1
   600  00CC                     l25:
   601                           
   602                           ;main.c: 27: {;main.c: 28:   unsigned int i;
   603  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   604  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   605  00CE  1788               	bsf	8,7	;volatile
   606  00CF                     l657:
   607                           
   608                           ;main.c: 29:   for(i=0;i<50;i++)
   609  00CF  30C7               	movlw	199
   610  00D0  00F2               	movwf	??_servoRotate0
   611  00D1                     u167:
   612  00D1  28D2               	nop2
   613  00D2  0BF2               	decfsz	??_servoRotate0,f
   614  00D3  28D1               	goto	u167
   615  00D4  28D5               	nop2
   616  00D5  28D6               	nop2
   617  00D6                     l659:
   618                           
   619                           ;main.c: 30:   {
   620  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   621  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   622  00D8  1388               	bcf	8,7	;volatile
   623                           
   624                           ;main.c: 31:     RD7 = 1;
   625  00D9  3033               	movlw	51
   626  00DA  00F3               	movwf	??_servoRotate0+1
   627  00DB  30A5               	movlw	165
   628  00DC  00F2               	movwf	??_servoRotate0
   629  00DD                     u177:
   630  00DD  0BF2               	decfsz	??_servoRotate0,f
   631  00DE  28DD               	goto	u177
   632  00DF  0BF3               	decfsz	??_servoRotate0+1,f
   633  00E0  28DD               	goto	u177
   634                           
   635                           ;main.c: 32:     _delay((unsigned long)((2500)*(8000000/4000000.0)));
   636  00E1  3001               	movlw	1
   637  00E2  07F4               	addwf	servoRotate0@i,f
   638  00E3  1803               	skipnc
   639  00E4  0AF5               	incf	servoRotate0@i+1,f
   640  00E5  3000               	movlw	0
   641  00E6  07F5               	addwf	servoRotate0@i+1,f
   642  00E7  3000               	movlw	0
   643  00E8  0275               	subwf	servoRotate0@i+1,w
   644  00E9  3032               	movlw	50
   645  00EA  1903               	skipnz
   646  00EB  0274               	subwf	servoRotate0@i,w
   647  00EC  1C03               	skipc
   648  00ED  28EF               	goto	u11
   649  00EE  28F0               	goto	u10
   650  00EF                     u11:
   651  00EF  28CC               	goto	l25
   652  00F0                     u10:
   653  00F0                     l27:
   654  00F0  0008               	return
   655  00F1                     __end_of_servoRotate0:
   656                           
   657                           	psect	text4
   658  00F1                     __ptext4:	
   659 ;; *************** function _change *****************
   660 ;; Defined at:
   661 ;;		line 58 in file "main.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		None
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _change
   691  00F1                     _change:
   692  00F1                     l681:	
   693                           ;incstack = 0
   694                           ; Regs used in _change: []
   695                           
   696                           
   697                           ;main.c: 60: 
   698  00F1  158B               	bsf	11,3	;volatile
   699                           
   700                           ;main.c: 61:     TRISD7 = 0;
   701  00F2  100B               	bcf	11,0	;volatile
   702                           
   703                           ;main.c: 62: 
   704  00F3  178B               	bsf	11,7	;volatile
   705  00F4                     l40:
   706  00F4  0008               	return
   707  00F5                     __end_of_change:
   708                           
   709                           	psect	text5
   710  00A2                     __ptext5:	
   711 ;; *************** function _portB *****************
   712 ;; Defined at:
   713 ;;		line 65 in file "main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0
   729 ;;      Temps:          2       0       0       0       0
   730 ;;      Totals:         2       0       0       0       0
   731 ;;Total ram usage:        2 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		Interrupt level 1
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _portB
   742  00A2                     _portB:
   743  00A2                     i1l683:
   744                           
   745                           ;main.c: 67:         if(degree == 0)
   746  00A2  1D8B               	btfss	11,3	;volatile
   747  00A3  28A5               	goto	u4_21
   748  00A4  28A6               	goto	u4_20
   749  00A5                     u4_21:
   750  00A5  28C3               	goto	i1l49
   751  00A6                     u4_20:
   752  00A6                     i1l685:
   753  00A6  1C0B               	btfss	11,0	;volatile
   754  00A7  28A9               	goto	u5_21
   755  00A8  28AA               	goto	u5_20
   756  00A9                     u5_21:
   757  00A9  28C3               	goto	i1l49
   758  00AA                     u5_20:
   759  00AA                     i1l687:
   760                           
   761                           ;main.c: 68:           servoRotate0();;main.c: 69:         if(degree == 90)
   762  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   763  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   764  00AC  1A06               	btfsc	6,4	;volatile
   765  00AD  28AF               	goto	u6_21
   766  00AE  28B0               	goto	u6_20
   767  00AF                     u6_21:
   768  00AF  28B2               	goto	i1l691
   769  00B0                     u6_20:
   770  00B0                     i1l689:
   771                           
   772                           ;main.c: 70:           servoRotate90();
   773  00B0  01F6               	clrf	_degree
   774  00B1  01F7               	clrf	_degree+1
   775  00B2                     i1l691:
   776                           
   777                           ;main.c: 71:         if(degree == 180)
   778  00B2  1A86               	btfsc	6,5	;volatile
   779  00B3  28B5               	goto	u7_21
   780  00B4  28B6               	goto	u7_20
   781  00B5                     u7_21:
   782  00B5  28BA               	goto	i1l695
   783  00B6                     u7_20:
   784  00B6                     i1l693:
   785                           
   786                           ;main.c: 72:           servoRotate180();
   787  00B6  305A               	movlw	90
   788  00B7  00F6               	movwf	_degree
   789  00B8  3000               	movlw	0
   790  00B9  00F7               	movwf	_degree+1
   791  00BA                     i1l695:
   792                           
   793                           ;main.c: 73:     }while(1);
   794  00BA  1B06               	btfsc	6,6	;volatile
   795  00BB  28BD               	goto	u8_21
   796  00BC  28BE               	goto	u8_20
   797  00BD                     u8_21:
   798  00BD  28C2               	goto	i1l699
   799  00BE                     u8_20:
   800  00BE                     i1l697:
   801                           
   802                           ;main.c: 74: }
   803  00BE  30B4               	movlw	180
   804  00BF  00F6               	movwf	_degree
   805  00C0  3000               	movlw	0
   806  00C1  00F7               	movwf	_degree+1
   807  00C2                     i1l699:
   808  00C2  100B               	bcf	11,0	;volatile
   809  00C3                     i1l49:
   810  00C3  0871               	movf	??_portB+1,w
   811  00C4  008A               	movwf	10
   812  00C5  0E70               	swapf	??_portB^(0+4294967168),w
   813  00C6  0083               	movwf	3
   814  00C7  0EFE               	swapf	btemp,f
   815  00C8  0E7E               	swapf	btemp,w
   816  00C9  0009               	retfie
   817  00CA                     __end_of_portB:
   818  007E                     btemp	set	126	;btemp
   819  007E                     wtemp0	set	126
   820                           
   821                           	psect	intentry
   822  0004                     __pintentry:	
   823                           ;incstack = 0
   824                           ; Regs used in _portB: [wreg+status,2]
   825                           
   826  0004                     interrupt_function:
   827  007E                     saved_w	set	btemp
   828  0004  00FE               	movwf	btemp
   829  0005  0E03               	swapf	3,w
   830  0006  00F0               	movwf	??_portB
   831  0007  080A               	movf	10,w
   832  0008  00F1               	movwf	??_portB+1
   833  0009  120A  118A  28A2   	ljmp	_portB
   834                           
   835                           	psect	config
   836                           
   837                           ;Config register CONFIG @ 0x2007
   838                           ;	Oscillator Selection bits
   839                           ;	FOSC = HS, HS oscillator
   840                           ;	Watchdog Timer Enable bit
   841                           ;	WDTE = OFF, WDT disabled
   842                           ;	Power-up Timer Enable bit
   843                           ;	PWRTE = OFF, PWRT disabled
   844                           ;	Brown-out Reset Enable bit
   845                           ;	BOREN = ON, BOR enabled
   846                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   847                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   848                           ;	Data EEPROM Memory Code Protection bit
   849                           ;	CPD = OFF, Data EEPROM code protection off
   850                           ;	Flash Program Memory Write Enable bits
   851                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   852                           ;	In-Circuit Debugger Mode bit
   853                           ;	DEBUG = 0x1, unprogrammed default
   854                           ;	Flash Program Memory Code Protection bit
   855                           ;	CP = OFF, Code protection off
   856  2007                     	org	8199
   857  2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_servoRotate0
    _main->_servoRotate180
    _main->_servoRotate90

Critical Paths under _portB in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _portB in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _portB in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _portB in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _portB in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                             _change
                       _servoRotate0
                     _servoRotate180
                      _servoRotate90
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        4     4      0      30
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate180                                       4     4      0      30
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         4     4      0      30
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _change                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _portB                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change
   _servoRotate0
   _servoRotate180
   _servoRotate90

 _portB (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jan 02 14:48:15 2022

                     l30 0052                       l40 00F4                       l32 0079  
                     l25 00CC                       l27 00F0                       l35 007C  
                     l37 00A1                       u10 00F0                       u11 00EF  
                     u20 0079                       u21 0078                       u30 00A1  
                     u31 00A0                       u90 002F                       u91 002E  
          servoRotate0@i 0074                      l701 001F                      l711 0034  
                    l703 0023                      l713 003B                      l705 0024  
                    l651 00CA                      l715 0040                      l707 0029  
                    l661 0050                      l717 0047                      l709 002F  
                    l671 007A                      l681 00F1                      l657 00CF  
                    l659 00D6                      l667 0055                      l677 007F  
                    l669 005E                      l679 0087                      _GIE 005F  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    u100 003B                      u101 003A                      u110 0047  
                    u111 0046                      _RD7 0047                      u127 0059  
                    u137 0065                      u147 0083                      u157 008E  
                    u167 00D1                      u177 00DD           servoRotate90@i 0074  
                   _RBIE 005B                     _RBIF 0058                     i1l49 00C3  
                   u4_20 00A6                     u4_21 00A5                     u5_20 00AA  
                   u5_21 00A9                     u6_20 00B0                     u6_21 00AF  
                   u7_20 00B6                     u7_21 00B5                     u8_20 00BE  
                   u8_21 00BD                     _main 001F                     btemp 007E  
                   start 000C          ??_servoRotate90 0072          servoRotate180@i 0074  
                  ?_main 0070                    i1l691 00B2                    i1l683 00A2  
                  i1l693 00B6                    i1l685 00A6                    i1l695 00BA  
                  i1l687 00AA                    i1l697 00BE                    i1l689 00B0  
                  i1l699 00C2                    _portB 00A2                    pclath 000A  
                  status 0003                    wtemp0 007E         ??_servoRotate180 0072  
        __initialization 000F             __end_of_main 0050                   ??_main 0076  
                 _ADCON1 009F                   ?_portB 0070                   _TRISD7 0447  
                 _change 00F1                   _degree 0076             __pdataCOMMON 0076  
                 saved_w 007E  __end_of__initialization 001B           __pcstackCOMMON 0070  
          __end_of_portB 00CA                  ??_portB 0070               __pmaintext 001F  
                ?_change 0070               __pintentry 0004    __end_of_servoRotate90 007A  
        __size_of_change 0004                  __ptext1 0050                  __ptext2 007A  
                __ptext3 00CA                  __ptext4 00F1                  __ptext5 00A2  
   end_of_initialization 001B            ?_servoRotate0 0070           ??_servoRotate0 0072  
         __end_of_change 00F5  __size_of_servoRotate180 0028            __pidataCOMMON 00F5  
    start_initialization 000F                 ??_change 0072                ___latbits 0002  
   __end_of_servoRotate0 00F1           __size_of_portB 0028        interrupt_function 0004  
         _servoRotate180 007A   __size_of_servoRotate90 002A   __end_of_servoRotate180 00A2  
          __size_of_main 0031          ?_servoRotate180 0070            _servoRotate90 0050  
  __size_of_servoRotate0 0027                 intlevel1 0000           ?_servoRotate90 0070  
           _servoRotate0 00CA  
