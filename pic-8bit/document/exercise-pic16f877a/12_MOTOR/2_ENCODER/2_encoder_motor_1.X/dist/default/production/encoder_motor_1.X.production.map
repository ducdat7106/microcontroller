Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\encoder_motor_1.X.production.sym \
  --cmf=dist/default/production\encoder_motor_1.X.production.cmf -z \
  -Q16F877A -oC:\Users\DATNGU~1\AppData\Local\Temp\sbn8.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/encoder_motor_1.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\DATNGU~1\AppData\Local\Temp\sbn8.o \
  dist/default/production\encoder_motor_1.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\DATNGU~1\AppData\Local\Temp\sbn8.o
                end_init                             10       10        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\encoder_motor_1.X.production.o
                cinit                                13       13       1F        8       0
                intentry                              4        4        C        8       0
                config                             2007     2007        1        0       4
                text15                              41F      41F       46        8       0
                text14                              19F      19F       6C        8       0
                text13                              535      535        6      968       0
                text12                              4B4      4B4       20      968       0
                text11                              4D4      4D4       1B      968       0
                text10                              328      328       59        8       0
                text9                               2CF      2CF       59        8       0
                text8                               3D9      3D9       46        8       0
                text7                               465      465       2B        8       0
                text6                               528      528        D      968       0
                text5                               131      131       6E        8       0
                text4                               518      518       10      968       0
                text3                               20B      20B       69        8       0
                text2                               274      274       5B        8       0
                text1                                32       32       FF        8       0
                maintext                            381      381       58        8       0
                cstackBANK0                          20       20       1D       20       1
                cstackCOMMON                         70       70        D       70       1
                inittext                            505      505       13      968       0
                dataBANK0                            3D       3D       16       20       1
                bssBANK0                             53       53        C       20       1
                bssCOMMON                            7D       7D        1       70       1
                strings                             490      490       24      920       0
                idataBANK0                          4EF      4EF       16      968       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        3         0
                cinit                                13       13       1F         0
                intentry                              4        4        C         0
                reset_vec                             0        0        3         0
                text15                              41F      41F       46         0
                text14                              19F      19F       6C         0
                text13                              535      535        6         0
                text12                              4B4      4B4       20         0
                text11                              4D4      4D4       1B         0
                text10                              328      328       59         0
                text9                               2CF      2CF       59         0
                text8                               3D9      3D9       46         0
                text7                               465      465       2B         0
                text6                               528      528        D         0
                text5                               131      131       6E         0
                text4                               518      518       10         0
                text3                               20B      20B       69         0
                text2                               274      274       5B         0
                text1                                32       32       FF         0
                maintext                            381      381       58         0
                inittext                            505      505       13         0
                idataBANK0                          4EF      4EF       16         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             490      490       24         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        D         1
                bssCOMMON                            7D       7D        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       1D         1
                dataBANK0                            3D       3D       16         1
                bssBANK0                             53       53        C         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00048C  000490         8       0  CODE        2
                cstackBANK0                    000020  00003F  00005F        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                strings                        000490  000024  0004B4       920       0  STRING      2
                text12                         0004B4  000087  00053B       968       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005F-006F             11           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         053B-1FFF            800
        CONST            0003-0003              1           2
                         053B-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         053B-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              005F-006F             11           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         053B-1FFF           1AC5
        STRING           0003-0003              1           2
                         053B-1FFF            100

                                  Symbol Table

?___awdiv                  cstackBANK0  0023
?___awmod                  cstackBANK0  0023
?___lmul                   cstackCOMMON 0070
LCD_CMD@CMD                cstackBANK0  0026
LCD_DATA@Data              cstackBANK0  0023
LCD_Set_Cursor@High4       cstackBANK0  002B
LCD_Set_Cursor@Low4        cstackBANK0  002A
LCD_Set_Cursor@Temp        cstackBANK0  002C
LCD_Set_Cursor@c           cstackBANK0  0027
LCD_Set_Cursor@r           cstackBANK0  0029
LCD_Write_Char@Data        cstackBANK0  0028
LCD_Write_Char@High4       cstackBANK0  0027
LCD_Write_Char@Low4        cstackBANK0  0026
LCD_Write_String@i         cstackBANK0  002E
LCD_Write_String@str       cstackBANK0  0029
Update_LCD@Temp            cstackBANK0  0030
Update_LCD@Temp1           cstackBANK0  0032
Update_LCD@div             cstackBANK0  0038
Update_LCD@i               cstackBANK0  0034
Update_LCD@i_102           cstackBANK0  0036
_ADCON1                    (abs)        009F
_AttachInterrupts          text13       0535
_Display_Init              text7        0465
_Encoder1_Ticks            bssBANK0     0053
_GIE                       (abs)        005F
_INTE                      (abs)        005C
_INTEDG                    (abs)        040E
_INTF                      (abs)        0059
_ISR                       text14       019F
_LCD_CMD                   text11       04D4
_LCD_Clear                 text6        0528
_LCD_DATA                  text12       04B4
_LCD_Init                  text5        0131
_LCD_Set_Cursor            text10       0328
_LCD_Write_Char            text9        02CF
_LCD_Write_String          text8        03D9
_PEIE                      (abs)        005E
_RD2                       (abs)        0042
_RD3                       (abs)        0043
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_RD6                       (abs)        0046
_RD7                       (abs)        0047
_RPM                       bssBANK0     005B
_RPM_S                     dataBANK0    0049
_RPS                       bssBANK0     0057
_RPS_S                     dataBANK0    003F
_T1CKPS0                   (abs)        0084
_T1CKPS1                   (abs)        0085
_TMR1                      (abs)        000E
_TMR1CS                    (abs)        0081
_TMR1IE                    (abs)        0460
_TMR1IF                    (abs)        0060
_TMR1ON                    (abs)        0080
_TMR1_C                    bssCOMMON    007D
_TRISD                     (abs)        0088
_TRISD2                    (abs)        0442
_TRISD3                    (abs)        0443
_Timer1_Init               text4        0518
_Update_LCD                text1        0032
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        0032
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__HdataBANK0               dataBANK0    0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0013
__Hfunctab                 functab      0000
__HidataBANK0              idataBANK0   0000
__Hinit                    init         0010
__Hinittext                inittext     0000
__Hintentry                intentry     0010
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        053B
__Hspace_1                 (abs)        007E
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        400F
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        0013
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__LdataBANK0               dataBANK0    0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0010
__Lfunctab                 functab      0000
__LidataBANK0              idataBANK0   0000
__Linit                    init         0010
__Linittext                inittext     0000
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        053B
__S1                       (abs)        007E
__S2                       (abs)        0000
__S3                       (abs)        0000
___awdiv                   text3        020B
___awdiv@counter           cstackBANK0  0027
___awdiv@dividend          cstackBANK0  0025
___awdiv@divisor           cstackBANK0  0023
___awdiv@quotient          cstackBANK0  0029
___awdiv@sign              cstackBANK0  0028
___awmod                   text2        0274
___awmod@counter           cstackBANK0  0027
___awmod@dividend          cstackBANK0  0025
___awmod@divisor           cstackBANK0  0023
___awmod@sign              cstackBANK0  0028
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lmul                    text15       041F
___lmul@multiplicand       cstackCOMMON 0074
___lmul@multiplier         cstackCOMMON 0070
___lmul@product            cstackCOMMON 0079
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
__end_of_AttachInterrupts  text13       053B
__end_of_Display_Init      text7        0490
__end_of_ISR               text14       020B
__end_of_LCD_CMD           text11       04EF
__end_of_LCD_Clear         text6        0535
__end_of_LCD_DATA          text12       04D4
__end_of_LCD_Init          text5        019F
__end_of_LCD_Set_Cursor    text10       0381
__end_of_LCD_Write_Char    text9        0328
__end_of_LCD_Write_String  text8        041F
__end_of_Timer1_Init       text4        0528
__end_of_Update_LCD        text1        0131
__end_of___awdiv           text3        0274
__end_of___awmod           text2        02CF
__end_of___lmul            text15       0465
__end_of__initialization   cinit        002E
__end_of__stringtab        strings      04A0
__end_of_main              maintext     03D9
__initialization           cinit        0013
__pbssBANK0                bssBANK0     0053
__pbssCOMMON               bssCOMMON    007D
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pdataBANK0               dataBANK0    003D
__pidataBANK0              idataBANK0   04EF
__pintentry                intentry     0004
__pmaintext                maintext     0381
__pstrings                 strings      0490
__ptext1                   text1        0032
__ptext10                  text10       0328
__ptext11                  text11       04D4
__ptext12                  text12       04B4
__ptext13                  text13       0535
__ptext14                  text14       019F
__ptext15                  text15       041F
__ptext2                   text2        0274
__ptext3                   text3        020B
__ptext4                   text4        0518
__ptext5                   text5        0131
__ptext6                   text6        0528
__ptext7                   text7        0465
__ptext8                   text8        03D9
__ptext9                   text9        02CF
__size_of_AttachInterrupts (abs)        0000
__size_of_Display_Init     (abs)        0000
__size_of_ISR              (abs)        0000
__size_of_LCD_CMD          (abs)        0000
__size_of_LCD_Clear        (abs)        0000
__size_of_LCD_DATA         (abs)        0000
__size_of_LCD_Init         (abs)        0000
__size_of_LCD_Set_Cursor   (abs)        0000
__size_of_LCD_Write_Char   (abs)        0000
__size_of_LCD_Write_String (abs)        0000
__size_of_Timer1_Init      (abs)        0000
__size_of_Update_LCD       (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___awmod          (abs)        0000
__size_of___lmul           (abs)        0000
__size_of_main             (abs)        0000
__stringbase               strings      049F
__stringtab                strings      0490
_main                      maintext     0381
btemp                      (abs)        007E
end_of_initialization      cinit        002E
init_fetch0                inittext     0505
init_ram0                  inittext     0509
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
start                      init         0010
start_initialization       cinit        0013
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 60 in file "main_encoder.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   64[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_AttachInterrupts
		_Display_Init
		_LCD_Clear
		_LCD_Init
		_LCD_Set_Cursor
		_LCD_Write_String
		_Timer1_Init
		_Update_LCD
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Update_LCD *****************
 Defined at:
		line 107 in file "main_encoder.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   22[BANK0 ] int 
  i               2   20[BANK0 ] int 
  div             2   24[BANK0 ] int 
  Temp1           2   18[BANK0 ] int 
  Temp            2   16[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Set_Cursor
		_LCD_Write_String
		___awdiv
		___awmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] int 
  dividend        2    5[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    8[BANK0 ] unsigned char 
  counter         1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Update_LCD
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] int 
  dividend        2    5[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    9[BANK0 ] int 
  sign            1    8[BANK0 ] unsigned char 
  counter         1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Update_LCD
 This function uses a non-reentrant model


 *************** function _Timer1_Init *****************
 Defined at:
		line 160 in file "main_encoder.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 87 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_CMD
		_LCD_DATA
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 53 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_CMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Display_Init *****************
 Defined at:
		line 133 in file "main_encoder.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Set_Cursor
		_LCD_Write_String
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_String *****************
 Defined at:
		line 132 in file "lcd.c"
 Parameters:    Size  Location     Type
  str             2    9[BANK0 ] PTR unsigned char 
		 -> RPM_S(10), RPS_S(10), STR_3(6), STR_2(7), 
		 -> STR_1(7), 
 Auto vars:     Size  Location     Type
  i               2   14[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_Write_Char
 This function is called by:
		_main
		_Update_LCD
		_Display_Init
 This function uses a non-reentrant model


 *************** function _LCD_Write_Char *****************
 Defined at:
		line 113 in file "lcd.c"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    8[BANK0 ] unsigned char 
  High4           1    7[BANK0 ] unsigned char 
  Low4            1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_DATA
 This function is called by:
		_LCD_Write_String
 This function uses a non-reentrant model


 *************** function _LCD_Set_Cursor *****************
 Defined at:
		line 62 in file "lcd.c"
 Parameters:    Size  Location     Type
  r               1    wreg     unsigned char 
  c               1    7[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  r               1    9[BANK0 ] unsigned char 
  Temp            1   12[BANK0 ] unsigned char 
  High4           1   11[BANK0 ] unsigned char 
  Low4            1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_CMD
 This function is called by:
		_main
		_Update_LCD
		_Display_Init
 This function uses a non-reentrant model


 *************** function _LCD_CMD *****************
 Defined at:
		line 36 in file "lcd.c"
 Parameters:    Size  Location     Type
  CMD             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  CMD             1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_DATA
 This function is called by:
		_LCD_Clear
		_LCD_Set_Cursor
		_LCD_Init
		_LCD_Shift_Right
		_LCD_Shift_Left
 This function uses a non-reentrant model


 *************** function _LCD_DATA *****************
 Defined at:
		line 9 in file "lcd.c"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_LCD_CMD
		_LCD_Init
		_LCD_Write_Char
 This function uses a non-reentrant model


 *************** function _AttachInterrupts *****************
 Defined at:
		line 145 in file "main_encoder.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 83 in file "main_encoder.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lmul
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[COMMON] unsigned long 
  multiplicand    4    4[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    9[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:        13       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	041F	0000	71

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c estimated size: 71

main_encoder.c
		_Update_LCD    		CODE           	0032	0000	256
		_ISR           		CODE           	019F	0000	109
		_main          		CODE           	0381	0000	89
		_Timer1_Init   		CODE           	0518	0000	17
		_AttachInterrupts		CODE           	0535	0000	7
		_Display_Init  		CODE           	0465	0000	44

main_encoder.c estimated size: 522

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	0274	0000	92

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c estimated size: 92

shared
		__stringtab    		STRING         	0490	0000	17
		__initialization		CODE           	0013	0000	28

shared estimated size: 45

lcd.c
		_LCD_Init      		CODE           	0131	0000	111
		_LCD_Write_Char		CODE           	02CF	0000	90
		_LCD_CMD       		CODE           	04D4	0000	28
		_LCD_DATA      		CODE           	04B4	0000	33
		_LCD_Set_Cursor		CODE           	0328	0000	90
		_LCD_Clear     		CODE           	0528	0000	14
		_LCD_Write_String		CODE           	03D9	0000	71

lcd.c estimated size: 437

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	020B	0000	106

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c estimated size: 106

