

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 24 06:01:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	idataBANK0
   386  0B61                     __pidataBANK0:
   387                           
   388                           ;initializer for _days
   389  0B61  3451               	retlw	low ((STR_1-__stringbase)| (0+32768))
   390  0B62  344D               	retlw	low ((STR_2-__stringbase)| (0+32768))
   391  0B63  3445               	retlw	low ((STR_3-__stringbase)| (0+32768))
   392  0B64  3441               	retlw	low ((STR_4-__stringbase)| (0+32768))
   393  0B65  3459               	retlw	low ((STR_5-__stringbase)| (0+32768))
   394  0B66  3449               	retlw	low ((STR_6-__stringbase)| (0+32768))
   395  0B67  3455               	retlw	low ((STR_7-__stringbase)| (0+32768))
   396                           
   397                           	psect	strings
   398  0003                     __pstrings:
   399  0003                     stringtab:
   400  0003                     __stringtab:
   401                           
   402                           ;	String table - string pointers are 1 byte each
   403  0003  1BFF               	btfsc	btemp+1,7
   404  0004  280D               	ljmp	stringcode
   405  0005  1383               	bcf	3,7
   406  0006  187F               	btfsc	btemp+1,0
   407  0007  1783               	bsf	3,7
   408  0008  0800               	movf	0,w
   409  0009  0A84               	incf	4,f
   410  000A  1903               	skipnz
   411  000B  0AFF               	incf	btemp+1,f
   412  000C  0008               	return
   413  000D                     stringcode:
   414  000D                     stringdir:
   415  000D  3000               	movlw	high stringdir
   416  000E  008A               	movwf	10
   417  000F  0804               	movf	4,w
   418  0010  0A84               	incf	4,f
   419  0011  0782               	addwf	2,f
   420  0012                     __stringbase:
   421  0012  3400               	retlw	0
   422  0013                     __end_of__stringtab:
   423  0013                     _dpowers:
   424  0013  3401               	retlw	1
   425  0014  3400               	retlw	0
   426  0015  340A               	retlw	10
   427  0016  3400               	retlw	0
   428  0017  3464               	retlw	100
   429  0018  3400               	retlw	0
   430  0019  34E8               	retlw	232
   431  001A  3403               	retlw	3
   432  001B  3410               	retlw	16
   433  001C  3427               	retlw	39
   434  001D                     __end_of_dpowers:
   435  0013                     _SSPBUF	set	19
   436  0014                     _SSPCON	set	20
   437  0043                     _RD3	set	67
   438  0042                     _RD2	set	66
   439  0047                     _RD7	set	71
   440  0046                     _RD6	set	70
   441  0045                     _RD5	set	69
   442  0044                     _RD4	set	68
   443  0031                     _RB1	set	49
   444  0030                     _RB0	set	48
   445  0093                     _SSPADD	set	147
   446  0094                     _SSPSTAT	set	148
   447  0091                     _SSPCON2	set	145
   448  0088                     _TRISD	set	136
   449  009F                     _ADCON1	set	159
   450  048B                     _RCEN	set	1163
   451  048E                     _ACKSTAT	set	1166
   452  048C                     _ACKEN	set	1164
   453  048D                     _ACKDT	set	1165
   454  048A                     _PEN	set	1162
   455  0489                     _RSEN	set	1161
   456  0488                     _SEN	set	1160
   457  043C                     _TRISC4	set	1084
   458  043B                     _TRISC3	set	1083
   459  0443                     _TRISD3	set	1091
   460  0442                     _TRISD2	set	1090
   461  001D                     STR_11:
   462  001D  3425               	retlw	37	;'%'
   463  001E  3473               	retlw	115	;'s'
   464  001F  3420               	retlw	32	;' '
   465  0020  3425               	retlw	37	;'%'
   466  0021  3430               	retlw	48	;'0'
   467  0022  3432               	retlw	50	;'2'
   468  0023  3475               	retlw	117	;'u'
   469  0024  342D               	retlw	45	;'-'
   470  0025  3425               	retlw	37	;'%'
   471  0026  3430               	retlw	48	;'0'
   472  0027  3432               	retlw	50	;'2'
   473  0028  3475               	retlw	117	;'u'
   474  0029  342D               	retlw	45	;'-'
   475  002A  3425               	retlw	37	;'%'
   476  002B  3430               	retlw	48	;'0'
   477  002C  3432               	retlw	50	;'2'
   478  002D  3475               	retlw	117	;'u'
   479  002E  3400               	retlw	0
   480  002F                     STR_8:
   481  002F  3425               	retlw	37	;'%'
   482  0030  3430               	retlw	48	;'0'
   483  0031  3432               	retlw	50	;'2'
   484  0032  3475               	retlw	117	;'u'
   485  0033  343A               	retlw	58	;':'
   486  0034  3425               	retlw	37	;'%'
   487  0035  3430               	retlw	48	;'0'
   488  0036  3432               	retlw	50	;'2'
   489  0037  3475               	retlw	117	;'u'
   490  0038  343A               	retlw	58	;':'
   491  0039  3425               	retlw	37	;'%'
   492  003A  3430               	retlw	48	;'0'
   493  003B  3432               	retlw	50	;'2'
   494  003C  3475               	retlw	117	;'u'
   495  003D  3400               	retlw	0
   496  003E                     STR_21:
   497  003E  3428               	retlw	40	;'('
   498  003F  346E               	retlw	110	;'n'
   499  0040  3475               	retlw	117	;'u'
   500  0041  346C               	retlw	108	;'l'
   501  0042  346C               	retlw	108	;'l'
   502  0043  3429               	retlw	41	;')'
   503  0044  3400               	retlw	0
   504  0045                     STR_13:
   505  0045  3443               	retlw	67	;'C'
   506  0046  344C               	retlw	76	;'L'
   507  0047  344F               	retlw	79	;'O'
   508  0048  3443               	retlw	67	;'C'
   509  0049  344B               	retlw	75	;'K'
   510  004A  3400               	retlw	0
   511  004B                     STR_9:
   512  004B  3420               	retlw	32	;' '
   513  004C  3441               	retlw	65	;'A'
   514  004D  344D               	retlw	77	;'M'
   515  004E  3400               	retlw	0
   516  004F                     STR_10:
   517  004F  3420               	retlw	32	;' '
   518  0050  3450               	retlw	80	;'P'
   519  0051  344D               	retlw	77	;'M'
   520  0052  3400               	retlw	0
   521  0053                     STR_4:
   522  0053  3457               	retlw	87	;'W'
   523  0054  3465               	retlw	101	;'e'
   524  0055  3464               	retlw	100	;'d'
   525  0056  3400               	retlw	0
   526  0057                     STR_3:
   527  0057  3454               	retlw	84	;'T'
   528  0058  3475               	retlw	117	;'u'
   529  0059  3465               	retlw	101	;'e'
   530  005A  3400               	retlw	0
   531  005B                     STR_6:
   532  005B  3446               	retlw	70	;'F'
   533  005C  3472               	retlw	114	;'r'
   534  005D  3469               	retlw	105	;'i'
   535  005E  3400               	retlw	0
   536  005F                     STR_2:
   537  005F  344D               	retlw	77	;'M'
   538  0060  346F               	retlw	111	;'o'
   539  0061  346E               	retlw	110	;'n'
   540  0062  3400               	retlw	0
   541  0063                     STR_1:
   542  0063  3453               	retlw	83	;'S'
   543  0064  3475               	retlw	117	;'u'
   544  0065  346E               	retlw	110	;'n'
   545  0066  3400               	retlw	0
   546  0067                     STR_7:
   547  0067  3453               	retlw	83	;'S'
   548  0068  3461               	retlw	97	;'a'
   549  0069  3474               	retlw	116	;'t'
   550  006A  3400               	retlw	0
   551  006B                     STR_5:
   552  006B  3454               	retlw	84	;'T'
   553  006C  3468               	retlw	104	;'h'
   554  006D  3475               	retlw	117	;'u'
   555  006E  3400               	retlw	0
   556  006F                     STR_12:
   557  006F  3420               	retlw	32	;' '
   558  0070  3420               	retlw	32	;' '
   559  0071  3400               	retlw	0
   560  0053                     
   561                           	psect	cinit
   562  07E5                     start_initialization:	
   563                           ; #config settings
   564                           
   565  07E5                     __initialization:
   566                           
   567                           ; Initialize objects allocated to BANK0
   568  07E5  1383               	bcf	3,7	;select IRP bank0
   569  07E6  306C               	movlw	low (__pdataBANK0+7)
   570  07E7  00FD               	movwf	btemp+-1
   571  07E8  300B               	movlw	high __pidataBANK0
   572  07E9  00FE               	movwf	btemp
   573  07EA  3061               	movlw	low __pidataBANK0
   574  07EB  00FF               	movwf	btemp+1
   575  07EC  3065               	movlw	low __pdataBANK0
   576  07ED  0084               	movwf	4
   577  07EE  120A  158A  23CE  120A  118A  	fcall	init_ram0
   578                           
   579                           ; Clear objects allocated to BANK0
   580  07F3  01DC               	clrf	__pbssBANK0& (0+127)
   581  07F4  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   582  07F5  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   583  07F6  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   584  07F7  01E0               	clrf	(__pbssBANK0+4)& (0+127)
   585  07F8  01E1               	clrf	(__pbssBANK0+5)& (0+127)
   586  07F9  01E2               	clrf	(__pbssBANK0+6)& (0+127)
   587  07FA  01E3               	clrf	(__pbssBANK0+7)& (0+127)
   588  07FB  01E4               	clrf	(__pbssBANK0+8)& (0+127)
   589  07FC                     end_of_initialization:	
   590                           ;End of C runtime variable initialization code
   591                           
   592  07FC                     __end_of__initialization:
   593  07FC  0183               	clrf	3
   594  07FD  120A  118A  2BAC   	ljmp	_main	;jump to C main() function
   595                           
   596                           	psect	bssBANK0
   597  005C                     __pbssBANK0:
   598  005C                     _mytime:
   599  005C                     	ds	1
   600  005D                     _i:
   601  005D                     	ds	1
   602  005E                     _c_time:
   603  005E                     	ds	7
   604                           
   605                           	psect	dataBANK0
   606  0065                     __pdataBANK0:
   607  0065                     _days:
   608  0065                     	ds	7
   609                           
   610                           	psect	inittext
   611  0BCA                     init_fetch0:	
   612                           ;	Called with low address in FSR and high address in W
   613                           
   614  0BCA  087E               	movf	btemp,w
   615  0BCB  008A               	movwf	10
   616  0BCC  087F               	movf	btemp+1,w
   617  0BCD  0082               	movwf	2
   618  0BCE                     init_ram0:	
   619                           ;Called with:
   620                           ;	high address of idata address in btemp 
   621                           ;	low address of idata address in btemp+1 
   622                           ;	low address of data in FSR
   623                           ;	high address + 1 of data in btemp-1
   624                           
   625  0BCE  120A  158A  23CA  120A  158A  	fcall	init_fetch0
   626  0BD3  0080               	movwf	0
   627  0BD4  0A84               	incf	4,f
   628  0BD5  0804               	movf	4,w
   629  0BD6  067D               	xorwf	btemp+-1,w
   630  0BD7  1903               	btfsc	3,2
   631  0BD8  3400               	retlw	0
   632  0BD9  0AFF               	incf	btemp+1,f
   633  0BDA  1903               	btfsc	3,2
   634  0BDB  0AFE               	incf	btemp,f
   635  0BDC  2BCE               	goto	init_ram0
   636                           
   637                           	psect	cstackCOMMON
   638  0070                     __pcstackCOMMON:
   639  0070                     ?_isdigit:
   640  0070                     ?_debounce:	
   641                           ; 1 bit 
   642                           
   643  0070                     ?_strcat:	
   644                           ; 1 bit 
   645                           
   646  0070                     ?_LCD_Write_Char:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_LCD_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_RTC_Set:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_RTC_Get:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_RTC_Read_Reg:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_isdigit:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_rtc_print:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_debounce:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_blink:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_blink:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_main:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_LCD_DATA:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_LCD_DATA:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_LCD_CMD:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_I2C_Wait:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_I2C_Wait:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_I2C_Start:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_I2C_Start:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_I2C_Restart:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??_I2C_Restart:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_I2C_Stop:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ??_I2C_Stop:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_I2C_ACK:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ??_I2C_ACK:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_I2C_NACK:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ??_I2C_NACK:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_I2C_Write_Char:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_I2C_Write_Char:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_I2C_Read_Char:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ??_I2C_Read_Char:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_bcd_to_decimal:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_decimal_to_bcd:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?___bmul:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?___wmul:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?___awdiv:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0070                     ?___awmod:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     ?___lwdiv:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ?___lldiv:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0070                     LCD_DATA@Data:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0070                     I2C_Write_Char@Data:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ___bmul@multiplicand:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     _isdigit$804:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     strcat@from:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ___wmul@multiplier:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ___awdiv@divisor:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ___awmod@divisor:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ___lwdiv@divisor:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0070                     ___lldiv@divisor:	
   788                           ; 2 bytes @ 0x0
   789                           
   790                           
   791                           ; 4 bytes @ 0x0
   792  0070                     	ds	1
   793  0071                     ??_strcat:
   794  0071                     ??_LCD_Write_Char:	
   795                           ; 1 bytes @ 0x1
   796                           
   797  0071                     ??_LCD_CMD:	
   798                           ; 1 bytes @ 0x1
   799                           
   800  0071                     ??___bmul:	
   801                           ; 1 bytes @ 0x1
   802                           
   803  0071                     I2C_Read_Char@ACK:	
   804                           ; 1 bytes @ 0x1
   805                           
   806  0071                     isdigit@c:	
   807                           ; 1 bytes @ 0x1
   808                           
   809                           
   810                           ; 1 bytes @ 0x1
   811  0071                     	ds	1
   812  0072                     debounce@count:
   813  0072                     blink@j:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0072                     I2C_Read_Char@_data:	
   817                           ; 1 bytes @ 0x2
   818                           
   819  0072                     ___bmul@product:	
   820                           ; 1 bytes @ 0x2
   821                           
   822  0072                     strcat@to:	
   823                           ; 1 bytes @ 0x2
   824                           
   825  0072                     ___wmul@multiplicand:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0072                     ___awdiv@dividend:	
   829                           ; 2 bytes @ 0x2
   830                           
   831  0072                     ___awmod@dividend:	
   832                           ; 2 bytes @ 0x2
   833                           
   834  0072                     ___lwdiv@dividend:	
   835                           ; 2 bytes @ 0x2
   836                           
   837                           
   838                           ; 2 bytes @ 0x2
   839  0072                     	ds	1
   840  0073                     ??_RTC_Read_Reg:
   841  0073                     debounce@i:	
   842                           ; 1 bytes @ 0x3
   843                           
   844  0073                     LCD_CMD@CMD:	
   845                           ; 1 bytes @ 0x3
   846                           
   847  0073                     LCD_Write_Char@Low4:	
   848                           ; 1 bytes @ 0x3
   849                           
   850  0073                     ___bmul@multiplier:	
   851                           ; 1 bytes @ 0x3
   852                           
   853  0073                     strcat@cp:	
   854                           ; 1 bytes @ 0x3
   855                           
   856                           
   857                           ; 1 bytes @ 0x3
   858  0073                     	ds	1
   859  0074                     ?_LCD_Set_Cursor:
   860  0074                     ??_LCD_Init:	
   861                           ; 1 bytes @ 0x4
   862                           
   863  0074                     ??_bcd_to_decimal:	
   864                           ; 1 bytes @ 0x4
   865                           
   866  0074                     ??___wmul:	
   867                           ; 1 bytes @ 0x4
   868                           
   869  0074                     ??___awdiv:	
   870                           ; 1 bytes @ 0x4
   871                           
   872  0074                     ??___awmod:	
   873                           ; 1 bytes @ 0x4
   874                           
   875  0074                     ??___lwdiv:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0074                     LCD_Set_Cursor@column:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0074                     LCD_Write_Char@High4:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0074                     RTC_Read_Reg@reg_address:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0074                     ___wmul@product:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0074                     ___lldiv@dividend:	
   891                           ; 2 bytes @ 0x4
   892                           
   893                           
   894                           ; 4 bytes @ 0x4
   895  0074                     	ds	1
   896  0075                     ??_LCD_Set_Cursor:
   897  0075                     LCD_Write_Char@Data:	
   898                           ; 1 bytes @ 0x5
   899                           
   900  0075                     RTC_Read_Reg@reg_data:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0075                     ___awdiv@counter:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0075                     ___awmod@counter:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0075                     ___lwdiv@quotient:	
   910                           ; 1 bytes @ 0x5
   911                           
   912                           
   913                           ; 2 bytes @ 0x5
   914  0075                     	ds	1
   915  0076                     ?_LCD_Write_String:
   916  0076                     ___awdiv@sign:	
   917                           ; 1 bytes @ 0x6
   918                           
   919  0076                     ___awmod@sign:	
   920                           ; 1 bytes @ 0x6
   921                           
   922  0076                     LCD_Write_String@str:	
   923                           ; 1 bytes @ 0x6
   924                           
   925                           
   926                           ; 2 bytes @ 0x6
   927  0076                     	ds	1
   928  0077                     LCD_Set_Cursor@row:
   929  0077                     bcd_to_decimal@number:	
   930                           ; 1 bytes @ 0x7
   931                           
   932  0077                     ___lwdiv@counter:	
   933                           ; 1 bytes @ 0x7
   934                           
   935  0077                     ___awdiv@quotient:	
   936                           ; 1 bytes @ 0x7
   937                           
   938                           
   939                           ; 2 bytes @ 0x7
   940  0077                     	ds	1
   941  0078                     ??_LCD_Write_String:
   942  0078                     ??_RTC_Get:	
   943                           ; 1 bytes @ 0x8
   944                           
   945  0078                     ??___lldiv:	
   946                           ; 1 bytes @ 0x8
   947                           
   948  0078                     ?___lwmod:	
   949                           ; 1 bytes @ 0x8
   950                           
   951  0078                     LCD_Set_Cursor@Low4:	
   952                           ; 2 bytes @ 0x8
   953                           
   954  0078                     ___lwmod@divisor:	
   955                           ; 1 bytes @ 0x8
   956                           
   957                           
   958                           ; 2 bytes @ 0x8
   959  0078                     	ds	1
   960  0079                     ??_decimal_to_bcd:
   961  0079                     LCD_Set_Cursor@High4:	
   962                           ; 1 bytes @ 0x9
   963                           
   964  0079                     ___lldiv@quotient:	
   965                           ; 1 bytes @ 0x9
   966                           
   967                           
   968                           ; 4 bytes @ 0x9
   969  0079                     	ds	1
   970  007A                     LCD_Set_Cursor@Temp:
   971  007A                     ___lwmod@dividend:	
   972                           ; 1 bytes @ 0xA
   973                           
   974                           
   975                           ; 2 bytes @ 0xA
   976  007A                     	ds	1
   977  007B                     LCD_Write_String@i:
   978                           
   979                           ; 2 bytes @ 0xB
   980  007B                     	ds	1
   981  007C                     ??___lwmod:
   982                           
   983                           ; 1 bytes @ 0xC
   984  007C                     	ds	1
   985  007D                     edit@x:
   986  007D                     ___lldiv@counter:	
   987                           ; 1 bytes @ 0xD
   988                           
   989  007D                     ___lwmod@counter:	
   990                           ; 1 bytes @ 0xD
   991                           
   992                           
   993                           ; 1 bytes @ 0xD
   994  007D                     	ds	1
   995                           
   996                           	psect	cstackBANK0
   997  0020                     __pcstackBANK0:
   998  0020                     ?_I2C_Master_Init:
   999  0020                     ?_edit:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0020                     ?_sprintf:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0020                     edit@y:	
  1006                           ; 2 bytes @ 0x0
  1007                           
  1008  0020                     decimal_to_bcd@number:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0020                     sprintf@f:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0020                     I2C_Master_Init@I2C_BaudRate:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x0
  1019  0020                     	ds	1
  1020  0021                     ??_RTC_Set:
  1021  0021                     edit@parameter:	
  1022                           ; 1 bytes @ 0x1
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x1
  1026  0021                     	ds	1
  1027  0022                     ??_edit:
  1028  0022                     RTC_Set@sec_reg:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x2
  1033  0022                     	ds	1
  1034  0023                     RTC_Set@time_t:
  1035                           
  1036                           ; 1 bytes @ 0x3
  1037  0023                     	ds	1
  1038  0024                     ??_I2C_Master_Init:
  1039                           
  1040                           ; 1 bytes @ 0x4
  1041  0024                     	ds	5
  1042  0029                     ??_sprintf:
  1043                           
  1044                           ; 1 bytes @ 0x9
  1045  0029                     	ds	3
  1046  002C                     sprintf@flag:
  1047                           
  1048                           ; 1 bytes @ 0xC
  1049  002C                     	ds	1
  1050  002D                     sprintf@val:
  1051                           
  1052                           ; 2 bytes @ 0xD
  1053  002D                     	ds	2
  1054  002F                     sprintf@prec:
  1055                           
  1056                           ; 1 bytes @ 0xF
  1057  002F                     	ds	1
  1058  0030                     sprintf@ap:
  1059                           
  1060                           ; 1 bytes @ 0x10
  1061  0030                     	ds	1
  1062  0031                     sprintf@cp:
  1063                           
  1064                           ; 2 bytes @ 0x11
  1065  0031                     	ds	2
  1066  0033                     sprintf@len:
  1067                           
  1068                           ; 2 bytes @ 0x13
  1069  0033                     	ds	2
  1070  0035                     sprintf@sp:
  1071                           
  1072                           ; 1 bytes @ 0x15
  1073  0035                     	ds	1
  1074  0036                     sprintf@width:
  1075                           
  1076                           ; 2 bytes @ 0x16
  1077  0036                     	ds	2
  1078  0038                     sprintf@c:
  1079                           
  1080                           ; 1 bytes @ 0x18
  1081  0038                     	ds	1
  1082  0039                     ??_rtc_print:
  1083                           
  1084                           ; 1 bytes @ 0x19
  1085  0039                     	ds	7
  1086  0040                     rtc_print@buffer:
  1087                           
  1088                           ; 25 bytes @ 0x20
  1089  0040                     	ds	25
  1090  0059                     ??_main:
  1091                           
  1092                           ; 1 bytes @ 0x39
  1093  0059                     	ds	3
  1094                           
  1095                           	psect	maintext
  1096  03AC                     __pmaintext:	
  1097 ;;
  1098 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1099 ;;
  1100 ;; *************** function _main *****************
  1101 ;; Defined at:
  1102 ;;		line 116 in file "main dong ho so.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : B00/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       3       0       0       0
  1119 ;;      Totals:         0       3       0       0       0
  1120 ;;Total ram usage:        3 bytes
  1121 ;; Hardware stack levels required when called: 5
  1122 ;; This function calls:
  1123 ;;		_I2C_Master_Init
  1124 ;;		_LCD_Init
  1125 ;;		_LCD_Set_Cursor
  1126 ;;		_LCD_Write_String
  1127 ;;		_RTC_Get
  1128 ;;		_RTC_Set
  1129 ;;		_debounce
  1130 ;;		_edit
  1131 ;;		_rtc_print
  1132 ;; This function is called by:
  1133 ;;		Startup code after reset
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _main
  1139  03AC                     _main:
  1140  03AC                     l2519:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1143                           
  1144                           
  1145                           ;main dong ho so.c: 118:     ADCON1 = 0x06;
  1146  03AC  3006               	movlw	6
  1147  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  1148  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  1149  03AF  009F               	movwf	31	;volatile
  1150  03B0                     l2521:
  1151                           
  1152                           ;main dong ho so.c: 120:     I2C_Master_Init(100000);
  1153  03B0  3000               	movlw	0
  1154  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1155  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1156  03B3  00A3               	movwf	I2C_Master_Init@I2C_BaudRate+3
  1157  03B4  3001               	movlw	1
  1158  03B5  00A2               	movwf	I2C_Master_Init@I2C_BaudRate+2
  1159  03B6  3086               	movlw	134
  1160  03B7  00A1               	movwf	I2C_Master_Init@I2C_BaudRate+1
  1161  03B8  30A0               	movlw	160
  1162  03B9  00A0               	movwf	I2C_Master_Init@I2C_BaudRate
  1163  03BA  120A  158A  2569  120A  118A  	fcall	_I2C_Master_Init
  1164  03BF                     l2523:
  1165                           
  1166                           ;main dong ho so.c: 122:     LCD_Init();
  1167  03BF  120A  158A  2732  120A  118A  	fcall	_LCD_Init
  1168  03C4                     l2525:
  1169                           
  1170                           ;main dong ho so.c: 124:     LCD_Set_Cursor(1,1);
  1171  03C4  01F4               	clrf	LCD_Set_Cursor@column
  1172  03C5  0AF4               	incf	LCD_Set_Cursor@column,f
  1173  03C6  3001               	movlw	1
  1174  03C7  120A  118A  20B4  120A  118A  	fcall	_LCD_Set_Cursor
  1175  03CC                     l2527:
  1176                           
  1177                           ;main dong ho so.c: 125:     LCD_Write_String("CLOCK");
  1178  03CC  3033               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1179  03CD  00F6               	movwf	LCD_Write_String@str
  1180  03CE  3080               	movlw	128
  1181  03CF  00F7               	movwf	LCD_Write_String@str+1
  1182  03D0  120A  118A  2072  120A  118A  	fcall	_LCD_Write_String
  1183  03D5                     l2529:
  1184                           
  1185                           ;main dong ho so.c: 126:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1186  03D5  301A               	movlw	26
  1187  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1188  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1189  03D8  00DB               	movwf	??_main+2
  1190  03D9  305E               	movlw	94
  1191  03DA  00DA               	movwf	??_main+1
  1192  03DB  306D               	movlw	109
  1193  03DC  00D9               	movwf	??_main
  1194  03DD                     u2397:
  1195  03DD  0BD9               	decfsz	??_main,f
  1196  03DE  2BDD               	goto	u2397
  1197  03DF  0BDA               	decfsz	??_main+1,f
  1198  03E0  2BDD               	goto	u2397
  1199  03E1  0BDB               	decfsz	??_main+2,f
  1200  03E2  2BDD               	goto	u2397
  1201  03E3  2BE4               	nop2
  1202  03E4                     l2531:
  1203                           
  1204                           ;main dong ho so.c: 130:         if(!RB0)
  1205  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1206  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1207  03E6  1806               	btfsc	6,0	;volatile
  1208  03E7  2BE9               	goto	u2321
  1209  03E8  2BEA               	goto	u2320
  1210  03E9                     u2321:
  1211  03E9  2C94               	goto	l2553
  1212  03EA                     u2320:
  1213  03EA                     l2533:
  1214                           
  1215                           ;main dong ho so.c: 131:             if(debounce())
  1216  03EA  120A  158A  248B  120A  118A  	fcall	_debounce
  1217  03EF  1C03               	btfss	3,0
  1218  03F0  2BF2               	goto	u2331
  1219  03F1  2BF3               	goto	u2330
  1220  03F2                     u2331:
  1221  03F2  2C94               	goto	l2553
  1222  03F3                     u2330:
  1223  03F3                     l2535:
  1224                           
  1225                           ;main dong ho so.c: 132:             {;main dong ho so.c: 133:                 i = 0;
  1226  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1227  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1228  03F5  01DD               	clrf	_i
  1229  03F6                     l2537:
  1230                           
  1231                           ;main dong ho so.c: 134:                 mytime->hours = edit(1, 1, mytime->hours);
  1232  03F6  01A0               	clrf	edit@y
  1233  03F7  0AA0               	incf	edit@y,f
  1234  03F8  085C               	movf	_mytime,w
  1235  03F9  3E02               	addlw	2
  1236  03FA  0084               	movwf	4
  1237  03FB  1383               	bcf	3,7	;select IRP bank0
  1238  03FC  0800               	movf	0,w
  1239  03FD  00D9               	movwf	??_main
  1240  03FE  0859               	movf	??_main,w
  1241  03FF  00A1               	movwf	edit@parameter
  1242  0400  3001               	movlw	1
  1243  0401  120A  118A  24B5  120A  118A  	fcall	_edit
  1244  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0408  00DA               	movwf	??_main+1
  1247  0409  085C               	movf	_mytime,w
  1248  040A  3E02               	addlw	2
  1249  040B  0084               	movwf	4
  1250  040C  085A               	movf	??_main+1,w
  1251  040D  1383               	bcf	3,7	;select IRP bank0
  1252  040E  0080               	movwf	0
  1253  040F                     l2539:
  1254                           
  1255                           ;main dong ho so.c: 135:                 mytime->minutes = edit(1, 4, mytime->minutes);
  1256  040F  3004               	movlw	4
  1257  0410  00D9               	movwf	??_main
  1258  0411  0859               	movf	??_main,w
  1259  0412  00A0               	movwf	edit@y
  1260  0413  0A5C               	incf	_mytime,w
  1261  0414  0084               	movwf	4
  1262  0415  0800               	movf	0,w
  1263  0416  00DA               	movwf	??_main+1
  1264  0417  085A               	movf	??_main+1,w
  1265  0418  00A1               	movwf	edit@parameter
  1266  0419  3001               	movlw	1
  1267  041A  120A  118A  24B5  120A  118A  	fcall	_edit
  1268  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0421  00DB               	movwf	??_main+2
  1271  0422  0A5C               	incf	_mytime,w
  1272  0423  0084               	movwf	4
  1273  0424  085B               	movf	??_main+2,w
  1274  0425  1383               	bcf	3,7	;select IRP bank0
  1275  0426  0080               	movwf	0
  1276  0427                     l2541:
  1277                           
  1278                           ;main dong ho so.c: 136:                 mytime->day = edit(2, 5, mytime->day);
  1279  0427  3005               	movlw	5
  1280  0428  00D9               	movwf	??_main
  1281  0429  0859               	movf	??_main,w
  1282  042A  00A0               	movwf	edit@y
  1283  042B  085C               	movf	_mytime,w
  1284  042C  3E04               	addlw	4
  1285  042D  0084               	movwf	4
  1286  042E  0800               	movf	0,w
  1287  042F  00DA               	movwf	??_main+1
  1288  0430  085A               	movf	??_main+1,w
  1289  0431  00A1               	movwf	edit@parameter
  1290  0432  3002               	movlw	2
  1291  0433  120A  118A  24B5  120A  118A  	fcall	_edit
  1292  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1294  043A  00DB               	movwf	??_main+2
  1295  043B  085C               	movf	_mytime,w
  1296  043C  3E04               	addlw	4
  1297  043D  0084               	movwf	4
  1298  043E  085B               	movf	??_main+2,w
  1299  043F  1383               	bcf	3,7	;select IRP bank0
  1300  0440  0080               	movwf	0
  1301  0441                     l2543:
  1302                           
  1303                           ;main dong ho so.c: 137:                 mytime->month = edit(2, 8, mytime->month);
  1304  0441  3008               	movlw	8
  1305  0442  00D9               	movwf	??_main
  1306  0443  0859               	movf	??_main,w
  1307  0444  00A0               	movwf	edit@y
  1308  0445  085C               	movf	_mytime,w
  1309  0446  3E05               	addlw	5
  1310  0447  0084               	movwf	4
  1311  0448  0800               	movf	0,w
  1312  0449  00DA               	movwf	??_main+1
  1313  044A  085A               	movf	??_main+1,w
  1314  044B  00A1               	movwf	edit@parameter
  1315  044C  3002               	movlw	2
  1316  044D  120A  118A  24B5  120A  118A  	fcall	_edit
  1317  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0454  00DB               	movwf	??_main+2
  1320  0455  085C               	movf	_mytime,w
  1321  0456  3E05               	addlw	5
  1322  0457  0084               	movwf	4
  1323  0458  085B               	movf	??_main+2,w
  1324  0459  1383               	bcf	3,7	;select IRP bank0
  1325  045A  0080               	movwf	0
  1326  045B                     l2545:
  1327                           
  1328                           ;main dong ho so.c: 138:                 mytime->year = edit(2, 13, mytime->year);
  1329  045B  300D               	movlw	13
  1330  045C  00D9               	movwf	??_main
  1331  045D  0859               	movf	??_main,w
  1332  045E  00A0               	movwf	edit@y
  1333  045F  085C               	movf	_mytime,w
  1334  0460  3E06               	addlw	6
  1335  0461  0084               	movwf	4
  1336  0462  0800               	movf	0,w
  1337  0463  00DA               	movwf	??_main+1
  1338  0464  085A               	movf	??_main+1,w
  1339  0465  00A1               	movwf	edit@parameter
  1340  0466  3002               	movlw	2
  1341  0467  120A  118A  24B5  120A  118A  	fcall	_edit
  1342  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1343  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1344  046E  00DB               	movwf	??_main+2
  1345  046F  085C               	movf	_mytime,w
  1346  0470  3E06               	addlw	6
  1347  0471  0084               	movwf	4
  1348  0472  085B               	movf	??_main+2,w
  1349  0473  1383               	bcf	3,7	;select IRP bank0
  1350  0474  0080               	movwf	0
  1351  0475                     l2547:	
  1352                           ;main dong ho so.c: 140:                 while(debounce());
  1353                           
  1354  0475  120A  158A  248B  120A  118A  	fcall	_debounce
  1355  047A  1803               	btfsc	3,0
  1356  047B  2C7D               	goto	u2341
  1357  047C  2C7E               	goto	u2340
  1358  047D                     u2341:
  1359  047D  2C75               	goto	l2547
  1360  047E                     u2340:
  1361  047E                     l2549:
  1362                           
  1363                           ;main dong ho so.c: 143:                 RTC_Set(mytime);
  1364  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1365  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0480  085C               	movf	_mytime,w
  1367  0481  120A  118A  22C5  120A  118A  	fcall	_RTC_Set
  1368  0486                     l2551:
  1369                           
  1370                           ;main dong ho so.c: 145:                 _delay((unsigned long)((200)*(20000000/4000.0))
      +                          );
  1371  0486  3006               	movlw	6
  1372  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0489  00DB               	movwf	??_main+2
  1375  048A  3013               	movlw	19
  1376  048B  00DA               	movwf	??_main+1
  1377  048C  30AD               	movlw	173
  1378  048D  00D9               	movwf	??_main
  1379  048E                     u2407:
  1380  048E  0BD9               	decfsz	??_main,f
  1381  048F  2C8E               	goto	u2407
  1382  0490  0BDA               	decfsz	??_main+1,f
  1383  0491  2C8E               	goto	u2407
  1384  0492  0BDB               	decfsz	??_main+2,f
  1385  0493  2C8E               	goto	u2407
  1386  0494                     l2553:
  1387                           
  1388                           ;main dong ho so.c: 150:         mytime = RTC_Get();
  1389  0494  120A  118A  2205  120A  118A  	fcall	_RTC_Get
  1390  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1391  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1392  049B  00D9               	movwf	??_main
  1393  049C  0859               	movf	??_main,w
  1394  049D  00DC               	movwf	_mytime
  1395  049E                     l2555:
  1396                           
  1397                           ;main dong ho so.c: 154:         rtc_print();
  1398  049E  120A  118A  2159  120A  118A  	fcall	_rtc_print
  1399  04A3                     l2557:
  1400                           
  1401                           ;main dong ho so.c: 155:         _delay((unsigned long)((100)*(20000000/4000.0)));
  1402  04A3  3003               	movlw	3
  1403  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1404  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1405  04A6  00DB               	movwf	??_main+2
  1406  04A7  308A               	movlw	138
  1407  04A8  00DA               	movwf	??_main+1
  1408  04A9  3055               	movlw	85
  1409  04AA  00D9               	movwf	??_main
  1410  04AB                     u2417:
  1411  04AB  0BD9               	decfsz	??_main,f
  1412  04AC  2CAB               	goto	u2417
  1413  04AD  0BDA               	decfsz	??_main+1,f
  1414  04AE  2CAB               	goto	u2417
  1415  04AF  0BDB               	decfsz	??_main+2,f
  1416  04B0  2CAB               	goto	u2417
  1417  04B1  2BE4               	goto	l2531
  1418  04B2  120A  118A  2800   	ljmp	start
  1419  04B5                     __end_of_main:
  1420                           
  1421                           	psect	text1
  1422  0159                     __ptext1:	
  1423 ;; *************** function _rtc_print *****************
  1424 ;; Defined at:
  1425 ;;		line 18 in file "main dong ho so.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  buffer         25   32[BANK0 ] unsigned char [25]
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       0       0       0       0
  1440 ;;      Locals:         0      25       0       0       0
  1441 ;;      Temps:          0       7       0       0       0
  1442 ;;      Totals:         0      32       0       0       0
  1443 ;;Total ram usage:       32 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 3
  1446 ;; This function calls:
  1447 ;;		_LCD_Set_Cursor
  1448 ;;		_LCD_Write_String
  1449 ;;		_sprintf
  1450 ;;		_strcat
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _rtc_print
  1458  0159                     _rtc_print:
  1459  0159                     l2335:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _rtc_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1462                           
  1463                           
  1464                           ;main dong ho so.c: 20:     char buffer[25];;main dong ho so.c: 23:     sprintf( buffer,
      +                           "%02u:%02u:%02u", (int)mytime->hours, (int)mytime->minutes, (int)mytime->seconds);
  1465  0159  301D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1466  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1467  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1468  015C  00B9               	movwf	??_rtc_print
  1469  015D  0839               	movf	??_rtc_print,w
  1470  015E  00A0               	movwf	sprintf@f
  1471  015F  085C               	movf	_mytime,w
  1472  0160  3E02               	addlw	2
  1473  0161  0084               	movwf	4
  1474  0162  1383               	bcf	3,7	;select IRP bank0
  1475  0163  0800               	movf	0,w
  1476  0164  00BA               	movwf	??_rtc_print+1
  1477  0165  01BB               	clrf	??_rtc_print+2
  1478  0166  083A               	movf	??_rtc_print+1,w
  1479  0167  00A1               	movwf	?_sprintf+1
  1480  0168  083B               	movf	??_rtc_print+2,w
  1481  0169  00A2               	movwf	?_sprintf+2
  1482  016A  0A5C               	incf	_mytime,w
  1483  016B  0084               	movwf	4
  1484  016C  0800               	movf	0,w
  1485  016D  00BC               	movwf	??_rtc_print+3
  1486  016E  01BD               	clrf	??_rtc_print+4
  1487  016F  083C               	movf	??_rtc_print+3,w
  1488  0170  00A3               	movwf	?_sprintf+3
  1489  0171  083D               	movf	??_rtc_print+4,w
  1490  0172  00A4               	movwf	?_sprintf+4
  1491  0173  085C               	movf	_mytime,w
  1492  0174  0084               	movwf	4
  1493  0175  0800               	movf	0,w
  1494  0176  00BE               	movwf	??_rtc_print+5
  1495  0177  01BF               	clrf	??_rtc_print+6
  1496  0178  083E               	movf	??_rtc_print+5,w
  1497  0179  00A5               	movwf	?_sprintf+5
  1498  017A  083F               	movf	??_rtc_print+6,w
  1499  017B  00A6               	movwf	?_sprintf+6
  1500  017C  3040               	movlw	(low (rtc_print@buffer| 0))& (0+255)
  1501  017D  120A  118A  25C7  120A  118A  	fcall	_sprintf
  1502  0182                     l2337:
  1503                           
  1504                           ;main dong ho so.c: 25:     if( ( (int)mytime->hours >= 1 ) && ( (int)mytime->hours <= 1
      +                          2) )
  1505  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0184  085C               	movf	_mytime,w
  1508  0185  3E02               	addlw	2
  1509  0186  0084               	movwf	4
  1510  0187  1383               	bcf	3,7	;select IRP bank0
  1511  0188  0800               	movf	0,w
  1512  0189  1903               	btfsc	3,2
  1513  018A  298C               	goto	u2141
  1514  018B  298D               	goto	u2140
  1515  018C                     u2141:
  1516  018C  29A1               	goto	l2343
  1517  018D                     u2140:
  1518  018D                     l2339:
  1519  018D  085C               	movf	_mytime,w
  1520  018E  3E02               	addlw	2
  1521  018F  0084               	movwf	4
  1522  0190  300D               	movlw	13
  1523  0191  0200               	subwf	0,w
  1524  0192  1803               	skipnc
  1525  0193  2995               	goto	u2151
  1526  0194  2996               	goto	u2150
  1527  0195                     u2151:
  1528  0195  29A1               	goto	l2343
  1529  0196                     u2150:
  1530  0196                     l2341:
  1531                           
  1532                           ;main dong ho so.c: 26:         strcat(buffer, " AM");
  1533  0196  3039               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1534  0197  00B9               	movwf	??_rtc_print
  1535  0198  0839               	movf	??_rtc_print,w
  1536  0199  00F0               	movwf	strcat@from
  1537  019A  3040               	movlw	(low (rtc_print@buffer| 0))& (0+255)
  1538  019B  120A  158A  250C  120A  118A  	fcall	_strcat
  1539  01A0  29AB               	goto	l2345
  1540  01A1                     l2343:
  1541                           
  1542                           ;main dong ho so.c: 28:         strcat(buffer, " PM");
  1543  01A1  303D               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1544  01A2  00B9               	movwf	??_rtc_print
  1545  01A3  0839               	movf	??_rtc_print,w
  1546  01A4  00F0               	movwf	strcat@from
  1547  01A5  3040               	movlw	(low (rtc_print@buffer| 0))& (0+255)
  1548  01A6  120A  158A  250C  120A  118A  	fcall	_strcat
  1549  01AB                     l2345:
  1550                           
  1551                           ;main dong ho so.c: 30:     LCD_Set_Cursor(1,1);
  1552  01AB  01F4               	clrf	LCD_Set_Cursor@column
  1553  01AC  0AF4               	incf	LCD_Set_Cursor@column,f
  1554  01AD  3001               	movlw	1
  1555  01AE  120A  118A  20B4  120A  118A  	fcall	_LCD_Set_Cursor
  1556  01B3                     l2347:
  1557                           
  1558                           ;main dong ho so.c: 31:     LCD_Write_String( buffer);
  1559  01B3  3040               	movlw	(low (rtc_print@buffer| 0))& (0+255)
  1560  01B4  00F6               	movwf	LCD_Write_String@str
  1561  01B5  3000               	movlw	0
  1562  01B6  00F7               	movwf	LCD_Write_String@str+1
  1563  01B7  120A  118A  2072  120A  118A  	fcall	_LCD_Write_String
  1564  01BC                     l2349:
  1565                           
  1566                           ;main dong ho so.c: 34:     sprintf( buffer, "%s %02u-%02u-%02u", days[(int)mytime->dow-
      +                          1], (int)mytime->day, (int)mytime->month, 2000 + (int)mytime->year);
  1567  01BC  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1568  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1569  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1570  01BF  00B9               	movwf	??_rtc_print
  1571  01C0  0839               	movf	??_rtc_print,w
  1572  01C1  00A0               	movwf	sprintf@f
  1573  01C2  085C               	movf	_mytime,w
  1574  01C3  3E03               	addlw	3
  1575  01C4  0084               	movwf	4
  1576  01C5  1383               	bcf	3,7	;select IRP bank0
  1577  01C6  0800               	movf	0,w
  1578  01C7  3E64               	addlw	(low ((_days| 0+255)))& (0+255)
  1579  01C8  0084               	movwf	4
  1580  01C9  0800               	movf	0,w
  1581  01CA  00A1               	movwf	low ((?_sprintf| 0+1))
  1582  01CB  3000               	movlw	0
  1583  01CC  1D03               	btfss	3,2
  1584  01CD  3080               	movlw	128
  1585  01CE  00A2               	movwf	(low ((?_sprintf| 0+1))+1)
  1586  01CF  085C               	movf	_mytime,w
  1587  01D0  3E04               	addlw	4
  1588  01D1  0084               	movwf	4
  1589  01D2  0800               	movf	0,w
  1590  01D3  00BA               	movwf	??_rtc_print+1
  1591  01D4  01BB               	clrf	??_rtc_print+2
  1592  01D5  083A               	movf	??_rtc_print+1,w
  1593  01D6  00A3               	movwf	?_sprintf+3
  1594  01D7  083B               	movf	??_rtc_print+2,w
  1595  01D8  00A4               	movwf	?_sprintf+4
  1596  01D9  085C               	movf	_mytime,w
  1597  01DA  3E05               	addlw	5
  1598  01DB  0084               	movwf	4
  1599  01DC  0800               	movf	0,w
  1600  01DD  00BC               	movwf	??_rtc_print+3
  1601  01DE  01BD               	clrf	??_rtc_print+4
  1602  01DF  083C               	movf	??_rtc_print+3,w
  1603  01E0  00A5               	movwf	?_sprintf+5
  1604  01E1  083D               	movf	??_rtc_print+4,w
  1605  01E2  00A6               	movwf	?_sprintf+6
  1606  01E3  085C               	movf	_mytime,w
  1607  01E4  3E06               	addlw	6
  1608  01E5  0084               	movwf	4
  1609  01E6  0800               	movf	0,w
  1610  01E7  3ED0               	addlw	208
  1611  01E8  00A7               	movwf	?_sprintf+7
  1612  01E9  3007               	movlw	7
  1613  01EA  1803               	skipnc
  1614  01EB  3008               	movlw	8
  1615  01EC  00A8               	movwf	?_sprintf+8
  1616  01ED  3040               	movlw	(low (rtc_print@buffer| 0))& (0+255)
  1617  01EE  120A  118A  25C7  120A  118A  	fcall	_sprintf
  1618  01F3                     l2351:
  1619                           
  1620                           ;main dong ho so.c: 36:     LCD_Set_Cursor(2,1);
  1621  01F3  01F4               	clrf	LCD_Set_Cursor@column
  1622  01F4  0AF4               	incf	LCD_Set_Cursor@column,f
  1623  01F5  3002               	movlw	2
  1624  01F6  120A  118A  20B4  120A  118A  	fcall	_LCD_Set_Cursor
  1625  01FB                     l2353:
  1626                           
  1627                           ;main dong ho so.c: 37:     LCD_Write_String( buffer);
  1628  01FB  3040               	movlw	(low (rtc_print@buffer| 0))& (0+255)
  1629  01FC  00F6               	movwf	LCD_Write_String@str
  1630  01FD  3000               	movlw	0
  1631  01FE  00F7               	movwf	LCD_Write_String@str+1
  1632  01FF  120A  118A  2072  120A  118A  	fcall	_LCD_Write_String
  1633  0204                     l37:
  1634  0204  0008               	return
  1635  0205                     __end_of_rtc_print:
  1636                           
  1637                           	psect	text2
  1638  0D0C                     __ptext2:	
  1639 ;; *************** function _strcat *****************
  1640 ;; Defined at:
  1641 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcat.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  to              1    wreg     PTR unsigned char 
  1644 ;;		 -> rtc_print@buffer(25), 
  1645 ;;  from            1    0[COMMON] PTR const unsigned char 
  1646 ;;		 -> STR_10(4), STR_9(4), 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  to              1    2[COMMON] PTR unsigned char 
  1649 ;;		 -> rtc_print@buffer(25), 
  1650 ;;  cp              1    3[COMMON] PTR unsigned char 
  1651 ;;		 -> rtc_print@buffer(25), 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      PTR unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         1       0       0       0       0
  1662 ;;      Locals:         2       0       0       0       0
  1663 ;;      Temps:          1       0       0       0       0
  1664 ;;      Totals:         4       0       0       0       0
  1665 ;;Total ram usage:        4 bytes
  1666 ;; Hardware stack levels used: 2
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_rtc_print
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _strcat
  1676  0D0C                     _strcat:
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+pclath]
  1680                           ;strcat@to stored from wreg
  1681  0D0C  00F2               	movwf	strcat@to
  1682  0D0D                     l2203:
  1683  0D0D  0872               	movf	strcat@to,w
  1684  0D0E  00F1               	movwf	??_strcat
  1685  0D0F  0871               	movf	??_strcat,w
  1686  0D10  00F3               	movwf	strcat@cp
  1687  0D11  2D16               	goto	l2207
  1688  0D12                     l2205:
  1689  0D12  3001               	movlw	1
  1690  0D13  00F1               	movwf	??_strcat
  1691  0D14  0871               	movf	??_strcat,w
  1692  0D15  07F3               	addwf	strcat@cp,f
  1693  0D16                     l2207:
  1694  0D16  0873               	movf	strcat@cp,w
  1695  0D17  0084               	movwf	4
  1696  0D18  1383               	bcf	3,7	;select IRP bank0
  1697  0D19  0800               	movf	0,w
  1698  0D1A  1D03               	btfss	3,2
  1699  0D1B  2D1D               	goto	u1861
  1700  0D1C  2D1E               	goto	u1860
  1701  0D1D                     u1861:
  1702  0D1D  2D12               	goto	l2205
  1703  0D1E                     u1860:
  1704  0D1E  2D27               	goto	l2211
  1705  0D1F                     l2209:
  1706  0D1F  3001               	movlw	1
  1707  0D20  00F1               	movwf	??_strcat
  1708  0D21  0871               	movf	??_strcat,w
  1709  0D22  07F3               	addwf	strcat@cp,f
  1710  0D23  3001               	movlw	1
  1711  0D24  00F1               	movwf	??_strcat
  1712  0D25  0871               	movf	??_strcat,w
  1713  0D26  07F0               	addwf	strcat@from,f
  1714  0D27                     l2211:
  1715  0D27  0870               	movf	strcat@from,w
  1716  0D28  0084               	movwf	4
  1717  0D29  120A  118A  200D  120A  158A  	fcall	stringdir
  1718  0D2E  00F1               	movwf	??_strcat
  1719  0D2F  0873               	movf	strcat@cp,w
  1720  0D30  0084               	movwf	4
  1721  0D31  0871               	movf	??_strcat,w
  1722  0D32  0080               	movwf	0
  1723  0D33  0800               	movf	0,w
  1724  0D34  1D03               	btfss	3,2
  1725  0D35  2D37               	goto	u1871
  1726  0D36  2D38               	goto	u1870
  1727  0D37                     u1871:
  1728  0D37  2D1F               	goto	l2209
  1729  0D38                     u1870:
  1730  0D38                     l881:
  1731  0D38  0008               	return
  1732  0D39                     __end_of_strcat:
  1733                           
  1734                           	psect	text3
  1735  05C7                     __ptext3:	
  1736 ;; *************** function _sprintf *****************
  1737 ;; Defined at:
  1738 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  sp              1    wreg     PTR unsigned char 
  1741 ;;		 -> rtc_print@buffer(25), 
  1742 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1743 ;;		 -> STR_11(18), STR_8(15), 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1746 ;;		 -> rtc_print@buffer(25), 
  1747 ;;  tmpval          4    0        struct .
  1748 ;;  width           2   22[BANK0 ] int 
  1749 ;;  len             2   19[BANK0 ] unsigned int 
  1750 ;;  cp              2   17[BANK0 ] PTR const unsigned char 
  1751 ;;		 -> STR_21(7), ?_sprintf(2), STR_20(4), STR_19(4), 
  1752 ;;		 -> STR_18(4), STR_17(4), STR_16(4), STR_15(4), 
  1753 ;;		 -> STR_14(4), STR_7(4), STR_6(4), STR_5(4), 
  1754 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  1755 ;;  val             2   13[BANK0 ] unsigned int 
  1756 ;;  c               1   24[BANK0 ] unsigned char 
  1757 ;;  ap              1   16[BANK0 ] PTR void [1]
  1758 ;;		 -> ?_sprintf(2), 
  1759 ;;  prec            1   15[BANK0 ] char 
  1760 ;;  flag            1   12[BANK0 ] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  2    0[BANK0 ] int 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       9       0       0       0
  1771 ;;      Locals:         0      13       0       0       0
  1772 ;;      Temps:          0       3       0       0       0
  1773 ;;      Totals:         0      25       0       0       0
  1774 ;;Total ram usage:       25 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 1
  1777 ;; This function calls:
  1778 ;;		___lwdiv
  1779 ;;		___lwmod
  1780 ;;		___wmul
  1781 ;;		_isdigit
  1782 ;; This function is called by:
  1783 ;;		_rtc_print
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _sprintf
  1789  05C7                     _sprintf:
  1790                           
  1791                           ;incstack = 0
  1792                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1793                           ;sprintf@sp stored from wreg
  1794  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1795  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1796  05C9  00B5               	movwf	sprintf@sp
  1797  05CA                     l2071:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1800  05CA  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1801  05CB  00A9               	movwf	??_sprintf
  1802  05CC  0829               	movf	??_sprintf,w
  1803  05CD  00B0               	movwf	sprintf@ap
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1806  05CE  2FCE               	goto	l2189
  1807  05CF                     l2073:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1810  05CF  3025               	movlw	37
  1811  05D0  0638               	xorwf	sprintf@c,w
  1812  05D1  1903               	btfsc	3,2
  1813  05D2  2DD4               	goto	u1681
  1814  05D3  2DD5               	goto	u1680
  1815  05D4                     u1681:
  1816  05D4  2DE1               	goto	l2079
  1817  05D5                     u1680:
  1818  05D5                     l2075:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1821  05D5  0838               	movf	sprintf@c,w
  1822  05D6  00A9               	movwf	??_sprintf
  1823  05D7  0835               	movf	sprintf@sp,w
  1824  05D8  0084               	movwf	4
  1825  05D9  0829               	movf	??_sprintf,w
  1826  05DA  1383               	bcf	3,7	;select IRP bank0
  1827  05DB  0080               	movwf	0
  1828  05DC                     l2077:
  1829  05DC  3001               	movlw	1
  1830  05DD  00A9               	movwf	??_sprintf
  1831  05DE  0829               	movf	??_sprintf,w
  1832  05DF  07B5               	addwf	sprintf@sp,f
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1835  05E0  2FCE               	goto	l2189
  1836  05E1                     l2079:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1839  05E1  01B6               	clrf	sprintf@width
  1840  05E2  01B7               	clrf	sprintf@width+1
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1843  05E3  01AC               	clrf	sprintf@flag
  1844  05E4  2DEA               	goto	l2085
  1845  05E5                     l372:	
  1846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1847                           
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1850  05E5  152C               	bsf	sprintf@flag,2
  1851  05E6                     l2081:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 598:     f++;
  1854  05E6  3001               	movlw	1
  1855  05E7  00A9               	movwf	??_sprintf
  1856  05E8  0829               	movf	??_sprintf,w
  1857  05E9  07A0               	addwf	sprintf@f,f
  1858  05EA                     l2085:	
  1859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1860                           
  1861  05EA  0820               	movf	sprintf@f,w
  1862  05EB  0084               	movwf	4
  1863  05EC  120A  118A  200D  120A  118A  	fcall	stringdir
  1864  05F1  00A9               	movwf	??_sprintf
  1865  05F2  01AA               	clrf	??_sprintf+1
  1866                           
  1867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1868                           ; Switch size 1, requested type "simple"
  1869                           ; Number of cases is 1, Range of values is 0 to 0
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte            4     3 (average)
  1873                           ; direct_byte           11     8 (fixed)
  1874                           ; jumptable            260     6 (fixed)
  1875                           ;	Chosen strategy is simple_byte
  1876  05F3  082A               	movf	??_sprintf+1,w
  1877  05F4  3A00               	xorlw	0	; case 0
  1878  05F5  1903               	skipnz
  1879  05F6  2DF8               	goto	l2657
  1880  05F7  2DFD               	goto	l2087
  1881  05F8                     l2657:
  1882                           
  1883                           ; Switch size 1, requested type "simple"
  1884                           ; Number of cases is 1, Range of values is 48 to 48
  1885                           ; switch strategies available:
  1886                           ; Name         Instructions Cycles
  1887                           ; simple_byte            4     3 (average)
  1888                           ; direct_byte           14    11 (fixed)
  1889                           ; jumptable            263     9 (fixed)
  1890                           ;	Chosen strategy is simple_byte
  1891  05F8  0829               	movf	??_sprintf,w
  1892  05F9  3A30               	xorlw	48	; case 48
  1893  05FA  1903               	skipnz
  1894  05FB  2DE5               	goto	l372
  1895  05FC  2DFD               	goto	l2087
  1896  05FD                     l2087:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1899  05FD  0820               	movf	sprintf@f,w
  1900  05FE  0084               	movwf	4
  1901  05FF  120A  118A  200D  120A  118A  	fcall	stringdir
  1902  0604  120A  158A  23B8  120A  118A  	fcall	_isdigit
  1903  0609  1C03               	btfss	3,0
  1904  060A  2E0C               	goto	u1691
  1905  060B  2E0D               	goto	u1690
  1906  060C                     u1691:
  1907  060C  2EDA               	goto	l2137
  1908  060D                     u1690:
  1909  060D                     l2089:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1912  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1913  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1914  060F  01B6               	clrf	sprintf@width
  1915  0610  01B7               	clrf	sprintf@width+1
  1916  0611                     l2091:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1919  0611  300A               	movlw	10
  1920  0612  00F0               	movwf	___wmul@multiplier
  1921  0613  3000               	movlw	0
  1922  0614  00F1               	movwf	___wmul@multiplier+1
  1923  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0617  0837               	movf	sprintf@width+1,w
  1926  0618  00F3               	movwf	___wmul@multiplicand+1
  1927  0619  0836               	movf	sprintf@width,w
  1928  061A  00F2               	movwf	___wmul@multiplicand
  1929  061B  120A  158A  2466  120A  118A  	fcall	___wmul
  1930  0620  0871               	movf	?___wmul+1,w
  1931  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0623  00B7               	movwf	sprintf@width+1
  1934  0624  0870               	movf	?___wmul,w
  1935  0625  00B6               	movwf	sprintf@width
  1936  0626                     l2093:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1939  0626  0820               	movf	sprintf@f,w
  1940  0627  0084               	movwf	4
  1941  0628  120A  118A  200D  120A  118A  	fcall	stringdir
  1942  062D  3ED0               	addlw	208
  1943  062E  00A9               	movwf	??_sprintf
  1944  062F  30FF               	movlw	255
  1945  0630  1803               	skipnc
  1946  0631  3000               	movlw	0
  1947  0632  00AA               	movwf	??_sprintf+1
  1948  0633  0829               	movf	??_sprintf,w
  1949  0634  07B6               	addwf	sprintf@width,f
  1950  0635  1803               	skipnc
  1951  0636  0AB7               	incf	sprintf@width+1,f
  1952  0637  082A               	movf	??_sprintf+1,w
  1953  0638  07B7               	addwf	sprintf@width+1,f
  1954  0639                     l2095:
  1955  0639  3001               	movlw	1
  1956  063A  00A9               	movwf	??_sprintf
  1957  063B  0829               	movf	??_sprintf,w
  1958  063C  07A0               	addwf	sprintf@f,f
  1959  063D                     l2097:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1962  063D  0820               	movf	sprintf@f,w
  1963  063E  0084               	movwf	4
  1964  063F  120A  118A  200D  120A  118A  	fcall	stringdir
  1965  0644  120A  158A  23B8  120A  118A  	fcall	_isdigit
  1966  0649  1803               	btfsc	3,0
  1967  064A  2E4C               	goto	u1701
  1968  064B  2E4D               	goto	u1700
  1969  064C                     u1701:
  1970  064C  2E11               	goto	l2091
  1971  064D                     u1700:
  1972  064D  2EDA               	goto	l2137
  1973  064E                     l2099:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  1976  064E  0830               	movf	sprintf@ap,w
  1977  064F  0084               	movwf	4
  1978  0650  1383               	bcf	3,7	;select IRP bank0
  1979  0651  0800               	movf	0,w
  1980  0652  00B1               	movwf	sprintf@cp
  1981  0653  0A84               	incf	4,f
  1982  0654  0800               	movf	0,w
  1983  0655  0384               	decf	4,f
  1984  0656  00B2               	movwf	sprintf@cp+1
  1985  0657                     l2101:
  1986  0657  3002               	movlw	2
  1987  0658  00A9               	movwf	??_sprintf
  1988  0659  0829               	movf	??_sprintf,w
  1989  065A  07B0               	addwf	sprintf@ap,f
  1990  065B                     l2103:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  1993  065B  0831               	movf	sprintf@cp,w
  1994  065C  0432               	iorwf	sprintf@cp+1,w
  1995  065D  1D03               	btfss	3,2
  1996  065E  2E60               	goto	u1711
  1997  065F  2E61               	goto	u1710
  1998  0660                     u1711:
  1999  0660  2E65               	goto	l2107
  2000  0661                     u1710:
  2001  0661                     l2105:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  2004  0661  302C               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2005  0662  00B1               	movwf	sprintf@cp
  2006  0663  3080               	movlw	128
  2007  0664  00B2               	movwf	sprintf@cp+1
  2008  0665                     l2107:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  2011  0665  01B3               	clrf	sprintf@len
  2012  0666  01B4               	clrf	sprintf@len+1
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  2015  0667  2E6E               	goto	l2111
  2016  0668                     l2109:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 773:     len++;
  2019  0668  3001               	movlw	1
  2020  0669  07B3               	addwf	sprintf@len,f
  2021  066A  1803               	skipnc
  2022  066B  0AB4               	incf	sprintf@len+1,f
  2023  066C  3000               	movlw	0
  2024  066D  07B4               	addwf	sprintf@len+1,f
  2025  066E                     l2111:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  2028  066E  0833               	movf	sprintf@len,w
  2029  066F  0731               	addwf	sprintf@cp,w
  2030  0670  0084               	movwf	4
  2031  0671  0832               	movf	sprintf@cp+1,w
  2032  0672  1803               	skipnc
  2033  0673  0A32               	incf	sprintf@cp+1,w
  2034  0674  00FF               	movwf	btemp+1
  2035  0675  120A  118A  2003  120A  118A  	fcall	stringtab
  2036  067A  3A00               	xorlw	0
  2037  067B  1D03               	skipz
  2038  067C  2E7E               	goto	u1721
  2039  067D  2E7F               	goto	u1720
  2040  067E                     u1721:
  2041  067E  2E68               	goto	l2109
  2042  067F                     u1720:
  2043  067F                     l2113:
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  2046  067F  0837               	movf	sprintf@width+1,w
  2047  0680  0234               	subwf	sprintf@len+1,w
  2048  0681  1D03               	skipz
  2049  0682  2E85               	goto	u1735
  2050  0683  0836               	movf	sprintf@width,w
  2051  0684  0233               	subwf	sprintf@len,w
  2052  0685                     u1735:
  2053  0685  1803               	skipnc
  2054  0686  2E88               	goto	u1731
  2055  0687  2E89               	goto	u1730
  2056  0688                     u1731:
  2057  0688  2E90               	goto	l2117
  2058  0689                     u1730:
  2059  0689                     l2115:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  2062  0689  0833               	movf	sprintf@len,w
  2063  068A  02B6               	subwf	sprintf@width,f
  2064  068B  0834               	movf	sprintf@len+1,w
  2065  068C  1C03               	skipc
  2066  068D  03B7               	decf	sprintf@width+1,f
  2067  068E  02B7               	subwf	sprintf@width+1,f
  2068  068F  2E9E               	goto	l2123
  2069  0690                     l2117:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  2072  0690  01B6               	clrf	sprintf@width
  2073  0691  01B7               	clrf	sprintf@width+1
  2074  0692  2E9E               	goto	l2123
  2075  0693                     l2119:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  2078  0693  3020               	movlw	32
  2079  0694  00A9               	movwf	??_sprintf
  2080  0695  0835               	movf	sprintf@sp,w
  2081  0696  0084               	movwf	4
  2082  0697  0829               	movf	??_sprintf,w
  2083  0698  1383               	bcf	3,7	;select IRP bank0
  2084  0699  0080               	movwf	0
  2085  069A                     l2121:
  2086  069A  3001               	movlw	1
  2087  069B  00A9               	movwf	??_sprintf
  2088  069C  0829               	movf	??_sprintf,w
  2089  069D  07B5               	addwf	sprintf@sp,f
  2090  069E                     l2123:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  2093  069E  30FF               	movlw	255
  2094  069F  07B6               	addwf	sprintf@width,f
  2095  06A0  1803               	skipnc
  2096  06A1  0AB7               	incf	sprintf@width+1,f
  2097  06A2  30FF               	movlw	255
  2098  06A3  07B7               	addwf	sprintf@width+1,f
  2099  06A4  0A36               	incf	sprintf@width,w
  2100  06A5  1D03               	skipz
  2101  06A6  2EAB               	goto	u1741
  2102  06A7  0A37               	incf	sprintf@width+1,w
  2103  06A8  1D03               	btfss	3,2
  2104  06A9  2EAB               	goto	u1741
  2105  06AA  2EAC               	goto	u1740
  2106  06AB                     u1741:
  2107  06AB  2E93               	goto	l2119
  2108  06AC                     u1740:
  2109  06AC  2EC6               	goto	l2131
  2110  06AD                     l2125:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  2113  06AD  0832               	movf	sprintf@cp+1,w
  2114  06AE  00FF               	movwf	btemp+1
  2115  06AF  0831               	movf	sprintf@cp,w
  2116  06B0  0084               	movwf	4
  2117  06B1  120A  118A  2003  120A  118A  	fcall	stringtab
  2118  06B6  00A9               	movwf	??_sprintf
  2119  06B7  0835               	movf	sprintf@sp,w
  2120  06B8  0084               	movwf	4
  2121  06B9  0829               	movf	??_sprintf,w
  2122  06BA  1383               	bcf	3,7	;select IRP bank0
  2123  06BB  0080               	movwf	0
  2124  06BC                     l2127:
  2125  06BC  3001               	movlw	1
  2126  06BD  07B1               	addwf	sprintf@cp,f
  2127  06BE  1803               	skipnc
  2128  06BF  0AB2               	incf	sprintf@cp+1,f
  2129  06C0  3000               	movlw	0
  2130  06C1  07B2               	addwf	sprintf@cp+1,f
  2131  06C2                     l2129:
  2132  06C2  3001               	movlw	1
  2133  06C3  00A9               	movwf	??_sprintf
  2134  06C4  0829               	movf	??_sprintf,w
  2135  06C5  07B5               	addwf	sprintf@sp,f
  2136  06C6                     l2131:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  2139  06C6  3001               	movlw	1
  2140  06C7  02B3               	subwf	sprintf@len,f
  2141  06C8  3000               	movlw	0
  2142  06C9  1C03               	skipc
  2143  06CA  03B4               	decf	sprintf@len+1,f
  2144  06CB  02B4               	subwf	sprintf@len+1,f
  2145  06CC  0A33               	incf	sprintf@len,w
  2146  06CD  1D03               	skipz
  2147  06CE  2ED3               	goto	u1751
  2148  06CF  0A34               	incf	sprintf@len+1,w
  2149  06D0  1D03               	btfss	3,2
  2150  06D1  2ED3               	goto	u1751
  2151  06D2  2ED4               	goto	u1750
  2152  06D3                     u1751:
  2153  06D3  2EAD               	goto	l2125
  2154  06D4                     u1750:
  2155  06D4  2FCE               	goto	l2189
  2156  06D5                     l2133:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2159  06D5  30C0               	movlw	192
  2160  06D6  00A9               	movwf	??_sprintf
  2161  06D7  0829               	movf	??_sprintf,w
  2162  06D8  04AC               	iorwf	sprintf@flag,f
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 845:    break;
  2165  06D9  2EF9               	goto	l2139
  2166  06DA                     l2137:
  2167  06DA  3001               	movlw	1
  2168  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2169  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2170  06DD  07A0               	addwf	sprintf@f,f
  2171  06DE  30FF               	movlw	-1
  2172  06DF  0720               	addwf	sprintf@f,w
  2173  06E0  0084               	movwf	4
  2174  06E1  120A  118A  200D  120A  118A  	fcall	stringdir
  2175  06E6  00B8               	movwf	sprintf@c
  2176  06E7  00A9               	movwf	??_sprintf
  2177  06E8  01AA               	clrf	??_sprintf+1
  2178                           
  2179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2180                           ; Switch size 1, requested type "simple"
  2181                           ; Number of cases is 1, Range of values is 0 to 0
  2182                           ; switch strategies available:
  2183                           ; Name         Instructions Cycles
  2184                           ; simple_byte            4     3 (average)
  2185                           ; direct_byte           11     8 (fixed)
  2186                           ; jumptable            260     6 (fixed)
  2187                           ;	Chosen strategy is simple_byte
  2188  06E9  082A               	movf	??_sprintf+1,w
  2189  06EA  3A00               	xorlw	0	; case 0
  2190  06EB  1903               	skipnz
  2191  06EC  2EEE               	goto	l2659
  2192  06ED  2FCE               	goto	l2189
  2193  06EE                     l2659:
  2194                           
  2195                           ; Switch size 1, requested type "simple"
  2196                           ; Number of cases is 3, Range of values is 0 to 117
  2197                           ; switch strategies available:
  2198                           ; Name         Instructions Cycles
  2199                           ; simple_byte           10     6 (average)
  2200                           ; jumptable            260     6 (fixed)
  2201                           ;	Chosen strategy is simple_byte
  2202  06EE  0829               	movf	??_sprintf,w
  2203  06EF  3A00               	xorlw	0	; case 0
  2204  06F0  1903               	skipnz
  2205  06F1  2FE0               	goto	l2191
  2206  06F2  3A73               	xorlw	115	; case 115
  2207  06F3  1903               	skipnz
  2208  06F4  2E4E               	goto	l2099
  2209  06F5  3A06               	xorlw	6	; case 117
  2210  06F6  1903               	skipnz
  2211  06F7  2ED5               	goto	l2133
  2212  06F8  2FCE               	goto	l2189
  2213  06F9                     l2139:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2216  06F9  0830               	movf	sprintf@ap,w
  2217  06FA  0084               	movwf	4
  2218  06FB  1383               	bcf	3,7	;select IRP bank0
  2219  06FC  0800               	movf	0,w
  2220  06FD  00AD               	movwf	sprintf@val
  2221  06FE  0A84               	incf	4,f
  2222  06FF  0800               	movf	0,w
  2223  0700  00AE               	movwf	sprintf@val+1
  2224  0701                     l2141:
  2225  0701  3002               	movlw	2
  2226  0702  00A9               	movwf	??_sprintf
  2227  0703  0829               	movf	??_sprintf,w
  2228  0704  07B0               	addwf	sprintf@ap,f
  2229  0705                     l2143:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2232  0705  01B8               	clrf	sprintf@c
  2233  0706  0AB8               	incf	sprintf@c,f
  2234  0707                     l2149:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2237  0707  0838               	movf	sprintf@c,w
  2238  0708  00A9               	movwf	??_sprintf
  2239  0709  0729               	addwf	??_sprintf,w
  2240  070A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2241  070B  0084               	movwf	4
  2242  070C  120A  118A  200D  120A  118A  	fcall	stringdir
  2243  0711  00AA               	movwf	??_sprintf+1
  2244  0712  120A  118A  200D  120A  118A  	fcall	stringdir
  2245  0717  00AB               	movwf	??_sprintf+2
  2246  0718  082B               	movf	??_sprintf+2,w
  2247  0719  022E               	subwf	sprintf@val+1,w
  2248  071A  1D03               	skipz
  2249  071B  2F1E               	goto	u1765
  2250  071C  082A               	movf	??_sprintf+1,w
  2251  071D  022D               	subwf	sprintf@val,w
  2252  071E                     u1765:
  2253  071E  1803               	skipnc
  2254  071F  2F21               	goto	u1761
  2255  0720  2F22               	goto	u1760
  2256  0721                     u1761:
  2257  0721  2F23               	goto	l2153
  2258  0722                     u1760:
  2259  0722  2F2D               	goto	l2155
  2260  0723                     l2153:
  2261  0723  3001               	movlw	1
  2262  0724  00A9               	movwf	??_sprintf
  2263  0725  0829               	movf	??_sprintf,w
  2264  0726  07B8               	addwf	sprintf@c,f
  2265  0727  3005               	movlw	5
  2266  0728  0638               	xorwf	sprintf@c,w
  2267  0729  1D03               	btfss	3,2
  2268  072A  2F2C               	goto	u1771
  2269  072B  2F2D               	goto	u1770
  2270  072C                     u1771:
  2271  072C  2F07               	goto	l2149
  2272  072D                     u1770:
  2273  072D                     l2155:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2276  072D  0837               	movf	sprintf@width+1,w
  2277  072E  3A80               	xorlw	128
  2278  072F  3C80               	sublw	128
  2279  0730  1D03               	skipz
  2280  0731  2F34               	goto	u1785
  2281  0732  0836               	movf	sprintf@width,w
  2282  0733  0238               	subwf	sprintf@c,w
  2283  0734                     u1785:
  2284  0734  1803               	skipnc
  2285  0735  2F37               	goto	u1781
  2286  0736  2F38               	goto	u1780
  2287  0737                     u1781:
  2288  0737  2F44               	goto	l2159
  2289  0738                     u1780:
  2290  0738                     l2157:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2293  0738  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0739  1303               	bcf	3,6	;RP1=0, select bank0
  2295  073A  0838               	movf	sprintf@c,w
  2296  073B  00A9               	movwf	??_sprintf
  2297  073C  01AA               	clrf	??_sprintf+1
  2298  073D  0829               	movf	??_sprintf,w
  2299  073E  02B6               	subwf	sprintf@width,f
  2300  073F  082A               	movf	??_sprintf+1,w
  2301  0740  1C03               	skipc
  2302  0741  03B7               	decf	sprintf@width+1,f
  2303  0742  02B7               	subwf	sprintf@width+1,f
  2304  0743  2F48               	goto	l2161
  2305  0744                     l2159:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2308  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0746  01B6               	clrf	sprintf@width
  2311  0747  01B7               	clrf	sprintf@width+1
  2312  0748                     l2161:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2315  0748  1D2C               	btfss	sprintf@flag,2
  2316  0749  2F4B               	goto	u1791
  2317  074A  2F4C               	goto	u1790
  2318  074B                     u1791:
  2319  074B  2F6A               	goto	l2171
  2320  074C                     u1790:
  2321  074C                     l2163:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2324  074C  0836               	movf	sprintf@width,w
  2325  074D  0437               	iorwf	sprintf@width+1,w
  2326  074E  1903               	btfsc	3,2
  2327  074F  2F51               	goto	u1801
  2328  0750  2F52               	goto	u1800
  2329  0751                     u1801:
  2330  0751  2F87               	goto	l2179
  2331  0752                     u1800:
  2332  0752                     l2165:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2335  0752  3030               	movlw	48
  2336  0753  00A9               	movwf	??_sprintf
  2337  0754  0835               	movf	sprintf@sp,w
  2338  0755  0084               	movwf	4
  2339  0756  0829               	movf	??_sprintf,w
  2340  0757  1383               	bcf	3,7	;select IRP bank0
  2341  0758  0080               	movwf	0
  2342  0759                     l2167:
  2343  0759  3001               	movlw	1
  2344  075A  00A9               	movwf	??_sprintf
  2345  075B  0829               	movf	??_sprintf,w
  2346  075C  07B5               	addwf	sprintf@sp,f
  2347  075D                     l2169:
  2348  075D  30FF               	movlw	255
  2349  075E  07B6               	addwf	sprintf@width,f
  2350  075F  1803               	skipnc
  2351  0760  0AB7               	incf	sprintf@width+1,f
  2352  0761  30FF               	movlw	255
  2353  0762  07B7               	addwf	sprintf@width+1,f
  2354  0763  0836               	movf	sprintf@width,w
  2355  0764  0437               	iorwf	sprintf@width+1,w
  2356  0765  1D03               	btfss	3,2
  2357  0766  2F68               	goto	u1811
  2358  0767  2F69               	goto	u1810
  2359  0768                     u1811:
  2360  0768  2F52               	goto	l2165
  2361  0769                     u1810:
  2362  0769  2F87               	goto	l2179
  2363  076A                     l2171:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2366  076A  0836               	movf	sprintf@width,w
  2367  076B  0437               	iorwf	sprintf@width+1,w
  2368  076C  1903               	btfsc	3,2
  2369  076D  2F6F               	goto	u1821
  2370  076E  2F70               	goto	u1820
  2371  076F                     u1821:
  2372  076F  2F87               	goto	l2179
  2373  0770                     u1820:
  2374  0770                     l2173:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2377  0770  3020               	movlw	32
  2378  0771  00A9               	movwf	??_sprintf
  2379  0772  0835               	movf	sprintf@sp,w
  2380  0773  0084               	movwf	4
  2381  0774  0829               	movf	??_sprintf,w
  2382  0775  1383               	bcf	3,7	;select IRP bank0
  2383  0776  0080               	movwf	0
  2384  0777                     l2175:
  2385  0777  3001               	movlw	1
  2386  0778  00A9               	movwf	??_sprintf
  2387  0779  0829               	movf	??_sprintf,w
  2388  077A  07B5               	addwf	sprintf@sp,f
  2389  077B                     l2177:
  2390  077B  30FF               	movlw	255
  2391  077C  07B6               	addwf	sprintf@width,f
  2392  077D  1803               	skipnc
  2393  077E  0AB7               	incf	sprintf@width+1,f
  2394  077F  30FF               	movlw	255
  2395  0780  07B7               	addwf	sprintf@width+1,f
  2396  0781  0836               	movf	sprintf@width,w
  2397  0782  0437               	iorwf	sprintf@width+1,w
  2398  0783  1D03               	btfss	3,2
  2399  0784  2F86               	goto	u1831
  2400  0785  2F87               	goto	u1830
  2401  0786                     u1831:
  2402  0786  2F70               	goto	l2173
  2403  0787                     u1830:
  2404  0787                     l2179:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2407  0787  0838               	movf	sprintf@c,w
  2408  0788  00A9               	movwf	??_sprintf
  2409  0789  0829               	movf	??_sprintf,w
  2410  078A  00AF               	movwf	sprintf@prec
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2413  078B  2FC5               	goto	l2187
  2414  078C                     l2181:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2417  078C  300A               	movlw	10
  2418  078D  00F8               	movwf	___lwmod@divisor
  2419  078E  3000               	movlw	0
  2420  078F  00F9               	movwf	___lwmod@divisor+1
  2421  0790  082F               	movf	sprintf@prec,w
  2422  0791  00A9               	movwf	??_sprintf
  2423  0792  0729               	addwf	??_sprintf,w
  2424  0793  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2425  0794  0084               	movwf	4
  2426  0795  120A  118A  200D  120A  118A  	fcall	stringdir
  2427  079A  00F0               	movwf	___lwdiv@divisor
  2428  079B  120A  118A  200D  120A  118A  	fcall	stringdir
  2429  07A0  00F1               	movwf	___lwdiv@divisor+1
  2430  07A1  082E               	movf	sprintf@val+1,w
  2431  07A2  00F3               	movwf	___lwdiv@dividend+1
  2432  07A3  082D               	movf	sprintf@val,w
  2433  07A4  00F2               	movwf	___lwdiv@dividend
  2434  07A5  120A  158A  25DC  120A  118A  	fcall	___lwdiv
  2435  07AA  0871               	movf	?___lwdiv+1,w
  2436  07AB  00FB               	movwf	___lwmod@dividend+1
  2437  07AC  0870               	movf	?___lwdiv,w
  2438  07AD  00FA               	movwf	___lwmod@dividend
  2439  07AE  120A  158A  25A2  120A  118A  	fcall	___lwmod
  2440  07B3  0878               	movf	?___lwmod,w
  2441  07B4  3E30               	addlw	48
  2442  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  2443  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  2444  07B7  00AA               	movwf	??_sprintf+1
  2445  07B8  082A               	movf	??_sprintf+1,w
  2446  07B9  00B8               	movwf	sprintf@c
  2447  07BA                     l2183:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2450  07BA  0838               	movf	sprintf@c,w
  2451  07BB  00A9               	movwf	??_sprintf
  2452  07BC  0835               	movf	sprintf@sp,w
  2453  07BD  0084               	movwf	4
  2454  07BE  0829               	movf	??_sprintf,w
  2455  07BF  1383               	bcf	3,7	;select IRP bank0
  2456  07C0  0080               	movwf	0
  2457  07C1                     l2185:
  2458  07C1  3001               	movlw	1
  2459  07C2  00A9               	movwf	??_sprintf
  2460  07C3  0829               	movf	??_sprintf,w
  2461  07C4  07B5               	addwf	sprintf@sp,f
  2462  07C5                     l2187:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2465  07C5  30FF               	movlw	255
  2466  07C6  00A9               	movwf	??_sprintf
  2467  07C7  0829               	movf	??_sprintf,w
  2468  07C8  07AF               	addwf	sprintf@prec,f
  2469  07C9  0A2F               	incf	sprintf@prec,w
  2470  07CA  1D03               	btfss	3,2
  2471  07CB  2FCD               	goto	u1841
  2472  07CC  2FCE               	goto	u1840
  2473  07CD                     u1841:
  2474  07CD  2F8C               	goto	l2181
  2475  07CE                     u1840:
  2476  07CE                     l2189:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2479  07CE  3001               	movlw	1
  2480  07CF  07A0               	addwf	sprintf@f,f
  2481  07D0  30FF               	movlw	-1
  2482  07D1  0720               	addwf	sprintf@f,w
  2483  07D2  0084               	movwf	4
  2484  07D3  120A  118A  200D  120A  118A  	fcall	stringdir
  2485  07D8  00A9               	movwf	??_sprintf
  2486  07D9  0829               	movf	??_sprintf,w
  2487  07DA  00B8               	movwf	sprintf@c
  2488  07DB  0838               	movf	sprintf@c,w
  2489  07DC  1D03               	btfss	3,2
  2490  07DD  2FDF               	goto	u1851
  2491  07DE  2FE0               	goto	u1850
  2492  07DF                     u1851:
  2493  07DF  2DCF               	goto	l2073
  2494  07E0                     u1850:
  2495  07E0                     l2191:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2498  07E0  0835               	movf	sprintf@sp,w
  2499  07E1  0084               	movwf	4
  2500  07E2  1383               	bcf	3,7	;select IRP bank0
  2501  07E3  0180               	clrf	0
  2502  07E4                     l415:
  2503  07E4  0008               	return
  2504  07E5                     __end_of_sprintf:
  2505                           
  2506                           	psect	text4
  2507  0BB8                     __ptext4:	
  2508 ;; *************** function _isdigit *****************
  2509 ;; Defined at:
  2510 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  c               1    wreg     unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  c               1    1[COMMON] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         2       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         2       0       0       0       0
  2528 ;;Total ram usage:        2 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_sprintf
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _isdigit
  2539  0BB8                     _isdigit:
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2543                           ;isdigit@c stored from wreg
  2544  0BB8  00F1               	movwf	isdigit@c
  2545  0BB9                     l1901:
  2546  0BB9  01F0               	clrf	_isdigit$804
  2547  0BBA                     l1903:
  2548  0BBA  303A               	movlw	58
  2549  0BBB  0271               	subwf	isdigit@c,w
  2550  0BBC  1803               	skipnc
  2551  0BBD  2BBF               	goto	u1281
  2552  0BBE  2BC0               	goto	u1280
  2553  0BBF                     u1281:
  2554  0BBF  2BC8               	goto	l1909
  2555  0BC0                     u1280:
  2556  0BC0                     l1905:
  2557  0BC0  3030               	movlw	48
  2558  0BC1  0271               	subwf	isdigit@c,w
  2559  0BC2  1C03               	skipc
  2560  0BC3  2BC5               	goto	u1291
  2561  0BC4  2BC6               	goto	u1290
  2562  0BC5                     u1291:
  2563  0BC5  2BC8               	goto	l1909
  2564  0BC6                     u1290:
  2565  0BC6                     l1907:
  2566  0BC6  01F0               	clrf	_isdigit$804
  2567  0BC7  0AF0               	incf	_isdigit$804,f
  2568  0BC8                     l1909:
  2569  0BC8  0C70               	rrf	_isdigit$804,w
  2570  0BC9                     l872:
  2571  0BC9  0008               	return
  2572  0BCA                     __end_of_isdigit:
  2573                           
  2574                           	psect	text5
  2575  0C66                     __ptext5:	
  2576 ;; *************** function ___wmul *****************
  2577 ;; Defined at:
  2578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  multiplier      2    0[COMMON] unsigned int 
  2581 ;;  multiplicand    2    2[COMMON] unsigned int 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  product         2    4[COMMON] unsigned int 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    0[COMMON] unsigned int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         4       0       0       0       0
  2594 ;;      Locals:         2       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0
  2596 ;;      Totals:         6       0       0       0       0
  2597 ;;Total ram usage:        6 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_sprintf
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function ___wmul
  2608  0C66                     ___wmul:
  2609  0C66                     l1913:	
  2610                           ;incstack = 0
  2611                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2612                           
  2613  0C66  01F4               	clrf	___wmul@product
  2614  0C67  01F5               	clrf	___wmul@product+1
  2615  0C68                     l1915:
  2616  0C68  1C70               	btfss	___wmul@multiplier,0
  2617  0C69  2C6B               	goto	u1301
  2618  0C6A  2C6C               	goto	u1300
  2619  0C6B                     u1301:
  2620  0C6B  2C72               	goto	l419
  2621  0C6C                     u1300:
  2622  0C6C                     l1917:
  2623  0C6C  0872               	movf	___wmul@multiplicand,w
  2624  0C6D  07F4               	addwf	___wmul@product,f
  2625  0C6E  1803               	skipnc
  2626  0C6F  0AF5               	incf	___wmul@product+1,f
  2627  0C70  0873               	movf	___wmul@multiplicand+1,w
  2628  0C71  07F5               	addwf	___wmul@product+1,f
  2629  0C72                     l419:
  2630  0C72  3001               	movlw	1
  2631  0C73                     u1315:
  2632  0C73  1003               	clrc
  2633  0C74  0DF2               	rlf	___wmul@multiplicand,f
  2634  0C75  0DF3               	rlf	___wmul@multiplicand+1,f
  2635  0C76  3EFF               	addlw	-1
  2636  0C77  1D03               	skipz
  2637  0C78  2C73               	goto	u1315
  2638  0C79                     l1919:
  2639  0C79  3001               	movlw	1
  2640  0C7A                     u1325:
  2641  0C7A  1003               	clrc
  2642  0C7B  0CF1               	rrf	___wmul@multiplier+1,f
  2643  0C7C  0CF0               	rrf	___wmul@multiplier,f
  2644  0C7D  3EFF               	addlw	-1
  2645  0C7E  1D03               	skipz
  2646  0C7F  2C7A               	goto	u1325
  2647  0C80                     l1921:
  2648  0C80  0870               	movf	___wmul@multiplier,w
  2649  0C81  0471               	iorwf	___wmul@multiplier+1,w
  2650  0C82  1D03               	btfss	3,2
  2651  0C83  2C85               	goto	u1331
  2652  0C84  2C86               	goto	u1330
  2653  0C85                     u1331:
  2654  0C85  2C68               	goto	l1915
  2655  0C86                     u1330:
  2656  0C86                     l1923:
  2657  0C86  0875               	movf	___wmul@product+1,w
  2658  0C87  00F1               	movwf	?___wmul+1
  2659  0C88  0874               	movf	___wmul@product,w
  2660  0C89  00F0               	movwf	?___wmul
  2661  0C8A                     l421:
  2662  0C8A  0008               	return
  2663  0C8B                     __end_of___wmul:
  2664                           
  2665                           	psect	text6
  2666  0DA2                     __ptext6:	
  2667 ;; *************** function ___lwmod *****************
  2668 ;; Defined at:
  2669 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  divisor         2    8[COMMON] unsigned int 
  2672 ;;  dividend        2   10[COMMON] unsigned int 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  counter         1   13[COMMON] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  2    8[COMMON] unsigned int 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         4       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0
  2686 ;;      Temps:          1       0       0       0       0
  2687 ;;      Totals:         6       0       0       0       0
  2688 ;;Total ram usage:        6 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_sprintf
  2694 ;;		_LCD_Write_Number
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function ___lwmod
  2700  0DA2                     ___lwmod:
  2701  0DA2                     l2049:	
  2702                           ;incstack = 0
  2703                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2704                           
  2705  0DA2  0878               	movf	___lwmod@divisor,w
  2706  0DA3  0479               	iorwf	___lwmod@divisor+1,w
  2707  0DA4  1903               	btfsc	3,2
  2708  0DA5  2DA7               	goto	u1621
  2709  0DA6  2DA8               	goto	u1620
  2710  0DA7                     u1621:
  2711  0DA7  2DD7               	goto	l2067
  2712  0DA8                     u1620:
  2713  0DA8                     l2051:
  2714  0DA8  01FD               	clrf	___lwmod@counter
  2715  0DA9  0AFD               	incf	___lwmod@counter,f
  2716  0DAA  2DB6               	goto	l2057
  2717  0DAB                     l2053:
  2718  0DAB  3001               	movlw	1
  2719  0DAC                     u1635:
  2720  0DAC  1003               	clrc
  2721  0DAD  0DF8               	rlf	___lwmod@divisor,f
  2722  0DAE  0DF9               	rlf	___lwmod@divisor+1,f
  2723  0DAF  3EFF               	addlw	-1
  2724  0DB0  1D03               	skipz
  2725  0DB1  2DAC               	goto	u1635
  2726  0DB2                     l2055:
  2727  0DB2  3001               	movlw	1
  2728  0DB3  00FC               	movwf	??___lwmod
  2729  0DB4  087C               	movf	??___lwmod,w
  2730  0DB5  07FD               	addwf	___lwmod@counter,f
  2731  0DB6                     l2057:
  2732  0DB6  1FF9               	btfss	___lwmod@divisor+1,7
  2733  0DB7  2DB9               	goto	u1641
  2734  0DB8  2DBA               	goto	u1640
  2735  0DB9                     u1641:
  2736  0DB9  2DAB               	goto	l2053
  2737  0DBA                     u1640:
  2738  0DBA                     l2059:
  2739  0DBA  0879               	movf	___lwmod@divisor+1,w
  2740  0DBB  027B               	subwf	___lwmod@dividend+1,w
  2741  0DBC  1D03               	skipz
  2742  0DBD  2DC0               	goto	u1655
  2743  0DBE  0878               	movf	___lwmod@divisor,w
  2744  0DBF  027A               	subwf	___lwmod@dividend,w
  2745  0DC0                     u1655:
  2746  0DC0  1C03               	skipc
  2747  0DC1  2DC3               	goto	u1651
  2748  0DC2  2DC4               	goto	u1650
  2749  0DC3                     u1651:
  2750  0DC3  2DCA               	goto	l2063
  2751  0DC4                     u1650:
  2752  0DC4                     l2061:
  2753  0DC4  0878               	movf	___lwmod@divisor,w
  2754  0DC5  02FA               	subwf	___lwmod@dividend,f
  2755  0DC6  0879               	movf	___lwmod@divisor+1,w
  2756  0DC7  1C03               	skipc
  2757  0DC8  03FB               	decf	___lwmod@dividend+1,f
  2758  0DC9  02FB               	subwf	___lwmod@dividend+1,f
  2759  0DCA                     l2063:
  2760  0DCA  3001               	movlw	1
  2761  0DCB                     u1665:
  2762  0DCB  1003               	clrc
  2763  0DCC  0CF9               	rrf	___lwmod@divisor+1,f
  2764  0DCD  0CF8               	rrf	___lwmod@divisor,f
  2765  0DCE  3EFF               	addlw	-1
  2766  0DCF  1D03               	skipz
  2767  0DD0  2DCB               	goto	u1665
  2768  0DD1                     l2065:
  2769  0DD1  3001               	movlw	1
  2770  0DD2  02FD               	subwf	___lwmod@counter,f
  2771  0DD3  1D03               	btfss	3,2
  2772  0DD4  2DD6               	goto	u1671
  2773  0DD5  2DD7               	goto	u1670
  2774  0DD6                     u1671:
  2775  0DD6  2DBA               	goto	l2059
  2776  0DD7                     u1670:
  2777  0DD7                     l2067:
  2778  0DD7  087B               	movf	___lwmod@dividend+1,w
  2779  0DD8  00F9               	movwf	?___lwmod+1
  2780  0DD9  087A               	movf	___lwmod@dividend,w
  2781  0DDA  00F8               	movwf	?___lwmod
  2782  0DDB                     l701:
  2783  0DDB  0008               	return
  2784  0DDC                     __end_of___lwmod:
  2785                           
  2786                           	psect	text7
  2787  0DDC                     __ptext7:	
  2788 ;; *************** function ___lwdiv *****************
  2789 ;; Defined at:
  2790 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  divisor         2    0[COMMON] unsigned int 
  2793 ;;  dividend        2    2[COMMON] unsigned int 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  quotient        2    5[COMMON] unsigned int 
  2796 ;;  counter         1    7[COMMON] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2    0[COMMON] unsigned int 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806 ;;      Params:         4       0       0       0       0
  2807 ;;      Locals:         3       0       0       0       0
  2808 ;;      Temps:          1       0       0       0       0
  2809 ;;      Totals:         8       0       0       0       0
  2810 ;;Total ram usage:        8 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_sprintf
  2816 ;;		_LCD_Write_Number
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function ___lwdiv
  2822  0DDC                     ___lwdiv:
  2823  0DDC                     l2023:	
  2824                           ;incstack = 0
  2825                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2826                           
  2827  0DDC  01F5               	clrf	___lwdiv@quotient
  2828  0DDD  01F6               	clrf	___lwdiv@quotient+1
  2829  0DDE                     l2025:
  2830  0DDE  0870               	movf	___lwdiv@divisor,w
  2831  0DDF  0471               	iorwf	___lwdiv@divisor+1,w
  2832  0DE0  1903               	btfsc	3,2
  2833  0DE1  2DE3               	goto	u1551
  2834  0DE2  2DE4               	goto	u1550
  2835  0DE3                     u1551:
  2836  0DE3  2E1B               	goto	l2045
  2837  0DE4                     u1550:
  2838  0DE4                     l2027:
  2839  0DE4  01F7               	clrf	___lwdiv@counter
  2840  0DE5  0AF7               	incf	___lwdiv@counter,f
  2841  0DE6  2DF2               	goto	l2033
  2842  0DE7                     l2029:
  2843  0DE7  3001               	movlw	1
  2844  0DE8                     u1565:
  2845  0DE8  1003               	clrc
  2846  0DE9  0DF0               	rlf	___lwdiv@divisor,f
  2847  0DEA  0DF1               	rlf	___lwdiv@divisor+1,f
  2848  0DEB  3EFF               	addlw	-1
  2849  0DEC  1D03               	skipz
  2850  0DED  2DE8               	goto	u1565
  2851  0DEE                     l2031:
  2852  0DEE  3001               	movlw	1
  2853  0DEF  00F4               	movwf	??___lwdiv
  2854  0DF0  0874               	movf	??___lwdiv,w
  2855  0DF1  07F7               	addwf	___lwdiv@counter,f
  2856  0DF2                     l2033:
  2857  0DF2  1FF1               	btfss	___lwdiv@divisor+1,7
  2858  0DF3  2DF5               	goto	u1571
  2859  0DF4  2DF6               	goto	u1570
  2860  0DF5                     u1571:
  2861  0DF5  2DE7               	goto	l2029
  2862  0DF6                     u1570:
  2863  0DF6                     l2035:
  2864  0DF6  3001               	movlw	1
  2865  0DF7                     u1585:
  2866  0DF7  1003               	clrc
  2867  0DF8  0DF5               	rlf	___lwdiv@quotient,f
  2868  0DF9  0DF6               	rlf	___lwdiv@quotient+1,f
  2869  0DFA  3EFF               	addlw	-1
  2870  0DFB  1D03               	skipz
  2871  0DFC  2DF7               	goto	u1585
  2872  0DFD  0871               	movf	___lwdiv@divisor+1,w
  2873  0DFE  0273               	subwf	___lwdiv@dividend+1,w
  2874  0DFF  1D03               	skipz
  2875  0E00  2E03               	goto	u1595
  2876  0E01  0870               	movf	___lwdiv@divisor,w
  2877  0E02  0272               	subwf	___lwdiv@dividend,w
  2878  0E03                     u1595:
  2879  0E03  1C03               	skipc
  2880  0E04  2E06               	goto	u1591
  2881  0E05  2E07               	goto	u1590
  2882  0E06                     u1591:
  2883  0E06  2E0E               	goto	l2041
  2884  0E07                     u1590:
  2885  0E07                     l2037:
  2886  0E07  0870               	movf	___lwdiv@divisor,w
  2887  0E08  02F2               	subwf	___lwdiv@dividend,f
  2888  0E09  0871               	movf	___lwdiv@divisor+1,w
  2889  0E0A  1C03               	skipc
  2890  0E0B  03F3               	decf	___lwdiv@dividend+1,f
  2891  0E0C  02F3               	subwf	___lwdiv@dividend+1,f
  2892  0E0D                     l2039:
  2893  0E0D  1475               	bsf	___lwdiv@quotient,0
  2894  0E0E                     l2041:
  2895  0E0E  3001               	movlw	1
  2896  0E0F                     u1605:
  2897  0E0F  1003               	clrc
  2898  0E10  0CF1               	rrf	___lwdiv@divisor+1,f
  2899  0E11  0CF0               	rrf	___lwdiv@divisor,f
  2900  0E12  3EFF               	addlw	-1
  2901  0E13  1D03               	skipz
  2902  0E14  2E0F               	goto	u1605
  2903  0E15                     l2043:
  2904  0E15  3001               	movlw	1
  2905  0E16  02F7               	subwf	___lwdiv@counter,f
  2906  0E17  1D03               	btfss	3,2
  2907  0E18  2E1A               	goto	u1611
  2908  0E19  2E1B               	goto	u1610
  2909  0E1A                     u1611:
  2910  0E1A  2DF6               	goto	l2035
  2911  0E1B                     u1610:
  2912  0E1B                     l2045:
  2913  0E1B  0876               	movf	___lwdiv@quotient+1,w
  2914  0E1C  00F1               	movwf	?___lwdiv+1
  2915  0E1D  0875               	movf	___lwdiv@quotient,w
  2916  0E1E  00F0               	movwf	?___lwdiv
  2917  0E1F                     l691:
  2918  0E1F  0008               	return
  2919  0E20                     __end_of___lwdiv:
  2920                           
  2921                           	psect	text8
  2922  04B5                     __ptext8:	
  2923 ;; *************** function _edit *****************
  2924 ;; Defined at:
  2925 ;;		line 66 in file "main dong ho so.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  x               1    wreg     unsigned char 
  2928 ;;  y               1    0[BANK0 ] unsigned char 
  2929 ;;  parameter       1    1[BANK0 ] unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  x               1   13[COMMON] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      unsigned char 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       2       0       0       0
  2942 ;;      Locals:         1       0       0       0       0
  2943 ;;      Temps:          0       3       0       0       0
  2944 ;;      Totals:         1       5       0       0       0
  2945 ;;Total ram usage:        6 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 3
  2948 ;; This function calls:
  2949 ;;		_LCD_Set_Cursor
  2950 ;;		_LCD_Write_Char
  2951 ;;		_LCD_Write_String
  2952 ;;		___awdiv
  2953 ;;		___awmod
  2954 ;;		_blink
  2955 ;;		_debounce
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function _edit
  2963  04B5                     _edit:
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _edit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2967                           ;edit@x stored from wreg
  2968  04B5  00FD               	movwf	edit@x
  2969  04B6                     l2355:
  2970  04B6                     l2357:	
  2971                           ;main dong ho so.c: 66: uint8_t edit(uint8_t x, uint8_t y, uint8_t parameter);main dong 
      +                          ho so.c: 67: {;main dong ho so.c: 68:   while(debounce());
  2972                           
  2973  04B6  120A  158A  248B  120A  118A  	fcall	_debounce
  2974  04BB  1803               	btfsc	3,0
  2975  04BC  2CBE               	goto	u2161
  2976  04BD  2CBF               	goto	u2160
  2977  04BE                     u2161:
  2978  04BE  2CB6               	goto	l2357
  2979  04BF                     u2160:
  2980  04BF  2D4F               	goto	l2397
  2981  04C0                     l2359:
  2982                           
  2983                           ;main dong ho so.c: 74:     {;main dong ho so.c: 75:       parameter++;
  2984  04C0  3001               	movlw	1
  2985  04C1  00A2               	movwf	??_edit
  2986  04C2  0822               	movf	??_edit,w
  2987  04C3  07A1               	addwf	edit@parameter,f
  2988                           
  2989                           ;main dong ho so.c: 76:       if(i == 0 && parameter > 23)
  2990  04C4  085D               	movf	_i,w
  2991  04C5  1D03               	btfss	3,2
  2992  04C6  2CC8               	goto	u2171
  2993  04C7  2CC9               	goto	u2170
  2994  04C8                     u2171:
  2995  04C8  2CD0               	goto	l2365
  2996  04C9                     u2170:
  2997  04C9                     l2361:
  2998  04C9  3018               	movlw	24
  2999  04CA  0221               	subwf	edit@parameter,w
  3000  04CB  1C03               	skipc
  3001  04CC  2CCE               	goto	u2181
  3002  04CD  2CCF               	goto	u2180
  3003  04CE                     u2181:
  3004  04CE  2CD0               	goto	l2365
  3005  04CF                     u2180:
  3006  04CF                     l2363:
  3007                           
  3008                           ;main dong ho so.c: 77:         parameter = 0;
  3009  04CF  01A1               	clrf	edit@parameter
  3010  04D0                     l2365:
  3011                           
  3012                           ;main dong ho so.c: 78:       if(i == 1 && parameter > 59)
  3013  04D0  035D               	decf	_i,w
  3014  04D1  1D03               	btfss	3,2
  3015  04D2  2CD4               	goto	u2191
  3016  04D3  2CD5               	goto	u2190
  3017  04D4                     u2191:
  3018  04D4  2CDC               	goto	l2371
  3019  04D5                     u2190:
  3020  04D5                     l2367:
  3021  04D5  303C               	movlw	60
  3022  04D6  0221               	subwf	edit@parameter,w
  3023  04D7  1C03               	skipc
  3024  04D8  2CDA               	goto	u2201
  3025  04D9  2CDB               	goto	u2200
  3026  04DA                     u2201:
  3027  04DA  2CDC               	goto	l2371
  3028  04DB                     u2200:
  3029  04DB                     l2369:
  3030                           
  3031                           ;main dong ho so.c: 79:         parameter = 0;
  3032  04DB  01A1               	clrf	edit@parameter
  3033  04DC                     l2371:
  3034                           
  3035                           ;main dong ho so.c: 80:       if(i == 2 && parameter > 31)
  3036  04DC  3002               	movlw	2
  3037  04DD  065D               	xorwf	_i,w
  3038  04DE  1D03               	btfss	3,2
  3039  04DF  2CE1               	goto	u2211
  3040  04E0  2CE2               	goto	u2210
  3041  04E1                     u2211:
  3042  04E1  2CEA               	goto	l2377
  3043  04E2                     u2210:
  3044  04E2                     l2373:
  3045  04E2  3020               	movlw	32
  3046  04E3  0221               	subwf	edit@parameter,w
  3047  04E4  1C03               	skipc
  3048  04E5  2CE7               	goto	u2221
  3049  04E6  2CE8               	goto	u2220
  3050  04E7                     u2221:
  3051  04E7  2CEA               	goto	l2377
  3052  04E8                     u2220:
  3053  04E8                     l2375:
  3054                           
  3055                           ;main dong ho so.c: 81:         parameter = 1;
  3056  04E8  01A1               	clrf	edit@parameter
  3057  04E9  0AA1               	incf	edit@parameter,f
  3058  04EA                     l2377:
  3059                           
  3060                           ;main dong ho so.c: 82:       if(i == 3 && parameter > 12)
  3061  04EA  3003               	movlw	3
  3062  04EB  065D               	xorwf	_i,w
  3063  04EC  1D03               	btfss	3,2
  3064  04ED  2CEF               	goto	u2231
  3065  04EE  2CF0               	goto	u2230
  3066  04EF                     u2231:
  3067  04EF  2CF8               	goto	l2383
  3068  04F0                     u2230:
  3069  04F0                     l2379:
  3070  04F0  300D               	movlw	13
  3071  04F1  0221               	subwf	edit@parameter,w
  3072  04F2  1C03               	skipc
  3073  04F3  2CF5               	goto	u2241
  3074  04F4  2CF6               	goto	u2240
  3075  04F5                     u2241:
  3076  04F5  2CF8               	goto	l2383
  3077  04F6                     u2240:
  3078  04F6                     l2381:
  3079                           
  3080                           ;main dong ho so.c: 83:         parameter = 1;
  3081  04F6  01A1               	clrf	edit@parameter
  3082  04F7  0AA1               	incf	edit@parameter,f
  3083  04F8                     l2383:
  3084                           
  3085                           ;main dong ho so.c: 84:       if(i == 4 && parameter > 99)
  3086  04F8  3004               	movlw	4
  3087  04F9  065D               	xorwf	_i,w
  3088  04FA  1D03               	btfss	3,2
  3089  04FB  2CFD               	goto	u2251
  3090  04FC  2CFE               	goto	u2250
  3091  04FD                     u2251:
  3092  04FD  2D05               	goto	l2389
  3093  04FE                     u2250:
  3094  04FE                     l2385:
  3095  04FE  3064               	movlw	100
  3096  04FF  0221               	subwf	edit@parameter,w
  3097  0500  1C03               	skipc
  3098  0501  2D03               	goto	u2261
  3099  0502  2D04               	goto	u2260
  3100  0503                     u2261:
  3101  0503  2D05               	goto	l2389
  3102  0504                     u2260:
  3103  0504                     l2387:
  3104                           
  3105                           ;main dong ho so.c: 85:         parameter = 0;
  3106  0504  01A1               	clrf	edit@parameter
  3107  0505                     l2389:
  3108                           
  3109                           ;main dong ho so.c: 87:       LCD_Set_Cursor(x, y);
  3110  0505  0820               	movf	edit@y,w
  3111  0506  00A2               	movwf	??_edit
  3112  0507  0822               	movf	??_edit,w
  3113  0508  00F4               	movwf	LCD_Set_Cursor@column
  3114  0509  087D               	movf	edit@x,w
  3115  050A  120A  118A  20B4  120A  118A  	fcall	_LCD_Set_Cursor
  3116  050F                     l2391:
  3117                           
  3118                           ;main dong ho so.c: 88:       LCD_Write_Char((char)(parameter / 10 + '0') );
  3119  050F  300A               	movlw	10
  3120  0510  00F0               	movwf	___awdiv@divisor
  3121  0511  3000               	movlw	0
  3122  0512  00F1               	movwf	___awdiv@divisor+1
  3123  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0515  0821               	movf	edit@parameter,w
  3126  0516  00A2               	movwf	??_edit
  3127  0517  01A3               	clrf	??_edit+1
  3128  0518  0822               	movf	??_edit,w
  3129  0519  00F2               	movwf	___awdiv@dividend
  3130  051A  0823               	movf	??_edit+1,w
  3131  051B  00F3               	movwf	___awdiv@dividend+1
  3132  051C  120A  158A  2799  120A  118A  	fcall	___awdiv
  3133  0521  0870               	movf	?___awdiv,w
  3134  0522  3E30               	addlw	48
  3135  0523  120A  158A  2620  120A  118A  	fcall	_LCD_Write_Char
  3136  0528                     l2393:
  3137                           
  3138                           ;main dong ho so.c: 89:        LCD_Write_Char((char)(parameter % 10 + '0') );
  3139  0528  300A               	movlw	10
  3140  0529  00F0               	movwf	___awmod@divisor
  3141  052A  3000               	movlw	0
  3142  052B  00F1               	movwf	___awmod@divisor+1
  3143  052C  1283               	bcf	3,5	;RP0=0, select bank0
  3144  052D  1303               	bcf	3,6	;RP1=0, select bank0
  3145  052E  0821               	movf	edit@parameter,w
  3146  052F  00A2               	movwf	??_edit
  3147  0530  01A3               	clrf	??_edit+1
  3148  0531  0822               	movf	??_edit,w
  3149  0532  00F2               	movwf	___awmod@dividend
  3150  0533  0823               	movf	??_edit+1,w
  3151  0534  00F3               	movwf	___awmod@dividend+1
  3152  0535  120A  158A  2673  120A  118A  	fcall	___awmod
  3153  053A  0870               	movf	?___awmod,w
  3154  053B  3E30               	addlw	48
  3155  053C  120A  158A  2620  120A  118A  	fcall	_LCD_Write_Char
  3156  0541                     l2395:
  3157                           
  3158                           ;main dong ho so.c: 90:       _delay((unsigned long)((200)*(20000000/4000.0)));
  3159  0541  3006               	movlw	6
  3160  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0544  00A4               	movwf	??_edit+2
  3163  0545  3013               	movlw	19
  3164  0546  00A3               	movwf	??_edit+1
  3165  0547  30AD               	movlw	173
  3166  0548  00A2               	movwf	??_edit
  3167  0549                     u2427:
  3168  0549  0BA2               	decfsz	??_edit,f
  3169  054A  2D49               	goto	u2427
  3170  054B  0BA3               	decfsz	??_edit+1,f
  3171  054C  2D49               	goto	u2427
  3172  054D  0BA4               	decfsz	??_edit+2,f
  3173  054E  2D49               	goto	u2427
  3174  054F                     l2397:
  3175                           
  3176                           ;main dong ho so.c: 73:     while(!RB1)
  3177  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0551  1C86               	btfss	6,1	;volatile
  3180  0552  2D54               	goto	u2271
  3181  0553  2D55               	goto	u2270
  3182  0554                     u2271:
  3183  0554  2CC0               	goto	l2359
  3184  0555                     u2270:
  3185  0555                     l2399:
  3186                           
  3187                           ;main dong ho so.c: 94:     LCD_Set_Cursor(x, y);
  3188  0555  0820               	movf	edit@y,w
  3189  0556  00A2               	movwf	??_edit
  3190  0557  0822               	movf	??_edit,w
  3191  0558  00F4               	movwf	LCD_Set_Cursor@column
  3192  0559  087D               	movf	edit@x,w
  3193  055A  120A  118A  20B4  120A  118A  	fcall	_LCD_Set_Cursor
  3194  055F                     l2401:
  3195                           
  3196                           ;main dong ho so.c: 95:     LCD_Write_String("  ");
  3197  055F  305D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3198  0560  00F6               	movwf	LCD_Write_String@str
  3199  0561  3080               	movlw	128
  3200  0562  00F7               	movwf	LCD_Write_String@str+1
  3201  0563  120A  118A  2072  120A  118A  	fcall	_LCD_Write_String
  3202  0568                     l2403:
  3203                           
  3204                           ;main dong ho so.c: 96:     blink();
  3205  0568  120A  158A  2424  120A  118A  	fcall	_blink
  3206  056D                     l2405:
  3207                           
  3208                           ;main dong ho so.c: 98:     LCD_Set_Cursor(x, y);
  3209  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3210  056E  1303               	bcf	3,6	;RP1=0, select bank0
  3211  056F  0820               	movf	edit@y,w
  3212  0570  00A2               	movwf	??_edit
  3213  0571  0822               	movf	??_edit,w
  3214  0572  00F4               	movwf	LCD_Set_Cursor@column
  3215  0573  087D               	movf	edit@x,w
  3216  0574  120A  118A  20B4  120A  118A  	fcall	_LCD_Set_Cursor
  3217  0579                     l2407:
  3218                           
  3219                           ;main dong ho so.c: 99:     LCD_Write_Char((char)(parameter / 10 + '0'));
  3220  0579  300A               	movlw	10
  3221  057A  00F0               	movwf	___awdiv@divisor
  3222  057B  3000               	movlw	0
  3223  057C  00F1               	movwf	___awdiv@divisor+1
  3224  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3225  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3226  057F  0821               	movf	edit@parameter,w
  3227  0580  00A2               	movwf	??_edit
  3228  0581  01A3               	clrf	??_edit+1
  3229  0582  0822               	movf	??_edit,w
  3230  0583  00F2               	movwf	___awdiv@dividend
  3231  0584  0823               	movf	??_edit+1,w
  3232  0585  00F3               	movwf	___awdiv@dividend+1
  3233  0586  120A  158A  2799  120A  118A  	fcall	___awdiv
  3234  058B  0870               	movf	?___awdiv,w
  3235  058C  3E30               	addlw	48
  3236  058D  120A  158A  2620  120A  118A  	fcall	_LCD_Write_Char
  3237  0592                     l2409:
  3238                           
  3239                           ;main dong ho so.c: 100:     LCD_Write_Char((char)(parameter % 10 + '0'));
  3240  0592  300A               	movlw	10
  3241  0593  00F0               	movwf	___awmod@divisor
  3242  0594  3000               	movlw	0
  3243  0595  00F1               	movwf	___awmod@divisor+1
  3244  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0597  1303               	bcf	3,6	;RP1=0, select bank0
  3246  0598  0821               	movf	edit@parameter,w
  3247  0599  00A2               	movwf	??_edit
  3248  059A  01A3               	clrf	??_edit+1
  3249  059B  0822               	movf	??_edit,w
  3250  059C  00F2               	movwf	___awmod@dividend
  3251  059D  0823               	movf	??_edit+1,w
  3252  059E  00F3               	movwf	___awmod@dividend+1
  3253  059F  120A  158A  2673  120A  118A  	fcall	___awmod
  3254  05A4  0870               	movf	?___awmod,w
  3255  05A5  3E30               	addlw	48
  3256  05A6  120A  158A  2620  120A  118A  	fcall	_LCD_Write_Char
  3257  05AB                     l2411:
  3258                           
  3259                           ;main dong ho so.c: 101:     blink();
  3260  05AB  120A  158A  2424  120A  118A  	fcall	_blink
  3261  05B0                     l2413:
  3262                           
  3263                           ;main dong ho so.c: 103:     if(!RB0)
  3264  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3265  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  3266  05B2  1806               	btfsc	6,0	;volatile
  3267  05B3  2DB5               	goto	u2281
  3268  05B4  2DB6               	goto	u2280
  3269  05B5                     u2281:
  3270  05B5  2D4F               	goto	l2397
  3271  05B6                     u2280:
  3272  05B6                     l2415:
  3273                           
  3274                           ;main dong ho so.c: 104:     if(debounce())
  3275  05B6  120A  158A  248B  120A  118A  	fcall	_debounce
  3276  05BB  1C03               	btfss	3,0
  3277  05BC  2DBE               	goto	u2291
  3278  05BD  2DBF               	goto	u2290
  3279  05BE                     u2291:
  3280  05BE  2D4F               	goto	l2397
  3281  05BF                     u2290:
  3282  05BF                     l2417:
  3283                           
  3284                           ;main dong ho so.c: 105:     {;main dong ho so.c: 106:       i++;
  3285  05BF  3001               	movlw	1
  3286  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3287  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3288  05C2  00A2               	movwf	??_edit
  3289  05C3  0822               	movf	??_edit,w
  3290  05C4  07DD               	addwf	_i,f
  3291  05C5                     l2419:
  3292                           
  3293                           ;main dong ho so.c: 107:       return parameter;
  3294  05C5  0821               	movf	edit@parameter,w
  3295  05C6                     l70:
  3296  05C6  0008               	return
  3297  05C7                     __end_of_edit:
  3298                           
  3299                           	psect	text9
  3300  0C8B                     __ptext9:	
  3301 ;; *************** function _debounce *****************
  3302 ;; Defined at:
  3303 ;;		line 41 in file "main dong ho so.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  i               1    3[COMMON] unsigned char 
  3308 ;;  count           1    2[COMMON] unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;		None               void
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3318 ;;      Params:         0       0       0       0       0
  3319 ;;      Locals:         2       0       0       0       0
  3320 ;;      Temps:          2       0       0       0       0
  3321 ;;      Totals:         4       0       0       0       0
  3322 ;;Total ram usage:        4 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_edit
  3328 ;;		_main
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function _debounce
  3334  0C8B                     _debounce:
  3335  0C8B                     l2261:	
  3336                           ;incstack = 0
  3337                           ; Regs used in _debounce: [wreg+status,2+status,0]
  3338                           
  3339                           
  3340                           ;main dong ho so.c: 43:   uint8_t count = 0;
  3341  0C8B  01F2               	clrf	debounce@count
  3342                           
  3343                           ;main dong ho so.c: 44:   for(uint8_t i = 0; i < 5; i++)
  3344  0C8C  01F3               	clrf	debounce@i
  3345  0C8D                     l40:
  3346                           
  3347                           ;main dong ho so.c: 45:   {;main dong ho so.c: 46:     if (RB0 == 0)
  3348  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0C8F  1806               	btfsc	6,0	;volatile
  3351  0C90  2C92               	goto	u1991
  3352  0C91  2C93               	goto	u1990
  3353  0C92                     u1991:
  3354  0C92  2C97               	goto	l2269
  3355  0C93                     u1990:
  3356  0C93                     l2267:
  3357                           
  3358                           ;main dong ho so.c: 47:       count++;
  3359  0C93  3001               	movlw	1
  3360  0C94  00F0               	movwf	??_debounce
  3361  0C95  0870               	movf	??_debounce,w
  3362  0C96  07F2               	addwf	debounce@count,f
  3363  0C97                     l2269:
  3364                           
  3365                           ;main dong ho so.c: 48:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3366  0C97  3041               	movlw	65
  3367  0C98  00F1               	movwf	??_debounce+1
  3368  0C99  30EE               	movlw	238
  3369  0C9A  00F0               	movwf	??_debounce
  3370  0C9B                     u2437:
  3371  0C9B  0BF0               	decfsz	??_debounce,f
  3372  0C9C  2C9B               	goto	u2437
  3373  0C9D  0BF1               	decfsz	??_debounce+1,f
  3374  0C9E  2C9B               	goto	u2437
  3375  0C9F  0000               	nop
  3376  0CA0                     l2271:
  3377                           
  3378                           ;main dong ho so.c: 49:   }
  3379  0CA0  3001               	movlw	1
  3380  0CA1  00F0               	movwf	??_debounce
  3381  0CA2  0870               	movf	??_debounce,w
  3382  0CA3  07F3               	addwf	debounce@i,f
  3383  0CA4  3005               	movlw	5
  3384  0CA5  0273               	subwf	debounce@i,w
  3385  0CA6  1C03               	skipc
  3386  0CA7  2CA9               	goto	u2001
  3387  0CA8  2CAA               	goto	u2000
  3388  0CA9                     u2001:
  3389  0CA9  2C8D               	goto	l40
  3390  0CAA                     u2000:
  3391  0CAA                     l2273:
  3392                           
  3393                           ;main dong ho so.c: 50:   if(count > 2) return 1;
  3394  0CAA  3003               	movlw	3
  3395  0CAB  0272               	subwf	debounce@count,w
  3396  0CAC  1C03               	skipc
  3397  0CAD  2CAF               	goto	u2011
  3398  0CAE  2CB0               	goto	u2010
  3399  0CAF                     u2011:
  3400  0CAF  2CB2               	goto	l2281
  3401  0CB0                     u2010:
  3402  0CB0                     l2275:
  3403  0CB0  1403               	setc
  3404  0CB1  2CB3               	goto	l44
  3405  0CB2                     l2281:
  3406  0CB2  1003               	clrc
  3407  0CB3                     l44:
  3408  0CB3  0008               	return
  3409  0CB4                     __end_of_debounce:
  3410                           
  3411                           	psect	text10
  3412  0C24                     __ptext10:	
  3413 ;; *************** function _blink *****************
  3414 ;; Defined at:
  3415 ;;		line 55 in file "main dong ho so.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  j               1    2[COMMON] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3429 ;;      Params:         0       0       0       0       0
  3430 ;;      Locals:         1       0       0       0       0
  3431 ;;      Temps:          2       0       0       0       0
  3432 ;;      Totals:         3       0       0       0       0
  3433 ;;Total ram usage:        3 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_edit
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _blink
  3444  0C24                     _blink:
  3445  0C24                     l2285:	
  3446                           ;incstack = 0
  3447                           ; Regs used in _blink: [wreg+status,2+status,0]
  3448                           
  3449                           
  3450                           ;main dong ho so.c: 57:   uint8_t j = 0;
  3451  0C24  01F2               	clrf	blink@j
  3452                           
  3453                           ;main dong ho so.c: 58:   while(j < 100 && RB0 && RB1)
  3454  0C25  2C33               	goto	l2291
  3455  0C26                     l2287:
  3456                           
  3457                           ;main dong ho so.c: 59:   {;main dong ho so.c: 60:     j++;
  3458  0C26  3001               	movlw	1
  3459  0C27  00F0               	movwf	??_blink
  3460  0C28  0870               	movf	??_blink,w
  3461  0C29  07F2               	addwf	blink@j,f
  3462  0C2A                     l2289:
  3463                           
  3464                           ;main dong ho so.c: 61:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3465  0C2A  3021               	movlw	33
  3466  0C2B  00F1               	movwf	??_blink+1
  3467  0C2C  3076               	movlw	118
  3468  0C2D  00F0               	movwf	??_blink
  3469  0C2E                     u2447:
  3470  0C2E  0BF0               	decfsz	??_blink,f
  3471  0C2F  2C2E               	goto	u2447
  3472  0C30  0BF1               	decfsz	??_blink+1,f
  3473  0C31  2C2E               	goto	u2447
  3474  0C32  0000               	nop
  3475  0C33                     l2291:
  3476                           
  3477                           ;main dong ho so.c: 58:   while(j < 100 && RB0 && RB1)
  3478  0C33  3064               	movlw	100
  3479  0C34  0272               	subwf	blink@j,w
  3480  0C35  1803               	skipnc
  3481  0C36  2C38               	goto	u2021
  3482  0C37  2C39               	goto	u2020
  3483  0C38                     u2021:
  3484  0C38  2C43               	goto	l53
  3485  0C39                     u2020:
  3486  0C39                     l2293:
  3487  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0C3B  1C06               	btfss	6,0	;volatile
  3490  0C3C  2C3E               	goto	u2031
  3491  0C3D  2C3F               	goto	u2030
  3492  0C3E                     u2031:
  3493  0C3E  2C43               	goto	l53
  3494  0C3F                     u2030:
  3495  0C3F                     l2295:
  3496  0C3F  1886               	btfsc	6,1	;volatile
  3497  0C40  2C42               	goto	u2041
  3498  0C41  2C43               	goto	u2040
  3499  0C42                     u2041:
  3500  0C42  2C26               	goto	l2287
  3501  0C43                     u2040:
  3502  0C43                     l53:
  3503  0C43  0008               	return
  3504  0C44                     __end_of_blink:
  3505                           
  3506                           	psect	text11
  3507  0072                     __ptext11:	
  3508 ;; *************** function _LCD_Write_String *****************
  3509 ;; Defined at:
  3510 ;;		line 140 in file "lcd.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  str             2    6[COMMON] PTR unsigned char 
  3513 ;;		 -> STR_13(6), STR_12(3), rtc_print@buffer(25), 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  i               2   11[COMMON] int 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         2       0       0       0       0
  3526 ;;      Locals:         2       0       0       0       0
  3527 ;;      Temps:          3       0       0       0       0
  3528 ;;      Totals:         7       0       0       0       0
  3529 ;;Total ram usage:        7 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 2
  3532 ;; This function calls:
  3533 ;;		_LCD_Write_Char
  3534 ;; This function is called by:
  3535 ;;		_rtc_print
  3536 ;;		_edit
  3537 ;;		_main
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _LCD_Write_String
  3543  0072                     _LCD_Write_String:
  3544  0072                     l2253:	
  3545                           ;incstack = 0
  3546                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3547                           
  3548                           
  3549                           ;lcd.c: 140: void LCD_Write_String(char *str);lcd.c: 141: {;lcd.c: 142:   int i;;lcd.c: 
      +                          143:   for(i=0;str[i]!='\0';i++)
  3550  0072  01FB               	clrf	LCD_Write_String@i
  3551  0073  01FC               	clrf	LCD_Write_String@i+1
  3552  0074  2897               	goto	l2259
  3553  0075                     l2255:
  3554                           
  3555                           ;lcd.c: 144:     LCD_Write_Char(str[i]);
  3556  0075  087B               	movf	LCD_Write_String@i,w
  3557  0076  0776               	addwf	LCD_Write_String@str,w
  3558  0077  00F9               	movwf	??_LCD_Write_String+1
  3559  0078  0877               	movf	LCD_Write_String@str+1,w
  3560  0079  00F8               	movwf	??_LCD_Write_String
  3561  007A  1803               	skipnc
  3562  007B  0AF8               	incf	??_LCD_Write_String,f
  3563  007C  1FFB               	btfss	LCD_Write_String@i,7
  3564  007D  287F               	goto	u1960
  3565  007E  03F8               	decf	??_LCD_Write_String,f
  3566  007F                     u1960:
  3567  007F  0878               	movf	??_LCD_Write_String,w
  3568  0080  00FA               	movwf	??_LCD_Write_String+2
  3569  0081  087A               	movf	??_LCD_Write_String+2,w
  3570  0082  1283               	bcf	3,5	;RP0=0, select bank0
  3571  0083  1303               	bcf	3,6	;RP1=0, select bank0
  3572  0084  00FF               	movwf	btemp+1
  3573  0085  0879               	movf	??_LCD_Write_String+1,w
  3574  0086  0084               	movwf	4
  3575  0087  120A  118A  2003  120A  118A  	fcall	stringtab
  3576  008C  120A  158A  2620  120A  118A  	fcall	_LCD_Write_Char
  3577  0091                     l2257:
  3578  0091  3001               	movlw	1
  3579  0092  07FB               	addwf	LCD_Write_String@i,f
  3580  0093  1803               	skipnc
  3581  0094  0AFC               	incf	LCD_Write_String@i+1,f
  3582  0095  3000               	movlw	0
  3583  0096  07FC               	addwf	LCD_Write_String@i+1,f
  3584  0097                     l2259:
  3585  0097  087B               	movf	LCD_Write_String@i,w
  3586  0098  0776               	addwf	LCD_Write_String@str,w
  3587  0099  00F9               	movwf	??_LCD_Write_String+1
  3588  009A  0877               	movf	LCD_Write_String@str+1,w
  3589  009B  00F8               	movwf	??_LCD_Write_String
  3590  009C  1803               	skipnc
  3591  009D  0AF8               	incf	??_LCD_Write_String,f
  3592  009E  1FFB               	btfss	LCD_Write_String@i,7
  3593  009F  28A1               	goto	u1970
  3594  00A0  03F8               	decf	??_LCD_Write_String,f
  3595  00A1                     u1970:
  3596  00A1  0878               	movf	??_LCD_Write_String,w
  3597  00A2  00FA               	movwf	??_LCD_Write_String+2
  3598  00A3  087A               	movf	??_LCD_Write_String+2,w
  3599  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  3600  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  3601  00A6  00FF               	movwf	btemp+1
  3602  00A7  0879               	movf	??_LCD_Write_String+1,w
  3603  00A8  0084               	movwf	4
  3604  00A9  120A  118A  2003  120A  118A  	fcall	stringtab
  3605  00AE  3A00               	xorlw	0
  3606  00AF  1D03               	skipz
  3607  00B0  28B2               	goto	u1981
  3608  00B1  28B3               	goto	u1980
  3609  00B2                     u1981:
  3610  00B2  2875               	goto	l2255
  3611  00B3                     u1980:
  3612  00B3                     l144:
  3613  00B3  0008               	return
  3614  00B4                     __end_of_LCD_Write_String:
  3615                           
  3616                           	psect	text12
  3617  0E20                     __ptext12:	
  3618 ;; *************** function _LCD_Write_Char *****************
  3619 ;; Defined at:
  3620 ;;		line 119 in file "lcd.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  Data            1    wreg     unsigned char 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  Data            1    5[COMMON] unsigned char 
  3625 ;;  High4           1    4[COMMON] unsigned char 
  3626 ;;  Low4            1    3[COMMON] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, pclath, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         0       0       0       0       0
  3637 ;;      Locals:         3       0       0       0       0
  3638 ;;      Temps:          2       0       0       0       0
  3639 ;;      Totals:         5       0       0       0       0
  3640 ;;Total ram usage:        5 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		_LCD_DATA
  3645 ;; This function is called by:
  3646 ;;		_edit
  3647 ;;		_LCD_Write_String
  3648 ;;		_LCD_Write_Number
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _LCD_Write_Char
  3654  0E20                     _LCD_Write_Char:
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3658                           ;LCD_Write_Char@Data stored from wreg
  3659  0E20  00F5               	movwf	LCD_Write_Char@Data
  3660  0E21                     l1827:
  3661                           
  3662                           ;lcd.c: 119: void LCD_Write_Char(char Data);lcd.c: 120: {;lcd.c: 124:   char Low4,High4;
      +                          ;lcd.c: 125:   Low4 = Data & 0x0F;
  3663  0E21  0875               	movf	LCD_Write_Char@Data,w
  3664  0E22  390F               	andlw	15
  3665  0E23  00F1               	movwf	??_LCD_Write_Char
  3666  0E24  0871               	movf	??_LCD_Write_Char,w
  3667  0E25  00F3               	movwf	LCD_Write_Char@Low4
  3668                           
  3669                           ;lcd.c: 126:   High4 = Data & 0xF0;
  3670  0E26  0875               	movf	LCD_Write_Char@Data,w
  3671  0E27  39F0               	andlw	240
  3672  0E28  00F1               	movwf	??_LCD_Write_Char
  3673  0E29  0871               	movf	??_LCD_Write_Char,w
  3674  0E2A  00F4               	movwf	LCD_Write_Char@High4
  3675  0E2B                     l1829:
  3676                           
  3677                           ;lcd.c: 127:   RD2 = 1;
  3678  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0E2D  1508               	bsf	8,2	;volatile
  3681  0E2E                     l1831:
  3682                           
  3683                           ;lcd.c: 128:   LCD_DATA(High4>>4);
  3684  0E2E  0874               	movf	LCD_Write_Char@High4,w
  3685  0E2F  00F1               	movwf	??_LCD_Write_Char
  3686  0E30  3004               	movlw	4
  3687  0E31                     u1265:
  3688  0E31  1003               	clrc
  3689  0E32  0CF1               	rrf	??_LCD_Write_Char,f
  3690  0E33  3EFF               	addlw	-1
  3691  0E34  1D03               	skipz
  3692  0E35  2E31               	goto	u1265
  3693  0E36  0871               	movf	??_LCD_Write_Char,w
  3694  0E37  120A  158A  2444  120A  158A  	fcall	_LCD_DATA
  3695  0E3C                     l1833:
  3696                           
  3697                           ;lcd.c: 129:   RD3 = 1;
  3698  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0E3E  1588               	bsf	8,3	;volatile
  3701  0E3F                     l1835:
  3702                           
  3703                           ;lcd.c: 130:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3704  0E3F  3004               	movlw	4
  3705  0E40  00F2               	movwf	??_LCD_Write_Char+1
  3706  0E41  303D               	movlw	61
  3707  0E42  00F1               	movwf	??_LCD_Write_Char
  3708  0E43                     u2457:
  3709  0E43  0BF1               	decfsz	??_LCD_Write_Char,f
  3710  0E44  2E43               	goto	u2457
  3711  0E45  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3712  0E46  2E43               	goto	u2457
  3713  0E47  2E48               	nop2
  3714  0E48                     l1837:
  3715                           
  3716                           ;lcd.c: 131:   RD3 = 0;
  3717  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0E4A  1188               	bcf	8,3	;volatile
  3720  0E4B                     l1839:
  3721                           
  3722                           ;lcd.c: 132:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3723  0E4B  3004               	movlw	4
  3724  0E4C  00F2               	movwf	??_LCD_Write_Char+1
  3725  0E4D  303D               	movlw	61
  3726  0E4E  00F1               	movwf	??_LCD_Write_Char
  3727  0E4F                     u2467:
  3728  0E4F  0BF1               	decfsz	??_LCD_Write_Char,f
  3729  0E50  2E4F               	goto	u2467
  3730  0E51  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3731  0E52  2E4F               	goto	u2467
  3732  0E53  2E54               	nop2
  3733  0E54                     l1841:
  3734                           
  3735                           ;lcd.c: 133:   LCD_DATA(Low4);
  3736  0E54  0873               	movf	LCD_Write_Char@Low4,w
  3737  0E55  120A  158A  2444  120A  158A  	fcall	_LCD_DATA
  3738  0E5A                     l1843:
  3739                           
  3740                           ;lcd.c: 134:   RD3 = 1;
  3741  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3742  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3743  0E5C  1588               	bsf	8,3	;volatile
  3744  0E5D                     l1845:
  3745                           
  3746                           ;lcd.c: 135:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3747  0E5D  3004               	movlw	4
  3748  0E5E  00F2               	movwf	??_LCD_Write_Char+1
  3749  0E5F  303D               	movlw	61
  3750  0E60  00F1               	movwf	??_LCD_Write_Char
  3751  0E61                     u2477:
  3752  0E61  0BF1               	decfsz	??_LCD_Write_Char,f
  3753  0E62  2E61               	goto	u2477
  3754  0E63  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3755  0E64  2E61               	goto	u2477
  3756  0E65  2E66               	nop2
  3757  0E66                     l1847:
  3758                           
  3759                           ;lcd.c: 136:   RD3 = 0;
  3760  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0E68  1188               	bcf	8,3	;volatile
  3763  0E69                     l1849:
  3764                           
  3765                           ;lcd.c: 137:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3766  0E69  3004               	movlw	4
  3767  0E6A  00F2               	movwf	??_LCD_Write_Char+1
  3768  0E6B  303D               	movlw	61
  3769  0E6C  00F1               	movwf	??_LCD_Write_Char
  3770  0E6D                     u2487:
  3771  0E6D  0BF1               	decfsz	??_LCD_Write_Char,f
  3772  0E6E  2E6D               	goto	u2487
  3773  0E6F  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3774  0E70  2E6D               	goto	u2487
  3775  0E71  2E72               	nop2
  3776  0E72                     l138:
  3777  0E72  0008               	return
  3778  0E73                     __end_of_LCD_Write_Char:
  3779                           
  3780                           	psect	text13
  3781  00B4                     __ptext13:	
  3782 ;; *************** function _LCD_Set_Cursor *****************
  3783 ;; Defined at:
  3784 ;;		line 49 in file "lcd.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  row             1    wreg     unsigned char 
  3787 ;;  column          1    4[COMMON] unsigned char 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  row             1    7[COMMON] unsigned char 
  3790 ;;  Temp            1   10[COMMON] unsigned char 
  3791 ;;  High4           1    9[COMMON] unsigned char 
  3792 ;;  Low4            1    8[COMMON] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0, pclath, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         1       0       0       0       0
  3803 ;;      Locals:         4       0       0       0       0
  3804 ;;      Temps:          2       0       0       0       0
  3805 ;;      Totals:         7       0       0       0       0
  3806 ;;Total ram usage:        7 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 2
  3809 ;; This function calls:
  3810 ;;		_LCD_CMD
  3811 ;; This function is called by:
  3812 ;;		_rtc_print
  3813 ;;		_edit
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           
  3819                           ;psect for function _LCD_Set_Cursor
  3820  00B4                     _LCD_Set_Cursor:
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3824                           ;LCD_Set_Cursor@row stored from wreg
  3825  00B4  00F7               	movwf	LCD_Set_Cursor@row
  3826  00B5                     l2213:
  3827                           
  3828                           ;lcd.c: 49: void LCD_Set_Cursor(unsigned char row, unsigned char column);lcd.c: 50: {;lc
      +                          d.c: 56:   unsigned char Temp,Low4,High4;;lcd.c: 58:   if(row == 1)
  3829  00B5  0377               	decf	LCD_Set_Cursor@row,w
  3830  00B6  1D03               	btfss	3,2
  3831  00B7  28B9               	goto	u1881
  3832  00B8  28BA               	goto	u1880
  3833  00B9                     u1881:
  3834  00B9  28DD               	goto	l2223
  3835  00BA                     u1880:
  3836  00BA                     l2215:
  3837                           
  3838                           ;lcd.c: 59:   {;lcd.c: 60:     Temp = 0x80 + column - 1;
  3839  00BA  0874               	movf	LCD_Set_Cursor@column,w
  3840  00BB  3E7F               	addlw	127
  3841  00BC  00F5               	movwf	??_LCD_Set_Cursor
  3842  00BD  0875               	movf	??_LCD_Set_Cursor,w
  3843  00BE  00FA               	movwf	LCD_Set_Cursor@Temp
  3844                           
  3845                           ;lcd.c: 61:     High4 = Temp >> 4;
  3846  00BF  087A               	movf	LCD_Set_Cursor@Temp,w
  3847  00C0  00F5               	movwf	??_LCD_Set_Cursor
  3848  00C1  3004               	movlw	4
  3849  00C2                     u1895:
  3850  00C2  1003               	clrc
  3851  00C3  0CF5               	rrf	??_LCD_Set_Cursor,f
  3852  00C4  3EFF               	addlw	-1
  3853  00C5  1D03               	skipz
  3854  00C6  28C2               	goto	u1895
  3855  00C7  0875               	movf	??_LCD_Set_Cursor,w
  3856  00C8  00F6               	movwf	??_LCD_Set_Cursor+1
  3857  00C9  0876               	movf	??_LCD_Set_Cursor+1,w
  3858  00CA  00F9               	movwf	LCD_Set_Cursor@High4
  3859  00CB                     l2217:
  3860                           
  3861                           ;lcd.c: 62:     Low4 = Temp & 0x0F;
  3862  00CB  087A               	movf	LCD_Set_Cursor@Temp,w
  3863  00CC  390F               	andlw	15
  3864  00CD  00F5               	movwf	??_LCD_Set_Cursor
  3865  00CE  0875               	movf	??_LCD_Set_Cursor,w
  3866  00CF  00F8               	movwf	LCD_Set_Cursor@Low4
  3867  00D0                     l2219:
  3868                           
  3869                           ;lcd.c: 63:     LCD_CMD(High4);
  3870  00D0  0879               	movf	LCD_Set_Cursor@High4,w
  3871  00D1  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  3872  00D6                     l2221:
  3873                           
  3874                           ;lcd.c: 64:     LCD_CMD(Low4);
  3875  00D6  0878               	movf	LCD_Set_Cursor@Low4,w
  3876  00D7  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  3877                           
  3878                           ;lcd.c: 65:   }
  3879  00DC  2958               	goto	l132
  3880  00DD                     l2223:
  3881  00DD  3002               	movlw	2
  3882  00DE  0677               	xorwf	LCD_Set_Cursor@row,w
  3883  00DF  1D03               	btfss	3,2
  3884  00E0  28E2               	goto	u1901
  3885  00E1  28E3               	goto	u1900
  3886  00E2                     u1901:
  3887  00E2  2906               	goto	l2233
  3888  00E3                     u1900:
  3889  00E3                     l2225:
  3890                           
  3891                           ;lcd.c: 67:   {;lcd.c: 68:     Temp = 0xC0 + column - 1;
  3892  00E3  0874               	movf	LCD_Set_Cursor@column,w
  3893  00E4  3EBF               	addlw	191
  3894  00E5  00F5               	movwf	??_LCD_Set_Cursor
  3895  00E6  0875               	movf	??_LCD_Set_Cursor,w
  3896  00E7  00FA               	movwf	LCD_Set_Cursor@Temp
  3897                           
  3898                           ;lcd.c: 69:     High4 = Temp >> 4;
  3899  00E8  087A               	movf	LCD_Set_Cursor@Temp,w
  3900  00E9  00F5               	movwf	??_LCD_Set_Cursor
  3901  00EA  3004               	movlw	4
  3902  00EB                     u1915:
  3903  00EB  1003               	clrc
  3904  00EC  0CF5               	rrf	??_LCD_Set_Cursor,f
  3905  00ED  3EFF               	addlw	-1
  3906  00EE  1D03               	skipz
  3907  00EF  28EB               	goto	u1915
  3908  00F0  0875               	movf	??_LCD_Set_Cursor,w
  3909  00F1  00F6               	movwf	??_LCD_Set_Cursor+1
  3910  00F2  0876               	movf	??_LCD_Set_Cursor+1,w
  3911  00F3  00F9               	movwf	LCD_Set_Cursor@High4
  3912  00F4                     l2227:
  3913                           
  3914                           ;lcd.c: 70:     Low4 = Temp & 0x0F;
  3915  00F4  087A               	movf	LCD_Set_Cursor@Temp,w
  3916  00F5  390F               	andlw	15
  3917  00F6  00F5               	movwf	??_LCD_Set_Cursor
  3918  00F7  0875               	movf	??_LCD_Set_Cursor,w
  3919  00F8  00F8               	movwf	LCD_Set_Cursor@Low4
  3920  00F9                     l2229:
  3921                           
  3922                           ;lcd.c: 71:     LCD_CMD(High4);
  3923  00F9  0879               	movf	LCD_Set_Cursor@High4,w
  3924  00FA  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  3925  00FF                     l2231:
  3926                           
  3927                           ;lcd.c: 72:     LCD_CMD(Low4);
  3928  00FF  0878               	movf	LCD_Set_Cursor@Low4,w
  3929  0100  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  3930                           
  3931                           ;lcd.c: 73:   }
  3932  0105  2958               	goto	l132
  3933  0106                     l2233:
  3934  0106  3003               	movlw	3
  3935  0107  0677               	xorwf	LCD_Set_Cursor@row,w
  3936  0108  1D03               	btfss	3,2
  3937  0109  290B               	goto	u1921
  3938  010A  290C               	goto	u1920
  3939  010B                     u1921:
  3940  010B  292F               	goto	l2243
  3941  010C                     u1920:
  3942  010C                     l2235:
  3943                           
  3944                           ;lcd.c: 75:   {;lcd.c: 76:    Temp = 0x94 + column - 1;
  3945  010C  0874               	movf	LCD_Set_Cursor@column,w
  3946  010D  3E93               	addlw	147
  3947  010E  00F5               	movwf	??_LCD_Set_Cursor
  3948  010F  0875               	movf	??_LCD_Set_Cursor,w
  3949  0110  00FA               	movwf	LCD_Set_Cursor@Temp
  3950                           
  3951                           ;lcd.c: 77:     High4 = Temp >> 4;
  3952  0111  087A               	movf	LCD_Set_Cursor@Temp,w
  3953  0112  00F5               	movwf	??_LCD_Set_Cursor
  3954  0113  3004               	movlw	4
  3955  0114                     u1935:
  3956  0114  1003               	clrc
  3957  0115  0CF5               	rrf	??_LCD_Set_Cursor,f
  3958  0116  3EFF               	addlw	-1
  3959  0117  1D03               	skipz
  3960  0118  2914               	goto	u1935
  3961  0119  0875               	movf	??_LCD_Set_Cursor,w
  3962  011A  00F6               	movwf	??_LCD_Set_Cursor+1
  3963  011B  0876               	movf	??_LCD_Set_Cursor+1,w
  3964  011C  00F9               	movwf	LCD_Set_Cursor@High4
  3965  011D                     l2237:
  3966                           
  3967                           ;lcd.c: 78:     Low4 = Temp & 0x0F;
  3968  011D  087A               	movf	LCD_Set_Cursor@Temp,w
  3969  011E  390F               	andlw	15
  3970  011F  00F5               	movwf	??_LCD_Set_Cursor
  3971  0120  0875               	movf	??_LCD_Set_Cursor,w
  3972  0121  00F8               	movwf	LCD_Set_Cursor@Low4
  3973  0122                     l2239:
  3974                           
  3975                           ;lcd.c: 79:     LCD_CMD(High4);
  3976  0122  0879               	movf	LCD_Set_Cursor@High4,w
  3977  0123  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  3978  0128                     l2241:
  3979                           
  3980                           ;lcd.c: 80:     LCD_CMD(Low4);
  3981  0128  0878               	movf	LCD_Set_Cursor@Low4,w
  3982  0129  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  3983                           
  3984                           ;lcd.c: 81:   }
  3985  012E  2958               	goto	l132
  3986  012F                     l2243:
  3987  012F  3004               	movlw	4
  3988  0130  0677               	xorwf	LCD_Set_Cursor@row,w
  3989  0131  1D03               	btfss	3,2
  3990  0132  2934               	goto	u1941
  3991  0133  2935               	goto	u1940
  3992  0134                     u1941:
  3993  0134  2958               	goto	l128
  3994  0135                     u1940:
  3995  0135                     l2245:
  3996                           
  3997                           ;lcd.c: 83:   {;lcd.c: 84:    Temp = 0xD4 + column - 1;
  3998  0135  0874               	movf	LCD_Set_Cursor@column,w
  3999  0136  3ED3               	addlw	211
  4000  0137  00F5               	movwf	??_LCD_Set_Cursor
  4001  0138  0875               	movf	??_LCD_Set_Cursor,w
  4002  0139  00FA               	movwf	LCD_Set_Cursor@Temp
  4003                           
  4004                           ;lcd.c: 85:     High4 = Temp >> 4;
  4005  013A  087A               	movf	LCD_Set_Cursor@Temp,w
  4006  013B  00F5               	movwf	??_LCD_Set_Cursor
  4007  013C  3004               	movlw	4
  4008  013D                     u1955:
  4009  013D  1003               	clrc
  4010  013E  0CF5               	rrf	??_LCD_Set_Cursor,f
  4011  013F  3EFF               	addlw	-1
  4012  0140  1D03               	skipz
  4013  0141  293D               	goto	u1955
  4014  0142  0875               	movf	??_LCD_Set_Cursor,w
  4015  0143  00F6               	movwf	??_LCD_Set_Cursor+1
  4016  0144  0876               	movf	??_LCD_Set_Cursor+1,w
  4017  0145  00F9               	movwf	LCD_Set_Cursor@High4
  4018  0146                     l2247:
  4019                           
  4020                           ;lcd.c: 86:     Low4 = Temp & 0x0F;
  4021  0146  087A               	movf	LCD_Set_Cursor@Temp,w
  4022  0147  390F               	andlw	15
  4023  0148  00F5               	movwf	??_LCD_Set_Cursor
  4024  0149  0875               	movf	??_LCD_Set_Cursor,w
  4025  014A  00F8               	movwf	LCD_Set_Cursor@Low4
  4026  014B                     l2249:
  4027                           
  4028                           ;lcd.c: 87:     LCD_CMD(High4);
  4029  014B  0879               	movf	LCD_Set_Cursor@High4,w
  4030  014C  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  4031  0151                     l2251:
  4032                           
  4033                           ;lcd.c: 88:     LCD_CMD(Low4);
  4034  0151  0878               	movf	LCD_Set_Cursor@Low4,w
  4035  0152  120A  158A  240A  120A  118A  	fcall	_LCD_CMD
  4036  0157  2958               	goto	l132
  4037  0158                     l128:
  4038  0158                     l132:
  4039  0158  0008               	return
  4040  0159                     __end_of_LCD_Set_Cursor:
  4041                           
  4042                           	psect	text14
  4043  02C5                     __ptext14:	
  4044 ;; *************** function _RTC_Set *****************
  4045 ;; Defined at:
  4046 ;;		line 49 in file "DS1307.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  time_t          1    wreg     PTR struct rtc_tm
  4049 ;;		 -> NULL(0), c_time(7), 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  time_t          1    3[BANK0 ] PTR struct rtc_tm
  4052 ;;		 -> NULL(0), c_time(7), 
  4053 ;;  sec_reg         1    2[BANK0 ] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         0       0       0       0       0
  4064 ;;      Locals:         0       2       0       0       0
  4065 ;;      Temps:          0       1       0       0       0
  4066 ;;      Totals:         0       3       0       0       0
  4067 ;;Total ram usage:        3 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 4
  4070 ;; This function calls:
  4071 ;;		_I2C_Start
  4072 ;;		_I2C_Stop
  4073 ;;		_I2C_Write_Char
  4074 ;;		_RTC_Read_Reg
  4075 ;;		_decimal_to_bcd
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           
  4082                           ;psect for function _RTC_Set
  4083  02C5                     _RTC_Set:
  4084                           
  4085                           ;incstack = 0
  4086                           ; Regs used in _RTC_Set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4087                           ;RTC_Set@time_t stored from wreg
  4088  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  4089  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  4090  02C7  00A3               	movwf	RTC_Set@time_t
  4091  02C8                     l2471:
  4092                           
  4093                           ;DS1307.c: 49: void RTC_Set(RTC_Time *time_t);DS1307.c: 50: {;DS1307.c: 51:   uint8_t se
      +                          c_reg = RTC_Read_Reg(0x00);
  4094  02C8  3000               	movlw	0
  4095  02C9  120A  158A  24DF  120A  118A  	fcall	_RTC_Read_Reg
  4096  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  4097  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  4098  02D0  00A1               	movwf	??_RTC_Set
  4099  02D1  0821               	movf	??_RTC_Set,w
  4100  02D2  00A2               	movwf	RTC_Set@sec_reg
  4101  02D3                     l2473:
  4102                           
  4103                           ;DS1307.c: 54:   time_t->day = decimal_to_bcd(time_t->day);
  4104  02D3  0823               	movf	RTC_Set@time_t,w
  4105  02D4  3E04               	addlw	4
  4106  02D5  0084               	movwf	4
  4107  02D6  1383               	bcf	3,7	;select IRP bank0
  4108  02D7  0800               	movf	0,w
  4109  02D8  120A  158A  2539  120A  118A  	fcall	_decimal_to_bcd
  4110  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  4111  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  4112  02DF  00A1               	movwf	??_RTC_Set
  4113  02E0  0823               	movf	RTC_Set@time_t,w
  4114  02E1  3E04               	addlw	4
  4115  02E2  0084               	movwf	4
  4116  02E3  0821               	movf	??_RTC_Set,w
  4117  02E4  1383               	bcf	3,7	;select IRP bank0
  4118  02E5  0080               	movwf	0
  4119  02E6                     l2475:
  4120                           
  4121                           ;DS1307.c: 55:   time_t->month = decimal_to_bcd(time_t->month);
  4122  02E6  0823               	movf	RTC_Set@time_t,w
  4123  02E7  3E05               	addlw	5
  4124  02E8  0084               	movwf	4
  4125  02E9  0800               	movf	0,w
  4126  02EA  120A  158A  2539  120A  118A  	fcall	_decimal_to_bcd
  4127  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4128  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4129  02F1  00A1               	movwf	??_RTC_Set
  4130  02F2  0823               	movf	RTC_Set@time_t,w
  4131  02F3  3E05               	addlw	5
  4132  02F4  0084               	movwf	4
  4133  02F5  0821               	movf	??_RTC_Set,w
  4134  02F6  1383               	bcf	3,7	;select IRP bank0
  4135  02F7  0080               	movwf	0
  4136  02F8                     l2477:
  4137                           
  4138                           ;DS1307.c: 56:   time_t->year = decimal_to_bcd(time_t->year);
  4139  02F8  0823               	movf	RTC_Set@time_t,w
  4140  02F9  3E06               	addlw	6
  4141  02FA  0084               	movwf	4
  4142  02FB  0800               	movf	0,w
  4143  02FC  120A  158A  2539  120A  118A  	fcall	_decimal_to_bcd
  4144  0301  1283               	bcf	3,5	;RP0=0, select bank0
  4145  0302  1303               	bcf	3,6	;RP1=0, select bank0
  4146  0303  00A1               	movwf	??_RTC_Set
  4147  0304  0823               	movf	RTC_Set@time_t,w
  4148  0305  3E06               	addlw	6
  4149  0306  0084               	movwf	4
  4150  0307  0821               	movf	??_RTC_Set,w
  4151  0308  1383               	bcf	3,7	;select IRP bank0
  4152  0309  0080               	movwf	0
  4153  030A                     l2479:
  4154                           
  4155                           ;DS1307.c: 57:   time_t->hours = decimal_to_bcd(time_t->hours);
  4156  030A  0823               	movf	RTC_Set@time_t,w
  4157  030B  3E02               	addlw	2
  4158  030C  0084               	movwf	4
  4159  030D  0800               	movf	0,w
  4160  030E  120A  158A  2539  120A  118A  	fcall	_decimal_to_bcd
  4161  0313  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0314  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0315  00A1               	movwf	??_RTC_Set
  4164  0316  0823               	movf	RTC_Set@time_t,w
  4165  0317  3E02               	addlw	2
  4166  0318  0084               	movwf	4
  4167  0319  0821               	movf	??_RTC_Set,w
  4168  031A  1383               	bcf	3,7	;select IRP bank0
  4169  031B  0080               	movwf	0
  4170  031C                     l2481:
  4171                           
  4172                           ;DS1307.c: 58:   time_t->minutes = decimal_to_bcd(time_t->minutes);
  4173  031C  0A23               	incf	RTC_Set@time_t,w
  4174  031D  0084               	movwf	4
  4175  031E  0800               	movf	0,w
  4176  031F  120A  158A  2539  120A  118A  	fcall	_decimal_to_bcd
  4177  0324  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0325  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0326  00A1               	movwf	??_RTC_Set
  4180  0327  0A23               	incf	RTC_Set@time_t,w
  4181  0328  0084               	movwf	4
  4182  0329  0821               	movf	??_RTC_Set,w
  4183  032A  1383               	bcf	3,7	;select IRP bank0
  4184  032B  0080               	movwf	0
  4185  032C                     l2483:
  4186                           
  4187                           ;DS1307.c: 59:   time_t->seconds = decimal_to_bcd(time_t->seconds);
  4188  032C  0823               	movf	RTC_Set@time_t,w
  4189  032D  0084               	movwf	4
  4190  032E  0800               	movf	0,w
  4191  032F  120A  158A  2539  120A  118A  	fcall	_decimal_to_bcd
  4192  0334  1283               	bcf	3,5	;RP0=0, select bank0
  4193  0335  1303               	bcf	3,6	;RP1=0, select bank0
  4194  0336  00A1               	movwf	??_RTC_Set
  4195  0337  0823               	movf	RTC_Set@time_t,w
  4196  0338  0084               	movwf	4
  4197  0339  0821               	movf	??_RTC_Set,w
  4198  033A  1383               	bcf	3,7	;select IRP bank0
  4199  033B  0080               	movwf	0
  4200  033C                     l2485:
  4201                           
  4202                           ;DS1307.c: 63:   if(sec_reg & 0x80)
  4203  033C  1FA2               	btfss	RTC_Set@sec_reg,7
  4204  033D  2B3F               	goto	u2311
  4205  033E  2B40               	goto	u2310
  4206  033F                     u2311:
  4207  033F  2B43               	goto	l2489
  4208  0340                     u2310:
  4209  0340                     l2487:
  4210                           
  4211                           ;DS1307.c: 64:     time_t->seconds |= 0x80;
  4212  0340  0823               	movf	RTC_Set@time_t,w
  4213  0341  0084               	movwf	4
  4214  0342  1780               	bsf	0,7
  4215  0343                     l2489:
  4216                           
  4217                           ;DS1307.c: 67:   I2C_Start();
  4218  0343  120A  158A  2371  120A  118A  	fcall	_I2C_Start
  4219  0348                     l2491:
  4220                           
  4221                           ;DS1307.c: 68:   I2C_Write_Char(0xD0);
  4222  0348  30D0               	movlw	208
  4223  0349  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4224  034E                     l2493:
  4225                           
  4226                           ;DS1307.c: 69:   I2C_Write_Char(0x00);
  4227  034E  3000               	movlw	0
  4228  034F  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4229  0354                     l2495:
  4230                           
  4231                           ;DS1307.c: 70:   I2C_Write_Char(time_t->seconds);
  4232  0354  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0355  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0356  0823               	movf	RTC_Set@time_t,w
  4235  0357  0084               	movwf	4
  4236  0358  1383               	bcf	3,7	;select IRP bank0
  4237  0359  0800               	movf	0,w
  4238  035A  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4239  035F                     l2497:
  4240                           
  4241                           ;DS1307.c: 71:   I2C_Write_Char(time_t->minutes);
  4242  035F  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0360  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0361  0A23               	incf	RTC_Set@time_t,w
  4245  0362  0084               	movwf	4
  4246  0363  1383               	bcf	3,7	;select IRP bank0
  4247  0364  0800               	movf	0,w
  4248  0365  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4249  036A                     l2499:
  4250                           
  4251                           ;DS1307.c: 72:   I2C_Write_Char(time_t->hours);
  4252  036A  1283               	bcf	3,5	;RP0=0, select bank0
  4253  036B  1303               	bcf	3,6	;RP1=0, select bank0
  4254  036C  0823               	movf	RTC_Set@time_t,w
  4255  036D  3E02               	addlw	2
  4256  036E  0084               	movwf	4
  4257  036F  1383               	bcf	3,7	;select IRP bank0
  4258  0370  0800               	movf	0,w
  4259  0371  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4260  0376                     l2501:
  4261                           
  4262                           ;DS1307.c: 73:   I2C_Write_Char(time_t->dow);
  4263  0376  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0377  1303               	bcf	3,6	;RP1=0, select bank0
  4265  0378  0823               	movf	RTC_Set@time_t,w
  4266  0379  3E03               	addlw	3
  4267  037A  0084               	movwf	4
  4268  037B  1383               	bcf	3,7	;select IRP bank0
  4269  037C  0800               	movf	0,w
  4270  037D  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4271  0382                     l2503:
  4272                           
  4273                           ;DS1307.c: 74:   I2C_Write_Char(time_t->day);
  4274  0382  1283               	bcf	3,5	;RP0=0, select bank0
  4275  0383  1303               	bcf	3,6	;RP1=0, select bank0
  4276  0384  0823               	movf	RTC_Set@time_t,w
  4277  0385  3E04               	addlw	4
  4278  0386  0084               	movwf	4
  4279  0387  1383               	bcf	3,7	;select IRP bank0
  4280  0388  0800               	movf	0,w
  4281  0389  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4282  038E                     l2505:
  4283                           
  4284                           ;DS1307.c: 75:   I2C_Write_Char(time_t->month);
  4285  038E  1283               	bcf	3,5	;RP0=0, select bank0
  4286  038F  1303               	bcf	3,6	;RP1=0, select bank0
  4287  0390  0823               	movf	RTC_Set@time_t,w
  4288  0391  3E05               	addlw	5
  4289  0392  0084               	movwf	4
  4290  0393  1383               	bcf	3,7	;select IRP bank0
  4291  0394  0800               	movf	0,w
  4292  0395  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4293  039A                     l2507:
  4294                           
  4295                           ;DS1307.c: 76:   I2C_Write_Char(time_t->year);
  4296  039A  1283               	bcf	3,5	;RP0=0, select bank0
  4297  039B  1303               	bcf	3,6	;RP1=0, select bank0
  4298  039C  0823               	movf	RTC_Set@time_t,w
  4299  039D  3E06               	addlw	6
  4300  039E  0084               	movwf	4
  4301  039F  1383               	bcf	3,7	;select IRP bank0
  4302  03A0  0800               	movf	0,w
  4303  03A1  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4304  03A6                     l2509:
  4305                           
  4306                           ;DS1307.c: 77:   I2C_Stop();
  4307  03A6  120A  158A  237A  120A  118A  	fcall	_I2C_Stop
  4308  03AB                     l245:
  4309  03AB  0008               	return
  4310  03AC                     __end_of_RTC_Set:
  4311                           
  4312                           	psect	text15
  4313  0D39                     __ptext15:	
  4314 ;; *************** function _decimal_to_bcd *****************
  4315 ;; Defined at:
  4316 ;;		line 9 in file "DS1307.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  number          1    wreg     unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  number          1    0[BANK0 ] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, pclath, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         0       0       0       0       0
  4331 ;;      Locals:         0       1       0       0       0
  4332 ;;      Temps:          5       0       0       0       0
  4333 ;;      Totals:         5       1       0       0       0
  4334 ;;Total ram usage:        6 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 1
  4337 ;; This function calls:
  4338 ;;		___awdiv
  4339 ;;		___awmod
  4340 ;; This function is called by:
  4341 ;;		_RTC_Set
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           
  4346                           ;psect for function _decimal_to_bcd
  4347  0D39                     _decimal_to_bcd:
  4348                           
  4349                           ;incstack = 0
  4350                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  4351                           ;decimal_to_bcd@number stored from wreg
  4352  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0D3B  00A0               	movwf	decimal_to_bcd@number
  4355  0D3C                     l2301:
  4356                           
  4357                           ;DS1307.c: 10:   return(uint8_t)(((number / 10) << 4) + (number % 10));
  4358  0D3C  300A               	movlw	10
  4359  0D3D  00F0               	movwf	___awdiv@divisor
  4360  0D3E  3000               	movlw	0
  4361  0D3F  00F1               	movwf	___awdiv@divisor+1
  4362  0D40  0820               	movf	decimal_to_bcd@number,w
  4363  0D41  00F9               	movwf	??_decimal_to_bcd
  4364  0D42  01FA               	clrf	??_decimal_to_bcd+1
  4365  0D43  0879               	movf	??_decimal_to_bcd,w
  4366  0D44  00F2               	movwf	___awdiv@dividend
  4367  0D45  087A               	movf	??_decimal_to_bcd+1,w
  4368  0D46  00F3               	movwf	___awdiv@dividend+1
  4369  0D47  120A  158A  2799  120A  158A  	fcall	___awdiv
  4370  0D4C  0870               	movf	?___awdiv,w
  4371  0D4D  00FB               	movwf	??_decimal_to_bcd+2
  4372  0D4E  3004               	movlw	4
  4373  0D4F                     u2065:
  4374  0D4F  1003               	clrc
  4375  0D50  0DFB               	rlf	??_decimal_to_bcd+2,f
  4376  0D51  3EFF               	addlw	-1
  4377  0D52  1D03               	skipz
  4378  0D53  2D4F               	goto	u2065
  4379  0D54  300A               	movlw	10
  4380  0D55  00F0               	movwf	___awmod@divisor
  4381  0D56  3000               	movlw	0
  4382  0D57  00F1               	movwf	___awmod@divisor+1
  4383  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0D5A  0820               	movf	decimal_to_bcd@number,w
  4386  0D5B  00FC               	movwf	??_decimal_to_bcd+3
  4387  0D5C  01FD               	clrf	??_decimal_to_bcd+4
  4388  0D5D  087C               	movf	??_decimal_to_bcd+3,w
  4389  0D5E  00F2               	movwf	___awmod@dividend
  4390  0D5F  087D               	movf	??_decimal_to_bcd+4,w
  4391  0D60  00F3               	movwf	___awmod@dividend+1
  4392  0D61  120A  158A  2673  120A  158A  	fcall	___awmod
  4393  0D66  0870               	movf	?___awmod,w
  4394  0D67  077B               	addwf	??_decimal_to_bcd+2,w
  4395  0D68                     l241:
  4396  0D68  0008               	return
  4397  0D69                     __end_of_decimal_to_bcd:
  4398                           
  4399                           	psect	text16
  4400  0E73                     __ptext16:	
  4401 ;; *************** function ___awmod *****************
  4402 ;; Defined at:
  4403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  divisor         2    0[COMMON] int 
  4406 ;;  dividend        2    2[COMMON] int 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  sign            1    6[COMMON] unsigned char 
  4409 ;;  counter         1    5[COMMON] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2    0[COMMON] int 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         4       0       0       0       0
  4420 ;;      Locals:         2       0       0       0       0
  4421 ;;      Temps:          1       0       0       0       0
  4422 ;;      Totals:         7       0       0       0       0
  4423 ;;Total ram usage:        7 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_edit
  4429 ;;		_decimal_to_bcd
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function ___awmod
  4435  0E73                     ___awmod:
  4436  0E73                     l1985:	
  4437                           ;incstack = 0
  4438                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4439                           
  4440  0E73  01F6               	clrf	___awmod@sign
  4441  0E74                     l1987:
  4442  0E74  1FF3               	btfss	___awmod@dividend+1,7
  4443  0E75  2E77               	goto	u1461
  4444  0E76  2E78               	goto	u1460
  4445  0E77                     u1461:
  4446  0E77  2E7F               	goto	l1993
  4447  0E78                     u1460:
  4448  0E78                     l1989:
  4449  0E78  09F2               	comf	___awmod@dividend,f
  4450  0E79  09F3               	comf	___awmod@dividend+1,f
  4451  0E7A  0AF2               	incf	___awmod@dividend,f
  4452  0E7B  1903               	skipnz
  4453  0E7C  0AF3               	incf	___awmod@dividend+1,f
  4454  0E7D                     l1991:
  4455  0E7D  01F6               	clrf	___awmod@sign
  4456  0E7E  0AF6               	incf	___awmod@sign,f
  4457  0E7F                     l1993:
  4458  0E7F  1FF1               	btfss	___awmod@divisor+1,7
  4459  0E80  2E82               	goto	u1471
  4460  0E81  2E83               	goto	u1470
  4461  0E82                     u1471:
  4462  0E82  2E88               	goto	l1997
  4463  0E83                     u1470:
  4464  0E83                     l1995:
  4465  0E83  09F0               	comf	___awmod@divisor,f
  4466  0E84  09F1               	comf	___awmod@divisor+1,f
  4467  0E85  0AF0               	incf	___awmod@divisor,f
  4468  0E86  1903               	skipnz
  4469  0E87  0AF1               	incf	___awmod@divisor+1,f
  4470  0E88                     l1997:
  4471  0E88  0870               	movf	___awmod@divisor,w
  4472  0E89  0471               	iorwf	___awmod@divisor+1,w
  4473  0E8A  1903               	btfsc	3,2
  4474  0E8B  2E8D               	goto	u1481
  4475  0E8C  2E8E               	goto	u1480
  4476  0E8D                     u1481:
  4477  0E8D  2EBD               	goto	l2015
  4478  0E8E                     u1480:
  4479  0E8E                     l1999:
  4480  0E8E  01F5               	clrf	___awmod@counter
  4481  0E8F  0AF5               	incf	___awmod@counter,f
  4482  0E90  2E9C               	goto	l2005
  4483  0E91                     l2001:
  4484  0E91  3001               	movlw	1
  4485  0E92                     u1495:
  4486  0E92  1003               	clrc
  4487  0E93  0DF0               	rlf	___awmod@divisor,f
  4488  0E94  0DF1               	rlf	___awmod@divisor+1,f
  4489  0E95  3EFF               	addlw	-1
  4490  0E96  1D03               	skipz
  4491  0E97  2E92               	goto	u1495
  4492  0E98                     l2003:
  4493  0E98  3001               	movlw	1
  4494  0E99  00F4               	movwf	??___awmod
  4495  0E9A  0874               	movf	??___awmod,w
  4496  0E9B  07F5               	addwf	___awmod@counter,f
  4497  0E9C                     l2005:
  4498  0E9C  1FF1               	btfss	___awmod@divisor+1,7
  4499  0E9D  2E9F               	goto	u1501
  4500  0E9E  2EA0               	goto	u1500
  4501  0E9F                     u1501:
  4502  0E9F  2E91               	goto	l2001
  4503  0EA0                     u1500:
  4504  0EA0                     l2007:
  4505  0EA0  0871               	movf	___awmod@divisor+1,w
  4506  0EA1  0273               	subwf	___awmod@dividend+1,w
  4507  0EA2  1D03               	skipz
  4508  0EA3  2EA6               	goto	u1515
  4509  0EA4  0870               	movf	___awmod@divisor,w
  4510  0EA5  0272               	subwf	___awmod@dividend,w
  4511  0EA6                     u1515:
  4512  0EA6  1C03               	skipc
  4513  0EA7  2EA9               	goto	u1511
  4514  0EA8  2EAA               	goto	u1510
  4515  0EA9                     u1511:
  4516  0EA9  2EB0               	goto	l2011
  4517  0EAA                     u1510:
  4518  0EAA                     l2009:
  4519  0EAA  0870               	movf	___awmod@divisor,w
  4520  0EAB  02F2               	subwf	___awmod@dividend,f
  4521  0EAC  0871               	movf	___awmod@divisor+1,w
  4522  0EAD  1C03               	skipc
  4523  0EAE  03F3               	decf	___awmod@dividend+1,f
  4524  0EAF  02F3               	subwf	___awmod@dividend+1,f
  4525  0EB0                     l2011:
  4526  0EB0  3001               	movlw	1
  4527  0EB1                     u1525:
  4528  0EB1  1003               	clrc
  4529  0EB2  0CF1               	rrf	___awmod@divisor+1,f
  4530  0EB3  0CF0               	rrf	___awmod@divisor,f
  4531  0EB4  3EFF               	addlw	-1
  4532  0EB5  1D03               	skipz
  4533  0EB6  2EB1               	goto	u1525
  4534  0EB7                     l2013:
  4535  0EB7  3001               	movlw	1
  4536  0EB8  02F5               	subwf	___awmod@counter,f
  4537  0EB9  1D03               	btfss	3,2
  4538  0EBA  2EBC               	goto	u1531
  4539  0EBB  2EBD               	goto	u1530
  4540  0EBC                     u1531:
  4541  0EBC  2EA0               	goto	l2007
  4542  0EBD                     u1530:
  4543  0EBD                     l2015:
  4544  0EBD  0876               	movf	___awmod@sign,w
  4545  0EBE  1903               	btfsc	3,2
  4546  0EBF  2EC1               	goto	u1541
  4547  0EC0  2EC2               	goto	u1540
  4548  0EC1                     u1541:
  4549  0EC1  2EC7               	goto	l2019
  4550  0EC2                     u1540:
  4551  0EC2                     l2017:
  4552  0EC2  09F2               	comf	___awmod@dividend,f
  4553  0EC3  09F3               	comf	___awmod@dividend+1,f
  4554  0EC4  0AF2               	incf	___awmod@dividend,f
  4555  0EC5  1903               	skipnz
  4556  0EC6  0AF3               	incf	___awmod@dividend+1,f
  4557  0EC7                     l2019:
  4558  0EC7  0873               	movf	___awmod@dividend+1,w
  4559  0EC8  00F1               	movwf	?___awmod+1
  4560  0EC9  0872               	movf	___awmod@dividend,w
  4561  0ECA  00F0               	movwf	?___awmod
  4562  0ECB                     l585:
  4563  0ECB  0008               	return
  4564  0ECC                     __end_of___awmod:
  4565                           
  4566                           	psect	text17
  4567  0F99                     __ptext17:	
  4568 ;; *************** function ___awdiv *****************
  4569 ;; Defined at:
  4570 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  divisor         2    0[COMMON] int 
  4573 ;;  dividend        2    2[COMMON] int 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  quotient        2    7[COMMON] int 
  4576 ;;  sign            1    6[COMMON] unsigned char 
  4577 ;;  counter         1    5[COMMON] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  2    0[COMMON] int 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         4       0       0       0       0
  4588 ;;      Locals:         4       0       0       0       0
  4589 ;;      Temps:          1       0       0       0       0
  4590 ;;      Totals:         9       0       0       0       0
  4591 ;;Total ram usage:        9 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_edit
  4597 ;;		_decimal_to_bcd
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function ___awdiv
  4603  0F99                     ___awdiv:
  4604  0F99                     l1941:	
  4605                           ;incstack = 0
  4606                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4607                           
  4608  0F99  01F6               	clrf	___awdiv@sign
  4609  0F9A                     l1943:
  4610  0F9A  1FF1               	btfss	___awdiv@divisor+1,7
  4611  0F9B  2F9D               	goto	u1361
  4612  0F9C  2F9E               	goto	u1360
  4613  0F9D                     u1361:
  4614  0F9D  2FA5               	goto	l1949
  4615  0F9E                     u1360:
  4616  0F9E                     l1945:
  4617  0F9E  09F0               	comf	___awdiv@divisor,f
  4618  0F9F  09F1               	comf	___awdiv@divisor+1,f
  4619  0FA0  0AF0               	incf	___awdiv@divisor,f
  4620  0FA1  1903               	skipnz
  4621  0FA2  0AF1               	incf	___awdiv@divisor+1,f
  4622  0FA3                     l1947:
  4623  0FA3  01F6               	clrf	___awdiv@sign
  4624  0FA4  0AF6               	incf	___awdiv@sign,f
  4625  0FA5                     l1949:
  4626  0FA5  1FF3               	btfss	___awdiv@dividend+1,7
  4627  0FA6  2FA8               	goto	u1371
  4628  0FA7  2FA9               	goto	u1370
  4629  0FA8                     u1371:
  4630  0FA8  2FB2               	goto	l1955
  4631  0FA9                     u1370:
  4632  0FA9                     l1951:
  4633  0FA9  09F2               	comf	___awdiv@dividend,f
  4634  0FAA  09F3               	comf	___awdiv@dividend+1,f
  4635  0FAB  0AF2               	incf	___awdiv@dividend,f
  4636  0FAC  1903               	skipnz
  4637  0FAD  0AF3               	incf	___awdiv@dividend+1,f
  4638  0FAE                     l1953:
  4639  0FAE  3001               	movlw	1
  4640  0FAF  00F4               	movwf	??___awdiv
  4641  0FB0  0874               	movf	??___awdiv,w
  4642  0FB1  06F6               	xorwf	___awdiv@sign,f
  4643  0FB2                     l1955:
  4644  0FB2  01F7               	clrf	___awdiv@quotient
  4645  0FB3  01F8               	clrf	___awdiv@quotient+1
  4646  0FB4                     l1957:
  4647  0FB4  0870               	movf	___awdiv@divisor,w
  4648  0FB5  0471               	iorwf	___awdiv@divisor+1,w
  4649  0FB6  1903               	btfsc	3,2
  4650  0FB7  2FB9               	goto	u1381
  4651  0FB8  2FBA               	goto	u1380
  4652  0FB9                     u1381:
  4653  0FB9  2FF1               	goto	l1977
  4654  0FBA                     u1380:
  4655  0FBA                     l1959:
  4656  0FBA  01F5               	clrf	___awdiv@counter
  4657  0FBB  0AF5               	incf	___awdiv@counter,f
  4658  0FBC  2FC8               	goto	l1965
  4659  0FBD                     l1961:
  4660  0FBD  3001               	movlw	1
  4661  0FBE                     u1395:
  4662  0FBE  1003               	clrc
  4663  0FBF  0DF0               	rlf	___awdiv@divisor,f
  4664  0FC0  0DF1               	rlf	___awdiv@divisor+1,f
  4665  0FC1  3EFF               	addlw	-1
  4666  0FC2  1D03               	skipz
  4667  0FC3  2FBE               	goto	u1395
  4668  0FC4                     l1963:
  4669  0FC4  3001               	movlw	1
  4670  0FC5  00F4               	movwf	??___awdiv
  4671  0FC6  0874               	movf	??___awdiv,w
  4672  0FC7  07F5               	addwf	___awdiv@counter,f
  4673  0FC8                     l1965:
  4674  0FC8  1FF1               	btfss	___awdiv@divisor+1,7
  4675  0FC9  2FCB               	goto	u1401
  4676  0FCA  2FCC               	goto	u1400
  4677  0FCB                     u1401:
  4678  0FCB  2FBD               	goto	l1961
  4679  0FCC                     u1400:
  4680  0FCC                     l1967:
  4681  0FCC  3001               	movlw	1
  4682  0FCD                     u1415:
  4683  0FCD  1003               	clrc
  4684  0FCE  0DF7               	rlf	___awdiv@quotient,f
  4685  0FCF  0DF8               	rlf	___awdiv@quotient+1,f
  4686  0FD0  3EFF               	addlw	-1
  4687  0FD1  1D03               	skipz
  4688  0FD2  2FCD               	goto	u1415
  4689  0FD3  0871               	movf	___awdiv@divisor+1,w
  4690  0FD4  0273               	subwf	___awdiv@dividend+1,w
  4691  0FD5  1D03               	skipz
  4692  0FD6  2FD9               	goto	u1425
  4693  0FD7  0870               	movf	___awdiv@divisor,w
  4694  0FD8  0272               	subwf	___awdiv@dividend,w
  4695  0FD9                     u1425:
  4696  0FD9  1C03               	skipc
  4697  0FDA  2FDC               	goto	u1421
  4698  0FDB  2FDD               	goto	u1420
  4699  0FDC                     u1421:
  4700  0FDC  2FE4               	goto	l1973
  4701  0FDD                     u1420:
  4702  0FDD                     l1969:
  4703  0FDD  0870               	movf	___awdiv@divisor,w
  4704  0FDE  02F2               	subwf	___awdiv@dividend,f
  4705  0FDF  0871               	movf	___awdiv@divisor+1,w
  4706  0FE0  1C03               	skipc
  4707  0FE1  03F3               	decf	___awdiv@dividend+1,f
  4708  0FE2  02F3               	subwf	___awdiv@dividend+1,f
  4709  0FE3                     l1971:
  4710  0FE3  1477               	bsf	___awdiv@quotient,0
  4711  0FE4                     l1973:
  4712  0FE4  3001               	movlw	1
  4713  0FE5                     u1435:
  4714  0FE5  1003               	clrc
  4715  0FE6  0CF1               	rrf	___awdiv@divisor+1,f
  4716  0FE7  0CF0               	rrf	___awdiv@divisor,f
  4717  0FE8  3EFF               	addlw	-1
  4718  0FE9  1D03               	skipz
  4719  0FEA  2FE5               	goto	u1435
  4720  0FEB                     l1975:
  4721  0FEB  3001               	movlw	1
  4722  0FEC  02F5               	subwf	___awdiv@counter,f
  4723  0FED  1D03               	btfss	3,2
  4724  0FEE  2FF0               	goto	u1441
  4725  0FEF  2FF1               	goto	u1440
  4726  0FF0                     u1441:
  4727  0FF0  2FCC               	goto	l1967
  4728  0FF1                     u1440:
  4729  0FF1                     l1977:
  4730  0FF1  0876               	movf	___awdiv@sign,w
  4731  0FF2  1903               	btfsc	3,2
  4732  0FF3  2FF5               	goto	u1451
  4733  0FF4  2FF6               	goto	u1450
  4734  0FF5                     u1451:
  4735  0FF5  2FFB               	goto	l1981
  4736  0FF6                     u1450:
  4737  0FF6                     l1979:
  4738  0FF6  09F7               	comf	___awdiv@quotient,f
  4739  0FF7  09F8               	comf	___awdiv@quotient+1,f
  4740  0FF8  0AF7               	incf	___awdiv@quotient,f
  4741  0FF9  1903               	skipnz
  4742  0FFA  0AF8               	incf	___awdiv@quotient+1,f
  4743  0FFB                     l1981:
  4744  0FFB  0878               	movf	___awdiv@quotient+1,w
  4745  0FFC  00F1               	movwf	?___awdiv+1
  4746  0FFD  0877               	movf	___awdiv@quotient,w
  4747  0FFE  00F0               	movwf	?___awdiv
  4748  0FFF                     l572:
  4749  0FFF  0008               	return
  4750  1000                     __end_of___awdiv:
  4751                           
  4752                           	psect	text18
  4753  0CDF                     __ptext18:	
  4754 ;; *************** function _RTC_Read_Reg *****************
  4755 ;; Defined at:
  4756 ;;		line 128 in file "DS1307.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  reg_address     1    wreg     unsigned char 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  reg_address     1    4[COMMON] unsigned char 
  4761 ;;  reg_data        1    5[COMMON] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      unsigned char 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0, pclath, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4771 ;;      Params:         0       0       0       0       0
  4772 ;;      Locals:         2       0       0       0       0
  4773 ;;      Temps:          1       0       0       0       0
  4774 ;;      Totals:         3       0       0       0       0
  4775 ;;Total ram usage:        3 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 3
  4778 ;; This function calls:
  4779 ;;		_I2C_Read_Char
  4780 ;;		_I2C_Restart
  4781 ;;		_I2C_Start
  4782 ;;		_I2C_Stop
  4783 ;;		_I2C_Write_Char
  4784 ;; This function is called by:
  4785 ;;		_RTC_Set
  4786 ;;		_OSC_Enable
  4787 ;;		_OSC_Disable
  4788 ;;		_OSC_Status
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _RTC_Read_Reg
  4794  0CDF                     _RTC_Read_Reg:
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _RTC_Read_Reg: [wreg+status,2+status,0+pclath+cstack]
  4798                           ;RTC_Read_Reg@reg_address stored from wreg
  4799  0CDF  00F4               	movwf	RTC_Read_Reg@reg_address
  4800  0CE0                     l2305:
  4801                           
  4802                           ;DS1307.c: 128: uint8_t RTC_Read_Reg(uint8_t reg_address);DS1307.c: 129: {;DS1307.c: 130
      +                          :   uint8_t reg_data;;DS1307.c: 132:   I2C_Start();
  4803  0CE0  120A  158A  2371  120A  158A  	fcall	_I2C_Start
  4804                           
  4805                           ;DS1307.c: 133:   I2C_Write_Char(0xD0);
  4806  0CE5  30D0               	movlw	208
  4807  0CE6  120A  158A  23A8  120A  158A  	fcall	_I2C_Write_Char
  4808                           
  4809                           ;DS1307.c: 134:   I2C_Write_Char(reg_address);
  4810  0CEB  0874               	movf	RTC_Read_Reg@reg_address,w
  4811  0CEC  120A  158A  23A8  120A  158A  	fcall	_I2C_Write_Char
  4812                           
  4813                           ;DS1307.c: 135:   I2C_Restart();
  4814  0CF1  120A  158A  2368  120A  158A  	fcall	_I2C_Restart
  4815                           
  4816                           ;DS1307.c: 136:   I2C_Write_Char(0xD0 | 0x01);
  4817  0CF6  30D1               	movlw	209
  4818  0CF7  120A  158A  23A8  120A  158A  	fcall	_I2C_Write_Char
  4819                           
  4820                           ;DS1307.c: 137:   reg_data = I2C_Read_Char(1);
  4821  0CFC  3001               	movlw	1
  4822  0CFD  120A  158A  24B4  120A  158A  	fcall	_I2C_Read_Char
  4823  0D02  00F3               	movwf	??_RTC_Read_Reg
  4824  0D03  0873               	movf	??_RTC_Read_Reg,w
  4825  0D04  00F5               	movwf	RTC_Read_Reg@reg_data
  4826                           
  4827                           ;DS1307.c: 138:   I2C_Stop();
  4828  0D05  120A  158A  237A  120A  158A  	fcall	_I2C_Stop
  4829  0D0A                     l2307:
  4830                           
  4831                           ;DS1307.c: 140:   return reg_data;
  4832  0D0A  0875               	movf	RTC_Read_Reg@reg_data,w
  4833  0D0B                     l256:
  4834  0D0B  0008               	return
  4835  0D0C                     __end_of_RTC_Read_Reg:
  4836                           
  4837                           	psect	text19
  4838  0205                     __ptext19:	
  4839 ;; *************** function _RTC_Get *****************
  4840 ;; Defined at:
  4841 ;;		line 83 in file "DS1307.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      PTR struct rtc_tm
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, pclath, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4855 ;;      Params:         0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0
  4857 ;;      Temps:          1       0       0       0       0
  4858 ;;      Totals:         1       0       0       0       0
  4859 ;;Total ram usage:        1 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 3
  4862 ;; This function calls:
  4863 ;;		_I2C_Read_Char
  4864 ;;		_I2C_Restart
  4865 ;;		_I2C_Start
  4866 ;;		_I2C_Stop
  4867 ;;		_I2C_Write_Char
  4868 ;;		_bcd_to_decimal
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function _RTC_Get
  4876  0205                     _RTC_Get:
  4877  0205                     l2511:	
  4878                           ;incstack = 0
  4879                           ; Regs used in _RTC_Get: [wreg+status,2+status,0+pclath+cstack]
  4880                           
  4881                           
  4882                           ;DS1307.c: 85:   I2C_Start();
  4883  0205  120A  158A  2371  120A  118A  	fcall	_I2C_Start
  4884                           
  4885                           ;DS1307.c: 87:   I2C_Write_Char(0xD0);
  4886  020A  30D0               	movlw	208
  4887  020B  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4888                           
  4889                           ;DS1307.c: 88:   I2C_Write_Char(0x00);
  4890  0210  3000               	movlw	0
  4891  0211  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4892                           
  4893                           ;DS1307.c: 90:   I2C_Restart();
  4894  0216  120A  158A  2368  120A  118A  	fcall	_I2C_Restart
  4895                           
  4896                           ;DS1307.c: 92:   I2C_Write_Char(0xD0 | 0x01);
  4897  021B  30D1               	movlw	209
  4898  021C  120A  158A  23A8  120A  118A  	fcall	_I2C_Write_Char
  4899                           
  4900                           ;DS1307.c: 94:   c_time.seconds = I2C_Read_Char(0) & 0x7F;
  4901  0221  3000               	movlw	0
  4902  0222  120A  158A  24B4  120A  118A  	fcall	_I2C_Read_Char
  4903  0227  397F               	andlw	127
  4904  0228  00F8               	movwf	??_RTC_Get
  4905  0229  0878               	movf	??_RTC_Get,w
  4906  022A  1283               	bcf	3,5	;RP0=0, select bank0
  4907  022B  1303               	bcf	3,6	;RP1=0, select bank0
  4908  022C  00DE               	movwf	_c_time
  4909                           
  4910                           ;DS1307.c: 95:   c_time.minutes = I2C_Read_Char(0);
  4911  022D  3000               	movlw	0
  4912  022E  120A  158A  24B4  120A  118A  	fcall	_I2C_Read_Char
  4913  0233  00F8               	movwf	??_RTC_Get
  4914  0234  0878               	movf	??_RTC_Get,w
  4915  0235  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0236  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0237  00DF               	movwf	_c_time+1
  4918                           
  4919                           ;DS1307.c: 96:   c_time.hours = I2C_Read_Char(0);
  4920  0238  3000               	movlw	0
  4921  0239  120A  158A  24B4  120A  118A  	fcall	_I2C_Read_Char
  4922  023E  00F8               	movwf	??_RTC_Get
  4923  023F  0878               	movf	??_RTC_Get,w
  4924  0240  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0241  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0242  00E0               	movwf	_c_time+2
  4927                           
  4928                           ;DS1307.c: 97:   c_time.dow = I2C_Read_Char(0);
  4929  0243  3000               	movlw	0
  4930  0244  120A  158A  24B4  120A  118A  	fcall	_I2C_Read_Char
  4931  0249  00F8               	movwf	??_RTC_Get
  4932  024A  0878               	movf	??_RTC_Get,w
  4933  024B  1283               	bcf	3,5	;RP0=0, select bank0
  4934  024C  1303               	bcf	3,6	;RP1=0, select bank0
  4935  024D  00E1               	movwf	_c_time+3
  4936                           
  4937                           ;DS1307.c: 98:   c_time.day = I2C_Read_Char(0);
  4938  024E  3000               	movlw	0
  4939  024F  120A  158A  24B4  120A  118A  	fcall	_I2C_Read_Char
  4940  0254  00F8               	movwf	??_RTC_Get
  4941  0255  0878               	movf	??_RTC_Get,w
  4942  0256  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0257  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0258  00E2               	movwf	_c_time+4
  4945                           
  4946                           ;DS1307.c: 99:   c_time.month = I2C_Read_Char(0);
  4947  0259  3000               	movlw	0
  4948  025A  120A  158A  24B4  120A  118A  	fcall	_I2C_Read_Char
  4949  025F  00F8               	movwf	??_RTC_Get
  4950  0260  0878               	movf	??_RTC_Get,w
  4951  0261  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0262  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0263  00E3               	movwf	_c_time+5
  4954                           
  4955                           ;DS1307.c: 100:   c_time.year = I2C_Read_Char(1);
  4956  0264  3001               	movlw	1
  4957  0265  120A  158A  24B4  120A  118A  	fcall	_I2C_Read_Char
  4958  026A  00F8               	movwf	??_RTC_Get
  4959  026B  0878               	movf	??_RTC_Get,w
  4960  026C  1283               	bcf	3,5	;RP0=0, select bank0
  4961  026D  1303               	bcf	3,6	;RP1=0, select bank0
  4962  026E  00E4               	movwf	_c_time+6
  4963                           
  4964                           ;DS1307.c: 102:   I2C_Stop();
  4965  026F  120A  158A  237A  120A  118A  	fcall	_I2C_Stop
  4966                           
  4967                           ;DS1307.c: 105:   c_time.seconds = bcd_to_decimal(c_time.seconds);
  4968  0274  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0275  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0276  085E               	movf	_c_time,w
  4971  0277  120A  158A  23F2  120A  118A  	fcall	_bcd_to_decimal
  4972  027C  00F8               	movwf	??_RTC_Get
  4973  027D  0878               	movf	??_RTC_Get,w
  4974  027E  1283               	bcf	3,5	;RP0=0, select bank0
  4975  027F  1303               	bcf	3,6	;RP1=0, select bank0
  4976  0280  00DE               	movwf	_c_time
  4977                           
  4978                           ;DS1307.c: 106:   c_time.minutes = bcd_to_decimal(c_time.minutes);
  4979  0281  085F               	movf	_c_time+1,w
  4980  0282  120A  158A  23F2  120A  118A  	fcall	_bcd_to_decimal
  4981  0287  00F8               	movwf	??_RTC_Get
  4982  0288  0878               	movf	??_RTC_Get,w
  4983  0289  1283               	bcf	3,5	;RP0=0, select bank0
  4984  028A  1303               	bcf	3,6	;RP1=0, select bank0
  4985  028B  00DF               	movwf	_c_time+1
  4986                           
  4987                           ;DS1307.c: 107:   c_time.hours = bcd_to_decimal(c_time.hours);
  4988  028C  0860               	movf	_c_time+2,w
  4989  028D  120A  158A  23F2  120A  118A  	fcall	_bcd_to_decimal
  4990  0292  00F8               	movwf	??_RTC_Get
  4991  0293  0878               	movf	??_RTC_Get,w
  4992  0294  1283               	bcf	3,5	;RP0=0, select bank0
  4993  0295  1303               	bcf	3,6	;RP1=0, select bank0
  4994  0296  00E0               	movwf	_c_time+2
  4995                           
  4996                           ;DS1307.c: 108:   c_time.dow = bcd_to_decimal(c_time.dow);
  4997  0297  0861               	movf	_c_time+3,w
  4998  0298  120A  158A  23F2  120A  118A  	fcall	_bcd_to_decimal
  4999  029D  00F8               	movwf	??_RTC_Get
  5000  029E  0878               	movf	??_RTC_Get,w
  5001  029F  1283               	bcf	3,5	;RP0=0, select bank0
  5002  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  5003  02A1  00E1               	movwf	_c_time+3
  5004                           
  5005                           ;DS1307.c: 109:   c_time.day = bcd_to_decimal(c_time.day);
  5006  02A2  0862               	movf	_c_time+4,w
  5007  02A3  120A  158A  23F2  120A  118A  	fcall	_bcd_to_decimal
  5008  02A8  00F8               	movwf	??_RTC_Get
  5009  02A9  0878               	movf	??_RTC_Get,w
  5010  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  5011  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  5012  02AC  00E2               	movwf	_c_time+4
  5013                           
  5014                           ;DS1307.c: 110:   c_time.month = bcd_to_decimal(c_time.month);
  5015  02AD  0863               	movf	_c_time+5,w
  5016  02AE  120A  158A  23F2  120A  118A  	fcall	_bcd_to_decimal
  5017  02B3  00F8               	movwf	??_RTC_Get
  5018  02B4  0878               	movf	??_RTC_Get,w
  5019  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  5020  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  5021  02B7  00E3               	movwf	_c_time+5
  5022                           
  5023                           ;DS1307.c: 111:   c_time.year = bcd_to_decimal(c_time.year);
  5024  02B8  0864               	movf	_c_time+6,w
  5025  02B9  120A  158A  23F2  120A  118A  	fcall	_bcd_to_decimal
  5026  02BE  00F8               	movwf	??_RTC_Get
  5027  02BF  0878               	movf	??_RTC_Get,w
  5028  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  5029  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  5030  02C2  00E4               	movwf	_c_time+6
  5031  02C3                     l2513:
  5032                           
  5033                           ;DS1307.c: 114:   return &c_time;
  5034  02C3  305E               	movlw	(low (_c_time| 0))& (0+255)
  5035  02C4                     l250:
  5036  02C4  0008               	return
  5037  02C5                     __end_of_RTC_Get:
  5038                           
  5039                           	psect	text20
  5040  0BF2                     __ptext20:	
  5041 ;; *************** function _bcd_to_decimal *****************
  5042 ;; Defined at:
  5043 ;;		line 4 in file "DS1307.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  number          1    wreg     unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  number          1    7[COMMON] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      unsigned char 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0, pclath, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5057 ;;      Params:         0       0       0       0       0
  5058 ;;      Locals:         1       0       0       0       0
  5059 ;;      Temps:          3       0       0       0       0
  5060 ;;      Totals:         4       0       0       0       0
  5061 ;;Total ram usage:        4 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; Hardware stack levels required when called: 1
  5064 ;; This function calls:
  5065 ;;		___bmul
  5066 ;; This function is called by:
  5067 ;;		_RTC_Get
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _bcd_to_decimal
  5073  0BF2                     _bcd_to_decimal:
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  5077                           ;bcd_to_decimal@number stored from wreg
  5078  0BF2  00F7               	movwf	bcd_to_decimal@number
  5079  0BF3                     l2297:
  5080                           
  5081                           ;DS1307.c: 5:   return(uint8_t)((number >> 4) * 10 + (number & 0x0F));
  5082  0BF3  300F               	movlw	15
  5083  0BF4  0577               	andwf	bcd_to_decimal@number,w
  5084  0BF5  00F4               	movwf	??_bcd_to_decimal
  5085  0BF6  300A               	movlw	10
  5086  0BF7  00F5               	movwf	??_bcd_to_decimal+1
  5087  0BF8  0875               	movf	??_bcd_to_decimal+1,w
  5088  0BF9  00F0               	movwf	___bmul@multiplicand
  5089  0BFA  0877               	movf	bcd_to_decimal@number,w
  5090  0BFB  00F6               	movwf	??_bcd_to_decimal+2
  5091  0BFC  3004               	movlw	4
  5092  0BFD                     u2055:
  5093  0BFD  1003               	clrc
  5094  0BFE  0CF6               	rrf	??_bcd_to_decimal+2,f
  5095  0BFF  3EFF               	addlw	-1
  5096  0C00  1D03               	skipz
  5097  0C01  2BFD               	goto	u2055
  5098  0C02  0876               	movf	??_bcd_to_decimal+2,w
  5099  0C03  120A  158A  23DD  120A  158A  	fcall	___bmul
  5100  0C08  0774               	addwf	??_bcd_to_decimal,w
  5101  0C09                     l238:
  5102  0C09  0008               	return
  5103  0C0A                     __end_of_bcd_to_decimal:
  5104                           
  5105                           	psect	text21
  5106  0BDD                     __ptext21:	
  5107 ;; *************** function ___bmul *****************
  5108 ;; Defined at:
  5109 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  multiplier      1    wreg     unsigned char 
  5112 ;;  multiplicand    1    0[COMMON] unsigned char 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  multiplier      1    3[COMMON] unsigned char 
  5115 ;;  product         1    2[COMMON] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      unsigned char 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5125 ;;      Params:         1       0       0       0       0
  5126 ;;      Locals:         2       0       0       0       0
  5127 ;;      Temps:          1       0       0       0       0
  5128 ;;      Totals:         4       0       0       0       0
  5129 ;;Total ram usage:        4 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_bcd_to_decimal
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           
  5139                           ;psect for function ___bmul
  5140  0BDD                     ___bmul:
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5144                           ;___bmul@multiplier stored from wreg
  5145  0BDD  00F3               	movwf	___bmul@multiplier
  5146  0BDE                     l1927:
  5147  0BDE  01F2               	clrf	___bmul@product
  5148  0BDF                     l1929:
  5149  0BDF  1C73               	btfss	___bmul@multiplier,0
  5150  0BE0  2BE2               	goto	u1341
  5151  0BE1  2BE3               	goto	u1340
  5152  0BE2                     u1341:
  5153  0BE2  2BE7               	goto	l1933
  5154  0BE3                     u1340:
  5155  0BE3                     l1931:
  5156  0BE3  0870               	movf	___bmul@multiplicand,w
  5157  0BE4  00F1               	movwf	??___bmul
  5158  0BE5  0871               	movf	??___bmul,w
  5159  0BE6  07F2               	addwf	___bmul@product,f
  5160  0BE7                     l1933:
  5161  0BE7  1003               	clrc
  5162  0BE8  0DF0               	rlf	___bmul@multiplicand,f
  5163  0BE9                     l1935:
  5164  0BE9  1003               	clrc
  5165  0BEA  0CF3               	rrf	___bmul@multiplier,f
  5166  0BEB  0873               	movf	___bmul@multiplier,w
  5167  0BEC  1D03               	btfss	3,2
  5168  0BED  2BEF               	goto	u1351
  5169  0BEE  2BF0               	goto	u1350
  5170  0BEF                     u1351:
  5171  0BEF  2BDF               	goto	l1929
  5172  0BF0                     u1350:
  5173  0BF0                     l1937:
  5174  0BF0  0872               	movf	___bmul@product,w
  5175  0BF1                     l445:
  5176  0BF1  0008               	return
  5177  0BF2                     __end_of___bmul:
  5178                           
  5179                           	psect	text22
  5180  0BA8                     __ptext22:	
  5181 ;; *************** function _I2C_Write_Char *****************
  5182 ;; Defined at:
  5183 ;;		line 81 in file "i2c_master.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  Data            1    wreg     unsigned char 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  Data            1    0[COMMON] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      unsigned char 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5197 ;;      Params:         0       0       0       0       0
  5198 ;;      Locals:         1       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0
  5200 ;;      Totals:         1       0       0       0       0
  5201 ;;Total ram usage:        1 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 1
  5204 ;; This function calls:
  5205 ;;		_I2C_Wait
  5206 ;; This function is called by:
  5207 ;;		_RTC_Set
  5208 ;;		_RTC_Get
  5209 ;;		_RTC_Read_Reg
  5210 ;;		_RTC_Write_Reg
  5211 ;;		_SQWE_Set
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function _I2C_Write_Char
  5217  0BA8                     _I2C_Write_Char:
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in _I2C_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5221                           ;I2C_Write_Char@Data stored from wreg
  5222  0BA8  00F0               	movwf	I2C_Write_Char@Data
  5223  0BA9                     l1873:
  5224                           
  5225                           ;i2c_master.c: 81: unsigned char I2C_Write_Char(unsigned char Data);i2c_master.c: 81: un
      +                          signed char I2C_Write_Char(unsigned char Data);i2c_master.c: 82: {;i2c_master.c: 82: {;i
      +                          2c_master.c: 84:   I2C_Wait();;i2c_master.c: 84:   I2C_Wait();
  5226  0BA9  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5227  0BAE                     l1875:
  5228                           
  5229                           ;i2c_master.c: 85:   SSPBUF = Data;;i2c_master.c: 85:   SSPBUF = Data;
  5230  0BAE  0870               	movf	I2C_Write_Char@Data,w
  5231  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  5232  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  5233  0BB1  0093               	movwf	19	;volatile
  5234  0BB2                     l1877:
  5235                           
  5236                           ;i2c_master.c: 86:   I2C_Wait();;i2c_master.c: 86:   I2C_Wait();
  5237  0BB2  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5238  0BB7                     l1879:
  5239  0BB7                     l216:	
  5240                           ;i2c_master.c: 87:   return ACKSTAT;;i2c_master.c: 87:   return ACKSTAT;;	Return value o
      +                          f _I2C_Write_Char is never used
  5241                           
  5242  0BB7  0008               	return
  5243  0BB8                     __end_of_I2C_Write_Char:
  5244                           
  5245                           	psect	text23
  5246  0B7A                     __ptext23:	
  5247 ;; *************** function _I2C_Stop *****************
  5248 ;; Defined at:
  5249 ;;		line 49 in file "i2c_master.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0, pclath, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5263 ;;      Params:         0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 1
  5270 ;; This function calls:
  5271 ;;		_I2C_Wait
  5272 ;; This function is called by:
  5273 ;;		_RTC_Set
  5274 ;;		_RTC_Get
  5275 ;;		_RTC_Read_Reg
  5276 ;;		_RTC_Write_Reg
  5277 ;;		_SQWE_Set
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function _I2C_Stop
  5283  0B7A                     _I2C_Stop:
  5284  0B7A                     l1869:	
  5285                           ;incstack = 0
  5286                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  5287                           
  5288                           
  5289                           ;i2c_master.c: 52:  I2C_Wait();;i2c_master.c: 52:  I2C_Wait();
  5290  0B7A  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5291  0B7F                     l1871:
  5292                           
  5293                           ;i2c_master.c: 53:  PEN = 1;;i2c_master.c: 53:  PEN = 1;
  5294  0B7F  1683               	bsf	3,5	;RP0=1, select bank1
  5295  0B80  1303               	bcf	3,6	;RP1=0, select bank1
  5296  0B81  1511               	bsf	17,2	;volatile
  5297  0B82                     l207:
  5298  0B82  0008               	return
  5299  0B83                     __end_of_I2C_Stop:
  5300                           
  5301                           	psect	text24
  5302  0B71                     __ptext24:	
  5303 ;; *************** function _I2C_Start *****************
  5304 ;; Defined at:
  5305 ;;		line 31 in file "i2c_master.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5319 ;;      Params:         0       0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0
  5322 ;;      Totals:         0       0       0       0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used: 1
  5325 ;; Hardware stack levels required when called: 1
  5326 ;; This function calls:
  5327 ;;		_I2C_Wait
  5328 ;; This function is called by:
  5329 ;;		_RTC_Set
  5330 ;;		_RTC_Get
  5331 ;;		_RTC_Read_Reg
  5332 ;;		_RTC_Write_Reg
  5333 ;;		_SQWE_Set
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function _I2C_Start
  5339  0B71                     _I2C_Start:
  5340  0B71                     l1861:	
  5341                           ;incstack = 0
  5342                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  5343                           
  5344                           
  5345                           ;i2c_master.c: 34:  I2C_Wait();;i2c_master.c: 34:  I2C_Wait();
  5346  0B71  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5347  0B76                     l1863:
  5348                           
  5349                           ;i2c_master.c: 35:  SEN = 1;;i2c_master.c: 35:  SEN = 1;
  5350  0B76  1683               	bsf	3,5	;RP0=1, select bank1
  5351  0B77  1303               	bcf	3,6	;RP1=0, select bank1
  5352  0B78  1411               	bsf	17,0	;volatile
  5353  0B79                     l201:
  5354  0B79  0008               	return
  5355  0B7A                     __end_of_I2C_Start:
  5356                           
  5357                           	psect	text25
  5358  0B68                     __ptext25:	
  5359 ;; *************** function _I2C_Restart *****************
  5360 ;; Defined at:
  5361 ;;		line 40 in file "i2c_master.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0
  5378 ;;      Totals:         0       0       0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 1
  5382 ;; This function calls:
  5383 ;;		_I2C_Wait
  5384 ;; This function is called by:
  5385 ;;		_RTC_Get
  5386 ;;		_RTC_Read_Reg
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _I2C_Restart
  5392  0B68                     _I2C_Restart:
  5393  0B68                     l1865:	
  5394                           ;incstack = 0
  5395                           ; Regs used in _I2C_Restart: [wreg+status,2+status,0+pclath+cstack]
  5396                           
  5397                           
  5398                           ;i2c_master.c: 43:  I2C_Wait();;i2c_master.c: 43:  I2C_Wait();
  5399  0B68  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5400  0B6D                     l1867:
  5401                           
  5402                           ;i2c_master.c: 44:  RSEN = 1;;i2c_master.c: 44:  RSEN = 1;
  5403  0B6D  1683               	bsf	3,5	;RP0=1, select bank1
  5404  0B6E  1303               	bcf	3,6	;RP1=0, select bank1
  5405  0B6F  1491               	bsf	17,1	;volatile
  5406  0B70                     l204:
  5407  0B70  0008               	return
  5408  0B71                     __end_of_I2C_Restart:
  5409                           
  5410                           	psect	text26
  5411  0CB4                     __ptext26:	
  5412 ;; *************** function _I2C_Read_Char *****************
  5413 ;; Defined at:
  5414 ;;		line 92 in file "i2c_master.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  ACK             1    wreg     unsigned char 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  ACK             1    1[COMMON] unsigned char 
  5419 ;;  _data           1    2[COMMON] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      unsigned char 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0, pclath, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5429 ;;      Params:         0       0       0       0       0
  5430 ;;      Locals:         2       0       0       0       0
  5431 ;;      Temps:          1       0       0       0       0
  5432 ;;      Totals:         3       0       0       0       0
  5433 ;;Total ram usage:        3 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 2
  5436 ;; This function calls:
  5437 ;;		_I2C_ACK
  5438 ;;		_I2C_NACK
  5439 ;;		_I2C_Wait
  5440 ;; This function is called by:
  5441 ;;		_RTC_Get
  5442 ;;		_RTC_Read_Reg
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           
  5447                           ;psect for function _I2C_Read_Char
  5448  0CB4                     _I2C_Read_Char:
  5449                           
  5450                           ;incstack = 0
  5451                           ; Regs used in _I2C_Read_Char: [wreg+status,2+status,0+pclath+cstack]
  5452                           ;I2C_Read_Char@ACK stored from wreg
  5453  0CB4  00F1               	movwf	I2C_Read_Char@ACK
  5454  0CB5                     l1883:
  5455                           
  5456                           ;i2c_master.c: 92: unsigned char I2C_Read_Char(char ACK);i2c_master.c: 92: unsigned char
      +                           I2C_Read_Char(char ACK);i2c_master.c: 93: {;i2c_master.c: 93: {;i2c_master.c: 95:     u
      +                          int8_t _data;;i2c_master.c: 95:     uint8_t _data;;i2c_master.c: 96:     I2C_Wait();;i2c
      +                          _master.c: 96:     I2C_Wait();
  5457  0CB5  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5458  0CBA                     l1885:
  5459                           
  5460                           ;i2c_master.c: 97:     RCEN = 1;;i2c_master.c: 97:     RCEN = 1;
  5461  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0CBB  1303               	bcf	3,6	;RP1=0, select bank1
  5463  0CBC  1591               	bsf	17,3	;volatile
  5464                           
  5465                           ;i2c_master.c: 98:     I2C_Wait();;i2c_master.c: 98:     I2C_Wait();
  5466  0CBD  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5467  0CC2                     l1887:
  5468                           
  5469                           ;i2c_master.c: 99:     _data = SSPBUF;;i2c_master.c: 99:     _data = SSPBUF;
  5470  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  5471  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  5472  0CC4  0813               	movf	19,w	;volatile
  5473  0CC5  00F0               	movwf	??_I2C_Read_Char
  5474  0CC6  0870               	movf	??_I2C_Read_Char,w
  5475  0CC7  00F2               	movwf	I2C_Read_Char@_data
  5476  0CC8                     l1889:
  5477                           
  5478                           ;i2c_master.c: 100:     I2C_Wait();;i2c_master.c: 100:     I2C_Wait();
  5479  0CC8  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5480  0CCD                     l1891:
  5481                           
  5482                           ;i2c_master.c: 101:     if(ACK==0);i2c_master.c: 101:     if(ACK==0)
  5483  0CCD  0871               	movf	I2C_Read_Char@ACK,w
  5484  0CCE  1D03               	btfss	3,2
  5485  0CCF  2CD1               	goto	u1271
  5486  0CD0  2CD2               	goto	u1270
  5487  0CD1                     u1271:
  5488  0CD1  2CD8               	goto	l1895
  5489  0CD2                     u1270:
  5490  0CD2                     l1893:
  5491                           
  5492                           ;i2c_master.c: 102:        I2C_ACK();;i2c_master.c: 102:        I2C_ACK();
  5493  0CD2  120A  158A  2383  120A  158A  	fcall	_I2C_ACK
  5494  0CD7  2CDD               	goto	l1897
  5495  0CD8                     l1895:
  5496                           
  5497                           ;i2c_master.c: 104:        I2C_NACK();;i2c_master.c: 104:        I2C_NACK();
  5498  0CD8  120A  158A  238F  120A  158A  	fcall	_I2C_NACK
  5499  0CDD                     l1897:
  5500                           
  5501                           ;i2c_master.c: 106:     return _data;;i2c_master.c: 106:     return _data;
  5502  0CDD  0872               	movf	I2C_Read_Char@_data,w
  5503  0CDE                     l221:
  5504  0CDE  0008               	return
  5505  0CDF                     __end_of_I2C_Read_Char:
  5506                           
  5507                           	psect	text27
  5508  0B8F                     __ptext27:	
  5509 ;; *************** function _I2C_NACK *****************
  5510 ;; Defined at:
  5511 ;;		line 71 in file "i2c_master.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, pclath, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 1
  5532 ;; This function calls:
  5533 ;;		_I2C_Wait
  5534 ;; This function is called by:
  5535 ;;		_I2C_Read_Char
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _I2C_NACK
  5541  0B8F                     _I2C_NACK:
  5542  0B8F                     l1821:	
  5543                           ;incstack = 0
  5544                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  5545                           
  5546                           
  5547                           ;i2c_master.c: 74:  ACKDT = 1;;i2c_master.c: 74:  ACKDT = 1;
  5548  0B8F  1683               	bsf	3,5	;RP0=1, select bank1
  5549  0B90  1303               	bcf	3,6	;RP1=0, select bank1
  5550  0B91  1691               	bsf	17,5	;volatile
  5551  0B92                     l1823:
  5552                           
  5553                           ;i2c_master.c: 75:  I2C_Wait();;i2c_master.c: 75:  I2C_Wait();
  5554  0B92  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5555  0B97                     l1825:
  5556                           
  5557                           ;i2c_master.c: 76:  ACKEN = 1;;i2c_master.c: 76:  ACKEN = 1;
  5558  0B97  1683               	bsf	3,5	;RP0=1, select bank1
  5559  0B98  1303               	bcf	3,6	;RP1=0, select bank1
  5560  0B99  1611               	bsf	17,4	;volatile
  5561  0B9A                     l213:
  5562  0B9A  0008               	return
  5563  0B9B                     __end_of_I2C_NACK:
  5564                           
  5565                           	psect	text28
  5566  0B83                     __ptext28:	
  5567 ;; *************** function _I2C_ACK *****************
  5568 ;; Defined at:
  5569 ;;		line 58 in file "i2c_master.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, pclath, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 1
  5590 ;; This function calls:
  5591 ;;		_I2C_Wait
  5592 ;; This function is called by:
  5593 ;;		_I2C_Read_Char
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function _I2C_ACK
  5599  0B83                     _I2C_ACK:
  5600  0B83                     l1815:	
  5601                           ;incstack = 0
  5602                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  5603                           
  5604                           
  5605                           ;i2c_master.c: 63:  ACKDT = 0;;i2c_master.c: 63:  ACKDT = 0;
  5606  0B83  1683               	bsf	3,5	;RP0=1, select bank1
  5607  0B84  1303               	bcf	3,6	;RP1=0, select bank1
  5608  0B85  1291               	bcf	17,5	;volatile
  5609  0B86                     l1817:
  5610                           
  5611                           ;i2c_master.c: 64:  I2C_Wait();;i2c_master.c: 64:  I2C_Wait();
  5612  0B86  120A  158A  239B  120A  158A  	fcall	_I2C_Wait
  5613  0B8B                     l1819:
  5614                           
  5615                           ;i2c_master.c: 65:  ACKEN = 1;;i2c_master.c: 65:  ACKEN = 1;
  5616  0B8B  1683               	bsf	3,5	;RP0=1, select bank1
  5617  0B8C  1303               	bcf	3,6	;RP1=0, select bank1
  5618  0B8D  1611               	bsf	17,4	;volatile
  5619  0B8E                     l210:
  5620  0B8E  0008               	return
  5621  0B8F                     __end_of_I2C_ACK:
  5622                           
  5623                           	psect	text29
  5624  0B9B                     __ptext29:	
  5625 ;; *************** function _I2C_Wait *****************
  5626 ;; Defined at:
  5627 ;;		line 23 in file "i2c_master.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5641 ;;      Params:         0       0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0
  5644 ;;      Totals:         0       0       0       0       0
  5645 ;;Total ram usage:        0 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_I2C_Start
  5651 ;;		_I2C_Restart
  5652 ;;		_I2C_Stop
  5653 ;;		_I2C_ACK
  5654 ;;		_I2C_NACK
  5655 ;;		_I2C_Write_Char
  5656 ;;		_I2C_Read_Char
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           
  5661                           ;psect for function _I2C_Wait
  5662  0B9B                     _I2C_Wait:
  5663  0B9B                     l1801:	
  5664                           ;incstack = 0
  5665                           ; Regs used in _I2C_Wait: [wreg+status,2]
  5666                           
  5667  0B9B                     l195:	
  5668                           ;i2c_master.c: 25:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));;i2c_master.c: 25:   w
      +                          hile ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5669                           
  5670  0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  5671  0B9C  1303               	bcf	3,6	;RP1=0, select bank1
  5672  0B9D  1914               	btfsc	20,2	;volatile
  5673  0B9E  2BA0               	goto	u1201
  5674  0B9F  2BA1               	goto	u1200
  5675  0BA0                     u1201:
  5676  0BA0  2B9B               	goto	l195
  5677  0BA1                     u1200:
  5678  0BA1                     l1803:
  5679  0BA1  0811               	movf	17,w	;volatile
  5680  0BA2  391F               	andlw	31
  5681  0BA3  1D03               	btfss	3,2
  5682  0BA4  2BA6               	goto	u1211
  5683  0BA5  2BA7               	goto	u1210
  5684  0BA6                     u1211:
  5685  0BA6  2B9B               	goto	l195
  5686  0BA7                     u1210:
  5687  0BA7                     l198:
  5688  0BA7  0008               	return
  5689  0BA8                     __end_of_I2C_Wait:
  5690                           
  5691                           	psect	text30
  5692  0F32                     __ptext30:	
  5693 ;; *************** function _LCD_Init *****************
  5694 ;; Defined at:
  5695 ;;		line 91 in file "lcd.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0
  5711 ;;      Temps:          2       0       0       0       0
  5712 ;;      Totals:         2       0       0       0       0
  5713 ;;Total ram usage:        2 bytes
  5714 ;; Hardware stack levels used: 1
  5715 ;; Hardware stack levels required when called: 2
  5716 ;; This function calls:
  5717 ;;		_LCD_CMD
  5718 ;;		_LCD_DATA
  5719 ;; This function is called by:
  5720 ;;		_main
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _LCD_Init
  5726  0F32                     _LCD_Init:
  5727  0F32                     l2435:	
  5728                           ;incstack = 0
  5729                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5730                           
  5731                           
  5732                           ;lcd.c: 98:   TRISD = 0x00;
  5733  0F32  1683               	bsf	3,5	;RP0=1, select bank1
  5734  0F33  1303               	bcf	3,6	;RP1=0, select bank1
  5735  0F34  0188               	clrf	8	;volatile
  5736  0F35                     l2437:
  5737                           
  5738                           ;lcd.c: 99:   TRISD2 = 0;
  5739  0F35  1108               	bcf	8,2	;volatile
  5740  0F36                     l2439:
  5741                           
  5742                           ;lcd.c: 100:   TRISD3 = 0;
  5743  0F36  1188               	bcf	8,3	;volatile
  5744  0F37                     l2441:
  5745                           
  5746                           ;lcd.c: 102:   LCD_DATA(0x00);
  5747  0F37  3000               	movlw	0
  5748  0F38  120A  158A  2444  120A  158A  	fcall	_LCD_DATA
  5749  0F3D                     l2443:
  5750                           
  5751                           ;lcd.c: 103:   _delay((unsigned long)((30)*(20000000/4000.0)));
  5752  0F3D  30C3               	movlw	195
  5753  0F3E  00F5               	movwf	??_LCD_Init+1
  5754  0F3F  30CD               	movlw	205
  5755  0F40  00F4               	movwf	??_LCD_Init
  5756  0F41                     u2497:
  5757  0F41  0BF4               	decfsz	??_LCD_Init,f
  5758  0F42  2F41               	goto	u2497
  5759  0F43  0BF5               	decfsz	??_LCD_Init+1,f
  5760  0F44  2F41               	goto	u2497
  5761  0F45                     l2445:
  5762                           
  5763                           ;lcd.c: 104:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  5764  0F45  3004               	movlw	4
  5765  0F46  00F5               	movwf	??_LCD_Init+1
  5766  0F47  303D               	movlw	61
  5767  0F48  00F4               	movwf	??_LCD_Init
  5768  0F49                     u2507:
  5769  0F49  0BF4               	decfsz	??_LCD_Init,f
  5770  0F4A  2F49               	goto	u2507
  5771  0F4B  0BF5               	decfsz	??_LCD_Init+1,f
  5772  0F4C  2F49               	goto	u2507
  5773  0F4D  2F4E               	nop2
  5774  0F4E                     l2447:
  5775                           
  5776                           ;lcd.c: 105:   LCD_CMD(0x03);
  5777  0F4E  3003               	movlw	3
  5778  0F4F  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5779  0F54                     l2449:
  5780                           
  5781                           ;lcd.c: 106:   _delay((unsigned long)((5)*(20000000/4000.0)));
  5782  0F54  3021               	movlw	33
  5783  0F55  00F5               	movwf	??_LCD_Init+1
  5784  0F56  3076               	movlw	118
  5785  0F57  00F4               	movwf	??_LCD_Init
  5786  0F58                     u2517:
  5787  0F58  0BF4               	decfsz	??_LCD_Init,f
  5788  0F59  2F58               	goto	u2517
  5789  0F5A  0BF5               	decfsz	??_LCD_Init+1,f
  5790  0F5B  2F58               	goto	u2517
  5791  0F5C  0000               	nop
  5792  0F5D                     l2451:
  5793                           
  5794                           ;lcd.c: 107:   LCD_CMD(0x03);
  5795  0F5D  3003               	movlw	3
  5796  0F5E  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5797  0F63                     l2453:
  5798                           
  5799                           ;lcd.c: 108:   _delay((unsigned long)((150)*(20000000/4000000.0)));
  5800  0F63  30F9               	movlw	249
  5801  0F64  00F4               	movwf	??_LCD_Init
  5802  0F65                     u2527:
  5803  0F65  0BF4               	decfsz	??_LCD_Init,f
  5804  0F66  2F65               	goto	u2527
  5805  0F67  2F68               	nop2
  5806  0F68                     l2455:
  5807                           
  5808                           ;lcd.c: 109:   LCD_CMD(0x03);
  5809  0F68  3003               	movlw	3
  5810  0F69  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5811  0F6E                     l2457:
  5812                           
  5813                           ;lcd.c: 110:   LCD_CMD(0x02);
  5814  0F6E  3002               	movlw	2
  5815  0F6F  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5816  0F74                     l2459:
  5817                           
  5818                           ;lcd.c: 111:   LCD_CMD(0x02);
  5819  0F74  3002               	movlw	2
  5820  0F75  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5821  0F7A                     l2461:
  5822                           
  5823                           ;lcd.c: 112:   LCD_CMD(0x08);
  5824  0F7A  3008               	movlw	8
  5825  0F7B  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5826  0F80                     l2463:
  5827                           
  5828                           ;lcd.c: 113:   LCD_CMD(0x00);
  5829  0F80  3000               	movlw	0
  5830  0F81  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5831  0F86                     l2465:
  5832                           
  5833                           ;lcd.c: 114:   LCD_CMD(0x0C);
  5834  0F86  300C               	movlw	12
  5835  0F87  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5836  0F8C                     l2467:
  5837                           
  5838                           ;lcd.c: 115:   LCD_CMD(0x00);
  5839  0F8C  3000               	movlw	0
  5840  0F8D  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5841  0F92                     l2469:
  5842                           
  5843                           ;lcd.c: 116:   LCD_CMD(0x06);
  5844  0F92  3006               	movlw	6
  5845  0F93  120A  158A  240A  120A  158A  	fcall	_LCD_CMD
  5846  0F98                     l135:
  5847  0F98  0008               	return
  5848  0F99                     __end_of_LCD_Init:
  5849                           
  5850                           	psect	text31
  5851  0C0A                     __ptext31:	
  5852 ;; *************** function _LCD_CMD *****************
  5853 ;; Defined at:
  5854 ;;		line 28 in file "lcd.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  CMD             1    wreg     unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  CMD             1    3[COMMON] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0, pclath, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         0       0       0       0       0
  5869 ;;      Locals:         1       0       0       0       0
  5870 ;;      Temps:          2       0       0       0       0
  5871 ;;      Totals:         3       0       0       0       0
  5872 ;;Total ram usage:        3 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 1
  5875 ;; This function calls:
  5876 ;;		_LCD_DATA
  5877 ;; This function is called by:
  5878 ;;		_LCD_Set_Cursor
  5879 ;;		_LCD_Init
  5880 ;;		_LCD_Clear
  5881 ;;		_LCD_SL
  5882 ;;		_LCD_SR
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _LCD_CMD
  5888  0C0A                     _LCD_CMD:
  5889                           
  5890                           ;incstack = 0
  5891                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  5892                           ;LCD_CMD@CMD stored from wreg
  5893  0C0A  00F3               	movwf	LCD_CMD@CMD
  5894  0C0B                     l1851:
  5895                           
  5896                           ;lcd.c: 28: void LCD_CMD(unsigned char CMD);lcd.c: 29: {;lcd.c: 33:   RD2 = 0;
  5897  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  5898  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  5899  0C0D  1108               	bcf	8,2	;volatile
  5900  0C0E                     l1853:
  5901                           
  5902                           ;lcd.c: 34:   LCD_DATA(CMD);
  5903  0C0E  0873               	movf	LCD_CMD@CMD,w
  5904  0C0F  120A  158A  2444  120A  158A  	fcall	_LCD_DATA
  5905  0C14                     l1855:
  5906                           
  5907                           ;lcd.c: 35:   RD3 = 1;
  5908  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  5909  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  5910  0C16  1588               	bsf	8,3	;volatile
  5911  0C17                     l1857:
  5912                           
  5913                           ;lcd.c: 36:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  5914  0C17  3004               	movlw	4
  5915  0C18  00F2               	movwf	??_LCD_CMD+1
  5916  0C19  303D               	movlw	61
  5917  0C1A  00F1               	movwf	??_LCD_CMD
  5918  0C1B                     u2537:
  5919  0C1B  0BF1               	decfsz	??_LCD_CMD,f
  5920  0C1C  2C1B               	goto	u2537
  5921  0C1D  0BF2               	decfsz	??_LCD_CMD+1,f
  5922  0C1E  2C1B               	goto	u2537
  5923  0C1F  2C20               	nop2
  5924  0C20                     l1859:
  5925                           
  5926                           ;lcd.c: 37:   RD3 = 0;
  5927  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  5928  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  5929  0C22  1188               	bcf	8,3	;volatile
  5930  0C23                     l119:
  5931  0C23  0008               	return
  5932  0C24                     __end_of_LCD_CMD:
  5933                           
  5934                           	psect	text32
  5935  0C44                     __ptext32:	
  5936 ;; *************** function _LCD_DATA *****************
  5937 ;; Defined at:
  5938 ;;		line 4 in file "lcd.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  Data            1    wreg     unsigned char 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  Data            1    0[COMMON] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5952 ;;      Params:         0       0       0       0       0
  5953 ;;      Locals:         1       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0
  5955 ;;      Totals:         1       0       0       0       0
  5956 ;;Total ram usage:        1 bytes
  5957 ;; Hardware stack levels used: 1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_LCD_CMD
  5962 ;;		_LCD_Init
  5963 ;;		_LCD_Write_Char
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           
  5968                           ;psect for function _LCD_DATA
  5969  0C44                     _LCD_DATA:
  5970                           
  5971                           ;incstack = 0
  5972                           ; Regs used in _LCD_DATA: [wreg]
  5973                           ;LCD_DATA@Data stored from wreg
  5974  0C44  00F0               	movwf	LCD_DATA@Data
  5975  0C45                     l1805:
  5976                           
  5977                           ;lcd.c: 4: void LCD_DATA(unsigned char Data);lcd.c: 5: {;lcd.c: 9:   if(Data & 1)
  5978  0C45  1C70               	btfss	LCD_DATA@Data,0
  5979  0C46  2C48               	goto	u1221
  5980  0C47  2C49               	goto	u1220
  5981  0C48                     u1221:
  5982  0C48  2C4D               	goto	l108
  5983  0C49                     u1220:
  5984  0C49                     l1807:
  5985                           
  5986                           ;lcd.c: 10:     RD4 = 1;
  5987  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  5988  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  5989  0C4B  1608               	bsf	8,4	;volatile
  5990  0C4C  2C50               	goto	l109
  5991  0C4D                     l108:	
  5992                           ;lcd.c: 11:   else
  5993                           
  5994                           
  5995                           ;lcd.c: 12:     RD4 = 0;
  5996  0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  5997  0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  5998  0C4F  1208               	bcf	8,4	;volatile
  5999  0C50                     l109:
  6000                           
  6001                           ;lcd.c: 13:   if(Data & 2)
  6002  0C50  1CF0               	btfss	LCD_DATA@Data,1
  6003  0C51  2C53               	goto	u1231
  6004  0C52  2C54               	goto	u1230
  6005  0C53                     u1231:
  6006  0C53  2C56               	goto	l110
  6007  0C54                     u1230:
  6008  0C54                     l1809:
  6009                           
  6010                           ;lcd.c: 14:     RD5 = 1;
  6011  0C54  1688               	bsf	8,5	;volatile
  6012  0C55  2C57               	goto	l111
  6013  0C56                     l110:	
  6014                           ;lcd.c: 15:   else
  6015                           
  6016                           
  6017                           ;lcd.c: 16:     RD5 = 0;
  6018  0C56  1288               	bcf	8,5	;volatile
  6019  0C57                     l111:
  6020                           
  6021                           ;lcd.c: 17:   if(Data & 4)
  6022  0C57  1D70               	btfss	LCD_DATA@Data,2
  6023  0C58  2C5A               	goto	u1241
  6024  0C59  2C5B               	goto	u1240
  6025  0C5A                     u1241:
  6026  0C5A  2C5D               	goto	l112
  6027  0C5B                     u1240:
  6028  0C5B                     l1811:
  6029                           
  6030                           ;lcd.c: 18:     RD6 = 1;
  6031  0C5B  1708               	bsf	8,6	;volatile
  6032  0C5C  2C5E               	goto	l113
  6033  0C5D                     l112:	
  6034                           ;lcd.c: 19:   else
  6035                           
  6036                           
  6037                           ;lcd.c: 20:     RD6 = 0;
  6038  0C5D  1308               	bcf	8,6	;volatile
  6039  0C5E                     l113:
  6040                           
  6041                           ;lcd.c: 21:   if(Data & 8)
  6042  0C5E  1DF0               	btfss	LCD_DATA@Data,3
  6043  0C5F  2C61               	goto	u1251
  6044  0C60  2C62               	goto	u1250
  6045  0C61                     u1251:
  6046  0C61  2C64               	goto	l114
  6047  0C62                     u1250:
  6048  0C62                     l1813:
  6049                           
  6050                           ;lcd.c: 22:     RD7 = 1;
  6051  0C62  1788               	bsf	8,7	;volatile
  6052  0C63  2C65               	goto	l116
  6053  0C64                     l114:	
  6054                           ;lcd.c: 23:   else
  6055                           
  6056                           
  6057                           ;lcd.c: 24:     RD7 = 0;
  6058  0C64  1388               	bcf	8,7	;volatile
  6059  0C65                     l116:
  6060  0C65  0008               	return
  6061  0C66                     __end_of_LCD_DATA:
  6062                           
  6063                           	psect	text33
  6064  0D69                     __ptext33:	
  6065 ;; *************** function _I2C_Master_Init *****************
  6066 ;; Defined at:
  6067 ;;		line 3 in file "i2c_master.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  I2C_BaudRate    4    0[BANK0 ] const unsigned long 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, pclath, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6081 ;;      Params:         0       4       0       0       0
  6082 ;;      Locals:         0       0       0       0       0
  6083 ;;      Temps:          0       4       0       0       0
  6084 ;;      Totals:         0       8       0       0       0
  6085 ;;Total ram usage:        8 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 1
  6088 ;; This function calls:
  6089 ;;		___lldiv
  6090 ;; This function is called by:
  6091 ;;		_main
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function _I2C_Master_Init
  6097  0D69                     _I2C_Master_Init:
  6098  0D69                     l2423:	
  6099                           ;incstack = 0
  6100                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6101                           
  6102                           
  6103                           ;i2c_master.c: 3: void I2C_Master_Init(const unsigned long I2C_BaudRate);i2c_master.c: 3
      +                          : void I2C_Master_Init(const unsigned long I2C_BaudRate);i2c_master.c: 4: {;i2c_master.c
      +                          : 4: {;i2c_master.c: 8:  SSPCON = 0x28;;i2c_master.c: 8:  SSPCON = 0x28;
  6104  0D69  3028               	movlw	40
  6105  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  6106  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  6107  0D6C  0094               	movwf	20	;volatile
  6108  0D6D                     l2425:
  6109                           
  6110                           ;i2c_master.c: 9:  SSPCON2 = 0x00;;i2c_master.c: 9:  SSPCON2 = 0x00;
  6111  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  6112  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  6113  0D6F  0191               	clrf	17	;volatile
  6114  0D70                     l2427:
  6115                           
  6116                           ;i2c_master.c: 11:  SSPSTAT = 0x80;;i2c_master.c: 11:  SSPSTAT = 0x80;
  6117  0D70  3080               	movlw	128
  6118  0D71  0094               	movwf	20	;volatile
  6119  0D72                     l2429:
  6120                           
  6121                           ;i2c_master.c: 12:  SSPADD = (unsigned char)( 20000000/(4*I2C_BaudRate) ) - 1;;i2c_maste
      +                          r.c: 12:  SSPADD = (unsigned char)( 20000000/(4*I2C_BaudRate) ) - 1;
  6122  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  6124  0D74  0820               	movf	I2C_Master_Init@I2C_BaudRate,w
  6125  0D75  00A4               	movwf	??_I2C_Master_Init
  6126  0D76  0821               	movf	I2C_Master_Init@I2C_BaudRate+1,w
  6127  0D77  00A5               	movwf	??_I2C_Master_Init+1
  6128  0D78  0822               	movf	I2C_Master_Init@I2C_BaudRate+2,w
  6129  0D79  00A6               	movwf	??_I2C_Master_Init+2
  6130  0D7A  0823               	movf	I2C_Master_Init@I2C_BaudRate+3,w
  6131  0D7B  00A7               	movwf	??_I2C_Master_Init+3
  6132  0D7C  3002               	movlw	2
  6133  0D7D                     u2305:
  6134  0D7D  1003               	clrc
  6135  0D7E  0DA4               	rlf	??_I2C_Master_Init,f
  6136  0D7F  0DA5               	rlf	??_I2C_Master_Init+1,f
  6137  0D80  0DA6               	rlf	??_I2C_Master_Init+2,f
  6138  0D81  0DA7               	rlf	??_I2C_Master_Init+3,f
  6139  0D82                     u2300:
  6140  0D82  3EFF               	addlw	-1
  6141  0D83  1D03               	skipz
  6142  0D84  2D7D               	goto	u2305
  6143  0D85  0827               	movf	??_I2C_Master_Init+3,w
  6144  0D86  00F3               	movwf	___lldiv@divisor+3
  6145  0D87  0826               	movf	??_I2C_Master_Init+2,w
  6146  0D88  00F2               	movwf	___lldiv@divisor+2
  6147  0D89  0825               	movf	??_I2C_Master_Init+1,w
  6148  0D8A  00F1               	movwf	___lldiv@divisor+1
  6149  0D8B  0824               	movf	??_I2C_Master_Init,w
  6150  0D8C  00F0               	movwf	___lldiv@divisor
  6151  0D8D  3001               	movlw	1
  6152  0D8E  00F7               	movwf	___lldiv@dividend+3
  6153  0D8F  3031               	movlw	49
  6154  0D90  00F6               	movwf	___lldiv@dividend+2
  6155  0D91  302D               	movlw	45
  6156  0D92  00F5               	movwf	___lldiv@dividend+1
  6157  0D93  3000               	movlw	0
  6158  0D94  00F4               	movwf	___lldiv@dividend
  6159  0D95  120A  158A  26CC  120A  158A  	fcall	___lldiv
  6160  0D9A  0870               	movf	?___lldiv,w
  6161  0D9B  3EFF               	addlw	255
  6162  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  6163  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  6164  0D9E  0093               	movwf	19	;volatile
  6165  0D9F                     l2431:
  6166                           
  6167                           ;i2c_master.c: 13:  TRISC3 = 1;;i2c_master.c: 13:  TRISC3 = 1;
  6168  0D9F  1587               	bsf	7,3	;volatile
  6169  0DA0                     l2433:
  6170                           
  6171                           ;i2c_master.c: 14:  TRISC4 = 1;;i2c_master.c: 14:  TRISC4 = 1;
  6172  0DA0  1607               	bsf	7,4	;volatile
  6173  0DA1                     l192:
  6174  0DA1  0008               	return
  6175  0DA2                     __end_of_I2C_Master_Init:
  6176                           
  6177                           	psect	text34
  6178  0ECC                     __ptext34:	
  6179 ;; *************** function ___lldiv *****************
  6180 ;; Defined at:
  6181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  divisor         4    0[COMMON] unsigned long 
  6184 ;;  dividend        4    4[COMMON] unsigned long 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  quotient        4    9[COMMON] unsigned long 
  6187 ;;  counter         1   13[COMMON] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  4    0[COMMON] unsigned long 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6197 ;;      Params:         8       0       0       0       0
  6198 ;;      Locals:         5       0       0       0       0
  6199 ;;      Temps:          1       0       0       0       0
  6200 ;;      Totals:        14       0       0       0       0
  6201 ;;Total ram usage:       14 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_I2C_Master_Init
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function ___lldiv
  6212  0ECC                     ___lldiv:
  6213  0ECC                     l2311:	
  6214                           ;incstack = 0
  6215                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6216                           
  6217  0ECC  3000               	movlw	0
  6218  0ECD  00FC               	movwf	___lldiv@quotient+3
  6219  0ECE  3000               	movlw	0
  6220  0ECF  00FB               	movwf	___lldiv@quotient+2
  6221  0ED0  3000               	movlw	0
  6222  0ED1  00FA               	movwf	___lldiv@quotient+1
  6223  0ED2  3000               	movlw	0
  6224  0ED3  00F9               	movwf	___lldiv@quotient
  6225  0ED4  0873               	movf	___lldiv@divisor+3,w
  6226  0ED5  0472               	iorwf	___lldiv@divisor+2,w
  6227  0ED6  0471               	iorwf	___lldiv@divisor+1,w
  6228  0ED7  0470               	iorwf	___lldiv@divisor,w
  6229  0ED8  1903               	skipnz
  6230  0ED9  2EDB               	goto	u2071
  6231  0EDA  2EDC               	goto	u2070
  6232  0EDB                     u2071:
  6233  0EDB  2F29               	goto	l2331
  6234  0EDC                     u2070:
  6235  0EDC                     l2313:
  6236  0EDC  01FD               	clrf	___lldiv@counter
  6237  0EDD  0AFD               	incf	___lldiv@counter,f
  6238  0EDE  2EEC               	goto	l2317
  6239  0EDF                     l2315:
  6240  0EDF  3001               	movlw	1
  6241  0EE0  00F8               	movwf	??___lldiv
  6242  0EE1                     u2085:
  6243  0EE1  1003               	clrc
  6244  0EE2  0DF0               	rlf	___lldiv@divisor,f
  6245  0EE3  0DF1               	rlf	___lldiv@divisor+1,f
  6246  0EE4  0DF2               	rlf	___lldiv@divisor+2,f
  6247  0EE5  0DF3               	rlf	___lldiv@divisor+3,f
  6248  0EE6  0BF8               	decfsz	??___lldiv,f
  6249  0EE7  2EE1               	goto	u2085
  6250  0EE8  3001               	movlw	1
  6251  0EE9  00F8               	movwf	??___lldiv
  6252  0EEA  0878               	movf	??___lldiv,w
  6253  0EEB  07FD               	addwf	___lldiv@counter,f
  6254  0EEC                     l2317:
  6255  0EEC  1FF3               	btfss	___lldiv@divisor+3,7
  6256  0EED  2EEF               	goto	u2091
  6257  0EEE  2EF0               	goto	u2090
  6258  0EEF                     u2091:
  6259  0EEF  2EDF               	goto	l2315
  6260  0EF0                     u2090:
  6261  0EF0                     l2319:
  6262  0EF0  3001               	movlw	1
  6263  0EF1  00F8               	movwf	??___lldiv
  6264  0EF2                     u2105:
  6265  0EF2  1003               	clrc
  6266  0EF3  0DF9               	rlf	___lldiv@quotient,f
  6267  0EF4  0DFA               	rlf	___lldiv@quotient+1,f
  6268  0EF5  0DFB               	rlf	___lldiv@quotient+2,f
  6269  0EF6  0DFC               	rlf	___lldiv@quotient+3,f
  6270  0EF7  0BF8               	decfsz	??___lldiv,f
  6271  0EF8  2EF2               	goto	u2105
  6272  0EF9                     l2321:
  6273  0EF9  0873               	movf	___lldiv@divisor+3,w
  6274  0EFA  0277               	subwf	___lldiv@dividend+3,w
  6275  0EFB  1D03               	skipz
  6276  0EFC  2F07               	goto	u2115
  6277  0EFD  0872               	movf	___lldiv@divisor+2,w
  6278  0EFE  0276               	subwf	___lldiv@dividend+2,w
  6279  0EFF  1D03               	skipz
  6280  0F00  2F07               	goto	u2115
  6281  0F01  0871               	movf	___lldiv@divisor+1,w
  6282  0F02  0275               	subwf	___lldiv@dividend+1,w
  6283  0F03  1D03               	skipz
  6284  0F04  2F07               	goto	u2115
  6285  0F05  0870               	movf	___lldiv@divisor,w
  6286  0F06  0274               	subwf	___lldiv@dividend,w
  6287  0F07                     u2115:
  6288  0F07  1C03               	skipc
  6289  0F08  2F0A               	goto	u2111
  6290  0F09  2F0B               	goto	u2110
  6291  0F0A                     u2111:
  6292  0F0A  2F1A               	goto	l2327
  6293  0F0B                     u2110:
  6294  0F0B                     l2323:
  6295  0F0B  0870               	movf	___lldiv@divisor,w
  6296  0F0C  02F4               	subwf	___lldiv@dividend,f
  6297  0F0D  0871               	movf	___lldiv@divisor+1,w
  6298  0F0E  1C03               	skipc
  6299  0F0F  0F71               	incfsz	___lldiv@divisor+1,w
  6300  0F10  02F5               	subwf	___lldiv@dividend+1,f
  6301  0F11  0872               	movf	___lldiv@divisor+2,w
  6302  0F12  1C03               	skipc
  6303  0F13  0F72               	incfsz	___lldiv@divisor+2,w
  6304  0F14  02F6               	subwf	___lldiv@dividend+2,f
  6305  0F15  0873               	movf	___lldiv@divisor+3,w
  6306  0F16  1C03               	skipc
  6307  0F17  0F73               	incfsz	___lldiv@divisor+3,w
  6308  0F18  02F7               	subwf	___lldiv@dividend+3,f
  6309  0F19                     l2325:
  6310  0F19  1479               	bsf	___lldiv@quotient,0
  6311  0F1A                     l2327:
  6312  0F1A  3001               	movlw	1
  6313  0F1B                     u2125:
  6314  0F1B  1003               	clrc
  6315  0F1C  0CF3               	rrf	___lldiv@divisor+3,f
  6316  0F1D  0CF2               	rrf	___lldiv@divisor+2,f
  6317  0F1E  0CF1               	rrf	___lldiv@divisor+1,f
  6318  0F1F  0CF0               	rrf	___lldiv@divisor,f
  6319  0F20  3EFF               	addlw	-1
  6320  0F21  1D03               	skipz
  6321  0F22  2F1B               	goto	u2125
  6322  0F23                     l2329:
  6323  0F23  3001               	movlw	1
  6324  0F24  02FD               	subwf	___lldiv@counter,f
  6325  0F25  1D03               	btfss	3,2
  6326  0F26  2F28               	goto	u2131
  6327  0F27  2F29               	goto	u2130
  6328  0F28                     u2131:
  6329  0F28  2EF0               	goto	l2319
  6330  0F29                     u2130:
  6331  0F29                     l2331:
  6332  0F29  087C               	movf	___lldiv@quotient+3,w
  6333  0F2A  00F3               	movwf	?___lldiv+3
  6334  0F2B  087B               	movf	___lldiv@quotient+2,w
  6335  0F2C  00F2               	movwf	?___lldiv+2
  6336  0F2D  087A               	movf	___lldiv@quotient+1,w
  6337  0F2E  00F1               	movwf	?___lldiv+1
  6338  0F2F  0879               	movf	___lldiv@quotient,w
  6339  0F30  00F0               	movwf	?___lldiv
  6340  0F31                     l455:
  6341  0F31  0008               	return
  6342  0F32                     __end_of___lldiv:
  6343  007E                     btemp	set	126	;btemp
  6344  007E                     wtemp0	set	126
  6345                           
  6346                           	psect	config
  6347                           
  6348                           ;Config register CONFIG @ 0x2007
  6349                           ;	Oscillator Selection bits
  6350                           ;	FOSC = HS, HS oscillator
  6351                           ;	Watchdog Timer Enable bit
  6352                           ;	WDTE = OFF, WDT disabled
  6353                           ;	Power-up Timer Enable bit
  6354                           ;	PWRTE = ON, PWRT enabled
  6355                           ;	Brown-out Reset Enable bit
  6356                           ;	BOREN = ON, BOR enabled
  6357                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6358                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  6359                           ;	Data EEPROM Memory Code Protection bit
  6360                           ;	CPD = OFF, Data EEPROM code protection off
  6361                           ;	Flash Program Memory Write Enable bits
  6362                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6363                           ;	In-Circuit Debugger Mode bit
  6364                           ;	DEBUG = 0x1, unprogrammed default
  6365                           ;	Flash Program Memory Code Protection bit
  6366                           ;	CP = OFF, Code protection off
  6367  2007                     	org	8199
  6368  2007  3FF2               	dw	16370

Data Sizes:
    Strings     85
    Constant    10
    Data        7
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    rtc_print$1036	PTR unsigned char  size(1) Largest target is 4
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[4]), STR_9(CODE[4]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 25
		 -> rtc_print@buffer(BANK0[25]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 25
		 -> rtc_print@buffer(BANK0[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), ?_sprintf(BANK0[2]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_11(CODE[18]), STR_8(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 25
		 -> rtc_print@buffer(BANK0[25]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    RTC_Set@time_t	PTR struct rtc_tm size(1) Largest target is 7
		 -> NULL(NULL[0]), c_time(BANK0[7]), 

    LCD_Write_String@str	PTR unsigned char  size(2) Largest target is 25
		 -> STR_13(CODE[6]), STR_12(CODE[3]), rtc_print@buffer(BANK0[25]), 

    sp__RTC_Get	PTR struct rtc_tm size(1) Largest target is 7
		 -> c_time(BANK0[7]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 25
		 -> rtc_print@buffer(BANK0[25]), 

    mytime	PTR struct rtc_tm size(1) Largest target is 7
		 -> NULL(NULL[0]), c_time(BANK0[7]), 

    days	PTR unsigned char [7] size(1) Largest target is 4
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_edit
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _edit->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _RTC_Set->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _RTC_Read_Reg->_I2C_Read_Char
    _RTC_Get->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_DATA
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_rtc_print
    _rtc_print->_sprintf
    _RTC_Set->_decimal_to_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14101
                                             57 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _RTC_Get
                            _RTC_Set
                           _debounce
                               _edit
                          _rtc_print
 ---------------------------------------------------------------------------------
 (1) _rtc_print                                           32    32      0    4706
                                             25 BANK0     32    32      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    20      9    2561
                                              0 BANK0     25    16      9
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     344
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _edit                                                 6     4      2    4576
                                             13 COMMON     1     1      0
                                              0 BANK0      5     3      2
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
                              _blink
                           _debounce
 ---------------------------------------------------------------------------------
 (2) _debounce                                             4     4      0      70
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _blink                                                3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2     572
                                              6 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1106
                                              4 COMMON     7     6      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _RTC_Set                                              3     3      0    2182
                                              1 BANK0      3     3      0
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
                       _RTC_Read_Reg
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0    1552
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Reg                                         3     3      0     112
                                              3 COMMON     3     3      0
                      _I2C_Read_Char
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
 ---------------------------------------------------------------------------------
 (1) _RTC_Get                                              1     1      0     279
                                              8 COMMON     1     1      0
                      _I2C_Read_Char
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Char                                       1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Char                                        3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_ACK                                              0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (4) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA
   _RTC_Get
     _I2C_Read_Char
       _I2C_ACK
         _I2C_Wait
       _I2C_NACK
         _I2C_Wait
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write_Char
       _I2C_Wait
     _bcd_to_decimal
       ___bmul
   _RTC_Set
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Char
     _RTC_Read_Reg
       _I2C_Read_Char
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Char
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _debounce
   _edit
     _LCD_Set_Cursor
     _LCD_Write_Char
     _LCD_Write_String
     ___awdiv
     ___awmod
     _blink
     _debounce
   _rtc_print
     _LCD_Set_Cursor
     _LCD_Write_String
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3C      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5A      12        0.0%
ABS                  0      0      5A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 24 06:01:42 2022

                          _i 005D                            pc 0002               ___bmul@product 0072  
         __size_of_I2C_Start 0009                           l40 0C8D                           l44 0CB3  
                         l53 0C43                           l37 0204                           l70 05C6  
               ___awdiv@sign 0076                           fsr 0004          ___wmul@multiplicand 0072  
             _decimal_to_bcd 0D39                          l110 0C56                          l111 0C57  
                        l112 0C5D                          l113 0C5E                          l201 0B79  
                        l114 0C64                          l210 0B8E                          l116 0C65  
                        l108 0C4D                          l204 0B70                          l132 0158  
                        l109 0C50                          l213 0B9A                          l221 0CDE  
                        l119 0C23                          l135 0F98                          l207 0B82  
                        l216 0BB7                          l128 0158                          l144 00B3  
                        l241 0D68                          l250 02C4                          l138 0E72  
                        l245 03AB                          l421 0C8A                          l238 0C09  
                        l415 07E4                          l192 0DA1                          l256 0D0B  
                        l195 0B9B                          l419 0C72                          l372 05E5  
                        l445 0BF1                          l701 0DDB                          l198 0BA7  
                        l455 0F31                          l572 0FFF                          l585 0ECB  
                        l691 0E1F                          l872 0BC9                          l881 0D38  
                        _RB0 0030                          _RB1 0031                          _RD2 0042  
                        _RD3 0043                          _RD4 0044                          _RD5 0045  
                        _RD6 0046                          _RD7 0047                          _PEN 048A  
                        _SEN 0488              __end_of_I2C_ACK 0B8F                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0076         __size_of_I2C_Restart 0009  
            __end_of_LCD_CMD 0C24               _LCD_Set_Cursor 00B4                         l2001 0E91  
                       l2011 0EB0                         l2003 0E98                         l2013 0EB7  
                       l2005 0E9C                         l2101 0657                         l2007 0EA0  
                       l2015 0EBD                         l2031 0DEE                         l2023 0DDC  
                       l2111 066E                         l2103 065B                         l2017 0EC2  
                       l2009 0EAA                         l2041 0E0E                         l2033 0DF2  
                       l2025 0DDE                         l2121 069A                         l2113 067F  
                       l2105 0661                         l2019 0EC7                         l2043 0E15  
                       l2035 0DF6                         l2027 0DE4                         l2051 0DA8  
                       l2131 06C6                         l2123 069E                         l2115 0689  
                       l2107 0665                         l2211 0D27                         l2203 0D0D  
                       l2301 0D3C                         l2221 00D6                         l2213 00B5  
                       l2037 0E07                         l2029 0DE7                         l2045 0E1B  
                       l2061 0DC4                         l2053 0DAB                         l2141 0701  
                       l2133 06D5                         l2125 06AD                         l2117 0690  
                       l2109 0668                         l2205 0D12                         l2311 0ECC  
                       l2231 00FF                         l2215 00BA                         l2223 00DD  
                       l2039 0E0D                         l2063 0DCA                         l2055 0DB2  
                       l2143 0705                         l2127 06BC                         l2119 0693  
                       l2071 05CA                         l2207 0D16                         l2321 0EF9  
                       l2313 0EDC                         l2305 0CE0                         l2241 0128  
                       l2225 00E3                         l2233 0106                         l2217 00CB  
                       l2401 055F                         l2065 0DD1                         l2057 0DB6  
                       l2049 0DA2                         l2161 0748                         l2153 0723  
                       l2129 06C2                         l2137 06DA                         l2081 05E6  
                       l2073 05CF                         l2209 0D1F                         l2323 0F0B  
                       l2315 0EDF                         l2331 0F29                         l2307 0D0A  
                       l2251 0151                         l2235 010C                         l2243 012F  
                       l2227 00F4                         l2219 00D0                         l2411 05AB  
                       l2403 0568                         l2059 0DBA                         l2067 0DD7  
                       l2163 074C                         l2171 076A                         l2155 072D  
                       l2139 06F9                         l2091 0611                         l2075 05D5  
                       l2325 0F19                         l2317 0EEC                         l2501 0376  
                       l2245 0135                         l2237 011D                         l2229 00F9  
                       l2253 0072                         l2261 0C8B                         l2413 05B0  
                       l2405 056D                         l2181 078C                         l2173 0770  
                       l2165 0752                         l2157 0738                         l2149 0707  
                       l2093 0626                         l2085 05EA                         l2077 05DC  
                       l2341 0196                         l2327 0F1A                         l2319 0EF0  
                       l2431 0D9F                         l2423 0D69                         l2511 0205  
                       l2503 0382                         l2247 0146                         l2239 0122  
                       l2255 0075                         l2271 0CA0                         l2415 05B6  
                       l2407 0579                         l2183 07BA                         l2175 0777  
                       l2167 0759                         l2159 0744                         l2191 07E0  
                       l2095 0639                         l2087 05FD                         l2079 05E1  
                       l2351 01F3                         l2343 01A1                         l2335 0159  
                       l2329 0F23                         l2433 0DA0                         l2425 0D6D  
                       l2441 0F37                         l1801 0B9B                         l2513 02C3  
                       l2505 038E                         l2249 014B                         l2257 0091  
                       l2281 0CB2                         l2273 0CAA                         l2417 05BF  
                       l2409 0592                         l2361 04C9                         l2185 07C1  
                       l2177 077B                         l2169 075D                         l2097 063D  
                       l2089 060D                         l2353 01FB                         l2345 01AB  
                       l2337 0182                         l2521 03B0                         l2427 0D70  
                       l1811 0C5B                         l2451 0F5D                         l2443 0F3D  
                       l2435 0F32                         l1803 0BA1                         l2507 039A  
                       l2259 0097                         l2291 0C33                         l2275 0CB0  
                       l2267 0C93                         l2419 05C5                         l2371 04DC  
                       l2363 04CF                         l2355 04B6                         l2187 07C5  
                       l2179 0787                         l2099 064E                         l2347 01B3  
                       l2339 018D                         l2531 03E4                         l2523 03BF  
                       l2429 0D72                         l1813 0C62                         l1805 0C45  
                       l2461 0F7A                         l2453 0F63                         l2445 0F45  
                       l2437 0F35                         l1821 0B8F                         l2509 03A6  
                       l2293 0C39                         l2285 0C24                         l2269 0C97  
                       l2381 04F6                         l2373 04E2                         l2365 04D0  
                       l2357 04B6                         l1901 0BB9                         l2189 07CE  
                       l2349 01BC                         l2541 0427                         l2533 03EA  
                       l2525 03C4                         l1807 0C49                         l2463 0F80  
                       l2455 0F68                         l2447 0F4E                         l2439 0F36  
                       l1815 0B83                         l1823 0B92                         l2471 02C8  
                       l1831 0E2E                         l2295 0C3F                         l2287 0C26  
                       l2391 050F                         l2383 04F8                         l2375 04E8  
                       l2367 04D5                         l2359 04C0                         l1903 0BBA  
                       l2551 0486                         l2543 0441                         l2535 03F3  
                       l2527 03CC                         l2519 03AC                         l1809 0C54  
                       l2465 0F86                         l2457 0F6E                         l2449 0F54  
                       l1817 0B86                         l1825 0B97                         l2297 0BF3  
                       l2481 031C                         l2473 02D3                         l1841 0E54  
                       l1833 0E3C                         l2289 0C2A                         l2393 0528  
                       l2385 04FE                         l2377 04EA                         l2369 04DB  
                       l1921 0C80                         l1913 0C66                         l1905 0BC0  
                       l2545 045B                         l2537 03F6                         l2553 0494  
                       l2529 03D5                         l1851 0C0B                         l2467 0F8C  
                       l2459 0F74                         l1819 0B8B                         l1931 0BE3  
                       l2491 0348                         l2483 032C                         l2475 02E6  
                       l1843 0E5A                         l1835 0E3F                         l1827 0E21  
                       l2395 0541                         l2387 0504                         l2379 04F0  
                       l1923 0C86                         l1915 0C68                         l1907 0BC6  
                       l2555 049E                         l2547 0475                         l2539 040F  
        LCD_Write_String@str 0076                         l1853 0C0E                         l2469 0F92  
                       l1861 0B71                         l1933 0BE7                         l1941 0F99  
                       l2493 034E                         l2485 033C                         l2477 02F8  
                       l1845 0E5D                         l1837 0E48                         l1829 0E2B  
                       l2389 0505                         l2397 054F                         l1917 0C6C  
                       l1909 0BC8                         l2557 04A3                         l2549 047E  
                       l1855 0C14                         l1863 0B76                         l1871 0B7F  
                       l1935 0BE9                         l1927 0BDE                         l1951 0FA9  
                       l1943 0F9A                         l2495 0354                         l2487 0340  
                       l2479 030A                         l1847 0E66                         l1839 0E4B  
                       l2399 0555                         l1919 0C79                         l1857 0C17  
                       l1865 0B68                         l1873 0BA9                         l1937 0BF0  
                       l1929 0BDF                         l1961 0FBD                         l1953 0FAE  
                       l1945 0F9E                         l2497 035F                         l2489 0343  
                       l1849 0E69                         l2657 05F8                         l1859 0C20  
                       l1891 0CCD                         l1883 0CB5                         l1867 0B6D  
                       l1875 0BAE                         l1971 0FE3                         l1963 0FC4  
                       l1955 0FB2                         l1947 0FA3                         l2499 036A  
                       l2659 06EE                         l1893 0CD2                         l1885 0CBA  
                       l1869 0B7A                         l1877 0BB2                         l1981 0FFB  
                       l1973 0FE4                         l1965 0FC8                         l1957 0FB4  
                       l1949 0FA5                         l1895 0CD8                         l1887 0CC2  
                       l1879 0BB7                         l1975 0FEB                         l1967 0FCC  
                       l1959 0FBA                         l1991 0E7D                         l1897 0CDD  
                       l1889 0CC8                         l1969 0FDD                         l1977 0FF1  
                       l1993 0E7F                         l1985 0E73                         l1979 0FF6  
                       l1995 0E83                         l1987 0E74                         l1997 0E88  
                       l1989 0E78                         l1999 0E8E                         STR_1 0063  
                       STR_2 005F                         STR_3 0057                         STR_4 0053  
                       STR_5 006B                         STR_6 005B                         STR_7 0067  
                       STR_8 002F                         STR_9 004B                         u1200 0BA1  
                       u2000 0CAA                         u1201 0BA0                         u2001 0CA9  
                       u1210 0BA7                         u2010 0CB0                         u1211 0BA6  
                       u2011 0CAF                         u1220 0C49                         u2020 0C39  
                       u1300 0C6C                         u1221 0C48                         u2021 0C38  
                       u1301 0C6B                         u2110 0F0B                         u1230 0C54  
                       u2030 0C3F                         u2111 0F0A                         u1231 0C53  
                       u2031 0C3E                         u1240 0C5B                         u1400 0FCC  
                       u2040 0C43                         u2200 04DB                         u2105 0EF2  
                       u1241 0C5A                         u1401 0FCB                         u2041 0C42  
                       u2201 04DA                         u2130 0F29                         u1250 0C62  
                       u2210 04E2                         u1330 0C86                         u2131 0F28  
                       u2115 0F07                         u1251 0C61                         u2211 04E1  
                       u1331 0C85                         u1315 0C73                         u2300 0D82  
                       u1340 0BE3                         u1420 0FDD                         u1500 0EA0  
                       u2220 04E8                         u2140 018D                         u2125 0F1B  
                       u1341 0BE2                         u1421 0FDC                         u1501 0E9F  
                       u2221 04E7                         u1325 0C7A                         u2141 018C  
                       u2070 0EDC                         u1270 0CD2                         u1350 0BF0  
                       u1510 0EAA                         u2310 0340                         u2230 04F0  
                       u2150 0196                         u2071 0EDB                         u1271 0CD1  
                       u1351 0BEF                         u2055 0BFD                         u1415 0FCD  
                       u1511 0EA9                         u2311 033F                         u2231 04EF  
                       u2151 0195                         u1440 0FF1                         u1360 0F9E  
                       u2240 04F6                         u2160 04BF                         u1280 0BC0  
                       u2320 03EA                         u2305 0D7D                         u1441 0FF0  
                       u1425 0FD9                         u1361 0F9D                         u2065 0D4F  
                       u1265 0E31                         u2241 04F5                         u2161 04BE  
                       u1281 0BBF                         u2321 03E9                         u2090 0EF0  
                       u1450 0FF6                         u1370 0FA9                         u1530 0EBD  
                       u2250 04FE                         u2170 04C9                         u1610 0E1B  
                       u1290 0BC6                         u2330 03F3                         u2091 0EEF  
                       u1451 0FF5                         u1435 0FE5                         u1371 0FA8  
                       u1531 0EBC                         u1515 0EA6                         u2251 04FD  
                       u2171 04C8                         u1611 0E1A                         u1291 0BC5  
                       u2331 03F2                         u1380 0FBA                         u1540 0EC2  
                       u1460 0E78                         u2260 0504                         u2180 04CF  
                       u1620 0DA8                         u1700 064D                         u2340 047E  
                       u2085 0EE1                         u1381 0FB9                         u1541 0EC1  
                       u1525 0EB1                         u1461 0E77                         u2261 0503  
                       u2181 04CE                         u1605 0E0F                         u1621 0DA7  
                       u1701 064C                         u2341 047D                         u1470 0E83  
                       u2270 0555                         u2190 04D5                         u1550 0DE4  
                       u1710 0661                         u1471 0E82                         u2271 0554  
                       u2191 04D4                         u1551 0DE3                         u1711 0660  
                       u2407 048E                         u1480 0E8E                         u2280 05B6  
                       u1640 0DBA                         u1800 0752                         u1720 067F  
                       u1481 0E8D                         u2281 05B5                         u1641 0DB9  
                       u1801 0751                         u1721 067E                         u2417 04AB  
                       u2290 05BF                         u1570 0DF6                         u1650 0DC4  
                       u1810 0769                         u1730 0689                         u2507 0F49  
                       u1395 0FBE                         u2291 05BE                         u2427 0549  
                       u1571 0DF5                         u1651 0DC3                         u1635 0DAC  
                       u1811 0768                         u1731 0688                         u1900 00E3  
                       u1820 0770                         u1740 06AC                         u2517 0F58  
                       u1901 00E2                         u2437 0C9B                         u1565 0DE8  
                       u1821 076F                         u1741 06AB                         u1590 0E07  
                       u1670 0DD7                         u1830 0787                         u1750 06D4  
                       u2527 0F65                         u1495 0E92                         u2447 0C2E  
                       u1591 0E06                         u1671 0DD6                         u1655 0DC0  
                       u1831 0786                         u1751 06D3                         u1735 0685  
                       u1920 010C                         u1840 07CE                         u1760 0722  
                       u1680 05D5                         u2537 0C1B                         u1921 010B  
                       u2457 0E43                         u1585 0DF7                         u1665 0DCB  
                       u1841 07CD                         u1761 0721                         u1681 05D4  
                       u1850 07E0                         u1770 072D                         u1690 060D  
                       u1915 00EB                         u2467 0E4F                         u1595 0E03  
                       u1851 07DF                         u1771 072C                         u1691 060C  
                       u1940 0135                         u1780 0738                         u1860 0D1E  
                       u1941 0134                         u2477 0E61                         u1781 0737  
                       u1765 071E                         u1861 0D1D                         u2397 03DD  
                       u1790 074C                         u1870 0D38                         u1935 0114  
                       u2487 0E6D                         u1791 074B                         u1871 0D37  
                       u1880 00BA                         u1960 007F                         u2497 0F41  
                       u1881 00B9                         u1785 0734                         u1970 00A1  
                       u1955 013D                         u1980 00B3                         u1981 00B2  
                       u1990 0C93                         u1895 00C2                         u1991 0C92  
                       _RCEN 048B                         _RSEN 0489             __end_of_I2C_NACK 0B9B  
          ?_LCD_Write_String 0076                         _edit 04B5                         _days 0065  
                       _main 03AC              __end_of_RTC_Get 02C5              __end_of_RTC_Set 03AC  
                       btemp 007E             __end_of_I2C_Wait 0BA8             __end_of_I2C_Stop 0B83  
                       start 0000           ??_LCD_Write_String 0078            ___bmul@multiplier 0073  
           __end_of_LCD_DATA 0C66       __end_of_decimal_to_bcd 0D69             __end_of_LCD_Init 0F99  
           ?_I2C_Master_Init 0020                        ?_edit 0020                        ?_main 0070  
                      _ACKEN 048C                        _ACKDT 048D              __end_of___awdiv 1000  
                      STR_10 004F                        STR_11 001D                        STR_12 006F  
                      STR_20 0067                        STR_13 0045                        STR_21 003E  
                      STR_14 0063                        STR_15 005F                        STR_16 0057  
                      STR_17 0053                        STR_18 006B                        STR_19 005B  
            __end_of___awmod 0ECC              __end_of___lldiv 0F32              ___awdiv@divisor 0070  
            __end_of___lwdiv 0E20              __end_of___lwmod 0DDC              ___awdiv@counter 0075  
                      _TRISD 0088       __end_of_LCD_Set_Cursor 0159       __size_of_I2C_Read_Char 002B  
                      _blink 0C24              __end_of_dpowers 001D                        edit@x 007D  
                      edit@y 0020              __end_of_isdigit 0BCA            __end_of_I2C_Start 0B7A  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07E5               _LCD_Write_Char 0E20              __initialization 07E5  
               __end_of_edit 05C7                 __end_of_main 04B5              ?_decimal_to_bcd 0070  
                  ??_I2C_ACK 0070                       ??_edit 0022                       ??_main 0059  
                  ??_LCD_CMD 0071              ?_LCD_Set_Cursor 0074                       ?_blink 0070  
                     _ADCON1 009F                    ??_RTC_Get 0078                    ??_RTC_Set 0021  
           ___awdiv@dividend 0072                       _SSPADD 0093                       _TRISC3 043B  
                     _TRISD2 0442                       _TRISC4 043C                       _TRISD3 0443  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of_debounce 0CB4  
     __end_of_LCD_Write_Char 0E73                _I2C_Read_Char 0CB4                       ___bmul 0BDD  
                     ___wmul 0C66                    ??___awdiv 0074                    ??___awmod 0074  
                     _c_time 005E                    ??___lldiv 0078                    ??___lwdiv 0074  
                  ??___lwmod 007C             ___awdiv@quotient 0077                       blink@j 0072  
            ___awmod@divisor 0070              ___awmod@counter 0075                       _mytime 005C  
                     _strcat 0D0C                    ?_I2C_NACK 0070                    ??_isdigit 0070  
                  ?_I2C_Wait 0070                RTC_Set@time_t 0023                    ?_I2C_Stop 0070  
                  ??_sprintf 0029                    ?_LCD_DATA 0070      __end_of__initialization 07FC  
                  ?_LCD_Init 0070              ?_LCD_Write_Char 0070          ___bmul@multiplicand 0070  
             ?_I2C_Read_Char 0070               __pcstackCOMMON 0070                 __pidataBANK0 0B61  
              __end_of_blink 0C44                   ??_I2C_NACK 0070                   ??_I2C_Wait 0070  
                 ??_I2C_Stop 0070                      ??_blink 0070                 sprintf@width 0036  
                 __pbssBANK0 005C                   ??_LCD_DATA 0070                   ??_LCD_Init 0074  
                 __pmaintext 03AC                      ?___bmul 0070                      ?___wmul 0070  
                    _I2C_ACK 0B83      __size_of_I2C_Write_Char 0010                      _ACKSTAT 048E  
  __size_of_LCD_Write_String 0042                      ?_strcat 0070                ??_I2C_Restart 0070  
                    _LCD_CMD 0C0A                    ?_debounce 0070           __size_of_rtc_print 00AC  
    __size_of_bcd_to_decimal 0018                      _SSPCON2 0091                      _RTC_Get 0205  
                    _RTC_Set 02C5                      _SSPSTAT 0094                   __stringtab 0003  
                  _I2C_Start 0B71              ??_I2C_Read_Char 0070             I2C_Read_Char@ACK 0071  
           ??_decimal_to_bcd 0079              __size_of___bmul 0015                      ___awdiv 0F99  
                    ___awmod 0E73                      ___lldiv 0ECC              __size_of___wmul 0025  
                    ___lwdiv 0DDC                      ___lwmod 0DA2                edit@parameter 0021  
           ??_LCD_Set_Cursor 0075                      __ptext1 0159                      __ptext2 0D0C  
                    __ptext3 05C7                      __ptext4 0BB8                      __ptext5 0C66  
                    __ptext6 0DA2                      __ptext7 0DDC                      __ptext8 04B5  
                    __ptext9 0C8B              __size_of_strcat 002D                      _dpowers 0013  
                    _isdigit 0BB8             ___awmod@dividend 0072                   ??_debounce 0070  
   __size_of_I2C_Master_Init 0039                debounce@count 0072                      _sprintf 05C7  
        __end_of_I2C_Restart 0B71         end_of_initialization 07FC               RTC_Set@sec_reg 0022  
       RTC_Read_Reg@reg_data 0075                   ?_I2C_Start 0070              ___lldiv@divisor 0070  
            ___lldiv@counter 007D            __end_of_rtc_print 0205                   LCD_CMD@CMD 0073  
          __size_of_I2C_NACK 000C            __size_of_I2C_Wait 000D            __size_of_I2C_Stop 0009  
            rtc_print@buffer 0040            LCD_Write_String@i 007B             ??_LCD_Write_Char 0071  
              ?_RTC_Read_Reg 0070            __size_of_LCD_DATA 0022            __size_of_LCD_Init 0067  
             _I2C_Write_Char 0BA8               __end_of___bmul 0BF2               __end_of___wmul 0C8B  
           _LCD_Write_String 0072                  _I2C_Restart 0B68               __end_of_strcat 0D39  
        start_initialization 07E5               _bcd_to_decimal 0BF2               ??_RTC_Read_Reg 0073  
          ??_I2C_Master_Init 0024                  ??_I2C_Start 0070           I2C_Read_Char@_data 0072  
     __end_of_I2C_Write_Char 0BB8                     ??___bmul 0071                     ??___wmul 0074  
                 init_fetch0 0BCA                  __pdataBANK0 0065                     ?_I2C_ACK 0070  
    RTC_Read_Reg@reg_address 0074                     ??_strcat 0071       __end_of_bcd_to_decimal 0C0A  
                   ?_LCD_CMD 0070                    ___latbits 0002                __pcstackBANK0 0020  
          __size_of_debounce 0029                     ?_RTC_Get 0070                     ?_RTC_Set 0070  
                sprintf@flag 002C                  sprintf@prec 002F             ___lwdiv@dividend 0072  
            ?_I2C_Write_Char 0070                     ?___awdiv 0070                     ?___awmod 0070  
                   ?___lldiv 0070                     ?___lwdiv 0070                     ?___lwmod 0078  
                  __pstrings 0003                     _I2C_NACK 0B8F              ?_bcd_to_decimal 0070  
                   ?_isdigit 0070                     _I2C_Wait 0B9B                     _I2C_Stop 0B7A  
           ___lwdiv@quotient 0075               __size_of_blink 0020                     ?_sprintf 0020  
       bcd_to_decimal@number 0077                     _LCD_DATA 0C44                    debounce@i 0073  
                   _LCD_Init 0F32               ___wmul@product 0074        __end_of_I2C_Read_Char 0CDF  
                  _rtc_print 0159         __end_of_RTC_Read_Reg 0D0C             __size_of_I2C_ACK 000C  
                __stringbase 0012            ___wmul@multiplier 0070             __size_of_LCD_CMD 001A  
       LCD_Set_Cursor@column 0074             __size_of_RTC_Get 00C0             __size_of_RTC_Set 00E7  
   __end_of_LCD_Write_String 00B4          LCD_Write_Char@High4 0074             __size_of___awdiv 0067  
           __size_of___awmod 0059                   ?_rtc_print 0070             __size_of___lldiv 0066  
           __size_of___lwdiv 0044             __size_of___lwmod 003A           __end_of__stringtab 0013  
                _isdigit$804 0070      __size_of_decimal_to_bcd 0030                 ?_I2C_Restart 0070  
                 sprintf@len 0033                   sprintf@val 002D              _I2C_Master_Init 0D69  
                 strcat@from 0070                     _debounce 0C8B             __size_of_isdigit 0012  
            ___lwdiv@divisor 0070              ___lwdiv@counter 0077                     __ptext10 0C24  
                   __ptext11 0072                     __ptext20 0BF2                     __ptext12 0E20  
                   __ptext21 0BDD                     __ptext13 00B4                     __ptext30 0F32  
                   __ptext22 0BA8                     __ptext14 02C5                     __ptext31 0C0A  
                   __ptext23 0B7A                     __ptext15 0D39                     __ptext32 0C44  
                   __ptext24 0B71                     __ptext16 0E73                     __ptext33 0D69  
                   __ptext25 0B68                     __ptext17 0F99                     __ptext34 0ECC  
                   __ptext26 0CB4                     __ptext18 0CDF                     __ptext27 0B8F  
                   __ptext19 0205                     __ptext28 0B83                     __ptext29 0B9B  
    __size_of_LCD_Set_Cursor 00A5             __size_of_sprintf 021E                __size_of_edit 0112  
              __size_of_main 0109         decimal_to_bcd@number 0020          LCD_Set_Cursor@High4 0079  
         LCD_Write_Char@Data 0075           LCD_Write_Char@Low4 0073                     init_ram0 0BCE  
                   isdigit@c 0071                    sprintf@ap 0030                    sprintf@cp 0031  
                  sprintf@sp 0035             ___lwmod@dividend 007A             ___lldiv@dividend 0074  
           ??_I2C_Write_Char 0070                    stringcode 000D        __size_of_RTC_Read_Reg 002D  
I2C_Master_Init@I2C_BaudRate 0020      __size_of_LCD_Write_Char 0053           LCD_Set_Cursor@Low4 0078  
         LCD_Set_Cursor@Temp 007A             ??_bcd_to_decimal 0074      __end_of_I2C_Master_Init 0DA2  
                ??_rtc_print 0039                     sprintf@c 0038                     sprintf@f 0020  
                   strcat@cp 0073                 LCD_DATA@Data 0070                     strcat@to 0072  
           ___lldiv@quotient 0079              ___lwmod@divisor 0078              ___lwmod@counter 007D  
                   stringdir 000D                     stringtab 0003            LCD_Set_Cursor@row 0077  
         I2C_Write_Char@Data 0070                 _RTC_Read_Reg 0CDF  
