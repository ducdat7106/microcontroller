

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Feb 13 20:12:39 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175  06F1                     __pidataBANK0:
   176                           
   177                           ;initializer for hienThiViTriCoDinhN@F948
   178  06F1  34FF               	retlw	255
   179  06F2  34FF               	retlw	255
   180  06F3  3400               	retlw	0
   181  06F4  346E               	retlw	110
   182  06F5  346E               	retlw	110
   183  06F6  3491               	retlw	145
   184  06F7  34FF               	retlw	255
   185  06F8  34FF               	retlw	255
   186  06F9  34FF               	retlw	255
   187  06FA  34BB               	retlw	187
   188  06FB  34BD               	retlw	189
   189  06FC  3480               	retlw	128
   190  06FD  34BF               	retlw	191
   191  06FE  34BF               	retlw	191
   192  06FF  34FF               	retlw	255
   193  0700  34FF               	retlw	255
   194  0701  34FF               	retlw	255
   195  0702  34BD               	retlw	189
   196  0703  347E               	retlw	126
   197  0704  3466               	retlw	102
   198  0705  3466               	retlw	102
   199  0706  3499               	retlw	153
   200  0707  34FF               	retlw	255
   201  0708  34FF               	retlw	255
   202                           
   203                           	psect	idataBANK1
   204  0722                     __pidataBANK1:
   205                           
   206                           ;initializer for run_char@F953
   207  0722  34FF               	retlw	255
   208  0723  34FF               	retlw	255
   209  0724  34FF               	retlw	255
   210  0725  34FF               	retlw	255
   211  0726  34FF               	retlw	255
   212  0727  34FF               	retlw	255
   213  0728  34FF               	retlw	255
   214  0729  34FF               	retlw	255
   215  072A  34FF               	retlw	255
   216  072B  3483               	retlw	131
   217  072C  34F5               	retlw	245
   218  072D  34F6               	retlw	246
   219  072E  34F5               	retlw	245
   220  072F  3483               	retlw	131
   221  0730  34FF               	retlw	255
   222  0731  34FF               	retlw	255
   223  0732  34FF               	retlw	255
   224  0733  34FF               	retlw	255
   225  0734  3480               	retlw	128
   226  0735  34B6               	retlw	182
   227  0736  34B6               	retlw	182
   228  0737  34C1               	retlw	193
   229  0738  34FF               	retlw	255
   230  0739  34FF               	retlw	255
   231  073A  34FF               	retlw	255
   232  073B  3481               	retlw	129
   233  073C  347E               	retlw	126
   234  073D  347E               	retlw	126
   235  073E  347E               	retlw	126
   236  073F  34BD               	retlw	189
   237  0740  34FF               	retlw	255
   238  0741  34FF               	retlw	255
   239  0742  34FF               	retlw	255
   240  0743  34FF               	retlw	255
   241  0744  34FF               	retlw	255
   242  0745  34FF               	retlw	255
   243  0746  34FF               	retlw	255
   244  0747  34FF               	retlw	255
   245  0748  34FF               	retlw	255
   246  0749  34FF               	retlw	255
   247  0006                     _PORTB	set	6
   248  0007                     _PORTC	set	7
   249  0086                     _TRISB	set	134
   250  0087                     _TRISC	set	135
   251  009F                     _ADCON1	set	159
   252                           
   253                           	psect	cinit
   254  07E1                     start_initialization:	
   255                           ; #config settings
   256                           
   257  07E1                     __initialization:
   258                           
   259                           ; Initialize objects allocated to BANK1
   260  07E1  1383               	bcf	3,7	;select IRP bank0
   261  07E2  30C8               	movlw	low (__pdataBANK1+40)
   262  07E3  00FD               	movwf	btemp+-1
   263  07E4  3007               	movlw	high __pidataBANK1
   264  07E5  00FE               	movwf	btemp
   265  07E6  3022               	movlw	low __pidataBANK1
   266  07E7  00FF               	movwf	btemp+1
   267  07E8  30A0               	movlw	low __pdataBANK1
   268  07E9  0084               	movwf	4
   269  07EA  120A  118A  26E2  120A  118A  	fcall	init_ram0
   270                           
   271                           ; Initialize objects allocated to BANK0
   272  07EF  3062               	movlw	low (__pdataBANK0+24)
   273  07F0  00FD               	movwf	btemp+-1
   274  07F1  3006               	movlw	high __pidataBANK0
   275  07F2  00FE               	movwf	btemp
   276  07F3  30F1               	movlw	low __pidataBANK0
   277  07F4  00FF               	movwf	btemp+1
   278  07F5  304A               	movlw	low __pdataBANK0
   279  07F6  0084               	movwf	4
   280  07F7  120A  118A  26E2  120A  118A  	fcall	init_ram0
   281  07FC                     end_of_initialization:	
   282                           ;End of C runtime variable initialization code
   283                           
   284  07FC                     __end_of__initialization:
   285  07FC  0183               	clrf	3
   286  07FD  120A  118A  2ECB   	ljmp	_main	;jump to C main() function
   287                           
   288                           	psect	dataBANK0
   289  004A                     __pdataBANK0:
   290  004A                     hienThiViTriCoDinhN@F948:
   291  004A                     	ds	24
   292                           
   293                           	psect	dataBANK1
   294  00A0                     __pdataBANK1:
   295  00A0                     run_char@F953:
   296  00A0                     	ds	40
   297                           
   298                           	psect	inittext
   299  06DE                     init_fetch0:	
   300                           ;	Called with low address in FSR and high address in W
   301                           
   302  06DE  087E               	movf	btemp,w
   303  06DF  008A               	movwf	10
   304  06E0  087F               	movf	btemp+1,w
   305  06E1  0082               	movwf	2
   306  06E2                     init_ram0:	
   307                           ;Called with:
   308                           ;	high address of idata address in btemp 
   309                           ;	low address of idata address in btemp+1 
   310                           ;	low address of data in FSR
   311                           ;	high address + 1 of data in btemp-1
   312                           
   313  06E2  120A  118A  26DE  120A  118A  	fcall	init_fetch0
   314  06E7  0080               	movwf	0
   315  06E8  0A84               	incf	4,f
   316  06E9  0804               	movf	4,w
   317  06EA  067D               	xorwf	btemp+-1,w
   318  06EB  1903               	btfsc	3,2
   319  06EC  3400               	retlw	0
   320  06ED  0AFF               	incf	btemp+1,f
   321  06EE  1903               	btfsc	3,2
   322  06EF  0AFE               	incf	btemp,f
   323  06F0  2EE2               	goto	init_ram0
   324                           
   325                           	psect	cstackCOMMON
   326  0070                     __pcstackCOMMON:
   327  0070                     ?_run_char:
   328  0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_Display_Led_Matrix:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_strlen:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     Display_Led_Matrix@array:	
   338                           ; 2 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0070                     	ds	1
   343  0071                     ??_Display_Led_Matrix:
   344                           
   345                           ; 1 bytes @ 0x1
   346  0071                     	ds	1
   347  0072                     ??_strlen:
   348                           
   349                           ; 1 bytes @ 0x2
   350  0072                     	ds	1
   351  0073                     strlen@s:
   352                           
   353                           ; 1 bytes @ 0x3
   354  0073                     	ds	1
   355  0074                     Display_Led_Matrix@Code:
   356  0074                     strlen@cp:	
   357                           ; 1 bytes @ 0x4
   358                           
   359                           
   360                           ; 1 bytes @ 0x4
   361  0074                     	ds	1
   362  0075                     Display_Led_Matrix@Index:
   363                           
   364                           ; 1 bytes @ 0x5
   365  0075                     	ds	1
   366  0076                     Display_Led_Matrix@Code_Shift:
   367                           
   368                           ; 1 bytes @ 0x6
   369  0076                     	ds	1
   370  0077                     Display_Led_Matrix@i:
   371                           
   372                           ; 1 bytes @ 0x7
   373  0077                     	ds	1
   374  0078                     ??_run_char:
   375                           
   376                           ; 1 bytes @ 0x8
   377  0078                     	ds	4
   378  007C                     ??_main:
   379                           
   380                           	psect	cstackBANK0
   381  0020                     __pcstackBANK0:	
   382                           ; 1 bytes @ 0xC
   383                           
   384  0020                     run_char@Array:
   385                           
   386                           ; 40 bytes @ 0x0
   387  0020                     	ds	40
   388  0048                     run_char@Index:
   389                           
   390                           ; 1 bytes @ 0x28
   391  0048                     	ds	1
   392  0049                     run_char@i:
   393                           
   394                           ; 1 bytes @ 0x29
   395  0049                     	ds	1
   396                           
   397                           	psect	maintext
   398  06CB                     __pmaintext:	
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 38 in file "main_led_matrix.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : B00/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels required when called: 2
   424 ;; This function calls:
   425 ;;		_run_char
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _main
   433  06CB                     _main:
   434  06CB                     l789:	
   435                           ;incstack = 0
   436                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   437                           
   438                           
   439                           ;main_led_matrix.c: 39:     ADCON1 = 0x06;
   440  06CB  3006               	movlw	6
   441  06CC  1683               	bsf	3,5	;RP0=1, select bank1
   442  06CD  1303               	bcf	3,6	;RP1=0, select bank1
   443  06CE  009F               	movwf	31	;volatile
   444  06CF                     l791:
   445                           
   446                           ;main_led_matrix.c: 41:     TRISC = 0x00;
   447  06CF  0187               	clrf	7	;volatile
   448  06D0                     l793:
   449                           
   450                           ;main_led_matrix.c: 42:     TRISB = 0x00;
   451  06D0  0186               	clrf	6	;volatile
   452  06D1                     l795:
   453                           
   454                           ;main_led_matrix.c: 44:     PORTC=0x00;
   455  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   456  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   457  06D3  0187               	clrf	7	;volatile
   458  06D4                     l797:
   459                           
   460                           ;main_led_matrix.c: 45:     PORTB=0x00;
   461  06D4  0186               	clrf	6	;volatile
   462  06D5                     l799:
   463                           
   464                           ;main_led_matrix.c: 48:     {;main_led_matrix.c: 50:         run_char();
   465  06D5  120A  118A  278E  120A  118A  	fcall	_run_char
   466  06DA  2ED5               	goto	l799
   467  06DB  120A  118A  2800   	ljmp	start
   468  06DE                     __end_of_main:
   469                           
   470                           	psect	text1
   471  078E                     __ptext1:	
   472 ;; *************** function _run_char *****************
   473 ;; Defined at:
   474 ;;		line 96 in file "main_led_matrix.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  i               1   41[BANK0 ] unsigned char 
   479 ;;  Index           1   40[BANK0 ] unsigned char 
   480 ;;  Array          40    0[BANK0 ] unsigned char [40]
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0      42       0       0       0
   492 ;;      Temps:          4       0       0       0       0
   493 ;;      Totals:         4      42       0       0       0
   494 ;;Total ram usage:       46 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 1
   497 ;; This function calls:
   498 ;;		_Display_Led_Matrix
   499 ;;		_strlen
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _run_char
   507  078E                     _run_char:
   508  078E                     l767:	
   509                           ;incstack = 0
   510                           ; Regs used in _run_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;main_led_matrix.c: 98:     char Array[]={
   514  078E  3020               	movlw	run_char@Array& (0+255)
   515  078F  0084               	movwf	4
   516  0790  30A0               	movlw	low run_char@F953
   517  0791  00F8               	movwf	??_run_char
   518  0792  0804               	movf	4,w
   519  0793  00F9               	movwf	??_run_char+1
   520  0794  3028               	movlw	40
   521  0795  00FA               	movwf	??_run_char+2
   522  0796                     u110:
   523  0796  0878               	movf	??_run_char,w
   524  0797  0084               	movwf	4
   525  0798  1383               	bcf	3,7	;select IRP bank1
   526  0799  0800               	movf	0,w
   527  079A  00FB               	movwf	??_run_char+3
   528  079B  0AF8               	incf	??_run_char,f
   529  079C  0879               	movf	??_run_char+1,w
   530  079D  0084               	movwf	4
   531  079E  087B               	movf	??_run_char+3,w
   532  079F  0080               	movwf	0
   533  07A0  0AF9               	incf	??_run_char+1,f
   534  07A1  0BFA               	decfsz	??_run_char+2,f
   535  07A2  2F96               	goto	u110
   536  07A3                     l769:
   537                           
   538                           ;main_led_matrix.c: 107:     for(char Index = 0; Index<=(char)(strlen(Array)+1-10); Inde
      +                          x++)
   539  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   540  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   541  07A5  01C8               	clrf	run_char@Index
   542  07A6  2FCB               	goto	l787
   543  07A7                     l771:
   544                           
   545                           ;main_led_matrix.c: 109:     {;main_led_matrix.c: 110:         for(char i=0; i<=10; i++)
   546  07A7  01C9               	clrf	run_char@i
   547  07A8                     l777:
   548                           
   549                           ;main_led_matrix.c: 111:         {;main_led_matrix.c: 112:             Display_Led_Matri
      +                          x(Index, Array);
   550  07A8  3020               	movlw	(low (run_char@Array| 0))& (0+255)
   551  07A9  00F8               	movwf	??_run_char
   552  07AA  0878               	movf	??_run_char,w
   553  07AB  00F0               	movwf	Display_Led_Matrix@array
   554  07AC  0848               	movf	run_char@Index,w
   555  07AD  120A  118A  274A  120A  118A  	fcall	_Display_Led_Matrix
   556  07B2                     l779:
   557                           
   558                           ;main_led_matrix.c: 113:             _delay((unsigned long)((10)*(16000000/4000.0)));
   559  07B2  3034               	movlw	52
   560  07B3  00F9               	movwf	??_run_char+1
   561  07B4  30F1               	movlw	241
   562  07B5  00F8               	movwf	??_run_char
   563  07B6                     u177:
   564  07B6  0BF8               	decfsz	??_run_char,f
   565  07B7  2FB6               	goto	u177
   566  07B8  0BF9               	decfsz	??_run_char+1,f
   567  07B9  2FB6               	goto	u177
   568  07BA  2FBB               	nop2
   569  07BB                     l781:
   570                           
   571                           ;main_led_matrix.c: 114:         }
   572  07BB  3001               	movlw	1
   573  07BC  00F8               	movwf	??_run_char
   574  07BD  0878               	movf	??_run_char,w
   575  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   576  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   577  07C0  07C9               	addwf	run_char@i,f
   578  07C1                     l783:
   579  07C1  300B               	movlw	11
   580  07C2  0249               	subwf	run_char@i,w
   581  07C3  1C03               	skipc
   582  07C4  2FC6               	goto	u121
   583  07C5  2FC7               	goto	u120
   584  07C6                     u121:
   585  07C6  2FA8               	goto	l777
   586  07C7                     u120:
   587  07C7                     l785:
   588                           
   589                           ;main_led_matrix.c: 115:     }
   590  07C7  3001               	movlw	1
   591  07C8  00F8               	movwf	??_run_char
   592  07C9  0878               	movf	??_run_char,w
   593  07CA  07C8               	addwf	run_char@Index,f
   594  07CB                     l787:
   595  07CB  3020               	movlw	(low (run_char@Array| 0))& (0+255)
   596  07CC  120A  118A  2709  120A  118A  	fcall	_strlen
   597  07D1  0870               	movf	?_strlen,w
   598  07D2  00F8               	movwf	??_run_char
   599  07D3  0871               	movf	?_strlen+1,w
   600  07D4  00F9               	movwf	??_run_char+1
   601  07D5  30F7               	movlw	247
   602  07D6  0778               	addwf	??_run_char,w
   603  07D7  00FA               	movwf	??_run_char+2
   604  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   605  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   606  07DA  0848               	movf	run_char@Index,w
   607  07DB  027A               	subwf	??_run_char+2,w
   608  07DC  1803               	skipnc
   609  07DD  2FDF               	goto	u131
   610  07DE  2FE0               	goto	u130
   611  07DF                     u131:
   612  07DF  2FA7               	goto	l771
   613  07E0                     u130:
   614  07E0                     l49:
   615  07E0  0008               	return
   616  07E1                     __end_of_run_char:
   617                           
   618                           	psect	text2
   619  0709                     __ptext2:	
   620 ;; *************** function _strlen *****************
   621 ;; Defined at:
   622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  s               1    wreg     PTR const unsigned char 
   625 ;;		 -> run_char@Array(40), 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  s               1    3[COMMON] PTR const unsigned char 
   628 ;;		 -> run_char@Array(40), 
   629 ;;  cp              1    4[COMMON] PTR const unsigned char 
   630 ;;		 -> run_char@Array(40), 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  2    0[COMMON] unsigned int 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         2       0       0       0       0
   641 ;;      Locals:         2       0       0       0       0
   642 ;;      Temps:          1       0       0       0       0
   643 ;;      Totals:         5       0       0       0       0
   644 ;;Total ram usage:        5 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_run_char
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _strlen
   655  0709                     _strlen:
   656                           
   657                           ;incstack = 0
   658                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
   659                           ;strlen@s stored from wreg
   660  0709  00F3               	movwf	strlen@s
   661  070A                     l757:
   662  070A  0873               	movf	strlen@s,w
   663  070B  00F2               	movwf	??_strlen
   664  070C  0872               	movf	??_strlen,w
   665  070D  00F4               	movwf	strlen@cp
   666  070E  2F13               	goto	l761
   667  070F                     l759:
   668  070F  3001               	movlw	1
   669  0710  00F2               	movwf	??_strlen
   670  0711  0872               	movf	??_strlen,w
   671  0712  07F4               	addwf	strlen@cp,f
   672  0713                     l761:
   673  0713  0874               	movf	strlen@cp,w
   674  0714  0084               	movwf	4
   675  0715  1383               	bcf	3,7	;select IRP bank0
   676  0716  0800               	movf	0,w
   677  0717  1D03               	btfss	3,2
   678  0718  2F1A               	goto	u101
   679  0719  2F1B               	goto	u100
   680  071A                     u101:
   681  071A  2F0F               	goto	l759
   682  071B                     u100:
   683  071B                     l763:
   684  071B  0873               	movf	strlen@s,w
   685  071C  0274               	subwf	strlen@cp,w
   686  071D  00F0               	movwf	?_strlen
   687  071E  01F1               	clrf	?_strlen+1
   688  071F  1BF0               	btfsc	?_strlen,7
   689  0720  03F1               	decf	?_strlen+1,f
   690  0721                     l589:
   691  0721  0008               	return
   692  0722                     __end_of_strlen:
   693                           
   694                           	psect	text3
   695  074A                     __ptext3:	
   696 ;; *************** function _Display_Led_Matrix *****************
   697 ;; Defined at:
   698 ;;		line 56 in file "main_led_matrix.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  Index           1    wreg     unsigned char 
   701 ;;  array           1    0[COMMON] PTR unsigned char 
   702 ;;		 -> run_char@Array(40), hienThiViTriCoDinhN@Array(24), 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  Index           1    5[COMMON] unsigned char 
   705 ;;  i               1    7[COMMON] unsigned char 
   706 ;;  Code_Shift      1    6[COMMON] unsigned char 
   707 ;;  Code            1    4[COMMON] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         1       0       0       0       0
   718 ;;      Locals:         4       0       0       0       0
   719 ;;      Temps:          3       0       0       0       0
   720 ;;      Totals:         8       0       0       0       0
   721 ;;Total ram usage:        8 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_run_char
   727 ;;		_hienThiViTriCoDinhN
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           
   732                           ;psect for function _Display_Led_Matrix
   733  074A                     _Display_Led_Matrix:
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _Display_Led_Matrix: [wreg-fsr0h+status,2+status,0]
   737                           ;Display_Led_Matrix@Index stored from wreg
   738  074A  00F5               	movwf	Display_Led_Matrix@Index
   739  074B                     l737:
   740                           
   741                           ;main_led_matrix.c: 57:     char Code_Shift = 0x01;
   742  074B  01F6               	clrf	Display_Led_Matrix@Code_Shift
   743  074C  0AF6               	incf	Display_Led_Matrix@Code_Shift,f
   744  074D                     l739:
   745                           
   746                           ;main_led_matrix.c: 58:     char Code;;main_led_matrix.c: 59:     char i;;main_led_matri
      +                          x.c: 61:     for(i=Index; i<= Index+7; i++){
   747  074D  0875               	movf	Display_Led_Matrix@Index,w
   748  074E  00F1               	movwf	??_Display_Led_Matrix
   749  074F  0871               	movf	??_Display_Led_Matrix,w
   750  0750  00F7               	movwf	Display_Led_Matrix@i
   751  0751  2F79               	goto	l755
   752  0752                     l741:
   753                           
   754                           ;main_led_matrix.c: 62:         Code = ~Code_Shift;
   755  0752  0976               	comf	Display_Led_Matrix@Code_Shift,w
   756  0753  00F1               	movwf	??_Display_Led_Matrix
   757  0754  0871               	movf	??_Display_Led_Matrix,w
   758  0755  00F4               	movwf	Display_Led_Matrix@Code
   759  0756                     l743:
   760                           
   761                           ;main_led_matrix.c: 63:         PORTC = array[i];
   762  0756  0877               	movf	Display_Led_Matrix@i,w
   763  0757  0770               	addwf	Display_Led_Matrix@array,w
   764  0758  00F1               	movwf	??_Display_Led_Matrix
   765  0759  0871               	movf	??_Display_Led_Matrix,w
   766  075A  0084               	movwf	4
   767  075B  1383               	bcf	3,7	;select IRP bank0
   768  075C  0800               	movf	0,w
   769  075D  1283               	bcf	3,5	;RP0=0, select bank0
   770  075E  1303               	bcf	3,6	;RP1=0, select bank0
   771  075F  0087               	movwf	7	;volatile
   772  0760                     l745:
   773                           
   774                           ;main_led_matrix.c: 64:         PORTB = Code;
   775  0760  0874               	movf	Display_Led_Matrix@Code,w
   776  0761  0086               	movwf	6	;volatile
   777  0762                     l747:
   778                           
   779                           ;main_led_matrix.c: 65:         _delay((unsigned long)((1)*(16000000/4000.0)));
   780  0762  3006               	movlw	6
   781  0763  00F2               	movwf	??_Display_Led_Matrix+1
   782  0764  3030               	movlw	48
   783  0765  00F1               	movwf	??_Display_Led_Matrix
   784  0766                     u187:
   785  0766  0BF1               	decfsz	??_Display_Led_Matrix,f
   786  0767  2F66               	goto	u187
   787  0768  0BF2               	decfsz	??_Display_Led_Matrix+1,f
   788  0769  2F66               	goto	u187
   789  076A  0000               	nop
   790  076B                     l749:
   791                           
   792                           ;main_led_matrix.c: 66:         PORTB = 0xFF;
   793  076B  30FF               	movlw	255
   794  076C  1283               	bcf	3,5	;RP0=0, select bank0
   795  076D  1303               	bcf	3,6	;RP1=0, select bank0
   796  076E  0086               	movwf	6	;volatile
   797  076F                     l751:
   798                           
   799                           ;main_led_matrix.c: 67:         Code_Shift = (char)(Code_Shift << 1);
   800  076F  0876               	movf	Display_Led_Matrix@Code_Shift,w
   801  0770  00F1               	movwf	??_Display_Led_Matrix
   802  0771  0771               	addwf	??_Display_Led_Matrix,w
   803  0772  00F2               	movwf	??_Display_Led_Matrix+1
   804  0773  0872               	movf	??_Display_Led_Matrix+1,w
   805  0774  00F6               	movwf	Display_Led_Matrix@Code_Shift
   806  0775                     l753:
   807                           
   808                           ;main_led_matrix.c: 68:     }
   809  0775  3001               	movlw	1
   810  0776  00F1               	movwf	??_Display_Led_Matrix
   811  0777  0871               	movf	??_Display_Led_Matrix,w
   812  0778  07F7               	addwf	Display_Led_Matrix@i,f
   813  0779                     l755:
   814  0779  0875               	movf	Display_Led_Matrix@Index,w
   815  077A  3E07               	addlw	7
   816  077B  00F1               	movwf	??_Display_Led_Matrix
   817  077C  3000               	movlw	0
   818  077D  1803               	skipnc
   819  077E  3001               	movlw	1
   820  077F  00F2               	movwf	??_Display_Led_Matrix+1
   821  0780  0872               	movf	??_Display_Led_Matrix+1,w
   822  0781  3A80               	xorlw	128
   823  0782  00F3               	movwf	??_Display_Led_Matrix+2
   824  0783  3080               	movlw	128
   825  0784  0273               	subwf	??_Display_Led_Matrix+2,w
   826  0785  1D03               	skipz
   827  0786  2F89               	goto	u95
   828  0787  0877               	movf	Display_Led_Matrix@i,w
   829  0788  0271               	subwf	??_Display_Led_Matrix,w
   830  0789                     u95:
   831  0789  1803               	skipnc
   832  078A  2F8C               	goto	u91
   833  078B  2F8D               	goto	u90
   834  078C                     u91:
   835  078C  2F52               	goto	l741
   836  078D                     u90:
   837  078D                     l30:
   838  078D  0008               	return
   839  078E                     __end_of_Display_Led_Matrix:
   840  007E                     btemp	set	126	;btemp
   841  007E                     wtemp0	set	126
   842                           
   843                           	psect	config
   844                           
   845                           ;Config register CONFIG @ 0x2007
   846                           ;	Oscillator Selection bits
   847                           ;	FOSC = HS, HS oscillator
   848                           ;	Watchdog Timer Enable bit
   849                           ;	WDTE = OFF, WDT disabled
   850                           ;	Power-up Timer Enable bit
   851                           ;	PWRTE = ON, PWRT enabled
   852                           ;	Brown-out Reset Enable bit
   853                           ;	BOREN = ON, BOR enabled
   854                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   855                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   856                           ;	Data EEPROM Memory Code Protection bit
   857                           ;	CPD = OFF, Data EEPROM code protection off
   858                           ;	Flash Program Memory Write Enable bits
   859                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   860                           ;	In-Circuit Debugger Mode bit
   861                           ;	DEBUG = 0x1, unprogrammed default
   862                           ;	Flash Program Memory Code Protection bit
   863                           ;	CP = OFF, Code protection off
   864  2007                     	org	8199
   865  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     42      66
    BANK1            80      0      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 40
		 -> run_char@Array(BANK0[40]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 40
		 -> run_char@Array(BANK0[40]), 

    Display_Led_Matrix@array	PTR unsigned char  size(1) Largest target is 40
		 -> run_char@Array(BANK0[40]), hienThiViTriCoDinhN@Array(BANK0[24]), 


Critical Paths under _main in COMMON

    _main->_run_char
    _run_char->_Display_Led_Matrix

Critical Paths under _main in BANK0

    _main->_run_char

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     595
                           _run_char
 ---------------------------------------------------------------------------------
 (1) _run_char                                            46    46      0     595
                                              8 COMMON     4     4      0
                                              0 BANK0     42    42      0
                 _Display_Led_Matrix
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Display_Led_Matrix                                   8     7      1     333
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _run_char
     _Display_Led_Matrix
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      28       7       50.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      76      12        0.0%
ABS                  0      0      76       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Feb 13 20:12:39 2022

                           pc 0002                            l30 078D                            l49 07E0  
                          u90 078D                            u91 078C                            u95 0789  
                          fsr 0004                           l741 0752                           l751 076F  
                         l743 0756                           l753 0775                           l745 0760  
                         l737 074B                           l761 0713                           l747 0762  
                         l755 0779                           l739 074D                           l763 071B  
                         l771 07A7                           l749 076B                           l589 0721  
                         l757 070A                           l781 07BB                           l759 070F  
                         l783 07C1                           l767 078E                           l791 06CF  
                         l785 07C7                           l777 07A8                           l769 07A3  
                         l793 06D0                           l779 07B2                           l787 07CB  
                         l795 06D1                           l797 06D4                           l789 06CB  
                         l799 06D5                           u100 071B                           u101 071A  
                         u110 0796                           u120 07C7                           u121 07C6  
                         u130 07E0                           u131 07DF                           u177 07B6  
                         u187 0766                           fsr0 0004                           indf 0000  
      Display_Led_Matrix@Code 0074                          _main 06CB                          btemp 007E  
                        start 0000                         ?_main 0070                         _PORTB 0006  
                       _PORTC 0007                         _TRISB 0086                         _TRISC 0087  
     Display_Led_Matrix@Index 0075       Display_Led_Matrix@array 0070                         pclath 000A  
                       status 0003                         wtemp0 007E               __initialization 07E1  
                __end_of_main 06DE                        ??_main 007C   __size_of_Display_Led_Matrix 0044  
                      _ADCON1 009F                  run_char@F953 00A0                        _strlen 0709  
            __end_of_run_char 07E1       __end_of__initialization 07FC       hienThiViTriCoDinhN@F948 004A  
              __pcstackCOMMON 0070                  __pidataBANK0 06F1                  __pidataBANK1 0722  
                  __pmaintext 06CB                       ?_strlen 0070                 run_char@Array 0020  
               run_char@Index 0048           Display_Led_Matrix@i 0077                     ?_run_char 0070  
                     __ptext1 078E                       __ptext2 0709                       __ptext3 074A  
             __size_of_strlen 0019          end_of_initialization 07FC                    ??_run_char 0078  
                     strlen@s 0073    __end_of_Display_Led_Matrix 078E                __end_of_strlen 0722  
         start_initialization 07E1                    init_fetch0 06DE                   __pdataBANK0 004A  
                 __pdataBANK1 00A0                      ??_strlen 0072                     ___latbits 0002  
               __pcstackBANK0 0020             __size_of_run_char 0053  Display_Led_Matrix@Code_Shift 0076  
          _Display_Led_Matrix 074A           ?_Display_Led_Matrix 0070          ??_Display_Led_Matrix 0071  
               __size_of_main 0013                      _run_char 078E                     run_char@i 0049  
                    init_ram0 06E2                      strlen@cp 0074  
