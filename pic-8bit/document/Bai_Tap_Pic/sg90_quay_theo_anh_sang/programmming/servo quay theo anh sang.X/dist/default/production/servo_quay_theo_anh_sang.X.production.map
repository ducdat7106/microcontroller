Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\servo_quay_theo_anh_sang.X.production.sym \
  --cmf=dist/default/production\servo_quay_theo_anh_sang.X.production.cmf \
  -z -Q16F877A -oC:\Users\NGUYEN~1\AppData\Local\Temp\scto.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/servo_quay_theo_anh_sang.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\NGUYEN~1\AppData\Local\Temp\scto.o \
  dist/default/production\servo_quay_theo_anh_sang.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\NGUYEN~1\AppData\Local\Temp\scto.o
                end_init                             10       10        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\servo_quay_theo_anh_sang.X.production.o
                cinit                                13       13        9        8       0
                intentry                              4        4        C        8       0
                config                             2007     2007        1        0       4
                text14                              33B      33B       2C        8       0
                text13                              3FF      3FF        9      7C6       0
                text12                              307      307       34        8       0
                text11                              390      390       22        8       0
                text10                              3B2      3B2       1A        8       0
                text9                               3F2      3F2        D      7C6       0
                text8                               175      175       67        8       0
                text7                               1DC      1DC       58        8       0
                text6                               234      234       53        8       0
                text5                               287      287       46        8       0
                text4                               2CD      2CD       3A        8       0
                text3                                F5       F5       80        8       0
                text2                               367      367       29        8       0
                text1                               3E3      3E3        F      7C6       0
                maintext                             1C       1C       D9        8       0
                cstackBANK0                          20       20       28       20       1
                cstackCOMMON                         70       70        9       70       1
                bssBANK0                             48       48        1       20       1
                bssCOMMON                            79       79        2       70       1
                strings                             3CC      3CC       17      798       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        3         0
                cinit                                13       13        9         0
                intentry                              4        4        C         0
                reset_vec                             0        0        3         0
                text14                              33B      33B       2C         0
                text13                              3FF      3FF        9         0
                text12                              307      307       34         0
                text11                              390      390       22         0
                text10                              3B2      3B2       1A         0
                text9                               3F2      3F2        D         0
                text8                               175      175       67         0
                text7                               1DC      1DC       58         0
                text6                               234      234       53         0
                text5                               287      287       46         0
                text4                               2CD      2CD       3A         0
                text3                                F5       F5       80         0
                text2                               367      367       29         0
                text1                               3E3      3E3        F         0
                maintext                             1C       1C       D9         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             3CC      3CC       17         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        2         1

        CLASS   BANK0          
                cstackBANK0                          20       20       28         1
                bssBANK0                             48       48        1         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0003C8  0003CC         8       0  CODE        2
                cstackBANK0                    000020  000029  000049        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        0003CC  000017  0003E3       798       0  STRING      2
                text1                          0003E3  000025  000408       7C6       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0049-006F             27           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0408-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         0408-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0408-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0049-006F             27           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0408-1FFF           1BF8
        STRING           0003-0003              1           2
                         0408-1FFF            100

                                  Symbol Table

?_ADC_Read                 cstackCOMMON 0073
?___lwdiv                  cstackCOMMON 0073
?___lwmod                  cstackCOMMON 0073
ADC_Read@channel           cstackCOMMON 0077
LCD_CMD@CMD                cstackCOMMON 0076
LCD_DATA@Data              cstackCOMMON 0073
LCD_Set_Cursor@High4       cstackBANK0  0022
LCD_Set_Cursor@Low4        cstackBANK0  0021
LCD_Set_Cursor@Temp        cstackBANK0  0023
LCD_Set_Cursor@c           cstackCOMMON 0077
LCD_Set_Cursor@r           cstackBANK0  0020
LCD_Write_Char@Data        cstackCOMMON 0078
LCD_Write_Char@High4       cstackCOMMON 0077
LCD_Write_Char@Low4        cstackCOMMON 0076
LCD_Write_Number@c         cstackBANK0  003A
LCD_Write_Number@k         cstackBANK0  003B
LCD_Write_Number@num       cstackBANK0  0026
LCD_Write_Number@number    cstackBANK0  0023
LCD_Write_Number@p         cstackBANK0  003D
LCD_Write_String@i         cstackBANK0  0020
LCD_Write_String@str       cstackBANK0  0022
_ADCON0                    (abs)        001F
_ADCON1                    (abs)        009F
_ADC_Init                  text13       03FF
_ADC_Read                  text12       0307
_ADRESH                    (abs)        001E
_ADRESL                    (abs)        009E
_GIE                       (abs)        005F
_GO_nDONE                  (abs)        00FA
_LCD_CMD                   text10       03B2
_LCD_Clear                 text9        03F2
_LCD_DATA                  text11       0390
_LCD_Init                  text8        0175
_LCD_Set_Cursor            text7        01DC
_LCD_Write_Char            text6        0234
_LCD_Write_Number          text3        00F5
_LCD_Write_String          text2        0367
_PS0                       (abs)        0408
_PS1                       (abs)        0409
_PS2                       (abs)        040A
_PSA                       (abs)        040B
_RC2                       (abs)        003A
_RD2                       (abs)        0042
_RD3                       (abs)        0043
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_RD6                       (abs)        0046
_RD7                       (abs)        0047
_T0CS                      (abs)        040D
_T0SE                      (abs)        040C
_TMR0                      (abs)        0001
_TMR0IE                    (abs)        005D
_TMR0IF                    (abs)        005A
_TRISC2                    (abs)        043A
_TRISD                     (abs)        0088
_TRISD2                    (abs)        0442
_TRISD3                    (abs)        0443
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        001C
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0013
__Hfunctab                 functab      0000
__Hinit                    init         0010
__Hintentry                intentry     0010
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        0408
__Hspace_1                 (abs)        007B
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        400F
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        0013
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0010
__Lfunctab                 functab      0000
__Linit                    init         0010
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        0408
__S1                       (abs)        007B
__S2                       (abs)        0000
__S3                       (abs)        0000
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text5        0287
___lwdiv@counter           cstackBANK0  0020
___lwdiv@dividend          cstackCOMMON 0075
___lwdiv@divisor           cstackCOMMON 0073
___lwdiv@quotient          cstackBANK0  0021
___lwmod                   text4        02CD
___lwmod@counter           cstackCOMMON 0077
___lwmod@dividend          cstackCOMMON 0075
___lwmod@divisor           cstackCOMMON 0073
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
__end_of_ADC_Init          text13       0408
__end_of_ADC_Read          text12       033B
__end_of_LCD_CMD           text10       03CC
__end_of_LCD_Clear         text9        03FF
__end_of_LCD_DATA          text11       03B2
__end_of_LCD_Init          text8        01DC
__end_of_LCD_Set_Cursor    text7        0234
__end_of_LCD_Write_Char    text6        0287
__end_of_LCD_Write_Number  text3        0175
__end_of_LCD_Write_String  text2        0390
__end_of___lwdiv           text5        02CD
__end_of___lwmod           text4        0307
__end_of__initialization   cinit        0018
__end_of__stringtab        strings      03D2
__end_of_isr               text14       0367
__end_of_main              maintext     00F5
__end_of_timer0            text1        03F2
__initialization           cinit        0013
__pbssBANK0                bssBANK0     0048
__pbssCOMMON               bssCOMMON    0079
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     001C
__pstrings                 strings      03CC
__ptext1                   text1        03E3
__ptext10                  text10       03B2
__ptext11                  text11       0390
__ptext12                  text12       0307
__ptext13                  text13       03FF
__ptext14                  text14       033B
__ptext2                   text2        0367
__ptext3                   text3        00F5
__ptext4                   text4        02CD
__ptext5                   text5        0287
__ptext6                   text6        0234
__ptext7                   text7        01DC
__ptext8                   text8        0175
__ptext9                   text9        03F2
__size_of_ADC_Init         (abs)        0000
__size_of_ADC_Read         (abs)        0000
__size_of_LCD_CMD          (abs)        0000
__size_of_LCD_Clear        (abs)        0000
__size_of_LCD_DATA         (abs)        0000
__size_of_LCD_Init         (abs)        0000
__size_of_LCD_Set_Cursor   (abs)        0000
__size_of_LCD_Write_Char   (abs)        0000
__size_of_LCD_Write_Number (abs)        0000
__size_of_LCD_Write_String (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of_isr              (abs)        0000
__size_of_main             (abs)        0000
__size_of_timer0           (abs)        0000
__stringbase               strings      03D1
__stringtab                strings      03CC
_isr                       text14       033B
_main                      maintext     001C
_pulse_max                 bssCOMMON    007A
_pulse_top                 bssCOMMON    0079
_timer0                    text1        03E3
_top_value                 bssBANK0     0048
btemp                      (abs)        007E
end_of_initialization      cinit        0018
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
main@ldr_diff              cstackBANK0  0046
main@ldr_left              cstackBANK0  0042
main@ldr_right             cstackBANK0  0044
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
start                      init         0010
start_initialization       cinit        0013
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 85 in file "main_sg90.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ldr_diff        2   38[BANK0 ] int 
  ldr_right       2   36[BANK0 ] int 
  ldr_left        2   34[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ADC_Init
		_ADC_Read
		_LCD_Clear
		_LCD_Init
		_LCD_Set_Cursor
		_LCD_Write_Number
		_LCD_Write_String
		_timer0
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _timer0 *****************
 Defined at:
		line 43 in file "main_sg90.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_String *****************
 Defined at:
		line 73 in file "lcd.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR unsigned char 
		 -> STR_3(6), STR_2(6), STR_1(5), 
 Auto vars:     Size  Location     Type
  str             1    2[BANK0 ] PTR unsigned char 
		 -> STR_3(6), STR_2(6), STR_1(5), 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_Number *****************
 Defined at:
		line 92 in file "lcd.c"
 Parameters:    Size  Location     Type
  number          2    3[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  num            20    6[BANK0 ] unsigned int [10]
  p               2   29[BANK0 ] int 
  k               2   27[BANK0 ] int 
  c               1   26[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      25       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      28       0       0       0
Total ram usage:       28 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_Write_Char
		___lwdiv
		___lwmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] unsigned int 
  dividend        2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Write_Number
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] unsigned int 
  dividend        2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    1[BANK0 ] unsigned int 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       3       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Write_Number
 This function uses a non-reentrant model


 *************** function _LCD_Write_Char *****************
 Defined at:
		line 55 in file "lcd.c"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    8[COMMON] unsigned char 
  High4           1    7[COMMON] unsigned char 
  Low4            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_DATA
 This function is called by:
		_LCD_Write_String
		_LCD_Write_Number
 This function uses a non-reentrant model


 *************** function _LCD_Set_Cursor *****************
 Defined at:
		line 34 in file "lcd.c"
 Parameters:    Size  Location     Type
  r               1    wreg     unsigned char 
  c               1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  r               1    0[BANK0 ] unsigned char 
  Temp            1    3[BANK0 ] unsigned char 
  High4           1    2[BANK0 ] unsigned char 
  Low4            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       4       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_CMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 3 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_CMD
		_LCD_DATA
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 28 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_CMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_CMD *****************
 Defined at:
		line 146 in file "lcd.c"
 Parameters:    Size  Location     Type
  CMD             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  CMD             1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_DATA
 This function is called by:
		_LCD_Init
		_LCD_Clear
		_LCD_Set_Cursor
		_LCD_SL
		_LCD_SR
 This function uses a non-reentrant model


 *************** function _LCD_DATA *****************
 Defined at:
		line 123 in file "lcd.c"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_Init
		_LCD_Write_Char
		_LCD_CMD
 This function uses a non-reentrant model


 *************** function _ADC_Read *****************
 Defined at:
		line 30 in file "./adc.h"
 Parameters:    Size  Location     Type
  channel         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  channel         1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_Init *****************
 Defined at:
		line 16 in file "./adc.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 58 in file "main_sg90.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
main_sg90.c
		_timer0        		CODE           	03E3	0000	16
		_main          		CODE           	001C	0000	218
		_isr           		CODE           	033B	0000	45

main_sg90.c estimated size: 279

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	02CD	0000	59

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c estimated size: 59

shared
		__stringtab    		STRING         	03CC	0000	7
		__initialization		CODE           	0013	0000	6

shared estimated size: 13

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	0287	0000	71

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c estimated size: 71

lcd.c
		_LCD_Init      		CODE           	0175	0000	104
		_LCD_Write_Char		CODE           	0234	0000	84
		_LCD_CMD       		CODE           	03B2	0000	27
		_LCD_DATA      		CODE           	0390	0000	35
		_LCD_Set_Cursor		CODE           	01DC	0000	89
		_LCD_Clear     		CODE           	03F2	0000	14
		_LCD_Write_String		CODE           	0367	0000	42
		_LCD_Write_Number		CODE           	00F5	0000	129

lcd.c estimated size: 524

./adc.h
		_ADC_Read      		CODE           	0307	0000	53
		_ADC_Init      		CODE           	03FF	0000	10

./adc.h estimated size: 63

