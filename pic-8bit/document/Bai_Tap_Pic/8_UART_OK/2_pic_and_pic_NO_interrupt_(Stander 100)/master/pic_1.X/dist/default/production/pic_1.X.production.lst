

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 14 05:12:00 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303                           
   304                           	psect	idataBANK0
   305  02D4                     __pidataBANK0:
   306                           
   307                           ;initializer for main@F909
   308  02D4  3466               	retlw	102
   309  02D5  3404               	retlw	4
   310  02D6  3403               	retlw	3
   311  02D7  3411               	retlw	17
   312  02D8  3467               	retlw	103
   313  001A                     _RCREG	set	26
   314  0019                     _TXREG	set	25
   315  0008                     _PORTD	set	8
   316  0065                     _RCIF	set	101
   317  00C6                     _RX9	set	198
   318  00C4                     _CREN	set	196
   319  00C7                     _SPEN	set	199
   320  0032                     _RB2	set	50
   321  0043                     _RD3	set	67
   322  0042                     _RD2	set	66
   323  0047                     _RD7	set	71
   324  0046                     _RD6	set	70
   325  0045                     _RD5	set	69
   326  0044                     _RD4	set	68
   327  0099                     _SPBRG	set	153
   328  0086                     _TRISB	set	134
   329  009F                     _ADCON1	set	159
   330  0088                     _TRISD	set	136
   331  04C1                     _TRMT	set	1217
   332  04C6                     _TX9	set	1222
   333  04C5                     _TXEN	set	1221
   334  043E                     _TRISC6	set	1086
   335  043F                     _TRISC7	set	1087
   336  04C4                     _SYNC	set	1220
   337  04C2                     _BRGH	set	1218
   338  0443                     _TRISD3	set	1091
   339  0442                     _TRISD2	set	1090
   340                           
   341                           	psect	strings
   342  0003                     __pstrings:
   343  0003                     stringtab:
   344  0003                     __stringtab:
   345  0003                     stringcode:	
   346                           ;	String table - string pointers are 1 byte each
   347                           
   348  0003                     stringdir:
   349  0003  3000               	movlw	high stringdir
   350  0004  008A               	movwf	10
   351  0005  0804               	movf	4,w
   352  0006  0A84               	incf	4,f
   353  0007  0782               	addwf	2,f
   354  0008                     __stringbase:
   355  0008  3400               	retlw	0
   356  0009                     __end_of__stringtab:
   357  0009                     STR_2:
   358  0009  3420               	retlw	32	;' '
   359  000A  3400               	retlw	0
   360  000B                     STR_1:
   361  000B  3454               	retlw	84	;'T'
   362  000C  3400               	retlw	0
   363  0009                     
   364                           	psect	cinit
   365  07DC                     start_initialization:	
   366                           ; #config settings
   367                           
   368  07DC                     __initialization:
   369                           
   370                           ; Initialize objects allocated to BANK0
   371  07DC  120A  118A  22D4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   372  07E1  00D1               	movwf	__pdataBANK0& (0+127)
   373  07E2  120A  118A  22D5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   374  07E7  00D2               	movwf	(__pdataBANK0+1)& (0+127)
   375  07E8  120A  118A  22D6  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   376  07ED  00D3               	movwf	(__pdataBANK0+2)& (0+127)
   377  07EE  120A  118A  22D7  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   378  07F3  00D4               	movwf	(__pdataBANK0+3)& (0+127)
   379  07F4  120A  118A  22D8  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   380  07F9  00D5               	movwf	(__pdataBANK0+4)& (0+127)
   381                           
   382                           ; Clear objects allocated to BANK0
   383  07FA  01D6               	clrf	__pbssBANK0& (0+127)
   384  07FB  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   385  07FC                     end_of_initialization:	
   386                           ;End of C runtime variable initialization code
   387                           
   388  07FC                     __end_of__initialization:
   389  07FC  0183               	clrf	3
   390  07FD  120A  118A  2E9D   	ljmp	_main	;jump to C main() function
   391                           
   392                           	psect	bssBANK0
   393  0056                     __pbssBANK0:
   394  0056                     _i:
   395  0056                     	ds	2
   396                           
   397                           	psect	dataBANK0
   398  0051                     __pdataBANK0:
   399  0051                     main@F909:
   400  0051                     	ds	5
   401                           
   402                           	psect	cstackCOMMON
   403  0070                     __pcstackCOMMON:
   404  0070                     ?_UART_Write_Char:
   405  0070                     ??_UART_Write_Char:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_UART_Data_Ready:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_UART_Data_Ready:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_UART_Read_Char:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_UART_Read_Char:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_LCD_DATA:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_LCD_DATA:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_LCD_CMD:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_LCD_Init:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_LCD_Write_Char:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_LCD_Write_String:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?___lwdiv:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?___lwmod:	
   445                           ; 2 bytes @ 0x0
   446                           
   447  0070                     ?___lldiv:	
   448                           ; 2 bytes @ 0x0
   449                           
   450  0070                     LCD_DATA@Data:	
   451                           ; 4 bytes @ 0x0
   452                           
   453  0070                     UART_Write_Char@ch:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ___lwdiv@divisor:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ___lwmod@divisor:	
   460                           ; 2 bytes @ 0x0
   461                           
   462  0070                     ___lldiv@divisor:	
   463                           ; 2 bytes @ 0x0
   464                           
   465                           
   466                           ; 4 bytes @ 0x0
   467  0070                     	ds	1
   468  0071                     ??_LCD_CMD:
   469  0071                     ??_LCD_Write_Char:	
   470                           ; 1 bytes @ 0x1
   471                           
   472                           
   473                           ; 1 bytes @ 0x1
   474  0071                     	ds	1
   475  0072                     ___lwdiv@dividend:
   476  0072                     ___lwmod@dividend:	
   477                           ; 2 bytes @ 0x2
   478                           
   479                           
   480                           ; 2 bytes @ 0x2
   481  0072                     	ds	1
   482  0073                     LCD_CMD@CMD:
   483  0073                     LCD_Write_Char@Low4:	
   484                           ; 1 bytes @ 0x3
   485                           
   486                           
   487                           ; 1 bytes @ 0x3
   488  0073                     	ds	1
   489  0074                     ?_LCD_Set_Cursor:
   490  0074                     ??_LCD_Init:	
   491                           ; 1 bytes @ 0x4
   492                           
   493  0074                     ??___lwdiv:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0074                     ??___lwmod:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     LCD_Set_Cursor@c:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0074                     LCD_Write_Char@High4:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0074                     ___lldiv@dividend:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 4 bytes @ 0x4
   510  0074                     	ds	1
   511  0075                     ??_LCD_Set_Cursor:
   512  0075                     LCD_Write_Char@Data:	
   513                           ; 1 bytes @ 0x5
   514                           
   515  0075                     ___lwmod@counter:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0075                     ___lwdiv@quotient:	
   519                           ; 1 bytes @ 0x5
   520                           
   521                           
   522                           ; 2 bytes @ 0x5
   523  0075                     	ds	1
   524  0076                     ??_LCD_Write_String:
   525  0076                     LCD_Write_String@i:	
   526                           ; 1 bytes @ 0x6
   527                           
   528                           
   529                           ; 2 bytes @ 0x6
   530  0076                     	ds	1
   531  0077                     LCD_Set_Cursor@r:
   532  0077                     ___lwdiv@counter:	
   533                           ; 1 bytes @ 0x7
   534                           
   535                           
   536                           ; 1 bytes @ 0x7
   537  0077                     	ds	1
   538  0078                     ?_LCD_Write_Number:
   539  0078                     ??___lldiv:	
   540                           ; 1 bytes @ 0x8
   541                           
   542  0078                     LCD_Set_Cursor@Low4:	
   543                           ; 1 bytes @ 0x8
   544                           
   545  0078                     LCD_Write_String@str:	
   546                           ; 1 bytes @ 0x8
   547                           
   548  0078                     LCD_Write_Number@number:	
   549                           ; 1 bytes @ 0x8
   550                           
   551                           
   552                           ; 2 bytes @ 0x8
   553  0078                     	ds	1
   554  0079                     LCD_Set_Cursor@High4:
   555  0079                     ___lldiv@quotient:	
   556                           ; 1 bytes @ 0x9
   557                           
   558                           
   559                           ; 4 bytes @ 0x9
   560  0079                     	ds	1
   561  007A                     ??_LCD_Write_Number:
   562  007A                     LCD_Set_Cursor@Temp:	
   563                           ; 1 bytes @ 0xA
   564                           
   565                           
   566                           ; 1 bytes @ 0xA
   567  007A                     	ds	3
   568  007D                     ___lldiv@counter:
   569                           
   570                           ; 1 bytes @ 0xD
   571  007D                     	ds	1
   572                           
   573                           	psect	cstackBANK0
   574  0020                     __pcstackBANK0:
   575  0020                     ?_UART_Init:
   576  0020                     UART_Init@uart_baudRate:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0020                     LCD_Write_Number@num:	
   580                           ; 4 bytes @ 0x0
   581                           
   582                           
   583                           ; 20 bytes @ 0x0
   584  0020                     	ds	4
   585  0024                     ??_UART_Init:
   586                           
   587                           ; 1 bytes @ 0x4
   588  0024                     	ds	12
   589  0030                     UART_Init@x:
   590                           
   591                           ; 2 bytes @ 0x10
   592  0030                     	ds	4
   593  0034                     LCD_Write_Number@k:
   594                           
   595                           ; 2 bytes @ 0x14
   596  0034                     	ds	2
   597  0036                     LCD_Write_Number@c:
   598                           
   599                           ; 1 bytes @ 0x16
   600  0036                     	ds	1
   601  0037                     LCD_Write_Number@p:
   602                           
   603                           ; 2 bytes @ 0x17
   604  0037                     	ds	2
   605  0039                     ??_main:
   606                           
   607                           ; 1 bytes @ 0x19
   608  0039                     	ds	3
   609  003C                     main@r_data:
   610                           
   611                           ; 10 bytes @ 0x1C
   612  003C                     	ds	10
   613  0046                     main@w_data:
   614                           
   615                           ; 5 bytes @ 0x26
   616  0046                     	ds	5
   617  004B                     main@i:
   618                           
   619                           ; 2 bytes @ 0x2B
   620  004B                     	ds	2
   621  004D                     main@y:
   622                           
   623                           ; 2 bytes @ 0x2D
   624  004D                     	ds	2
   625  004F                     main@v:
   626                           
   627                           ; 2 bytes @ 0x2F
   628  004F                     	ds	2
   629                           
   630                           	psect	maintext
   631  069D                     __pmaintext:	
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 18 in file "main_master.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  y               2   45[BANK0 ] int 
   642 ;;  v               2   47[BANK0 ] int 
   643 ;;  i               2   43[BANK0 ] int 
   644 ;;  r_data         10   28[BANK0 ] unsigned char [10]
   645 ;;  w_data          5   38[BANK0 ] unsigned char [5]
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : B00/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0      21       0       0       0
   657 ;;      Temps:          0       3       0       0       0
   658 ;;      Totals:         0      24       0       0       0
   659 ;;Total ram usage:       24 bytes
   660 ;; Hardware stack levels required when called: 3
   661 ;; This function calls:
   662 ;;		_LCD_Init
   663 ;;		_LCD_Set_Cursor
   664 ;;		_LCD_Write_Number
   665 ;;		_LCD_Write_String
   666 ;;		_UART_Data_Ready
   667 ;;		_UART_Init
   668 ;;		_UART_Read_Char
   669 ;;		_UART_Write_Char
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _main
   677  069D                     _main:
   678  069D                     l1393:	
   679                           ;incstack = 0
   680                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   681                           
   682                           
   683                           ;main_master.c: 20:     ADCON1 = 0x07;
   684  069D  3007               	movlw	7
   685  069E  1683               	bsf	3,5	;RP0=1, select bank1
   686  069F  1303               	bcf	3,6	;RP1=0, select bank1
   687  06A0  009F               	movwf	31	;volatile
   688  06A1                     l1395:
   689                           
   690                           ;main_master.c: 21:     UART_Init(19200);
   691  06A1  3000               	movlw	0
   692  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   693  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   694  06A4  00A3               	movwf	UART_Init@uart_baudRate+3
   695  06A5  3000               	movlw	0
   696  06A6  00A2               	movwf	UART_Init@uart_baudRate+2
   697  06A7  304B               	movlw	75
   698  06A8  00A1               	movwf	UART_Init@uart_baudRate+1
   699  06A9  3000               	movlw	0
   700  06AA  00A0               	movwf	UART_Init@uart_baudRate
   701  06AB  120A  118A  25B7  120A  118A  	fcall	_UART_Init
   702  06B0                     l1397:
   703                           
   704                           ;main_master.c: 23:     LCD_Init();
   705  06B0  120A  118A  24DC  120A  118A  	fcall	_LCD_Init
   706  06B5                     l1399:
   707                           
   708                           ;main_master.c: 25:     char w_data[] ={0x66, 0x04, 0x03, 0x11, 0x67};
   709  06B5  3046               	movlw	main@w_data& (0+255)
   710  06B6  0084               	movwf	4
   711  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   712  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   713  06B9  0851               	movf	main@F909,w
   714  06BA  1383               	bcf	3,7	;select IRP bank0
   715  06BB  0080               	movwf	0
   716  06BC  0A84               	incf	4,f
   717  06BD  0852               	movf	main@F909+1,w
   718  06BE  0080               	movwf	0
   719  06BF  0A84               	incf	4,f
   720  06C0  0853               	movf	main@F909+2,w
   721  06C1  0080               	movwf	0
   722  06C2  0A84               	incf	4,f
   723  06C3  0854               	movf	main@F909+3,w
   724  06C4  0080               	movwf	0
   725  06C5  0A84               	incf	4,f
   726  06C6  0855               	movf	main@F909+4,w
   727  06C7  0080               	movwf	0
   728  06C8                     l1401:
   729                           
   730                           ;main_master.c: 26:     char r_data[10];;main_master.c: 28:     TRISB = 0x07;
   731  06C8  3007               	movlw	7
   732  06C9  1683               	bsf	3,5	;RP0=1, select bank1
   733  06CA  1303               	bcf	3,6	;RP1=0, select bank1
   734  06CB  0086               	movwf	6	;volatile
   735  06CC                     l1403:
   736                           
   737                           ;main_master.c: 29:     TRISD = 0x00;
   738  06CC  0188               	clrf	8	;volatile
   739  06CD                     l1405:
   740                           
   741                           ;main_master.c: 30:     PORTD = 0x00;
   742  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   743  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   744  06CF  0188               	clrf	8	;volatile
   745  06D0                     l1407:
   746                           
   747                           ;main_master.c: 33:     {;main_master.c: 34:         if (RB2 == 1)
   748  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   749  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   750  06D2  1D06               	btfss	6,2	;volatile
   751  06D3  2ED5               	goto	u961
   752  06D4  2ED6               	goto	u960
   753  06D5                     u961:
   754  06D5  2F0B               	goto	l1425
   755  06D6                     u960:
   756  06D6                     l109:
   757  06D6  1906               	btfsc	6,2	;volatile
   758  06D7  2ED9               	goto	u971
   759  06D8  2EDA               	goto	u970
   760  06D9                     u971:
   761  06D9  2ED6               	goto	l109
   762  06DA                     u970:
   763  06DA                     l1411:
   764                           
   765                           ;main_master.c: 37:             for(int y=0; y<6; y++)
   766  06DA  01CD               	clrf	main@y
   767  06DB  01CE               	clrf	main@y+1
   768  06DC                     l1417:
   769                           
   770                           ;main_master.c: 38:             {;main_master.c: 39:                 UART_Write_Char(w_d
      +                          ata[y]);
   771  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   772  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   773  06DE  084D               	movf	main@y,w
   774  06DF  3E46               	addlw	(low (main@w_data| 0))& (0+255)
   775  06E0  0084               	movwf	4
   776  06E1  1383               	bcf	3,7	;select IRP bank0
   777  06E2  0800               	movf	0,w
   778  06E3  120A  118A  22E7  120A  118A  	fcall	_UART_Write_Char
   779  06E8                     l1419:
   780                           
   781                           ;main_master.c: 40:                 _delay((unsigned long)((250)*(20000000/4000.0)));
   782  06E8  3007               	movlw	7
   783  06E9  1283               	bcf	3,5	;RP0=0, select bank0
   784  06EA  1303               	bcf	3,6	;RP1=0, select bank0
   785  06EB  00BB               	movwf	??_main+2
   786  06EC  3058               	movlw	88
   787  06ED  00BA               	movwf	??_main+1
   788  06EE  3059               	movlw	89
   789  06EF  00B9               	movwf	??_main
   790  06F0                     u1057:
   791  06F0  0BB9               	decfsz	??_main,f
   792  06F1  2EF0               	goto	u1057
   793  06F2  0BBA               	decfsz	??_main+1,f
   794  06F3  2EF0               	goto	u1057
   795  06F4  0BBB               	decfsz	??_main+2,f
   796  06F5  2EF0               	goto	u1057
   797  06F6                     l1421:
   798                           
   799                           ;main_master.c: 41:             }
   800  06F6  3001               	movlw	1
   801  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   802  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   803  06F9  07CD               	addwf	main@y,f
   804  06FA  1803               	skipnc
   805  06FB  0ACE               	incf	main@y+1,f
   806  06FC  3000               	movlw	0
   807  06FD  07CE               	addwf	main@y+1,f
   808  06FE                     l1423:
   809  06FE  084E               	movf	main@y+1,w
   810  06FF  3A80               	xorlw	128
   811  0700  00FF               	movwf	btemp+1
   812  0701  3080               	movlw	128
   813  0702  027F               	subwf	btemp+1,w
   814  0703  1D03               	skipz
   815  0704  2F07               	goto	u985
   816  0705  3006               	movlw	6
   817  0706  024D               	subwf	main@y,w
   818  0707                     u985:
   819  0707  1C03               	skipc
   820  0708  2F0A               	goto	u981
   821  0709  2F0B               	goto	u980
   822  070A                     u981:
   823  070A  2EDC               	goto	l1417
   824  070B                     u980:
   825  070B                     l1425:
   826                           
   827                           ;main_master.c: 43:         LCD_Set_Cursor(1,1);
   828  070B  01F4               	clrf	LCD_Set_Cursor@c
   829  070C  0AF4               	incf	LCD_Set_Cursor@c,f
   830  070D  3001               	movlw	1
   831  070E  120A  118A  23D2  120A  118A  	fcall	_LCD_Set_Cursor
   832  0713                     l1427:
   833                           
   834                           ;main_master.c: 44:         LCD_Write_String("T");
   835  0713  3003               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   836  0714  120A  118A  232F  120A  118A  	fcall	_LCD_Write_String
   837  0719                     l1429:
   838                           
   839                           ;main_master.c: 46:         LCD_Set_Cursor(1,2);
   840  0719  3002               	movlw	2
   841  071A  1283               	bcf	3,5	;RP0=0, select bank0
   842  071B  1303               	bcf	3,6	;RP1=0, select bank0
   843  071C  00B9               	movwf	??_main
   844  071D  0839               	movf	??_main,w
   845  071E  00F4               	movwf	LCD_Set_Cursor@c
   846  071F  3001               	movlw	1
   847  0720  120A  118A  23D2  120A  118A  	fcall	_LCD_Set_Cursor
   848  0725                     l1431:
   849                           
   850                           ;main_master.c: 48:         for(int i=0; w_data[i]!='\0';i++)
   851  0725  1283               	bcf	3,5	;RP0=0, select bank0
   852  0726  1303               	bcf	3,6	;RP1=0, select bank0
   853  0727  01CB               	clrf	main@i
   854  0728  01CC               	clrf	main@i+1
   855  0729  2F47               	goto	l1437
   856  072A                     l1433:
   857                           
   858                           ;main_master.c: 49:         {;main_master.c: 50:            LCD_Write_Number(w_data[i]);
   859  072A  084B               	movf	main@i,w
   860  072B  3E46               	addlw	(low (main@w_data| 0))& (0+255)
   861  072C  0084               	movwf	4
   862  072D  0800               	movf	0,w
   863  072E  00B9               	movwf	??_main
   864  072F  01BA               	clrf	??_main+1
   865  0730  0839               	movf	??_main,w
   866  0731  00F8               	movwf	LCD_Write_Number@number
   867  0732  083A               	movf	??_main+1,w
   868  0733  00F9               	movwf	LCD_Write_Number@number+1
   869  0734  120A  118A  2543  120A  118A  	fcall	_LCD_Write_Number
   870                           
   871                           ;main_master.c: 51:            LCD_Write_String(" ");
   872  0739  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   873  073A  120A  118A  232F  120A  118A  	fcall	_LCD_Write_String
   874  073F                     l1435:
   875                           
   876                           ;main_master.c: 52:         }
   877  073F  3001               	movlw	1
   878  0740  1283               	bcf	3,5	;RP0=0, select bank0
   879  0741  1303               	bcf	3,6	;RP1=0, select bank0
   880  0742  07CB               	addwf	main@i,f
   881  0743  1803               	skipnc
   882  0744  0ACC               	incf	main@i+1,f
   883  0745  3000               	movlw	0
   884  0746  07CC               	addwf	main@i+1,f
   885  0747                     l1437:
   886  0747  084B               	movf	main@i,w
   887  0748  3E46               	addlw	(low (main@w_data| 0))& (0+255)
   888  0749  0084               	movwf	4
   889  074A  1383               	bcf	3,7	;select IRP bank0
   890  074B  0800               	movf	0,w
   891  074C  1D03               	btfss	3,2
   892  074D  2F4F               	goto	u991
   893  074E  2F50               	goto	u990
   894  074F                     u991:
   895  074F  2F2A               	goto	l1433
   896  0750                     u990:
   897  0750                     l1439:
   898                           
   899                           ;main_master.c: 54:         if(UART_Data_Ready())
   900  0750  120A  118A  22D9  120A  118A  	fcall	_UART_Data_Ready
   901  0755  3A00               	xorlw	0
   902  0756  1903               	skipnz
   903  0757  2F59               	goto	u1001
   904  0758  2F5A               	goto	u1000
   905  0759                     u1001:
   906  0759  2F7F               	goto	l1449
   907  075A                     u1000:
   908  075A                     l1441:
   909                           
   910                           ;main_master.c: 55:         {;main_master.c: 57:             r_data[i] = UART_Read_Char(
      +                          );
   911  075A  120A  118A  22DF  120A  118A  	fcall	_UART_Read_Char
   912  075F  1283               	bcf	3,5	;RP0=0, select bank0
   913  0760  1303               	bcf	3,6	;RP1=0, select bank0
   914  0761  00B9               	movwf	??_main
   915  0762  0856               	movf	_i,w
   916  0763  3E3C               	addlw	(low (main@r_data| 0))& (0+255)
   917  0764  0084               	movwf	4
   918  0765  0839               	movf	??_main,w
   919  0766  1383               	bcf	3,7	;select IRP bank0
   920  0767  0080               	movwf	0
   921  0768                     l1443:
   922                           
   923                           ;main_master.c: 58:             i++;
   924  0768  3001               	movlw	1
   925  0769  07D6               	addwf	_i,f
   926  076A  1803               	skipnc
   927  076B  0AD7               	incf	_i+1,f
   928  076C  3000               	movlw	0
   929  076D  07D7               	addwf	_i+1,f
   930  076E                     l1445:
   931                           
   932                           ;main_master.c: 59:             if(i>5)
   933  076E  0857               	movf	_i+1,w
   934  076F  3A80               	xorlw	128
   935  0770  00FF               	movwf	btemp+1
   936  0771  3080               	movlw	128
   937  0772  027F               	subwf	btemp+1,w
   938  0773  1D03               	skipz
   939  0774  2F77               	goto	u1015
   940  0775  3006               	movlw	6
   941  0776  0256               	subwf	_i,w
   942  0777                     u1015:
   943  0777  1C03               	skipc
   944  0778  2F7A               	goto	u1011
   945  0779  2F7B               	goto	u1010
   946  077A                     u1011:
   947  077A  2F7F               	goto	l1449
   948  077B                     u1010:
   949  077B                     l1447:
   950                           
   951                           ;main_master.c: 60:                 i=0;
   952  077B  1283               	bcf	3,5	;RP0=0, select bank0
   953  077C  1303               	bcf	3,6	;RP1=0, select bank0
   954  077D  01D6               	clrf	_i
   955  077E  01D7               	clrf	_i+1
   956  077F                     l1449:
   957                           
   958                           ;main_master.c: 63:         _delay((unsigned long)((100)*(20000000/4000.0)));
   959  077F  3003               	movlw	3
   960  0780  1283               	bcf	3,5	;RP0=0, select bank0
   961  0781  1303               	bcf	3,6	;RP1=0, select bank0
   962  0782  00BB               	movwf	??_main+2
   963  0783  308A               	movlw	138
   964  0784  00BA               	movwf	??_main+1
   965  0785  3055               	movlw	85
   966  0786  00B9               	movwf	??_main
   967  0787                     u1067:
   968  0787  0BB9               	decfsz	??_main,f
   969  0788  2F87               	goto	u1067
   970  0789  0BBA               	decfsz	??_main+1,f
   971  078A  2F87               	goto	u1067
   972  078B  0BBB               	decfsz	??_main+2,f
   973  078C  2F87               	goto	u1067
   974  078D                     l1451:
   975                           
   976                           ;main_master.c: 64:         LCD_Set_Cursor(2,1);
   977  078D  01F4               	clrf	LCD_Set_Cursor@c
   978  078E  0AF4               	incf	LCD_Set_Cursor@c,f
   979  078F  3002               	movlw	2
   980  0790  120A  118A  23D2  120A  118A  	fcall	_LCD_Set_Cursor
   981  0795                     l1453:
   982                           
   983                           ;main_master.c: 65:         LCD_Write_String("T");
   984  0795  3003               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   985  0796  120A  118A  232F  120A  118A  	fcall	_LCD_Write_String
   986  079B                     l1455:
   987                           
   988                           ;main_master.c: 67:         LCD_Set_Cursor(2,2);
   989  079B  3002               	movlw	2
   990  079C  1283               	bcf	3,5	;RP0=0, select bank0
   991  079D  1303               	bcf	3,6	;RP1=0, select bank0
   992  079E  00B9               	movwf	??_main
   993  079F  0839               	movf	??_main,w
   994  07A0  00F4               	movwf	LCD_Set_Cursor@c
   995  07A1  3002               	movlw	2
   996  07A2  120A  118A  23D2  120A  118A  	fcall	_LCD_Set_Cursor
   997  07A7                     l1457:
   998                           
   999                           ;main_master.c: 69:             for(int v=0; v<6;v++)
  1000  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1001  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1002  07A9  01CF               	clrf	main@v
  1003  07AA  01D0               	clrf	main@v+1
  1004  07AB                     l1463:
  1005                           
  1006                           ;main_master.c: 70:             {;main_master.c: 71:                LCD_Write_Number(r_d
      +                          ata[v]);
  1007  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1008  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1009  07AD  084F               	movf	main@v,w
  1010  07AE  3E3C               	addlw	(low (main@r_data| 0))& (0+255)
  1011  07AF  0084               	movwf	4
  1012  07B0  1383               	bcf	3,7	;select IRP bank0
  1013  07B1  0800               	movf	0,w
  1014  07B2  00B9               	movwf	??_main
  1015  07B3  01BA               	clrf	??_main+1
  1016  07B4  0839               	movf	??_main,w
  1017  07B5  00F8               	movwf	LCD_Write_Number@number
  1018  07B6  083A               	movf	??_main+1,w
  1019  07B7  00F9               	movwf	LCD_Write_Number@number+1
  1020  07B8  120A  118A  2543  120A  118A  	fcall	_LCD_Write_Number
  1021                           
  1022                           ;main_master.c: 72:                LCD_Write_String(" ");
  1023  07BD  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1024  07BE  120A  118A  232F  120A  118A  	fcall	_LCD_Write_String
  1025  07C3                     l1465:
  1026                           
  1027                           ;main_master.c: 73:             }
  1028  07C3  3001               	movlw	1
  1029  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1030  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1031  07C6  07CF               	addwf	main@v,f
  1032  07C7  1803               	skipnc
  1033  07C8  0AD0               	incf	main@v+1,f
  1034  07C9  3000               	movlw	0
  1035  07CA  07D0               	addwf	main@v+1,f
  1036  07CB                     l1467:
  1037  07CB  0850               	movf	main@v+1,w
  1038  07CC  3A80               	xorlw	128
  1039  07CD  00FF               	movwf	btemp+1
  1040  07CE  3080               	movlw	128
  1041  07CF  027F               	subwf	btemp+1,w
  1042  07D0  1D03               	skipz
  1043  07D1  2FD4               	goto	u1025
  1044  07D2  3006               	movlw	6
  1045  07D3  024F               	subwf	main@v,w
  1046  07D4                     u1025:
  1047  07D4  1C03               	skipc
  1048  07D5  2FD7               	goto	u1021
  1049  07D6  2FD8               	goto	u1020
  1050  07D7                     u1021:
  1051  07D7  2FAB               	goto	l1463
  1052  07D8                     u1020:
  1053  07D8  2ED0               	goto	l1407
  1054  07D9  120A  118A  2800   	ljmp	start
  1055  07DC                     __end_of_main:
  1056                           
  1057                           	psect	text1
  1058  02E7                     __ptext1:	
  1059 ;; *************** function _UART_Write_Char *****************
  1060 ;; Defined at:
  1061 ;;		line 76 in file "uart_pic_pic.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  ch              1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  ch              1    0[COMMON] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0
  1078 ;;      Totals:         1       0       0       0       0
  1079 ;;Total ram usage:        1 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;;		_UART_Write_String
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _UART_Write_Char
  1091  02E7                     _UART_Write_Char:
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _UART_Write_Char: [wreg]
  1095                           ;UART_Write_Char@ch stored from wreg
  1096  02E7  00F0               	movwf	UART_Write_Char@ch
  1097  02E8                     l1373:
  1098  02E8                     l163:	
  1099                           ;uart_pic_pic.c: 76: void UART_Write_Char(char ch);uart_pic_pic.c: 77: {;uart_pic_pic.c:
      +                           78:   while(!TRMT);
  1100                           
  1101  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1102  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  1103  02EA  1C98               	btfss	24,1	;volatile
  1104  02EB  2AED               	goto	u941
  1105  02EC  2AEE               	goto	u940
  1106  02ED                     u941:
  1107  02ED  2AE8               	goto	l163
  1108  02EE                     u940:
  1109  02EE                     l1375:
  1110                           
  1111                           ;uart_pic_pic.c: 79:   TXREG = ch;
  1112  02EE  0870               	movf	UART_Write_Char@ch,w
  1113  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1114  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1115  02F1  0099               	movwf	25	;volatile
  1116  02F2                     l166:
  1117  02F2  0008               	return
  1118  02F3                     __end_of_UART_Write_Char:
  1119                           
  1120                           	psect	text2
  1121  02DF                     __ptext2:	
  1122 ;; *************** function _UART_Read_Char *****************
  1123 ;; Defined at:
  1124 ;;		line 115 in file "uart_pic_pic.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      unsigned char 
  1131 ;; Registers used:
  1132 ;;		wreg
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0
  1141 ;;      Totals:         0       0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;;		_UART_Read_String
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _UART_Read_Char
  1154  02DF                     _UART_Read_Char:
  1155  02DF                     l1381:	
  1156                           ;incstack = 0
  1157                           ; Regs used in _UART_Read_Char: [wreg]
  1158                           
  1159  02DF                     l178:	
  1160                           ;uart_pic_pic.c: 126:     while(RCIF==0);
  1161                           
  1162  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1163  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1164  02E1  1E8C               	btfss	12,5	;volatile
  1165  02E2  2AE4               	goto	u951
  1166  02E3  2AE5               	goto	u950
  1167  02E4                     u951:
  1168  02E4  2ADF               	goto	l178
  1169  02E5                     u950:
  1170  02E5                     l1383:
  1171                           
  1172                           ;uart_pic_pic.c: 128:     return RCREG;
  1173  02E5  081A               	movf	26,w	;volatile
  1174  02E6                     l181:
  1175  02E6  0008               	return
  1176  02E7                     __end_of_UART_Read_Char:
  1177                           
  1178                           	psect	text3
  1179  05B7                     __ptext3:	
  1180 ;; *************** function _UART_Init *****************
  1181 ;; Defined at:
  1182 ;;		line 15 in file "uart_pic_pic.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  uart_baudRat    4    0[BANK0 ] unsigned long 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  x               2   16[BANK0 ] unsigned int 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      unsigned char 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0, pclath, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       4       0       0       0
  1197 ;;      Locals:         0       2       0       0       0
  1198 ;;      Temps:          0      12       0       0       0
  1199 ;;      Totals:         0      18       0       0       0
  1200 ;;Total ram usage:       18 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 1
  1203 ;; This function calls:
  1204 ;;		___lldiv
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function _UART_Init
  1212  05B7                     _UART_Init:
  1213  05B7                     l1343:	
  1214                           ;incstack = 0
  1215                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1216                           
  1217                           
  1218                           ;uart_pic_pic.c: 15: char UART_Init( unsigned long uart_baudRate );uart_pic_pic.c: 16: {
      +                          ;uart_pic_pic.c: 17:     unsigned int x;;uart_pic_pic.c: 19:  x = (20000000 - uart_baudR
      +                          ate*64)/(uart_baudRate*64);
  1219  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1220  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1221  05B9  0820               	movf	UART_Init@uart_baudRate,w
  1222  05BA  00A4               	movwf	??_UART_Init
  1223  05BB  0821               	movf	UART_Init@uart_baudRate+1,w
  1224  05BC  00A5               	movwf	??_UART_Init+1
  1225  05BD  0822               	movf	UART_Init@uart_baudRate+2,w
  1226  05BE  00A6               	movwf	??_UART_Init+2
  1227  05BF  0823               	movf	UART_Init@uart_baudRate+3,w
  1228  05C0  00A7               	movwf	??_UART_Init+3
  1229  05C1  3006               	movlw	6
  1230  05C2                     u865:
  1231  05C2  1003               	clrc
  1232  05C3  0DA4               	rlf	??_UART_Init,f
  1233  05C4  0DA5               	rlf	??_UART_Init+1,f
  1234  05C5  0DA6               	rlf	??_UART_Init+2,f
  1235  05C6  0DA7               	rlf	??_UART_Init+3,f
  1236  05C7                     u860:
  1237  05C7  3EFF               	addlw	-1
  1238  05C8  1D03               	skipz
  1239  05C9  2DC2               	goto	u865
  1240  05CA  0827               	movf	??_UART_Init+3,w
  1241  05CB  00F3               	movwf	___lldiv@divisor+3
  1242  05CC  0826               	movf	??_UART_Init+2,w
  1243  05CD  00F2               	movwf	___lldiv@divisor+2
  1244  05CE  0825               	movf	??_UART_Init+1,w
  1245  05CF  00F1               	movwf	___lldiv@divisor+1
  1246  05D0  0824               	movf	??_UART_Init,w
  1247  05D1  00F0               	movwf	___lldiv@divisor
  1248  05D2  0820               	movf	UART_Init@uart_baudRate,w
  1249  05D3  00A8               	movwf	??_UART_Init+4
  1250  05D4  0821               	movf	UART_Init@uart_baudRate+1,w
  1251  05D5  00A9               	movwf	??_UART_Init+5
  1252  05D6  0822               	movf	UART_Init@uart_baudRate+2,w
  1253  05D7  00AA               	movwf	??_UART_Init+6
  1254  05D8  0823               	movf	UART_Init@uart_baudRate+3,w
  1255  05D9  00AB               	movwf	??_UART_Init+7
  1256  05DA  3006               	movlw	6
  1257  05DB                     u875:
  1258  05DB  1003               	clrc
  1259  05DC  0DA8               	rlf	??_UART_Init+4,f
  1260  05DD  0DA9               	rlf	??_UART_Init+5,f
  1261  05DE  0DAA               	rlf	??_UART_Init+6,f
  1262  05DF  0DAB               	rlf	??_UART_Init+7,f
  1263  05E0                     u870:
  1264  05E0  3EFF               	addlw	-1
  1265  05E1  1D03               	skipz
  1266  05E2  2DDB               	goto	u875
  1267  05E3  3000               	movlw	0
  1268  05E4  00AC               	movwf	??_UART_Init+8
  1269  05E5  302D               	movlw	45
  1270  05E6  00AD               	movwf	??_UART_Init+9
  1271  05E7  3031               	movlw	49
  1272  05E8  00AE               	movwf	??_UART_Init+10
  1273  05E9  3001               	movlw	1
  1274  05EA  00AF               	movwf	??_UART_Init+11
  1275  05EB  0828               	movf	??_UART_Init+4,w
  1276  05EC  02AC               	subwf	??_UART_Init+8,f
  1277  05ED  0829               	movf	??_UART_Init+5,w
  1278  05EE  1C03               	skipc
  1279  05EF  0F29               	incfsz	??_UART_Init+5,w
  1280  05F0  2DF2               	goto	u881
  1281  05F1  2DF3               	goto	u882
  1282  05F2                     u881:
  1283  05F2  02AD               	subwf	??_UART_Init+9,f
  1284  05F3                     u882:
  1285  05F3  082A               	movf	??_UART_Init+6,w
  1286  05F4  1C03               	skipc
  1287  05F5  0F2A               	incfsz	??_UART_Init+6,w
  1288  05F6  2DF8               	goto	u883
  1289  05F7  2DF9               	goto	u884
  1290  05F8                     u883:
  1291  05F8  02AE               	subwf	??_UART_Init+10,f
  1292  05F9                     u884:
  1293  05F9  082B               	movf	??_UART_Init+7,w
  1294  05FA  1C03               	skipc
  1295  05FB  0F2B               	incfsz	??_UART_Init+7,w
  1296  05FC  2DFE               	goto	u885
  1297  05FD  2DFF               	goto	u886
  1298  05FE                     u885:
  1299  05FE  02AF               	subwf	??_UART_Init+11,f
  1300  05FF                     u886:
  1301  05FF  082F               	movf	??_UART_Init+11,w
  1302  0600  00F7               	movwf	___lldiv@dividend+3
  1303  0601  082E               	movf	??_UART_Init+10,w
  1304  0602  00F6               	movwf	___lldiv@dividend+2
  1305  0603  082D               	movf	??_UART_Init+9,w
  1306  0604  00F5               	movwf	___lldiv@dividend+1
  1307  0605  082C               	movf	??_UART_Init+8,w
  1308  0606  00F4               	movwf	___lldiv@dividend
  1309  0607  120A  118A  2476  120A  118A  	fcall	___lldiv
  1310  060C  0871               	movf	?___lldiv+1,w
  1311  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1312  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1313  060F  00B1               	movwf	UART_Init@x+1
  1314  0610  0870               	movf	?___lldiv,w
  1315  0611  00B0               	movwf	UART_Init@x
  1316  0612                     l1345:
  1317                           
  1318                           ;uart_pic_pic.c: 20:  if(x>255)
  1319  0612  3001               	movlw	1
  1320  0613  0231               	subwf	UART_Init@x+1,w
  1321  0614  3000               	movlw	0
  1322  0615  1903               	skipnz
  1323  0616  0230               	subwf	UART_Init@x,w
  1324  0617  1C03               	skipc
  1325  0618  2E1A               	goto	u891
  1326  0619  2E1B               	goto	u890
  1327  061A                     u891:
  1328  061A  2E78               	goto	l154
  1329  061B                     u890:
  1330  061B                     l1347:
  1331                           
  1332                           ;uart_pic_pic.c: 21:  {;uart_pic_pic.c: 22:   x = (20000000 - uart_baudRate*16)/(uart_ba
      +                          udRate*16);
  1333  061B  0820               	movf	UART_Init@uart_baudRate,w
  1334  061C  00A4               	movwf	??_UART_Init
  1335  061D  0821               	movf	UART_Init@uart_baudRate+1,w
  1336  061E  00A5               	movwf	??_UART_Init+1
  1337  061F  0822               	movf	UART_Init@uart_baudRate+2,w
  1338  0620  00A6               	movwf	??_UART_Init+2
  1339  0621  0823               	movf	UART_Init@uart_baudRate+3,w
  1340  0622  00A7               	movwf	??_UART_Init+3
  1341  0623  3004               	movlw	4
  1342  0624                     u905:
  1343  0624  1003               	clrc
  1344  0625  0DA4               	rlf	??_UART_Init,f
  1345  0626  0DA5               	rlf	??_UART_Init+1,f
  1346  0627  0DA6               	rlf	??_UART_Init+2,f
  1347  0628  0DA7               	rlf	??_UART_Init+3,f
  1348  0629                     u900:
  1349  0629  3EFF               	addlw	-1
  1350  062A  1D03               	skipz
  1351  062B  2E24               	goto	u905
  1352  062C  0827               	movf	??_UART_Init+3,w
  1353  062D  00F3               	movwf	___lldiv@divisor+3
  1354  062E  0826               	movf	??_UART_Init+2,w
  1355  062F  00F2               	movwf	___lldiv@divisor+2
  1356  0630  0825               	movf	??_UART_Init+1,w
  1357  0631  00F1               	movwf	___lldiv@divisor+1
  1358  0632  0824               	movf	??_UART_Init,w
  1359  0633  00F0               	movwf	___lldiv@divisor
  1360  0634  0820               	movf	UART_Init@uart_baudRate,w
  1361  0635  00A8               	movwf	??_UART_Init+4
  1362  0636  0821               	movf	UART_Init@uart_baudRate+1,w
  1363  0637  00A9               	movwf	??_UART_Init+5
  1364  0638  0822               	movf	UART_Init@uart_baudRate+2,w
  1365  0639  00AA               	movwf	??_UART_Init+6
  1366  063A  0823               	movf	UART_Init@uart_baudRate+3,w
  1367  063B  00AB               	movwf	??_UART_Init+7
  1368  063C  3004               	movlw	4
  1369  063D                     u915:
  1370  063D  1003               	clrc
  1371  063E  0DA8               	rlf	??_UART_Init+4,f
  1372  063F  0DA9               	rlf	??_UART_Init+5,f
  1373  0640  0DAA               	rlf	??_UART_Init+6,f
  1374  0641  0DAB               	rlf	??_UART_Init+7,f
  1375  0642                     u910:
  1376  0642  3EFF               	addlw	-1
  1377  0643  1D03               	skipz
  1378  0644  2E3D               	goto	u915
  1379  0645  3000               	movlw	0
  1380  0646  00AC               	movwf	??_UART_Init+8
  1381  0647  302D               	movlw	45
  1382  0648  00AD               	movwf	??_UART_Init+9
  1383  0649  3031               	movlw	49
  1384  064A  00AE               	movwf	??_UART_Init+10
  1385  064B  3001               	movlw	1
  1386  064C  00AF               	movwf	??_UART_Init+11
  1387  064D  0828               	movf	??_UART_Init+4,w
  1388  064E  02AC               	subwf	??_UART_Init+8,f
  1389  064F  0829               	movf	??_UART_Init+5,w
  1390  0650  1C03               	skipc
  1391  0651  0F29               	incfsz	??_UART_Init+5,w
  1392  0652  2E54               	goto	u921
  1393  0653  2E55               	goto	u922
  1394  0654                     u921:
  1395  0654  02AD               	subwf	??_UART_Init+9,f
  1396  0655                     u922:
  1397  0655  082A               	movf	??_UART_Init+6,w
  1398  0656  1C03               	skipc
  1399  0657  0F2A               	incfsz	??_UART_Init+6,w
  1400  0658  2E5A               	goto	u923
  1401  0659  2E5B               	goto	u924
  1402  065A                     u923:
  1403  065A  02AE               	subwf	??_UART_Init+10,f
  1404  065B                     u924:
  1405  065B  082B               	movf	??_UART_Init+7,w
  1406  065C  1C03               	skipc
  1407  065D  0F2B               	incfsz	??_UART_Init+7,w
  1408  065E  2E60               	goto	u925
  1409  065F  2E61               	goto	u926
  1410  0660                     u925:
  1411  0660  02AF               	subwf	??_UART_Init+11,f
  1412  0661                     u926:
  1413  0661  082F               	movf	??_UART_Init+11,w
  1414  0662  00F7               	movwf	___lldiv@dividend+3
  1415  0663  082E               	movf	??_UART_Init+10,w
  1416  0664  00F6               	movwf	___lldiv@dividend+2
  1417  0665  082D               	movf	??_UART_Init+9,w
  1418  0666  00F5               	movwf	___lldiv@dividend+1
  1419  0667  082C               	movf	??_UART_Init+8,w
  1420  0668  00F4               	movwf	___lldiv@dividend
  1421  0669  120A  118A  2476  120A  118A  	fcall	___lldiv
  1422  066E  0871               	movf	?___lldiv+1,w
  1423  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0671  00B1               	movwf	UART_Init@x+1
  1426  0672  0870               	movf	?___lldiv,w
  1427  0673  00B0               	movwf	UART_Init@x
  1428  0674                     l1349:
  1429                           
  1430                           ;uart_pic_pic.c: 23:   BRGH = 1;
  1431  0674  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0675  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0676  1518               	bsf	24,2	;volatile
  1434                           
  1435                           ;uart_pic_pic.c: 24:  }
  1436  0677  2E7B               	goto	l1351
  1437  0678                     l154:	
  1438                           ;uart_pic_pic.c: 25:  else
  1439                           
  1440                           
  1441                           ;uart_pic_pic.c: 26:   BRGH = 0;
  1442  0678  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0679  1303               	bcf	3,6	;RP1=0, select bank1
  1444  067A  1118               	bcf	24,2	;volatile
  1445  067B                     l1351:
  1446                           
  1447                           ;uart_pic_pic.c: 28:  if(x<255)
  1448  067B  3000               	movlw	0
  1449  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1450  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1451  067E  0231               	subwf	UART_Init@x+1,w
  1452  067F  30FF               	movlw	255
  1453  0680  1903               	skipnz
  1454  0681  0230               	subwf	UART_Init@x,w
  1455  0682  1803               	skipnc
  1456  0683  2E85               	goto	u931
  1457  0684  2E86               	goto	u930
  1458  0685                     u931:
  1459  0685  2E9C               	goto	l157
  1460  0686                     u930:
  1461  0686                     l1353:
  1462                           
  1463                           ;uart_pic_pic.c: 29:  {;uart_pic_pic.c: 30:    SPBRG = x;
  1464  0686  0830               	movf	UART_Init@x,w
  1465  0687  1683               	bsf	3,5	;RP0=1, select bank1
  1466  0688  1303               	bcf	3,6	;RP1=0, select bank1
  1467  0689  0099               	movwf	25	;volatile
  1468  068A                     l1355:
  1469                           
  1470                           ;uart_pic_pic.c: 33:    SYNC = 0;
  1471  068A  1218               	bcf	24,4	;volatile
  1472  068B                     l1357:
  1473                           
  1474                           ;uart_pic_pic.c: 34:    SPEN = 1;
  1475  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1476  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1477  068D  1798               	bsf	24,7	;volatile
  1478  068E                     l1359:
  1479                           
  1480                           ;uart_pic_pic.c: 37:    TRISC7 = 1;
  1481  068E  1683               	bsf	3,5	;RP0=1, select bank1
  1482  068F  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0690  1787               	bsf	7,7	;volatile
  1484  0691                     l1361:
  1485                           
  1486                           ;uart_pic_pic.c: 38:   TRISC6 = 1;
  1487  0691  1707               	bsf	7,6	;volatile
  1488  0692                     l1363:
  1489                           
  1490                           ;uart_pic_pic.c: 51:    TXEN = 1;
  1491  0692  1698               	bsf	24,5	;volatile
  1492  0693                     l1365:
  1493                           
  1494                           ;uart_pic_pic.c: 52:   CREN = 1;
  1495  0693  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0694  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0695  1618               	bsf	24,4	;volatile
  1498  0696                     l1367:
  1499                           
  1500                           ;uart_pic_pic.c: 54:     TX9 = 0;
  1501  0696  1683               	bsf	3,5	;RP0=1, select bank1
  1502  0697  1303               	bcf	3,6	;RP1=0, select bank1
  1503  0698  1318               	bcf	24,6	;volatile
  1504  0699                     l1369:
  1505                           
  1506                           ;uart_pic_pic.c: 55:     RX9 = 0;
  1507  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1508  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1509  069B  1318               	bcf	24,6	;volatile
  1510  069C                     l157:
  1511  069C  0008               	return
  1512  069D                     __end_of_UART_Init:
  1513                           
  1514                           	psect	text4
  1515  0476                     __ptext4:	
  1516 ;; *************** function ___lldiv *****************
  1517 ;; Defined at:
  1518 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  divisor         4    0[COMMON] unsigned long 
  1521 ;;  dividend        4    4[COMMON] unsigned long 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  quotient        4    9[COMMON] unsigned long 
  1524 ;;  counter         1   13[COMMON] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  4    0[COMMON] unsigned long 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1534 ;;      Params:         8       0       0       0       0
  1535 ;;      Locals:         5       0       0       0       0
  1536 ;;      Temps:          1       0       0       0       0
  1537 ;;      Totals:        14       0       0       0       0
  1538 ;;Total ram usage:       14 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_UART_Init
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function ___lldiv
  1549  0476                     ___lldiv:
  1550  0476                     l1177:	
  1551                           ;incstack = 0
  1552                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1553                           
  1554  0476  3000               	movlw	0
  1555  0477  00FC               	movwf	___lldiv@quotient+3
  1556  0478  3000               	movlw	0
  1557  0479  00FB               	movwf	___lldiv@quotient+2
  1558  047A  3000               	movlw	0
  1559  047B  00FA               	movwf	___lldiv@quotient+1
  1560  047C  3000               	movlw	0
  1561  047D  00F9               	movwf	___lldiv@quotient
  1562  047E  0873               	movf	___lldiv@divisor+3,w
  1563  047F  0472               	iorwf	___lldiv@divisor+2,w
  1564  0480  0471               	iorwf	___lldiv@divisor+1,w
  1565  0481  0470               	iorwf	___lldiv@divisor,w
  1566  0482  1903               	skipnz
  1567  0483  2C85               	goto	u581
  1568  0484  2C86               	goto	u580
  1569  0485                     u581:
  1570  0485  2CD3               	goto	l1197
  1571  0486                     u580:
  1572  0486                     l1179:
  1573  0486  01FD               	clrf	___lldiv@counter
  1574  0487  0AFD               	incf	___lldiv@counter,f
  1575  0488  2C96               	goto	l1183
  1576  0489                     l1181:
  1577  0489  3001               	movlw	1
  1578  048A  00F8               	movwf	??___lldiv
  1579  048B                     u595:
  1580  048B  1003               	clrc
  1581  048C  0DF0               	rlf	___lldiv@divisor,f
  1582  048D  0DF1               	rlf	___lldiv@divisor+1,f
  1583  048E  0DF2               	rlf	___lldiv@divisor+2,f
  1584  048F  0DF3               	rlf	___lldiv@divisor+3,f
  1585  0490  0BF8               	decfsz	??___lldiv,f
  1586  0491  2C8B               	goto	u595
  1587  0492  3001               	movlw	1
  1588  0493  00F8               	movwf	??___lldiv
  1589  0494  0878               	movf	??___lldiv,w
  1590  0495  07FD               	addwf	___lldiv@counter,f
  1591  0496                     l1183:
  1592  0496  1FF3               	btfss	___lldiv@divisor+3,7
  1593  0497  2C99               	goto	u601
  1594  0498  2C9A               	goto	u600
  1595  0499                     u601:
  1596  0499  2C89               	goto	l1181
  1597  049A                     u600:
  1598  049A                     l1185:
  1599  049A  3001               	movlw	1
  1600  049B  00F8               	movwf	??___lldiv
  1601  049C                     u615:
  1602  049C  1003               	clrc
  1603  049D  0DF9               	rlf	___lldiv@quotient,f
  1604  049E  0DFA               	rlf	___lldiv@quotient+1,f
  1605  049F  0DFB               	rlf	___lldiv@quotient+2,f
  1606  04A0  0DFC               	rlf	___lldiv@quotient+3,f
  1607  04A1  0BF8               	decfsz	??___lldiv,f
  1608  04A2  2C9C               	goto	u615
  1609  04A3                     l1187:
  1610  04A3  0873               	movf	___lldiv@divisor+3,w
  1611  04A4  0277               	subwf	___lldiv@dividend+3,w
  1612  04A5  1D03               	skipz
  1613  04A6  2CB1               	goto	u625
  1614  04A7  0872               	movf	___lldiv@divisor+2,w
  1615  04A8  0276               	subwf	___lldiv@dividend+2,w
  1616  04A9  1D03               	skipz
  1617  04AA  2CB1               	goto	u625
  1618  04AB  0871               	movf	___lldiv@divisor+1,w
  1619  04AC  0275               	subwf	___lldiv@dividend+1,w
  1620  04AD  1D03               	skipz
  1621  04AE  2CB1               	goto	u625
  1622  04AF  0870               	movf	___lldiv@divisor,w
  1623  04B0  0274               	subwf	___lldiv@dividend,w
  1624  04B1                     u625:
  1625  04B1  1C03               	skipc
  1626  04B2  2CB4               	goto	u621
  1627  04B3  2CB5               	goto	u620
  1628  04B4                     u621:
  1629  04B4  2CC4               	goto	l1193
  1630  04B5                     u620:
  1631  04B5                     l1189:
  1632  04B5  0870               	movf	___lldiv@divisor,w
  1633  04B6  02F4               	subwf	___lldiv@dividend,f
  1634  04B7  0871               	movf	___lldiv@divisor+1,w
  1635  04B8  1C03               	skipc
  1636  04B9  0F71               	incfsz	___lldiv@divisor+1,w
  1637  04BA  02F5               	subwf	___lldiv@dividend+1,f
  1638  04BB  0872               	movf	___lldiv@divisor+2,w
  1639  04BC  1C03               	skipc
  1640  04BD  0F72               	incfsz	___lldiv@divisor+2,w
  1641  04BE  02F6               	subwf	___lldiv@dividend+2,f
  1642  04BF  0873               	movf	___lldiv@divisor+3,w
  1643  04C0  1C03               	skipc
  1644  04C1  0F73               	incfsz	___lldiv@divisor+3,w
  1645  04C2  02F7               	subwf	___lldiv@dividend+3,f
  1646  04C3                     l1191:
  1647  04C3  1479               	bsf	___lldiv@quotient,0
  1648  04C4                     l1193:
  1649  04C4  3001               	movlw	1
  1650  04C5                     u635:
  1651  04C5  1003               	clrc
  1652  04C6  0CF3               	rrf	___lldiv@divisor+3,f
  1653  04C7  0CF2               	rrf	___lldiv@divisor+2,f
  1654  04C8  0CF1               	rrf	___lldiv@divisor+1,f
  1655  04C9  0CF0               	rrf	___lldiv@divisor,f
  1656  04CA  3EFF               	addlw	-1
  1657  04CB  1D03               	skipz
  1658  04CC  2CC5               	goto	u635
  1659  04CD                     l1195:
  1660  04CD  3001               	movlw	1
  1661  04CE  02FD               	subwf	___lldiv@counter,f
  1662  04CF  1D03               	btfss	3,2
  1663  04D0  2CD2               	goto	u641
  1664  04D1  2CD3               	goto	u640
  1665  04D2                     u641:
  1666  04D2  2C9A               	goto	l1185
  1667  04D3                     u640:
  1668  04D3                     l1197:
  1669  04D3  087C               	movf	___lldiv@quotient+3,w
  1670  04D4  00F3               	movwf	?___lldiv+3
  1671  04D5  087B               	movf	___lldiv@quotient+2,w
  1672  04D6  00F2               	movwf	?___lldiv+2
  1673  04D7  087A               	movf	___lldiv@quotient+1,w
  1674  04D8  00F1               	movwf	?___lldiv+1
  1675  04D9  0879               	movf	___lldiv@quotient,w
  1676  04DA  00F0               	movwf	?___lldiv
  1677  04DB                     l309:
  1678  04DB  0008               	return
  1679  04DC                     __end_of___lldiv:
  1680                           
  1681                           	psect	text5
  1682  02D9                     __ptext5:	
  1683 ;; *************** function _UART_Data_Ready *****************
  1684 ;; Defined at:
  1685 ;;		line 104 in file "uart_pic_pic.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      unsigned char 
  1692 ;; Registers used:
  1693 ;;		wreg
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _UART_Data_Ready
  1714  02D9                     _UART_Data_Ready:
  1715  02D9                     l1377:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _UART_Data_Ready: [wreg]
  1718                           
  1719                           
  1720                           ;uart_pic_pic.c: 106:     return RCIF;
  1721  02D9  3000               	movlw	0
  1722  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1723  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1724  02DC  1A8C               	btfsc	12,5	;volatile
  1725  02DD  3001               	movlw	1
  1726  02DE                     l175:
  1727  02DE  0008               	return
  1728  02DF                     __end_of_UART_Data_Ready:
  1729                           
  1730                           	psect	text6
  1731  032F                     __ptext6:	
  1732 ;; *************** function _LCD_Write_String *****************
  1733 ;; Defined at:
  1734 ;;		line 144 in file "lcd.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  str             1    wreg     PTR unsigned char 
  1737 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  str             1    8[COMMON] PTR unsigned char 
  1740 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1741 ;;  i               2    6[COMMON] int 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         3       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0
  1754 ;;      Totals:         3       0       0       0       0
  1755 ;;Total ram usage:        3 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 2
  1758 ;; This function calls:
  1759 ;;		_LCD_Write_Char
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _LCD_Write_String
  1767  032F                     _LCD_Write_String:
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1771                           ;LCD_Write_String@str stored from wreg
  1772  032F  00F8               	movwf	LCD_Write_String@str
  1773  0330                     l1305:
  1774                           
  1775                           ;lcd.c: 144: void LCD_Write_String(char *str);lcd.c: 145: {;lcd.c: 146:   int i;;lcd.c: 
      +                          147:   for(i=0;str[i]!='\0';i++)
  1776  0330  01F6               	clrf	LCD_Write_String@i
  1777  0331  01F7               	clrf	LCD_Write_String@i+1
  1778  0332  2B46               	goto	l1311
  1779  0333                     l1307:
  1780                           
  1781                           ;lcd.c: 148:     LCD_Write_Char(str[i]);
  1782  0333  0876               	movf	LCD_Write_String@i,w
  1783  0334  0778               	addwf	LCD_Write_String@str,w
  1784  0335  0084               	movwf	4
  1785  0336  120A  118A  2003  120A  118A  	fcall	stringdir
  1786  033B  120A  118A  2423  120A  118A  	fcall	_LCD_Write_Char
  1787  0340                     l1309:
  1788  0340  3001               	movlw	1
  1789  0341  07F6               	addwf	LCD_Write_String@i,f
  1790  0342  1803               	skipnc
  1791  0343  0AF7               	incf	LCD_Write_String@i+1,f
  1792  0344  3000               	movlw	0
  1793  0345  07F7               	addwf	LCD_Write_String@i+1,f
  1794  0346                     l1311:
  1795  0346  0876               	movf	LCD_Write_String@i,w
  1796  0347  0778               	addwf	LCD_Write_String@str,w
  1797  0348  0084               	movwf	4
  1798  0349  120A  118A  2003  120A  118A  	fcall	stringdir
  1799  034E  3A00               	xorlw	0
  1800  034F  1D03               	skipz
  1801  0350  2B52               	goto	u821
  1802  0351  2B53               	goto	u820
  1803  0352                     u821:
  1804  0352  2B33               	goto	l1307
  1805  0353                     u820:
  1806  0353                     l54:
  1807  0353  0008               	return
  1808  0354                     __end_of_LCD_Write_String:
  1809                           
  1810                           	psect	text7
  1811  0543                     __ptext7:	
  1812 ;; *************** function _LCD_Write_Number *****************
  1813 ;; Defined at:
  1814 ;;		line 151 in file "lcd.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  number          2    8[COMMON] unsigned int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  num            20    0[BANK0 ] int [10]
  1819 ;;  p               2   23[BANK0 ] int 
  1820 ;;  k               2   20[BANK0 ] unsigned int 
  1821 ;;  c               1   22[BANK0 ] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         2       0       0       0       0
  1832 ;;      Locals:         0      25       0       0       0
  1833 ;;      Temps:          2       0       0       0       0
  1834 ;;      Totals:         4      25       0       0       0
  1835 ;;Total ram usage:       29 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 2
  1838 ;; This function calls:
  1839 ;;		_LCD_Write_Char
  1840 ;;		___lwdiv
  1841 ;;		___lwmod
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _LCD_Write_Number
  1849  0543                     _LCD_Write_Number:
  1850  0543                     l1313:	
  1851                           ;incstack = 0
  1852                           ; Regs used in _LCD_Write_Number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1853                           
  1854                           
  1855                           ;lcd.c: 151: void LCD_Write_Number(unsigned int number);lcd.c: 152: {;lcd.c: 153:     in
      +                          t num[10];;lcd.c: 154:     unsigned char c;;lcd.c: 155:     int p;;lcd.c: 156:     unsig
      +                          ned int k=0;
  1856  0543  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0544  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0545  01B4               	clrf	LCD_Write_Number@k
  1859  0546  01B5               	clrf	LCD_Write_Number@k+1
  1860  0547                     l1315:
  1861                           
  1862                           ;lcd.c: 158:     if(number == 0)
  1863  0547  0878               	movf	LCD_Write_Number@number,w
  1864  0548  0479               	iorwf	LCD_Write_Number@number+1,w
  1865  0549  1D03               	btfss	3,2
  1866  054A  2D4C               	goto	u831
  1867  054B  2D4D               	goto	u830
  1868  054C                     u831:
  1869  054C  2D87               	goto	l1327
  1870  054D                     u830:
  1871  054D                     l1317:
  1872  054D                     l1319:
  1873                           
  1874                           ;lcd.c: 161:         LCD_Write_Char(c);
  1875  054D  3030               	movlw	48
  1876  054E  120A  118A  2423  120A  118A  	fcall	_LCD_Write_Char
  1877                           
  1878                           ;lcd.c: 162:     }
  1879  0553  2DB6               	goto	l64
  1880  0554                     l1321:
  1881                           
  1882                           ;lcd.c: 166:         {;lcd.c: 167:             num[k]=number%10;
  1883  0554  300A               	movlw	10
  1884  0555  00F0               	movwf	___lwmod@divisor
  1885  0556  3000               	movlw	0
  1886  0557  00F1               	movwf	___lwmod@divisor+1
  1887  0558  0879               	movf	LCD_Write_Number@number+1,w
  1888  0559  00F3               	movwf	___lwmod@dividend+1
  1889  055A  0878               	movf	LCD_Write_Number@number,w
  1890  055B  00F2               	movwf	___lwmod@dividend
  1891  055C  120A  118A  2354  120A  118A  	fcall	___lwmod
  1892  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0563  0834               	movf	LCD_Write_Number@k,w
  1895  0564  00FA               	movwf	??_LCD_Write_Number
  1896  0565  077A               	addwf	??_LCD_Write_Number,w
  1897  0566  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
  1898  0567  0084               	movwf	4
  1899  0568  0870               	movf	?___lwmod,w
  1900  0569  1383               	bcf	3,7	;select IRP bank0
  1901  056A  0080               	movwf	0
  1902  056B  0A84               	incf	4,f
  1903  056C  0871               	movf	?___lwmod+1,w
  1904  056D  0080               	movwf	0
  1905  056E                     l1323:
  1906                           
  1907                           ;lcd.c: 168:             number = number/10;
  1908  056E  300A               	movlw	10
  1909  056F  00F0               	movwf	___lwdiv@divisor
  1910  0570  3000               	movlw	0
  1911  0571  00F1               	movwf	___lwdiv@divisor+1
  1912  0572  0879               	movf	LCD_Write_Number@number+1,w
  1913  0573  00F3               	movwf	___lwdiv@dividend+1
  1914  0574  0878               	movf	LCD_Write_Number@number,w
  1915  0575  00F2               	movwf	___lwdiv@dividend
  1916  0576  120A  118A  238E  120A  118A  	fcall	___lwdiv
  1917  057B  0871               	movf	?___lwdiv+1,w
  1918  057C  00F9               	movwf	LCD_Write_Number@number+1
  1919  057D  0870               	movf	?___lwdiv,w
  1920  057E  00F8               	movwf	LCD_Write_Number@number
  1921  057F                     l1325:
  1922                           
  1923                           ;lcd.c: 169:             k++;
  1924  057F  3001               	movlw	1
  1925  0580  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0581  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0582  07B4               	addwf	LCD_Write_Number@k,f
  1928  0583  1803               	skipnc
  1929  0584  0AB5               	incf	LCD_Write_Number@k+1,f
  1930  0585  3000               	movlw	0
  1931  0586  07B5               	addwf	LCD_Write_Number@k+1,f
  1932  0587                     l1327:
  1933                           
  1934                           ;lcd.c: 165:         while(number>0)
  1935  0587  0878               	movf	LCD_Write_Number@number,w
  1936  0588  0479               	iorwf	LCD_Write_Number@number+1,w
  1937  0589  1D03               	btfss	3,2
  1938  058A  2D8C               	goto	u841
  1939  058B  2D8D               	goto	u840
  1940  058C                     u841:
  1941  058C  2D54               	goto	l1321
  1942  058D                     u840:
  1943  058D                     l1329:
  1944                           
  1945                           ;lcd.c: 172:         k--;
  1946  058D  3001               	movlw	1
  1947  058E  02B4               	subwf	LCD_Write_Number@k,f
  1948  058F  3000               	movlw	0
  1949  0590  1C03               	skipc
  1950  0591  03B5               	decf	LCD_Write_Number@k+1,f
  1951  0592  02B5               	subwf	LCD_Write_Number@k+1,f
  1952                           
  1953                           ;lcd.c: 173:         for(p=k; p>=0; p--)
  1954  0593  0835               	movf	LCD_Write_Number@k+1,w
  1955  0594  00B8               	movwf	LCD_Write_Number@p+1
  1956  0595  0834               	movf	LCD_Write_Number@k,w
  1957  0596  00B7               	movwf	LCD_Write_Number@p
  1958  0597                     l1331:
  1959  0597  1FB8               	btfss	LCD_Write_Number@p+1,7
  1960  0598  2D9A               	goto	u851
  1961  0599  2D9B               	goto	u850
  1962  059A                     u851:
  1963  059A  2D9C               	goto	l1335
  1964  059B                     u850:
  1965  059B  2DB6               	goto	l64
  1966  059C                     l1335:
  1967                           
  1968                           ;lcd.c: 174:         {;lcd.c: 175:             c=num[p]+'0';
  1969  059C  0837               	movf	LCD_Write_Number@p,w
  1970  059D  00FA               	movwf	??_LCD_Write_Number
  1971  059E  077A               	addwf	??_LCD_Write_Number,w
  1972  059F  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
  1973  05A0  0084               	movwf	4
  1974  05A1  1383               	bcf	3,7	;select IRP bank0
  1975  05A2  0800               	movf	0,w
  1976  05A3  3E30               	addlw	48
  1977  05A4  00FB               	movwf	??_LCD_Write_Number+1
  1978  05A5  087B               	movf	??_LCD_Write_Number+1,w
  1979  05A6  00B6               	movwf	LCD_Write_Number@c
  1980  05A7                     l1337:
  1981                           
  1982                           ;lcd.c: 176:             LCD_Write_Char(c);
  1983  05A7  0836               	movf	LCD_Write_Number@c,w
  1984  05A8  120A  118A  2423  120A  118A  	fcall	_LCD_Write_Char
  1985  05AD                     l1339:
  1986                           
  1987                           ;lcd.c: 177:         }
  1988  05AD  30FF               	movlw	255
  1989  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1990  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1991  05B0  07B7               	addwf	LCD_Write_Number@p,f
  1992  05B1  1803               	skipnc
  1993  05B2  0AB8               	incf	LCD_Write_Number@p+1,f
  1994  05B3  30FF               	movlw	255
  1995  05B4  07B8               	addwf	LCD_Write_Number@p+1,f
  1996  05B5  2D97               	goto	l1331
  1997  05B6                     l64:
  1998  05B6  0008               	return
  1999  05B7                     __end_of_LCD_Write_Number:
  2000                           
  2001                           	psect	text8
  2002  0354                     __ptext8:	
  2003 ;; *************** function ___lwmod *****************
  2004 ;; Defined at:
  2005 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  divisor         2    0[COMMON] unsigned int 
  2008 ;;  dividend        2    2[COMMON] unsigned int 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  counter         1    5[COMMON] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2    0[COMMON] unsigned int 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         4       0       0       0       0
  2021 ;;      Locals:         1       0       0       0       0
  2022 ;;      Temps:          1       0       0       0       0
  2023 ;;      Totals:         6       0       0       0       0
  2024 ;;Total ram usage:        6 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_LCD_Write_Number
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function ___lwmod
  2035  0354                     ___lwmod:
  2036  0354                     l1227:	
  2037                           ;incstack = 0
  2038                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2039                           
  2040  0354  0870               	movf	___lwmod@divisor,w
  2041  0355  0471               	iorwf	___lwmod@divisor+1,w
  2042  0356  1903               	btfsc	3,2
  2043  0357  2B59               	goto	u721
  2044  0358  2B5A               	goto	u720
  2045  0359                     u721:
  2046  0359  2B89               	goto	l1245
  2047  035A                     u720:
  2048  035A                     l1229:
  2049  035A  01F5               	clrf	___lwmod@counter
  2050  035B  0AF5               	incf	___lwmod@counter,f
  2051  035C  2B68               	goto	l1235
  2052  035D                     l1231:
  2053  035D  3001               	movlw	1
  2054  035E                     u735:
  2055  035E  1003               	clrc
  2056  035F  0DF0               	rlf	___lwmod@divisor,f
  2057  0360  0DF1               	rlf	___lwmod@divisor+1,f
  2058  0361  3EFF               	addlw	-1
  2059  0362  1D03               	skipz
  2060  0363  2B5E               	goto	u735
  2061  0364                     l1233:
  2062  0364  3001               	movlw	1
  2063  0365  00F4               	movwf	??___lwmod
  2064  0366  0874               	movf	??___lwmod,w
  2065  0367  07F5               	addwf	___lwmod@counter,f
  2066  0368                     l1235:
  2067  0368  1FF1               	btfss	___lwmod@divisor+1,7
  2068  0369  2B6B               	goto	u741
  2069  036A  2B6C               	goto	u740
  2070  036B                     u741:
  2071  036B  2B5D               	goto	l1231
  2072  036C                     u740:
  2073  036C                     l1237:
  2074  036C  0871               	movf	___lwmod@divisor+1,w
  2075  036D  0273               	subwf	___lwmod@dividend+1,w
  2076  036E  1D03               	skipz
  2077  036F  2B72               	goto	u755
  2078  0370  0870               	movf	___lwmod@divisor,w
  2079  0371  0272               	subwf	___lwmod@dividend,w
  2080  0372                     u755:
  2081  0372  1C03               	skipc
  2082  0373  2B75               	goto	u751
  2083  0374  2B76               	goto	u750
  2084  0375                     u751:
  2085  0375  2B7C               	goto	l1241
  2086  0376                     u750:
  2087  0376                     l1239:
  2088  0376  0870               	movf	___lwmod@divisor,w
  2089  0377  02F2               	subwf	___lwmod@dividend,f
  2090  0378  0871               	movf	___lwmod@divisor+1,w
  2091  0379  1C03               	skipc
  2092  037A  03F3               	decf	___lwmod@dividend+1,f
  2093  037B  02F3               	subwf	___lwmod@dividend+1,f
  2094  037C                     l1241:
  2095  037C  3001               	movlw	1
  2096  037D                     u765:
  2097  037D  1003               	clrc
  2098  037E  0CF1               	rrf	___lwmod@divisor+1,f
  2099  037F  0CF0               	rrf	___lwmod@divisor,f
  2100  0380  3EFF               	addlw	-1
  2101  0381  1D03               	skipz
  2102  0382  2B7D               	goto	u765
  2103  0383                     l1243:
  2104  0383  3001               	movlw	1
  2105  0384  02F5               	subwf	___lwmod@counter,f
  2106  0385  1D03               	btfss	3,2
  2107  0386  2B88               	goto	u771
  2108  0387  2B89               	goto	u770
  2109  0388                     u771:
  2110  0388  2B6C               	goto	l1237
  2111  0389                     u770:
  2112  0389                     l1245:
  2113  0389  0873               	movf	___lwmod@dividend+1,w
  2114  038A  00F1               	movwf	?___lwmod+1
  2115  038B  0872               	movf	___lwmod@dividend,w
  2116  038C  00F0               	movwf	?___lwmod
  2117  038D                     l555:
  2118  038D  0008               	return
  2119  038E                     __end_of___lwmod:
  2120                           
  2121                           	psect	text9
  2122  038E                     __ptext9:	
  2123 ;; *************** function ___lwdiv *****************
  2124 ;; Defined at:
  2125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  divisor         2    0[COMMON] unsigned int 
  2128 ;;  dividend        2    2[COMMON] unsigned int 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  quotient        2    5[COMMON] unsigned int 
  2131 ;;  counter         1    7[COMMON] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2    0[COMMON] unsigned int 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         4       0       0       0       0
  2142 ;;      Locals:         3       0       0       0       0
  2143 ;;      Temps:          1       0       0       0       0
  2144 ;;      Totals:         8       0       0       0       0
  2145 ;;Total ram usage:        8 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_LCD_Write_Number
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function ___lwdiv
  2156  038E                     ___lwdiv:
  2157  038E                     l1201:	
  2158                           ;incstack = 0
  2159                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2160                           
  2161  038E  01F5               	clrf	___lwdiv@quotient
  2162  038F  01F6               	clrf	___lwdiv@quotient+1
  2163  0390                     l1203:
  2164  0390  0870               	movf	___lwdiv@divisor,w
  2165  0391  0471               	iorwf	___lwdiv@divisor+1,w
  2166  0392  1903               	btfsc	3,2
  2167  0393  2B95               	goto	u651
  2168  0394  2B96               	goto	u650
  2169  0395                     u651:
  2170  0395  2BCD               	goto	l1223
  2171  0396                     u650:
  2172  0396                     l1205:
  2173  0396  01F7               	clrf	___lwdiv@counter
  2174  0397  0AF7               	incf	___lwdiv@counter,f
  2175  0398  2BA4               	goto	l1211
  2176  0399                     l1207:
  2177  0399  3001               	movlw	1
  2178  039A                     u665:
  2179  039A  1003               	clrc
  2180  039B  0DF0               	rlf	___lwdiv@divisor,f
  2181  039C  0DF1               	rlf	___lwdiv@divisor+1,f
  2182  039D  3EFF               	addlw	-1
  2183  039E  1D03               	skipz
  2184  039F  2B9A               	goto	u665
  2185  03A0                     l1209:
  2186  03A0  3001               	movlw	1
  2187  03A1  00F4               	movwf	??___lwdiv
  2188  03A2  0874               	movf	??___lwdiv,w
  2189  03A3  07F7               	addwf	___lwdiv@counter,f
  2190  03A4                     l1211:
  2191  03A4  1FF1               	btfss	___lwdiv@divisor+1,7
  2192  03A5  2BA7               	goto	u671
  2193  03A6  2BA8               	goto	u670
  2194  03A7                     u671:
  2195  03A7  2B99               	goto	l1207
  2196  03A8                     u670:
  2197  03A8                     l1213:
  2198  03A8  3001               	movlw	1
  2199  03A9                     u685:
  2200  03A9  1003               	clrc
  2201  03AA  0DF5               	rlf	___lwdiv@quotient,f
  2202  03AB  0DF6               	rlf	___lwdiv@quotient+1,f
  2203  03AC  3EFF               	addlw	-1
  2204  03AD  1D03               	skipz
  2205  03AE  2BA9               	goto	u685
  2206  03AF  0871               	movf	___lwdiv@divisor+1,w
  2207  03B0  0273               	subwf	___lwdiv@dividend+1,w
  2208  03B1  1D03               	skipz
  2209  03B2  2BB5               	goto	u695
  2210  03B3  0870               	movf	___lwdiv@divisor,w
  2211  03B4  0272               	subwf	___lwdiv@dividend,w
  2212  03B5                     u695:
  2213  03B5  1C03               	skipc
  2214  03B6  2BB8               	goto	u691
  2215  03B7  2BB9               	goto	u690
  2216  03B8                     u691:
  2217  03B8  2BC0               	goto	l1219
  2218  03B9                     u690:
  2219  03B9                     l1215:
  2220  03B9  0870               	movf	___lwdiv@divisor,w
  2221  03BA  02F2               	subwf	___lwdiv@dividend,f
  2222  03BB  0871               	movf	___lwdiv@divisor+1,w
  2223  03BC  1C03               	skipc
  2224  03BD  03F3               	decf	___lwdiv@dividend+1,f
  2225  03BE  02F3               	subwf	___lwdiv@dividend+1,f
  2226  03BF                     l1217:
  2227  03BF  1475               	bsf	___lwdiv@quotient,0
  2228  03C0                     l1219:
  2229  03C0  3001               	movlw	1
  2230  03C1                     u705:
  2231  03C1  1003               	clrc
  2232  03C2  0CF1               	rrf	___lwdiv@divisor+1,f
  2233  03C3  0CF0               	rrf	___lwdiv@divisor,f
  2234  03C4  3EFF               	addlw	-1
  2235  03C5  1D03               	skipz
  2236  03C6  2BC1               	goto	u705
  2237  03C7                     l1221:
  2238  03C7  3001               	movlw	1
  2239  03C8  02F7               	subwf	___lwdiv@counter,f
  2240  03C9  1D03               	btfss	3,2
  2241  03CA  2BCC               	goto	u711
  2242  03CB  2BCD               	goto	u710
  2243  03CC                     u711:
  2244  03CC  2BA8               	goto	l1213
  2245  03CD                     u710:
  2246  03CD                     l1223:
  2247  03CD  0876               	movf	___lwdiv@quotient+1,w
  2248  03CE  00F1               	movwf	?___lwdiv+1
  2249  03CF  0875               	movf	___lwdiv@quotient,w
  2250  03D0  00F0               	movwf	?___lwdiv
  2251  03D1                     l545:
  2252  03D1  0008               	return
  2253  03D2                     __end_of___lwdiv:
  2254                           
  2255                           	psect	text10
  2256  0423                     __ptext10:	
  2257 ;; *************** function _LCD_Write_Char *****************
  2258 ;; Defined at:
  2259 ;;		line 121 in file "lcd.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  Data            1    wreg     unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  Data            1    5[COMMON] unsigned char 
  2264 ;;  High4           1    4[COMMON] unsigned char 
  2265 ;;  Low4            1    3[COMMON] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       0       0       0       0
  2276 ;;      Locals:         3       0       0       0       0
  2277 ;;      Temps:          2       0       0       0       0
  2278 ;;      Totals:         5       0       0       0       0
  2279 ;;Total ram usage:        5 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 1
  2282 ;; This function calls:
  2283 ;;		_LCD_DATA
  2284 ;; This function is called by:
  2285 ;;		_LCD_Write_String
  2286 ;;		_LCD_Write_Number
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _LCD_Write_Char
  2292  0423                     _LCD_Write_Char:
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2296                           ;LCD_Write_Char@Data stored from wreg
  2297  0423  00F5               	movwf	LCD_Write_Char@Data
  2298  0424                     l1153:
  2299                           
  2300                           ;lcd.c: 121: void LCD_Write_Char(unsigned char Data);lcd.c: 122: {;lcd.c: 123:   char Lo
      +                          w4,High4;;lcd.c: 125:   Low4 = Data & 0x0F;
  2301  0424  0875               	movf	LCD_Write_Char@Data,w
  2302  0425  390F               	andlw	15
  2303  0426  00F1               	movwf	??_LCD_Write_Char
  2304  0427  0871               	movf	??_LCD_Write_Char,w
  2305  0428  00F3               	movwf	LCD_Write_Char@Low4
  2306                           
  2307                           ;lcd.c: 126:   High4 = Data & 0xF0;
  2308  0429  0875               	movf	LCD_Write_Char@Data,w
  2309  042A  39F0               	andlw	240
  2310  042B  00F1               	movwf	??_LCD_Write_Char
  2311  042C  0871               	movf	??_LCD_Write_Char,w
  2312  042D  00F4               	movwf	LCD_Write_Char@High4
  2313  042E                     l1155:
  2314                           
  2315                           ;lcd.c: 128:   RD2 = 1;
  2316  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2317  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0430  1508               	bsf	8,2	;volatile
  2319  0431                     l1157:
  2320                           
  2321                           ;lcd.c: 129:   {;lcd.c: 130:   LCD_DATA(High4>>4);
  2322  0431  0874               	movf	LCD_Write_Char@High4,w
  2323  0432  00F1               	movwf	??_LCD_Write_Char
  2324  0433  3004               	movlw	4
  2325  0434                     u575:
  2326  0434  1003               	clrc
  2327  0435  0CF1               	rrf	??_LCD_Write_Char,f
  2328  0436  3EFF               	addlw	-1
  2329  0437  1D03               	skipz
  2330  0438  2C34               	goto	u575
  2331  0439  0871               	movf	??_LCD_Write_Char,w
  2332  043A  120A  118A  230D  120A  118A  	fcall	_LCD_DATA
  2333  043F                     l1159:
  2334                           
  2335                           ;lcd.c: 131:   RD3 = 1;
  2336  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0441  1588               	bsf	8,3	;volatile
  2339  0442                     l1161:
  2340                           
  2341                           ;lcd.c: 132:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2342  0442  3004               	movlw	4
  2343  0443  00F2               	movwf	??_LCD_Write_Char+1
  2344  0444  303D               	movlw	61
  2345  0445  00F1               	movwf	??_LCD_Write_Char
  2346  0446                     u1077:
  2347  0446  0BF1               	decfsz	??_LCD_Write_Char,f
  2348  0447  2C46               	goto	u1077
  2349  0448  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2350  0449  2C46               	goto	u1077
  2351  044A  2C4B               	nop2
  2352  044B                     l1163:
  2353                           
  2354                           ;lcd.c: 133:   RD3 = 0;
  2355  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2356  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2357  044D  1188               	bcf	8,3	;volatile
  2358  044E                     l1165:
  2359                           
  2360                           ;lcd.c: 134:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2361  044E  3004               	movlw	4
  2362  044F  00F2               	movwf	??_LCD_Write_Char+1
  2363  0450  303D               	movlw	61
  2364  0451  00F1               	movwf	??_LCD_Write_Char
  2365  0452                     u1087:
  2366  0452  0BF1               	decfsz	??_LCD_Write_Char,f
  2367  0453  2C52               	goto	u1087
  2368  0454  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2369  0455  2C52               	goto	u1087
  2370  0456  2C57               	nop2
  2371  0457                     l1167:
  2372                           
  2373                           ;lcd.c: 135:   LCD_DATA(Low4);
  2374  0457  0873               	movf	LCD_Write_Char@Low4,w
  2375  0458  120A  118A  230D  120A  118A  	fcall	_LCD_DATA
  2376  045D                     l1169:
  2377                           
  2378                           ;lcd.c: 136:   RD3 = 1;
  2379  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2380  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2381  045F  1588               	bsf	8,3	;volatile
  2382  0460                     l1171:
  2383                           
  2384                           ;lcd.c: 137:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2385  0460  3004               	movlw	4
  2386  0461  00F2               	movwf	??_LCD_Write_Char+1
  2387  0462  303D               	movlw	61
  2388  0463  00F1               	movwf	??_LCD_Write_Char
  2389  0464                     u1097:
  2390  0464  0BF1               	decfsz	??_LCD_Write_Char,f
  2391  0465  2C64               	goto	u1097
  2392  0466  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2393  0467  2C64               	goto	u1097
  2394  0468  2C69               	nop2
  2395  0469                     l1173:
  2396                           
  2397                           ;lcd.c: 138:   RD3 = 0;
  2398  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2399  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2400  046B  1188               	bcf	8,3	;volatile
  2401  046C                     l1175:
  2402                           
  2403                           ;lcd.c: 139:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2404  046C  3004               	movlw	4
  2405  046D  00F2               	movwf	??_LCD_Write_Char+1
  2406  046E  303D               	movlw	61
  2407  046F  00F1               	movwf	??_LCD_Write_Char
  2408  0470                     u1107:
  2409  0470  0BF1               	decfsz	??_LCD_Write_Char,f
  2410  0471  2C70               	goto	u1107
  2411  0472  0BF2               	decfsz	??_LCD_Write_Char+1,f
  2412  0473  2C70               	goto	u1107
  2413  0474  2C75               	nop2
  2414  0475                     l48:
  2415  0475  0008               	return
  2416  0476                     __end_of_LCD_Write_Char:
  2417                           
  2418                           	psect	text11
  2419  03D2                     __ptext11:	
  2420 ;; *************** function _LCD_Set_Cursor *****************
  2421 ;; Defined at:
  2422 ;;		line 56 in file "lcd.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  r               1    wreg     unsigned char 
  2425 ;;  c               1    4[COMMON] unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  r               1    7[COMMON] unsigned char 
  2428 ;;  Temp            1   10[COMMON] unsigned char 
  2429 ;;  High4           1    9[COMMON] unsigned char 
  2430 ;;  Low4            1    8[COMMON] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         1       0       0       0       0
  2441 ;;      Locals:         4       0       0       0       0
  2442 ;;      Temps:          2       0       0       0       0
  2443 ;;      Totals:         7       0       0       0       0
  2444 ;;Total ram usage:        7 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 2
  2447 ;; This function calls:
  2448 ;;		_LCD_CMD
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _LCD_Set_Cursor
  2456  03D2                     _LCD_Set_Cursor:
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2460                           ;LCD_Set_Cursor@r stored from wreg
  2461  03D2  00F7               	movwf	LCD_Set_Cursor@r
  2462  03D3                     l1249:
  2463                           
  2464                           ;lcd.c: 56: void LCD_Set_Cursor(unsigned char r, unsigned char c);lcd.c: 57: {;lcd.c: 58
      +                          :   unsigned char Temp,Low4,High4;;lcd.c: 59:   if(r == 1)
  2465  03D3  0377               	decf	LCD_Set_Cursor@r,w
  2466  03D4  1D03               	btfss	3,2
  2467  03D5  2BD7               	goto	u781
  2468  03D6  2BD8               	goto	u780
  2469  03D7                     u781:
  2470  03D7  2BFA               	goto	l1259
  2471  03D8                     u780:
  2472  03D8                     l1251:
  2473                           
  2474                           ;lcd.c: 60:   {;lcd.c: 61:     Temp = 0x80 + c - 1;
  2475  03D8  0874               	movf	LCD_Set_Cursor@c,w
  2476  03D9  3E7F               	addlw	127
  2477  03DA  00F5               	movwf	??_LCD_Set_Cursor
  2478  03DB  0875               	movf	??_LCD_Set_Cursor,w
  2479  03DC  00FA               	movwf	LCD_Set_Cursor@Temp
  2480                           
  2481                           ;lcd.c: 62:     High4 = Temp >> 4;
  2482  03DD  087A               	movf	LCD_Set_Cursor@Temp,w
  2483  03DE  00F5               	movwf	??_LCD_Set_Cursor
  2484  03DF  3004               	movlw	4
  2485  03E0                     u795:
  2486  03E0  1003               	clrc
  2487  03E1  0CF5               	rrf	??_LCD_Set_Cursor,f
  2488  03E2  3EFF               	addlw	-1
  2489  03E3  1D03               	skipz
  2490  03E4  2BE0               	goto	u795
  2491  03E5  0875               	movf	??_LCD_Set_Cursor,w
  2492  03E6  00F6               	movwf	??_LCD_Set_Cursor+1
  2493  03E7  0876               	movf	??_LCD_Set_Cursor+1,w
  2494  03E8  00F9               	movwf	LCD_Set_Cursor@High4
  2495  03E9                     l1253:
  2496                           
  2497                           ;lcd.c: 63:     Low4 = Temp & 0x0F;
  2498  03E9  087A               	movf	LCD_Set_Cursor@Temp,w
  2499  03EA  390F               	andlw	15
  2500  03EB  00F5               	movwf	??_LCD_Set_Cursor
  2501  03EC  0875               	movf	??_LCD_Set_Cursor,w
  2502  03ED  00F8               	movwf	LCD_Set_Cursor@Low4
  2503  03EE                     l1255:
  2504                           
  2505                           ;lcd.c: 64:     LCD_CMD(High4);
  2506  03EE  0879               	movf	LCD_Set_Cursor@High4,w
  2507  03EF  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2508  03F4                     l1257:
  2509                           
  2510                           ;lcd.c: 65:     LCD_CMD(Low4);
  2511  03F4  0878               	movf	LCD_Set_Cursor@Low4,w
  2512  03F5  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2513  03FA                     l1259:
  2514                           
  2515                           ;lcd.c: 67:   if(r == 2)
  2516  03FA  3002               	movlw	2
  2517  03FB  0677               	xorwf	LCD_Set_Cursor@r,w
  2518  03FC  1D03               	btfss	3,2
  2519  03FD  2BFF               	goto	u801
  2520  03FE  2C00               	goto	u800
  2521  03FF                     u801:
  2522  03FF  2C22               	goto	l42
  2523  0400                     u800:
  2524  0400                     l1261:
  2525                           
  2526                           ;lcd.c: 68:   {;lcd.c: 69:     Temp = 0xC0 + c - 1;
  2527  0400  0874               	movf	LCD_Set_Cursor@c,w
  2528  0401  3EBF               	addlw	191
  2529  0402  00F5               	movwf	??_LCD_Set_Cursor
  2530  0403  0875               	movf	??_LCD_Set_Cursor,w
  2531  0404  00FA               	movwf	LCD_Set_Cursor@Temp
  2532                           
  2533                           ;lcd.c: 70:     High4 = Temp >> 4;
  2534  0405  087A               	movf	LCD_Set_Cursor@Temp,w
  2535  0406  00F5               	movwf	??_LCD_Set_Cursor
  2536  0407  3004               	movlw	4
  2537  0408                     u815:
  2538  0408  1003               	clrc
  2539  0409  0CF5               	rrf	??_LCD_Set_Cursor,f
  2540  040A  3EFF               	addlw	-1
  2541  040B  1D03               	skipz
  2542  040C  2C08               	goto	u815
  2543  040D  0875               	movf	??_LCD_Set_Cursor,w
  2544  040E  00F6               	movwf	??_LCD_Set_Cursor+1
  2545  040F  0876               	movf	??_LCD_Set_Cursor+1,w
  2546  0410  00F9               	movwf	LCD_Set_Cursor@High4
  2547  0411                     l1263:
  2548                           
  2549                           ;lcd.c: 71:     Low4 = Temp & 0x0F;
  2550  0411  087A               	movf	LCD_Set_Cursor@Temp,w
  2551  0412  390F               	andlw	15
  2552  0413  00F5               	movwf	??_LCD_Set_Cursor
  2553  0414  0875               	movf	??_LCD_Set_Cursor,w
  2554  0415  00F8               	movwf	LCD_Set_Cursor@Low4
  2555  0416                     l1265:
  2556                           
  2557                           ;lcd.c: 72:     LCD_CMD(High4);
  2558  0416  0879               	movf	LCD_Set_Cursor@High4,w
  2559  0417  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2560  041C                     l1267:
  2561                           
  2562                           ;lcd.c: 73:     LCD_CMD(Low4);
  2563  041C  0878               	movf	LCD_Set_Cursor@Low4,w
  2564  041D  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2565  0422                     l42:
  2566  0422  0008               	return
  2567  0423                     __end_of_LCD_Set_Cursor:
  2568                           
  2569                           	psect	text12
  2570  04DC                     __ptext12:	
  2571 ;; *************** function _LCD_Init *****************
  2572 ;; Defined at:
  2573 ;;		line 77 in file "lcd.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0, pclath, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0
  2589 ;;      Temps:          2       0       0       0       0
  2590 ;;      Totals:         2       0       0       0       0
  2591 ;;Total ram usage:        2 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 2
  2594 ;; This function calls:
  2595 ;;		_LCD_CMD
  2596 ;;		_LCD_DATA
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _LCD_Init
  2604  04DC                     _LCD_Init:
  2605  04DC                     l1269:	
  2606                           ;incstack = 0
  2607                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2608                           
  2609                           
  2610                           ;lcd.c: 80:   TRISD = 0x00;
  2611  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2612  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2613  04DE  0188               	clrf	8	;volatile
  2614  04DF                     l1271:
  2615                           
  2616                           ;lcd.c: 81:   TRISD2 = 0;
  2617  04DF  1108               	bcf	8,2	;volatile
  2618  04E0                     l1273:
  2619                           
  2620                           ;lcd.c: 82:   TRISD3 = 0;
  2621  04E0  1188               	bcf	8,3	;volatile
  2622  04E1                     l1275:
  2623                           
  2624                           ;lcd.c: 84:   LCD_DATA(0x00);
  2625  04E1  3000               	movlw	0
  2626  04E2  120A  118A  230D  120A  118A  	fcall	_LCD_DATA
  2627  04E7                     l1277:
  2628                           
  2629                           ;lcd.c: 85:   _delay((unsigned long)((30)*(20000000/4000.0)));
  2630  04E7  30C3               	movlw	195
  2631  04E8  00F5               	movwf	??_LCD_Init+1
  2632  04E9  30CD               	movlw	205
  2633  04EA  00F4               	movwf	??_LCD_Init
  2634  04EB                     u1117:
  2635  04EB  0BF4               	decfsz	??_LCD_Init,f
  2636  04EC  2CEB               	goto	u1117
  2637  04ED  0BF5               	decfsz	??_LCD_Init+1,f
  2638  04EE  2CEB               	goto	u1117
  2639  04EF                     l1279:
  2640                           
  2641                           ;lcd.c: 86:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2642  04EF  3004               	movlw	4
  2643  04F0  00F5               	movwf	??_LCD_Init+1
  2644  04F1  303D               	movlw	61
  2645  04F2  00F4               	movwf	??_LCD_Init
  2646  04F3                     u1127:
  2647  04F3  0BF4               	decfsz	??_LCD_Init,f
  2648  04F4  2CF3               	goto	u1127
  2649  04F5  0BF5               	decfsz	??_LCD_Init+1,f
  2650  04F6  2CF3               	goto	u1127
  2651  04F7  2CF8               	nop2
  2652  04F8                     l1281:
  2653                           
  2654                           ;lcd.c: 88:   LCD_CMD(0x03);
  2655  04F8  3003               	movlw	3
  2656  04F9  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2657  04FE                     l1283:
  2658                           
  2659                           ;lcd.c: 89:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2660  04FE  3021               	movlw	33
  2661  04FF  00F5               	movwf	??_LCD_Init+1
  2662  0500  3076               	movlw	118
  2663  0501  00F4               	movwf	??_LCD_Init
  2664  0502                     u1137:
  2665  0502  0BF4               	decfsz	??_LCD_Init,f
  2666  0503  2D02               	goto	u1137
  2667  0504  0BF5               	decfsz	??_LCD_Init+1,f
  2668  0505  2D02               	goto	u1137
  2669  0506  0000               	nop
  2670  0507                     l1285:
  2671                           
  2672                           ;lcd.c: 90:   LCD_CMD(0x03);
  2673  0507  3003               	movlw	3
  2674  0508  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2675  050D                     l1287:
  2676                           
  2677                           ;lcd.c: 91:   _delay((unsigned long)((150)*(20000000/4000000.0)));
  2678  050D  30F9               	movlw	249
  2679  050E  00F4               	movwf	??_LCD_Init
  2680  050F                     u1147:
  2681  050F  0BF4               	decfsz	??_LCD_Init,f
  2682  0510  2D0F               	goto	u1147
  2683  0511  2D12               	nop2
  2684  0512                     l1289:
  2685                           
  2686                           ;lcd.c: 92:   LCD_CMD(0x03);
  2687  0512  3003               	movlw	3
  2688  0513  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2689  0518                     l1291:
  2690                           
  2691                           ;lcd.c: 94:   LCD_CMD(0x02);
  2692  0518  3002               	movlw	2
  2693  0519  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2694  051E                     l1293:
  2695                           
  2696                           ;lcd.c: 95:   LCD_CMD(0x02);
  2697  051E  3002               	movlw	2
  2698  051F  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2699  0524                     l1295:
  2700                           
  2701                           ;lcd.c: 96:   LCD_CMD(0x08);
  2702  0524  3008               	movlw	8
  2703  0525  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2704  052A                     l1297:
  2705                           
  2706                           ;lcd.c: 97:   LCD_CMD(0x00);
  2707  052A  3000               	movlw	0
  2708  052B  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2709  0530                     l1299:
  2710                           
  2711                           ;lcd.c: 98:   LCD_CMD(0x0C);
  2712  0530  300C               	movlw	12
  2713  0531  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2714  0536                     l1301:
  2715                           
  2716                           ;lcd.c: 99:   LCD_CMD(0x00);
  2717  0536  3000               	movlw	0
  2718  0537  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2719  053C                     l1303:
  2720                           
  2721                           ;lcd.c: 100:   LCD_CMD(0x06);
  2722  053C  3006               	movlw	6
  2723  053D  120A  118A  22F3  120A  118A  	fcall	_LCD_CMD
  2724  0542                     l45:
  2725  0542  0008               	return
  2726  0543                     __end_of_LCD_Init:
  2727                           
  2728                           	psect	text13
  2729  02F3                     __ptext13:	
  2730 ;; *************** function _LCD_CMD *****************
  2731 ;; Defined at:
  2732 ;;		line 30 in file "lcd.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  CMD             1    wreg     unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  CMD             1    3[COMMON] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       0       0       0
  2747 ;;      Locals:         1       0       0       0       0
  2748 ;;      Temps:          2       0       0       0       0
  2749 ;;      Totals:         3       0       0       0       0
  2750 ;;Total ram usage:        3 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 1
  2753 ;; This function calls:
  2754 ;;		_LCD_DATA
  2755 ;; This function is called by:
  2756 ;;		_LCD_Set_Cursor
  2757 ;;		_LCD_Init
  2758 ;;		_LCD_Clear
  2759 ;;		_LCD_Shift_Right
  2760 ;;		_LCD_Shift_Left
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function _LCD_CMD
  2766  02F3                     _LCD_CMD:
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2770                           ;LCD_CMD@CMD stored from wreg
  2771  02F3  00F3               	movwf	LCD_CMD@CMD
  2772  02F4                     l1143:
  2773                           
  2774                           ;lcd.c: 30: void LCD_CMD(unsigned char CMD);lcd.c: 31: {;lcd.c: 33:   RD2 = 0;
  2775  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2776  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2777  02F6  1108               	bcf	8,2	;volatile
  2778  02F7                     l1145:
  2779                           
  2780                           ;lcd.c: 36:   LCD_DATA(CMD);
  2781  02F7  0873               	movf	LCD_CMD@CMD,w
  2782  02F8  120A  118A  230D  120A  118A  	fcall	_LCD_DATA
  2783  02FD                     l1147:
  2784                           
  2785                           ;lcd.c: 39:   RD3 = 1;
  2786  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2787  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2788  02FF  1588               	bsf	8,3	;volatile
  2789  0300                     l1149:
  2790                           
  2791                           ;lcd.c: 40:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  2792  0300  3004               	movlw	4
  2793  0301  00F2               	movwf	??_LCD_CMD+1
  2794  0302  303D               	movlw	61
  2795  0303  00F1               	movwf	??_LCD_CMD
  2796  0304                     u1157:
  2797  0304  0BF1               	decfsz	??_LCD_CMD,f
  2798  0305  2B04               	goto	u1157
  2799  0306  0BF2               	decfsz	??_LCD_CMD+1,f
  2800  0307  2B04               	goto	u1157
  2801  0308  2B09               	nop2
  2802  0309                     l1151:
  2803                           
  2804                           ;lcd.c: 41:   RD3 = 0;
  2805  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2806  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2807  030B  1188               	bcf	8,3	;volatile
  2808  030C                     l34:
  2809  030C  0008               	return
  2810  030D                     __end_of_LCD_CMD:
  2811                           
  2812                           	psect	text14
  2813  030D                     __ptext14:	
  2814 ;; *************** function _LCD_DATA *****************
  2815 ;; Defined at:
  2816 ;;		line 7 in file "lcd.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  Data            1    wreg     unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  Data            1    0[COMMON] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       0       0       0       0
  2831 ;;      Locals:         1       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0
  2833 ;;      Totals:         1       0       0       0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_LCD_CMD
  2840 ;;		_LCD_Init
  2841 ;;		_LCD_Write_Char
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _LCD_DATA
  2847  030D                     _LCD_DATA:
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _LCD_DATA: [wreg]
  2851                           ;LCD_DATA@Data stored from wreg
  2852  030D  00F0               	movwf	LCD_DATA@Data
  2853  030E                     l1133:
  2854                           
  2855                           ;lcd.c: 7: void LCD_DATA(unsigned char Data);lcd.c: 8: {;lcd.c: 9:   if(Data & 1)
  2856  030E  1C70               	btfss	LCD_DATA@Data,0
  2857  030F  2B11               	goto	u531
  2858  0310  2B12               	goto	u530
  2859  0311                     u531:
  2860  0311  2B16               	goto	l23
  2861  0312                     u530:
  2862  0312                     l1135:
  2863                           
  2864                           ;lcd.c: 10:     RD4 = 1;
  2865  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0314  1608               	bsf	8,4	;volatile
  2868  0315  2B19               	goto	l24
  2869  0316                     l23:	
  2870                           ;lcd.c: 11:   else
  2871                           
  2872                           
  2873                           ;lcd.c: 12:     RD4 = 0;
  2874  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0318  1208               	bcf	8,4	;volatile
  2877  0319                     l24:
  2878                           
  2879                           ;lcd.c: 14:   if(Data & 2)
  2880  0319  1CF0               	btfss	LCD_DATA@Data,1
  2881  031A  2B1C               	goto	u541
  2882  031B  2B1D               	goto	u540
  2883  031C                     u541:
  2884  031C  2B1F               	goto	l25
  2885  031D                     u540:
  2886  031D                     l1137:
  2887                           
  2888                           ;lcd.c: 15:     RD5 = 1;
  2889  031D  1688               	bsf	8,5	;volatile
  2890  031E  2B20               	goto	l26
  2891  031F                     l25:	
  2892                           ;lcd.c: 16:   else
  2893                           
  2894                           
  2895                           ;lcd.c: 17:     RD5 = 0;
  2896  031F  1288               	bcf	8,5	;volatile
  2897  0320                     l26:
  2898                           
  2899                           ;lcd.c: 19:   if(Data & 4)
  2900  0320  1D70               	btfss	LCD_DATA@Data,2
  2901  0321  2B23               	goto	u551
  2902  0322  2B24               	goto	u550
  2903  0323                     u551:
  2904  0323  2B26               	goto	l27
  2905  0324                     u550:
  2906  0324                     l1139:
  2907                           
  2908                           ;lcd.c: 20:     RD6 = 1;
  2909  0324  1708               	bsf	8,6	;volatile
  2910  0325  2B27               	goto	l28
  2911  0326                     l27:	
  2912                           ;lcd.c: 21:   else
  2913                           
  2914                           
  2915                           ;lcd.c: 22:     RD6 = 0;
  2916  0326  1308               	bcf	8,6	;volatile
  2917  0327                     l28:
  2918                           
  2919                           ;lcd.c: 24:   if(Data & 8)
  2920  0327  1DF0               	btfss	LCD_DATA@Data,3
  2921  0328  2B2A               	goto	u561
  2922  0329  2B2B               	goto	u560
  2923  032A                     u561:
  2924  032A  2B2D               	goto	l29
  2925  032B                     u560:
  2926  032B                     l1141:
  2927                           
  2928                           ;lcd.c: 25:     RD7 = 1;
  2929  032B  1788               	bsf	8,7	;volatile
  2930  032C  2B2E               	goto	l31
  2931  032D                     l29:	
  2932                           ;lcd.c: 26:   else
  2933                           
  2934                           
  2935                           ;lcd.c: 27:     RD7 = 0;
  2936  032D  1388               	bcf	8,7	;volatile
  2937  032E                     l31:
  2938  032E  0008               	return
  2939  032F                     __end_of_LCD_DATA:
  2940  007E                     btemp	set	126	;btemp
  2941  007E                     wtemp0	set	126
  2942                           
  2943                           	psect	config
  2944                           
  2945                           ;Config register CONFIG @ 0x2007
  2946                           ;	Oscillator Selection bits
  2947                           ;	FOSC = HS, HS oscillator
  2948                           ;	Watchdog Timer Enable bit
  2949                           ;	WDTE = OFF, WDT disabled
  2950                           ;	Power-up Timer Enable bit
  2951                           ;	PWRTE = ON, PWRT enabled
  2952                           ;	Brown-out Reset Enable bit
  2953                           ;	BOREN = ON, BOR enabled
  2954                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2955                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2956                           ;	Data EEPROM Memory Code Protection bit
  2957                           ;	CPD = OFF, Data EEPROM code protection off
  2958                           ;	Flash Program Memory Write Enable bits
  2959                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2960                           ;	In-Circuit Debugger Mode bit
  2961                           ;	DEBUG = 0x1, unprogrammed default
  2962                           ;	Flash Program Memory Code Protection bit
  2963                           ;	CP = OFF, Code protection off
  2964  2007                     	org	8199
  2965  2007  3FF2               	dw	16370

Data Sizes:
    Strings     4
    Constant    0
    Data        5
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _UART_Init->___lldiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Number->___lwdiv
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _main in BANK0

    _main->_LCD_Write_Number

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    3553
                                             25 BANK0     24    24      0
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_Number
                   _LCD_Write_String
                    _UART_Data_Ready
                          _UART_Init
                     _UART_Read_Char
                    _UART_Write_Char
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     698
                                              0 BANK0     18    14      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     400
                                              6 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Number                                    29    27      2    1252
                                              8 COMMON     4     2      2
                                              0 BANK0     25    25      0
                     _LCD_Write_Char
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     684
                                              4 COMMON     7     6      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_Number
     _LCD_Write_Char
       _LCD_DATA
     ___lwdiv
     ___lwmod
   _LCD_Write_String
     _LCD_Write_Char
   _UART_Data_Ready
   _UART_Init
     ___lldiv
   _UART_Read_Char
   _UART_Write_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     31      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 14 05:12:00 2022

                        _i 0056                          pc 0002                         l31 032E  
                       l23 0316                         l24 0319                         l25 031F  
                       l26 0320                         l34 030C                         l42 0422  
                       l27 0326                         l28 0327                         l29 032D  
                       l45 0542                         l54 0353                         l48 0475  
                       l64 05B6                         fsr 0004                        l109 06D6  
                      l154 0678                        l163 02E8                        l309 04DB  
                      l157 069C                        l181 02E6                        l166 02F2  
                      l175 02DE                        l178 02DF                        l545 03D1  
                      l555 038D                        _RB2 0032                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u600 049A  
                      u601 0499                        u530 0312                        u531 0311  
                      u540 031D                        u620 04B5                        u541 031C  
                      u621 04B4                        u550 0324                        u710 03CD  
                      u551 0323                        u711 03CC                        u615 049C  
                      u560 032B                        u800 0400                        u720 035A  
                      u640 04D3                        u561 032A                        u801 03FF  
                      u705 03C1                        u721 0359                        u641 04D2  
                      u625 04B1                        u650 0396                        u651 0395  
                      u635 04C5                        u740 036C                        u820 0353  
                      u580 0486                        u900 0629                        u741 036B  
                      u821 0352                        u581 0485                        u670 03A8  
                      u750 0376                        u830 054D                        u910 0642  
                      u815 0408                        u575 0434                        u671 03A7  
                      u751 0375                        u735 035E                        u831 054C  
                      u840 058D                        u665 039A                        u841 058C  
                      u921 0654                        u905 0624                        u690 03B9  
                      u770 0389                        u850 059B                        u930 0686  
                      u922 0655                        u691 03B8                        u771 0388  
                      u755 0372                        u851 059A                        u595 048B  
                      u931 0685                        u923 065A                        u915 063D  
                      u780 03D8                        u924 065B                        u860 05C7  
                      u940 02EE                        u781 03D7                        u685 03A9  
                      u765 037D                        u925 0660                        u941 02ED  
                      u926 0661                        u870 05E0                        u950 02E5  
                      u695 03B5                        u951 02E4                        u960 06D6  
                      u881 05F2                        u865 05C2                        u961 06D5  
                      _RX9 00C6                        u890 061B                        u882 05F3  
                      u970 06DA                        u795 03E0                        u891 061A  
                      u883 05F8                        u875 05DB                        u971 06D9  
                      u884 05F9                        u980 070B                        u885 05FE  
                      u981 070A                        u886 05FF                        u990 0750  
                      u991 074F                        u985 0707                        _TX9 04C6  
                      fsr0 0004                        indf 0000            __end_of_LCD_CMD 030D  
           _LCD_Set_Cursor 03D2                       l1201 038E                       l1211 03A4  
                     l1203 0390                       l1141 032B                       l1133 030E  
                     l1301 0536                       l1221 03C7                       l1213 03A8  
                     l1205 0396                       l1135 0312                       l1151 0309  
                     l1143 02F4                       l1303 053C                       l1215 03B9  
                     l1207 0399                       l1223 03CD                       l1231 035D  
                     l1311 0346                       l1137 031D                       l1145 02F7  
                     l1161 0442                       l1153 0424                       l1217 03BF  
                     l1209 03A0                       l1241 037C                       l1233 0364  
                     l1321 0554                       l1313 0543                       l1305 0330  
                     l1401 06C8                       l1139 0324                       l1147 02FD  
                     l1251 03D8                       l1171 0460                       l1163 044B  
                     l1155 042E                       l1219 03C0                       l1243 0383  
                     l1235 0368                       l1227 0354                       l1331 0597  
                     l1323 056E                       l1315 0547                       l1307 0333  
                     l1411 06DA                       l1403 06CC                       l1149 0300  
                     l1261 0400                       l1253 03E9                       l1173 0469  
                     l1165 044E                       l1157 0431                       l1237 036C  
                     l1229 035A                       l1245 0389                       l1325 057F  
                     l1317 054D                       l1309 0340                       l1181 0489  
                     l1421 06F6                       l1405 06CD                       l1271 04DF  
                     l1263 0411                       l1255 03EE                       l1175 046C  
                     l1167 0457                       l1159 043F                       l1239 0376  
                     l1335 059C                       l1319 054D                       l1327 0587  
                     l1191 04C3                       l1183 0496                       l1351 067B  
                     l1343 05B7                       l1431 0725                       l1423 06FE  
                     l1407 06D0                       l1281 04F8                       l1273 04E0  
                     l1265 0416                       l1257 03F4                       l1249 03D3  
                     l1169 045D                       l1337 05A7                       l1329 058D  
                     l1193 04C4                       l1185 049A                       l1177 0476  
                     l1361 0691                       l1353 0686                       l1345 0612  
                     l1441 075A                       l1433 072A                       l1417 06DC  
                     l1425 070B                       l1291 0518                       l1283 04FE  
                     l1275 04E1                       l1267 041C                       l1259 03FA  
                     l1339 05AD                       l1195 04CD                       l1187 04A3  
                     l1179 0486                       l1363 0692                       l1355 068A  
                     l1347 061B                       l1451 078D                       l1443 0768  
                     l1435 073F                       l1427 0713                       l1419 06E8  
                     l1293 051E                       l1285 0507                       l1277 04E7  
                     l1269 04DC                       l1189 04B5                       l1197 04D3  
                     l1365 0693                       l1357 068B                       l1349 0674  
                     l1381 02DF                       l1373 02E8                       l1453 0795  
                     l1445 076E                       l1437 0747                       l1429 0719  
                     l1295 0524                       l1287 050D                       l1279 04EF  
                     l1367 0696                       l1359 068E                       l1383 02E5  
                     l1375 02EE                       l1463 07AB                       l1455 079B  
                     l1447 077B                       l1439 0750                       l1297 052A  
                     l1289 0512                       l1377 02D9                       l1369 0699  
                     l1465 07C3                       l1457 07A7                       l1449 077F  
                     l1393 069D                       l1299 0530                       l1467 07CB  
                     l1395 06A1                       l1397 06B0                       l1399 06B5  
      LCD_Write_String@str 0078                       STR_1 000B                       STR_2 0009  
                     STR_3 000B                       STR_4 0009                       _BRGH 04C2  
                     u1000 075A                       _CREN 00C4                       u1001 0759  
                     u1010 077B                       u1011 077A                       u1020 07D8  
                     u1021 07D7                       u1015 0777                       u1025 07D4  
                     u1107 0470                       u1117 04EB                       u1127 04F3  
                     u1137 0502                       u1057 06F0                       u1147 050F  
                     u1067 0787                       u1157 0304                       u1077 0446  
                     u1087 0452                       u1097 0464                       _RCIF 0065  
                     _SPEN 00C7                       _TRMT 04C1                       _TXEN 04C5  
                     _SYNC 04C4          ?_LCD_Write_Number 0078          ?_LCD_Write_String 0070  
                     _main 069D                       btemp 007E         ??_LCD_Write_Number 007A  
                     start 0000         ??_LCD_Write_String 0076    __end_of_UART_Write_Char 02F3  
         __end_of_LCD_DATA 032F           __end_of_LCD_Init 0543                      ?_main 0070  
          __end_of___lldiv 04DC            __end_of___lwdiv 03D2            __end_of___lwmod 038E  
                    _RCREG 001A                      _SPBRG 0099                      _PORTD 0008  
                    _TRISB 0086                      _TRISD 0088                      _TXREG 0019  
   __end_of_LCD_Set_Cursor 0423         __size_of_UART_Init 00E6                      main@i 004B  
                    main@v 004F                      main@y 004D                      pclath 000A  
                    status 0003                      wtemp0 007E             _LCD_Write_Char 0423  
          __initialization 07DC               __end_of_main 07DC                     ??_main 0039  
                ??_LCD_CMD 0071            ?_LCD_Set_Cursor 0074                     _ADCON1 009F  
                   _TRISD2 0442                     _TRISD3 0443                     _TRISC6 043E  
                   _TRISC7 043F     __end_of_LCD_Write_Char 0476          __end_of_UART_Init 069D  
         ?_UART_Write_Char 0070                  ??___lldiv 0078                  ??___lwdiv 0074  
                ??___lwmod 0074    __size_of_UART_Read_Char 0008     UART_Init@uart_baudRate 0020  
          LCD_Set_Cursor@c 0074            LCD_Set_Cursor@r 0077                  ?_LCD_DATA 0070  
  __end_of__initialization 07FC                  ?_LCD_Init 0070            ?_LCD_Write_Char 0070  
           __pcstackCOMMON 0070               __pidataBANK0 02D4                 __pbssBANK0 0056  
               ??_LCD_DATA 0070                 ??_LCD_Init 0074   __size_of_UART_Data_Ready 0006  
               __pmaintext 069D  __size_of_LCD_Write_Number 0074  __size_of_LCD_Write_String 0025  
                  _LCD_CMD 02F3                 __stringtab 0003             _UART_Read_Char 02DF  
                  ___lldiv 0476                    ___lwdiv 038E                    ___lwmod 0354  
         ??_LCD_Set_Cursor 0075                    __ptext1 02E7                    __ptext2 02DF  
                  __ptext3 05B7                    __ptext4 0476                    __ptext5 02D9  
                  __ptext6 032F                    __ptext7 0543                    __ptext8 0354  
                  __ptext9 038E       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D     __end_of_UART_Read_Char 02E7          ??_UART_Data_Ready 0070  
                _UART_Init 05B7                 LCD_CMD@CMD 0073          LCD_Write_Number@c 0036  
        LCD_Write_Number@k 0034          LCD_Write_Number@p 0037          LCD_Write_String@i 0076  
         ??_LCD_Write_Char 0071          __size_of_LCD_DATA 0022                 main@r_data 003C  
               main@w_data 0046          __size_of_LCD_Init 0067            ?_UART_Read_Char 0070  
         _LCD_Write_Number 0543           _LCD_Write_String 032F                 ?_UART_Init 0020  
 __size_of_UART_Write_Char 000C        start_initialization 07DC                __pdataBANK0 0051  
                 ?_LCD_CMD 0070                  ___latbits 0002              __pcstackBANK0 0020  
         ___lwdiv@dividend 0072                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0070                ??_UART_Init 0024                  __pstrings 0003  
         ___lwdiv@quotient 0075          ??_UART_Write_Char 0070                 UART_Init@x 0030  
                 _LCD_DATA 030D                   _LCD_Init 04DC            _UART_Data_Ready 02D9  
              __stringbase 0008           __size_of_LCD_CMD 001A   __end_of_LCD_Write_Number 05B7  
 __end_of_LCD_Write_String 0354           ??_UART_Read_Char 0070        LCD_Write_Char@High4 0074  
         __size_of___lldiv 0066           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0009            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0423                   __ptext11 03D2                   __ptext12 04DC  
                 __ptext13 02F3                   __ptext14 030D    __end_of_UART_Data_Ready 02DF  
  __size_of_LCD_Set_Cursor 0051              __size_of_main 013F                   main@F909 0051  
      LCD_Set_Cursor@High4 0079     LCD_Write_Number@number 0078         LCD_Write_Char@Data 0075  
       LCD_Write_Char@Low4 0073           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 0003    __size_of_LCD_Write_Char 0053         LCD_Set_Cursor@Low4 0078  
        UART_Write_Char@ch 0070         LCD_Set_Cursor@Temp 007A            _UART_Write_Char 02E7  
             LCD_DATA@Data 0070           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 0003                   stringtab 0003  
         ?_UART_Data_Ready 0070        LCD_Write_Number@num 0020  
