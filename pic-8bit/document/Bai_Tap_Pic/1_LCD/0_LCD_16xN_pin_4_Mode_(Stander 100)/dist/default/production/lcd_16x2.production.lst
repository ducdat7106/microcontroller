

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jan 16 19:31:41 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0047                     _RD7	set	71
   235  0046                     _RD6	set	70
   236  0045                     _RD5	set	69
   237  0044                     _RD4	set	68
   238  0043                     _RD3	set	67
   239  0042                     _RD2	set	66
   240  0088                     _TRISD	set	136
   241  009F                     _ADCON1	set	159
   242  0443                     _TRISD3	set	1091
   243  0442                     _TRISD2	set	1090
   244                           
   245                           	psect	strings
   246  0003                     __pstrings:
   247  0003                     stringtab:
   248  0003                     __stringtab:
   249  0003                     stringcode:	
   250                           ;	String table - string pointers are 1 byte each
   251                           
   252  0003                     stringdir:
   253  0003  3000               	movlw	high stringdir
   254  0004  008A               	movwf	10
   255  0005  0804               	movf	4,w
   256  0006  0A84               	incf	4,f
   257  0007  0782               	addwf	2,f
   258  0008                     __stringbase:
   259  0008  3400               	retlw	0
   260  0009                     __end_of__stringtab:
   261  0009                     STR_1:
   262  0009  3449               	retlw	73	;'I'
   263  000A  3441               	retlw	65	;'A'
   264  000B  3400               	retlw	0
   265                           
   266                           	psect	cinit
   267  07FC                     start_initialization:	
   268                           ; #config settings
   269                           
   270  07FC                     __initialization:
   271  07FC                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274  07FC                     __end_of__initialization:
   275  07FC  0183               	clrf	3
   276  07FD  120A  118A  2D98   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	cstackCOMMON
   279  0070                     __pcstackCOMMON:
   280  0070                     ?_LCD_Init:
   281  0070                     ?_LCD_Write_String:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_LCD_DATA:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ??_LCD_DATA:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_LCD_CMD:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_LCD_Write_Char:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?___lwdiv:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?___lwmod:	
   303                           ; 2 bytes @ 0x0
   304                           
   305  0070                     LCD_DATA@Data:	
   306                           ; 2 bytes @ 0x0
   307                           
   308  0070                     ___lwdiv@divisor:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ___lwmod@divisor:	
   312                           ; 2 bytes @ 0x0
   313                           
   314                           
   315                           ; 2 bytes @ 0x0
   316  0070                     	ds	1
   317  0071                     ??_LCD_CMD:
   318  0071                     ??_LCD_Write_Char:	
   319                           ; 1 bytes @ 0x1
   320                           
   321                           
   322                           ; 1 bytes @ 0x1
   323  0071                     	ds	1
   324  0072                     ___lwdiv@dividend:
   325  0072                     ___lwmod@dividend:	
   326                           ; 2 bytes @ 0x2
   327                           
   328                           
   329                           ; 2 bytes @ 0x2
   330  0072                     	ds	1
   331  0073                     LCD_Write_Char@Low4:
   332  0073                     LCD_CMD@CMD:	
   333                           ; 1 bytes @ 0x3
   334                           
   335                           
   336                           ; 1 bytes @ 0x3
   337  0073                     	ds	1
   338  0074                     ??_LCD_Init:
   339  0074                     ?_LCD_Set_Cursor:	
   340                           ; 1 bytes @ 0x4
   341                           
   342  0074                     ??___lwdiv:	
   343                           ; 1 bytes @ 0x4
   344                           
   345  0074                     ??___lwmod:	
   346                           ; 1 bytes @ 0x4
   347                           
   348  0074                     LCD_Set_Cursor@c:	
   349                           ; 1 bytes @ 0x4
   350                           
   351  0074                     LCD_Write_Char@High4:	
   352                           ; 1 bytes @ 0x4
   353                           
   354  0074                     ___lwmod@counter:	
   355                           ; 1 bytes @ 0x4
   356                           
   357  0074                     ___lwdiv@quotient:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 2 bytes @ 0x4
   362  0074                     	ds	1
   363  0075                     ??_LCD_Set_Cursor:
   364  0075                     LCD_Write_Char@Data:	
   365                           ; 1 bytes @ 0x5
   366                           
   367                           
   368                           ; 1 bytes @ 0x5
   369  0075                     	ds	1
   370  0076                     ??_LCD_Write_String:
   371  0076                     LCD_Set_Cursor@r:	
   372                           ; 1 bytes @ 0x6
   373                           
   374  0076                     ___lwdiv@counter:	
   375                           ; 1 bytes @ 0x6
   376                           
   377  0076                     LCD_Write_String@i:	
   378                           ; 1 bytes @ 0x6
   379                           
   380                           
   381                           ; 2 bytes @ 0x6
   382  0076                     	ds	1
   383  0077                     ?_LCD_Write_Number:
   384  0077                     LCD_Set_Cursor@Low4:	
   385                           ; 1 bytes @ 0x7
   386                           
   387  0077                     LCD_Write_Number@number:	
   388                           ; 1 bytes @ 0x7
   389                           
   390                           
   391                           ; 2 bytes @ 0x7
   392  0077                     	ds	1
   393  0078                     LCD_Set_Cursor@High4:
   394  0078                     LCD_Write_String@str:	
   395                           ; 1 bytes @ 0x8
   396                           
   397                           
   398                           ; 1 bytes @ 0x8
   399  0078                     	ds	1
   400  0079                     ??_LCD_Write_Number:
   401  0079                     LCD_Set_Cursor@Temp:	
   402                           ; 1 bytes @ 0x9
   403                           
   404                           
   405                           ; 1 bytes @ 0x9
   406  0079                     	ds	1
   407  007A                     ??_main:
   408                           
   409                           	psect	cstackBANK0
   410  0020                     __pcstackBANK0:	
   411                           ; 1 bytes @ 0xA
   412                           
   413  0020                     LCD_Write_Number@num:
   414                           
   415                           ; 20 bytes @ 0x0
   416  0020                     	ds	20
   417  0034                     LCD_Write_Number@k:
   418                           
   419                           ; 2 bytes @ 0x14
   420  0034                     	ds	2
   421  0036                     LCD_Write_Number@c:
   422                           
   423                           ; 1 bytes @ 0x16
   424  0036                     	ds	1
   425  0037                     LCD_Write_Number@p:
   426                           
   427                           ; 2 bytes @ 0x17
   428  0037                     	ds	2
   429                           
   430                           	psect	maintext
   431  0598                     __pmaintext:	
   432 ;;
   433 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   434 ;;
   435 ;; *************** function _main *****************
   436 ;; Defined at:
   437 ;;		line 11 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : B00/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   451 ;;      Params:         0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels required when called:    3
   457 ;; This function calls:
   458 ;;		_LCD_Init
   459 ;;		_LCD_Set_Cursor
   460 ;;		_LCD_Write_Number
   461 ;;		_LCD_Write_String
   462 ;; This function is called by:
   463 ;;		Startup code after reset
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _main
   469  0598                     _main:
   470  0598                     l1094:	
   471                           ;incstack = 0
   472                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   473                           
   474                           
   475                           ;main.c: 14:     ADCON1 = 0x06;
   476  0598  3006               	movlw	6
   477  0599  1683               	bsf	3,5	;RP0=1, select bank1
   478  059A  1303               	bcf	3,6	;RP1=0, select bank1
   479  059B  009F               	movwf	31	;volatile
   480  059C                     l1096:
   481                           
   482                           ;main.c: 15:     LCD_Init();
   483  059C  120A  118A  2715  120A  118A  	fcall	_LCD_Init
   484  05A1                     l1098:
   485                           
   486                           ;main.c: 17:     LCD_Set_Cursor(1,1);
   487  05A1  01F4               	clrf	LCD_Set_Cursor@c
   488  05A2  0AF4               	incf	LCD_Set_Cursor@c,f
   489  05A3  3001               	movlw	1
   490  05A4  120A  118A  2670  120A  118A  	fcall	_LCD_Set_Cursor
   491  05A9                     l1100:
   492                           
   493                           ;main.c: 18:     LCD_Write_String("IA");
   494  05A9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   495  05AA  120A  118A  2573  120A  118A  	fcall	_LCD_Write_String
   496  05AF                     l1102:
   497                           
   498                           ;main.c: 19:     LCD_Set_Cursor(2,1);
   499  05AF  01F4               	clrf	LCD_Set_Cursor@c
   500  05B0  0AF4               	incf	LCD_Set_Cursor@c,f
   501  05B1  3002               	movlw	2
   502  05B2  120A  118A  2670  120A  118A  	fcall	_LCD_Set_Cursor
   503  05B7                     l1104:
   504                           
   505                           ;main.c: 20:     LCD_Write_Number(9999);
   506  05B7  300F               	movlw	15
   507  05B8  00F7               	movwf	LCD_Write_Number@number
   508  05B9  3027               	movlw	39
   509  05BA  00F8               	movwf	LCD_Write_Number@number+1
   510  05BB  120A  118A  277C  120A  118A  	fcall	_LCD_Write_Number
   511  05C0                     l15:	
   512                           ;main.c: 21:     while(1)
   513                           
   514  05C0                     l16:	
   515                           ;main.c: 22:     {;main.c: 23:     }
   516                           
   517  05C0  2DC0               	goto	l15
   518  05C1  120A  118A  2800   	ljmp	start
   519  05C4                     __end_of_main:
   520                           
   521                           	psect	text1
   522  0573                     __ptext1:	
   523 ;; *************** function _LCD_Write_String *****************
   524 ;; Defined at:
   525 ;;		line 71 in file "lcd.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  str             1    wreg     PTR unsigned char 
   528 ;;		 -> STR_1(3), 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  str             1    8[COMMON] PTR unsigned char 
   531 ;;		 -> STR_1(3), 
   532 ;;  i               2    6[COMMON] int 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         3       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         3       0       0       0       0
   546 ;;Total ram usage:        3 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		_LCD_Write_Char
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _LCD_Write_String
   558  0573                     _LCD_Write_String:
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   562                           ;LCD_Write_String@str stored from wreg
   563  0573  00F8               	movwf	LCD_Write_String@str
   564  0574                     l1052:
   565                           
   566                           ;lcd.c: 71: void LCD_Write_String(char *str);lcd.c: 72: {;lcd.c: 73:   int i;;lcd.c: 74:
      +                             for(i=0;str[i]!='\0';i++)
   567  0574  01F6               	clrf	LCD_Write_String@i
   568  0575  01F7               	clrf	LCD_Write_String@i+1
   569  0576  2D8A               	goto	l1058
   570  0577                     l1054:
   571                           
   572                           ;lcd.c: 75:     LCD_Write_Char(str[i]);
   573  0577  0876               	movf	LCD_Write_String@i,w
   574  0578  0778               	addwf	LCD_Write_String@str,w
   575  0579  0084               	movwf	4
   576  057A  120A  118A  2003  120A  118A  	fcall	stringdir
   577  057F  120A  118A  26C2  120A  118A  	fcall	_LCD_Write_Char
   578  0584                     l1056:
   579  0584  3001               	movlw	1
   580  0585  07F6               	addwf	LCD_Write_String@i,f
   581  0586  1803               	skipnc
   582  0587  0AF7               	incf	LCD_Write_String@i+1,f
   583  0588  3000               	movlw	0
   584  0589  07F7               	addwf	LCD_Write_String@i+1,f
   585  058A                     l1058:
   586  058A  0876               	movf	LCD_Write_String@i,w
   587  058B  0778               	addwf	LCD_Write_String@str,w
   588  058C  0084               	movwf	4
   589  058D  120A  118A  2003  120A  118A  	fcall	stringdir
   590  0592  3A00               	xorlw	0
   591  0593  1D03               	skipz
   592  0594  2D96               	goto	u521
   593  0595  2D97               	goto	u520
   594  0596                     u521:
   595  0596  2D77               	goto	l1054
   596  0597                     u520:
   597  0597                     l63:
   598  0597  0008               	return
   599  0598                     __end_of_LCD_Write_String:
   600                           
   601                           	psect	text2
   602  077C                     __ptext2:	
   603 ;; *************** function _LCD_Write_Number *****************
   604 ;; Defined at:
   605 ;;		line 90 in file "lcd.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  number          2    7[COMMON] unsigned int 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  num            20    0[BANK0 ] unsigned int [10]
   610 ;;  p               2   23[BANK0 ] int 
   611 ;;  k               2   20[BANK0 ] int 
   612 ;;  c               1   22[BANK0 ] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         2       0       0       0       0
   623 ;;      Locals:         0      25       0       0       0
   624 ;;      Temps:          1       0       0       0       0
   625 ;;      Totals:         3      25       0       0       0
   626 ;;Total ram usage:       28 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    2
   629 ;; This function calls:
   630 ;;		_LCD_Write_Char
   631 ;;		___lwdiv
   632 ;;		___lwmod
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _LCD_Write_Number
   640  077C                     _LCD_Write_Number:
   641  077C                     l1060:	
   642                           ;incstack = 0
   643                           ; Regs used in _LCD_Write_Number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   644                           
   645                           
   646                           ;lcd.c: 95:     int k=0;
   647  077C  1283               	bcf	3,5	;RP0=0, select bank0
   648  077D  1303               	bcf	3,6	;RP1=0, select bank0
   649  077E  01B4               	clrf	LCD_Write_Number@k
   650  077F  01B5               	clrf	LCD_Write_Number@k+1
   651  0780                     l1062:
   652                           
   653                           ;lcd.c: 97:     if(number == 0)
   654  0780  0877               	movf	LCD_Write_Number@number,w
   655  0781  0478               	iorwf	LCD_Write_Number@number+1,w
   656  0782  1D03               	btfss	3,2
   657  0783  2F85               	goto	u531
   658  0784  2F86               	goto	u530
   659  0785                     u531:
   660  0785  2F92               	goto	l1068
   661  0786                     u530:
   662  0786                     l1064:
   663                           
   664                           ;lcd.c: 98:     {;lcd.c: 99:         c = (char)(number + '0');
   665  0786  0877               	movf	LCD_Write_Number@number,w
   666  0787  3E30               	addlw	48
   667  0788  00FF               	movwf	btemp+1
   668  0789  087F               	movf	btemp+1,w
   669  078A  00B6               	movwf	LCD_Write_Number@c
   670  078B                     l1066:
   671                           
   672                           ;lcd.c: 100:         LCD_Write_Char(c);
   673  078B  0836               	movf	LCD_Write_Number@c,w
   674  078C  120A  118A  26C2  120A  118A  	fcall	_LCD_Write_Char
   675                           
   676                           ;lcd.c: 101:     }
   677  0791  2FFB               	goto	l80
   678  0792                     l1068:
   679  0792  0877               	movf	LCD_Write_Number@number,w
   680  0793  0478               	iorwf	LCD_Write_Number@number+1,w
   681  0794  1903               	btfsc	3,2
   682  0795  2F97               	goto	u541
   683  0796  2F98               	goto	u540
   684  0797                     u541:
   685  0797  2FFB               	goto	l80
   686  0798                     u540:
   687  0798  2FCC               	goto	l1078
   688  0799                     l1072:
   689                           
   690                           ;lcd.c: 105:         {;lcd.c: 106:         num[k]=number%10;
   691  0799  300A               	movlw	10
   692  079A  00F0               	movwf	___lwmod@divisor
   693  079B  3000               	movlw	0
   694  079C  00F1               	movwf	___lwmod@divisor+1
   695  079D  0878               	movf	LCD_Write_Number@number+1,w
   696  079E  00F3               	movwf	___lwmod@dividend+1
   697  079F  0877               	movf	LCD_Write_Number@number,w
   698  07A0  00F2               	movwf	___lwmod@dividend
   699  07A1  120A  118A  25F2  120A  118A  	fcall	___lwmod
   700  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   701  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   702  07A8  0834               	movf	LCD_Write_Number@k,w
   703  07A9  00F9               	movwf	??_LCD_Write_Number
   704  07AA  0779               	addwf	??_LCD_Write_Number,w
   705  07AB  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
   706  07AC  0084               	movwf	4
   707  07AD  0870               	movf	?___lwmod,w
   708  07AE  1383               	bcf	3,7	;select IRP bank0
   709  07AF  0080               	movwf	0
   710  07B0  0A84               	incf	4,f
   711  07B1  0871               	movf	?___lwmod+1,w
   712  07B2  0080               	movwf	0
   713  07B3                     l1074:
   714                           
   715                           ;lcd.c: 107:         number = number/10;
   716  07B3  300A               	movlw	10
   717  07B4  00F0               	movwf	___lwdiv@divisor
   718  07B5  3000               	movlw	0
   719  07B6  00F1               	movwf	___lwdiv@divisor+1
   720  07B7  0878               	movf	LCD_Write_Number@number+1,w
   721  07B8  00F3               	movwf	___lwdiv@dividend+1
   722  07B9  0877               	movf	LCD_Write_Number@number,w
   723  07BA  00F2               	movwf	___lwdiv@dividend
   724  07BB  120A  118A  262C  120A  118A  	fcall	___lwdiv
   725  07C0  0871               	movf	?___lwdiv+1,w
   726  07C1  00F8               	movwf	LCD_Write_Number@number+1
   727  07C2  0870               	movf	?___lwdiv,w
   728  07C3  00F7               	movwf	LCD_Write_Number@number
   729  07C4                     l1076:
   730                           
   731                           ;lcd.c: 108:         k++;
   732  07C4  3001               	movlw	1
   733  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   734  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   735  07C7  07B4               	addwf	LCD_Write_Number@k,f
   736  07C8  1803               	skipnc
   737  07C9  0AB5               	incf	LCD_Write_Number@k+1,f
   738  07CA  3000               	movlw	0
   739  07CB  07B5               	addwf	LCD_Write_Number@k+1,f
   740  07CC                     l1078:
   741                           
   742                           ;lcd.c: 104:         while(number>0)
   743  07CC  0877               	movf	LCD_Write_Number@number,w
   744  07CD  0478               	iorwf	LCD_Write_Number@number+1,w
   745  07CE  1D03               	btfss	3,2
   746  07CF  2FD1               	goto	u551
   747  07D0  2FD2               	goto	u550
   748  07D1                     u551:
   749  07D1  2F99               	goto	l1072
   750  07D2                     u550:
   751  07D2                     l1080:
   752                           
   753                           ;lcd.c: 111:         k--;
   754  07D2  30FF               	movlw	255
   755  07D3  07B4               	addwf	LCD_Write_Number@k,f
   756  07D4  1803               	skipnc
   757  07D5  0AB5               	incf	LCD_Write_Number@k+1,f
   758  07D6  30FF               	movlw	255
   759  07D7  07B5               	addwf	LCD_Write_Number@k+1,f
   760                           
   761                           ;lcd.c: 112:         for(p=k; p>=0; p--)
   762  07D8  0835               	movf	LCD_Write_Number@k+1,w
   763  07D9  00B8               	movwf	LCD_Write_Number@p+1
   764  07DA  0834               	movf	LCD_Write_Number@k,w
   765  07DB  00B7               	movwf	LCD_Write_Number@p
   766  07DC                     l1082:
   767  07DC  1FB8               	btfss	LCD_Write_Number@p+1,7
   768  07DD  2FDF               	goto	u561
   769  07DE  2FE0               	goto	u560
   770  07DF                     u561:
   771  07DF  2FE1               	goto	l1086
   772  07E0                     u560:
   773  07E0  2FFB               	goto	l80
   774  07E1                     l1086:
   775                           
   776                           ;lcd.c: 113:         {;lcd.c: 114:             c = (char)(num[p] + '0');
   777  07E1  0837               	movf	LCD_Write_Number@p,w
   778  07E2  00F9               	movwf	??_LCD_Write_Number
   779  07E3  0779               	addwf	??_LCD_Write_Number,w
   780  07E4  3E20               	addlw	(low (LCD_Write_Number@num| 0))& (0+255)
   781  07E5  0084               	movwf	4
   782  07E6  1383               	bcf	3,7	;select IRP bank0
   783  07E7  0800               	movf	0,w
   784  07E8  3E30               	addlw	48
   785  07E9  00FF               	movwf	btemp+1
   786  07EA  087F               	movf	btemp+1,w
   787  07EB  00B6               	movwf	LCD_Write_Number@c
   788  07EC                     l1088:
   789                           
   790                           ;lcd.c: 115:             LCD_Write_Char(c);
   791  07EC  0836               	movf	LCD_Write_Number@c,w
   792  07ED  120A  118A  26C2  120A  118A  	fcall	_LCD_Write_Char
   793  07F2                     l1090:
   794                           
   795                           ;lcd.c: 116:         }
   796  07F2  30FF               	movlw	255
   797  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   798  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   799  07F5  07B7               	addwf	LCD_Write_Number@p,f
   800  07F6  1803               	skipnc
   801  07F7  0AB8               	incf	LCD_Write_Number@p+1,f
   802  07F8  30FF               	movlw	255
   803  07F9  07B8               	addwf	LCD_Write_Number@p+1,f
   804  07FA  2FDC               	goto	l1082
   805  07FB                     l80:
   806  07FB  0008               	return
   807  07FC                     __end_of_LCD_Write_Number:
   808                           
   809                           	psect	text3
   810  05F2                     __ptext3:	
   811 ;; *************** function ___lwmod *****************
   812 ;; Defined at:
   813 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  divisor         2    0[COMMON] unsigned int 
   816 ;;  dividend        2    2[COMMON] unsigned int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  counter         1    4[COMMON] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2    0[COMMON] unsigned int 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, btemp+1
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         4       0       0       0       0
   829 ;;      Locals:         1       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         5       0       0       0       0
   832 ;;Total ram usage:        5 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_LCD_Write_Number
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function ___lwmod
   843  05F2                     ___lwmod:
   844  05F2                     l974:	
   845                           ;incstack = 0
   846                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   847                           
   848  05F2  0870               	movf	___lwmod@divisor,w
   849  05F3  0471               	iorwf	___lwmod@divisor+1,w
   850  05F4  1903               	btfsc	3,2
   851  05F5  2DF7               	goto	u421
   852  05F6  2DF8               	goto	u420
   853  05F7                     u421:
   854  05F7  2E27               	goto	l992
   855  05F8                     u420:
   856  05F8                     l976:
   857  05F8  01F4               	clrf	___lwmod@counter
   858  05F9  0AF4               	incf	___lwmod@counter,f
   859  05FA  2E06               	goto	l982
   860  05FB                     l978:
   861  05FB  3001               	movlw	1
   862  05FC                     u435:
   863  05FC  1003               	clrc
   864  05FD  0DF0               	rlf	___lwmod@divisor,f
   865  05FE  0DF1               	rlf	___lwmod@divisor+1,f
   866  05FF  3EFF               	addlw	-1
   867  0600  1D03               	skipz
   868  0601  2DFC               	goto	u435
   869  0602                     l980:
   870  0602  3001               	movlw	1
   871  0603  00FF               	movwf	btemp+1
   872  0604  087F               	movf	btemp+1,w
   873  0605  07F4               	addwf	___lwmod@counter,f
   874  0606                     l982:
   875  0606  1FF1               	btfss	___lwmod@divisor+1,7
   876  0607  2E09               	goto	u441
   877  0608  2E0A               	goto	u440
   878  0609                     u441:
   879  0609  2DFB               	goto	l978
   880  060A                     u440:
   881  060A                     l984:
   882  060A  0871               	movf	___lwmod@divisor+1,w
   883  060B  0273               	subwf	___lwmod@dividend+1,w
   884  060C  1D03               	skipz
   885  060D  2E10               	goto	u455
   886  060E  0870               	movf	___lwmod@divisor,w
   887  060F  0272               	subwf	___lwmod@dividend,w
   888  0610                     u455:
   889  0610  1C03               	skipc
   890  0611  2E13               	goto	u451
   891  0612  2E14               	goto	u450
   892  0613                     u451:
   893  0613  2E1A               	goto	l988
   894  0614                     u450:
   895  0614                     l986:
   896  0614  0870               	movf	___lwmod@divisor,w
   897  0615  02F2               	subwf	___lwmod@dividend,f
   898  0616  0871               	movf	___lwmod@divisor+1,w
   899  0617  1C03               	skipc
   900  0618  03F3               	decf	___lwmod@dividend+1,f
   901  0619  02F3               	subwf	___lwmod@dividend+1,f
   902  061A                     l988:
   903  061A  3001               	movlw	1
   904  061B                     u465:
   905  061B  1003               	clrc
   906  061C  0CF1               	rrf	___lwmod@divisor+1,f
   907  061D  0CF0               	rrf	___lwmod@divisor,f
   908  061E  3EFF               	addlw	-1
   909  061F  1D03               	skipz
   910  0620  2E1B               	goto	u465
   911  0621                     l990:
   912  0621  3001               	movlw	1
   913  0622  02F4               	subwf	___lwmod@counter,f
   914  0623  1D03               	btfss	3,2
   915  0624  2E26               	goto	u471
   916  0625  2E27               	goto	u470
   917  0626                     u471:
   918  0626  2E0A               	goto	l984
   919  0627                     u470:
   920  0627                     l992:
   921  0627  0873               	movf	___lwmod@dividend+1,w
   922  0628  00F1               	movwf	?___lwmod+1
   923  0629  0872               	movf	___lwmod@dividend,w
   924  062A  00F0               	movwf	?___lwmod
   925  062B                     l464:
   926  062B  0008               	return
   927  062C                     __end_of___lwmod:
   928                           
   929                           	psect	text4
   930  062C                     __ptext4:	
   931 ;; *************** function ___lwdiv *****************
   932 ;; Defined at:
   933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  divisor         2    0[COMMON] unsigned int 
   936 ;;  dividend        2    2[COMMON] unsigned int 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  quotient        2    4[COMMON] unsigned int 
   939 ;;  counter         1    6[COMMON] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  2    0[COMMON] unsigned int 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, btemp+1
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         4       0       0       0       0
   950 ;;      Locals:         3       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0
   952 ;;      Totals:         7       0       0       0       0
   953 ;;Total ram usage:        7 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_LCD_Write_Number
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function ___lwdiv
   964  062C                     ___lwdiv:
   965  062C                     l948:	
   966                           ;incstack = 0
   967                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   968                           
   969  062C  01F4               	clrf	___lwdiv@quotient
   970  062D  01F5               	clrf	___lwdiv@quotient+1
   971  062E                     l950:
   972  062E  0870               	movf	___lwdiv@divisor,w
   973  062F  0471               	iorwf	___lwdiv@divisor+1,w
   974  0630  1903               	btfsc	3,2
   975  0631  2E33               	goto	u351
   976  0632  2E34               	goto	u350
   977  0633                     u351:
   978  0633  2E6B               	goto	l970
   979  0634                     u350:
   980  0634                     l952:
   981  0634  01F6               	clrf	___lwdiv@counter
   982  0635  0AF6               	incf	___lwdiv@counter,f
   983  0636  2E42               	goto	l958
   984  0637                     l954:
   985  0637  3001               	movlw	1
   986  0638                     u365:
   987  0638  1003               	clrc
   988  0639  0DF0               	rlf	___lwdiv@divisor,f
   989  063A  0DF1               	rlf	___lwdiv@divisor+1,f
   990  063B  3EFF               	addlw	-1
   991  063C  1D03               	skipz
   992  063D  2E38               	goto	u365
   993  063E                     l956:
   994  063E  3001               	movlw	1
   995  063F  00FF               	movwf	btemp+1
   996  0640  087F               	movf	btemp+1,w
   997  0641  07F6               	addwf	___lwdiv@counter,f
   998  0642                     l958:
   999  0642  1FF1               	btfss	___lwdiv@divisor+1,7
  1000  0643  2E45               	goto	u371
  1001  0644  2E46               	goto	u370
  1002  0645                     u371:
  1003  0645  2E37               	goto	l954
  1004  0646                     u370:
  1005  0646                     l960:
  1006  0646  3001               	movlw	1
  1007  0647                     u385:
  1008  0647  1003               	clrc
  1009  0648  0DF4               	rlf	___lwdiv@quotient,f
  1010  0649  0DF5               	rlf	___lwdiv@quotient+1,f
  1011  064A  3EFF               	addlw	-1
  1012  064B  1D03               	skipz
  1013  064C  2E47               	goto	u385
  1014  064D  0871               	movf	___lwdiv@divisor+1,w
  1015  064E  0273               	subwf	___lwdiv@dividend+1,w
  1016  064F  1D03               	skipz
  1017  0650  2E53               	goto	u395
  1018  0651  0870               	movf	___lwdiv@divisor,w
  1019  0652  0272               	subwf	___lwdiv@dividend,w
  1020  0653                     u395:
  1021  0653  1C03               	skipc
  1022  0654  2E56               	goto	u391
  1023  0655  2E57               	goto	u390
  1024  0656                     u391:
  1025  0656  2E5E               	goto	l966
  1026  0657                     u390:
  1027  0657                     l962:
  1028  0657  0870               	movf	___lwdiv@divisor,w
  1029  0658  02F2               	subwf	___lwdiv@dividend,f
  1030  0659  0871               	movf	___lwdiv@divisor+1,w
  1031  065A  1C03               	skipc
  1032  065B  03F3               	decf	___lwdiv@dividend+1,f
  1033  065C  02F3               	subwf	___lwdiv@dividend+1,f
  1034  065D                     l964:
  1035  065D  1474               	bsf	___lwdiv@quotient,0
  1036  065E                     l966:
  1037  065E  3001               	movlw	1
  1038  065F                     u405:
  1039  065F  1003               	clrc
  1040  0660  0CF1               	rrf	___lwdiv@divisor+1,f
  1041  0661  0CF0               	rrf	___lwdiv@divisor,f
  1042  0662  3EFF               	addlw	-1
  1043  0663  1D03               	skipz
  1044  0664  2E5F               	goto	u405
  1045  0665                     l968:
  1046  0665  3001               	movlw	1
  1047  0666  02F6               	subwf	___lwdiv@counter,f
  1048  0667  1D03               	btfss	3,2
  1049  0668  2E6A               	goto	u411
  1050  0669  2E6B               	goto	u410
  1051  066A                     u411:
  1052  066A  2E46               	goto	l960
  1053  066B                     u410:
  1054  066B                     l970:
  1055  066B  0875               	movf	___lwdiv@quotient+1,w
  1056  066C  00F1               	movwf	?___lwdiv+1
  1057  066D  0874               	movf	___lwdiv@quotient,w
  1058  066E  00F0               	movwf	?___lwdiv
  1059  066F                     l454:
  1060  066F  0008               	return
  1061  0670                     __end_of___lwdiv:
  1062                           
  1063                           	psect	text5
  1064  06C2                     __ptext5:	
  1065 ;; *************** function _LCD_Write_Char *****************
  1066 ;; Defined at:
  1067 ;;		line 54 in file "lcd.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  Data            1    wreg     unsigned char 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  Data            1    5[COMMON] unsigned char 
  1072 ;;  High4           1    4[COMMON] unsigned char 
  1073 ;;  Low4            1    3[COMMON] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         3       0       0       0       0
  1085 ;;      Temps:          2       0       0       0       0
  1086 ;;      Totals:         5       0       0       0       0
  1087 ;;Total ram usage:        5 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    1
  1090 ;; This function calls:
  1091 ;;		_LCD_DATA
  1092 ;; This function is called by:
  1093 ;;		_LCD_Write_String
  1094 ;;		_LCD_Write_Number
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _LCD_Write_Char
  1100  06C2                     _LCD_Write_Char:
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1104                           ;LCD_Write_Char@Data stored from wreg
  1105  06C2  00F5               	movwf	LCD_Write_Char@Data
  1106  06C3                     l924:
  1107                           
  1108                           ;lcd.c: 54: void LCD_Write_Char(char Data);lcd.c: 55: {;lcd.c: 56:   char Low4,High4;;lc
      +                          d.c: 57:   Low4 = Data & 0x0F;
  1109  06C3  0875               	movf	LCD_Write_Char@Data,w
  1110  06C4  390F               	andlw	15
  1111  06C5  00FF               	movwf	btemp+1
  1112  06C6  087F               	movf	btemp+1,w
  1113  06C7  00F3               	movwf	LCD_Write_Char@Low4
  1114                           
  1115                           ;lcd.c: 58:   High4 = Data & 0xF0;
  1116  06C8  0875               	movf	LCD_Write_Char@Data,w
  1117  06C9  39F0               	andlw	240
  1118  06CA  00FF               	movwf	btemp+1
  1119  06CB  087F               	movf	btemp+1,w
  1120  06CC  00F4               	movwf	LCD_Write_Char@High4
  1121  06CD                     l926:
  1122                           
  1123                           ;lcd.c: 59:   RD2 = 1;
  1124  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1125  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1126  06CF  1508               	bsf	8,2	;volatile
  1127  06D0                     l928:
  1128                           
  1129                           ;lcd.c: 60:   LCD_DATA(High4>>4);
  1130  06D0  0874               	movf	LCD_Write_Char@High4,w
  1131  06D1  00F1               	movwf	??_LCD_Write_Char
  1132  06D2  3004               	movlw	4
  1133  06D3                     u345:
  1134  06D3  1003               	clrc
  1135  06D4  0CF1               	rrf	??_LCD_Write_Char,f
  1136  06D5  3EFF               	addlw	-1
  1137  06D6  1D03               	skipz
  1138  06D7  2ED3               	goto	u345
  1139  06D8  0871               	movf	??_LCD_Write_Char,w
  1140  06D9  120A  118A  2551  120A  118A  	fcall	_LCD_DATA
  1141  06DE                     l930:
  1142                           
  1143                           ;lcd.c: 61:   RD3 = 1;
  1144  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1145  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1146  06E0  1588               	bsf	8,3	;volatile
  1147  06E1                     l932:
  1148                           
  1149                           ;lcd.c: 62:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1150  06E1  3004               	movlw	4
  1151  06E2  00F2               	movwf	??_LCD_Write_Char+1
  1152  06E3  303D               	movlw	61
  1153  06E4  00F1               	movwf	??_LCD_Write_Char
  1154  06E5                     u577:
  1155  06E5  0BF1               	decfsz	??_LCD_Write_Char,f
  1156  06E6  2EE5               	goto	u577
  1157  06E7  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1158  06E8  2EE5               	goto	u577
  1159  06E9  2EEA               	nop2
  1160  06EA                     l934:
  1161                           
  1162                           ;lcd.c: 63:   RD3 = 0;
  1163  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1164  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1165  06EC  1188               	bcf	8,3	;volatile
  1166  06ED                     l936:
  1167                           
  1168                           ;lcd.c: 64:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1169  06ED  3004               	movlw	4
  1170  06EE  00F2               	movwf	??_LCD_Write_Char+1
  1171  06EF  303D               	movlw	61
  1172  06F0  00F1               	movwf	??_LCD_Write_Char
  1173  06F1                     u587:
  1174  06F1  0BF1               	decfsz	??_LCD_Write_Char,f
  1175  06F2  2EF1               	goto	u587
  1176  06F3  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1177  06F4  2EF1               	goto	u587
  1178  06F5  2EF6               	nop2
  1179  06F6                     l938:
  1180                           
  1181                           ;lcd.c: 65:   LCD_DATA(Low4);
  1182  06F6  0873               	movf	LCD_Write_Char@Low4,w
  1183  06F7  120A  118A  2551  120A  118A  	fcall	_LCD_DATA
  1184  06FC                     l940:
  1185                           
  1186                           ;lcd.c: 66:   RD3 = 1;
  1187  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1188  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1189  06FE  1588               	bsf	8,3	;volatile
  1190  06FF                     l942:
  1191                           
  1192                           ;lcd.c: 67:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1193  06FF  3004               	movlw	4
  1194  0700  00F2               	movwf	??_LCD_Write_Char+1
  1195  0701  303D               	movlw	61
  1196  0702  00F1               	movwf	??_LCD_Write_Char
  1197  0703                     u597:
  1198  0703  0BF1               	decfsz	??_LCD_Write_Char,f
  1199  0704  2F03               	goto	u597
  1200  0705  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1201  0706  2F03               	goto	u597
  1202  0707  2F08               	nop2
  1203  0708                     l944:
  1204                           
  1205                           ;lcd.c: 68:   RD3 = 0;
  1206  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1208  070A  1188               	bcf	8,3	;volatile
  1209  070B                     l946:
  1210                           
  1211                           ;lcd.c: 69:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1212  070B  3004               	movlw	4
  1213  070C  00F2               	movwf	??_LCD_Write_Char+1
  1214  070D  303D               	movlw	61
  1215  070E  00F1               	movwf	??_LCD_Write_Char
  1216  070F                     u607:
  1217  070F  0BF1               	decfsz	??_LCD_Write_Char,f
  1218  0710  2F0F               	goto	u607
  1219  0711  0BF2               	decfsz	??_LCD_Write_Char+1,f
  1220  0712  2F0F               	goto	u607
  1221  0713  2F14               	nop2
  1222  0714                     l57:
  1223  0714  0008               	return
  1224  0715                     __end_of_LCD_Write_Char:
  1225                           
  1226                           	psect	text6
  1227  0670                     __ptext6:	
  1228 ;; *************** function _LCD_Set_Cursor *****************
  1229 ;; Defined at:
  1230 ;;		line 33 in file "lcd.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  r               1    wreg     unsigned char 
  1233 ;;  c               1    4[COMMON] unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  r               1    6[COMMON] unsigned char 
  1236 ;;  Temp            1    9[COMMON] unsigned char 
  1237 ;;  High4           1    8[COMMON] unsigned char 
  1238 ;;  Low4            1    7[COMMON] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         1       0       0       0       0
  1249 ;;      Locals:         4       0       0       0       0
  1250 ;;      Temps:          1       0       0       0       0
  1251 ;;      Totals:         6       0       0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    2
  1255 ;; This function calls:
  1256 ;;		_LCD_CMD
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function _LCD_Set_Cursor
  1264  0670                     _LCD_Set_Cursor:
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1268                           ;LCD_Set_Cursor@r stored from wreg
  1269  0670  00F6               	movwf	LCD_Set_Cursor@r
  1270  0671                     l1032:
  1271                           
  1272                           ;lcd.c: 33: void LCD_Set_Cursor(unsigned char r, unsigned char c);lcd.c: 34: {;lcd.c: 35
      +                          :   unsigned char Temp,Low4,High4;;lcd.c: 36:   if(r == 1)
  1273  0671  0376               	decf	LCD_Set_Cursor@r,w
  1274  0672  1D03               	btfss	3,2
  1275  0673  2E75               	goto	u481
  1276  0674  2E76               	goto	u480
  1277  0675                     u481:
  1278  0675  2E99               	goto	l1042
  1279  0676                     u480:
  1280  0676                     l1034:
  1281                           
  1282                           ;lcd.c: 37:   {;lcd.c: 38:     Temp = 0x80 + c - 1;
  1283  0676  0874               	movf	LCD_Set_Cursor@c,w
  1284  0677  3E7F               	addlw	127
  1285  0678  00FF               	movwf	btemp+1
  1286  0679  087F               	movf	btemp+1,w
  1287  067A  00F9               	movwf	LCD_Set_Cursor@Temp
  1288                           
  1289                           ;lcd.c: 39:     High4 = Temp >> 4;
  1290  067B  0879               	movf	LCD_Set_Cursor@Temp,w
  1291  067C  00F5               	movwf	??_LCD_Set_Cursor
  1292  067D  3004               	movlw	4
  1293  067E                     u495:
  1294  067E  1003               	clrc
  1295  067F  0CF5               	rrf	??_LCD_Set_Cursor,f
  1296  0680  3EFF               	addlw	-1
  1297  0681  1D03               	skipz
  1298  0682  2E7E               	goto	u495
  1299  0683  0875               	movf	??_LCD_Set_Cursor,w
  1300  0684  00FF               	movwf	btemp+1
  1301  0685  087F               	movf	btemp+1,w
  1302  0686  00F8               	movwf	LCD_Set_Cursor@High4
  1303  0687                     l1036:
  1304                           
  1305                           ;lcd.c: 40:     Low4 = Temp & 0x0F;
  1306  0687  0879               	movf	LCD_Set_Cursor@Temp,w
  1307  0688  390F               	andlw	15
  1308  0689  00FF               	movwf	btemp+1
  1309  068A  087F               	movf	btemp+1,w
  1310  068B  00F7               	movwf	LCD_Set_Cursor@Low4
  1311  068C                     l1038:
  1312                           
  1313                           ;lcd.c: 41:     LCD_CMD(High4);
  1314  068C  0878               	movf	LCD_Set_Cursor@High4,w
  1315  068D  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1316  0692                     l1040:
  1317                           
  1318                           ;lcd.c: 42:     LCD_CMD(Low4);
  1319  0692  0877               	movf	LCD_Set_Cursor@Low4,w
  1320  0693  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1321                           
  1322                           ;lcd.c: 43:   }
  1323  0698  2EC1               	goto	l54
  1324  0699                     l1042:
  1325  0699  3002               	movlw	2
  1326  069A  0676               	xorwf	LCD_Set_Cursor@r,w
  1327  069B  1D03               	btfss	3,2
  1328  069C  2E9E               	goto	u501
  1329  069D  2E9F               	goto	u500
  1330  069E                     u501:
  1331  069E  2EC1               	goto	l54
  1332  069F                     u500:
  1333  069F                     l1044:
  1334                           
  1335                           ;lcd.c: 45:   {;lcd.c: 46:     Temp = 0xC0 + c - 1;
  1336  069F  0874               	movf	LCD_Set_Cursor@c,w
  1337  06A0  3EBF               	addlw	191
  1338  06A1  00FF               	movwf	btemp+1
  1339  06A2  087F               	movf	btemp+1,w
  1340  06A3  00F9               	movwf	LCD_Set_Cursor@Temp
  1341                           
  1342                           ;lcd.c: 47:     High4 = Temp >> 4;
  1343  06A4  0879               	movf	LCD_Set_Cursor@Temp,w
  1344  06A5  00F5               	movwf	??_LCD_Set_Cursor
  1345  06A6  3004               	movlw	4
  1346  06A7                     u515:
  1347  06A7  1003               	clrc
  1348  06A8  0CF5               	rrf	??_LCD_Set_Cursor,f
  1349  06A9  3EFF               	addlw	-1
  1350  06AA  1D03               	skipz
  1351  06AB  2EA7               	goto	u515
  1352  06AC  0875               	movf	??_LCD_Set_Cursor,w
  1353  06AD  00FF               	movwf	btemp+1
  1354  06AE  087F               	movf	btemp+1,w
  1355  06AF  00F8               	movwf	LCD_Set_Cursor@High4
  1356  06B0                     l1046:
  1357                           
  1358                           ;lcd.c: 48:     Low4 = Temp & 0x0F;
  1359  06B0  0879               	movf	LCD_Set_Cursor@Temp,w
  1360  06B1  390F               	andlw	15
  1361  06B2  00FF               	movwf	btemp+1
  1362  06B3  087F               	movf	btemp+1,w
  1363  06B4  00F7               	movwf	LCD_Set_Cursor@Low4
  1364  06B5                     l1048:
  1365                           
  1366                           ;lcd.c: 49:     LCD_CMD(High4);
  1367  06B5  0878               	movf	LCD_Set_Cursor@High4,w
  1368  06B6  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1369  06BB                     l1050:
  1370                           
  1371                           ;lcd.c: 50:     LCD_CMD(Low4);
  1372  06BB  0877               	movf	LCD_Set_Cursor@Low4,w
  1373  06BC  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1374  06C1                     l54:
  1375  06C1  0008               	return
  1376  06C2                     __end_of_LCD_Set_Cursor:
  1377                           
  1378                           	psect	text7
  1379  0715                     __ptext7:	
  1380 ;; *************** function _LCD_Init *****************
  1381 ;; Defined at:
  1382 ;;		line 3 in file "lcd.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, pclath, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0
  1398 ;;      Temps:          2       0       0       0       0
  1399 ;;      Totals:         2       0       0       0       0
  1400 ;;Total ram usage:        2 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    2
  1403 ;; This function calls:
  1404 ;;		_LCD_CMD
  1405 ;;		_LCD_DATA
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _LCD_Init
  1413  0715                     _LCD_Init:
  1414  0715                     l996:	
  1415                           ;incstack = 0
  1416                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1417                           
  1418                           
  1419                           ;lcd.c: 6:   TRISD = 0x00;
  1420  0715  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0716  1303               	bcf	3,6	;RP1=0, select bank1
  1422  0717  0188               	clrf	8	;volatile
  1423  0718                     l998:
  1424                           
  1425                           ;lcd.c: 7:   TRISD2 = 0;
  1426  0718  1108               	bcf	8,2	;volatile
  1427  0719                     l1000:
  1428                           
  1429                           ;lcd.c: 8:   TRISD3 = 0;
  1430  0719  1188               	bcf	8,3	;volatile
  1431  071A                     l1002:
  1432                           
  1433                           ;lcd.c: 10:   LCD_DATA(0x00);
  1434  071A  3000               	movlw	0
  1435  071B  120A  118A  2551  120A  118A  	fcall	_LCD_DATA
  1436  0720                     l1004:
  1437                           
  1438                           ;lcd.c: 11:   _delay((unsigned long)((30)*(20000000/4000.0)));
  1439  0720  30C3               	movlw	195
  1440  0721  00F5               	movwf	??_LCD_Init+1
  1441  0722  30CD               	movlw	205
  1442  0723  00F4               	movwf	??_LCD_Init
  1443  0724                     u617:
  1444  0724  0BF4               	decfsz	??_LCD_Init,f
  1445  0725  2F24               	goto	u617
  1446  0726  0BF5               	decfsz	??_LCD_Init+1,f
  1447  0727  2F24               	goto	u617
  1448  0728                     l1006:
  1449                           
  1450                           ;lcd.c: 12:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1451  0728  3004               	movlw	4
  1452  0729  00F5               	movwf	??_LCD_Init+1
  1453  072A  303D               	movlw	61
  1454  072B  00F4               	movwf	??_LCD_Init
  1455  072C                     u627:
  1456  072C  0BF4               	decfsz	??_LCD_Init,f
  1457  072D  2F2C               	goto	u627
  1458  072E  0BF5               	decfsz	??_LCD_Init+1,f
  1459  072F  2F2C               	goto	u627
  1460  0730  2F31               	nop2
  1461  0731                     l1008:
  1462                           
  1463                           ;lcd.c: 13:   LCD_CMD(0x03);
  1464  0731  3003               	movlw	3
  1465  0732  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1466  0737                     l1010:
  1467                           
  1468                           ;lcd.c: 14:   _delay((unsigned long)((5)*(20000000/4000.0)));
  1469  0737  3021               	movlw	33
  1470  0738  00F5               	movwf	??_LCD_Init+1
  1471  0739  3076               	movlw	118
  1472  073A  00F4               	movwf	??_LCD_Init
  1473  073B                     u637:
  1474  073B  0BF4               	decfsz	??_LCD_Init,f
  1475  073C  2F3B               	goto	u637
  1476  073D  0BF5               	decfsz	??_LCD_Init+1,f
  1477  073E  2F3B               	goto	u637
  1478  073F  0000               	nop
  1479  0740                     l1012:
  1480                           
  1481                           ;lcd.c: 15:   LCD_CMD(0x03);
  1482  0740  3003               	movlw	3
  1483  0741  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1484  0746                     l1014:
  1485                           
  1486                           ;lcd.c: 16:   _delay((unsigned long)((150)*(20000000/4000000.0)));
  1487  0746  30F9               	movlw	249
  1488  0747  00F4               	movwf	??_LCD_Init
  1489  0748                     u647:
  1490  0748  0BF4               	decfsz	??_LCD_Init,f
  1491  0749  2F48               	goto	u647
  1492  074A  2F4B               	nop2
  1493  074B                     l1016:
  1494                           
  1495                           ;lcd.c: 17:   LCD_CMD(0x03);
  1496  074B  3003               	movlw	3
  1497  074C  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1498  0751                     l1018:
  1499                           
  1500                           ;lcd.c: 18:   LCD_CMD(0x02);
  1501  0751  3002               	movlw	2
  1502  0752  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1503  0757                     l1020:
  1504                           
  1505                           ;lcd.c: 19:   LCD_CMD(0x02);
  1506  0757  3002               	movlw	2
  1507  0758  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1508  075D                     l1022:
  1509                           
  1510                           ;lcd.c: 20:   LCD_CMD(0x08);
  1511  075D  3008               	movlw	8
  1512  075E  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1513  0763                     l1024:
  1514                           
  1515                           ;lcd.c: 21:   LCD_CMD(0x00);
  1516  0763  3000               	movlw	0
  1517  0764  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1518  0769                     l1026:
  1519                           
  1520                           ;lcd.c: 22:   LCD_CMD(0x0C);
  1521  0769  300C               	movlw	12
  1522  076A  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1523  076F                     l1028:
  1524                           
  1525                           ;lcd.c: 23:   LCD_CMD(0x00);
  1526  076F  3000               	movlw	0
  1527  0770  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1528  0775                     l1030:
  1529                           
  1530                           ;lcd.c: 24:   LCD_CMD(0x06);
  1531  0775  3006               	movlw	6
  1532  0776  120A  118A  25C4  120A  118A  	fcall	_LCD_CMD
  1533  077B                     l45:
  1534  077B  0008               	return
  1535  077C                     __end_of_LCD_Init:
  1536                           
  1537                           	psect	text8
  1538  05C4                     __ptext8:	
  1539 ;; *************** function _LCD_CMD *****************
  1540 ;; Defined at:
  1541 ;;		line 140 in file "lcd.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  CMD             1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  CMD             1    3[COMMON] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         0       0       0       0       0
  1556 ;;      Locals:         1       0       0       0       0
  1557 ;;      Temps:          2       0       0       0       0
  1558 ;;      Totals:         3       0       0       0       0
  1559 ;;Total ram usage:        3 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    1
  1562 ;; This function calls:
  1563 ;;		_LCD_DATA
  1564 ;; This function is called by:
  1565 ;;		_LCD_Init
  1566 ;;		_LCD_Set_Cursor
  1567 ;;		_LCD_Clear
  1568 ;;		_LCD_SL
  1569 ;;		_LCD_SR
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _LCD_CMD
  1575  05C4                     _LCD_CMD:
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1579                           ;LCD_CMD@CMD stored from wreg
  1580  05C4  00F3               	movwf	LCD_CMD@CMD
  1581  05C5                     l910:
  1582                           
  1583                           ;lcd.c: 140: void LCD_CMD(unsigned char CMD);lcd.c: 141: {;lcd.c: 143:   RD2 = 0;
  1584  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1585  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1586  05C7  1108               	bcf	8,2	;volatile
  1587  05C8                     l912:
  1588                           
  1589                           ;lcd.c: 145:   LCD_DATA(CMD);
  1590  05C8  0873               	movf	LCD_CMD@CMD,w
  1591  05C9  120A  118A  2551  120A  118A  	fcall	_LCD_DATA
  1592  05CE                     l914:
  1593                           
  1594                           ;lcd.c: 147:   RD3 = 1;
  1595  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1596  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1597  05D0  1588               	bsf	8,3	;volatile
  1598  05D1                     l916:
  1599                           
  1600                           ;lcd.c: 149:   if(CMD<=0x02)
  1601  05D1  3003               	movlw	3
  1602  05D2  0273               	subwf	LCD_CMD@CMD,w
  1603  05D3  1803               	skipnc
  1604  05D4  2DD6               	goto	u331
  1605  05D5  2DD7               	goto	u330
  1606  05D6                     u331:
  1607  05D6  2DE1               	goto	l920
  1608  05D7                     u330:
  1609  05D7                     l918:
  1610                           
  1611                           ;lcd.c: 150:   {;lcd.c: 151:       _delay((unsigned long)((2)*(20000000/4000.0)));
  1612  05D7  300D               	movlw	13
  1613  05D8  00F2               	movwf	??_LCD_CMD+1
  1614  05D9  30FB               	movlw	251
  1615  05DA  00F1               	movwf	??_LCD_CMD
  1616  05DB                     u657:
  1617  05DB  0BF1               	decfsz	??_LCD_CMD,f
  1618  05DC  2DDB               	goto	u657
  1619  05DD  0BF2               	decfsz	??_LCD_CMD+1,f
  1620  05DE  2DDB               	goto	u657
  1621  05DF  2DE0               	nop2
  1622                           
  1623                           ;lcd.c: 152:   }else{
  1624  05E0  2DE5               	goto	l95
  1625  05E1                     l920:
  1626                           
  1627                           ;lcd.c: 153:       _delay((unsigned long)((50)*(20000000/4000000.0)));
  1628  05E1  3053               	movlw	83
  1629  05E2  00F1               	movwf	??_LCD_CMD
  1630  05E3                     u667:
  1631  05E3  0BF1               	decfsz	??_LCD_CMD,f
  1632  05E4  2DE3               	goto	u667
  1633  05E5                     l95:	
  1634                           ;lcd.c: 154:   }
  1635                           
  1636                           
  1637                           ;lcd.c: 155:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1638  05E5  3004               	movlw	4
  1639  05E6  00F2               	movwf	??_LCD_CMD+1
  1640  05E7  303D               	movlw	61
  1641  05E8  00F1               	movwf	??_LCD_CMD
  1642  05E9                     u677:
  1643  05E9  0BF1               	decfsz	??_LCD_CMD,f
  1644  05EA  2DE9               	goto	u677
  1645  05EB  0BF2               	decfsz	??_LCD_CMD+1,f
  1646  05EC  2DE9               	goto	u677
  1647  05ED  2DEE               	nop2
  1648  05EE                     l922:
  1649                           
  1650                           ;lcd.c: 156:   RD3 = 0;
  1651  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1652  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1653  05F0  1188               	bcf	8,3	;volatile
  1654  05F1                     l96:
  1655  05F1  0008               	return
  1656  05F2                     __end_of_LCD_CMD:
  1657                           
  1658                           	psect	text9
  1659  0551                     __ptext9:	
  1660 ;; *************** function _LCD_DATA *****************
  1661 ;; Defined at:
  1662 ;;		line 120 in file "lcd.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  Data            1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  Data            1    0[COMMON] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       0       0       0       0
  1677 ;;      Locals:         1       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0
  1679 ;;      Totals:         1       0       0       0       0
  1680 ;;Total ram usage:        1 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_LCD_Init
  1686 ;;		_LCD_Write_Char
  1687 ;;		_LCD_CMD
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _LCD_DATA
  1693  0551                     _LCD_DATA:
  1694                           
  1695                           ;incstack = 0
  1696                           ; Regs used in _LCD_DATA: [wreg]
  1697                           ;LCD_DATA@Data stored from wreg
  1698  0551  00F0               	movwf	LCD_DATA@Data
  1699  0552                     l900:
  1700                           
  1701                           ;lcd.c: 120: void LCD_DATA(unsigned char Data);lcd.c: 121: {;lcd.c: 122:   if(Data & 1)
  1702  0552  1C70               	btfss	LCD_DATA@Data,0
  1703  0553  2D55               	goto	u291
  1704  0554  2D56               	goto	u290
  1705  0555                     u291:
  1706  0555  2D5A               	goto	l83
  1707  0556                     u290:
  1708  0556                     l902:
  1709                           
  1710                           ;lcd.c: 123:     RD4 = 1;
  1711  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0558  1608               	bsf	8,4	;volatile
  1714  0559  2D5D               	goto	l84
  1715  055A                     l83:	
  1716                           ;lcd.c: 124:   else
  1717                           
  1718                           
  1719                           ;lcd.c: 125:     RD4 = 0;
  1720  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1721  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1722  055C  1208               	bcf	8,4	;volatile
  1723  055D                     l84:
  1724                           
  1725                           ;lcd.c: 126:   if(Data & 2)
  1726  055D  1CF0               	btfss	LCD_DATA@Data,1
  1727  055E  2D60               	goto	u301
  1728  055F  2D61               	goto	u300
  1729  0560                     u301:
  1730  0560  2D63               	goto	l85
  1731  0561                     u300:
  1732  0561                     l904:
  1733                           
  1734                           ;lcd.c: 127:     RD5 = 1;
  1735  0561  1688               	bsf	8,5	;volatile
  1736  0562  2D64               	goto	l86
  1737  0563                     l85:	
  1738                           ;lcd.c: 128:   else
  1739                           
  1740                           
  1741                           ;lcd.c: 129:     RD5 = 0;
  1742  0563  1288               	bcf	8,5	;volatile
  1743  0564                     l86:
  1744                           
  1745                           ;lcd.c: 130:   if(Data & 4)
  1746  0564  1D70               	btfss	LCD_DATA@Data,2
  1747  0565  2D67               	goto	u311
  1748  0566  2D68               	goto	u310
  1749  0567                     u311:
  1750  0567  2D6A               	goto	l87
  1751  0568                     u310:
  1752  0568                     l906:
  1753                           
  1754                           ;lcd.c: 131:     RD6 = 1;
  1755  0568  1708               	bsf	8,6	;volatile
  1756  0569  2D6B               	goto	l88
  1757  056A                     l87:	
  1758                           ;lcd.c: 132:   else
  1759                           
  1760                           
  1761                           ;lcd.c: 133:     RD6 = 0;
  1762  056A  1308               	bcf	8,6	;volatile
  1763  056B                     l88:
  1764                           
  1765                           ;lcd.c: 134:   if(Data & 8)
  1766  056B  1DF0               	btfss	LCD_DATA@Data,3
  1767  056C  2D6E               	goto	u321
  1768  056D  2D6F               	goto	u320
  1769  056E                     u321:
  1770  056E  2D71               	goto	l89
  1771  056F                     u320:
  1772  056F                     l908:
  1773                           
  1774                           ;lcd.c: 135:     RD7 = 1;
  1775  056F  1788               	bsf	8,7	;volatile
  1776  0570  2D72               	goto	l91
  1777  0571                     l89:	
  1778                           ;lcd.c: 136:   else
  1779                           
  1780                           
  1781                           ;lcd.c: 137:     RD7 = 0;
  1782  0571  1388               	bcf	8,7	;volatile
  1783  0572                     l91:
  1784  0572  0008               	return
  1785  0573                     __end_of_LCD_DATA:
  1786  007E                     btemp	set	126	;btemp
  1787  007E                     wtemp0	set	126

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     25      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_LCD_Set_Cursor
    _main->_LCD_Write_Number
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Number->___lwdiv
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _main in BANK0

    _main->_LCD_Write_Number

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2296
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_Number
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     301
                                              6 COMMON     3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Number                                    28    26      2    1221
                                              7 COMMON     3     1      2
                                              0 BANK0     25    25      0
                     _LCD_Write_Char
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       6     5      1     554
                                              4 COMMON     6     5      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     220
                                              4 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     132
                                              1 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_DATA
   _LCD_Write_Number
     _LCD_Write_Char
       _LCD_DATA
     ___lwdiv
     ___lwmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jan 16 19:31:41 2022

                        pc 0002                         l15 05C0                         l16 05C0  
                       l45 077B                         l54 06C1                         l63 0597  
                       l80 07FB                         l57 0714                         l91 0572  
                       l83 055A                         l84 055D                         l85 0563  
                       l86 0564                         l87 056A                         l95 05E5  
                       l88 056B                         l96 05F1                         l89 0571  
                       fsr 0004                        l454 066F                        l464 062B  
                      l900 0552                        l902 0556                        l910 05C5  
                      l904 0561                        l920 05E1                        l912 05C8  
                      l906 0568                        l922 05EE                        l914 05CE  
                      l930 06DE                        l908 056F                        l916 05D1  
                      l940 06FC                        l932 06E1                        l924 06C3  
                      l918 05D7                        l942 06FF                        l934 06EA  
                      l926 06CD                        l950 062E                        l944 0708  
                      l936 06ED                        l928 06D0                        l960 0646  
                      l952 0634                        l946 070B                        l938 06F6  
                      l962 0657                        l954 0637                        l970 066B  
                      l964 065D                        l956 063E                        l948 062C  
                      l980 0602                        l966 065E                        l958 0642  
                      l990 0621                        l982 0606                        l974 05F2  
                      l968 0665                        l984 060A                        l976 05F8  
                      l992 0627                        l986 0614                        l978 05FB  
                      l996 0715                        l988 061A                        l998 0718  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u300 0561                        u301 0560                        u310 0568  
                      u311 0567                        u320 056F                        u321 056E  
                      u330 05D7                        u410 066B                        u331 05D6  
                      u411 066A                        u500 069F                        u420 05F8  
                      u501 069E                        u405 065F                        u421 05F7  
                      u350 0634                        u351 0633                        u440 060A  
                      u520 0597                        u345 06D3                        u441 0609  
                      u521 0596                        u290 0556                        u370 0646  
                      u450 0614                        u530 0786                        u291 0555  
                      u515 06A7                        u371 0645                        u451 0613  
                      u435 05FC                        u531 0785                        u540 0798  
                      u365 0638                        u541 0797                        u390 0657  
                      u470 0627                        u550 07D2                        u607 070F  
                      u391 0656                        u471 0626                        u455 0610  
                      u551 07D1                        u480 0676                        u560 07E0  
                      u617 0724                        u481 0675                        u385 0647  
                      u465 061B                        u561 07DF                        u627 072C  
                      u395 0653                        u637 073B                        u647 0748  
                      u495 067E                        u657 05DB                        u577 06E5  
                      u667 05E3                        u587 06F1                        u677 05E9  
                      u597 0703                        fsr0 0004                        indf 0000  
          __end_of_LCD_CMD 05F2             _LCD_Set_Cursor 0670                       l1000 0719  
                     l1010 0737                       l1002 071A                       l1020 0757  
                     l1012 0740                       l1004 0720                       l1100 05A9  
                     l1030 0775                       l1022 075D                       l1014 0746  
                     l1006 0728                       l1102 05AF                       l1024 0763  
                     l1016 074B                       l1008 0731                       l1040 0692  
                     l1032 0671                       l1104 05B7                       l1026 0769  
                     l1018 0751                       l1050 06BB                       l1034 0676  
                     l1042 0699                       l1028 076F                       l1044 069F  
                     l1036 0687                       l1060 077C                       l1052 0574  
                     l1046 06B0                       l1038 068C                       l1062 0780  
                     l1054 0577                       l1048 06B5                       l1080 07D2  
                     l1072 0799                       l1064 0786                       l1056 0584  
                     l1090 07F2                       l1082 07DC                       l1074 07B3  
                     l1066 078B                       l1058 058A                       l1076 07C4  
                     l1068 0792                       l1086 07E1                       l1078 07CC  
                     l1094 0598                       l1088 07EC                       l1096 059C  
                     l1098 05A1        LCD_Write_String@str 0078                       STR_1 0009  
        ?_LCD_Write_Number 0077          ?_LCD_Write_String 0070                       _main 0598  
                     btemp 007E         ??_LCD_Write_Number 0079                       start 0000  
       ??_LCD_Write_String 0076           __end_of_LCD_DATA 0573           __end_of_LCD_Init 077C  
                    ?_main 0070            __end_of___lwdiv 0670            __end_of___lwmod 062C  
                    _TRISD 0088     __end_of_LCD_Set_Cursor 06C2                      pclath 000A  
                    status 0003                      wtemp0 007E             _LCD_Write_Char 06C2  
          __initialization 07FC               __end_of_main 05C4                     ??_main 007A  
                ??_LCD_CMD 0071            ?_LCD_Set_Cursor 0074                     _ADCON1 009F  
                   _TRISD2 0442                     _TRISD3 0443     __end_of_LCD_Write_Char 0715  
                ??___lwdiv 0074                  ??___lwmod 0074            LCD_Set_Cursor@c 0074  
          LCD_Set_Cursor@r 0076                  ?_LCD_DATA 0070    __end_of__initialization 07FC  
                ?_LCD_Init 0070            ?_LCD_Write_Char 0070             __pcstackCOMMON 0070  
               ??_LCD_DATA 0070                 ??_LCD_Init 0074                 __pmaintext 0598  
__size_of_LCD_Write_Number 0080  __size_of_LCD_Write_String 0025                    _LCD_CMD 05C4  
               __stringtab 0003                    ___lwdiv 062C                    ___lwmod 05F2  
         ??_LCD_Set_Cursor 0075                    __ptext1 0573                    __ptext2 077C  
                  __ptext3 05F2                    __ptext4 062C                    __ptext5 06C2  
                  __ptext6 0670                    __ptext7 0715                    __ptext8 05C4  
                  __ptext9 0551       end_of_initialization 07FC                 LCD_CMD@CMD 0073  
        LCD_Write_Number@c 0036          LCD_Write_Number@k 0034          LCD_Write_Number@p 0037  
        LCD_Write_String@i 0076           ??_LCD_Write_Char 0071          __size_of_LCD_DATA 0022  
        __size_of_LCD_Init 0067           _LCD_Write_Number 077C           _LCD_Write_String 0573  
      start_initialization 07FC                   ?_LCD_CMD 0070                  ___latbits 0002  
            __pcstackBANK0 0020           ___lwdiv@dividend 0072                   ?___lwdiv 0070  
                 ?___lwmod 0070                  __pstrings 0003           ___lwdiv@quotient 0074  
                 _LCD_DATA 0551                   _LCD_Init 0715                __stringbase 0008  
         __size_of_LCD_CMD 002E   __end_of_LCD_Write_Number 07FC   __end_of_LCD_Write_String 0598  
      LCD_Write_Char@High4 0074           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0009            ___lwdiv@divisor 0070            ___lwdiv@counter 0076  
  __size_of_LCD_Set_Cursor 0052              __size_of_main 002C        LCD_Set_Cursor@High4 0078  
   LCD_Write_Number@number 0077         LCD_Write_Char@Data 0075         LCD_Write_Char@Low4 0073  
         ___lwmod@dividend 0072                  stringcode 0003    __size_of_LCD_Write_Char 0053  
       LCD_Set_Cursor@Low4 0077         LCD_Set_Cursor@Temp 0079               LCD_DATA@Data 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0074                   stringdir 0003  
                 stringtab 0003        LCD_Write_Number@num 0020  
