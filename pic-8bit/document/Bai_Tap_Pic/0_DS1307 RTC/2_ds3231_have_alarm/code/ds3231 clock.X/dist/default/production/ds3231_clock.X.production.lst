

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Dec 18 00:02:50 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0094                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  010F                     	;# 
   263  018C                     	;# 
   264  018D                     	;# 
   265  0000                     	;# 
   266  0001                     	;# 
   267  0002                     	;# 
   268  0003                     	;# 
   269  0004                     	;# 
   270  0005                     	;# 
   271  0006                     	;# 
   272  0007                     	;# 
   273  0008                     	;# 
   274  0009                     	;# 
   275  000A                     	;# 
   276  000B                     	;# 
   277  000C                     	;# 
   278  000D                     	;# 
   279  000E                     	;# 
   280  000E                     	;# 
   281  000F                     	;# 
   282  0010                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0013                     	;# 
   286  0014                     	;# 
   287  0015                     	;# 
   288  0015                     	;# 
   289  0016                     	;# 
   290  0017                     	;# 
   291  0018                     	;# 
   292  0019                     	;# 
   293  001A                     	;# 
   294  001B                     	;# 
   295  001B                     	;# 
   296  001C                     	;# 
   297  001D                     	;# 
   298  001E                     	;# 
   299  001F                     	;# 
   300  0081                     	;# 
   301  0085                     	;# 
   302  0086                     	;# 
   303  0087                     	;# 
   304  0088                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0098                     	;# 
   314  0099                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  009F                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325                           
   326                           	psect	idataBANK0
   327  09BB                     __pidataBANK0:
   328                           
   329                           ;initializer for _Alarm1
   330  09BB  3441               	retlw	65
   331  09BC  3431               	retlw	49
   332  09BD  343A               	retlw	58
   333  09BE  3420               	retlw	32
   334  09BF  3420               	retlw	32
   335  09C0  3420               	retlw	32
   336  09C1  343A               	retlw	58
   337  09C2  3420               	retlw	32
   338  09C3  3420               	retlw	32
   339  09C4  343A               	retlw	58
   340  09C5  3430               	retlw	48
   341  09C6  3430               	retlw	48
   342  09C7  3400               	retlw	0
   343                           
   344                           ;initializer for _Temperature
   345  09C8  3454               	retlw	84
   346  09C9  343A               	retlw	58
   347  09CA  3420               	retlw	32
   348  09CB  3420               	retlw	32
   349  09CC  3420               	retlw	32
   350  09CD  342E               	retlw	46
   351  09CE  3420               	retlw	32
   352  09CF  3420               	retlw	32
   353  09D0  3420               	retlw	32
   354  09D1  3443               	retlw	67
   355  09D2  3400               	retlw	0
   356                           
   357                           ;initializer for _Date
   358  09D3  3420               	retlw	32
   359  09D4  3420               	retlw	32
   360  09D5  342F               	retlw	47
   361  09D6  3420               	retlw	32
   362  09D7  3420               	retlw	32
   363  09D8  342F               	retlw	47
   364  09D9  3432               	retlw	50
   365  09DA  3430               	retlw	48
   366  09DB  3420               	retlw	32
   367  09DC  3420               	retlw	32
   368  09DD  3400               	retlw	0
   369                           
   370                           ;initializer for _Time
   371  09DE  3420               	retlw	32
   372  09DF  3420               	retlw	32
   373  09E0  343A               	retlw	58
   374  09E1  3420               	retlw	32
   375  09E2  3420               	retlw	32
   376  09E3  343A               	retlw	58
   377  09E4  3420               	retlw	32
   378  09E5  3420               	retlw	32
   379  09E6  3400               	retlw	0
   380                           
   381                           	psect	idataBANK1
   382  08ED                     __pidataBANK1:
   383                           
   384                           ;initializer for _Alarm2
   385  08ED  3441               	retlw	65
   386  08EE  3432               	retlw	50
   387  08EF  343A               	retlw	58
   388  08F0  3420               	retlw	32
   389  08F1  3420               	retlw	32
   390  08F2  3420               	retlw	32
   391  08F3  343A               	retlw	58
   392  08F4  3420               	retlw	32
   393  08F5  3420               	retlw	32
   394  08F6  343A               	retlw	58
   395  08F7  3430               	retlw	48
   396  08F8  3430               	retlw	48
   397  08F9  3400               	retlw	0
   398  0013                     _SSPBUF	set	19
   399  0014                     _SSPCON	set	20
   400  0006                     _PORTB	set	6
   401  0043                     _RD3	set	67
   402  0042                     _RD2	set	66
   403  0047                     _RD7	set	71
   404  0046                     _RD6	set	70
   405  0045                     _RD5	set	69
   406  0044                     _RD4	set	68
   407  0063                     _SSPIF	set	99
   408  0032                     _RB2	set	50
   409  0033                     _RB3	set	51
   410  0031                     _RB1	set	49
   411  0034                     _RB4	set	52
   412  005F                     _GIE	set	95
   413  0059                     _INTF	set	89
   414  005C                     _INTE	set	92
   415  0088                     _TRISD	set	136
   416  0093                     _SSPADD	set	147
   417  0094                     _SSPSTAT	set	148
   418  0091                     _SSPCON2	set	145
   419  0086                     _TRISB	set	134
   420  009F                     _ADCON1	set	159
   421  0443                     _TRISD3	set	1091
   422  0442                     _TRISD2	set	1090
   423  048B                     _RCEN	set	1163
   424  048E                     _ACKSTAT	set	1166
   425  048C                     _ACKEN	set	1164
   426  048D                     _ACKDT	set	1165
   427  048A                     _PEN	set	1162
   428  0489                     _RSEN	set	1161
   429  0488                     _SEN	set	1160
   430  043C                     _TRISC4	set	1084
   431  043B                     _TRISC3	set	1083
   432  040F                     _nRBPU	set	1039
   433  040E                     _INTEDG	set	1038
   434                           
   435                           	psect	strings
   436  0800                     __pstrings:
   437  0800                     stringtab:
   438  0800                     __stringtab:
   439                           
   440                           ;	String table - string pointers are 1 byte each
   441  0800  1BFF               	btfsc	btemp+1,7
   442  0801  280A               	ljmp	stringcode
   443  0802  1383               	bcf	3,7
   444  0803  187F               	btfsc	btemp+1,0
   445  0804  1783               	bsf	3,7
   446  0805  0800               	movf	0,w
   447  0806  0A84               	incf	4,f
   448  0807  1903               	skipnz
   449  0808  0AFF               	incf	btemp+1,f
   450  0809  0008               	return
   451  080A                     stringcode:
   452  080A                     stringdir:
   453  080A  3008               	movlw	high stringdir
   454  080B  008A               	movwf	10
   455  080C  0804               	movf	4,w
   456  080D  0A84               	incf	4,f
   457  080E  0782               	addwf	2,f
   458  080F                     __stringbase:
   459  080F  3400               	retlw	0
   460  0810                     __end_of__stringtab:
   461  0810                     STR_15:
   462  0810  3420               	retlw	32	;' '
   463  0811  3420               	retlw	32	;' '
   464  0812  3420               	retlw	32	;' '
   465  0813  3400               	retlw	0
   466  0814                     STR_1:
   467  0814  344F               	retlw	79	;'O'
   468  0815  344E               	retlw	78	;'N'
   469  0816  3420               	retlw	32	;' '
   470  0817  3400               	retlw	0
   471  0818                     STR_2:
   472  0818  344F               	retlw	79	;'O'
   473  0819  3446               	retlw	70	;'F'
   474  081A  3446               	retlw	70	;'F'
   475  081B  3400               	retlw	0
   476  081C                     STR_8:
   477  081C  3457               	retlw	87	;'W'
   478  081D  3465               	retlw	101	;'e'
   479  081E  3464               	retlw	100	;'d'
   480  081F  3400               	retlw	0
   481  0820                     STR_7:
   482  0820  3454               	retlw	84	;'T'
   483  0821  3475               	retlw	117	;'u'
   484  0822  3465               	retlw	101	;'e'
   485  0823  3400               	retlw	0
   486  0824                     STR_10:
   487  0824  3446               	retlw	70	;'F'
   488  0825  3472               	retlw	114	;'r'
   489  0826  3469               	retlw	105	;'i'
   490  0827  3400               	retlw	0
   491  0828                     STR_6:
   492  0828  344D               	retlw	77	;'M'
   493  0829  346F               	retlw	111	;'o'
   494  082A  346E               	retlw	110	;'n'
   495  082B  3400               	retlw	0
   496  082C                     STR_5:
   497  082C  3453               	retlw	83	;'S'
   498  082D  3475               	retlw	117	;'u'
   499  082E  346E               	retlw	110	;'n'
   500  082F  3400               	retlw	0
   501  0830                     STR_11:
   502  0830  3453               	retlw	83	;'S'
   503  0831  3461               	retlw	97	;'a'
   504  0832  3474               	retlw	116	;'t'
   505  0833  3400               	retlw	0
   506  0834                     STR_9:
   507  0834  3454               	retlw	84	;'T'
   508  0835  3468               	retlw	104	;'h'
   509  0836  3475               	retlw	117	;'u'
   510  0837  3400               	retlw	0
   511  0811                     
   512                           	psect	cinit
   513  000F                     start_initialization:	
   514                           ; #config settings
   515                           
   516  000F                     __initialization:
   517                           
   518                           ; Initialize objects allocated to BANK1
   519  000F  1383               	bcf	3,7	;select IRP bank0
   520  0010  30AD               	movlw	low (__pdataBANK1+13)
   521  0011  00FD               	movwf	btemp+-1
   522  0012  3008               	movlw	high __pidataBANK1
   523  0013  00FE               	movwf	btemp
   524  0014  30ED               	movlw	low __pidataBANK1
   525  0015  00FF               	movwf	btemp+1
   526  0016  30A0               	movlw	low __pdataBANK1
   527  0017  0084               	movwf	4
   528  0018  120A  158A  211D  120A  118A  	fcall	init_ram0
   529                           
   530                           ; Initialize objects allocated to BANK0
   531  001D  304C               	movlw	low (__pdataBANK0+44)
   532  001E  00FD               	movwf	btemp+-1
   533  001F  3009               	movlw	high __pidataBANK0
   534  0020  00FE               	movwf	btemp
   535  0021  30BB               	movlw	low __pidataBANK0
   536  0022  00FF               	movwf	btemp+1
   537  0023  3020               	movlw	low __pdataBANK0
   538  0024  0084               	movwf	4
   539  0025  120A  158A  211D  120A  118A  	fcall	init_ram0
   540                           
   541                           ; Clear objects allocated to BANK0
   542  002A  01DD               	clrf	__pbssBANK0& (0+127)
   543  002B  01DE               	clrf	(__pbssBANK0+1)& (0+127)
   544  002C  01DF               	clrf	(__pbssBANK0+2)& (0+127)
   545  002D  01E0               	clrf	(__pbssBANK0+3)& (0+127)
   546  002E  01E1               	clrf	(__pbssBANK0+4)& (0+127)
   547  002F  01E2               	clrf	(__pbssBANK0+5)& (0+127)
   548  0030  01E3               	clrf	(__pbssBANK0+6)& (0+127)
   549  0031  01E4               	clrf	(__pbssBANK0+7)& (0+127)
   550  0032  01E5               	clrf	(__pbssBANK0+8)& (0+127)
   551  0033  01E6               	clrf	(__pbssBANK0+9)& (0+127)
   552  0034  01E7               	clrf	(__pbssBANK0+10)& (0+127)
   553  0035  01E8               	clrf	(__pbssBANK0+11)& (0+127)
   554  0036  01E9               	clrf	(__pbssBANK0+12)& (0+127)
   555                           
   556                           ; Clear objects allocated to COMMON
   557  0037  01FA               	clrf	__pbssCOMMON& (0+127)
   558  0038  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   559  0039                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0039                     __end_of__initialization:
   563  0039  0183               	clrf	3
   564  003A  120A  118A  283D   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssCOMMON
   567  007A                     __pbssCOMMON:
   568  007A                     _minute:
   569  007A                     	ds	1
   570  007B                     _i:
   571  007B                     	ds	1
   572                           
   573                           	psect	bssBANK0
   574  005D                     __pbssBANK0:
   575  005D                     _alarm2_status:
   576  005D                     	ds	1
   577  005E                     _alarm1_status:
   578  005E                     	ds	1
   579  005F                     _status_reg:
   580  005F                     	ds	1
   581  0060                     _alarm2_hour:
   582  0060                     	ds	1
   583  0061                     _alarm2_minute:
   584  0061                     	ds	1
   585  0062                     _alarm1_hour:
   586  0062                     	ds	1
   587  0063                     _alarm1_minute:
   588  0063                     	ds	1
   589  0064                     _year:
   590  0064                     	ds	1
   591  0065                     _month:
   592  0065                     	ds	1
   593  0066                     _m_day:
   594  0066                     	ds	1
   595  0067                     _w_day:
   596  0067                     	ds	1
   597  0068                     _hour:
   598  0068                     	ds	1
   599  0069                     _second:
   600  0069                     	ds	1
   601                           
   602                           	psect	dataBANK0
   603  0020                     __pdataBANK0:
   604  0020                     _Alarm1:
   605  0020                     	ds	13
   606  002D                     _Temperature:
   607  002D                     	ds	11
   608  0038                     _Date:
   609  0038                     	ds	11
   610  0043                     _Time:
   611  0043                     	ds	9
   612                           
   613                           	psect	dataBANK1
   614  00A0                     __pdataBANK1:
   615  00A0                     _Alarm2:
   616  00A0                     	ds	13
   617                           
   618                           	psect	inittext
   619  0919                     init_fetch0:	
   620                           ;	Called with low address in FSR and high address in W
   621                           
   622  0919  087E               	movf	btemp,w
   623  091A  008A               	movwf	10
   624  091B  087F               	movf	btemp+1,w
   625  091C  0082               	movwf	2
   626  091D                     init_ram0:	
   627                           ;Called with:
   628                           ;	high address of idata address in btemp 
   629                           ;	low address of idata address in btemp+1 
   630                           ;	low address of data in FSR
   631                           ;	high address + 1 of data in btemp-1
   632                           
   633  091D  120A  158A  2119  120A  158A  	fcall	init_fetch0
   634  0922  0080               	movwf	0
   635  0923  0A84               	incf	4,f
   636  0924  0804               	movf	4,w
   637  0925  067D               	xorwf	btemp+-1,w
   638  0926  1903               	btfsc	3,2
   639  0927  3400               	retlw	0
   640  0928  0AFF               	incf	btemp+1,f
   641  0929  1903               	btfsc	3,2
   642  092A  0AFE               	incf	btemp,f
   643  092B  291D               	goto	init_ram0
   644                           
   645                           	psect	cstackCOMMON
   646  0070                     __pcstackCOMMON:
   647  0070                     ?_debounce:
   648  0070                     ?_I2C_Start:	
   649                           ; 1 bit 
   650                           
   651  0070                     ?_I2C_Write_Char:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_I2C_Restart:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_I2C_Read_Char:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_I2C_ACK:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_I2C_NACK:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_I2C_Stop:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_LCD_Write_Char:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_LCD_Init:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_external_interrupt:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_EXT:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ??_EXT:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_bcd_to_decimal:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_decimal_to_bcd:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_RTC_read:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_alarms_read_display:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_w_day_display:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_RTC_display:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_blink:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_I2C_Wait:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_LCD_DATA:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_LCD_CMD:	
   715                           ; 1 bytes @ 0x0
   716                           
   717                           
   718                           ; 1 bytes @ 0x0
   719  0070                     	ds	2
   720  0072                     ??_I2C_Start:
   721  0072                     ??_I2C_Write_Char:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_I2C_Restart:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_I2C_Read_Char:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ??_I2C_ACK:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ??_I2C_NACK:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ??_I2C_Stop:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ??_external_interrupt:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ??_debounce:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ??_blink:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ??_I2C_Wait:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ??_LCD_DATA:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ?___bmul:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ?___awdiv:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ?___awmod:	
   761                           ; 2 bytes @ 0x2
   762                           
   763  0072                     ?___lldiv:	
   764                           ; 2 bytes @ 0x2
   765                           
   766  0072                     I2C_Write_Char@Data:	
   767                           ; 4 bytes @ 0x2
   768                           
   769  0072                     LCD_DATA@Data:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0072                     ___bmul@multiplicand:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0072                     ___awdiv@divisor:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0072                     ___awmod@divisor:	
   779                           ; 2 bytes @ 0x2
   780                           
   781  0072                     ___lldiv@divisor:	
   782                           ; 2 bytes @ 0x2
   783                           
   784                           
   785                           ; 4 bytes @ 0x2
   786  0072                     	ds	1
   787  0073                     ??_LCD_Write_Char:
   788  0073                     ??_RTC_read:	
   789                           ; 1 bytes @ 0x3
   790                           
   791  0073                     ??_LCD_CMD:	
   792                           ; 1 bytes @ 0x3
   793                           
   794  0073                     ??___bmul:	
   795                           ; 1 bytes @ 0x3
   796                           
   797  0073                     ___bmul@product:	
   798                           ; 1 bytes @ 0x3
   799                           
   800                           
   801                           ; 1 bytes @ 0x3
   802  0073                     	ds	1
   803  0074                     debounce@button:
   804  0074                     blink@j:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0074                     LCD_CMD@CMD:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0074                     LCD_Write_Char@Low4:	
   811                           ; 1 bytes @ 0x4
   812                           
   813  0074                     ___bmul@multiplier:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0074                     ___awdiv@dividend:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0074                     ___awmod@dividend:	
   820                           ; 2 bytes @ 0x4
   821                           
   822                           
   823                           ; 2 bytes @ 0x4
   824  0074                     	ds	1
   825  0075                     ?_LCD_Set_Cursor:
   826  0075                     ??_LCD_Init:	
   827                           ; 1 bytes @ 0x5
   828                           
   829  0075                     ??_bcd_to_decimal:	
   830                           ; 1 bytes @ 0x5
   831                           
   832  0075                     debounce@count:	
   833                           ; 1 bytes @ 0x5
   834                           
   835  0075                     LCD_Set_Cursor@column:	
   836                           ; 1 bytes @ 0x5
   837                           
   838  0075                     LCD_Write_Char@High4:	
   839                           ; 1 bytes @ 0x5
   840                           
   841                           
   842                           ; 1 bytes @ 0x5
   843  0075                     	ds	1
   844  0076                     ??_LCD_Set_Cursor:
   845  0076                     ??___awdiv:	
   846                           ; 1 bytes @ 0x6
   847                           
   848  0076                     ??___awmod:	
   849                           ; 1 bytes @ 0x6
   850                           
   851  0076                     debounce@i:	
   852                           ; 1 bytes @ 0x6
   853                           
   854  0076                     LCD_Write_Char@Data:	
   855                           ; 1 bytes @ 0x6
   856                           
   857  0076                     ___awdiv@counter:	
   858                           ; 1 bytes @ 0x6
   859                           
   860  0076                     ___awmod@counter:	
   861                           ; 1 bytes @ 0x6
   862                           
   863  0076                     ___lldiv@dividend:	
   864                           ; 1 bytes @ 0x6
   865                           
   866                           
   867                           ; 4 bytes @ 0x6
   868  0076                     	ds	1
   869  0077                     ?_LCD_Write_String:
   870  0077                     bcd_to_decimal@number:	
   871                           ; 1 bytes @ 0x7
   872                           
   873  0077                     ___awdiv@sign:	
   874                           ; 1 bytes @ 0x7
   875                           
   876  0077                     ___awmod@sign:	
   877                           ; 1 bytes @ 0x7
   878                           
   879  0077                     LCD_Write_String@str:	
   880                           ; 1 bytes @ 0x7
   881                           
   882                           
   883                           ; 2 bytes @ 0x7
   884  0077                     	ds	1
   885  0078                     ___awdiv@quotient:
   886                           
   887                           ; 2 bytes @ 0x8
   888  0078                     	ds	1
   889  0079                     ??_LCD_Write_String:
   890                           
   891                           ; 1 bytes @ 0x9
   892  0079                     	ds	1
   893  007A                     ??_I2C_Master_Init:
   894                           
   895                           	psect	cstackBANK0
   896  004C                     __pcstackBANK0:	
   897                           ; 1 bytes @ 0xA
   898                           
   899  004C                     ??_decimal_to_bcd:
   900  004C                     ??___lldiv:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  004C                     LCD_Set_Cursor@row:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  004C                     LCD_Write_String@i:	
   907                           ; 1 bytes @ 0x0
   908                           
   909                           
   910                           ; 2 bytes @ 0x0
   911  004C                     	ds	1
   912  004D                     LCD_Set_Cursor@Low4:
   913  004D                     ___lldiv@quotient:	
   914                           ; 1 bytes @ 0x1
   915                           
   916                           
   917                           ; 4 bytes @ 0x1
   918  004D                     	ds	1
   919  004E                     LCD_Set_Cursor@High4:
   920                           
   921                           ; 1 bytes @ 0x2
   922  004E                     	ds	1
   923  004F                     LCD_Set_Cursor@Temp:
   924                           
   925                           ; 1 bytes @ 0x3
   926  004F                     	ds	1
   927  0050                     ??_alarms_read_display:
   928  0050                     ??_w_day_display:	
   929                           ; 1 bytes @ 0x4
   930                           
   931                           
   932                           ; 1 bytes @ 0x4
   933  0050                     	ds	1
   934  0051                     decimal_to_bcd@number:
   935  0051                     ___lldiv@counter:	
   936                           ; 1 bytes @ 0x5
   937                           
   938                           
   939                           ; 1 bytes @ 0x5
   940  0051                     	ds	1
   941  0052                     ?_I2C_Master_Init:
   942  0052                     ??_RTC_display:	
   943                           ; 1 bytes @ 0x6
   944                           
   945  0052                     alarms_read_display@control_reg:	
   946                           ; 1 bytes @ 0x6
   947                           
   948  0052                     I2C_Master_Init@I2C_BaudRate:	
   949                           ; 1 bytes @ 0x6
   950                           
   951                           
   952                           ; 4 bytes @ 0x6
   953  0052                     	ds	1
   954  0053                     alarms_read_display@temperature_msb:
   955                           
   956                           ; 1 bytes @ 0x7
   957  0053                     	ds	1
   958  0054                     ?_edit:
   959  0054                     ?_on_off:	
   960                           ; 1 bytes @ 0x8
   961                           
   962  0054                     alarms_read_display@temperature_lsb:	
   963                           ; 1 bytes @ 0x8
   964                           
   965  0054                     edit@y:	
   966                           ; 1 bytes @ 0x8
   967                           
   968  0054                     on_off@y:	
   969                           ; 1 bytes @ 0x8
   970                           
   971                           
   972                           ; 1 bytes @ 0x8
   973  0054                     	ds	1
   974  0055                     edit@parameter:
   975  0055                     on_off@al:	
   976                           ; 1 bytes @ 0x9
   977                           
   978                           
   979                           ; 1 bytes @ 0x9
   980  0055                     	ds	1
   981  0056                     ??_edit:
   982  0056                     ??_on_off:	
   983                           ; 1 bytes @ 0xA
   984                           
   985                           
   986                           ; 1 bytes @ 0xA
   987  0056                     	ds	3
   988  0059                     edit@x:
   989  0059                     on_off@x:	
   990                           ; 1 bytes @ 0xD
   991                           
   992                           
   993                           ; 1 bytes @ 0xD
   994  0059                     	ds	1
   995  005A                     ??_main:
   996                           
   997                           ; 1 bytes @ 0xE
   998  005A                     	ds	3
   999                           
  1000                           	psect	maintext
  1001  003D                     __pmaintext:	
  1002 ;;
  1003 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1004 ;;
  1005 ;; *************** function _main *****************
  1006 ;; Defined at:
  1007 ;;		line 339 in file "main ds3231.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : B00/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0
  1023 ;;      Temps:          0       3       0       0       0
  1024 ;;      Totals:         0       3       0       0       0
  1025 ;;Total ram usage:        3 bytes
  1026 ;; Hardware stack levels required when called:    7
  1027 ;; This function calls:
  1028 ;;		_I2C_Master_Init
  1029 ;;		_I2C_Start
  1030 ;;		_I2C_Stop
  1031 ;;		_I2C_Write_Char
  1032 ;;		_LCD_Init
  1033 ;;		_LCD_Set_Cursor
  1034 ;;		_LCD_Write_String
  1035 ;;		_RTC_display
  1036 ;;		_RTC_read
  1037 ;;		_alarms_read_display
  1038 ;;		_blink
  1039 ;;		_debounce
  1040 ;;		_decimal_to_bcd
  1041 ;;		_edit
  1042 ;;		_external_interrupt
  1043 ;;		_on_off
  1044 ;;		_w_day_display
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _main
  1052  003D                     _main:
  1053  003D                     l3523:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1056                           
  1057                           
  1058                           ;main ds3231.c: 341:     ADCON1 =0x07;
  1059  003D  3007               	movlw	7
  1060  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1061  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0040  009F               	movwf	31	;volatile
  1063  0041                     l3525:
  1064                           
  1065                           ;main ds3231.c: 343:     PORTB = 0;
  1066  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0043  0186               	clrf	6	;volatile
  1069  0044                     l3527:
  1070                           
  1071                           ;main ds3231.c: 344:     TRISB = 0x0F;
  1072  0044  300F               	movlw	15
  1073  0045  1683               	bsf	3,5	;RP0=1, select bank1
  1074  0046  1303               	bcf	3,6	;RP1=0, select bank1
  1075  0047  0086               	movwf	6	;volatile
  1076  0048                     l3529:
  1077                           
  1078                           ;main ds3231.c: 346:     nRBPU = 0;
  1079  0048  1381               	bcf	1,7	;volatile
  1080  0049                     l3531:
  1081                           
  1082                           ;main ds3231.c: 348:     external_interrupt();
  1083  0049  120A  158A  209B  120A  118A  	fcall	_external_interrupt
  1084  004E                     l3533:
  1085                           
  1086                           ;main ds3231.c: 350:     LCD_Init();
  1087  004E  120A  158A  2315  120A  118A  	fcall	_LCD_Init
  1088  0053                     l3535:
  1089                           
  1090                           ;main ds3231.c: 352:     I2C_Master_Init(100000);
  1091  0053  3000               	movlw	0
  1092  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0056  00D5               	movwf	I2C_Master_Init@I2C_BaudRate+3
  1095  0057  3001               	movlw	1
  1096  0058  00D4               	movwf	I2C_Master_Init@I2C_BaudRate+2
  1097  0059  3086               	movlw	134
  1098  005A  00D3               	movwf	I2C_Master_Init@I2C_BaudRate+1
  1099  005B  30A0               	movlw	160
  1100  005C  00D2               	movwf	I2C_Master_Init@I2C_BaudRate
  1101  005D  120A  158A  2193  120A  118A  	fcall	_I2C_Master_Init
  1102  0062                     l3537:
  1103                           
  1104                           ;main ds3231.c: 355:     {;main ds3231.c: 356:     if(!RB1)
  1105  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0064  1886               	btfsc	6,1	;volatile
  1108  0065  2867               	goto	u3391
  1109  0066  2868               	goto	u3390
  1110  0067                     u3391:
  1111  0067  29CD               	goto	l3605
  1112  0068                     u3390:
  1113  0068                     l3539:
  1114                           
  1115                           ;main ds3231.c: 357:     if(debounce(1))
  1116  0068  3001               	movlw	1
  1117  0069  120A  158A  2279  120A  118A  	fcall	_debounce
  1118  006E  1C03               	btfss	3,0
  1119  006F  2871               	goto	u3401
  1120  0070  2872               	goto	u3400
  1121  0071                     u3401:
  1122  0071  29CD               	goto	l3605
  1123  0072                     u3400:
  1124  0072                     l3541:
  1125                           
  1126                           ;main ds3231.c: 358:     {;main ds3231.c: 359:       i = 0;
  1127  0072  01FB               	clrf	_i
  1128  0073                     l3543:
  1129                           
  1130                           ;main ds3231.c: 360:       hour = edit(1, 1, hour);
  1131  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0075  01D4               	clrf	edit@y
  1134  0076  0AD4               	incf	edit@y,f
  1135  0077  0868               	movf	_hour,w
  1136  0078  00FF               	movwf	btemp+1
  1137  0079  087F               	movf	btemp+1,w
  1138  007A  00D5               	movwf	edit@parameter
  1139  007B  3001               	movlw	1
  1140  007C  120A  158A  26A2  120A  118A  	fcall	_edit
  1141  0081  00FF               	movwf	btemp+1
  1142  0082  087F               	movf	btemp+1,w
  1143  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0085  00E8               	movwf	_hour
  1146  0086                     l3545:
  1147                           
  1148                           ;main ds3231.c: 361:       minute = edit(1, 4, minute);
  1149  0086  3004               	movlw	4
  1150  0087  00FF               	movwf	btemp+1
  1151  0088  087F               	movf	btemp+1,w
  1152  0089  00D4               	movwf	edit@y
  1153  008A  087A               	movf	_minute,w
  1154  008B  00FF               	movwf	btemp+1
  1155  008C  087F               	movf	btemp+1,w
  1156  008D  00D5               	movwf	edit@parameter
  1157  008E  3001               	movlw	1
  1158  008F  120A  158A  26A2  120A  118A  	fcall	_edit
  1159  0094  00FF               	movwf	btemp+1
  1160  0095  087F               	movf	btemp+1,w
  1161  0096  00FA               	movwf	_minute
  1162  0097                     l3547:	
  1163                           ;main ds3231.c: 363:       while(debounce(1));
  1164                           
  1165  0097  3001               	movlw	1
  1166  0098  120A  158A  2279  120A  118A  	fcall	_debounce
  1167  009D  1803               	btfsc	3,0
  1168  009E  28A0               	goto	u3411
  1169  009F  28A1               	goto	u3410
  1170  00A0                     u3411:
  1171  00A0  2897               	goto	l3547
  1172  00A1                     u3410:
  1173  00A1  28C2               	goto	l3559
  1174  00A2                     l3549:
  1175                           
  1176                           ;main ds3231.c: 368:         {;main ds3231.c: 369:           w_day++;
  1177  00A2  3001               	movlw	1
  1178  00A3  00FF               	movwf	btemp+1
  1179  00A4  087F               	movf	btemp+1,w
  1180  00A5  07E7               	addwf	_w_day,f
  1181  00A6                     l3551:
  1182                           
  1183                           ;main ds3231.c: 370:           if(w_day > 7) w_day = 1;
  1184  00A6  3008               	movlw	8
  1185  00A7  0267               	subwf	_w_day,w
  1186  00A8  1C03               	skipc
  1187  00A9  28AB               	goto	u3421
  1188  00AA  28AC               	goto	u3420
  1189  00AB                     u3421:
  1190  00AB  28AE               	goto	l3555
  1191  00AC                     u3420:
  1192  00AC                     l3553:
  1193  00AC  01E7               	clrf	_w_day
  1194  00AD  0AE7               	incf	_w_day,f
  1195  00AE                     l3555:
  1196                           
  1197                           ;main ds3231.c: 371:           w_day_display();
  1198  00AE  120A  158A  2449  120A  118A  	fcall	_w_day_display
  1199  00B3                     l3557:
  1200                           
  1201                           ;main ds3231.c: 372:           _delay((unsigned long)((200)*(8000000/4000.0)));
  1202  00B3  3003               	movlw	3
  1203  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1204  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1205  00B6  00DC               	movwf	??_main+2
  1206  00B7  3008               	movlw	8
  1207  00B8  00DB               	movwf	??_main+1
  1208  00B9  3076               	movlw	118
  1209  00BA  00DA               	movwf	??_main
  1210  00BB                     u3627:
  1211  00BB  0BDA               	decfsz	??_main,f
  1212  00BC  28BB               	goto	u3627
  1213  00BD  0BDB               	decfsz	??_main+1,f
  1214  00BE  28BB               	goto	u3627
  1215  00BF  0BDC               	decfsz	??_main+2,f
  1216  00C0  28BB               	goto	u3627
  1217  00C1  0000               	nop
  1218  00C2                     l3559:
  1219                           
  1220                           ;main ds3231.c: 367:         while(!RB2)
  1221  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1222  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1223  00C4  1D06               	btfss	6,2	;volatile
  1224  00C5  28C7               	goto	u3431
  1225  00C6  28C8               	goto	u3430
  1226  00C7                     u3431:
  1227  00C7  28A2               	goto	l3549
  1228  00C8                     u3430:
  1229  00C8                     l3561:
  1230                           
  1231                           ;main ds3231.c: 375:         LCD_Set_Cursor(2, 1);
  1232  00C8  01F5               	clrf	LCD_Set_Cursor@column
  1233  00C9  0AF5               	incf	LCD_Set_Cursor@column,f
  1234  00CA  3002               	movlw	2
  1235  00CB  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  1236  00D0                     l3563:
  1237                           
  1238                           ;main ds3231.c: 376:         LCD_Write_String("   ");
  1239  00D0  3001               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1240  00D1  00F7               	movwf	LCD_Write_String@str
  1241  00D2  3080               	movlw	128
  1242  00D3  00F8               	movwf	LCD_Write_String@str+1
  1243  00D4  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  1244  00D9                     l3565:
  1245                           
  1246                           ;main ds3231.c: 377:         blink();
  1247  00D9  120A  158A  2217  120A  118A  	fcall	_blink
  1248                           
  1249                           ;main ds3231.c: 378:         w_day_display();
  1250  00DE  120A  158A  2449  120A  118A  	fcall	_w_day_display
  1251  00E3                     l3567:
  1252                           
  1253                           ;main ds3231.c: 379:         blink();
  1254  00E3  120A  158A  2217  120A  118A  	fcall	_blink
  1255  00E8                     l3569:
  1256                           
  1257                           ;main ds3231.c: 380:         if(!RB1)
  1258  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1259  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1260  00EA  1886               	btfsc	6,1	;volatile
  1261  00EB  28ED               	goto	u3441
  1262  00EC  28EE               	goto	u3440
  1263  00ED                     u3441:
  1264  00ED  28C2               	goto	l3559
  1265  00EE                     u3440:
  1266  00EE                     l3571:
  1267                           
  1268                           ;main ds3231.c: 381:         if(debounce(1))
  1269  00EE  3001               	movlw	1
  1270  00EF  120A  158A  2279  120A  118A  	fcall	_debounce
  1271  00F4  1C03               	btfss	3,0
  1272  00F5  28F7               	goto	u3451
  1273  00F6  28F8               	goto	u3450
  1274  00F7                     u3451:
  1275  00F7  28C2               	goto	l3559
  1276  00F8                     u3450:
  1277  00F8                     l3575:
  1278                           
  1279                           ;main ds3231.c: 385:       m_day = edit(2, 5, m_day);
  1280  00F8  3005               	movlw	5
  1281  00F9  00FF               	movwf	btemp+1
  1282  00FA  087F               	movf	btemp+1,w
  1283  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1284  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1285  00FD  00D4               	movwf	edit@y
  1286  00FE  0866               	movf	_m_day,w
  1287  00FF  00FF               	movwf	btemp+1
  1288  0100  087F               	movf	btemp+1,w
  1289  0101  00D5               	movwf	edit@parameter
  1290  0102  3002               	movlw	2
  1291  0103  120A  158A  26A2  120A  118A  	fcall	_edit
  1292  0108  00FF               	movwf	btemp+1
  1293  0109  087F               	movf	btemp+1,w
  1294  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1295  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1296  010C  00E6               	movwf	_m_day
  1297                           
  1298                           ;main ds3231.c: 386:       month = edit(2, 8, month);
  1299  010D  3008               	movlw	8
  1300  010E  00FF               	movwf	btemp+1
  1301  010F  087F               	movf	btemp+1,w
  1302  0110  00D4               	movwf	edit@y
  1303  0111  0865               	movf	_month,w
  1304  0112  00FF               	movwf	btemp+1
  1305  0113  087F               	movf	btemp+1,w
  1306  0114  00D5               	movwf	edit@parameter
  1307  0115  3002               	movlw	2
  1308  0116  120A  158A  26A2  120A  118A  	fcall	_edit
  1309  011B  00FF               	movwf	btemp+1
  1310  011C  087F               	movf	btemp+1,w
  1311  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1312  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1313  011F  00E5               	movwf	_month
  1314                           
  1315                           ;main ds3231.c: 387:       year = edit(2, 13, year);
  1316  0120  300D               	movlw	13
  1317  0121  00FF               	movwf	btemp+1
  1318  0122  087F               	movf	btemp+1,w
  1319  0123  00D4               	movwf	edit@y
  1320  0124  0864               	movf	_year,w
  1321  0125  00FF               	movwf	btemp+1
  1322  0126  087F               	movf	btemp+1,w
  1323  0127  00D5               	movwf	edit@parameter
  1324  0128  3002               	movlw	2
  1325  0129  120A  158A  26A2  120A  118A  	fcall	_edit
  1326  012E  00FF               	movwf	btemp+1
  1327  012F  087F               	movf	btemp+1,w
  1328  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0132  00E4               	movwf	_year
  1331  0133                     l3577:	
  1332                           ;main ds3231.c: 389:       while(debounce(1));
  1333                           
  1334  0133  3001               	movlw	1
  1335  0134  120A  158A  2279  120A  118A  	fcall	_debounce
  1336  0139  1803               	btfsc	3,0
  1337  013A  293C               	goto	u3461
  1338  013B  293D               	goto	u3460
  1339  013C                     u3461:
  1340  013C  2933               	goto	l3577
  1341  013D                     u3460:
  1342  013D                     l3579:
  1343                           
  1344                           ;main ds3231.c: 392:       minute = decimal_to_bcd(minute);
  1345  013D  087A               	movf	_minute,w
  1346  013E  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1347  0143  00FF               	movwf	btemp+1
  1348  0144  087F               	movf	btemp+1,w
  1349  0145  00FA               	movwf	_minute
  1350                           
  1351                           ;main ds3231.c: 393:       hour = decimal_to_bcd(hour);
  1352  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0148  0868               	movf	_hour,w
  1355  0149  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1356  014E  00FF               	movwf	btemp+1
  1357  014F  087F               	movf	btemp+1,w
  1358  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1359  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0152  00E8               	movwf	_hour
  1361                           
  1362                           ;main ds3231.c: 394:       m_day = decimal_to_bcd(m_day);
  1363  0153  0866               	movf	_m_day,w
  1364  0154  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1365  0159  00FF               	movwf	btemp+1
  1366  015A  087F               	movf	btemp+1,w
  1367  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1368  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1369  015D  00E6               	movwf	_m_day
  1370                           
  1371                           ;main ds3231.c: 395:       month = decimal_to_bcd(month);
  1372  015E  0865               	movf	_month,w
  1373  015F  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1374  0164  00FF               	movwf	btemp+1
  1375  0165  087F               	movf	btemp+1,w
  1376  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0168  00E5               	movwf	_month
  1379                           
  1380                           ;main ds3231.c: 396:       year = decimal_to_bcd(year);
  1381  0169  0864               	movf	_year,w
  1382  016A  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1383  016F  00FF               	movwf	btemp+1
  1384  0170  087F               	movf	btemp+1,w
  1385  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0173  00E4               	movwf	_year
  1388  0174                     l3581:
  1389                           
  1390                           ;main ds3231.c: 400:       I2C_Start();
  1391  0174  120A  158A  20AB  120A  118A  	fcall	_I2C_Start
  1392  0179                     l3583:
  1393                           
  1394                           ;main ds3231.c: 401:       I2C_Write_Char(0xD0);
  1395  0179  30D0               	movlw	208
  1396  017A  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1397  017F                     l3585:
  1398                           
  1399                           ;main ds3231.c: 402:       I2C_Write_Char(0);
  1400  017F  3000               	movlw	0
  1401  0180  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1402  0185                     l3587:
  1403                           
  1404                           ;main ds3231.c: 403:       I2C_Write_Char(0);
  1405  0185  3000               	movlw	0
  1406  0186  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1407  018B                     l3589:
  1408                           
  1409                           ;main ds3231.c: 404:       I2C_Write_Char(minute);
  1410  018B  087A               	movf	_minute,w
  1411  018C  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1412  0191                     l3591:
  1413                           
  1414                           ;main ds3231.c: 405:       I2C_Write_Char(hour);
  1415  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0193  0868               	movf	_hour,w
  1418  0194  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1419  0199                     l3593:
  1420                           
  1421                           ;main ds3231.c: 406:       I2C_Write_Char(w_day);
  1422  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1423  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1424  019B  0867               	movf	_w_day,w
  1425  019C  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1426  01A1                     l3595:
  1427                           
  1428                           ;main ds3231.c: 407:       I2C_Write_Char(m_day);
  1429  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1430  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1431  01A3  0866               	movf	_m_day,w
  1432  01A4  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1433  01A9                     l3597:
  1434                           
  1435                           ;main ds3231.c: 408:       I2C_Write_Char(month);
  1436  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1437  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1438  01AB  0865               	movf	_month,w
  1439  01AC  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1440  01B1                     l3599:
  1441                           
  1442                           ;main ds3231.c: 409:       I2C_Write_Char(year);
  1443  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1444  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1445  01B3  0864               	movf	_year,w
  1446  01B4  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1447  01B9                     l3601:
  1448                           
  1449                           ;main ds3231.c: 410:       I2C_Stop();
  1450  01B9  120A  158A  20B4  120A  118A  	fcall	_I2C_Stop
  1451  01BE                     l3603:
  1452                           
  1453                           ;main ds3231.c: 412:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1454  01BE  3003               	movlw	3
  1455  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1456  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1457  01C1  00DC               	movwf	??_main+2
  1458  01C2  3008               	movlw	8
  1459  01C3  00DB               	movwf	??_main+1
  1460  01C4  3076               	movlw	118
  1461  01C5  00DA               	movwf	??_main
  1462  01C6                     u3637:
  1463  01C6  0BDA               	decfsz	??_main,f
  1464  01C7  29C6               	goto	u3637
  1465  01C8  0BDB               	decfsz	??_main+1,f
  1466  01C9  29C6               	goto	u3637
  1467  01CA  0BDC               	decfsz	??_main+2,f
  1468  01CB  29C6               	goto	u3637
  1469  01CC  0000               	nop
  1470  01CD                     l3605:
  1471                           
  1472                           ;main ds3231.c: 416:     if(!RB3)
  1473  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1474  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1475  01CF  1986               	btfsc	6,3	;volatile
  1476  01D0  29D2               	goto	u3471
  1477  01D1  29D3               	goto	u3470
  1478  01D2                     u3471:
  1479  01D2  2AFA               	goto	l3651
  1480  01D3                     u3470:
  1481  01D3                     l3607:
  1482                           
  1483                           ;main ds3231.c: 417:     if(debounce(3))
  1484  01D3  3003               	movlw	3
  1485  01D4  120A  158A  2279  120A  118A  	fcall	_debounce
  1486  01D9  1C03               	btfss	3,0
  1487  01DA  29DC               	goto	u3481
  1488  01DB  29DD               	goto	u3480
  1489  01DC                     u3481:
  1490  01DC  2AFA               	goto	l3651
  1491  01DD                     u3480:
  1492  01DD                     l3609:
  1493                           
  1494                           ;main ds3231.c: 418:     {;main ds3231.c: 419:       i = 5;
  1495  01DD  3005               	movlw	5
  1496  01DE  00FF               	movwf	btemp+1
  1497  01DF  087F               	movf	btemp+1,w
  1498  01E0  00FB               	movwf	_i
  1499  01E1                     l3611:
  1500                           
  1501                           ;main ds3231.c: 420:       alarm1_hour = edit(3, 5, alarm1_hour);
  1502  01E1  3005               	movlw	5
  1503  01E2  00FF               	movwf	btemp+1
  1504  01E3  087F               	movf	btemp+1,w
  1505  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1506  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1507  01E6  00D4               	movwf	edit@y
  1508  01E7  0862               	movf	_alarm1_hour,w
  1509  01E8  00FF               	movwf	btemp+1
  1510  01E9  087F               	movf	btemp+1,w
  1511  01EA  00D5               	movwf	edit@parameter
  1512  01EB  3003               	movlw	3
  1513  01EC  120A  158A  26A2  120A  118A  	fcall	_edit
  1514  01F1  00FF               	movwf	btemp+1
  1515  01F2  087F               	movf	btemp+1,w
  1516  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1517  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1518  01F5  00E2               	movwf	_alarm1_hour
  1519  01F6                     l3613:
  1520                           
  1521                           ;main ds3231.c: 421:       alarm1_minute = edit(3, 8, alarm1_minute);
  1522  01F6  3008               	movlw	8
  1523  01F7  00FF               	movwf	btemp+1
  1524  01F8  087F               	movf	btemp+1,w
  1525  01F9  00D4               	movwf	edit@y
  1526  01FA  0863               	movf	_alarm1_minute,w
  1527  01FB  00FF               	movwf	btemp+1
  1528  01FC  087F               	movf	btemp+1,w
  1529  01FD  00D5               	movwf	edit@parameter
  1530  01FE  3003               	movlw	3
  1531  01FF  120A  158A  26A2  120A  118A  	fcall	_edit
  1532  0204  00FF               	movwf	btemp+1
  1533  0205  087F               	movf	btemp+1,w
  1534  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0208  00E3               	movwf	_alarm1_minute
  1537  0209                     l3615:
  1538                           
  1539                           ;main ds3231.c: 422:       alarm1_status = on_off(3, 18, alarm1_status);
  1540  0209  3012               	movlw	18
  1541  020A  00FF               	movwf	btemp+1
  1542  020B  087F               	movf	btemp+1,w
  1543  020C  00D4               	movwf	on_off@y
  1544  020D  085E               	movf	_alarm1_status,w
  1545  020E  00FF               	movwf	btemp+1
  1546  020F  087F               	movf	btemp+1,w
  1547  0210  00D5               	movwf	on_off@al
  1548  0211  3003               	movlw	3
  1549  0212  120A  158A  25EF  120A  118A  	fcall	_on_off
  1550  0217  00FF               	movwf	btemp+1
  1551  0218  087F               	movf	btemp+1,w
  1552  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1553  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1554  021B  00DE               	movwf	_alarm1_status
  1555  021C                     l3617:
  1556                           
  1557                           ;main ds3231.c: 423:       i = 5;
  1558  021C  3005               	movlw	5
  1559  021D  00FF               	movwf	btemp+1
  1560  021E  087F               	movf	btemp+1,w
  1561  021F  00FB               	movwf	_i
  1562                           
  1563                           ;main ds3231.c: 424:       alarm2_hour = edit(4, 5, alarm2_hour);
  1564  0220  3005               	movlw	5
  1565  0221  00FF               	movwf	btemp+1
  1566  0222  087F               	movf	btemp+1,w
  1567  0223  00D4               	movwf	edit@y
  1568  0224  0860               	movf	_alarm2_hour,w
  1569  0225  00FF               	movwf	btemp+1
  1570  0226  087F               	movf	btemp+1,w
  1571  0227  00D5               	movwf	edit@parameter
  1572  0228  3004               	movlw	4
  1573  0229  120A  158A  26A2  120A  118A  	fcall	_edit
  1574  022E  00FF               	movwf	btemp+1
  1575  022F  087F               	movf	btemp+1,w
  1576  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0232  00E0               	movwf	_alarm2_hour
  1579                           
  1580                           ;main ds3231.c: 425:       alarm2_minute = edit(4, 8, alarm2_minute);
  1581  0233  3008               	movlw	8
  1582  0234  00FF               	movwf	btemp+1
  1583  0235  087F               	movf	btemp+1,w
  1584  0236  00D4               	movwf	edit@y
  1585  0237  0861               	movf	_alarm2_minute,w
  1586  0238  00FF               	movwf	btemp+1
  1587  0239  087F               	movf	btemp+1,w
  1588  023A  00D5               	movwf	edit@parameter
  1589  023B  3004               	movlw	4
  1590  023C  120A  158A  26A2  120A  118A  	fcall	_edit
  1591  0241  00FF               	movwf	btemp+1
  1592  0242  087F               	movf	btemp+1,w
  1593  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0245  00E1               	movwf	_alarm2_minute
  1596                           
  1597                           ;main ds3231.c: 426:       alarm2_status = on_off(4, 18, alarm2_status);
  1598  0246  3012               	movlw	18
  1599  0247  00FF               	movwf	btemp+1
  1600  0248  087F               	movf	btemp+1,w
  1601  0249  00D4               	movwf	on_off@y
  1602  024A  085D               	movf	_alarm2_status,w
  1603  024B  00FF               	movwf	btemp+1
  1604  024C  087F               	movf	btemp+1,w
  1605  024D  00D5               	movwf	on_off@al
  1606  024E  3004               	movlw	4
  1607  024F  120A  158A  25EF  120A  118A  	fcall	_on_off
  1608  0254  00FF               	movwf	btemp+1
  1609  0255  087F               	movf	btemp+1,w
  1610  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0258  00DD               	movwf	_alarm2_status
  1613  0259                     l3619:	
  1614                           ;main ds3231.c: 428:       while(debounce(3));
  1615                           
  1616  0259  3003               	movlw	3
  1617  025A  120A  158A  2279  120A  118A  	fcall	_debounce
  1618  025F  1803               	btfsc	3,0
  1619  0260  2A62               	goto	u3491
  1620  0261  2A63               	goto	u3490
  1621  0262                     u3491:
  1622  0262  2A59               	goto	l3619
  1623  0263                     u3490:
  1624  0263                     l3621:
  1625                           
  1626                           ;main ds3231.c: 430:       alarm1_minute = decimal_to_bcd(alarm1_minute);
  1627  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0265  0863               	movf	_alarm1_minute,w
  1630  0266  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1631  026B  00FF               	movwf	btemp+1
  1632  026C  087F               	movf	btemp+1,w
  1633  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1634  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1635  026F  00E3               	movwf	_alarm1_minute
  1636                           
  1637                           ;main ds3231.c: 431:       alarm1_hour = decimal_to_bcd(alarm1_hour);
  1638  0270  0862               	movf	_alarm1_hour,w
  1639  0271  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1640  0276  00FF               	movwf	btemp+1
  1641  0277  087F               	movf	btemp+1,w
  1642  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1644  027A  00E2               	movwf	_alarm1_hour
  1645                           
  1646                           ;main ds3231.c: 432:       alarm2_minute = decimal_to_bcd(alarm2_minute);
  1647  027B  0861               	movf	_alarm2_minute,w
  1648  027C  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1649  0281  00FF               	movwf	btemp+1
  1650  0282  087F               	movf	btemp+1,w
  1651  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0285  00E1               	movwf	_alarm2_minute
  1654                           
  1655                           ;main ds3231.c: 433:       alarm2_hour = decimal_to_bcd(alarm2_hour);
  1656  0286  0860               	movf	_alarm2_hour,w
  1657  0287  120A  158A  2247  120A  118A  	fcall	_decimal_to_bcd
  1658  028C  00FF               	movwf	btemp+1
  1659  028D  087F               	movf	btemp+1,w
  1660  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1661  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1662  0290  00E0               	movwf	_alarm2_hour
  1663  0291                     l3623:
  1664                           
  1665                           ;main ds3231.c: 436:       I2C_Start();
  1666  0291  120A  158A  20AB  120A  118A  	fcall	_I2C_Start
  1667  0296                     l3625:
  1668                           
  1669                           ;main ds3231.c: 437:       I2C_Write_Char(0xD0);
  1670  0296  30D0               	movlw	208
  1671  0297  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1672  029C                     l3627:
  1673                           
  1674                           ;main ds3231.c: 438:       I2C_Write_Char(7);
  1675  029C  3007               	movlw	7
  1676  029D  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1677  02A2                     l3629:
  1678                           
  1679                           ;main ds3231.c: 439:       I2C_Write_Char(0);
  1680  02A2  3000               	movlw	0
  1681  02A3  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1682  02A8                     l3631:
  1683                           
  1684                           ;main ds3231.c: 440:       I2C_Write_Char(alarm1_minute);
  1685  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1686  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1687  02AA  0863               	movf	_alarm1_minute,w
  1688  02AB  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1689  02B0                     l3633:
  1690                           
  1691                           ;main ds3231.c: 441:       I2C_Write_Char(alarm1_hour);
  1692  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1693  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1694  02B2  0862               	movf	_alarm1_hour,w
  1695  02B3  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1696  02B8                     l3635:
  1697                           
  1698                           ;main ds3231.c: 442:       I2C_Write_Char(0x80);
  1699  02B8  3080               	movlw	128
  1700  02B9  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1701  02BE                     l3637:
  1702                           
  1703                           ;main ds3231.c: 443:       I2C_Write_Char(alarm2_minute);
  1704  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1705  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1706  02C0  0861               	movf	_alarm2_minute,w
  1707  02C1  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1708  02C6                     l3639:
  1709                           
  1710                           ;main ds3231.c: 444:       I2C_Write_Char(alarm2_hour);
  1711  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1712  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1713  02C8  0860               	movf	_alarm2_hour,w
  1714  02C9  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1715  02CE                     l3641:
  1716                           
  1717                           ;main ds3231.c: 445:       I2C_Write_Char(0x80);
  1718  02CE  3080               	movlw	128
  1719  02CF  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1720  02D4                     l3643:
  1721                           
  1722                           ;main ds3231.c: 446:       I2C_Write_Char(4 | alarm1_status | (alarm2_status << 1));
  1723  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1724  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1725  02D6  085D               	movf	_alarm2_status,w
  1726  02D7  00DA               	movwf	??_main
  1727  02D8  075A               	addwf	??_main,w
  1728  02D9  045E               	iorwf	_alarm1_status,w
  1729  02DA  3804               	iorlw	4
  1730  02DB  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1731  02E0                     l3645:
  1732                           
  1733                           ;main ds3231.c: 447:       I2C_Write_Char(0);
  1734  02E0  3000               	movlw	0
  1735  02E1  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1736  02E6                     l3647:
  1737                           
  1738                           ;main ds3231.c: 448:       I2C_Stop();
  1739  02E6  120A  158A  20B4  120A  118A  	fcall	_I2C_Stop
  1740  02EB                     l3649:
  1741                           
  1742                           ;main ds3231.c: 449:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1743  02EB  3003               	movlw	3
  1744  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1745  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1746  02EE  00DC               	movwf	??_main+2
  1747  02EF  3008               	movlw	8
  1748  02F0  00DB               	movwf	??_main+1
  1749  02F1  3076               	movlw	118
  1750  02F2  00DA               	movwf	??_main
  1751  02F3                     u3647:
  1752  02F3  0BDA               	decfsz	??_main,f
  1753  02F4  2AF3               	goto	u3647
  1754  02F5  0BDB               	decfsz	??_main+1,f
  1755  02F6  2AF3               	goto	u3647
  1756  02F7  0BDC               	decfsz	??_main+2,f
  1757  02F8  2AF3               	goto	u3647
  1758  02F9  0000               	nop
  1759  02FA                     l3651:
  1760                           
  1761                           ;main ds3231.c: 451:     if(!RB2 && RB4){
  1762  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1763  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1764  02FC  1906               	btfsc	6,2	;volatile
  1765  02FD  2AFF               	goto	u3501
  1766  02FE  2B00               	goto	u3500
  1767  02FF                     u3501:
  1768  02FF  2B47               	goto	l3659
  1769  0300                     u3500:
  1770  0300                     l3653:
  1771  0300  1E06               	btfss	6,4	;volatile
  1772  0301  2B03               	goto	u3511
  1773  0302  2B04               	goto	u3510
  1774  0303                     u3511:
  1775  0303  2B47               	goto	l3659
  1776  0304                     u3510:
  1777  0304                     l3655:
  1778                           
  1779                           ;main ds3231.c: 452:       RB4 = 0;
  1780  0304  1206               	bcf	6,4	;volatile
  1781  0305                     l3657:
  1782                           
  1783                           ;main ds3231.c: 453:       I2C_Start();
  1784  0305  120A  158A  20AB  120A  118A  	fcall	_I2C_Start
  1785                           
  1786                           ;main ds3231.c: 454:       I2C_Write_Char(0xD0);
  1787  030A  30D0               	movlw	208
  1788  030B  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1789                           
  1790                           ;main ds3231.c: 455:       I2C_Write_Char(0x0E);
  1791  0310  300E               	movlw	14
  1792  0311  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1793                           
  1794                           ;main ds3231.c: 457:       I2C_Write_Char(4 | ((!(status_reg & 1)) & alarm1_status) | ((
      +                          (!((status_reg >> 1) & 1)) & alarm2_status) << 1));
  1795  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0318  085F               	movf	_status_reg,w
  1798  0319  00DA               	movwf	??_main
  1799  031A  3001               	movlw	1
  1800  031B                     u3525:
  1801  031B  1003               	clrc
  1802  031C  0CDA               	rrf	??_main,f
  1803  031D  3EFF               	addlw	-1
  1804  031E  1D03               	skipz
  1805  031F  2B1B               	goto	u3525
  1806  0320  1C5A               	btfss	??_main,0
  1807  0321  2B23               	goto	u3531
  1808  0322  2B25               	goto	u3530
  1809  0323                     u3531:
  1810  0323  3001               	movlw	1
  1811  0324  2B26               	goto	u3540
  1812  0325                     u3530:
  1813  0325  3000               	movlw	0
  1814  0326                     u3540:
  1815  0326  055D               	andwf	_alarm2_status,w
  1816  0327  00DB               	movwf	??_main+1
  1817  0328  3001               	movlw	1
  1818  0329                     u3555:
  1819  0329  1003               	clrc
  1820  032A  0DDB               	rlf	??_main+1,f
  1821  032B  3EFF               	addlw	-1
  1822  032C  1D03               	skipz
  1823  032D  2B29               	goto	u3555
  1824  032E  1C5F               	btfss	_status_reg,0
  1825  032F  2B31               	goto	u3561
  1826  0330  2B33               	goto	u3560
  1827  0331                     u3561:
  1828  0331  3001               	movlw	1
  1829  0332  2B34               	goto	u3570
  1830  0333                     u3560:
  1831  0333  3000               	movlw	0
  1832  0334                     u3570:
  1833  0334  055E               	andwf	_alarm1_status,w
  1834  0335  045B               	iorwf	??_main+1,w
  1835  0336  3804               	iorlw	4
  1836  0337  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1837                           
  1838                           ;main ds3231.c: 458:       I2C_Write_Char(0);
  1839  033C  3000               	movlw	0
  1840  033D  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  1841                           
  1842                           ;main ds3231.c: 459:       I2C_Stop();
  1843  0342  120A  158A  20B4  120A  118A  	fcall	_I2C_Stop
  1844  0347                     l3659:
  1845                           
  1846                           ;main ds3231.c: 462:     RTC_read();
  1847  0347  120A  158A  24B7  120A  118A  	fcall	_RTC_read
  1848  034C                     l3661:
  1849                           
  1850                           ;main ds3231.c: 463:     alarms_read_display();
  1851  034C  120A  118A  2364  120A  118A  	fcall	_alarms_read_display
  1852  0351                     l3663:
  1853                           
  1854                           ;main ds3231.c: 464:     RTC_display();
  1855  0351  120A  118A  2631  120A  118A  	fcall	_RTC_display
  1856  0356                     l3665:
  1857                           
  1858                           ;main ds3231.c: 466:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1859  0356  3082               	movlw	130
  1860  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0359  00DB               	movwf	??_main+1
  1863  035A  30DD               	movlw	221
  1864  035B  00DA               	movwf	??_main
  1865  035C                     u3657:
  1866  035C  0BDA               	decfsz	??_main,f
  1867  035D  2B5C               	goto	u3657
  1868  035E  0BDB               	decfsz	??_main+1,f
  1869  035F  2B5C               	goto	u3657
  1870  0360  2862               	goto	l3537
  1871  0361  120A  118A  280C   	ljmp	start
  1872  0364                     __end_of_main:
  1873                           
  1874                           	psect	text1
  1875  0DEF                     __ptext1:	
  1876 ;; *************** function _on_off *****************
  1877 ;; Defined at:
  1878 ;;		line 301 in file "main ds3231.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  x               1    wreg     unsigned char 
  1881 ;;  y               1    8[BANK0 ] unsigned char 
  1882 ;;  al              1    9[BANK0 ] unsigned char 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  x               1   13[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       2       0       0       0
  1895 ;;      Locals:         0       1       0       0       0
  1896 ;;      Temps:          0       3       0       0       0
  1897 ;;      Totals:         0       6       0       0       0
  1898 ;;Total ram usage:        6 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    6
  1901 ;; This function calls:
  1902 ;;		_LCD_Set_Cursor
  1903 ;;		_LCD_Write_String
  1904 ;;		_RTC_display
  1905 ;;		_RTC_read
  1906 ;;		_blink
  1907 ;;		_debounce
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _on_off
  1915  0DEF                     _on_off:
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in _on_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1919                           ;on_off@x stored from wreg
  1920  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0DF1  00D9               	movwf	on_off@x
  1923  0DF2                     l3431:
  1924  0DF2                     l3433:	
  1925                           ;main ds3231.c: 301: uint8_t on_off(uint8_t x, uint8_t y, uint8_t al);main ds3231.c: 302
      +                          : {;main ds3231.c: 303:   while(debounce(3));
  1926                           
  1927  0DF2  3003               	movlw	3
  1928  0DF3  120A  158A  2279  120A  158A  	fcall	_debounce
  1929  0DF8  1803               	btfsc	3,0
  1930  0DF9  2DFB               	goto	u3311
  1931  0DFA  2DFC               	goto	u3310
  1932  0DFB                     u3311:
  1933  0DFB  2DF2               	goto	l3433
  1934  0DFC                     u3310:
  1935  0DFC  2E3B               	goto	l3447
  1936  0DFD                     l3435:
  1937                           
  1938                           ;main ds3231.c: 307:     {;main ds3231.c: 308:       al = (!al) & 0x01;
  1939  0DFD  0855               	movf	on_off@al,w
  1940  0DFE  1903               	btfsc	3,2
  1941  0DFF  2E01               	goto	u3321
  1942  0E00  2E03               	goto	u3320
  1943  0E01                     u3321:
  1944  0E01  3001               	movlw	1
  1945  0E02  2E04               	goto	u3330
  1946  0E03                     u3320:
  1947  0E03  3000               	movlw	0
  1948  0E04                     u3330:
  1949  0E04  3901               	andlw	1
  1950  0E05  00FF               	movwf	btemp+1
  1951  0E06  087F               	movf	btemp+1,w
  1952  0E07  00D5               	movwf	on_off@al
  1953  0E08                     l3437:
  1954                           
  1955                           ;main ds3231.c: 309:       LCD_Set_Cursor(x, y);
  1956  0E08  0854               	movf	on_off@y,w
  1957  0E09  00FF               	movwf	btemp+1
  1958  0E0A  087F               	movf	btemp+1,w
  1959  0E0B  00F5               	movwf	LCD_Set_Cursor@column
  1960  0E0C  0859               	movf	on_off@x,w
  1961  0E0D  120A  158A  2540  120A  158A  	fcall	_LCD_Set_Cursor
  1962  0E12                     l3439:
  1963                           
  1964                           ;main ds3231.c: 310:       if(al == 1) LCD_Write_String("ON ");
  1965  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0E14  0355               	decf	on_off@al,w
  1968  0E15  1D03               	btfss	3,2
  1969  0E16  2E18               	goto	u3341
  1970  0E17  2E19               	goto	u3340
  1971  0E18                     u3341:
  1972  0E18  2E23               	goto	l3443
  1973  0E19                     u3340:
  1974  0E19                     l3441:
  1975  0E19  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1976  0E1A  00F7               	movwf	LCD_Write_String@str
  1977  0E1B  3080               	movlw	128
  1978  0E1C  00F8               	movwf	LCD_Write_String@str+1
  1979  0E1D  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  1980  0E22  2E2C               	goto	l3445
  1981  0E23                     l3443:
  1982  0E23  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1983  0E24  00F7               	movwf	LCD_Write_String@str
  1984  0E25  3080               	movlw	128
  1985  0E26  00F8               	movwf	LCD_Write_String@str+1
  1986  0E27  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  1987  0E2C                     l3445:
  1988                           
  1989                           ;main ds3231.c: 312:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1990  0E2C  3003               	movlw	3
  1991  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0E2F  00D8               	movwf	??_on_off+2
  1994  0E30  3008               	movlw	8
  1995  0E31  00D7               	movwf	??_on_off+1
  1996  0E32  3076               	movlw	118
  1997  0E33  00D6               	movwf	??_on_off
  1998  0E34                     u3667:
  1999  0E34  0BD6               	decfsz	??_on_off,f
  2000  0E35  2E34               	goto	u3667
  2001  0E36  0BD7               	decfsz	??_on_off+1,f
  2002  0E37  2E34               	goto	u3667
  2003  0E38  0BD8               	decfsz	??_on_off+2,f
  2004  0E39  2E34               	goto	u3667
  2005  0E3A  0000               	nop
  2006  0E3B                     l3447:
  2007                           
  2008                           ;main ds3231.c: 306:     while(!RB2)
  2009  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0E3D  1D06               	btfss	6,2	;volatile
  2012  0E3E  2E40               	goto	u3351
  2013  0E3F  2E41               	goto	u3350
  2014  0E40                     u3351:
  2015  0E40  2DFD               	goto	l3435
  2016  0E41                     u3350:
  2017  0E41                     l3449:
  2018                           
  2019                           ;main ds3231.c: 315:     LCD_Set_Cursor(x, y);
  2020  0E41  0854               	movf	on_off@y,w
  2021  0E42  00FF               	movwf	btemp+1
  2022  0E43  087F               	movf	btemp+1,w
  2023  0E44  00F5               	movwf	LCD_Set_Cursor@column
  2024  0E45  0859               	movf	on_off@x,w
  2025  0E46  120A  158A  2540  120A  158A  	fcall	_LCD_Set_Cursor
  2026  0E4B                     l3451:
  2027                           
  2028                           ;main ds3231.c: 316:     LCD_Write_String("   ");
  2029  0E4B  3001               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2030  0E4C  00F7               	movwf	LCD_Write_String@str
  2031  0E4D  3080               	movlw	128
  2032  0E4E  00F8               	movwf	LCD_Write_String@str+1
  2033  0E4F  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  2034  0E54                     l3453:
  2035                           
  2036                           ;main ds3231.c: 317:     blink();
  2037  0E54  120A  158A  2217  120A  158A  	fcall	_blink
  2038  0E59                     l3455:
  2039                           
  2040                           ;main ds3231.c: 319:     LCD_Set_Cursor(x, y);
  2041  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0E5B  0854               	movf	on_off@y,w
  2044  0E5C  00FF               	movwf	btemp+1
  2045  0E5D  087F               	movf	btemp+1,w
  2046  0E5E  00F5               	movwf	LCD_Set_Cursor@column
  2047  0E5F  0859               	movf	on_off@x,w
  2048  0E60  120A  158A  2540  120A  158A  	fcall	_LCD_Set_Cursor
  2049  0E65                     l3457:
  2050                           
  2051                           ;main ds3231.c: 320:     if(al == 1) LCD_Write_String("ON ");
  2052  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0E67  0355               	decf	on_off@al,w
  2055  0E68  1D03               	btfss	3,2
  2056  0E69  2E6B               	goto	u3361
  2057  0E6A  2E6C               	goto	u3360
  2058  0E6B                     u3361:
  2059  0E6B  2E76               	goto	l3461
  2060  0E6C                     u3360:
  2061  0E6C                     l3459:
  2062  0E6C  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2063  0E6D  00F7               	movwf	LCD_Write_String@str
  2064  0E6E  3080               	movlw	128
  2065  0E6F  00F8               	movwf	LCD_Write_String@str+1
  2066  0E70  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  2067  0E75  2E7F               	goto	l3463
  2068  0E76                     l3461:
  2069  0E76  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2070  0E77  00F7               	movwf	LCD_Write_String@str
  2071  0E78  3080               	movlw	128
  2072  0E79  00F8               	movwf	LCD_Write_String@str+1
  2073  0E7A  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  2074  0E7F                     l3463:
  2075                           
  2076                           ;main ds3231.c: 322:     blink();
  2077  0E7F  120A  158A  2217  120A  158A  	fcall	_blink
  2078  0E84                     l3465:
  2079                           
  2080                           ;main ds3231.c: 324:     RTC_read();
  2081  0E84  120A  158A  24B7  120A  158A  	fcall	_RTC_read
  2082                           
  2083                           ;main ds3231.c: 325:     RTC_display();
  2084  0E89  120A  118A  2631  120A  158A  	fcall	_RTC_display
  2085  0E8E                     l3467:
  2086                           
  2087                           ;main ds3231.c: 327:     if(!RB3)
  2088  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0E90  1986               	btfsc	6,3	;volatile
  2091  0E91  2E93               	goto	u3371
  2092  0E92  2E94               	goto	u3370
  2093  0E93                     u3371:
  2094  0E93  2E3B               	goto	l3447
  2095  0E94                     u3370:
  2096  0E94                     l3469:
  2097                           
  2098                           ;main ds3231.c: 328:     if(debounce(3))
  2099  0E94  3003               	movlw	3
  2100  0E95  120A  158A  2279  120A  158A  	fcall	_debounce
  2101  0E9A  1C03               	btfss	3,0
  2102  0E9B  2E9D               	goto	u3381
  2103  0E9C  2E9E               	goto	u3380
  2104  0E9D                     u3381:
  2105  0E9D  2E3B               	goto	l3447
  2106  0E9E                     u3380:
  2107  0E9E                     l3471:
  2108                           
  2109                           ;main ds3231.c: 329:     {;main ds3231.c: 330:      return al;
  2110  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0EA0  0855               	movf	on_off@al,w
  2113  0EA1                     l211:
  2114  0EA1  0008               	return
  2115  0EA2                     __end_of_on_off:
  2116                           
  2117                           	psect	text2
  2118  089B                     __ptext2:	
  2119 ;; *************** function _external_interrupt *****************
  2120 ;; Defined at:
  2121 ;;		line 30 in file "main ds3231.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		None
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _external_interrupt
  2151  089B                     _external_interrupt:
  2152  089B                     l2275:	
  2153                           ;incstack = 0
  2154                           ; Regs used in _external_interrupt: []
  2155                           
  2156                           
  2157                           ;main ds3231.c: 32:     INTE=1;
  2158  089B  160B               	bsf	11,4	;volatile
  2159                           
  2160                           ;main ds3231.c: 33:     INTF=0;
  2161  089C  108B               	bcf	11,1	;volatile
  2162                           
  2163                           ;main ds3231.c: 34:     GIE=1;
  2164  089D  178B               	bsf	11,7	;volatile
  2165                           
  2166                           ;main ds3231.c: 35:     INTEDG = 0;
  2167  089E  1683               	bsf	3,5	;RP0=1, select bank1
  2168  089F  1303               	bcf	3,6	;RP1=0, select bank1
  2169  08A0  1301               	bcf	1,6	;volatile
  2170  08A1                     l93:
  2171  08A1  0008               	return
  2172  08A2                     __end_of_external_interrupt:
  2173                           
  2174                           	psect	text3
  2175  0EA2                     __ptext3:	
  2176 ;; *************** function _edit *****************
  2177 ;; Defined at:
  2178 ;;		line 245 in file "main ds3231.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  x               1    wreg     unsigned char 
  2181 ;;  y               1    8[BANK0 ] unsigned char 
  2182 ;;  parameter       1    9[BANK0 ] unsigned char 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  x               1   13[BANK0 ] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       2       0       0       0
  2195 ;;      Locals:         0       1       0       0       0
  2196 ;;      Temps:          0       3       0       0       0
  2197 ;;      Totals:         0       6       0       0       0
  2198 ;;Total ram usage:        6 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    6
  2201 ;; This function calls:
  2202 ;;		_LCD_Set_Cursor
  2203 ;;		_LCD_Write_Char
  2204 ;;		_LCD_Write_String
  2205 ;;		_RTC_display
  2206 ;;		_RTC_read
  2207 ;;		___awdiv
  2208 ;;		___awmod
  2209 ;;		_blink
  2210 ;;		_debounce
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _edit
  2218  0EA2                     _edit:
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _edit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2222                           ;edit@x stored from wreg
  2223  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0EA4  00D9               	movwf	edit@x
  2226  0EA5                     l3335:
  2227  0EA5                     l3337:	
  2228                           ;main ds3231.c: 245: uint8_t edit(uint8_t x, uint8_t y, uint8_t parameter);main ds3231.c
      +                          : 246: {;main ds3231.c: 247:   while(debounce(1) || debounce(3));
  2229                           
  2230  0EA5  3001               	movlw	1
  2231  0EA6  120A  158A  2279  120A  158A  	fcall	_debounce
  2232  0EAB  1803               	btfsc	3,0
  2233  0EAC  2EAE               	goto	u3081
  2234  0EAD  2EAF               	goto	u3080
  2235  0EAE                     u3081:
  2236  0EAE  2EA5               	goto	l3337
  2237  0EAF                     u3080:
  2238  0EAF                     l3339:
  2239  0EAF  3003               	movlw	3
  2240  0EB0  120A  158A  2279  120A  158A  	fcall	_debounce
  2241  0EB5  1803               	btfsc	3,0
  2242  0EB6  2EB8               	goto	u3091
  2243  0EB7  2EB9               	goto	u3090
  2244  0EB8                     u3091:
  2245  0EB8  2EA5               	goto	l3337
  2246  0EB9                     u3090:
  2247  0EB9  2F73               	goto	l3397
  2248  0EBA                     l3341:
  2249                           
  2250                           ;main ds3231.c: 252:     {;main ds3231.c: 253:       parameter++;
  2251  0EBA  3001               	movlw	1
  2252  0EBB  00FF               	movwf	btemp+1
  2253  0EBC  087F               	movf	btemp+1,w
  2254  0EBD  07D5               	addwf	edit@parameter,f
  2255  0EBE                     l3343:
  2256                           
  2257                           ;main ds3231.c: 254:       if(((i == 0) || (i == 5)) && parameter > 23)
  2258  0EBE  087B               	movf	_i,w
  2259  0EBF  1903               	btfsc	3,2
  2260  0EC0  2EC2               	goto	u3101
  2261  0EC1  2EC3               	goto	u3100
  2262  0EC2                     u3101:
  2263  0EC2  2EC9               	goto	l3347
  2264  0EC3                     u3100:
  2265  0EC3                     l3345:
  2266  0EC3  3005               	movlw	5
  2267  0EC4  067B               	xorwf	_i,w
  2268  0EC5  1D03               	btfss	3,2
  2269  0EC6  2EC8               	goto	u3111
  2270  0EC7  2EC9               	goto	u3110
  2271  0EC8                     u3111:
  2272  0EC8  2ED0               	goto	l3351
  2273  0EC9                     u3110:
  2274  0EC9                     l3347:
  2275  0EC9  3018               	movlw	24
  2276  0ECA  0255               	subwf	edit@parameter,w
  2277  0ECB  1C03               	skipc
  2278  0ECC  2ECE               	goto	u3121
  2279  0ECD  2ECF               	goto	u3120
  2280  0ECE                     u3121:
  2281  0ECE  2ED0               	goto	l3351
  2282  0ECF                     u3120:
  2283  0ECF                     l3349:
  2284                           
  2285                           ;main ds3231.c: 255:         parameter = 0;
  2286  0ECF  01D5               	clrf	edit@parameter
  2287  0ED0                     l3351:
  2288                           
  2289                           ;main ds3231.c: 256:       if(((i == 1) || (i == 6)) && parameter > 59)
  2290  0ED0  037B               	decf	_i,w
  2291  0ED1  1903               	btfsc	3,2
  2292  0ED2  2ED4               	goto	u3131
  2293  0ED3  2ED5               	goto	u3130
  2294  0ED4                     u3131:
  2295  0ED4  2EDB               	goto	l3355
  2296  0ED5                     u3130:
  2297  0ED5                     l3353:
  2298  0ED5  3006               	movlw	6
  2299  0ED6  067B               	xorwf	_i,w
  2300  0ED7  1D03               	btfss	3,2
  2301  0ED8  2EDA               	goto	u3141
  2302  0ED9  2EDB               	goto	u3140
  2303  0EDA                     u3141:
  2304  0EDA  2EE2               	goto	l3359
  2305  0EDB                     u3140:
  2306  0EDB                     l3355:
  2307  0EDB  303C               	movlw	60
  2308  0EDC  0255               	subwf	edit@parameter,w
  2309  0EDD  1C03               	skipc
  2310  0EDE  2EE0               	goto	u3151
  2311  0EDF  2EE1               	goto	u3150
  2312  0EE0                     u3151:
  2313  0EE0  2EE2               	goto	l3359
  2314  0EE1                     u3150:
  2315  0EE1                     l3357:
  2316                           
  2317                           ;main ds3231.c: 257:         parameter = 0;
  2318  0EE1  01D5               	clrf	edit@parameter
  2319  0EE2                     l3359:
  2320                           
  2321                           ;main ds3231.c: 258:       if(i == 2 && parameter > 31)
  2322  0EE2  3002               	movlw	2
  2323  0EE3  067B               	xorwf	_i,w
  2324  0EE4  1D03               	btfss	3,2
  2325  0EE5  2EE7               	goto	u3161
  2326  0EE6  2EE8               	goto	u3160
  2327  0EE7                     u3161:
  2328  0EE7  2EF0               	goto	l3365
  2329  0EE8                     u3160:
  2330  0EE8                     l3361:
  2331  0EE8  3020               	movlw	32
  2332  0EE9  0255               	subwf	edit@parameter,w
  2333  0EEA  1C03               	skipc
  2334  0EEB  2EED               	goto	u3171
  2335  0EEC  2EEE               	goto	u3170
  2336  0EED                     u3171:
  2337  0EED  2EF0               	goto	l3365
  2338  0EEE                     u3170:
  2339  0EEE                     l3363:
  2340                           
  2341                           ;main ds3231.c: 259:         parameter = 1;
  2342  0EEE  01D5               	clrf	edit@parameter
  2343  0EEF  0AD5               	incf	edit@parameter,f
  2344  0EF0                     l3365:
  2345                           
  2346                           ;main ds3231.c: 260:       if(i == 3 && parameter > 12)
  2347  0EF0  3003               	movlw	3
  2348  0EF1  067B               	xorwf	_i,w
  2349  0EF2  1D03               	btfss	3,2
  2350  0EF3  2EF5               	goto	u3181
  2351  0EF4  2EF6               	goto	u3180
  2352  0EF5                     u3181:
  2353  0EF5  2EFE               	goto	l3371
  2354  0EF6                     u3180:
  2355  0EF6                     l3367:
  2356  0EF6  300D               	movlw	13
  2357  0EF7  0255               	subwf	edit@parameter,w
  2358  0EF8  1C03               	skipc
  2359  0EF9  2EFB               	goto	u3191
  2360  0EFA  2EFC               	goto	u3190
  2361  0EFB                     u3191:
  2362  0EFB  2EFE               	goto	l3371
  2363  0EFC                     u3190:
  2364  0EFC                     l3369:
  2365                           
  2366                           ;main ds3231.c: 261:         parameter = 1;
  2367  0EFC  01D5               	clrf	edit@parameter
  2368  0EFD  0AD5               	incf	edit@parameter,f
  2369  0EFE                     l3371:
  2370                           
  2371                           ;main ds3231.c: 262:       if(i == 4 && parameter > 99)
  2372  0EFE  3004               	movlw	4
  2373  0EFF  067B               	xorwf	_i,w
  2374  0F00  1D03               	btfss	3,2
  2375  0F01  2F03               	goto	u3201
  2376  0F02  2F04               	goto	u3200
  2377  0F03                     u3201:
  2378  0F03  2F0B               	goto	l3377
  2379  0F04                     u3200:
  2380  0F04                     l3373:
  2381  0F04  3064               	movlw	100
  2382  0F05  0255               	subwf	edit@parameter,w
  2383  0F06  1C03               	skipc
  2384  0F07  2F09               	goto	u3211
  2385  0F08  2F0A               	goto	u3210
  2386  0F09                     u3211:
  2387  0F09  2F0B               	goto	l3377
  2388  0F0A                     u3210:
  2389  0F0A                     l3375:
  2390                           
  2391                           ;main ds3231.c: 263:         parameter = 0;
  2392  0F0A  01D5               	clrf	edit@parameter
  2393  0F0B                     l3377:
  2394                           
  2395                           ;main ds3231.c: 264:       if(i == 7 && parameter > 1)
  2396  0F0B  3007               	movlw	7
  2397  0F0C  067B               	xorwf	_i,w
  2398  0F0D  1D03               	btfss	3,2
  2399  0F0E  2F10               	goto	u3221
  2400  0F0F  2F11               	goto	u3220
  2401  0F10                     u3221:
  2402  0F10  2F18               	goto	l3383
  2403  0F11                     u3220:
  2404  0F11                     l3379:
  2405  0F11  3002               	movlw	2
  2406  0F12  0255               	subwf	edit@parameter,w
  2407  0F13  1C03               	skipc
  2408  0F14  2F16               	goto	u3231
  2409  0F15  2F17               	goto	u3230
  2410  0F16                     u3231:
  2411  0F16  2F18               	goto	l3383
  2412  0F17                     u3230:
  2413  0F17                     l3381:
  2414                           
  2415                           ;main ds3231.c: 265:         parameter = 0;
  2416  0F17  01D5               	clrf	edit@parameter
  2417  0F18                     l3383:
  2418                           
  2419                           ;main ds3231.c: 267:       LCD_Set_Cursor(x, y);
  2420  0F18  0854               	movf	edit@y,w
  2421  0F19  00FF               	movwf	btemp+1
  2422  0F1A  087F               	movf	btemp+1,w
  2423  0F1B  00F5               	movwf	LCD_Set_Cursor@column
  2424  0F1C  0859               	movf	edit@x,w
  2425  0F1D  120A  158A  2540  120A  158A  	fcall	_LCD_Set_Cursor
  2426  0F22                     l3385:
  2427                           
  2428                           ;main ds3231.c: 268:       LCD_Write_Char(parameter / 10 + '0');
  2429  0F22  300A               	movlw	10
  2430  0F23  00F2               	movwf	___awdiv@divisor
  2431  0F24  3000               	movlw	0
  2432  0F25  00F3               	movwf	___awdiv@divisor+1
  2433  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0F28  0855               	movf	edit@parameter,w
  2436  0F29  00D6               	movwf	??_edit
  2437  0F2A  01D7               	clrf	??_edit+1
  2438  0F2B  0856               	movf	??_edit,w
  2439  0F2C  00F4               	movwf	___awdiv@dividend
  2440  0F2D  0857               	movf	??_edit+1,w
  2441  0F2E  00F5               	movwf	___awdiv@dividend+1
  2442  0F2F  120A  158A  237A  120A  158A  	fcall	___awdiv
  2443  0F34  0872               	movf	?___awdiv,w
  2444  0F35  3E30               	addlw	48
  2445  0F36  120A  118A  27B3  120A  158A  	fcall	_LCD_Write_Char
  2446  0F3B                     l3387:
  2447                           
  2448                           ;main ds3231.c: 269:       LCD_Write_Char(parameter % 10 + '0');
  2449  0F3B  300A               	movlw	10
  2450  0F3C  00F2               	movwf	___awmod@divisor
  2451  0F3D  3000               	movlw	0
  2452  0F3E  00F3               	movwf	___awmod@divisor+1
  2453  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0F41  0855               	movf	edit@parameter,w
  2456  0F42  00D6               	movwf	??_edit
  2457  0F43  01D7               	clrf	??_edit+1
  2458  0F44  0856               	movf	??_edit,w
  2459  0F45  00F4               	movwf	___awmod@dividend
  2460  0F46  0857               	movf	??_edit+1,w
  2461  0F47  00F5               	movwf	___awmod@dividend+1
  2462  0F48  120A  158A  22BC  120A  158A  	fcall	___awmod
  2463  0F4D  0872               	movf	?___awmod,w
  2464  0F4E  3E30               	addlw	48
  2465  0F4F  120A  118A  27B3  120A  158A  	fcall	_LCD_Write_Char
  2466  0F54                     l3389:
  2467                           
  2468                           ;main ds3231.c: 271:       if(i >= 5){
  2469  0F54  3005               	movlw	5
  2470  0F55  027B               	subwf	_i,w
  2471  0F56  1C03               	skipc
  2472  0F57  2F59               	goto	u3241
  2473  0F58  2F5A               	goto	u3240
  2474  0F59                     u3241:
  2475  0F59  2F64               	goto	l3395
  2476  0F5A                     u3240:
  2477  0F5A                     l3391:
  2478                           
  2479                           ;main ds3231.c: 272:         RTC_read();
  2480  0F5A  120A  158A  24B7  120A  158A  	fcall	_RTC_read
  2481  0F5F                     l3393:
  2482                           
  2483                           ;main ds3231.c: 273:         RTC_display();
  2484  0F5F  120A  118A  2631  120A  158A  	fcall	_RTC_display
  2485  0F64                     l3395:
  2486                           
  2487                           ;main ds3231.c: 275:       _delay((unsigned long)((200)*(8000000/4000.0)));
  2488  0F64  3003               	movlw	3
  2489  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0F67  00D8               	movwf	??_edit+2
  2492  0F68  3008               	movlw	8
  2493  0F69  00D7               	movwf	??_edit+1
  2494  0F6A  3076               	movlw	118
  2495  0F6B  00D6               	movwf	??_edit
  2496  0F6C                     u3677:
  2497  0F6C  0BD6               	decfsz	??_edit,f
  2498  0F6D  2F6C               	goto	u3677
  2499  0F6E  0BD7               	decfsz	??_edit+1,f
  2500  0F6F  2F6C               	goto	u3677
  2501  0F70  0BD8               	decfsz	??_edit+2,f
  2502  0F71  2F6C               	goto	u3677
  2503  0F72  0000               	nop
  2504  0F73                     l3397:
  2505                           
  2506                           ;main ds3231.c: 251:     while(!RB2)
  2507  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0F75  1D06               	btfss	6,2	;volatile
  2510  0F76  2F78               	goto	u3251
  2511  0F77  2F79               	goto	u3250
  2512  0F78                     u3251:
  2513  0F78  2EBA               	goto	l3341
  2514  0F79                     u3250:
  2515  0F79                     l3399:
  2516                           
  2517                           ;main ds3231.c: 278:     LCD_Set_Cursor(x, y);
  2518  0F79  0854               	movf	edit@y,w
  2519  0F7A  00FF               	movwf	btemp+1
  2520  0F7B  087F               	movf	btemp+1,w
  2521  0F7C  00F5               	movwf	LCD_Set_Cursor@column
  2522  0F7D  0859               	movf	edit@x,w
  2523  0F7E  120A  158A  2540  120A  158A  	fcall	_LCD_Set_Cursor
  2524  0F83                     l3401:
  2525                           
  2526                           ;main ds3231.c: 279:     LCD_Write_String("  ");
  2527  0F83  3002               	movlw	(low (((STR_15+1)-__stringbase)| (0+32768)))& (0+255)
  2528  0F84  00F7               	movwf	LCD_Write_String@str
  2529  0F85  3080               	movlw	128
  2530  0F86  00F8               	movwf	LCD_Write_String@str+1
  2531  0F87  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  2532  0F8C                     l3403:
  2533                           
  2534                           ;main ds3231.c: 280:     blink();
  2535  0F8C  120A  158A  2217  120A  158A  	fcall	_blink
  2536  0F91                     l3405:
  2537                           
  2538                           ;main ds3231.c: 282:     LCD_Set_Cursor(x, y);
  2539  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0F93  0854               	movf	edit@y,w
  2542  0F94  00FF               	movwf	btemp+1
  2543  0F95  087F               	movf	btemp+1,w
  2544  0F96  00F5               	movwf	LCD_Set_Cursor@column
  2545  0F97  0859               	movf	edit@x,w
  2546  0F98  120A  158A  2540  120A  158A  	fcall	_LCD_Set_Cursor
  2547  0F9D                     l3407:
  2548                           
  2549                           ;main ds3231.c: 283:     LCD_Write_Char(parameter / 10 + '0');
  2550  0F9D  300A               	movlw	10
  2551  0F9E  00F2               	movwf	___awdiv@divisor
  2552  0F9F  3000               	movlw	0
  2553  0FA0  00F3               	movwf	___awdiv@divisor+1
  2554  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0FA3  0855               	movf	edit@parameter,w
  2557  0FA4  00D6               	movwf	??_edit
  2558  0FA5  01D7               	clrf	??_edit+1
  2559  0FA6  0856               	movf	??_edit,w
  2560  0FA7  00F4               	movwf	___awdiv@dividend
  2561  0FA8  0857               	movf	??_edit+1,w
  2562  0FA9  00F5               	movwf	___awdiv@dividend+1
  2563  0FAA  120A  158A  237A  120A  158A  	fcall	___awdiv
  2564  0FAF  0872               	movf	?___awdiv,w
  2565  0FB0  3E30               	addlw	48
  2566  0FB1  120A  118A  27B3  120A  158A  	fcall	_LCD_Write_Char
  2567  0FB6                     l3409:
  2568                           
  2569                           ;main ds3231.c: 284:     LCD_Write_Char(parameter % 10 + '0');
  2570  0FB6  300A               	movlw	10
  2571  0FB7  00F2               	movwf	___awmod@divisor
  2572  0FB8  3000               	movlw	0
  2573  0FB9  00F3               	movwf	___awmod@divisor+1
  2574  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0FBC  0855               	movf	edit@parameter,w
  2577  0FBD  00D6               	movwf	??_edit
  2578  0FBE  01D7               	clrf	??_edit+1
  2579  0FBF  0856               	movf	??_edit,w
  2580  0FC0  00F4               	movwf	___awmod@dividend
  2581  0FC1  0857               	movf	??_edit+1,w
  2582  0FC2  00F5               	movwf	___awmod@dividend+1
  2583  0FC3  120A  158A  22BC  120A  158A  	fcall	___awmod
  2584  0FC8  0872               	movf	?___awmod,w
  2585  0FC9  3E30               	addlw	48
  2586  0FCA  120A  118A  27B3  120A  158A  	fcall	_LCD_Write_Char
  2587  0FCF                     l3411:
  2588                           
  2589                           ;main ds3231.c: 285:     blink();
  2590  0FCF  120A  158A  2217  120A  158A  	fcall	_blink
  2591  0FD4                     l3413:
  2592                           
  2593                           ;main ds3231.c: 287:     if(i >= 5)
  2594  0FD4  3005               	movlw	5
  2595  0FD5  027B               	subwf	_i,w
  2596  0FD6  1C03               	skipc
  2597  0FD7  2FD9               	goto	u3261
  2598  0FD8  2FDA               	goto	u3260
  2599  0FD9                     u3261:
  2600  0FD9  2FE4               	goto	l3419
  2601  0FDA                     u3260:
  2602  0FDA                     l3415:
  2603                           
  2604                           ;main ds3231.c: 288:     {;main ds3231.c: 289:       RTC_read();
  2605  0FDA  120A  158A  24B7  120A  158A  	fcall	_RTC_read
  2606  0FDF                     l3417:
  2607                           
  2608                           ;main ds3231.c: 290:       RTC_display();
  2609  0FDF  120A  118A  2631  120A  158A  	fcall	_RTC_display
  2610  0FE4                     l3419:
  2611                           
  2612                           ;main ds3231.c: 293:     if((!RB1 && i < 5) || (!RB3 && i >= 5))
  2613  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0FE6  1886               	btfsc	6,1	;volatile
  2616  0FE7  2FE9               	goto	u3271
  2617  0FE8  2FEA               	goto	u3270
  2618  0FE9                     u3271:
  2619  0FE9  2FF0               	goto	l192
  2620  0FEA                     u3270:
  2621  0FEA                     l3421:
  2622  0FEA  3005               	movlw	5
  2623  0FEB  027B               	subwf	_i,w
  2624  0FEC  1C03               	skipc
  2625  0FED  2FEF               	goto	u3281
  2626  0FEE  2FF0               	goto	u3280
  2627  0FEF                     u3281:
  2628  0FEF  2FFA               	goto	l3425
  2629  0FF0                     u3280:
  2630  0FF0                     l192:
  2631  0FF0  1986               	btfsc	6,3	;volatile
  2632  0FF1  2FF3               	goto	u3291
  2633  0FF2  2FF4               	goto	u3290
  2634  0FF3                     u3291:
  2635  0FF3  2F73               	goto	l3397
  2636  0FF4                     u3290:
  2637  0FF4                     l3423:
  2638  0FF4  3005               	movlw	5
  2639  0FF5  027B               	subwf	_i,w
  2640  0FF6  1C03               	skipc
  2641  0FF7  2FF9               	goto	u3301
  2642  0FF8  2FFA               	goto	u3300
  2643  0FF9                     u3301:
  2644  0FF9  2F73               	goto	l3397
  2645  0FFA                     u3300:
  2646  0FFA                     l3425:
  2647                           
  2648                           ;main ds3231.c: 294:     {;main ds3231.c: 295:       i++;
  2649  0FFA  3001               	movlw	1
  2650  0FFB  00FF               	movwf	btemp+1
  2651  0FFC  087F               	movf	btemp+1,w
  2652  0FFD  07FB               	addwf	_i,f
  2653  0FFE                     l3427:
  2654                           
  2655                           ;main ds3231.c: 296:       return parameter;
  2656  0FFE  0855               	movf	edit@parameter,w
  2657  0FFF                     l193:
  2658  0FFF  0008               	return
  2659  1000                     __end_of_edit:
  2660                           
  2661                           	psect	text4
  2662  0A79                     __ptext4:	
  2663 ;; *************** function _debounce *****************
  2664 ;; Defined at:
  2665 ;;		line 50 in file "main ds3231.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  button          1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  button          1    4[COMMON] unsigned char 
  2670 ;;  i               1    6[COMMON] unsigned char 
  2671 ;;  count           1    5[COMMON] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         3       0       0       0       0
  2683 ;;      Temps:          2       0       0       0       0
  2684 ;;      Totals:         5       0       0       0       0
  2685 ;;Total ram usage:        5 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_edit
  2692 ;;		_on_off
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _debounce
  2699  0A79                     _debounce:
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _debounce: [wreg-fsr0h+status,2+status,0+btemp+1]
  2703                           ;debounce@button stored from wreg
  2704  0A79  00F4               	movwf	debounce@button
  2705  0A7A                     l3091:
  2706                           
  2707                           ;main ds3231.c: 50: __bit debounce (uint8_t button);main ds3231.c: 51: {;main ds3231.c: 
      +                          52:   uint8_t count = 0;
  2708  0A7A  01F5               	clrf	debounce@count
  2709                           
  2710                           ;main ds3231.c: 53:   for(uint8_t i = 0; i < 5; i++)
  2711  0A7B  01F6               	clrf	debounce@i
  2712  0A7C  2A8F               	goto	l3103
  2713  0A7D                     l105:	
  2714                           ;main ds3231.c: 56:     {;main ds3231.c: 57:       case 1: if (RB1 == 0)
  2715                           
  2716  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0A7F  1886               	btfsc	6,1	;volatile
  2719  0A80  2A82               	goto	u2811
  2720  0A81  2A83               	goto	u2810
  2721  0A82                     u2811:
  2722  0A82  2A9F               	goto	l3105
  2723  0A83                     u2810:
  2724  0A83                     l3097:
  2725                           
  2726                           ;main ds3231.c: 58:                 count++;
  2727  0A83  3001               	movlw	1
  2728  0A84  00FF               	movwf	btemp+1
  2729  0A85  087F               	movf	btemp+1,w
  2730  0A86  07F5               	addwf	debounce@count,f
  2731  0A87  2A9F               	goto	l3105
  2732  0A88                     l108:	
  2733                           ;main ds3231.c: 60:       case 3: if (RB3 == 0)
  2734                           
  2735  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0A89  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0A8A  1986               	btfsc	6,3	;volatile
  2738  0A8B  2A8D               	goto	u2821
  2739  0A8C  2A8E               	goto	u2820
  2740  0A8D                     u2821:
  2741  0A8D  2A9F               	goto	l3105
  2742  0A8E                     u2820:
  2743  0A8E  2A83               	goto	l3097
  2744  0A8F                     l3103:
  2745  0A8F  0874               	movf	debounce@button,w
  2746  0A90  00F2               	movwf	??_debounce
  2747  0A91  01F3               	clrf	??_debounce+1
  2748                           
  2749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2750                           ; Switch size 1, requested type "simple"
  2751                           ; Number of cases is 1, Range of values is 0 to 0
  2752                           ; switch strategies available:
  2753                           ; Name         Instructions Cycles
  2754                           ; simple_byte            4     3 (average)
  2755                           ; direct_byte           11     8 (fixed)
  2756                           ; jumptable            260     6 (fixed)
  2757                           ;	Chosen strategy is simple_byte
  2758  0A92  0873               	movf	??_debounce+1,w
  2759  0A93  3A00               	xorlw	0	; case 0
  2760  0A94  1903               	skipnz
  2761  0A95  2A97               	goto	l3755
  2762  0A96  2A9F               	goto	l3105
  2763  0A97                     l3755:
  2764                           
  2765                           ; Switch size 1, requested type "simple"
  2766                           ; Number of cases is 2, Range of values is 1 to 3
  2767                           ; switch strategies available:
  2768                           ; Name         Instructions Cycles
  2769                           ; simple_byte            7     4 (average)
  2770                           ; direct_byte           20    11 (fixed)
  2771                           ; jumptable            263     9 (fixed)
  2772                           ;	Chosen strategy is simple_byte
  2773  0A97  0872               	movf	??_debounce,w
  2774  0A98  3A01               	xorlw	1	; case 1
  2775  0A99  1903               	skipnz
  2776  0A9A  2A7D               	goto	l105
  2777  0A9B  3A02               	xorlw	2	; case 3
  2778  0A9C  1903               	skipnz
  2779  0A9D  2A88               	goto	l108
  2780  0A9E  2A9F               	goto	l3105
  2781  0A9F                     l3105:
  2782                           
  2783                           ;main ds3231.c: 65:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2784  0A9F  301A               	movlw	26
  2785  0AA0  00F3               	movwf	??_debounce+1
  2786  0AA1  30F8               	movlw	248
  2787  0AA2  00F2               	movwf	??_debounce
  2788  0AA3                     u3687:
  2789  0AA3  0BF2               	decfsz	??_debounce,f
  2790  0AA4  2AA3               	goto	u3687
  2791  0AA5  0BF3               	decfsz	??_debounce+1,f
  2792  0AA6  2AA3               	goto	u3687
  2793  0AA7  0000               	nop
  2794  0AA8                     l3107:
  2795                           
  2796                           ;main ds3231.c: 66:   }
  2797  0AA8  3001               	movlw	1
  2798  0AA9  00FF               	movwf	btemp+1
  2799  0AAA  087F               	movf	btemp+1,w
  2800  0AAB  07F6               	addwf	debounce@i,f
  2801  0AAC                     l3109:
  2802  0AAC  3005               	movlw	5
  2803  0AAD  0276               	subwf	debounce@i,w
  2804  0AAE  1C03               	skipc
  2805  0AAF  2AB1               	goto	u2831
  2806  0AB0  2AB2               	goto	u2830
  2807  0AB1                     u2831:
  2808  0AB1  2A8F               	goto	l3103
  2809  0AB2                     u2830:
  2810  0AB2                     l3111:
  2811                           
  2812                           ;main ds3231.c: 67:   if(count > 2) return 1;
  2813  0AB2  3003               	movlw	3
  2814  0AB3  0275               	subwf	debounce@count,w
  2815  0AB4  1C03               	skipc
  2816  0AB5  2AB7               	goto	u2841
  2817  0AB6  2AB8               	goto	u2840
  2818  0AB7                     u2841:
  2819  0AB7  2ABA               	goto	l3119
  2820  0AB8                     u2840:
  2821  0AB8                     l3113:
  2822  0AB8  1403               	setc
  2823  0AB9  2ABB               	goto	l112
  2824  0ABA                     l3119:
  2825  0ABA  1003               	clrc
  2826  0ABB                     l112:
  2827  0ABB  0008               	return
  2828  0ABC                     __end_of_debounce:
  2829                           
  2830                           	psect	text5
  2831  0A17                     __ptext5:	
  2832 ;; *************** function _blink *****************
  2833 ;; Defined at:
  2834 ;;		line 234 in file "main ds3231.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  j               1    4[COMMON] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, btemp+1
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2848 ;;      Params:         0       0       0       0       0
  2849 ;;      Locals:         1       0       0       0       0
  2850 ;;      Temps:          2       0       0       0       0
  2851 ;;      Totals:         3       0       0       0       0
  2852 ;;Total ram usage:        3 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_edit
  2859 ;;		_on_off
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _blink
  2866  0A17                     _blink:
  2867  0A17                     l3159:	
  2868                           ;incstack = 0
  2869                           ; Regs used in _blink: [wreg+status,2+status,0+btemp+1]
  2870                           
  2871                           
  2872                           ;main ds3231.c: 236:   uint8_t j = 0;
  2873  0A17  01F4               	clrf	blink@j
  2874                           
  2875                           ;main ds3231.c: 237:   while( j < 100 && (RB1 || i >= 5) && RB2 && (RB3 || i < 5) )
  2876  0A18  2A26               	goto	l3165
  2877  0A19                     l3161:
  2878                           
  2879                           ;main ds3231.c: 238:   {;main ds3231.c: 239:     j++;
  2880  0A19  3001               	movlw	1
  2881  0A1A  00FF               	movwf	btemp+1
  2882  0A1B  087F               	movf	btemp+1,w
  2883  0A1C  07F4               	addwf	blink@j,f
  2884  0A1D                     l3163:
  2885                           
  2886                           ;main ds3231.c: 240:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2887  0A1D  300D               	movlw	13
  2888  0A1E  00F3               	movwf	??_blink+1
  2889  0A1F  30FB               	movlw	251
  2890  0A20  00F2               	movwf	??_blink
  2891  0A21                     u3697:
  2892  0A21  0BF2               	decfsz	??_blink,f
  2893  0A22  2A21               	goto	u3697
  2894  0A23  0BF3               	decfsz	??_blink+1,f
  2895  0A24  2A21               	goto	u3697
  2896  0A25  2A26               	nop2
  2897  0A26                     l3165:
  2898                           
  2899                           ;main ds3231.c: 237:   while( j < 100 && (RB1 || i >= 5) && RB2 && (RB3 || i < 5) )
  2900  0A26  3064               	movlw	100
  2901  0A27  0274               	subwf	blink@j,w
  2902  0A28  1803               	skipnc
  2903  0A29  2A2B               	goto	u2851
  2904  0A2A  2A2C               	goto	u2850
  2905  0A2B                     u2851:
  2906  0A2B  2A46               	goto	l166
  2907  0A2C                     u2850:
  2908  0A2C                     l3167:
  2909  0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0A2E  1886               	btfsc	6,1	;volatile
  2912  0A2F  2A31               	goto	u2861
  2913  0A30  2A32               	goto	u2860
  2914  0A31                     u2861:
  2915  0A31  2A38               	goto	l164
  2916  0A32                     u2860:
  2917  0A32                     l3169:
  2918  0A32  3005               	movlw	5
  2919  0A33  027B               	subwf	_i,w
  2920  0A34  1C03               	skipc
  2921  0A35  2A37               	goto	u2871
  2922  0A36  2A38               	goto	u2870
  2923  0A37                     u2871:
  2924  0A37  2A46               	goto	l166
  2925  0A38                     u2870:
  2926  0A38                     l164:
  2927  0A38  1D06               	btfss	6,2	;volatile
  2928  0A39  2A3B               	goto	u2881
  2929  0A3A  2A3C               	goto	u2880
  2930  0A3B                     u2881:
  2931  0A3B  2A46               	goto	l166
  2932  0A3C                     u2880:
  2933  0A3C                     l3171:
  2934  0A3C  1986               	btfsc	6,3	;volatile
  2935  0A3D  2A3F               	goto	u2891
  2936  0A3E  2A40               	goto	u2890
  2937  0A3F                     u2891:
  2938  0A3F  2A19               	goto	l3161
  2939  0A40                     u2890:
  2940  0A40                     l3173:
  2941  0A40  3005               	movlw	5
  2942  0A41  027B               	subwf	_i,w
  2943  0A42  1C03               	skipc
  2944  0A43  2A45               	goto	u2901
  2945  0A44  2A46               	goto	u2900
  2946  0A45                     u2901:
  2947  0A45  2A19               	goto	l3161
  2948  0A46                     u2900:
  2949  0A46                     l166:
  2950  0A46  0008               	return
  2951  0A47                     __end_of_blink:
  2952                           
  2953                           	psect	text6
  2954  0CB7                     __ptext6:	
  2955 ;; *************** function _RTC_read *****************
  2956 ;; Defined at:
  2957 ;;		line 85 in file "main ds3231.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    3
  2978 ;; This function calls:
  2979 ;;		_I2C_ACK
  2980 ;;		_I2C_NACK
  2981 ;;		_I2C_Read_Char
  2982 ;;		_I2C_Restart
  2983 ;;		_I2C_Start
  2984 ;;		_I2C_Stop
  2985 ;;		_I2C_Write_Char
  2986 ;; This function is called by:
  2987 ;;		_edit
  2988 ;;		_on_off
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function _RTC_read
  2995  0CB7                     _RTC_read:
  2996  0CB7                     l3129:	
  2997                           ;incstack = 0
  2998                           ; Regs used in _RTC_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2999                           
  3000                           
  3001                           ;main ds3231.c: 87:   I2C_Start();
  3002  0CB7  120A  158A  20AB  120A  158A  	fcall	_I2C_Start
  3003                           
  3004                           ;main ds3231.c: 88:   I2C_Write_Char(0xD0);
  3005  0CBC  30D0               	movlw	208
  3006  0CBD  120A  158A  2109  120A  158A  	fcall	_I2C_Write_Char
  3007                           
  3008                           ;main ds3231.c: 89:   I2C_Write_Char(0);
  3009  0CC2  3000               	movlw	0
  3010  0CC3  120A  158A  2109  120A  158A  	fcall	_I2C_Write_Char
  3011                           
  3012                           ;main ds3231.c: 90:   I2C_Restart();
  3013  0CC8  120A  158A  20A2  120A  158A  	fcall	_I2C_Restart
  3014                           
  3015                           ;main ds3231.c: 91:   I2C_Write_Char(0xD1);
  3016  0CCD  30D1               	movlw	209
  3017  0CCE  120A  158A  2109  120A  158A  	fcall	_I2C_Write_Char
  3018  0CD3                     l3131:
  3019                           
  3020                           ;main ds3231.c: 92:   second = I2C_Read_Char(); I2C_ACK();
  3021  0CD3  120A  158A  20BD  120A  158A  	fcall	_I2C_Read_Char
  3022  0CD8  00FF               	movwf	btemp+1
  3023  0CD9  087F               	movf	btemp+1,w
  3024  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0CDC  00E9               	movwf	_second
  3027  0CDD                     l3133:
  3028  0CDD  120A  158A  20C8  120A  158A  	fcall	_I2C_ACK
  3029                           
  3030                           ;main ds3231.c: 93:   minute = I2C_Read_Char(); I2C_ACK();
  3031  0CE2  120A  158A  20BD  120A  158A  	fcall	_I2C_Read_Char
  3032  0CE7  00FF               	movwf	btemp+1
  3033  0CE8  087F               	movf	btemp+1,w
  3034  0CE9  00FA               	movwf	_minute
  3035  0CEA                     l3135:
  3036  0CEA  120A  158A  20C8  120A  158A  	fcall	_I2C_ACK
  3037  0CEF                     l3137:
  3038                           
  3039                           ;main ds3231.c: 94:   hour = I2C_Read_Char(); I2C_ACK();
  3040  0CEF  120A  158A  20BD  120A  158A  	fcall	_I2C_Read_Char
  3041  0CF4  00FF               	movwf	btemp+1
  3042  0CF5  087F               	movf	btemp+1,w
  3043  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0CF8  00E8               	movwf	_hour
  3046  0CF9  120A  158A  20C8  120A  158A  	fcall	_I2C_ACK
  3047  0CFE                     l3139:
  3048                           
  3049                           ;main ds3231.c: 95:   w_day = I2C_Read_Char(); I2C_ACK();
  3050  0CFE  120A  158A  20BD  120A  158A  	fcall	_I2C_Read_Char
  3051  0D03  00FF               	movwf	btemp+1
  3052  0D04  087F               	movf	btemp+1,w
  3053  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0D07  00E7               	movwf	_w_day
  3056  0D08                     l3141:
  3057  0D08  120A  158A  20C8  120A  158A  	fcall	_I2C_ACK
  3058                           
  3059                           ;main ds3231.c: 96:   m_day = I2C_Read_Char(); I2C_ACK();
  3060  0D0D  120A  158A  20BD  120A  158A  	fcall	_I2C_Read_Char
  3061  0D12  00FF               	movwf	btemp+1
  3062  0D13  087F               	movf	btemp+1,w
  3063  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0D16  00E6               	movwf	_m_day
  3066  0D17                     l3143:
  3067  0D17  120A  158A  20C8  120A  158A  	fcall	_I2C_ACK
  3068  0D1C                     l3145:
  3069                           
  3070                           ;main ds3231.c: 97:   month = I2C_Read_Char(); I2C_ACK();
  3071  0D1C  120A  158A  20BD  120A  158A  	fcall	_I2C_Read_Char
  3072  0D21  00FF               	movwf	btemp+1
  3073  0D22  087F               	movf	btemp+1,w
  3074  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0D25  00E5               	movwf	_month
  3077  0D26  120A  158A  20C8  120A  158A  	fcall	_I2C_ACK
  3078  0D2B                     l3147:
  3079                           
  3080                           ;main ds3231.c: 98:   year = I2C_Read_Char(); I2C_NACK();
  3081  0D2B  120A  158A  20BD  120A  158A  	fcall	_I2C_Read_Char
  3082  0D30  00FF               	movwf	btemp+1
  3083  0D31  087F               	movf	btemp+1,w
  3084  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0D34  00E4               	movwf	_year
  3087  0D35                     l3149:
  3088  0D35  120A  158A  20D4  120A  158A  	fcall	_I2C_NACK
  3089  0D3A                     l3151:
  3090                           
  3091                           ;main ds3231.c: 99:   I2C_Stop();
  3092  0D3A  120A  158A  20B4  120A  158A  	fcall	_I2C_Stop
  3093  0D3F                     l122:
  3094  0D3F  0008               	return
  3095  0D40                     __end_of_RTC_read:
  3096                           
  3097                           	psect	text7
  3098  0631                     __ptext7:	
  3099 ;; *************** function _RTC_display *****************
  3100 ;; Defined at:
  3101 ;;		line 200 in file "main ds3231.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0
  3117 ;;      Temps:          0       2       0       0       0
  3118 ;;      Totals:         0       2       0       0       0
  3119 ;;Total ram usage:        2 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    5
  3122 ;; This function calls:
  3123 ;;		_LCD_Set_Cursor
  3124 ;;		_LCD_Write_String
  3125 ;;		___awdiv
  3126 ;;		___awmod
  3127 ;;		_bcd_to_decimal
  3128 ;;		_w_day_display
  3129 ;; This function is called by:
  3130 ;;		_edit
  3131 ;;		_on_off
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _RTC_display
  3138  0631                     _RTC_display:
  3139  0631                     l3153:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3142                           
  3143                           
  3144                           ;main ds3231.c: 203:   second = bcd_to_decimal(second);
  3145  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0633  0869               	movf	_second,w
  3148  0634  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3149  0639  00FF               	movwf	btemp+1
  3150  063A  087F               	movf	btemp+1,w
  3151  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3152  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3153  063D  00E9               	movwf	_second
  3154                           
  3155                           ;main ds3231.c: 204:   minute = bcd_to_decimal(minute);
  3156  063E  087A               	movf	_minute,w
  3157  063F  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3158  0644  00FF               	movwf	btemp+1
  3159  0645  087F               	movf	btemp+1,w
  3160  0646  00FA               	movwf	_minute
  3161                           
  3162                           ;main ds3231.c: 205:   hour = bcd_to_decimal(hour);
  3163  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0649  0868               	movf	_hour,w
  3166  064A  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3167  064F  00FF               	movwf	btemp+1
  3168  0650  087F               	movf	btemp+1,w
  3169  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0653  00E8               	movwf	_hour
  3172                           
  3173                           ;main ds3231.c: 206:   m_day = bcd_to_decimal(m_day);
  3174  0654  0866               	movf	_m_day,w
  3175  0655  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3176  065A  00FF               	movwf	btemp+1
  3177  065B  087F               	movf	btemp+1,w
  3178  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3179  065D  1303               	bcf	3,6	;RP1=0, select bank0
  3180  065E  00E6               	movwf	_m_day
  3181                           
  3182                           ;main ds3231.c: 207:   month = bcd_to_decimal(month);
  3183  065F  0865               	movf	_month,w
  3184  0660  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3185  0665  00FF               	movwf	btemp+1
  3186  0666  087F               	movf	btemp+1,w
  3187  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0669  00E5               	movwf	_month
  3190                           
  3191                           ;main ds3231.c: 208:   year = bcd_to_decimal(year);
  3192  066A  0864               	movf	_year,w
  3193  066B  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3194  0670  00FF               	movwf	btemp+1
  3195  0671  087F               	movf	btemp+1,w
  3196  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0674  00E4               	movwf	_year
  3199                           
  3200                           ;main ds3231.c: 211:   Time[7] = second % 10 + '0';
  3201  0675  300A               	movlw	10
  3202  0676  00F2               	movwf	___awmod@divisor
  3203  0677  3000               	movlw	0
  3204  0678  00F3               	movwf	___awmod@divisor+1
  3205  0679  0869               	movf	_second,w
  3206  067A  00D2               	movwf	??_RTC_display
  3207  067B  01D3               	clrf	??_RTC_display+1
  3208  067C  0852               	movf	??_RTC_display,w
  3209  067D  00F4               	movwf	___awmod@dividend
  3210  067E  0853               	movf	??_RTC_display+1,w
  3211  067F  00F5               	movwf	___awmod@dividend+1
  3212  0680  120A  158A  22BC  120A  118A  	fcall	___awmod
  3213  0685  0872               	movf	?___awmod,w
  3214  0686  3E30               	addlw	48
  3215  0687  00FF               	movwf	btemp+1
  3216  0688  087F               	movf	btemp+1,w
  3217  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3218  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3219  068B  00CA               	movwf	_Time+7
  3220                           
  3221                           ;main ds3231.c: 212:   Time[6] = second / 10 + '0';
  3222  068C  300A               	movlw	10
  3223  068D  00F2               	movwf	___awdiv@divisor
  3224  068E  3000               	movlw	0
  3225  068F  00F3               	movwf	___awdiv@divisor+1
  3226  0690  0869               	movf	_second,w
  3227  0691  00D2               	movwf	??_RTC_display
  3228  0692  01D3               	clrf	??_RTC_display+1
  3229  0693  0852               	movf	??_RTC_display,w
  3230  0694  00F4               	movwf	___awdiv@dividend
  3231  0695  0853               	movf	??_RTC_display+1,w
  3232  0696  00F5               	movwf	___awdiv@dividend+1
  3233  0697  120A  158A  237A  120A  118A  	fcall	___awdiv
  3234  069C  0872               	movf	?___awdiv,w
  3235  069D  3E30               	addlw	48
  3236  069E  00FF               	movwf	btemp+1
  3237  069F  087F               	movf	btemp+1,w
  3238  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3239  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3240  06A2  00C9               	movwf	_Time+6
  3241                           
  3242                           ;main ds3231.c: 213:   Time[4] = minute % 10 + '0';
  3243  06A3  300A               	movlw	10
  3244  06A4  00F2               	movwf	___awmod@divisor
  3245  06A5  3000               	movlw	0
  3246  06A6  00F3               	movwf	___awmod@divisor+1
  3247  06A7  087A               	movf	_minute,w
  3248  06A8  00D2               	movwf	??_RTC_display
  3249  06A9  01D3               	clrf	??_RTC_display+1
  3250  06AA  0852               	movf	??_RTC_display,w
  3251  06AB  00F4               	movwf	___awmod@dividend
  3252  06AC  0853               	movf	??_RTC_display+1,w
  3253  06AD  00F5               	movwf	___awmod@dividend+1
  3254  06AE  120A  158A  22BC  120A  118A  	fcall	___awmod
  3255  06B3  0872               	movf	?___awmod,w
  3256  06B4  3E30               	addlw	48
  3257  06B5  00FF               	movwf	btemp+1
  3258  06B6  087F               	movf	btemp+1,w
  3259  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3260  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3261  06B9  00C7               	movwf	_Time+4
  3262                           
  3263                           ;main ds3231.c: 214:   Time[3] = minute / 10 + '0';
  3264  06BA  300A               	movlw	10
  3265  06BB  00F2               	movwf	___awdiv@divisor
  3266  06BC  3000               	movlw	0
  3267  06BD  00F3               	movwf	___awdiv@divisor+1
  3268  06BE  087A               	movf	_minute,w
  3269  06BF  00D2               	movwf	??_RTC_display
  3270  06C0  01D3               	clrf	??_RTC_display+1
  3271  06C1  0852               	movf	??_RTC_display,w
  3272  06C2  00F4               	movwf	___awdiv@dividend
  3273  06C3  0853               	movf	??_RTC_display+1,w
  3274  06C4  00F5               	movwf	___awdiv@dividend+1
  3275  06C5  120A  158A  237A  120A  118A  	fcall	___awdiv
  3276  06CA  0872               	movf	?___awdiv,w
  3277  06CB  3E30               	addlw	48
  3278  06CC  00FF               	movwf	btemp+1
  3279  06CD  087F               	movf	btemp+1,w
  3280  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3281  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3282  06D0  00C6               	movwf	_Time+3
  3283                           
  3284                           ;main ds3231.c: 215:   Time[1] = hour % 10 + '0';
  3285  06D1  300A               	movlw	10
  3286  06D2  00F2               	movwf	___awmod@divisor
  3287  06D3  3000               	movlw	0
  3288  06D4  00F3               	movwf	___awmod@divisor+1
  3289  06D5  0868               	movf	_hour,w
  3290  06D6  00D2               	movwf	??_RTC_display
  3291  06D7  01D3               	clrf	??_RTC_display+1
  3292  06D8  0852               	movf	??_RTC_display,w
  3293  06D9  00F4               	movwf	___awmod@dividend
  3294  06DA  0853               	movf	??_RTC_display+1,w
  3295  06DB  00F5               	movwf	___awmod@dividend+1
  3296  06DC  120A  158A  22BC  120A  118A  	fcall	___awmod
  3297  06E1  0872               	movf	?___awmod,w
  3298  06E2  3E30               	addlw	48
  3299  06E3  00FF               	movwf	btemp+1
  3300  06E4  087F               	movf	btemp+1,w
  3301  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3302  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  3303  06E7  00C4               	movwf	_Time+1
  3304                           
  3305                           ;main ds3231.c: 216:   Time[0] = hour / 10 + '0';
  3306  06E8  300A               	movlw	10
  3307  06E9  00F2               	movwf	___awdiv@divisor
  3308  06EA  3000               	movlw	0
  3309  06EB  00F3               	movwf	___awdiv@divisor+1
  3310  06EC  0868               	movf	_hour,w
  3311  06ED  00D2               	movwf	??_RTC_display
  3312  06EE  01D3               	clrf	??_RTC_display+1
  3313  06EF  0852               	movf	??_RTC_display,w
  3314  06F0  00F4               	movwf	___awdiv@dividend
  3315  06F1  0853               	movf	??_RTC_display+1,w
  3316  06F2  00F5               	movwf	___awdiv@dividend+1
  3317  06F3  120A  158A  237A  120A  118A  	fcall	___awdiv
  3318  06F8  0872               	movf	?___awdiv,w
  3319  06F9  3E30               	addlw	48
  3320  06FA  00FF               	movwf	btemp+1
  3321  06FB  087F               	movf	btemp+1,w
  3322  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3323  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3324  06FE  00C3               	movwf	_Time
  3325                           
  3326                           ;main ds3231.c: 218:   Date[9] = year % 10 + '0';
  3327  06FF  300A               	movlw	10
  3328  0700  00F2               	movwf	___awmod@divisor
  3329  0701  3000               	movlw	0
  3330  0702  00F3               	movwf	___awmod@divisor+1
  3331  0703  0864               	movf	_year,w
  3332  0704  00D2               	movwf	??_RTC_display
  3333  0705  01D3               	clrf	??_RTC_display+1
  3334  0706  0852               	movf	??_RTC_display,w
  3335  0707  00F4               	movwf	___awmod@dividend
  3336  0708  0853               	movf	??_RTC_display+1,w
  3337  0709  00F5               	movwf	___awmod@dividend+1
  3338  070A  120A  158A  22BC  120A  118A  	fcall	___awmod
  3339  070F  0872               	movf	?___awmod,w
  3340  0710  3E30               	addlw	48
  3341  0711  00FF               	movwf	btemp+1
  3342  0712  087F               	movf	btemp+1,w
  3343  0713  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0714  1303               	bcf	3,6	;RP1=0, select bank0
  3345  0715  00C1               	movwf	_Date+9
  3346                           
  3347                           ;main ds3231.c: 219:   Date[8] = year / 10 + '0';
  3348  0716  300A               	movlw	10
  3349  0717  00F2               	movwf	___awdiv@divisor
  3350  0718  3000               	movlw	0
  3351  0719  00F3               	movwf	___awdiv@divisor+1
  3352  071A  0864               	movf	_year,w
  3353  071B  00D2               	movwf	??_RTC_display
  3354  071C  01D3               	clrf	??_RTC_display+1
  3355  071D  0852               	movf	??_RTC_display,w
  3356  071E  00F4               	movwf	___awdiv@dividend
  3357  071F  0853               	movf	??_RTC_display+1,w
  3358  0720  00F5               	movwf	___awdiv@dividend+1
  3359  0721  120A  158A  237A  120A  118A  	fcall	___awdiv
  3360  0726  0872               	movf	?___awdiv,w
  3361  0727  3E30               	addlw	48
  3362  0728  00FF               	movwf	btemp+1
  3363  0729  087F               	movf	btemp+1,w
  3364  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3365  072B  1303               	bcf	3,6	;RP1=0, select bank0
  3366  072C  00C0               	movwf	_Date+8
  3367                           
  3368                           ;main ds3231.c: 220:   Date[4] = month % 10 + '0';
  3369  072D  300A               	movlw	10
  3370  072E  00F2               	movwf	___awmod@divisor
  3371  072F  3000               	movlw	0
  3372  0730  00F3               	movwf	___awmod@divisor+1
  3373  0731  0865               	movf	_month,w
  3374  0732  00D2               	movwf	??_RTC_display
  3375  0733  01D3               	clrf	??_RTC_display+1
  3376  0734  0852               	movf	??_RTC_display,w
  3377  0735  00F4               	movwf	___awmod@dividend
  3378  0736  0853               	movf	??_RTC_display+1,w
  3379  0737  00F5               	movwf	___awmod@dividend+1
  3380  0738  120A  158A  22BC  120A  118A  	fcall	___awmod
  3381  073D  0872               	movf	?___awmod,w
  3382  073E  3E30               	addlw	48
  3383  073F  00FF               	movwf	btemp+1
  3384  0740  087F               	movf	btemp+1,w
  3385  0741  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0742  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0743  00BC               	movwf	_Date+4
  3388                           
  3389                           ;main ds3231.c: 221:   Date[3] = month / 10 + '0';
  3390  0744  300A               	movlw	10
  3391  0745  00F2               	movwf	___awdiv@divisor
  3392  0746  3000               	movlw	0
  3393  0747  00F3               	movwf	___awdiv@divisor+1
  3394  0748  0865               	movf	_month,w
  3395  0749  00D2               	movwf	??_RTC_display
  3396  074A  01D3               	clrf	??_RTC_display+1
  3397  074B  0852               	movf	??_RTC_display,w
  3398  074C  00F4               	movwf	___awdiv@dividend
  3399  074D  0853               	movf	??_RTC_display+1,w
  3400  074E  00F5               	movwf	___awdiv@dividend+1
  3401  074F  120A  158A  237A  120A  118A  	fcall	___awdiv
  3402  0754  0872               	movf	?___awdiv,w
  3403  0755  3E30               	addlw	48
  3404  0756  00FF               	movwf	btemp+1
  3405  0757  087F               	movf	btemp+1,w
  3406  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3408  075A  00BB               	movwf	_Date+3
  3409                           
  3410                           ;main ds3231.c: 222:   Date[1] = m_day % 10 + '0';
  3411  075B  300A               	movlw	10
  3412  075C  00F2               	movwf	___awmod@divisor
  3413  075D  3000               	movlw	0
  3414  075E  00F3               	movwf	___awmod@divisor+1
  3415  075F  0866               	movf	_m_day,w
  3416  0760  00D2               	movwf	??_RTC_display
  3417  0761  01D3               	clrf	??_RTC_display+1
  3418  0762  0852               	movf	??_RTC_display,w
  3419  0763  00F4               	movwf	___awmod@dividend
  3420  0764  0853               	movf	??_RTC_display+1,w
  3421  0765  00F5               	movwf	___awmod@dividend+1
  3422  0766  120A  158A  22BC  120A  118A  	fcall	___awmod
  3423  076B  0872               	movf	?___awmod,w
  3424  076C  3E30               	addlw	48
  3425  076D  00FF               	movwf	btemp+1
  3426  076E  087F               	movf	btemp+1,w
  3427  076F  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0770  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0771  00B9               	movwf	_Date+1
  3430                           
  3431                           ;main ds3231.c: 223:   Date[0] = m_day / 10 + '0';
  3432  0772  300A               	movlw	10
  3433  0773  00F2               	movwf	___awdiv@divisor
  3434  0774  3000               	movlw	0
  3435  0775  00F3               	movwf	___awdiv@divisor+1
  3436  0776  0866               	movf	_m_day,w
  3437  0777  00D2               	movwf	??_RTC_display
  3438  0778  01D3               	clrf	??_RTC_display+1
  3439  0779  0852               	movf	??_RTC_display,w
  3440  077A  00F4               	movwf	___awdiv@dividend
  3441  077B  0853               	movf	??_RTC_display+1,w
  3442  077C  00F5               	movwf	___awdiv@dividend+1
  3443  077D  120A  158A  237A  120A  118A  	fcall	___awdiv
  3444  0782  0872               	movf	?___awdiv,w
  3445  0783  3E30               	addlw	48
  3446  0784  00FF               	movwf	btemp+1
  3447  0785  087F               	movf	btemp+1,w
  3448  0786  1283               	bcf	3,5	;RP0=0, select bank0
  3449  0787  1303               	bcf	3,6	;RP1=0, select bank0
  3450  0788  00B8               	movwf	_Date
  3451                           
  3452                           ;main ds3231.c: 225:   LCD_Set_Cursor(1, 1);
  3453  0789  01F5               	clrf	LCD_Set_Cursor@column
  3454  078A  0AF5               	incf	LCD_Set_Cursor@column,f
  3455  078B  3001               	movlw	1
  3456  078C  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  3457  0791                     l3155:
  3458                           
  3459                           ;main ds3231.c: 226:   LCD_Write_String(Time);
  3460  0791  3043               	movlw	(low (_Time| 0))& (0+255)
  3461  0792  00F7               	movwf	LCD_Write_String@str
  3462  0793  3000               	movlw	0
  3463  0794  00F8               	movwf	LCD_Write_String@str+1
  3464  0795  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  3465  079A                     l3157:
  3466                           
  3467                           ;main ds3231.c: 227:   LCD_Set_Cursor(2, 5);
  3468  079A  3005               	movlw	5
  3469  079B  00FF               	movwf	btemp+1
  3470  079C  087F               	movf	btemp+1,w
  3471  079D  00F5               	movwf	LCD_Set_Cursor@column
  3472  079E  3002               	movlw	2
  3473  079F  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  3474                           
  3475                           ;main ds3231.c: 228:   LCD_Write_String(Date);
  3476  07A4  3038               	movlw	(low (_Date| 0))& (0+255)
  3477  07A5  00F7               	movwf	LCD_Write_String@str
  3478  07A6  3000               	movlw	0
  3479  07A7  00F8               	movwf	LCD_Write_String@str+1
  3480  07A8  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  3481                           
  3482                           ;main ds3231.c: 229:   w_day_display();
  3483  07AD  120A  158A  2449  120A  118A  	fcall	_w_day_display
  3484  07B2                     l156:
  3485  07B2  0008               	return
  3486  07B3                     __end_of_RTC_display:
  3487                           
  3488                           	psect	text8
  3489  0C49                     __ptext8:	
  3490 ;; *************** function _w_day_display *****************
  3491 ;; Defined at:
  3492 ;;		line 184 in file "main ds3231.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0
  3508 ;;      Temps:          0       2       0       0       0
  3509 ;;      Totals:         0       2       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    4
  3513 ;; This function calls:
  3514 ;;		_LCD_Set_Cursor
  3515 ;;		_LCD_Write_String
  3516 ;; This function is called by:
  3517 ;;		_RTC_display
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function _w_day_display
  3524  0C49                     _w_day_display:
  3525  0C49                     l2987:	
  3526                           ;incstack = 0
  3527                           ; Regs used in _w_day_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3528                           
  3529                           
  3530                           ;main ds3231.c: 186:   LCD_Set_Cursor(2, 1);
  3531  0C49  01F5               	clrf	LCD_Set_Cursor@column
  3532  0C4A  0AF5               	incf	LCD_Set_Cursor@column,f
  3533  0C4B  3002               	movlw	2
  3534  0C4C  120A  158A  2540  120A  158A  	fcall	_LCD_Set_Cursor
  3535                           
  3536                           ;main ds3231.c: 187:   switch(w_day)
  3537  0C51  2C98               	goto	l3003
  3538  0C52                     l2989:
  3539  0C52  301D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3540  0C53  00F7               	movwf	LCD_Write_String@str
  3541  0C54  3080               	movlw	128
  3542  0C55  00F8               	movwf	LCD_Write_String@str+1
  3543  0C56  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  3544  0C5B  2CB6               	goto	l153
  3545  0C5C                     l2991:
  3546  0C5C  3019               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3547  0C5D  00F7               	movwf	LCD_Write_String@str
  3548  0C5E  3080               	movlw	128
  3549  0C5F  00F8               	movwf	LCD_Write_String@str+1
  3550  0C60  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  3551  0C65  2CB6               	goto	l153
  3552  0C66                     l2993:
  3553  0C66  3011               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3554  0C67  00F7               	movwf	LCD_Write_String@str
  3555  0C68  3080               	movlw	128
  3556  0C69  00F8               	movwf	LCD_Write_String@str+1
  3557  0C6A  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  3558  0C6F  2CB6               	goto	l153
  3559  0C70                     l2995:
  3560  0C70  300D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3561  0C71  00F7               	movwf	LCD_Write_String@str
  3562  0C72  3080               	movlw	128
  3563  0C73  00F8               	movwf	LCD_Write_String@str+1
  3564  0C74  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  3565  0C79  2CB6               	goto	l153
  3566  0C7A                     l2997:
  3567  0C7A  3025               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  3568  0C7B  00F7               	movwf	LCD_Write_String@str
  3569  0C7C  3080               	movlw	128
  3570  0C7D  00F8               	movwf	LCD_Write_String@str+1
  3571  0C7E  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  3572  0C83  2CB6               	goto	l153
  3573  0C84                     l2999:
  3574  0C84  3015               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3575  0C85  00F7               	movwf	LCD_Write_String@str
  3576  0C86  3080               	movlw	128
  3577  0C87  00F8               	movwf	LCD_Write_String@str+1
  3578  0C88  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  3579  0C8D  2CB6               	goto	l153
  3580  0C8E                     l3001:
  3581  0C8E  3021               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3582  0C8F  00F7               	movwf	LCD_Write_String@str
  3583  0C90  3080               	movlw	128
  3584  0C91  00F8               	movwf	LCD_Write_String@str+1
  3585  0C92  120A  158A  21E7  120A  158A  	fcall	_LCD_Write_String
  3586                           
  3587                           ;main ds3231.c: 196:   }
  3588  0C97  2CB6               	goto	l153
  3589  0C98                     l3003:
  3590  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0C9A  0867               	movf	_w_day,w
  3593  0C9B  00D0               	movwf	??_w_day_display
  3594  0C9C  01D1               	clrf	??_w_day_display+1
  3595                           
  3596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3597                           ; Switch size 1, requested type "simple"
  3598                           ; Number of cases is 1, Range of values is 0 to 0
  3599                           ; switch strategies available:
  3600                           ; Name         Instructions Cycles
  3601                           ; simple_byte            4     3 (average)
  3602                           ; direct_byte           11     8 (fixed)
  3603                           ; jumptable            260     6 (fixed)
  3604                           ;	Chosen strategy is simple_byte
  3605  0C9D  0851               	movf	??_w_day_display+1,w
  3606  0C9E  3A00               	xorlw	0	; case 0
  3607  0C9F  1903               	skipnz
  3608  0CA0  2CA2               	goto	l3757
  3609  0CA1  2C8E               	goto	l3001
  3610  0CA2                     l3757:
  3611                           
  3612                           ; Switch size 1, requested type "simple"
  3613                           ; Number of cases is 6, Range of values is 1 to 6
  3614                           ; switch strategies available:
  3615                           ; Name         Instructions Cycles
  3616                           ; simple_byte           19    10 (average)
  3617                           ; direct_byte           29    11 (fixed)
  3618                           ; jumptable            263     9 (fixed)
  3619                           ;	Chosen strategy is simple_byte
  3620  0CA2  0850               	movf	??_w_day_display,w
  3621  0CA3  3A01               	xorlw	1	; case 1
  3622  0CA4  1903               	skipnz
  3623  0CA5  2C52               	goto	l2989
  3624  0CA6  3A03               	xorlw	3	; case 2
  3625  0CA7  1903               	skipnz
  3626  0CA8  2C5C               	goto	l2991
  3627  0CA9  3A01               	xorlw	1	; case 3
  3628  0CAA  1903               	skipnz
  3629  0CAB  2C66               	goto	l2993
  3630  0CAC  3A07               	xorlw	7	; case 4
  3631  0CAD  1903               	skipnz
  3632  0CAE  2C70               	goto	l2995
  3633  0CAF  3A01               	xorlw	1	; case 5
  3634  0CB0  1903               	skipnz
  3635  0CB1  2C7A               	goto	l2997
  3636  0CB2  3A03               	xorlw	3	; case 6
  3637  0CB3  1903               	skipnz
  3638  0CB4  2C84               	goto	l2999
  3639  0CB5  2C8E               	goto	l3001
  3640  0CB6                     l153:
  3641  0CB6  0008               	return
  3642  0CB7                     __end_of_w_day_display:
  3643                           
  3644                           	psect	text9
  3645  0A47                     __ptext9:	
  3646 ;; *************** function _decimal_to_bcd *****************
  3647 ;; Defined at:
  3648 ;;		line 80 in file "main ds3231.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  number          1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  number          1    5[BANK0 ] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      unsigned char 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         0       0       0       0       0
  3663 ;;      Locals:         0       1       0       0       0
  3664 ;;      Temps:          0       5       0       0       0
  3665 ;;      Totals:         0       6       0       0       0
  3666 ;;Total ram usage:        6 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    2
  3669 ;; This function calls:
  3670 ;;		___awdiv
  3671 ;;		___awmod
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _decimal_to_bcd
  3679  0A47                     _decimal_to_bcd:
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3683                           ;decimal_to_bcd@number stored from wreg
  3684  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0A49  00D1               	movwf	decimal_to_bcd@number
  3687  0A4A                     l3201:
  3688                           
  3689                           ;main ds3231.c: 80: uint8_t decimal_to_bcd(uint8_t number);main ds3231.c: 81: {;main ds3
      +                          231.c: 82:   return(((number / 10) << 4) + (number % 10));
  3690  0A4A  300A               	movlw	10
  3691  0A4B  00F2               	movwf	___awdiv@divisor
  3692  0A4C  3000               	movlw	0
  3693  0A4D  00F3               	movwf	___awdiv@divisor+1
  3694  0A4E  0851               	movf	decimal_to_bcd@number,w
  3695  0A4F  00CC               	movwf	??_decimal_to_bcd
  3696  0A50  01CD               	clrf	??_decimal_to_bcd+1
  3697  0A51  084C               	movf	??_decimal_to_bcd,w
  3698  0A52  00F4               	movwf	___awdiv@dividend
  3699  0A53  084D               	movf	??_decimal_to_bcd+1,w
  3700  0A54  00F5               	movwf	___awdiv@dividend+1
  3701  0A55  120A  158A  237A  120A  158A  	fcall	___awdiv
  3702  0A5A  0872               	movf	?___awdiv,w
  3703  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  3705  0A5D  00CE               	movwf	??_decimal_to_bcd+2
  3706  0A5E  3004               	movlw	4
  3707  0A5F                     u2985:
  3708  0A5F  1003               	clrc
  3709  0A60  0DCE               	rlf	??_decimal_to_bcd+2,f
  3710  0A61  3EFF               	addlw	-1
  3711  0A62  1D03               	skipz
  3712  0A63  2A5F               	goto	u2985
  3713  0A64  300A               	movlw	10
  3714  0A65  00F2               	movwf	___awmod@divisor
  3715  0A66  3000               	movlw	0
  3716  0A67  00F3               	movwf	___awmod@divisor+1
  3717  0A68  0851               	movf	decimal_to_bcd@number,w
  3718  0A69  00CF               	movwf	??_decimal_to_bcd+3
  3719  0A6A  01D0               	clrf	??_decimal_to_bcd+4
  3720  0A6B  084F               	movf	??_decimal_to_bcd+3,w
  3721  0A6C  00F4               	movwf	___awmod@dividend
  3722  0A6D  0850               	movf	??_decimal_to_bcd+4,w
  3723  0A6E  00F5               	movwf	___awmod@dividend+1
  3724  0A6F  120A  158A  22BC  120A  158A  	fcall	___awmod
  3725  0A74  0872               	movf	?___awmod,w
  3726  0A75  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0A76  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0A77  074E               	addwf	??_decimal_to_bcd+2,w
  3729  0A78                     l119:
  3730  0A78  0008               	return
  3731  0A79                     __end_of_decimal_to_bcd:
  3732                           
  3733                           	psect	text10
  3734  0364                     __ptext10:	
  3735 ;; *************** function _alarms_read_display *****************
  3736 ;; Defined at:
  3737 ;;		line 102 in file "main ds3231.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  temperature_    1    8[BANK0 ] unsigned char 
  3742 ;;  temperature_    1    7[BANK0 ] char 
  3743 ;;  control_reg     1    6[BANK0 ] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         0       0       0       0       0
  3754 ;;      Locals:         0       3       0       0       0
  3755 ;;      Temps:          0       2       0       0       0
  3756 ;;      Totals:         0       5       0       0       0
  3757 ;;Total ram usage:        5 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    4
  3760 ;; This function calls:
  3761 ;;		_I2C_ACK
  3762 ;;		_I2C_NACK
  3763 ;;		_I2C_Read_Char
  3764 ;;		_I2C_Restart
  3765 ;;		_I2C_Start
  3766 ;;		_I2C_Stop
  3767 ;;		_I2C_Write_Char
  3768 ;;		_LCD_Set_Cursor
  3769 ;;		_LCD_Write_String
  3770 ;;		___awdiv
  3771 ;;		___awmod
  3772 ;;		___bmul
  3773 ;;		_bcd_to_decimal
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           
  3780                           ;psect for function _alarms_read_display
  3781  0364                     _alarms_read_display:
  3782  0364                     l3205:	
  3783                           ;incstack = 0
  3784                           ; Regs used in _alarms_read_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3785                           
  3786                           
  3787                           ;main ds3231.c: 104:   uint8_t control_reg, temperature_lsb;;main ds3231.c: 105:   int8_
      +                          t temperature_msb;;main ds3231.c: 106:   I2C_Start();
  3788  0364  120A  158A  20AB  120A  118A  	fcall	_I2C_Start
  3789                           
  3790                           ;main ds3231.c: 107:   I2C_Write_Char(0xD0);
  3791  0369  30D0               	movlw	208
  3792  036A  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  3793                           
  3794                           ;main ds3231.c: 108:   I2C_Write_Char(0x08);
  3795  036F  3008               	movlw	8
  3796  0370  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  3797                           
  3798                           ;main ds3231.c: 109:   I2C_Restart();
  3799  0375  120A  158A  20A2  120A  118A  	fcall	_I2C_Restart
  3800                           
  3801                           ;main ds3231.c: 110:   I2C_Write_Char(0xD1);
  3802  037A  30D1               	movlw	209
  3803  037B  120A  158A  2109  120A  118A  	fcall	_I2C_Write_Char
  3804  0380                     l3207:
  3805                           
  3806                           ;main ds3231.c: 111:   alarm1_minute = I2C_Read_Char(); I2C_ACK();
  3807  0380  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3808  0385  00FF               	movwf	btemp+1
  3809  0386  087F               	movf	btemp+1,w
  3810  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3811  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3812  0389  00E3               	movwf	_alarm1_minute
  3813  038A                     l3209:
  3814  038A  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3815                           
  3816                           ;main ds3231.c: 112:   alarm1_hour = I2C_Read_Char(); I2C_ACK();
  3817  038F  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3818  0394  00FF               	movwf	btemp+1
  3819  0395  087F               	movf	btemp+1,w
  3820  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0398  00E2               	movwf	_alarm1_hour
  3823  0399                     l3211:
  3824  0399  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3825  039E                     l3213:
  3826                           
  3827                           ;main ds3231.c: 113:   I2C_Read_Char(); I2C_ACK();
  3828  039E  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3829  03A3                     l3215:
  3830  03A3  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3831  03A8                     l3217:
  3832                           
  3833                           ;main ds3231.c: 114:   alarm2_minute = I2C_Read_Char(); I2C_ACK();
  3834  03A8  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3835  03AD  00FF               	movwf	btemp+1
  3836  03AE  087F               	movf	btemp+1,w
  3837  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3838  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3839  03B1  00E1               	movwf	_alarm2_minute
  3840  03B2  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3841  03B7                     l3219:
  3842                           
  3843                           ;main ds3231.c: 115:   alarm2_hour = I2C_Read_Char(); I2C_ACK();
  3844  03B7  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3845  03BC  00FF               	movwf	btemp+1
  3846  03BD  087F               	movf	btemp+1,w
  3847  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3848  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3849  03C0  00E0               	movwf	_alarm2_hour
  3850  03C1                     l3221:
  3851  03C1  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3852  03C6                     l3223:
  3853                           
  3854                           ;main ds3231.c: 116:   I2C_Read_Char(); I2C_ACK();
  3855  03C6  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3856  03CB                     l3225:
  3857  03CB  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3858                           
  3859                           ;main ds3231.c: 117:   control_reg = I2C_Read_Char(); I2C_ACK();
  3860  03D0  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3861  03D5  00FF               	movwf	btemp+1
  3862  03D6  087F               	movf	btemp+1,w
  3863  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3864  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3865  03D9  00D2               	movwf	alarms_read_display@control_reg
  3866  03DA                     l3227:
  3867  03DA  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3868  03DF                     l3229:
  3869                           
  3870                           ;main ds3231.c: 118:   status_reg = I2C_Read_Char(); I2C_ACK();
  3871  03DF  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3872  03E4  00FF               	movwf	btemp+1
  3873  03E5  087F               	movf	btemp+1,w
  3874  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3875  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3876  03E8  00DF               	movwf	_status_reg
  3877  03E9  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3878                           
  3879                           ;main ds3231.c: 119:   I2C_Read_Char(); I2C_ACK();
  3880  03EE  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3881  03F3  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3882  03F8                     l3231:
  3883                           
  3884                           ;main ds3231.c: 120:   temperature_msb = I2C_Read_Char(); I2C_ACK();
  3885  03F8  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3886  03FD  00FF               	movwf	btemp+1
  3887  03FE  087F               	movf	btemp+1,w
  3888  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0400  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0401  00D3               	movwf	alarms_read_display@temperature_msb
  3891  0402                     l3233:
  3892  0402  120A  158A  20C8  120A  118A  	fcall	_I2C_ACK
  3893                           
  3894                           ;main ds3231.c: 121:   temperature_lsb = I2C_Read_Char(); I2C_NACK();
  3895  0407  120A  158A  20BD  120A  118A  	fcall	_I2C_Read_Char
  3896  040C  00FF               	movwf	btemp+1
  3897  040D  087F               	movf	btemp+1,w
  3898  040E  1283               	bcf	3,5	;RP0=0, select bank0
  3899  040F  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0410  00D4               	movwf	alarms_read_display@temperature_lsb
  3901  0411                     l3235:
  3902  0411  120A  158A  20D4  120A  118A  	fcall	_I2C_NACK
  3903  0416                     l3237:
  3904                           
  3905                           ;main ds3231.c: 122:   I2C_Stop();
  3906  0416  120A  158A  20B4  120A  118A  	fcall	_I2C_Stop
  3907  041B                     l3239:
  3908                           
  3909                           ;main ds3231.c: 124:   alarm1_minute = bcd_to_decimal(alarm1_minute);
  3910  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3911  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3912  041D  0863               	movf	_alarm1_minute,w
  3913  041E  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3914  0423  00FF               	movwf	btemp+1
  3915  0424  087F               	movf	btemp+1,w
  3916  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0427  00E3               	movwf	_alarm1_minute
  3919  0428                     l3241:
  3920                           
  3921                           ;main ds3231.c: 125:   alarm1_hour = bcd_to_decimal(alarm1_hour);
  3922  0428  0862               	movf	_alarm1_hour,w
  3923  0429  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3924  042E  00FF               	movwf	btemp+1
  3925  042F  087F               	movf	btemp+1,w
  3926  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3927  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3928  0432  00E2               	movwf	_alarm1_hour
  3929  0433                     l3243:
  3930                           
  3931                           ;main ds3231.c: 126:   alarm2_minute = bcd_to_decimal(alarm2_minute);
  3932  0433  0861               	movf	_alarm2_minute,w
  3933  0434  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3934  0439  00FF               	movwf	btemp+1
  3935  043A  087F               	movf	btemp+1,w
  3936  043B  1283               	bcf	3,5	;RP0=0, select bank0
  3937  043C  1303               	bcf	3,6	;RP1=0, select bank0
  3938  043D  00E1               	movwf	_alarm2_minute
  3939  043E                     l3245:
  3940                           
  3941                           ;main ds3231.c: 127:   alarm2_hour = bcd_to_decimal(alarm2_hour);
  3942  043E  0860               	movf	_alarm2_hour,w
  3943  043F  120A  158A  2159  120A  118A  	fcall	_bcd_to_decimal
  3944  0444  00FF               	movwf	btemp+1
  3945  0445  087F               	movf	btemp+1,w
  3946  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0448  00E0               	movwf	_alarm2_hour
  3949  0449                     l3247:
  3950                           
  3951                           ;main ds3231.c: 130:   Alarm1[8] = alarm1_minute % 10 + '0';
  3952  0449  300A               	movlw	10
  3953  044A  00F2               	movwf	___awmod@divisor
  3954  044B  3000               	movlw	0
  3955  044C  00F3               	movwf	___awmod@divisor+1
  3956  044D  0863               	movf	_alarm1_minute,w
  3957  044E  00D0               	movwf	??_alarms_read_display
  3958  044F  01D1               	clrf	??_alarms_read_display+1
  3959  0450  0850               	movf	??_alarms_read_display,w
  3960  0451  00F4               	movwf	___awmod@dividend
  3961  0452  0851               	movf	??_alarms_read_display+1,w
  3962  0453  00F5               	movwf	___awmod@dividend+1
  3963  0454  120A  158A  22BC  120A  118A  	fcall	___awmod
  3964  0459  0872               	movf	?___awmod,w
  3965  045A  3E30               	addlw	48
  3966  045B  00FF               	movwf	btemp+1
  3967  045C  087F               	movf	btemp+1,w
  3968  045D  1283               	bcf	3,5	;RP0=0, select bank0
  3969  045E  1303               	bcf	3,6	;RP1=0, select bank0
  3970  045F  00A8               	movwf	_Alarm1+8
  3971  0460                     l3249:
  3972                           
  3973                           ;main ds3231.c: 131:   Alarm1[7] = alarm1_minute / 10 + '0';
  3974  0460  300A               	movlw	10
  3975  0461  00F2               	movwf	___awdiv@divisor
  3976  0462  3000               	movlw	0
  3977  0463  00F3               	movwf	___awdiv@divisor+1
  3978  0464  0863               	movf	_alarm1_minute,w
  3979  0465  00D0               	movwf	??_alarms_read_display
  3980  0466  01D1               	clrf	??_alarms_read_display+1
  3981  0467  0850               	movf	??_alarms_read_display,w
  3982  0468  00F4               	movwf	___awdiv@dividend
  3983  0469  0851               	movf	??_alarms_read_display+1,w
  3984  046A  00F5               	movwf	___awdiv@dividend+1
  3985  046B  120A  158A  237A  120A  118A  	fcall	___awdiv
  3986  0470  0872               	movf	?___awdiv,w
  3987  0471  3E30               	addlw	48
  3988  0472  00FF               	movwf	btemp+1
  3989  0473  087F               	movf	btemp+1,w
  3990  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3991  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3992  0476  00A7               	movwf	_Alarm1+7
  3993  0477                     l3251:
  3994                           
  3995                           ;main ds3231.c: 132:   Alarm1[5] = alarm1_hour % 10 + '0';
  3996  0477  300A               	movlw	10
  3997  0478  00F2               	movwf	___awmod@divisor
  3998  0479  3000               	movlw	0
  3999  047A  00F3               	movwf	___awmod@divisor+1
  4000  047B  0862               	movf	_alarm1_hour,w
  4001  047C  00D0               	movwf	??_alarms_read_display
  4002  047D  01D1               	clrf	??_alarms_read_display+1
  4003  047E  0850               	movf	??_alarms_read_display,w
  4004  047F  00F4               	movwf	___awmod@dividend
  4005  0480  0851               	movf	??_alarms_read_display+1,w
  4006  0481  00F5               	movwf	___awmod@dividend+1
  4007  0482  120A  158A  22BC  120A  118A  	fcall	___awmod
  4008  0487  0872               	movf	?___awmod,w
  4009  0488  3E30               	addlw	48
  4010  0489  00FF               	movwf	btemp+1
  4011  048A  087F               	movf	btemp+1,w
  4012  048B  1283               	bcf	3,5	;RP0=0, select bank0
  4013  048C  1303               	bcf	3,6	;RP1=0, select bank0
  4014  048D  00A5               	movwf	_Alarm1+5
  4015  048E                     l3253:
  4016                           
  4017                           ;main ds3231.c: 133:   Alarm1[4] = alarm1_hour / 10 + '0';
  4018  048E  300A               	movlw	10
  4019  048F  00F2               	movwf	___awdiv@divisor
  4020  0490  3000               	movlw	0
  4021  0491  00F3               	movwf	___awdiv@divisor+1
  4022  0492  0862               	movf	_alarm1_hour,w
  4023  0493  00D0               	movwf	??_alarms_read_display
  4024  0494  01D1               	clrf	??_alarms_read_display+1
  4025  0495  0850               	movf	??_alarms_read_display,w
  4026  0496  00F4               	movwf	___awdiv@dividend
  4027  0497  0851               	movf	??_alarms_read_display+1,w
  4028  0498  00F5               	movwf	___awdiv@dividend+1
  4029  0499  120A  158A  237A  120A  118A  	fcall	___awdiv
  4030  049E  0872               	movf	?___awdiv,w
  4031  049F  3E30               	addlw	48
  4032  04A0  00FF               	movwf	btemp+1
  4033  04A1  087F               	movf	btemp+1,w
  4034  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  4035  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  4036  04A4  00A4               	movwf	_Alarm1+4
  4037  04A5                     l3255:
  4038                           
  4039                           ;main ds3231.c: 134:   Alarm2[8] = alarm2_minute % 10 + '0';
  4040  04A5  300A               	movlw	10
  4041  04A6  00F2               	movwf	___awmod@divisor
  4042  04A7  3000               	movlw	0
  4043  04A8  00F3               	movwf	___awmod@divisor+1
  4044  04A9  0861               	movf	_alarm2_minute,w
  4045  04AA  00D0               	movwf	??_alarms_read_display
  4046  04AB  01D1               	clrf	??_alarms_read_display+1
  4047  04AC  0850               	movf	??_alarms_read_display,w
  4048  04AD  00F4               	movwf	___awmod@dividend
  4049  04AE  0851               	movf	??_alarms_read_display+1,w
  4050  04AF  00F5               	movwf	___awmod@dividend+1
  4051  04B0  120A  158A  22BC  120A  118A  	fcall	___awmod
  4052  04B5  0872               	movf	?___awmod,w
  4053  04B6  3E30               	addlw	48
  4054  04B7  00FF               	movwf	btemp+1
  4055  04B8  087F               	movf	btemp+1,w
  4056  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  4057  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  4058  04BB  00A8               	movwf	(_Alarm2^(0+128)+8)
  4059  04BC                     l3257:
  4060                           
  4061                           ;main ds3231.c: 135:   Alarm2[7] = alarm2_minute / 10 + '0';
  4062  04BC  300A               	movlw	10
  4063  04BD  00F2               	movwf	___awdiv@divisor
  4064  04BE  3000               	movlw	0
  4065  04BF  00F3               	movwf	___awdiv@divisor+1
  4066  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  4067  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  4068  04C2  0861               	movf	_alarm2_minute,w
  4069  04C3  00D0               	movwf	??_alarms_read_display
  4070  04C4  01D1               	clrf	??_alarms_read_display+1
  4071  04C5  0850               	movf	??_alarms_read_display,w
  4072  04C6  00F4               	movwf	___awdiv@dividend
  4073  04C7  0851               	movf	??_alarms_read_display+1,w
  4074  04C8  00F5               	movwf	___awdiv@dividend+1
  4075  04C9  120A  158A  237A  120A  118A  	fcall	___awdiv
  4076  04CE  0872               	movf	?___awdiv,w
  4077  04CF  3E30               	addlw	48
  4078  04D0  00FF               	movwf	btemp+1
  4079  04D1  087F               	movf	btemp+1,w
  4080  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  4081  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  4082  04D4  00A7               	movwf	(_Alarm2^(0+128)+7)
  4083  04D5                     l3259:
  4084                           
  4085                           ;main ds3231.c: 136:   Alarm2[5] = alarm2_hour % 10 + '0';
  4086  04D5  300A               	movlw	10
  4087  04D6  00F2               	movwf	___awmod@divisor
  4088  04D7  3000               	movlw	0
  4089  04D8  00F3               	movwf	___awmod@divisor+1
  4090  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4091  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4092  04DB  0860               	movf	_alarm2_hour,w
  4093  04DC  00D0               	movwf	??_alarms_read_display
  4094  04DD  01D1               	clrf	??_alarms_read_display+1
  4095  04DE  0850               	movf	??_alarms_read_display,w
  4096  04DF  00F4               	movwf	___awmod@dividend
  4097  04E0  0851               	movf	??_alarms_read_display+1,w
  4098  04E1  00F5               	movwf	___awmod@dividend+1
  4099  04E2  120A  158A  22BC  120A  118A  	fcall	___awmod
  4100  04E7  0872               	movf	?___awmod,w
  4101  04E8  3E30               	addlw	48
  4102  04E9  00FF               	movwf	btemp+1
  4103  04EA  087F               	movf	btemp+1,w
  4104  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  4105  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  4106  04ED  00A5               	movwf	(_Alarm2^(0+128)+5)
  4107  04EE                     l3261:
  4108                           
  4109                           ;main ds3231.c: 137:   Alarm2[4] = alarm2_hour / 10 + '0';
  4110  04EE  300A               	movlw	10
  4111  04EF  00F2               	movwf	___awdiv@divisor
  4112  04F0  3000               	movlw	0
  4113  04F1  00F3               	movwf	___awdiv@divisor+1
  4114  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  4115  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  4116  04F4  0860               	movf	_alarm2_hour,w
  4117  04F5  00D0               	movwf	??_alarms_read_display
  4118  04F6  01D1               	clrf	??_alarms_read_display+1
  4119  04F7  0850               	movf	??_alarms_read_display,w
  4120  04F8  00F4               	movwf	___awdiv@dividend
  4121  04F9  0851               	movf	??_alarms_read_display+1,w
  4122  04FA  00F5               	movwf	___awdiv@dividend+1
  4123  04FB  120A  158A  237A  120A  118A  	fcall	___awdiv
  4124  0500  0872               	movf	?___awdiv,w
  4125  0501  3E30               	addlw	48
  4126  0502  00FF               	movwf	btemp+1
  4127  0503  087F               	movf	btemp+1,w
  4128  0504  1683               	bsf	3,5	;RP0=1, select bank1
  4129  0505  1303               	bcf	3,6	;RP1=0, select bank1
  4130  0506  00A4               	movwf	(_Alarm2^(0+128)+4)
  4131  0507                     l3263:
  4132                           
  4133                           ;main ds3231.c: 138:   alarm1_status = control_reg & 0x01;
  4134  0507  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0508  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0509  0852               	movf	alarms_read_display@control_reg,w
  4137  050A  3901               	andlw	1
  4138  050B  00FF               	movwf	btemp+1
  4139  050C  087F               	movf	btemp+1,w
  4140  050D  00DE               	movwf	_alarm1_status
  4141  050E                     l3265:
  4142                           
  4143                           ;main ds3231.c: 139:   alarm2_status = (control_reg >> 1) & 0x01;
  4144  050E  0852               	movf	alarms_read_display@control_reg,w
  4145  050F  00D0               	movwf	??_alarms_read_display
  4146  0510  1003               	clrc
  4147  0511  0C50               	rrf	??_alarms_read_display,w
  4148  0512  3901               	andlw	1
  4149  0513  00FF               	movwf	btemp+1
  4150  0514  087F               	movf	btemp+1,w
  4151  0515  00DD               	movwf	_alarm2_status
  4152  0516                     l3267:
  4153                           
  4154                           ;main ds3231.c: 140:   if(temperature_msb < 0){
  4155  0516  1FD3               	btfss	alarms_read_display@temperature_msb,7
  4156  0517  2D19               	goto	u2991
  4157  0518  2D1A               	goto	u2990
  4158  0519                     u2991:
  4159  0519  2D2E               	goto	l3273
  4160  051A                     u2990:
  4161  051A                     l3269:
  4162                           
  4163                           ;main ds3231.c: 141:     temperature_msb *= -1;
  4164  051A  0853               	movf	alarms_read_display@temperature_msb,w
  4165  051B  00FF               	movwf	btemp+1
  4166  051C  087F               	movf	btemp+1,w
  4167  051D  00F2               	movwf	___bmul@multiplicand
  4168  051E  30FF               	movlw	255
  4169  051F  120A  158A  212C  120A  118A  	fcall	___bmul
  4170  0524  00FF               	movwf	btemp+1
  4171  0525  087F               	movf	btemp+1,w
  4172  0526  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0527  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0528  00D3               	movwf	alarms_read_display@temperature_msb
  4175  0529                     l3271:
  4176                           
  4177                           ;main ds3231.c: 142:     Temperature[2] = '-';
  4178  0529  302D               	movlw	45
  4179  052A  00FF               	movwf	btemp+1
  4180  052B  087F               	movf	btemp+1,w
  4181  052C  00AF               	movwf	_Temperature+2
  4182                           
  4183                           ;main ds3231.c: 143:   }
  4184  052D  2D32               	goto	l3275
  4185  052E                     l3273:
  4186                           
  4187                           ;main ds3231.c: 145:     Temperature[2] = ' ';
  4188  052E  3020               	movlw	32
  4189  052F  00FF               	movwf	btemp+1
  4190  0530  087F               	movf	btemp+1,w
  4191  0531  00AF               	movwf	_Temperature+2
  4192  0532                     l3275:
  4193                           
  4194                           ;main ds3231.c: 146:   temperature_lsb >>= 6;
  4195  0532  0ED4               	swapf	alarms_read_display@temperature_lsb,f
  4196  0533  0CD4               	rrf	alarms_read_display@temperature_lsb,f
  4197  0534  0CD4               	rrf	alarms_read_display@temperature_lsb,f
  4198  0535  3003               	movlw	3
  4199  0536  05D4               	andwf	alarms_read_display@temperature_lsb,f
  4200  0537                     l3277:
  4201                           
  4202                           ;main ds3231.c: 147:   Temperature[4] = temperature_msb % 10 + '0';
  4203  0537  300A               	movlw	10
  4204  0538  00F2               	movwf	___awmod@divisor
  4205  0539  3000               	movlw	0
  4206  053A  00F3               	movwf	___awmod@divisor+1
  4207  053B  0853               	movf	alarms_read_display@temperature_msb,w
  4208  053C  00F4               	movwf	___awmod@dividend
  4209  053D  01F5               	clrf	___awmod@dividend+1
  4210  053E  1BF4               	btfsc	___awmod@dividend,7
  4211  053F  03F5               	decf	___awmod@dividend+1,f
  4212  0540  120A  158A  22BC  120A  118A  	fcall	___awmod
  4213  0545  0872               	movf	?___awmod,w
  4214  0546  3E30               	addlw	48
  4215  0547  00FF               	movwf	btemp+1
  4216  0548  087F               	movf	btemp+1,w
  4217  0549  1283               	bcf	3,5	;RP0=0, select bank0
  4218  054A  1303               	bcf	3,6	;RP1=0, select bank0
  4219  054B  00B1               	movwf	_Temperature+4
  4220  054C                     l3279:
  4221                           
  4222                           ;main ds3231.c: 148:   Temperature[3] = temperature_msb / 10 + '0';
  4223  054C  300A               	movlw	10
  4224  054D  00F2               	movwf	___awdiv@divisor
  4225  054E  3000               	movlw	0
  4226  054F  00F3               	movwf	___awdiv@divisor+1
  4227  0550  0853               	movf	alarms_read_display@temperature_msb,w
  4228  0551  00F4               	movwf	___awdiv@dividend
  4229  0552  01F5               	clrf	___awdiv@dividend+1
  4230  0553  1BF4               	btfsc	___awdiv@dividend,7
  4231  0554  03F5               	decf	___awdiv@dividend+1,f
  4232  0555  120A  158A  237A  120A  118A  	fcall	___awdiv
  4233  055A  0872               	movf	?___awdiv,w
  4234  055B  3E30               	addlw	48
  4235  055C  00FF               	movwf	btemp+1
  4236  055D  087F               	movf	btemp+1,w
  4237  055E  1283               	bcf	3,5	;RP0=0, select bank0
  4238  055F  1303               	bcf	3,6	;RP1=0, select bank0
  4239  0560  00B0               	movwf	_Temperature+3
  4240  0561                     l3281:
  4241                           
  4242                           ;main ds3231.c: 149:   if(temperature_lsb == 0 || temperature_lsb == 2){
  4243  0561  0854               	movf	alarms_read_display@temperature_lsb,w
  4244  0562  1903               	btfsc	3,2
  4245  0563  2D65               	goto	u3001
  4246  0564  2D66               	goto	u3000
  4247  0565                     u3001:
  4248  0565  2D6C               	goto	l3285
  4249  0566                     u3000:
  4250  0566                     l3283:
  4251  0566  3002               	movlw	2
  4252  0567  0654               	xorwf	alarms_read_display@temperature_lsb,w
  4253  0568  1D03               	btfss	3,2
  4254  0569  2D6B               	goto	u3011
  4255  056A  2D6C               	goto	u3010
  4256  056B                     u3011:
  4257  056B  2D7E               	goto	l3293
  4258  056C                     u3010:
  4259  056C                     l3285:
  4260                           
  4261                           ;main ds3231.c: 150:     Temperature[7] = '0';
  4262  056C  3030               	movlw	48
  4263  056D  00FF               	movwf	btemp+1
  4264  056E  087F               	movf	btemp+1,w
  4265  056F  00B4               	movwf	_Temperature+7
  4266  0570                     l3287:
  4267                           
  4268                           ;main ds3231.c: 151:     if(temperature_lsb == 0) Temperature[6] = '0';
  4269  0570  0854               	movf	alarms_read_display@temperature_lsb,w
  4270  0571  1D03               	btfss	3,2
  4271  0572  2D74               	goto	u3021
  4272  0573  2D75               	goto	u3020
  4273  0574                     u3021:
  4274  0574  2D7A               	goto	l3291
  4275  0575                     u3020:
  4276  0575                     l3289:
  4277  0575  3030               	movlw	48
  4278  0576  00FF               	movwf	btemp+1
  4279  0577  087F               	movf	btemp+1,w
  4280  0578  00B3               	movwf	_Temperature+6
  4281  0579  2D7E               	goto	l3293
  4282  057A                     l3291:
  4283  057A  3035               	movlw	53
  4284  057B  00FF               	movwf	btemp+1
  4285  057C  087F               	movf	btemp+1,w
  4286  057D  00B3               	movwf	_Temperature+6
  4287  057E                     l3293:
  4288                           
  4289                           ;main ds3231.c: 154:   if(temperature_lsb == 1 || temperature_lsb == 3){
  4290  057E  0354               	decf	alarms_read_display@temperature_lsb,w
  4291  057F  1903               	btfsc	3,2
  4292  0580  2D82               	goto	u3031
  4293  0581  2D83               	goto	u3030
  4294  0582                     u3031:
  4295  0582  2D89               	goto	l3297
  4296  0583                     u3030:
  4297  0583                     l3295:
  4298  0583  3003               	movlw	3
  4299  0584  0654               	xorwf	alarms_read_display@temperature_lsb,w
  4300  0585  1D03               	btfss	3,2
  4301  0586  2D88               	goto	u3041
  4302  0587  2D89               	goto	u3040
  4303  0588                     u3041:
  4304  0588  2D9B               	goto	l132
  4305  0589                     u3040:
  4306  0589                     l3297:
  4307                           
  4308                           ;main ds3231.c: 155:     Temperature[7] = '5';
  4309  0589  3035               	movlw	53
  4310  058A  00FF               	movwf	btemp+1
  4311  058B  087F               	movf	btemp+1,w
  4312  058C  00B4               	movwf	_Temperature+7
  4313  058D                     l3299:
  4314                           
  4315                           ;main ds3231.c: 156:     if(temperature_lsb == 1) Temperature[6] = '2';
  4316  058D  0354               	decf	alarms_read_display@temperature_lsb,w
  4317  058E  1D03               	btfss	3,2
  4318  058F  2D91               	goto	u3051
  4319  0590  2D92               	goto	u3050
  4320  0591                     u3051:
  4321  0591  2D97               	goto	l3303
  4322  0592                     u3050:
  4323  0592                     l3301:
  4324  0592  3032               	movlw	50
  4325  0593  00FF               	movwf	btemp+1
  4326  0594  087F               	movf	btemp+1,w
  4327  0595  00B3               	movwf	_Temperature+6
  4328  0596  2D9B               	goto	l132
  4329  0597                     l3303:
  4330  0597  3037               	movlw	55
  4331  0598  00FF               	movwf	btemp+1
  4332  0599  087F               	movf	btemp+1,w
  4333  059A  00B3               	movwf	_Temperature+6
  4334  059B                     l132:	
  4335                           ;main ds3231.c: 158:   }
  4336                           
  4337                           
  4338                           ;main ds3231.c: 159:   Temperature[8] = 223;
  4339  059B  30DF               	movlw	223
  4340  059C  00FF               	movwf	btemp+1
  4341  059D  087F               	movf	btemp+1,w
  4342  059E  00B5               	movwf	_Temperature+8
  4343  059F                     l3305:
  4344                           
  4345                           ;main ds3231.c: 160:   LCD_Set_Cursor(1, 11);
  4346  059F  300B               	movlw	11
  4347  05A0  00FF               	movwf	btemp+1
  4348  05A1  087F               	movf	btemp+1,w
  4349  05A2  00F5               	movwf	LCD_Set_Cursor@column
  4350  05A3  3001               	movlw	1
  4351  05A4  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  4352  05A9                     l3307:
  4353                           
  4354                           ;main ds3231.c: 161:   LCD_Write_String(Temperature);
  4355  05A9  302D               	movlw	(low (_Temperature| 0))& (0+255)
  4356  05AA  00F7               	movwf	LCD_Write_String@str
  4357  05AB  3000               	movlw	0
  4358  05AC  00F8               	movwf	LCD_Write_String@str+1
  4359  05AD  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  4360  05B2                     l3309:
  4361                           
  4362                           ;main ds3231.c: 162:   LCD_Set_Cursor(3, 1);
  4363  05B2  01F5               	clrf	LCD_Set_Cursor@column
  4364  05B3  0AF5               	incf	LCD_Set_Cursor@column,f
  4365  05B4  3003               	movlw	3
  4366  05B5  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  4367  05BA                     l3311:
  4368                           
  4369                           ;main ds3231.c: 163:   LCD_Write_String(Alarm1);
  4370  05BA  3020               	movlw	(low (_Alarm1| 0))& (0+255)
  4371  05BB  00F7               	movwf	LCD_Write_String@str
  4372  05BC  3000               	movlw	0
  4373  05BD  00F8               	movwf	LCD_Write_String@str+1
  4374  05BE  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  4375  05C3                     l3313:
  4376                           
  4377                           ;main ds3231.c: 164:   if(alarm1_status) {
  4378  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4379  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  4380  05C5  085E               	movf	_alarm1_status,w
  4381  05C6  1903               	btfsc	3,2
  4382  05C7  2DC9               	goto	u3061
  4383  05C8  2DCA               	goto	u3060
  4384  05C9                     u3061:
  4385  05C9  2DDE               	goto	l3319
  4386  05CA                     u3060:
  4387  05CA                     l3315:
  4388                           
  4389                           ;main ds3231.c: 165:     LCD_Set_Cursor(3, 18);
  4390  05CA  3012               	movlw	18
  4391  05CB  00FF               	movwf	btemp+1
  4392  05CC  087F               	movf	btemp+1,w
  4393  05CD  00F5               	movwf	LCD_Set_Cursor@column
  4394  05CE  3003               	movlw	3
  4395  05CF  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  4396  05D4                     l3317:
  4397                           
  4398                           ;main ds3231.c: 166:     LCD_Write_String("ON ");
  4399  05D4  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4400  05D5  00F7               	movwf	LCD_Write_String@str
  4401  05D6  3080               	movlw	128
  4402  05D7  00F8               	movwf	LCD_Write_String@str+1
  4403  05D8  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  4404                           
  4405                           ;main ds3231.c: 167:   }
  4406  05DD  2DF1               	goto	l3323
  4407  05DE                     l3319:
  4408                           
  4409                           ;main ds3231.c: 169:     LCD_Set_Cursor(3, 18);
  4410  05DE  3012               	movlw	18
  4411  05DF  00FF               	movwf	btemp+1
  4412  05E0  087F               	movf	btemp+1,w
  4413  05E1  00F5               	movwf	LCD_Set_Cursor@column
  4414  05E2  3003               	movlw	3
  4415  05E3  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  4416  05E8                     l3321:
  4417                           
  4418                           ;main ds3231.c: 170:     LCD_Write_String("OFF");
  4419  05E8  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4420  05E9  00F7               	movwf	LCD_Write_String@str
  4421  05EA  3080               	movlw	128
  4422  05EB  00F8               	movwf	LCD_Write_String@str+1
  4423  05EC  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  4424  05F1                     l3323:
  4425                           
  4426                           ;main ds3231.c: 172:   LCD_Set_Cursor(4, 1);
  4427  05F1  01F5               	clrf	LCD_Set_Cursor@column
  4428  05F2  0AF5               	incf	LCD_Set_Cursor@column,f
  4429  05F3  3004               	movlw	4
  4430  05F4  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  4431                           
  4432                           ;main ds3231.c: 173:   LCD_Write_String(Alarm2);
  4433  05F9  30A0               	movlw	(low (_Alarm2| 0))& (0+255)
  4434  05FA  00F7               	movwf	LCD_Write_String@str
  4435  05FB  3000               	movlw	0
  4436  05FC  00F8               	movwf	LCD_Write_String@str+1
  4437  05FD  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  4438  0602                     l3325:
  4439                           
  4440                           ;main ds3231.c: 174:   if(alarm2_status){
  4441  0602  1283               	bcf	3,5	;RP0=0, select bank0
  4442  0603  1303               	bcf	3,6	;RP1=0, select bank0
  4443  0604  085D               	movf	_alarm2_status,w
  4444  0605  1903               	btfsc	3,2
  4445  0606  2E08               	goto	u3071
  4446  0607  2E09               	goto	u3070
  4447  0608                     u3071:
  4448  0608  2E1D               	goto	l3331
  4449  0609                     u3070:
  4450  0609                     l3327:
  4451                           
  4452                           ;main ds3231.c: 175:     LCD_Set_Cursor(4, 18);
  4453  0609  3012               	movlw	18
  4454  060A  00FF               	movwf	btemp+1
  4455  060B  087F               	movf	btemp+1,w
  4456  060C  00F5               	movwf	LCD_Set_Cursor@column
  4457  060D  3004               	movlw	4
  4458  060E  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  4459  0613                     l3329:
  4460                           
  4461                           ;main ds3231.c: 176:     LCD_Write_String("ON ");
  4462  0613  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4463  0614  00F7               	movwf	LCD_Write_String@str
  4464  0615  3080               	movlw	128
  4465  0616  00F8               	movwf	LCD_Write_String@str+1
  4466  0617  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  4467                           
  4468                           ;main ds3231.c: 177:   }
  4469  061C  2E30               	goto	l141
  4470  061D                     l3331:
  4471                           
  4472                           ;main ds3231.c: 179:     LCD_Set_Cursor(4, 18);
  4473  061D  3012               	movlw	18
  4474  061E  00FF               	movwf	btemp+1
  4475  061F  087F               	movf	btemp+1,w
  4476  0620  00F5               	movwf	LCD_Set_Cursor@column
  4477  0621  3004               	movlw	4
  4478  0622  120A  158A  2540  120A  118A  	fcall	_LCD_Set_Cursor
  4479  0627                     l3333:
  4480                           
  4481                           ;main ds3231.c: 180:     LCD_Write_String("OFF");
  4482  0627  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4483  0628  00F7               	movwf	LCD_Write_String@str
  4484  0629  3080               	movlw	128
  4485  062A  00F8               	movwf	LCD_Write_String@str+1
  4486  062B  120A  158A  21E7  120A  118A  	fcall	_LCD_Write_String
  4487  0630                     l141:
  4488  0630  0008               	return
  4489  0631                     __end_of_alarms_read_display:
  4490                           
  4491                           	psect	text11
  4492  0959                     __ptext11:	
  4493 ;; *************** function _bcd_to_decimal *****************
  4494 ;; Defined at:
  4495 ;;		line 74 in file "main ds3231.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  number          1    wreg     unsigned char 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  number          1    7[COMMON] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      unsigned char 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         0       0       0       0       0
  4510 ;;      Locals:         1       0       0       0       0
  4511 ;;      Temps:          2       0       0       0       0
  4512 ;;      Totals:         3       0       0       0       0
  4513 ;;Total ram usage:        3 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    2
  4516 ;; This function calls:
  4517 ;;		___bmul
  4518 ;; This function is called by:
  4519 ;;		_alarms_read_display
  4520 ;;		_RTC_display
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _bcd_to_decimal
  4526  0959                     _bcd_to_decimal:
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4530                           ;bcd_to_decimal@number stored from wreg
  4531  0959  00F7               	movwf	bcd_to_decimal@number
  4532  095A                     l2943:
  4533                           
  4534                           ;main ds3231.c: 74: uint8_t bcd_to_decimal(uint8_t number);main ds3231.c: 75: {;main ds3
      +                          231.c: 76:   return((number >> 4) * 10 + (number & 0x0F));
  4535  095A  300F               	movlw	15
  4536  095B  0577               	andwf	bcd_to_decimal@number,w
  4537  095C  00F5               	movwf	??_bcd_to_decimal
  4538  095D  300A               	movlw	10
  4539  095E  00FF               	movwf	btemp+1
  4540  095F  087F               	movf	btemp+1,w
  4541  0960  00F2               	movwf	___bmul@multiplicand
  4542  0961  0877               	movf	bcd_to_decimal@number,w
  4543  0962  00F6               	movwf	??_bcd_to_decimal+1
  4544  0963  3004               	movlw	4
  4545  0964                     u2605:
  4546  0964  1003               	clrc
  4547  0965  0CF6               	rrf	??_bcd_to_decimal+1,f
  4548  0966  3EFF               	addlw	-1
  4549  0967  1D03               	skipz
  4550  0968  2964               	goto	u2605
  4551  0969  0876               	movf	??_bcd_to_decimal+1,w
  4552  096A  120A  158A  212C  120A  158A  	fcall	___bmul
  4553  096F  0775               	addwf	??_bcd_to_decimal,w
  4554  0970                     l116:
  4555  0970  0008               	return
  4556  0971                     __end_of_bcd_to_decimal:
  4557                           
  4558                           	psect	text12
  4559  092C                     __ptext12:	
  4560 ;; *************** function ___bmul *****************
  4561 ;; Defined at:
  4562 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  multiplier      1    wreg     unsigned char 
  4565 ;;  multiplicand    1    2[COMMON] unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  multiplier      1    4[COMMON] unsigned char 
  4568 ;;  product         1    3[COMMON] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      unsigned char 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0, btemp+1
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4578 ;;      Params:         1       0       0       0       0
  4579 ;;      Locals:         2       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0
  4581 ;;      Totals:         3       0       0       0       0
  4582 ;;Total ram usage:        3 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_bcd_to_decimal
  4589 ;;		_alarms_read_display
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function ___bmul
  4595  092C                     ___bmul:
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  4599                           ;___bmul@multiplier stored from wreg
  4600  092C  00F4               	movwf	___bmul@multiplier
  4601  092D                     l2927:
  4602  092D  01F3               	clrf	___bmul@product
  4603  092E                     l2929:
  4604  092E  1C74               	btfss	___bmul@multiplier,0
  4605  092F  2931               	goto	u2581
  4606  0930  2932               	goto	u2580
  4607  0931                     u2581:
  4608  0931  2936               	goto	l2933
  4609  0932                     u2580:
  4610  0932                     l2931:
  4611  0932  0872               	movf	___bmul@multiplicand,w
  4612  0933  00FF               	movwf	btemp+1
  4613  0934  087F               	movf	btemp+1,w
  4614  0935  07F3               	addwf	___bmul@product,f
  4615  0936                     l2933:
  4616  0936  1003               	clrc
  4617  0937  0DF2               	rlf	___bmul@multiplicand,f
  4618  0938                     l2935:
  4619  0938  1003               	clrc
  4620  0939  0CF4               	rrf	___bmul@multiplier,f
  4621  093A                     l2937:
  4622  093A  0874               	movf	___bmul@multiplier,w
  4623  093B  1D03               	btfss	3,2
  4624  093C  293E               	goto	u2591
  4625  093D  293F               	goto	u2590
  4626  093E                     u2591:
  4627  093E  292E               	goto	l2929
  4628  093F                     u2590:
  4629  093F                     l2939:
  4630  093F  0873               	movf	___bmul@product,w
  4631  0940                     l495:
  4632  0940  0008               	return
  4633  0941                     __end_of___bmul:
  4634                           
  4635                           	psect	text13
  4636  0ABC                     __ptext13:	
  4637 ;; *************** function ___awmod *****************
  4638 ;; Defined at:
  4639 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  divisor         2    2[COMMON] int 
  4642 ;;  dividend        2    4[COMMON] int 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  sign            1    7[COMMON] unsigned char 
  4645 ;;  counter         1    6[COMMON] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  2    2[COMMON] int 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0, btemp+1
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4655 ;;      Params:         4       0       0       0       0
  4656 ;;      Locals:         2       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0
  4658 ;;      Totals:         6       0       0       0       0
  4659 ;;Total ram usage:        6 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_decimal_to_bcd
  4666 ;;		_alarms_read_display
  4667 ;;		_RTC_display
  4668 ;;		_edit
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           
  4673                           ;psect for function ___awmod
  4674  0ABC                     ___awmod:
  4675  0ABC                     l3053:	
  4676                           ;incstack = 0
  4677                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4678                           
  4679  0ABC  01F7               	clrf	___awmod@sign
  4680  0ABD                     l3055:
  4681  0ABD  1FF5               	btfss	___awmod@dividend+1,7
  4682  0ABE  2AC0               	goto	u2721
  4683  0ABF  2AC1               	goto	u2720
  4684  0AC0                     u2721:
  4685  0AC0  2AC8               	goto	l3061
  4686  0AC1                     u2720:
  4687  0AC1                     l3057:
  4688  0AC1  09F4               	comf	___awmod@dividend,f
  4689  0AC2  09F5               	comf	___awmod@dividend+1,f
  4690  0AC3  0AF4               	incf	___awmod@dividend,f
  4691  0AC4  1903               	skipnz
  4692  0AC5  0AF5               	incf	___awmod@dividend+1,f
  4693  0AC6                     l3059:
  4694  0AC6  01F7               	clrf	___awmod@sign
  4695  0AC7  0AF7               	incf	___awmod@sign,f
  4696  0AC8                     l3061:
  4697  0AC8  1FF3               	btfss	___awmod@divisor+1,7
  4698  0AC9  2ACB               	goto	u2731
  4699  0ACA  2ACC               	goto	u2730
  4700  0ACB                     u2731:
  4701  0ACB  2AD1               	goto	l3065
  4702  0ACC                     u2730:
  4703  0ACC                     l3063:
  4704  0ACC  09F2               	comf	___awmod@divisor,f
  4705  0ACD  09F3               	comf	___awmod@divisor+1,f
  4706  0ACE  0AF2               	incf	___awmod@divisor,f
  4707  0ACF  1903               	skipnz
  4708  0AD0  0AF3               	incf	___awmod@divisor+1,f
  4709  0AD1                     l3065:
  4710  0AD1  0872               	movf	___awmod@divisor,w
  4711  0AD2  0473               	iorwf	___awmod@divisor+1,w
  4712  0AD3  1903               	btfsc	3,2
  4713  0AD4  2AD6               	goto	u2741
  4714  0AD5  2AD7               	goto	u2740
  4715  0AD6                     u2741:
  4716  0AD6  2B06               	goto	l3083
  4717  0AD7                     u2740:
  4718  0AD7                     l3067:
  4719  0AD7  01F6               	clrf	___awmod@counter
  4720  0AD8  0AF6               	incf	___awmod@counter,f
  4721  0AD9  2AE5               	goto	l3073
  4722  0ADA                     l3069:
  4723  0ADA  3001               	movlw	1
  4724  0ADB                     u2755:
  4725  0ADB  1003               	clrc
  4726  0ADC  0DF2               	rlf	___awmod@divisor,f
  4727  0ADD  0DF3               	rlf	___awmod@divisor+1,f
  4728  0ADE  3EFF               	addlw	-1
  4729  0ADF  1D03               	skipz
  4730  0AE0  2ADB               	goto	u2755
  4731  0AE1                     l3071:
  4732  0AE1  3001               	movlw	1
  4733  0AE2  00FF               	movwf	btemp+1
  4734  0AE3  087F               	movf	btemp+1,w
  4735  0AE4  07F6               	addwf	___awmod@counter,f
  4736  0AE5                     l3073:
  4737  0AE5  1FF3               	btfss	___awmod@divisor+1,7
  4738  0AE6  2AE8               	goto	u2761
  4739  0AE7  2AE9               	goto	u2760
  4740  0AE8                     u2761:
  4741  0AE8  2ADA               	goto	l3069
  4742  0AE9                     u2760:
  4743  0AE9                     l3075:
  4744  0AE9  0873               	movf	___awmod@divisor+1,w
  4745  0AEA  0275               	subwf	___awmod@dividend+1,w
  4746  0AEB  1D03               	skipz
  4747  0AEC  2AEF               	goto	u2775
  4748  0AED  0872               	movf	___awmod@divisor,w
  4749  0AEE  0274               	subwf	___awmod@dividend,w
  4750  0AEF                     u2775:
  4751  0AEF  1C03               	skipc
  4752  0AF0  2AF2               	goto	u2771
  4753  0AF1  2AF3               	goto	u2770
  4754  0AF2                     u2771:
  4755  0AF2  2AF9               	goto	l3079
  4756  0AF3                     u2770:
  4757  0AF3                     l3077:
  4758  0AF3  0872               	movf	___awmod@divisor,w
  4759  0AF4  02F4               	subwf	___awmod@dividend,f
  4760  0AF5  0873               	movf	___awmod@divisor+1,w
  4761  0AF6  1C03               	skipc
  4762  0AF7  03F5               	decf	___awmod@dividend+1,f
  4763  0AF8  02F5               	subwf	___awmod@dividend+1,f
  4764  0AF9                     l3079:
  4765  0AF9  3001               	movlw	1
  4766  0AFA                     u2785:
  4767  0AFA  1003               	clrc
  4768  0AFB  0CF3               	rrf	___awmod@divisor+1,f
  4769  0AFC  0CF2               	rrf	___awmod@divisor,f
  4770  0AFD  3EFF               	addlw	-1
  4771  0AFE  1D03               	skipz
  4772  0AFF  2AFA               	goto	u2785
  4773  0B00                     l3081:
  4774  0B00  3001               	movlw	1
  4775  0B01  02F6               	subwf	___awmod@counter,f
  4776  0B02  1D03               	btfss	3,2
  4777  0B03  2B05               	goto	u2791
  4778  0B04  2B06               	goto	u2790
  4779  0B05                     u2791:
  4780  0B05  2AE9               	goto	l3075
  4781  0B06                     u2790:
  4782  0B06                     l3083:
  4783  0B06  0877               	movf	___awmod@sign,w
  4784  0B07  1903               	btfsc	3,2
  4785  0B08  2B0A               	goto	u2801
  4786  0B09  2B0B               	goto	u2800
  4787  0B0A                     u2801:
  4788  0B0A  2B10               	goto	l3087
  4789  0B0B                     u2800:
  4790  0B0B                     l3085:
  4791  0B0B  09F4               	comf	___awmod@dividend,f
  4792  0B0C  09F5               	comf	___awmod@dividend+1,f
  4793  0B0D  0AF4               	incf	___awmod@dividend,f
  4794  0B0E  1903               	skipnz
  4795  0B0F  0AF5               	incf	___awmod@dividend+1,f
  4796  0B10                     l3087:
  4797  0B10  0875               	movf	___awmod@dividend+1,w
  4798  0B11  00F3               	movwf	?___awmod+1
  4799  0B12  0874               	movf	___awmod@dividend,w
  4800  0B13  00F2               	movwf	?___awmod
  4801  0B14                     l635:
  4802  0B14  0008               	return
  4803  0B15                     __end_of___awmod:
  4804                           
  4805                           	psect	text14
  4806  0B7A                     __ptext14:	
  4807 ;; *************** function ___awdiv *****************
  4808 ;; Defined at:
  4809 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  divisor         2    2[COMMON] int 
  4812 ;;  dividend        2    4[COMMON] int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  quotient        2    8[COMMON] int 
  4815 ;;  sign            1    7[COMMON] unsigned char 
  4816 ;;  counter         1    6[COMMON] unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  2    2[COMMON] int 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0, btemp+1
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4826 ;;      Params:         4       0       0       0       0
  4827 ;;      Locals:         4       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0
  4829 ;;      Totals:         8       0       0       0       0
  4830 ;;Total ram usage:        8 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_decimal_to_bcd
  4837 ;;		_alarms_read_display
  4838 ;;		_RTC_display
  4839 ;;		_edit
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function ___awdiv
  4845  0B7A                     ___awdiv:
  4846  0B7A                     l3009:	
  4847                           ;incstack = 0
  4848                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4849                           
  4850  0B7A  01F7               	clrf	___awdiv@sign
  4851  0B7B                     l3011:
  4852  0B7B  1FF3               	btfss	___awdiv@divisor+1,7
  4853  0B7C  2B7E               	goto	u2621
  4854  0B7D  2B7F               	goto	u2620
  4855  0B7E                     u2621:
  4856  0B7E  2B86               	goto	l3017
  4857  0B7F                     u2620:
  4858  0B7F                     l3013:
  4859  0B7F  09F2               	comf	___awdiv@divisor,f
  4860  0B80  09F3               	comf	___awdiv@divisor+1,f
  4861  0B81  0AF2               	incf	___awdiv@divisor,f
  4862  0B82  1903               	skipnz
  4863  0B83  0AF3               	incf	___awdiv@divisor+1,f
  4864  0B84                     l3015:
  4865  0B84  01F7               	clrf	___awdiv@sign
  4866  0B85  0AF7               	incf	___awdiv@sign,f
  4867  0B86                     l3017:
  4868  0B86  1FF5               	btfss	___awdiv@dividend+1,7
  4869  0B87  2B89               	goto	u2631
  4870  0B88  2B8A               	goto	u2630
  4871  0B89                     u2631:
  4872  0B89  2B93               	goto	l3023
  4873  0B8A                     u2630:
  4874  0B8A                     l3019:
  4875  0B8A  09F4               	comf	___awdiv@dividend,f
  4876  0B8B  09F5               	comf	___awdiv@dividend+1,f
  4877  0B8C  0AF4               	incf	___awdiv@dividend,f
  4878  0B8D  1903               	skipnz
  4879  0B8E  0AF5               	incf	___awdiv@dividend+1,f
  4880  0B8F                     l3021:
  4881  0B8F  3001               	movlw	1
  4882  0B90  00FF               	movwf	btemp+1
  4883  0B91  087F               	movf	btemp+1,w
  4884  0B92  06F7               	xorwf	___awdiv@sign,f
  4885  0B93                     l3023:
  4886  0B93  01F8               	clrf	___awdiv@quotient
  4887  0B94  01F9               	clrf	___awdiv@quotient+1
  4888  0B95                     l3025:
  4889  0B95  0872               	movf	___awdiv@divisor,w
  4890  0B96  0473               	iorwf	___awdiv@divisor+1,w
  4891  0B97  1903               	btfsc	3,2
  4892  0B98  2B9A               	goto	u2641
  4893  0B99  2B9B               	goto	u2640
  4894  0B9A                     u2641:
  4895  0B9A  2BD2               	goto	l3045
  4896  0B9B                     u2640:
  4897  0B9B                     l3027:
  4898  0B9B  01F6               	clrf	___awdiv@counter
  4899  0B9C  0AF6               	incf	___awdiv@counter,f
  4900  0B9D  2BA9               	goto	l3033
  4901  0B9E                     l3029:
  4902  0B9E  3001               	movlw	1
  4903  0B9F                     u2655:
  4904  0B9F  1003               	clrc
  4905  0BA0  0DF2               	rlf	___awdiv@divisor,f
  4906  0BA1  0DF3               	rlf	___awdiv@divisor+1,f
  4907  0BA2  3EFF               	addlw	-1
  4908  0BA3  1D03               	skipz
  4909  0BA4  2B9F               	goto	u2655
  4910  0BA5                     l3031:
  4911  0BA5  3001               	movlw	1
  4912  0BA6  00FF               	movwf	btemp+1
  4913  0BA7  087F               	movf	btemp+1,w
  4914  0BA8  07F6               	addwf	___awdiv@counter,f
  4915  0BA9                     l3033:
  4916  0BA9  1FF3               	btfss	___awdiv@divisor+1,7
  4917  0BAA  2BAC               	goto	u2661
  4918  0BAB  2BAD               	goto	u2660
  4919  0BAC                     u2661:
  4920  0BAC  2B9E               	goto	l3029
  4921  0BAD                     u2660:
  4922  0BAD                     l3035:
  4923  0BAD  3001               	movlw	1
  4924  0BAE                     u2675:
  4925  0BAE  1003               	clrc
  4926  0BAF  0DF8               	rlf	___awdiv@quotient,f
  4927  0BB0  0DF9               	rlf	___awdiv@quotient+1,f
  4928  0BB1  3EFF               	addlw	-1
  4929  0BB2  1D03               	skipz
  4930  0BB3  2BAE               	goto	u2675
  4931  0BB4  0873               	movf	___awdiv@divisor+1,w
  4932  0BB5  0275               	subwf	___awdiv@dividend+1,w
  4933  0BB6  1D03               	skipz
  4934  0BB7  2BBA               	goto	u2685
  4935  0BB8  0872               	movf	___awdiv@divisor,w
  4936  0BB9  0274               	subwf	___awdiv@dividend,w
  4937  0BBA                     u2685:
  4938  0BBA  1C03               	skipc
  4939  0BBB  2BBD               	goto	u2681
  4940  0BBC  2BBE               	goto	u2680
  4941  0BBD                     u2681:
  4942  0BBD  2BC5               	goto	l3041
  4943  0BBE                     u2680:
  4944  0BBE                     l3037:
  4945  0BBE  0872               	movf	___awdiv@divisor,w
  4946  0BBF  02F4               	subwf	___awdiv@dividend,f
  4947  0BC0  0873               	movf	___awdiv@divisor+1,w
  4948  0BC1  1C03               	skipc
  4949  0BC2  03F5               	decf	___awdiv@dividend+1,f
  4950  0BC3  02F5               	subwf	___awdiv@dividend+1,f
  4951  0BC4                     l3039:
  4952  0BC4  1478               	bsf	___awdiv@quotient,0
  4953  0BC5                     l3041:
  4954  0BC5  3001               	movlw	1
  4955  0BC6                     u2695:
  4956  0BC6  1003               	clrc
  4957  0BC7  0CF3               	rrf	___awdiv@divisor+1,f
  4958  0BC8  0CF2               	rrf	___awdiv@divisor,f
  4959  0BC9  3EFF               	addlw	-1
  4960  0BCA  1D03               	skipz
  4961  0BCB  2BC6               	goto	u2695
  4962  0BCC                     l3043:
  4963  0BCC  3001               	movlw	1
  4964  0BCD  02F6               	subwf	___awdiv@counter,f
  4965  0BCE  1D03               	btfss	3,2
  4966  0BCF  2BD1               	goto	u2701
  4967  0BD0  2BD2               	goto	u2700
  4968  0BD1                     u2701:
  4969  0BD1  2BAD               	goto	l3035
  4970  0BD2                     u2700:
  4971  0BD2                     l3045:
  4972  0BD2  0877               	movf	___awdiv@sign,w
  4973  0BD3  1903               	btfsc	3,2
  4974  0BD4  2BD6               	goto	u2711
  4975  0BD5  2BD7               	goto	u2710
  4976  0BD6                     u2711:
  4977  0BD6  2BDC               	goto	l3049
  4978  0BD7                     u2710:
  4979  0BD7                     l3047:
  4980  0BD7  09F8               	comf	___awdiv@quotient,f
  4981  0BD8  09F9               	comf	___awdiv@quotient+1,f
  4982  0BD9  0AF8               	incf	___awdiv@quotient,f
  4983  0BDA  1903               	skipnz
  4984  0BDB  0AF9               	incf	___awdiv@quotient+1,f
  4985  0BDC                     l3049:
  4986  0BDC  0879               	movf	___awdiv@quotient+1,w
  4987  0BDD  00F3               	movwf	?___awdiv+1
  4988  0BDE  0878               	movf	___awdiv@quotient,w
  4989  0BDF  00F2               	movwf	?___awdiv
  4990  0BE0                     l622:
  4991  0BE0  0008               	return
  4992  0BE1                     __end_of___awdiv:
  4993                           
  4994                           	psect	text15
  4995  09E7                     __ptext15:	
  4996 ;; *************** function _LCD_Write_String *****************
  4997 ;; Defined at:
  4998 ;;		line 141 in file "lcd.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  str             2    7[COMMON] PTR unsigned char 
  5001 ;;		 -> STR_18(4), STR_17(4), STR_16(4), STR_15(4), 
  5002 ;;		 -> STR_14(4), STR_13(4), STR_12(3), Date(11), 
  5003 ;;		 -> Time(9), STR_11(4), STR_10(4), STR_9(4), 
  5004 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  5005 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  5006 ;;		 -> Temperature(11), Alarm2(13), Alarm1(13), 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  i               2    0[BANK0 ] unsigned int 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5018 ;;      Params:         2       0       0       0       0
  5019 ;;      Locals:         0       2       0       0       0
  5020 ;;      Temps:          0       0       0       0       0
  5021 ;;      Totals:         2       2       0       0       0
  5022 ;;Total ram usage:        4 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    3
  5025 ;; This function calls:
  5026 ;;		_LCD_Write_Char
  5027 ;; This function is called by:
  5028 ;;		_alarms_read_display
  5029 ;;		_w_day_display
  5030 ;;		_RTC_display
  5031 ;;		_edit
  5032 ;;		_on_off
  5033 ;;		_main
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _LCD_Write_String
  5039  09E7                     _LCD_Write_String:
  5040  09E7                     l2915:	
  5041                           ;incstack = 0
  5042                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5043                           
  5044                           
  5045                           ;lcd.c: 141: void LCD_Write_String(char *str);lcd.c: 142: {;lcd.c: 143:   unsigned int i
      +                          ;;lcd.c: 144:   for(i=0;str[i]!='\0';i++)
  5046  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  5047  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  5048  09E9  01CC               	clrf	LCD_Write_String@i
  5049  09EA  01CD               	clrf	LCD_Write_String@i+1
  5050  09EB  2A05               	goto	l2921
  5051  09EC                     l2917:
  5052                           
  5053                           ;lcd.c: 145:     LCD_Write_Char(str[i]);
  5054  09EC  084C               	movf	LCD_Write_String@i,w
  5055  09ED  0777               	addwf	LCD_Write_String@str,w
  5056  09EE  0084               	movwf	4
  5057  09EF  0878               	movf	LCD_Write_String@str+1,w
  5058  09F0  1803               	skipnc
  5059  09F1  0A78               	incf	LCD_Write_String@str+1,w
  5060  09F2  00FF               	movwf	btemp+1
  5061  09F3  120A  158A  2000  120A  158A  	fcall	stringtab
  5062  09F8  120A  118A  27B3  120A  158A  	fcall	_LCD_Write_Char
  5063  09FD                     l2919:
  5064  09FD  3001               	movlw	1
  5065  09FE  1283               	bcf	3,5	;RP0=0, select bank0
  5066  09FF  1303               	bcf	3,6	;RP1=0, select bank0
  5067  0A00  07CC               	addwf	LCD_Write_String@i,f
  5068  0A01  1803               	skipnc
  5069  0A02  0ACD               	incf	LCD_Write_String@i+1,f
  5070  0A03  3000               	movlw	0
  5071  0A04  07CD               	addwf	LCD_Write_String@i+1,f
  5072  0A05                     l2921:
  5073  0A05  084C               	movf	LCD_Write_String@i,w
  5074  0A06  0777               	addwf	LCD_Write_String@str,w
  5075  0A07  0084               	movwf	4
  5076  0A08  0878               	movf	LCD_Write_String@str+1,w
  5077  0A09  1803               	skipnc
  5078  0A0A  0A78               	incf	LCD_Write_String@str+1,w
  5079  0A0B  00FF               	movwf	btemp+1
  5080  0A0C  120A  158A  2000  120A  158A  	fcall	stringtab
  5081  0A11  3A00               	xorlw	0
  5082  0A12  1D03               	skipz
  5083  0A13  2A15               	goto	u2551
  5084  0A14  2A16               	goto	u2550
  5085  0A15                     u2551:
  5086  0A15  29EC               	goto	l2917
  5087  0A16                     u2550:
  5088  0A16                     l366:
  5089  0A16  0008               	return
  5090  0A17                     __end_of_LCD_Write_String:
  5091                           
  5092                           	psect	text16
  5093  07B3                     __ptext16:	
  5094 ;; *************** function _LCD_Write_Char *****************
  5095 ;; Defined at:
  5096 ;;		line 119 in file "lcd.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  Data            1    wreg     unsigned char 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  Data            1    6[COMMON] unsigned char 
  5101 ;;  High4           1    5[COMMON] unsigned char 
  5102 ;;  Low4            1    4[COMMON] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      void 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         0       0       0       0       0
  5113 ;;      Locals:         3       0       0       0       0
  5114 ;;      Temps:          1       0       0       0       0
  5115 ;;      Totals:         4       0       0       0       0
  5116 ;;Total ram usage:        4 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    2
  5119 ;; This function calls:
  5120 ;;		_LCD_DATA
  5121 ;; This function is called by:
  5122 ;;		_edit
  5123 ;;		_LCD_Write_String
  5124 ;;		_LCD_Write_Number
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function _LCD_Write_Char
  5130  07B3                     _LCD_Write_Char:
  5131                           
  5132                           ;incstack = 0
  5133                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5134                           ;LCD_Write_Char@Data stored from wreg
  5135  07B3  00F6               	movwf	LCD_Write_Char@Data
  5136  07B4                     l2841:
  5137                           
  5138                           ;lcd.c: 119: void LCD_Write_Char(char Data);lcd.c: 120: {;lcd.c: 125:   char Low4,High4;
      +                          ;lcd.c: 126:   Low4 = Data & 0x0F;
  5139  07B4  0876               	movf	LCD_Write_Char@Data,w
  5140  07B5  390F               	andlw	15
  5141  07B6  00FF               	movwf	btemp+1
  5142  07B7  087F               	movf	btemp+1,w
  5143  07B8  00F4               	movwf	LCD_Write_Char@Low4
  5144                           
  5145                           ;lcd.c: 127:   High4 = Data & 0xF0;
  5146  07B9  0876               	movf	LCD_Write_Char@Data,w
  5147  07BA  39F0               	andlw	240
  5148  07BB  00FF               	movwf	btemp+1
  5149  07BC  087F               	movf	btemp+1,w
  5150  07BD  00F5               	movwf	LCD_Write_Char@High4
  5151  07BE                     l2843:
  5152                           
  5153                           ;lcd.c: 128:   RD2 = 1;
  5154  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  5155  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  5156  07C0  1508               	bsf	8,2	;volatile
  5157  07C1                     l2845:
  5158                           
  5159                           ;lcd.c: 129:   LCD_DATA(High4>>4);
  5160  07C1  0875               	movf	LCD_Write_Char@High4,w
  5161  07C2  00F3               	movwf	??_LCD_Write_Char
  5162  07C3  3004               	movlw	4
  5163  07C4                     u2465:
  5164  07C4  1003               	clrc
  5165  07C5  0CF3               	rrf	??_LCD_Write_Char,f
  5166  07C6  3EFF               	addlw	-1
  5167  07C7  1D03               	skipz
  5168  07C8  2FC4               	goto	u2465
  5169  07C9  0873               	movf	??_LCD_Write_Char,w
  5170  07CA  120A  158A  2171  120A  118A  	fcall	_LCD_DATA
  5171  07CF                     l2847:
  5172                           
  5173                           ;lcd.c: 130:   RD3 = 1;
  5174  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  5175  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  5176  07D1  1588               	bsf	8,3	;volatile
  5177  07D2                     l2849:
  5178                           
  5179                           ;lcd.c: 131:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  5180  07D2  30C7               	movlw	199
  5181  07D3  00F3               	movwf	??_LCD_Write_Char
  5182  07D4                     u3707:
  5183  07D4  2FD5               	nop2
  5184  07D5  0BF3               	decfsz	??_LCD_Write_Char,f
  5185  07D6  2FD4               	goto	u3707
  5186  07D7  2FD8               	nop2
  5187  07D8  2FD9               	nop2
  5188  07D9                     l2851:
  5189                           
  5190                           ;lcd.c: 132:   RD3 = 0;
  5191  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  5192  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  5193  07DB  1188               	bcf	8,3	;volatile
  5194  07DC                     l2853:
  5195                           
  5196                           ;lcd.c: 133:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  5197  07DC  30C7               	movlw	199
  5198  07DD  00F3               	movwf	??_LCD_Write_Char
  5199  07DE                     u3717:
  5200  07DE  2FDF               	nop2
  5201  07DF  0BF3               	decfsz	??_LCD_Write_Char,f
  5202  07E0  2FDE               	goto	u3717
  5203  07E1  2FE2               	nop2
  5204  07E2  2FE3               	nop2
  5205  07E3                     l2855:
  5206                           
  5207                           ;lcd.c: 134:   LCD_DATA(Low4);
  5208  07E3  0874               	movf	LCD_Write_Char@Low4,w
  5209  07E4  120A  158A  2171  120A  118A  	fcall	_LCD_DATA
  5210  07E9                     l2857:
  5211                           
  5212                           ;lcd.c: 135:   RD3 = 1;
  5213  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  5214  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  5215  07EB  1588               	bsf	8,3	;volatile
  5216  07EC                     l2859:
  5217                           
  5218                           ;lcd.c: 136:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  5219  07EC  30C7               	movlw	199
  5220  07ED  00F3               	movwf	??_LCD_Write_Char
  5221  07EE                     u3727:
  5222  07EE  2FEF               	nop2
  5223  07EF  0BF3               	decfsz	??_LCD_Write_Char,f
  5224  07F0  2FEE               	goto	u3727
  5225  07F1  2FF2               	nop2
  5226  07F2  2FF3               	nop2
  5227  07F3                     l2861:
  5228                           
  5229                           ;lcd.c: 137:   RD3 = 0;
  5230  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5231  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5232  07F5  1188               	bcf	8,3	;volatile
  5233  07F6                     l2863:
  5234                           
  5235                           ;lcd.c: 138:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  5236  07F6  30C7               	movlw	199
  5237  07F7  00F3               	movwf	??_LCD_Write_Char
  5238  07F8                     u3737:
  5239  07F8  2FF9               	nop2
  5240  07F9  0BF3               	decfsz	??_LCD_Write_Char,f
  5241  07FA  2FF8               	goto	u3737
  5242  07FB  2FFC               	nop2
  5243  07FC  2FFD               	nop2
  5244  07FD                     l360:
  5245  07FD  0008               	return
  5246  07FE                     __end_of_LCD_Write_Char:
  5247                           
  5248                           	psect	text17
  5249  0D40                     __ptext17:	
  5250 ;; *************** function _LCD_Set_Cursor *****************
  5251 ;; Defined at:
  5252 ;;		line 49 in file "lcd.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  row             1    wreg     unsigned char 
  5255 ;;  column          1    5[COMMON] unsigned char 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  row             1    0[BANK0 ] unsigned char 
  5258 ;;  Temp            1    3[BANK0 ] unsigned char 
  5259 ;;  High4           1    2[BANK0 ] unsigned char 
  5260 ;;  Low4            1    1[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5270 ;;      Params:         1       0       0       0       0
  5271 ;;      Locals:         0       4       0       0       0
  5272 ;;      Temps:          1       0       0       0       0
  5273 ;;      Totals:         2       4       0       0       0
  5274 ;;Total ram usage:        6 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    3
  5277 ;; This function calls:
  5278 ;;		_LCD_CMD
  5279 ;; This function is called by:
  5280 ;;		_alarms_read_display
  5281 ;;		_w_day_display
  5282 ;;		_RTC_display
  5283 ;;		_edit
  5284 ;;		_on_off
  5285 ;;		_main
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           
  5290                           ;psect for function _LCD_Set_Cursor
  5291  0D40                     _LCD_Set_Cursor:
  5292                           
  5293                           ;incstack = 0
  5294                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5295                           ;LCD_Set_Cursor@row stored from wreg
  5296  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  5297  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  5298  0D42  00CC               	movwf	LCD_Set_Cursor@row
  5299  0D43                     l2875:
  5300                           
  5301                           ;lcd.c: 49: void LCD_Set_Cursor(unsigned char row, unsigned char column);lcd.c: 50: {;lc
      +                          d.c: 56:   unsigned char Temp,Low4,High4;;lcd.c: 58:   if(row == 1)
  5302  0D43  034C               	decf	LCD_Set_Cursor@row,w
  5303  0D44  1D03               	btfss	3,2
  5304  0D45  2D47               	goto	u2471
  5305  0D46  2D48               	goto	u2470
  5306  0D47                     u2471:
  5307  0D47  2D6D               	goto	l2885
  5308  0D48                     u2470:
  5309  0D48                     l2877:
  5310                           
  5311                           ;lcd.c: 59:   {;lcd.c: 60:     Temp = 0x80 + column - 1;
  5312  0D48  0875               	movf	LCD_Set_Cursor@column,w
  5313  0D49  3E7F               	addlw	127
  5314  0D4A  00FF               	movwf	btemp+1
  5315  0D4B  087F               	movf	btemp+1,w
  5316  0D4C  00CF               	movwf	LCD_Set_Cursor@Temp
  5317                           
  5318                           ;lcd.c: 61:     High4 = Temp >> 4;
  5319  0D4D  084F               	movf	LCD_Set_Cursor@Temp,w
  5320  0D4E  00F6               	movwf	??_LCD_Set_Cursor
  5321  0D4F  3004               	movlw	4
  5322  0D50                     u2485:
  5323  0D50  1003               	clrc
  5324  0D51  0CF6               	rrf	??_LCD_Set_Cursor,f
  5325  0D52  3EFF               	addlw	-1
  5326  0D53  1D03               	skipz
  5327  0D54  2D50               	goto	u2485
  5328  0D55  0876               	movf	??_LCD_Set_Cursor,w
  5329  0D56  00FF               	movwf	btemp+1
  5330  0D57  087F               	movf	btemp+1,w
  5331  0D58  00CE               	movwf	LCD_Set_Cursor@High4
  5332  0D59                     l2879:
  5333                           
  5334                           ;lcd.c: 62:     Low4 = Temp & 0x0F;
  5335  0D59  084F               	movf	LCD_Set_Cursor@Temp,w
  5336  0D5A  390F               	andlw	15
  5337  0D5B  00FF               	movwf	btemp+1
  5338  0D5C  087F               	movf	btemp+1,w
  5339  0D5D  00CD               	movwf	LCD_Set_Cursor@Low4
  5340  0D5E                     l2881:
  5341                           
  5342                           ;lcd.c: 63:     LCD_CMD(High4);
  5343  0D5E  084E               	movf	LCD_Set_Cursor@High4,w
  5344  0D5F  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5345  0D64                     l2883:
  5346                           
  5347                           ;lcd.c: 64:     LCD_CMD(Low4);
  5348  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  5349  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  5350  0D66  084D               	movf	LCD_Set_Cursor@Low4,w
  5351  0D67  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5352                           
  5353                           ;lcd.c: 65:   }
  5354  0D6C  2DEE               	goto	l354
  5355  0D6D                     l2885:
  5356  0D6D  3002               	movlw	2
  5357  0D6E  064C               	xorwf	LCD_Set_Cursor@row,w
  5358  0D6F  1D03               	btfss	3,2
  5359  0D70  2D72               	goto	u2491
  5360  0D71  2D73               	goto	u2490
  5361  0D72                     u2491:
  5362  0D72  2D98               	goto	l2895
  5363  0D73                     u2490:
  5364  0D73                     l2887:
  5365                           
  5366                           ;lcd.c: 67:   {;lcd.c: 68:     Temp = 0xC0 + column - 1;
  5367  0D73  0875               	movf	LCD_Set_Cursor@column,w
  5368  0D74  3EBF               	addlw	191
  5369  0D75  00FF               	movwf	btemp+1
  5370  0D76  087F               	movf	btemp+1,w
  5371  0D77  00CF               	movwf	LCD_Set_Cursor@Temp
  5372                           
  5373                           ;lcd.c: 69:     High4 = Temp >> 4;
  5374  0D78  084F               	movf	LCD_Set_Cursor@Temp,w
  5375  0D79  00F6               	movwf	??_LCD_Set_Cursor
  5376  0D7A  3004               	movlw	4
  5377  0D7B                     u2505:
  5378  0D7B  1003               	clrc
  5379  0D7C  0CF6               	rrf	??_LCD_Set_Cursor,f
  5380  0D7D  3EFF               	addlw	-1
  5381  0D7E  1D03               	skipz
  5382  0D7F  2D7B               	goto	u2505
  5383  0D80  0876               	movf	??_LCD_Set_Cursor,w
  5384  0D81  00FF               	movwf	btemp+1
  5385  0D82  087F               	movf	btemp+1,w
  5386  0D83  00CE               	movwf	LCD_Set_Cursor@High4
  5387  0D84                     l2889:
  5388                           
  5389                           ;lcd.c: 70:     Low4 = Temp & 0x0F;
  5390  0D84  084F               	movf	LCD_Set_Cursor@Temp,w
  5391  0D85  390F               	andlw	15
  5392  0D86  00FF               	movwf	btemp+1
  5393  0D87  087F               	movf	btemp+1,w
  5394  0D88  00CD               	movwf	LCD_Set_Cursor@Low4
  5395  0D89                     l2891:
  5396                           
  5397                           ;lcd.c: 71:     LCD_CMD(High4);
  5398  0D89  084E               	movf	LCD_Set_Cursor@High4,w
  5399  0D8A  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5400  0D8F                     l2893:
  5401                           
  5402                           ;lcd.c: 72:     LCD_CMD(Low4);
  5403  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0D91  084D               	movf	LCD_Set_Cursor@Low4,w
  5406  0D92  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5407                           
  5408                           ;lcd.c: 73:   }
  5409  0D97  2DEE               	goto	l354
  5410  0D98                     l2895:
  5411  0D98  3003               	movlw	3
  5412  0D99  064C               	xorwf	LCD_Set_Cursor@row,w
  5413  0D9A  1D03               	btfss	3,2
  5414  0D9B  2D9D               	goto	u2511
  5415  0D9C  2D9E               	goto	u2510
  5416  0D9D                     u2511:
  5417  0D9D  2DC3               	goto	l2905
  5418  0D9E                     u2510:
  5419  0D9E                     l2897:
  5420                           
  5421                           ;lcd.c: 75:   {;lcd.c: 76:    Temp = 0x94 + column - 1;
  5422  0D9E  0875               	movf	LCD_Set_Cursor@column,w
  5423  0D9F  3E93               	addlw	147
  5424  0DA0  00FF               	movwf	btemp+1
  5425  0DA1  087F               	movf	btemp+1,w
  5426  0DA2  00CF               	movwf	LCD_Set_Cursor@Temp
  5427                           
  5428                           ;lcd.c: 77:     High4 = Temp >> 4;
  5429  0DA3  084F               	movf	LCD_Set_Cursor@Temp,w
  5430  0DA4  00F6               	movwf	??_LCD_Set_Cursor
  5431  0DA5  3004               	movlw	4
  5432  0DA6                     u2525:
  5433  0DA6  1003               	clrc
  5434  0DA7  0CF6               	rrf	??_LCD_Set_Cursor,f
  5435  0DA8  3EFF               	addlw	-1
  5436  0DA9  1D03               	skipz
  5437  0DAA  2DA6               	goto	u2525
  5438  0DAB  0876               	movf	??_LCD_Set_Cursor,w
  5439  0DAC  00FF               	movwf	btemp+1
  5440  0DAD  087F               	movf	btemp+1,w
  5441  0DAE  00CE               	movwf	LCD_Set_Cursor@High4
  5442  0DAF                     l2899:
  5443                           
  5444                           ;lcd.c: 78:     Low4 = Temp & 0x0F;
  5445  0DAF  084F               	movf	LCD_Set_Cursor@Temp,w
  5446  0DB0  390F               	andlw	15
  5447  0DB1  00FF               	movwf	btemp+1
  5448  0DB2  087F               	movf	btemp+1,w
  5449  0DB3  00CD               	movwf	LCD_Set_Cursor@Low4
  5450  0DB4                     l2901:
  5451                           
  5452                           ;lcd.c: 79:     LCD_CMD(High4);
  5453  0DB4  084E               	movf	LCD_Set_Cursor@High4,w
  5454  0DB5  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5455  0DBA                     l2903:
  5456                           
  5457                           ;lcd.c: 80:     LCD_CMD(Low4);
  5458  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  5459  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  5460  0DBC  084D               	movf	LCD_Set_Cursor@Low4,w
  5461  0DBD  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5462                           
  5463                           ;lcd.c: 81:   }
  5464  0DC2  2DEE               	goto	l354
  5465  0DC3                     l2905:
  5466  0DC3  3004               	movlw	4
  5467  0DC4  064C               	xorwf	LCD_Set_Cursor@row,w
  5468  0DC5  1D03               	btfss	3,2
  5469  0DC6  2DC8               	goto	u2531
  5470  0DC7  2DC9               	goto	u2530
  5471  0DC8                     u2531:
  5472  0DC8  2DEE               	goto	l350
  5473  0DC9                     u2530:
  5474  0DC9                     l2907:
  5475                           
  5476                           ;lcd.c: 83:   {;lcd.c: 84:    Temp = 0xD4 + column - 1;
  5477  0DC9  0875               	movf	LCD_Set_Cursor@column,w
  5478  0DCA  3ED3               	addlw	211
  5479  0DCB  00FF               	movwf	btemp+1
  5480  0DCC  087F               	movf	btemp+1,w
  5481  0DCD  00CF               	movwf	LCD_Set_Cursor@Temp
  5482                           
  5483                           ;lcd.c: 85:     High4 = Temp >> 4;
  5484  0DCE  084F               	movf	LCD_Set_Cursor@Temp,w
  5485  0DCF  00F6               	movwf	??_LCD_Set_Cursor
  5486  0DD0  3004               	movlw	4
  5487  0DD1                     u2545:
  5488  0DD1  1003               	clrc
  5489  0DD2  0CF6               	rrf	??_LCD_Set_Cursor,f
  5490  0DD3  3EFF               	addlw	-1
  5491  0DD4  1D03               	skipz
  5492  0DD5  2DD1               	goto	u2545
  5493  0DD6  0876               	movf	??_LCD_Set_Cursor,w
  5494  0DD7  00FF               	movwf	btemp+1
  5495  0DD8  087F               	movf	btemp+1,w
  5496  0DD9  00CE               	movwf	LCD_Set_Cursor@High4
  5497  0DDA                     l2909:
  5498                           
  5499                           ;lcd.c: 86:     Low4 = Temp & 0x0F;
  5500  0DDA  084F               	movf	LCD_Set_Cursor@Temp,w
  5501  0DDB  390F               	andlw	15
  5502  0DDC  00FF               	movwf	btemp+1
  5503  0DDD  087F               	movf	btemp+1,w
  5504  0DDE  00CD               	movwf	LCD_Set_Cursor@Low4
  5505  0DDF                     l2911:
  5506                           
  5507                           ;lcd.c: 87:     LCD_CMD(High4);
  5508  0DDF  084E               	movf	LCD_Set_Cursor@High4,w
  5509  0DE0  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5510  0DE5                     l2913:
  5511                           
  5512                           ;lcd.c: 88:     LCD_CMD(Low4);
  5513  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  5514  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  5515  0DE7  084D               	movf	LCD_Set_Cursor@Low4,w
  5516  0DE8  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  5517  0DED  2DEE               	goto	l354
  5518  0DEE                     l350:
  5519  0DEE                     l354:
  5520  0DEE  0008               	return
  5521  0DEF                     __end_of_LCD_Set_Cursor:
  5522                           
  5523                           	psect	text18
  5524  0909                     __ptext18:	
  5525 ;; *************** function _I2C_Write_Char *****************
  5526 ;; Defined at:
  5527 ;;		line 81 in file "i2c_master.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  Data            1    wreg     unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  Data            1    2[COMMON] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0, pclath, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5541 ;;      Params:         0       0       0       0       0
  5542 ;;      Locals:         1       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0
  5544 ;;      Totals:         1       0       0       0       0
  5545 ;;Total ram usage:        1 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    2
  5548 ;; This function calls:
  5549 ;;		_I2C_Wait
  5550 ;; This function is called by:
  5551 ;;		_RTC_read
  5552 ;;		_alarms_read_display
  5553 ;;		_main
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           
  5558                           ;psect for function _I2C_Write_Char
  5559  0909                     _I2C_Write_Char:
  5560                           
  5561                           ;incstack = 0
  5562                           ; Regs used in _I2C_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5563                           ;I2C_Write_Char@Data stored from wreg
  5564  0909  00F2               	movwf	I2C_Write_Char@Data
  5565  090A                     l2951:
  5566                           
  5567                           ;i2c_master.c: 81: unsigned char I2C_Write_Char(unsigned char Data);i2c_master.c: 82: {;
      +                          i2c_master.c: 84:   I2C_Wait();
  5568  090A  120A  158A  20E0  120A  158A  	fcall	_I2C_Wait
  5569  090F                     l2953:
  5570                           
  5571                           ;i2c_master.c: 85:   SSPBUF = Data;
  5572  090F  0872               	movf	I2C_Write_Char@Data,w
  5573  0910  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0911  1303               	bcf	3,6	;RP1=0, select bank0
  5575  0912  0093               	movwf	19	;volatile
  5576  0913                     l2955:
  5577                           
  5578                           ;i2c_master.c: 86:   I2C_Wait();
  5579  0913  120A  158A  20E0  120A  158A  	fcall	_I2C_Wait
  5580  0918                     l2957:
  5581  0918                     l301:	
  5582                           ;i2c_master.c: 87:   return ACKSTAT;;	Return value of _I2C_Write_Char is never used
  5583                           
  5584  0918  0008               	return
  5585  0919                     __end_of_I2C_Write_Char:
  5586                           
  5587                           	psect	text19
  5588  08B4                     __ptext19:	
  5589 ;; *************** function _I2C_Stop *****************
  5590 ;; Defined at:
  5591 ;;		line 49 in file "i2c_master.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0, pclath, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    2
  5612 ;; This function calls:
  5613 ;;		_I2C_Wait
  5614 ;; This function is called by:
  5615 ;;		_RTC_read
  5616 ;;		_alarms_read_display
  5617 ;;		_main
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _I2C_Stop
  5623  08B4                     _I2C_Stop:
  5624  08B4                     l2983:	
  5625                           ;incstack = 0
  5626                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  5627                           
  5628                           
  5629                           ;i2c_master.c: 52:  I2C_Wait();
  5630  08B4  120A  158A  20E0  120A  158A  	fcall	_I2C_Wait
  5631  08B9                     l2985:
  5632                           
  5633                           ;i2c_master.c: 53:  PEN = 1;
  5634  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  5635  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  5636  08BB  1511               	bsf	17,2	;volatile
  5637  08BC                     l292:
  5638  08BC  0008               	return
  5639  08BD                     __end_of_I2C_Stop:
  5640                           
  5641                           	psect	text20
  5642  08AB                     __ptext20:	
  5643 ;; *************** function _I2C_Start *****************
  5644 ;; Defined at:
  5645 ;;		line 31 in file "i2c_master.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;		None
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5659 ;;      Params:         0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0
  5662 ;;      Totals:         0       0       0       0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    2
  5666 ;; This function calls:
  5667 ;;		_I2C_Wait
  5668 ;; This function is called by:
  5669 ;;		_RTC_read
  5670 ;;		_alarms_read_display
  5671 ;;		_main
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function _I2C_Start
  5677  08AB                     _I2C_Start:
  5678  08AB                     l2947:	
  5679                           ;incstack = 0
  5680                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  5681                           
  5682                           
  5683                           ;i2c_master.c: 34:  I2C_Wait();
  5684  08AB  120A  158A  20E0  120A  158A  	fcall	_I2C_Wait
  5685  08B0                     l2949:
  5686                           
  5687                           ;i2c_master.c: 35:  SEN = 1;
  5688  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  5689  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  5690  08B2  1411               	bsf	17,0	;volatile
  5691  08B3                     l286:
  5692  08B3  0008               	return
  5693  08B4                     __end_of_I2C_Start:
  5694                           
  5695                           	psect	text21
  5696  08A2                     __ptext21:	
  5697 ;; *************** function _I2C_Restart *****************
  5698 ;; Defined at:
  5699 ;;		line 40 in file "i2c_master.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, status,2, status,0, pclath, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5713 ;;      Params:         0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0
  5716 ;;      Totals:         0       0       0       0       0
  5717 ;;Total ram usage:        0 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    2
  5720 ;; This function calls:
  5721 ;;		_I2C_Wait
  5722 ;; This function is called by:
  5723 ;;		_RTC_read
  5724 ;;		_alarms_read_display
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           
  5729                           ;psect for function _I2C_Restart
  5730  08A2                     _I2C_Restart:
  5731  08A2                     l2961:	
  5732                           ;incstack = 0
  5733                           ; Regs used in _I2C_Restart: [wreg+status,2+status,0+pclath+cstack]
  5734                           
  5735                           
  5736                           ;i2c_master.c: 43:  I2C_Wait();
  5737  08A2  120A  158A  20E0  120A  158A  	fcall	_I2C_Wait
  5738  08A7                     l2963:
  5739                           
  5740                           ;i2c_master.c: 44:  RSEN = 1;
  5741  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  5742  08A8  1303               	bcf	3,6	;RP1=0, select bank1
  5743  08A9  1491               	bsf	17,1	;volatile
  5744  08AA                     l289:
  5745  08AA  0008               	return
  5746  08AB                     __end_of_I2C_Restart:
  5747                           
  5748                           	psect	text22
  5749  08BD                     __ptext22:	
  5750 ;; *************** function _I2C_Read_Char *****************
  5751 ;; Defined at:
  5752 ;;		line 92 in file "i2c_master.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      unsigned char 
  5759 ;; Registers used:
  5760 ;;		wreg
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5766 ;;      Params:         0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    1
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_RTC_read
  5777 ;;		_alarms_read_display
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _I2C_Read_Char
  5783  08BD                     _I2C_Read_Char:
  5784  08BD                     l2965:	
  5785                           ;incstack = 0
  5786                           ; Regs used in _I2C_Read_Char: [wreg]
  5787                           
  5788                           
  5789                           ;i2c_master.c: 95:   RCEN = 1;
  5790  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  5791  08BE  1303               	bcf	3,6	;RP1=0, select bank1
  5792  08BF  1591               	bsf	17,3	;volatile
  5793  08C0                     l304:	
  5794                           ;i2c_master.c: 96:   while(!SSPIF);
  5795                           
  5796  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  5797  08C1  1D8C               	btfss	12,3	;volatile
  5798  08C2  28C4               	goto	u2611
  5799  08C3  28C5               	goto	u2610
  5800  08C4                     u2611:
  5801  08C4  28C0               	goto	l304
  5802  08C5                     u2610:
  5803  08C5                     l306:
  5804                           
  5805                           ;i2c_master.c: 97:   SSPIF = 0;
  5806  08C5  118C               	bcf	12,3	;volatile
  5807  08C6                     l2967:
  5808                           
  5809                           ;i2c_master.c: 98:   return SSPBUF;
  5810  08C6  0813               	movf	19,w	;volatile
  5811  08C7                     l307:
  5812  08C7  0008               	return
  5813  08C8                     __end_of_I2C_Read_Char:
  5814                           
  5815                           	psect	text23
  5816  08D4                     __ptext23:	
  5817 ;; *************** function _I2C_NACK *****************
  5818 ;; Defined at:
  5819 ;;		line 71 in file "i2c_master.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;		None
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  1    wreg      void 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0, pclath, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5833 ;;      Params:         0       0       0       0       0
  5834 ;;      Locals:         0       0       0       0       0
  5835 ;;      Temps:          0       0       0       0       0
  5836 ;;      Totals:         0       0       0       0       0
  5837 ;;Total ram usage:        0 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    2
  5840 ;; This function calls:
  5841 ;;		_I2C_Wait
  5842 ;; This function is called by:
  5843 ;;		_RTC_read
  5844 ;;		_alarms_read_display
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           
  5849                           ;psect for function _I2C_NACK
  5850  08D4                     _I2C_NACK:
  5851  08D4                     l2977:	
  5852                           ;incstack = 0
  5853                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  5854                           
  5855                           
  5856                           ;i2c_master.c: 74:  ACKDT = 1;
  5857  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  5858  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  5859  08D6  1691               	bsf	17,5	;volatile
  5860  08D7                     l2979:
  5861                           
  5862                           ;i2c_master.c: 75:  I2C_Wait();
  5863  08D7  120A  158A  20E0  120A  158A  	fcall	_I2C_Wait
  5864  08DC                     l2981:
  5865                           
  5866                           ;i2c_master.c: 76:  ACKEN = 1;
  5867  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  5868  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  5869  08DE  1611               	bsf	17,4	;volatile
  5870  08DF                     l298:
  5871  08DF  0008               	return
  5872  08E0                     __end_of_I2C_NACK:
  5873                           
  5874                           	psect	text24
  5875  08C8                     __ptext24:	
  5876 ;; *************** function _I2C_ACK *****************
  5877 ;; Defined at:
  5878 ;;		line 58 in file "i2c_master.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;		None
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5892 ;;      Params:         0       0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0
  5895 ;;      Totals:         0       0       0       0       0
  5896 ;;Total ram usage:        0 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    2
  5899 ;; This function calls:
  5900 ;;		_I2C_Wait
  5901 ;; This function is called by:
  5902 ;;		_RTC_read
  5903 ;;		_alarms_read_display
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           
  5908                           ;psect for function _I2C_ACK
  5909  08C8                     _I2C_ACK:
  5910  08C8                     l2971:	
  5911                           ;incstack = 0
  5912                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  5913                           
  5914                           
  5915                           ;i2c_master.c: 63:  ACKDT = 0;
  5916  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  5917  08C9  1303               	bcf	3,6	;RP1=0, select bank1
  5918  08CA  1291               	bcf	17,5	;volatile
  5919  08CB                     l2973:
  5920                           
  5921                           ;i2c_master.c: 64:  I2C_Wait();
  5922  08CB  120A  158A  20E0  120A  158A  	fcall	_I2C_Wait
  5923  08D0                     l2975:
  5924                           
  5925                           ;i2c_master.c: 65:  ACKEN = 1;
  5926  08D0  1683               	bsf	3,5	;RP0=1, select bank1
  5927  08D1  1303               	bcf	3,6	;RP1=0, select bank1
  5928  08D2  1611               	bsf	17,4	;volatile
  5929  08D3                     l295:
  5930  08D3  0008               	return
  5931  08D4                     __end_of_I2C_ACK:
  5932                           
  5933                           	psect	text25
  5934  08E0                     __ptext25:	
  5935 ;; *************** function _I2C_Wait *****************
  5936 ;; Defined at:
  5937 ;;		line 23 in file "i2c_master.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      void 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       0       0       0       0
  5952 ;;      Locals:         0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0
  5954 ;;      Totals:         0       0       0       0       0
  5955 ;;Total ram usage:        0 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_I2C_Start
  5962 ;;		_I2C_Restart
  5963 ;;		_I2C_Stop
  5964 ;;		_I2C_ACK
  5965 ;;		_I2C_NACK
  5966 ;;		_I2C_Write_Char
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           
  5971                           ;psect for function _I2C_Wait
  5972  08E0                     _I2C_Wait:
  5973  08E0                     l2923:	
  5974                           ;incstack = 0
  5975                           ; Regs used in _I2C_Wait: [wreg+status,2]
  5976                           
  5977  08E0                     l280:	
  5978                           ;i2c_master.c: 25:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5979                           
  5980  08E0  1683               	bsf	3,5	;RP0=1, select bank1
  5981  08E1  1303               	bcf	3,6	;RP1=0, select bank1
  5982  08E2  1914               	btfsc	20,2	;volatile
  5983  08E3  28E5               	goto	u2561
  5984  08E4  28E6               	goto	u2560
  5985  08E5                     u2561:
  5986  08E5  28E0               	goto	l280
  5987  08E6                     u2560:
  5988  08E6                     l2925:
  5989  08E6  0811               	movf	17,w	;volatile
  5990  08E7  391F               	andlw	31
  5991  08E8  1D03               	btfss	3,2
  5992  08E9  28EB               	goto	u2571
  5993  08EA  28EC               	goto	u2570
  5994  08EB                     u2571:
  5995  08EB  28E0               	goto	l280
  5996  08EC                     u2570:
  5997  08EC                     l283:
  5998  08EC  0008               	return
  5999  08ED                     __end_of_I2C_Wait:
  6000                           
  6001                           	psect	text26
  6002  0B15                     __ptext26:	
  6003 ;; *************** function _LCD_Init *****************
  6004 ;; Defined at:
  6005 ;;		line 91 in file "lcd.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0, pclath, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6019 ;;      Params:         0       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0
  6021 ;;      Temps:          2       0       0       0       0
  6022 ;;      Totals:         2       0       0       0       0
  6023 ;;Total ram usage:        2 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    3
  6026 ;; This function calls:
  6027 ;;		_LCD_CMD
  6028 ;;		_LCD_DATA
  6029 ;; This function is called by:
  6030 ;;		_main
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           
  6035                           ;psect for function _LCD_Init
  6036  0B15                     _LCD_Init:
  6037  0B15                     l3475:	
  6038                           ;incstack = 0
  6039                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  6040                           
  6041                           
  6042                           ;lcd.c: 98:   TRISD = 0x00;
  6043  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  6044  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  6045  0B17  0188               	clrf	8	;volatile
  6046  0B18                     l3477:
  6047                           
  6048                           ;lcd.c: 99:   TRISD2 = 0;
  6049  0B18  1108               	bcf	8,2	;volatile
  6050  0B19                     l3479:
  6051                           
  6052                           ;lcd.c: 100:   TRISD3 = 0;
  6053  0B19  1188               	bcf	8,3	;volatile
  6054  0B1A                     l3481:
  6055                           
  6056                           ;lcd.c: 102:   LCD_DATA(0x00);
  6057  0B1A  3000               	movlw	0
  6058  0B1B  120A  158A  2171  120A  158A  	fcall	_LCD_DATA
  6059  0B20                     l3483:
  6060                           
  6061                           ;lcd.c: 103:   _delay((unsigned long)((30)*(8000000/4000.0)));
  6062  0B20  304E               	movlw	78
  6063  0B21  00F6               	movwf	??_LCD_Init+1
  6064  0B22  30EB               	movlw	235
  6065  0B23  00F5               	movwf	??_LCD_Init
  6066  0B24                     u3747:
  6067  0B24  0BF5               	decfsz	??_LCD_Init,f
  6068  0B25  2B24               	goto	u3747
  6069  0B26  0BF6               	decfsz	??_LCD_Init+1,f
  6070  0B27  2B24               	goto	u3747
  6071  0B28                     l3485:
  6072                           
  6073                           ;lcd.c: 104:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  6074  0B28  30C7               	movlw	199
  6075  0B29  00F5               	movwf	??_LCD_Init
  6076  0B2A                     u3757:
  6077  0B2A  2B2B               	nop2
  6078  0B2B  0BF5               	decfsz	??_LCD_Init,f
  6079  0B2C  2B2A               	goto	u3757
  6080  0B2D  2B2E               	nop2
  6081  0B2E  2B2F               	nop2
  6082  0B2F                     l3487:
  6083                           
  6084                           ;lcd.c: 105:   LCD_CMD(0x03);
  6085  0B2F  3003               	movlw	3
  6086  0B30  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6087  0B35                     l3489:
  6088                           
  6089                           ;lcd.c: 106:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6090  0B35  300D               	movlw	13
  6091  0B36  00F6               	movwf	??_LCD_Init+1
  6092  0B37  30FB               	movlw	251
  6093  0B38  00F5               	movwf	??_LCD_Init
  6094  0B39                     u3767:
  6095  0B39  0BF5               	decfsz	??_LCD_Init,f
  6096  0B3A  2B39               	goto	u3767
  6097  0B3B  0BF6               	decfsz	??_LCD_Init+1,f
  6098  0B3C  2B39               	goto	u3767
  6099  0B3D  2B3E               	nop2
  6100  0B3E                     l3491:
  6101                           
  6102                           ;lcd.c: 107:   LCD_CMD(0x03);
  6103  0B3E  3003               	movlw	3
  6104  0B3F  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6105  0B44                     l3493:
  6106                           
  6107                           ;lcd.c: 108:   _delay((unsigned long)((150)*(8000000/4000000.0)));
  6108  0B44  3063               	movlw	99
  6109  0B45  00F5               	movwf	??_LCD_Init
  6110  0B46                     u3777:
  6111  0B46  0BF5               	decfsz	??_LCD_Init,f
  6112  0B47  2B46               	goto	u3777
  6113  0B48  2B49               	nop2
  6114  0B49                     l3495:
  6115                           
  6116                           ;lcd.c: 109:   LCD_CMD(0x03);
  6117  0B49  3003               	movlw	3
  6118  0B4A  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6119  0B4F                     l3497:
  6120                           
  6121                           ;lcd.c: 110:   LCD_CMD(0x02);
  6122  0B4F  3002               	movlw	2
  6123  0B50  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6124  0B55                     l3499:
  6125                           
  6126                           ;lcd.c: 111:   LCD_CMD(0x02);
  6127  0B55  3002               	movlw	2
  6128  0B56  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6129  0B5B                     l3501:
  6130                           
  6131                           ;lcd.c: 112:   LCD_CMD(0x08);
  6132  0B5B  3008               	movlw	8
  6133  0B5C  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6134  0B61                     l3503:
  6135                           
  6136                           ;lcd.c: 113:   LCD_CMD(0x00);
  6137  0B61  3000               	movlw	0
  6138  0B62  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6139  0B67                     l3505:
  6140                           
  6141                           ;lcd.c: 114:   LCD_CMD(0x0C);
  6142  0B67  300C               	movlw	12
  6143  0B68  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6144  0B6D                     l3507:
  6145                           
  6146                           ;lcd.c: 115:   LCD_CMD(0x00);
  6147  0B6D  3000               	movlw	0
  6148  0B6E  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6149  0B73                     l3509:
  6150                           
  6151                           ;lcd.c: 116:   LCD_CMD(0x06);
  6152  0B73  3006               	movlw	6
  6153  0B74  120A  158A  2141  120A  158A  	fcall	_LCD_CMD
  6154  0B79                     l357:
  6155  0B79  0008               	return
  6156  0B7A                     __end_of_LCD_Init:
  6157                           
  6158                           	psect	text27
  6159  0941                     __ptext27:	
  6160 ;; *************** function _LCD_CMD *****************
  6161 ;; Defined at:
  6162 ;;		line 28 in file "lcd.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  CMD             1    wreg     unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  CMD             1    4[COMMON] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0, pclath, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6176 ;;      Params:         0       0       0       0       0
  6177 ;;      Locals:         1       0       0       0       0
  6178 ;;      Temps:          1       0       0       0       0
  6179 ;;      Totals:         2       0       0       0       0
  6180 ;;Total ram usage:        2 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    2
  6183 ;; This function calls:
  6184 ;;		_LCD_DATA
  6185 ;; This function is called by:
  6186 ;;		_LCD_Set_Cursor
  6187 ;;		_LCD_Init
  6188 ;;		_LCD_Clear
  6189 ;;		_LCD_SL
  6190 ;;		_LCD_SR
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           
  6195                           ;psect for function _LCD_CMD
  6196  0941                     _LCD_CMD:
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  6200                           ;LCD_CMD@CMD stored from wreg
  6201  0941  00F4               	movwf	LCD_CMD@CMD
  6202  0942                     l2865:
  6203                           
  6204                           ;lcd.c: 28: void LCD_CMD(unsigned char CMD);lcd.c: 29: {;lcd.c: 33:   RD2 = 0;
  6205  0942  1283               	bcf	3,5	;RP0=0, select bank0
  6206  0943  1303               	bcf	3,6	;RP1=0, select bank0
  6207  0944  1108               	bcf	8,2	;volatile
  6208  0945                     l2867:
  6209                           
  6210                           ;lcd.c: 34:   LCD_DATA(CMD);
  6211  0945  0874               	movf	LCD_CMD@CMD,w
  6212  0946  120A  158A  2171  120A  158A  	fcall	_LCD_DATA
  6213  094B                     l2869:
  6214                           
  6215                           ;lcd.c: 35:   RD3 = 1;
  6216  094B  1283               	bcf	3,5	;RP0=0, select bank0
  6217  094C  1303               	bcf	3,6	;RP1=0, select bank0
  6218  094D  1588               	bsf	8,3	;volatile
  6219  094E                     l2871:
  6220                           
  6221                           ;lcd.c: 36:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  6222  094E  30C7               	movlw	199
  6223  094F  00F3               	movwf	??_LCD_CMD
  6224  0950                     u3787:
  6225  0950  2951               	nop2
  6226  0951  0BF3               	decfsz	??_LCD_CMD,f
  6227  0952  2950               	goto	u3787
  6228  0953  2954               	nop2
  6229  0954  2955               	nop2
  6230  0955                     l2873:
  6231                           
  6232                           ;lcd.c: 37:   RD3 = 0;
  6233  0955  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0956  1303               	bcf	3,6	;RP1=0, select bank0
  6235  0957  1188               	bcf	8,3	;volatile
  6236  0958                     l341:
  6237  0958  0008               	return
  6238  0959                     __end_of_LCD_CMD:
  6239                           
  6240                           	psect	text28
  6241  0971                     __ptext28:	
  6242 ;; *************** function _LCD_DATA *****************
  6243 ;; Defined at:
  6244 ;;		line 4 in file "lcd.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  Data            1    wreg     unsigned char 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  Data            1    2[COMMON] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6258 ;;      Params:         0       0       0       0       0
  6259 ;;      Locals:         1       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0
  6261 ;;      Totals:         1       0       0       0       0
  6262 ;;Total ram usage:        1 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_LCD_CMD
  6269 ;;		_LCD_Init
  6270 ;;		_LCD_Write_Char
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _LCD_DATA
  6276  0971                     _LCD_DATA:
  6277                           
  6278                           ;incstack = 0
  6279                           ; Regs used in _LCD_DATA: [wreg]
  6280                           ;LCD_DATA@Data stored from wreg
  6281  0971  00F2               	movwf	LCD_DATA@Data
  6282  0972                     l2831:
  6283                           
  6284                           ;lcd.c: 4: void LCD_DATA(unsigned char Data);lcd.c: 5: {;lcd.c: 9:   if(Data & 1)
  6285  0972  1C72               	btfss	LCD_DATA@Data,0
  6286  0973  2975               	goto	u2421
  6287  0974  2976               	goto	u2420
  6288  0975                     u2421:
  6289  0975  297A               	goto	l330
  6290  0976                     u2420:
  6291  0976                     l2833:
  6292                           
  6293                           ;lcd.c: 10:     RD4 = 1;
  6294  0976  1283               	bcf	3,5	;RP0=0, select bank0
  6295  0977  1303               	bcf	3,6	;RP1=0, select bank0
  6296  0978  1608               	bsf	8,4	;volatile
  6297  0979  297D               	goto	l331
  6298  097A                     l330:	
  6299                           ;lcd.c: 11:   else
  6300                           
  6301                           
  6302                           ;lcd.c: 12:     RD4 = 0;
  6303  097A  1283               	bcf	3,5	;RP0=0, select bank0
  6304  097B  1303               	bcf	3,6	;RP1=0, select bank0
  6305  097C  1208               	bcf	8,4	;volatile
  6306  097D                     l331:
  6307                           
  6308                           ;lcd.c: 13:   if(Data & 2)
  6309  097D  1CF2               	btfss	LCD_DATA@Data,1
  6310  097E  2980               	goto	u2431
  6311  097F  2981               	goto	u2430
  6312  0980                     u2431:
  6313  0980  2983               	goto	l332
  6314  0981                     u2430:
  6315  0981                     l2835:
  6316                           
  6317                           ;lcd.c: 14:     RD5 = 1;
  6318  0981  1688               	bsf	8,5	;volatile
  6319  0982  2984               	goto	l333
  6320  0983                     l332:	
  6321                           ;lcd.c: 15:   else
  6322                           
  6323                           
  6324                           ;lcd.c: 16:     RD5 = 0;
  6325  0983  1288               	bcf	8,5	;volatile
  6326  0984                     l333:
  6327                           
  6328                           ;lcd.c: 17:   if(Data & 4)
  6329  0984  1D72               	btfss	LCD_DATA@Data,2
  6330  0985  2987               	goto	u2441
  6331  0986  2988               	goto	u2440
  6332  0987                     u2441:
  6333  0987  298A               	goto	l334
  6334  0988                     u2440:
  6335  0988                     l2837:
  6336                           
  6337                           ;lcd.c: 18:     RD6 = 1;
  6338  0988  1708               	bsf	8,6	;volatile
  6339  0989  298B               	goto	l335
  6340  098A                     l334:	
  6341                           ;lcd.c: 19:   else
  6342                           
  6343                           
  6344                           ;lcd.c: 20:     RD6 = 0;
  6345  098A  1308               	bcf	8,6	;volatile
  6346  098B                     l335:
  6347                           
  6348                           ;lcd.c: 21:   if(Data & 8)
  6349  098B  1DF2               	btfss	LCD_DATA@Data,3
  6350  098C  298E               	goto	u2451
  6351  098D  298F               	goto	u2450
  6352  098E                     u2451:
  6353  098E  2991               	goto	l336
  6354  098F                     u2450:
  6355  098F                     l2839:
  6356                           
  6357                           ;lcd.c: 22:     RD7 = 1;
  6358  098F  1788               	bsf	8,7	;volatile
  6359  0990  2992               	goto	l338
  6360  0991                     l336:	
  6361                           ;lcd.c: 23:   else
  6362                           
  6363                           
  6364                           ;lcd.c: 24:     RD7 = 0;
  6365  0991  1388               	bcf	8,7	;volatile
  6366  0992                     l338:
  6367  0992  0008               	return
  6368  0993                     __end_of_LCD_DATA:
  6369                           
  6370                           	psect	text29
  6371  0993                     __ptext29:	
  6372 ;; *************** function _I2C_Master_Init *****************
  6373 ;; Defined at:
  6374 ;;		line 3 in file "i2c_master.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  I2C_BaudRate    4    6[BANK0 ] const unsigned long 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;		None
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      void 
  6381 ;; Registers used:
  6382 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6388 ;;      Params:         0       4       0       0       0
  6389 ;;      Locals:         0       0       0       0       0
  6390 ;;      Temps:          0       0       0       0       0
  6391 ;;      Totals:         0       4       0       0       0
  6392 ;;Total ram usage:        4 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    2
  6395 ;; This function calls:
  6396 ;;		___lldiv
  6397 ;; This function is called by:
  6398 ;;		_main
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           
  6403                           ;psect for function _I2C_Master_Init
  6404  0993                     _I2C_Master_Init:
  6405  0993                     l3511:	
  6406                           ;incstack = 0
  6407                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6408                           
  6409                           
  6410                           ;i2c_master.c: 3: void I2C_Master_Init(const unsigned long I2C_BaudRate);i2c_master.c: 4
      +                          : {;i2c_master.c: 8:  SSPCON = 0x28;
  6411  0993  3028               	movlw	40
  6412  0994  1283               	bcf	3,5	;RP0=0, select bank0
  6413  0995  1303               	bcf	3,6	;RP1=0, select bank0
  6414  0996  0094               	movwf	20	;volatile
  6415  0997                     l3513:
  6416                           
  6417                           ;i2c_master.c: 9:  SSPCON2 = 0x00;
  6418  0997  1683               	bsf	3,5	;RP0=1, select bank1
  6419  0998  1303               	bcf	3,6	;RP1=0, select bank1
  6420  0999  0191               	clrf	17	;volatile
  6421  099A                     l3515:
  6422                           
  6423                           ;i2c_master.c: 11:  SSPSTAT = 0x80;
  6424  099A  3080               	movlw	128
  6425  099B  0094               	movwf	20	;volatile
  6426  099C                     l3517:
  6427                           
  6428                           ;i2c_master.c: 12:  SSPADD = ((8000000/4)/I2C_BaudRate) - 1;
  6429  099C  1283               	bcf	3,5	;RP0=0, select bank0
  6430  099D  1303               	bcf	3,6	;RP1=0, select bank0
  6431  099E  0855               	movf	I2C_Master_Init@I2C_BaudRate+3,w
  6432  099F  00F5               	movwf	___lldiv@divisor+3
  6433  09A0  0854               	movf	I2C_Master_Init@I2C_BaudRate+2,w
  6434  09A1  00F4               	movwf	___lldiv@divisor+2
  6435  09A2  0853               	movf	I2C_Master_Init@I2C_BaudRate+1,w
  6436  09A3  00F3               	movwf	___lldiv@divisor+1
  6437  09A4  0852               	movf	I2C_Master_Init@I2C_BaudRate,w
  6438  09A5  00F2               	movwf	___lldiv@divisor
  6439  09A6  3000               	movlw	0
  6440  09A7  00F9               	movwf	___lldiv@dividend+3
  6441  09A8  301E               	movlw	30
  6442  09A9  00F8               	movwf	___lldiv@dividend+2
  6443  09AA  3084               	movlw	132
  6444  09AB  00F7               	movwf	___lldiv@dividend+1
  6445  09AC  3080               	movlw	128
  6446  09AD  00F6               	movwf	___lldiv@dividend
  6447  09AE  120A  158A  23E1  120A  158A  	fcall	___lldiv
  6448  09B3  0872               	movf	?___lldiv,w
  6449  09B4  3EFF               	addlw	255
  6450  09B5  1683               	bsf	3,5	;RP0=1, select bank1
  6451  09B6  1303               	bcf	3,6	;RP1=0, select bank1
  6452  09B7  0093               	movwf	19	;volatile
  6453  09B8                     l3519:
  6454                           
  6455                           ;i2c_master.c: 13:  TRISC3 = 1;
  6456  09B8  1587               	bsf	7,3	;volatile
  6457  09B9                     l3521:
  6458                           
  6459                           ;i2c_master.c: 14:  TRISC4 = 1;
  6460  09B9  1607               	bsf	7,4	;volatile
  6461  09BA                     l277:
  6462  09BA  0008               	return
  6463  09BB                     __end_of_I2C_Master_Init:
  6464                           
  6465                           	psect	text30
  6466  0BE1                     __ptext30:	
  6467 ;; *************** function ___lldiv *****************
  6468 ;; Defined at:
  6469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  divisor         4    2[COMMON] unsigned long 
  6472 ;;  dividend        4    6[COMMON] unsigned long 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  quotient        4    1[BANK0 ] unsigned long 
  6475 ;;  counter         1    5[BANK0 ] unsigned char 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  4    2[COMMON] unsigned long 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2, status,0, btemp+1
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6485 ;;      Params:         8       0       0       0       0
  6486 ;;      Locals:         0       5       0       0       0
  6487 ;;      Temps:          0       1       0       0       0
  6488 ;;      Totals:         8       6       0       0       0
  6489 ;;Total ram usage:       14 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    1
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		_I2C_Master_Init
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function ___lldiv
  6501  0BE1                     ___lldiv:
  6502  0BE1                     l3175:	
  6503                           ;incstack = 0
  6504                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  6505                           
  6506  0BE1  3000               	movlw	0
  6507  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  6508  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  6509  0BE4  00D0               	movwf	___lldiv@quotient+3
  6510  0BE5  3000               	movlw	0
  6511  0BE6  00CF               	movwf	___lldiv@quotient+2
  6512  0BE7  3000               	movlw	0
  6513  0BE8  00CE               	movwf	___lldiv@quotient+1
  6514  0BE9  3000               	movlw	0
  6515  0BEA  00CD               	movwf	___lldiv@quotient
  6516  0BEB  0875               	movf	___lldiv@divisor+3,w
  6517  0BEC  0474               	iorwf	___lldiv@divisor+2,w
  6518  0BED  0473               	iorwf	___lldiv@divisor+1,w
  6519  0BEE  0472               	iorwf	___lldiv@divisor,w
  6520  0BEF  1903               	skipnz
  6521  0BF0  2BF2               	goto	u2911
  6522  0BF1  2BF3               	goto	u2910
  6523  0BF2                     u2911:
  6524  0BF2  2C40               	goto	l3197
  6525  0BF3                     u2910:
  6526  0BF3                     l3177:
  6527  0BF3  01D1               	clrf	___lldiv@counter
  6528  0BF4  0AD1               	incf	___lldiv@counter,f
  6529  0BF5  2C03               	goto	l3183
  6530  0BF6                     l3179:
  6531  0BF6  3001               	movlw	1
  6532  0BF7  00CC               	movwf	??___lldiv
  6533  0BF8                     u2925:
  6534  0BF8  1003               	clrc
  6535  0BF9  0DF2               	rlf	___lldiv@divisor,f
  6536  0BFA  0DF3               	rlf	___lldiv@divisor+1,f
  6537  0BFB  0DF4               	rlf	___lldiv@divisor+2,f
  6538  0BFC  0DF5               	rlf	___lldiv@divisor+3,f
  6539  0BFD  0BCC               	decfsz	??___lldiv,f
  6540  0BFE  2BF8               	goto	u2925
  6541  0BFF                     l3181:
  6542  0BFF  3001               	movlw	1
  6543  0C00  00FF               	movwf	btemp+1
  6544  0C01  087F               	movf	btemp+1,w
  6545  0C02  07D1               	addwf	___lldiv@counter,f
  6546  0C03                     l3183:
  6547  0C03  1FF5               	btfss	___lldiv@divisor+3,7
  6548  0C04  2C06               	goto	u2931
  6549  0C05  2C07               	goto	u2930
  6550  0C06                     u2931:
  6551  0C06  2BF6               	goto	l3179
  6552  0C07                     u2930:
  6553  0C07                     l3185:
  6554  0C07  3001               	movlw	1
  6555  0C08  00CC               	movwf	??___lldiv
  6556  0C09                     u2945:
  6557  0C09  1003               	clrc
  6558  0C0A  0DCD               	rlf	___lldiv@quotient,f
  6559  0C0B  0DCE               	rlf	___lldiv@quotient+1,f
  6560  0C0C  0DCF               	rlf	___lldiv@quotient+2,f
  6561  0C0D  0DD0               	rlf	___lldiv@quotient+3,f
  6562  0C0E  0BCC               	decfsz	??___lldiv,f
  6563  0C0F  2C09               	goto	u2945
  6564  0C10                     l3187:
  6565  0C10  0875               	movf	___lldiv@divisor+3,w
  6566  0C11  0279               	subwf	___lldiv@dividend+3,w
  6567  0C12  1D03               	skipz
  6568  0C13  2C1E               	goto	u2955
  6569  0C14  0874               	movf	___lldiv@divisor+2,w
  6570  0C15  0278               	subwf	___lldiv@dividend+2,w
  6571  0C16  1D03               	skipz
  6572  0C17  2C1E               	goto	u2955
  6573  0C18  0873               	movf	___lldiv@divisor+1,w
  6574  0C19  0277               	subwf	___lldiv@dividend+1,w
  6575  0C1A  1D03               	skipz
  6576  0C1B  2C1E               	goto	u2955
  6577  0C1C  0872               	movf	___lldiv@divisor,w
  6578  0C1D  0276               	subwf	___lldiv@dividend,w
  6579  0C1E                     u2955:
  6580  0C1E  1C03               	skipc
  6581  0C1F  2C21               	goto	u2951
  6582  0C20  2C22               	goto	u2950
  6583  0C21                     u2951:
  6584  0C21  2C31               	goto	l3193
  6585  0C22                     u2950:
  6586  0C22                     l3189:
  6587  0C22  0872               	movf	___lldiv@divisor,w
  6588  0C23  02F6               	subwf	___lldiv@dividend,f
  6589  0C24  0873               	movf	___lldiv@divisor+1,w
  6590  0C25  1C03               	skipc
  6591  0C26  0F73               	incfsz	___lldiv@divisor+1,w
  6592  0C27  02F7               	subwf	___lldiv@dividend+1,f
  6593  0C28  0874               	movf	___lldiv@divisor+2,w
  6594  0C29  1C03               	skipc
  6595  0C2A  0F74               	incfsz	___lldiv@divisor+2,w
  6596  0C2B  02F8               	subwf	___lldiv@dividend+2,f
  6597  0C2C  0875               	movf	___lldiv@divisor+3,w
  6598  0C2D  1C03               	skipc
  6599  0C2E  0F75               	incfsz	___lldiv@divisor+3,w
  6600  0C2F  02F9               	subwf	___lldiv@dividend+3,f
  6601  0C30                     l3191:
  6602  0C30  144D               	bsf	___lldiv@quotient,0
  6603  0C31                     l3193:
  6604  0C31  3001               	movlw	1
  6605  0C32                     u2965:
  6606  0C32  1003               	clrc
  6607  0C33  0CF5               	rrf	___lldiv@divisor+3,f
  6608  0C34  0CF4               	rrf	___lldiv@divisor+2,f
  6609  0C35  0CF3               	rrf	___lldiv@divisor+1,f
  6610  0C36  0CF2               	rrf	___lldiv@divisor,f
  6611  0C37  3EFF               	addlw	-1
  6612  0C38  1D03               	skipz
  6613  0C39  2C32               	goto	u2965
  6614  0C3A                     l3195:
  6615  0C3A  3001               	movlw	1
  6616  0C3B  02D1               	subwf	___lldiv@counter,f
  6617  0C3C  1D03               	btfss	3,2
  6618  0C3D  2C3F               	goto	u2971
  6619  0C3E  2C40               	goto	u2970
  6620  0C3F                     u2971:
  6621  0C3F  2C07               	goto	l3185
  6622  0C40                     u2970:
  6623  0C40                     l3197:
  6624  0C40  0850               	movf	___lldiv@quotient+3,w
  6625  0C41  00F5               	movwf	?___lldiv+3
  6626  0C42  084F               	movf	___lldiv@quotient+2,w
  6627  0C43  00F4               	movwf	?___lldiv+2
  6628  0C44  084E               	movf	___lldiv@quotient+1,w
  6629  0C45  00F3               	movwf	?___lldiv+1
  6630  0C46  084D               	movf	___lldiv@quotient,w
  6631  0C47  00F2               	movwf	?___lldiv
  6632  0C48                     l505:
  6633  0C48  0008               	return
  6634  0C49                     __end_of___lldiv:
  6635                           
  6636                           	psect	text31
  6637  08FA                     __ptext31:	
  6638 ;; *************** function _EXT *****************
  6639 ;; Defined at:
  6640 ;;		line 39 in file "main ds3231.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		None
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6654 ;;      Params:         0       0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0
  6656 ;;      Temps:          2       0       0       0       0
  6657 ;;      Totals:         2       0       0       0       0
  6658 ;;Total ram usage:        2 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		Interrupt level 1
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _EXT
  6669  08FA                     _EXT:
  6670  08FA                     i1l1669:
  6671                           
  6672                           ;main ds3231.c: 41:   if (INTF)
  6673  08FA  1C8B               	btfss	11,1	;volatile
  6674  08FB  28FD               	goto	u98_21
  6675  08FC  28FE               	goto	u98_20
  6676  08FD                     u98_21:
  6677  08FD  2902               	goto	i1l99
  6678  08FE                     u98_20:
  6679  08FE                     i1l1671:
  6680                           
  6681                           ;main ds3231.c: 42:   {;main ds3231.c: 43:     RB4 = 1;
  6682  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  6683  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  6684  0900  1606               	bsf	6,4	;volatile
  6685                           
  6686                           ;main ds3231.c: 44:     INTF = 0;
  6687  0901  108B               	bcf	11,1	;volatile
  6688  0902                     i1l99:
  6689  0902  0871               	movf	??_EXT+1,w
  6690  0903  008A               	movwf	10
  6691  0904  0E70               	swapf	??_EXT^(0+4294967168),w
  6692  0905  0083               	movwf	3
  6693  0906  0EFE               	swapf	btemp,f
  6694  0907  0E7E               	swapf	btemp,w
  6695  0908  0009               	retfie
  6696  0909                     __end_of_EXT:
  6697  007E                     btemp	set	126	;btemp
  6698  007E                     wtemp0	set	126
  6699                           
  6700                           	psect	intentry
  6701  0004                     __pintentry:	
  6702                           ;incstack = 0
  6703                           ; Regs used in _EXT: []
  6704                           
  6705  0004                     interrupt_function:
  6706  007E                     saved_w	set	btemp
  6707  0004  00FE               	movwf	btemp
  6708  0005  0E03               	swapf	3,w
  6709  0006  00F0               	movwf	??_EXT
  6710  0007  080A               	movf	10,w
  6711  0008  00F1               	movwf	??_EXT+1
  6712  0009  120A  158A  28FA   	ljmp	_EXT
  6713                           
  6714                           	psect	config
  6715                           
  6716                           ;Config register CONFIG @ 0x2007
  6717                           ;	Oscillator Selection bits
  6718                           ;	FOSC = HS, HS oscillator
  6719                           ;	Watchdog Timer Enable bit
  6720                           ;	WDTE = OFF, WDT disabled
  6721                           ;	Power-up Timer Enable bit
  6722                           ;	PWRTE = ON, PWRT enabled
  6723                           ;	Brown-out Reset Enable bit
  6724                           ;	BOREN = ON, BOR enabled
  6725                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6726                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  6727                           ;	Data EEPROM Memory Code Protection bit
  6728                           ;	CPD = OFF, Data EEPROM code protection off
  6729                           ;	Flash Program Memory Write Enable bits
  6730                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6731                           ;	In-Circuit Debugger Mode bit
  6732                           ;	DEBUG = 0x1, unprogrammed default
  6733                           ;	Flash Program Memory Code Protection bit
  6734                           ;	CP = OFF, Code protection off
  6735  2007                     	org	8199
  6736  2007  3FF2               	dw	16370

Data Sizes:
    Strings     40
    Constant    0
    Data        57
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      74
    BANK1            80      0      13
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[3]), Date(BANK0[11]), 
		 -> Time(BANK0[9]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 
		 -> Temperature(BANK0[11]), Alarm2(BANK1[13]), Alarm1(BANK0[13]), 


Critical Paths under _main in COMMON

    _edit->___awdiv
    _RTC_read->_I2C_Write_Char
    _RTC_display->___awdiv
    _w_day_display->_LCD_Write_String
    _decimal_to_bcd->___awdiv
    _alarms_read_display->___awdiv
    _bcd_to_decimal->___bmul
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_DATA
    _I2C_Master_Init->___lldiv

Critical Paths under _EXT in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_edit
    _main->_on_off
    _on_off->_RTC_display
    _edit->_RTC_display
    _RTC_display->_w_day_display
    _w_day_display->_LCD_Set_Cursor
    _alarms_read_display->_LCD_Set_Cursor
    _I2C_Master_Init->___lldiv

Critical Paths under _EXT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EXT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EXT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EXT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   96493
                                             14 BANK0      3     3      0
                    _I2C_Master_Init
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                        _RTC_display
                           _RTC_read
                _alarms_read_display
                              _blink
                           _debounce
                     _decimal_to_bcd
                               _edit
                 _external_interrupt
                             _on_off
                      _w_day_display
 ---------------------------------------------------------------------------------
 (1) _on_off                                               6     4      2   21933
                                              8 BANK0      6     4      2
                     _LCD_Set_Cursor
                   _LCD_Write_String
                        _RTC_display
                           _RTC_read
                              _blink
                           _debounce
 ---------------------------------------------------------------------------------
 (1) _external_interrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _edit                                                 6     4      2   29600
                                              8 BANK0      6     4      2
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                        _RTC_display
                           _RTC_read
                            ___awdiv
                            ___awmod
                              _blink
                           _debounce
 ---------------------------------------------------------------------------------
 (2) _debounce                                             5     5      0     139
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _blink                                                3     3      0      37
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _RTC_read                                             0     0      0      31
                            _I2C_ACK
                           _I2C_NACK
                      _I2C_Read_Char
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
 ---------------------------------------------------------------------------------
 (2) _RTC_display                                          2     2      0   16134
                                              6 BANK0      2     2      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
                      _w_day_display
 ---------------------------------------------------------------------------------
 (1) _w_day_display                                        2     2      0    4919
                                              4 BANK0      2     2      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    5980
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _alarms_read_display                                  5     5      0   11949
                                              4 BANK0      5     5      0
                            _I2C_ACK
                           _I2C_NACK
                      _I2C_Read_Char
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Char
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
                             ___bmul
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (3) _bcd_to_decimal                                       3     3      0     378
                                              5 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     316
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2953
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2965
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     4     2      2    2454
                                              7 COMMON     2     0      2
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       6     5      1    2465
                                              5 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Char                                       1     1      0      31
                                              2 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     279
                                              5 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     155
                                              3 COMMON     2     2      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (4) _LCD_DATA                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      4     0      4     542
                                              6 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _EXT                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _I2C_Write_Char
     _I2C_Wait
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_DATA
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_DATA
   _RTC_display
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
     _w_day_display
       _LCD_Set_Cursor
         _LCD_CMD
           _LCD_DATA
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_DATA
   _RTC_read
     _I2C_ACK
       _I2C_Wait
     _I2C_NACK
       _I2C_Wait
     _I2C_Read_Char
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write_Char
       _I2C_Wait
   _alarms_read_display
     _I2C_ACK
       _I2C_Wait
     _I2C_NACK
       _I2C_Wait
     _I2C_Read_Char
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write_Char
       _I2C_Wait
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
     ___awdiv
     ___awmod
     ___bmul
     _bcd_to_decimal
       ___bmul
   _blink
   _debounce
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _edit
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_Char
       _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
     _RTC_display
       _LCD_Set_Cursor
         _LCD_CMD
           _LCD_DATA
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_DATA
       ___awdiv
       ___awmod
       _bcd_to_decimal
         ___bmul
       _w_day_display
         _LCD_Set_Cursor
           _LCD_CMD
             _LCD_DATA
         _LCD_Write_String
           _LCD_Write_Char
             _LCD_DATA
     _RTC_read
       _I2C_ACK
         _I2C_Wait
       _I2C_NACK
         _I2C_Wait
       _I2C_Read_Char
       _I2C_Restart
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write_Char
         _I2C_Wait
     ___awdiv
     ___awmod
     _blink
     _debounce
   _external_interrupt
   _on_off
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
     _RTC_display
       _LCD_Set_Cursor
         _LCD_CMD
           _LCD_DATA
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_DATA
       ___awdiv
       ___awmod
       _bcd_to_decimal
         ___bmul
       _w_day_display
         _LCD_Set_Cursor
           _LCD_CMD
             _LCD_DATA
         _LCD_Write_String
           _LCD_Write_Char
             _LCD_DATA
     _RTC_read
       _I2C_ACK
         _I2C_Wait
       _I2C_NACK
         _I2C_Wait
       _I2C_Read_Char
       _I2C_Restart
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write_Char
         _I2C_Wait
     _blink
     _debounce
   _w_day_display
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA

 _EXT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       D       7       16.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      63      12        0.0%
ABS                  0      0      63       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Dec 18 00:02:50 2021

                                 _i 007B                                   pc 0002  
                    ___bmul@product 0073                  __size_of_I2C_Start 0009  
                                l93 08A1                        ___awdiv@sign 0077  
                                fsr 0004                      _decimal_to_bcd 0A47  
                       _RTC_display 0631                                 l112 0ABB  
                               l105 0A7D                                 l122 0D3F  
                               l211 0EA1                                 l116 0970  
                               l132 059B                                 l108 0A88  
                               l301 0918                                 l141 0630  
                               l119 0A78                                 l304 08C0  
                               l153 0CB6                                 l330 097A  
                               l306 08C5                                 l331 097D  
                               l307 08C7                                 l332 0983  
                               l156 07B2                                 l164 0A38  
                               l333 0984                                 l341 0958  
                               l334 098A                                 l350 0DEE  
                               l166 0A46                                 l335 098B  
                               l336 0991                                 l280 08E0  
                               l360 07FD                                 l192 0FF0  
                               l505 0C48                                 l193 0FFF  
                               l338 0992                                 l354 0DEE  
                               l283 08EC                                 l292 08BC  
                               l277 09BA                                 l357 0B79  
                               l286 08B3                                 l366 0A16  
                               l622 0BE0                                 l295 08D3  
                               l289 08AA                                 l298 08DF  
                               l635 0B14                                 l495 0940  
                               _GIE 005F                                 _RB1 0031  
                               _RB2 0032                                 _RB3 0033  
                               _RB4 0034                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 _PEN 048A  
                               _EXT 08FA                                 _SEN 0488  
                   __end_of_I2C_ACK 08D4                                 fsr0 0004  
                               indf 0000                        ___awmod@sign 0077  
              __size_of_I2C_Restart 0009                     __end_of_LCD_CMD 0959  
                              ?_EXT 0070                      _LCD_Set_Cursor 0D40  
                              l3001 0C8E                                l3011 0B7B  
                              l3003 0C98                                l3021 0B8F  
                              l3013 0B7F                                l3031 0BA5  
                              l3023 0B93                                l3015 0B84  
                              l3111 0AB2                                l3103 0A8F  
                              l3041 0BC5                                l3033 0BA9  
                              l3025 0B95                                l3017 0B86  
                              l3009 0B7A                                l3201 0A4A  
                              l3113 0AB8                                l3105 0A9F  
                              l3043 0BCC                                l3035 0BAD  
                              l3027 0B9B                                l3019 0B8A  
                              l3211 0399                                l3131 0CD3  
                              l3107 0AA8                                l3037 0BBE  
                              l3029 0B9E                                l3045 0BD2  
                              l3061 0AC8                                l3053 0ABC  
                              l3301 0592                                l3221 03C1  
                              l3213 039E                                l3205 0364  
                              l3141 0D08                                l3133 0CDD  
                              l3109 0AAC                                l3047 0BD7  
                              l3039 0BC4                                l3071 0AE1  
                              l3063 0ACC                                l3055 0ABD  
                              l3311 05BA                                l3303 0597  
                              l3231 03F8                                l3223 03C6  
                              l3215 03A3                                l3207 0380  
                              l3151 0D3A                                l3143 0D17  
                              l3135 0CEA                                l3119 0ABA  
                              l3049 0BDC                                l3081 0B00  
                              l3073 0AE5                                l3065 0AD1  
                              l3057 0AC1                                l3321 05E8  
                              l3313 05C3                                l3305 059F  
                              l3241 0428                                l3233 0402  
                              l3225 03CB                                l3217 03A8  
                              l3209 038A                                l3153 0631  
                              l3145 0D1C                                l3137 0CEF  
                              l3129 0CB7                                l3161 0A19  
                              l3401 0F83                                l3075 0AE9  
                              l3067 0AD7                                l3083 0B06  
                              l3059 0AC6                                l3331 061D  
                              l3323 05F1                                l3315 05CA  
                              l3307 05A9                                l3251 0477  
                              l3243 0433                                l3235 0411  
                              l3227 03DA                                l3219 03B7  
                              l3155 0791                                l3147 0D2B  
                              l3139 0CFE                                l3171 0A3C  
                              l3163 0A1D                                l3091 0A7A  
                              l3411 0FCF                                l3403 0F8C  
                              l2275 089B                                l3181 0BFF  
                              l3501 0B5B                                l3085 0B0B  
                              l3077 0AF3                                l3069 0ADA  
                              l3333 0627                                l3325 0602  
                              l3317 05D4                                l3309 05B2  
                              l3261 04EE                                l3253 048E  
                              l3245 043E                                l3237 0416  
                              l3229 03DF                                l3157 079A  
                              l3149 0D35                                l3173 0A40  
                              l3165 0A26                                l3421 0FEA  
                              l3413 0FD4                                l3405 0F91  
                              l3341 0EBA                                l3191 0C30  
                              l3183 0C03                                l3175 0BE1  
                              l3511 0993                                l3503 0B61  
                              l3087 0B10                                l3079 0AF9  
                              l3327 0609                                l3319 05DE  
                              l3271 0529                                l3263 0507  
                              l3255 04A5                                l3247 0449  
                              l3239 041B                                l3167 0A2C  
                              l3159 0A17                                l3423 0FF4  
                              l3415 0FDA                                l3407 0F9D  
                              l3351 0ED0                                l3343 0EBE  
                              l3335 0EA5                                l3431 0DF2  
                              l3193 0C31                                l3185 0C07  
                              l3177 0BF3                                l3521 09B9  
                              l3513 0997                                l3505 0B67  
                              l3329 0613                                l3281 0561  
                              l3273 052E                                l3265 050E  
                              l3257 04BC                                l3249 0460  
                              l3169 0A32                                l3097 0A83  
                              l3425 0FFA                                l3417 0FDF  
                              l3409 0FB6                                l3361 0EE8  
                              l3353 0ED5                                l3345 0EC3  
                              l3337 0EA5                                l3441 0E19  
                              l3433 0DF2                                l3601 01B9  
                              l3195 0C3A                                l3187 0C10  
                              l3179 0BF6                                l3515 099A  
                              l3507 0B6D                                l3291 057A  
                              l3283 0566                                l3275 0532  
                              l3267 0516                                l3259 04D5  
                              l3427 0FFE                                l3419 0FE4  
                              l3371 0EFE                                l3363 0EEE  
                              l3355 0EDB                                l3347 0EC9  
                              l3339 0EAF                                l3451 0E4B  
                              l3443 0E23                                l3435 0DFD  
                              l3611 01E1                                l3603 01BE  
                              l3531 0049                                l3523 003D  
               LCD_Write_String@str 0077                                l3189 0C22  
                              l3197 0C40                                l3517 099C  
                              l3509 0B73                                l2901 0DB4  
                              l3293 057E                                l3285 056C  
                              l3277 0537                                l3269 051A  
                              l3381 0F17                                l3373 0F04  
                              l3365 0EF0                                l3357 0EE1  
                              l3349 0ECF                                l3461 0E76  
                              l3453 0E54                                l3445 0E2C  
                              l3437 0E08                                l3621 0263  
                              l3613 01F6                                l3541 0072  
                              l3605 01CD                                l3533 004E  
                              l3525 0041                                l3519 09B8  
                              l2831 0972                                l2911 0DDF  
                              l2903 0DBA                                l3295 0583  
                              l3287 0570                                l3279 054C  
                              l3391 0F5A                                l3383 0F18  
                              l3375 0F0A                                l3367 0EF6  
                              l3359 0EE2                                l3471 0E9E  
                              l3463 0E7F                                l3455 0E59  
                              l3439 0E12                                l3447 0E3B  
                              l3631 02A8                                l3623 0291  
                              l3615 0209                                l3607 01D3  
                              l3551 00A6                                l3543 0073  
                              l3535 0053                                l3527 0044  
                              l2833 0976                                l3481 0B1A  
                              l2913 0DE5                                l2905 0DC3  
                              l2841 07B4                                l2921 0A05  
                              l3297 0589                                l3289 0575  
                              l3393 0F5F                                l3385 0F22  
                              l3377 0F0B                                l3369 0EFC  
                              l3465 0E84                                l3457 0E65  
                              l3449 0E41                                l3641 02CE  
                              l3633 02B0                                l3625 0296  
                              l3617 021C                                l3609 01DD  
                              l3561 00C8                                l3553 00AC  
                              l3545 0086                                l3537 0062  
                              l3529 0048                                l2835 0981  
                              l3491 0B3E                                l3483 0B20  
                              l3475 0B15                                l2923 08E0  
                              l2907 0DC9                                l2851 07D9  
                              l2843 07BE                                l2915 09E7  
                              l2931 0932                                l3299 058D  
                              l3395 0F64                                l3387 0F3B  
                              l3379 0F11                                l3467 0E8E  
                              l3459 0E6C                                l3643 02D4  
                              l3635 02B8                                l3627 029C  
                              l3619 0259                                l3651 02FA  
                              l3571 00EE                                l3563 00D0  
                              l3555 00AE                                l3547 0097  
                              l3539 0068                                l2837 0988  
                              l3493 0B44                                l3485 0B28  
                              l3477 0B18                                l2925 08E6  
                              l2909 0DDA                                l2861 07F3  
                              l2853 07DC                                l2845 07C1  
                              l2917 09EC                                l2933 0936  
                              l3389 0F54                                l3397 0F73  
                              l3469 0E94                                l3661 034C  
                              l3653 0300                                l3645 02E0  
                              l3637 02BE                                l3629 02A2  
                              l3581 0174                                l3565 00D9  
                              l3557 00B3                                l3549 00A2  
                              l2839 098F                                l2871 094E  
                              l3495 0B49                                l3487 0B2F  
                              l3479 0B19                                l2951 090A  
                              l2863 07F6                                l2855 07E3  
                              l2847 07CF                                l2919 09FD  
                              l2935 0938                                l2927 092D  
                              l2943 095A                                l3399 0F79  
                              l3663 0351                                l3655 0304  
                              l3647 02E6                                l3639 02C6  
                              l3591 0191                                l3583 0179  
                              l3575 00F8                                l3567 00E3  
                              l3559 00C2                                l2873 0955  
                              l2865 0942                                l3497 0B4F  
                              l3489 0B35                                l2961 08A2  
                              l2953 090F                                l2881 0D5E  
                              l2857 07E9                                l2849 07D2  
                              l2937 093A                                l2929 092E  
                              l3665 0356                                l3657 0305  
                              l3649 02EB                                l3593 0199  
                              l3585 017F                                l3577 0133  
                              l3569 00E8                                l2867 0945  
                              l3499 0B55                                l2971 08C8  
                              l2963 08A7                                l2947 08AB  
                              l2955 0913                                l2891 0D89  
                              l2883 0D64                                l2875 0D43  
                              l2859 07EC                                l2939 093F  
                              l3755 0A97                                l3659 0347  
                              l3595 01A1                                l3587 0185  
                              l3579 013D                                l2869 094B  
                              l2973 08CB                                l2981 08DC  
                              l2965 08BD                                l2949 08B0  
                              l2957 0918                                l2893 0D8F  
                              l2877 0D48                                l2885 0D6D  
                              l3757 0CA2                                l3597 01A9  
                              l3589 018B                                l2975 08D0  
                              l2967 08C6                                l2983 08B4  
                              l2887 0D73                                l2895 0D98  
                              l2879 0D59                                l2991 0C5C  
                              l3599 01B1                                l2977 08D4  
                              l2985 08B9                                l2897 0D9E  
                              l2889 0D84                                l2993 0C66  
                              l2979 08D7                                l2899 0DAF  
                              l2995 0C70                                l2987 0C49  
                              l2997 0C7A                                l2989 0C52  
                              l2999 0C84                                STR_1 0814  
                              STR_2 0818                                STR_3 0814  
                              STR_4 0818                                STR_5 082C  
                              STR_6 0828                                STR_7 0820  
                              STR_8 081C                                STR_9 0834  
                              u3000 0566                                u3001 0565  
                              u3010 056C                                u3011 056B  
                              u3020 0575                                u3100 0EC3  
                              u3021 0574                                u3101 0EC2  
                              u3030 0583                                u3110 0EC9  
                              u3031 0582                                u3111 0EC8  
                              u3040 0589                                u3200 0F04  
                              u3120 0ECF                                u3041 0588  
                              u3201 0F03                                u3121 0ECE  
                              u3050 0592                                u3210 0F0A  
                              u3130 0ED5                                u3051 0591  
                              u3211 0F09                                u3131 0ED4  
                              u2420 0976                                u3060 05CA  
                              u3300 0FFA                                u3220 0F11  
                              u3140 0EDB                                u2421 0975  
                              u3061 05C9                                u3301 0FF9  
                              u3221 0F10                                u3141 0EDA  
                              u2430 0981                                u2510 0D9E  
                              u3070 0609                                u3230 0F17  
                              u3150 0EE1                                u3310 0DFC  
                              u2431 0980                                u2511 0D9D  
                              u3071 0608                                u3231 0F16  
                              u3151 0EE0                                u3311 0DFB  
                              u2440 0988                                u3240 0F5A  
                              u3160 0EE8                                u3080 0EAF  
                              u3320 0E03                                u3400 0072  
                              u2441 0987                                u2505 0D7B  
                              u3241 0F59                                u3161 0EE7  
                              u3081 0EAE                                u3321 0E01  
                              u3401 0071                                u2450 098F  
                              u2610 08C5                                u2530 0DC9  
                              u3250 0F79                                u3170 0EEE  
                              u3090 0EB9                                u3330 0E04  
                              u3410 00A1                                u2451 098E  
                              u2611 08C4                                u2531 0DC8  
                              u3251 0F78                                u3171 0EED  
                              u3091 0EB8                                u3411 00A0  
                              u2700 0BD2                                u2620 0B7F  
                              u3260 0FDA                                u3180 0EF6  
                              u3340 0E19                                u3500 0300  
                              u3420 00AC                                u2525 0DA6  
                              u2701 0BD1                                u2621 0B7E  
                              u2605 0964                                u3261 0FD9  
                              u3181 0EF5                                u3341 0E18  
                              u3501 02FF                                u3421 00AB  
                              u2470 0D48                                u2550 0A16  
                              u2710 0BD7                                u2630 0B8A  
                              u3270 0FEA                                u3190 0EFC  
                              u3350 0E41                                u3510 0304  
                              u3430 00C8                                u2471 0D47  
                              u2551 0A15                                u2711 0BD6  
                              u2631 0B89                                u3271 0FE9  
                              u3191 0EFB                                u3351 0E40  
                              u3511 0303                                u3431 00C7  
                              u2560 08E6                                u2640 0B9B  
                              u2800 0B0B                                u2720 0AC1  
                              u3280 0FF0                                u3360 0E6C  
                              u3440 00EE                                u2561 08E5  
                              u2545 0DD1                                u2465 07C4  
                              u2641 0B9A                                u2801 0B0A  
                              u2721 0AC0                                u3281 0FEF  
                              u3361 0E6B                                u3441 00ED  
                              u2570 08EC                                u2490 0D73  
                              u2730 0ACC                                u2810 0A83  
                              u3290 0FF4                                u3370 0E94  
                              u3530 0325                                u3450 00F8  
                              u2571 08EB                                u2491 0D72  
                              u2731 0ACB                                u2811 0A82  
                              u3291 0FF3                                u3371 0E93  
                              u3531 0323                                u3451 00F7  
                              u2660 0BAD                                u2740 0AD7  
                              u2580 0932                                u2900 0A46  
                              u2820 0A8E                                u3380 0E9E  
                              u3540 0326                                u3460 013D  
                              u2485 0D50                                u2661 0BAC  
                              u2741 0AD6                                u2581 0931  
                              u2901 0A45                                u2821 0A8D  
                              u3381 0E9D                                u3525 031B  
                              u3461 013C                                u2910 0BF3  
                              u2590 093F                                u2830 0AB2  
                              u3470 01D3                                u3390 0068  
                              u2911 0BF2                                u2655 0B9F  
                              u2591 093E                                u2831 0AB1  
                              u3471 01D2                                u3391 0067  
                              u2680 0BBE                                u2760 0AE9  
                              u2840 0AB8                                u3560 0333  
                              u3480 01DD                                u2681 0BBD  
                              u2761 0AE8                                u2841 0AB7  
                              u3561 0331                                u3481 01DC  
                              u2930 0C07                                u2770 0AF3  
                              u2850 0A2C                                u3570 0334  
                              u3490 0263                                u2931 0C06  
                              u3707 07D4                                u2675 0BAE  
                              u2771 0AF2                                u2755 0ADB  
                              u2851 0A2B                                u3555 0329  
                              u3491 0262                                u3627 00BB  
                              u2860 0A32                                u2925 0BF8  
                              u3717 07DE                                u2685 0BBA  
                              u2861 0A31                                u3637 01C6  
                              _INTE 005C                                u2950 0C22  
                              u2790 0B06                                u2870 0A38  
                              _INTF 0059                                u2951 0C21  
                              u3727 07EE                                u2695 0BC6  
                              u2791 0B05                                u2775 0AEF  
                              u2871 0A37                                u3647 02F3  
                              u2880 0A3C                                u2945 0C09  
                              u3737 07F8                                u2785 0AFA  
                              u2881 0A3B                                u3657 035C  
                              u2970 0C40                                u2890 0A40  
                              u2971 0C3F                                u2955 0C1E  
                              u3747 0B24                                u2891 0A3F  
                              u3667 0E34                                _RCEN 048B  
                              u2965 0C32                                u3757 0B2A  
                              u3677 0F6C                                u2990 051A  
                              u3767 0B39                                u2991 0519  
                              u3687 0AA3                                u3777 0B46  
                              u2985 0A5F                                u3697 0A21  
                              u3787 0950                                i1l99 0902  
                              _RSEN 0489                                _Date 0038  
                  __end_of_I2C_NACK 08E0                                _Time 0043  
                 ?_LCD_Write_String 0077                                _edit 0EA2  
                              _main 003D                                _hour 0068  
                              _year 0064                                btemp 007E  
                  __end_of_I2C_Wait 08ED                    __end_of_I2C_Stop 08BD  
                              start 000C                  ??_LCD_Write_String 0079  
                 ___bmul@multiplier 0074                               ??_EXT 0070  
                  __end_of_LCD_DATA 0993              __end_of_decimal_to_bcd 0A79  
      __size_of_alarms_read_display 02CD                    __end_of_LCD_Init 0B7A  
                  ?_I2C_Master_Init 0052                               ?_edit 0054  
                             ?_main 0070                               _ACKEN 048C  
                             _ACKDT 048D                     __end_of___awdiv 0BE1  
                             STR_10 0824                               STR_11 0830  
                             STR_12 0811                               STR_13 0814  
                             STR_14 0818                               STR_15 0810  
                             STR_16 0814                               STR_17 0818  
                             STR_18 0810                     __end_of___awmod 0B15  
                   __end_of___lldiv 0C49                     ___awdiv@divisor 0072  
                   ___awdiv@counter 0076                               _PORTB 0006  
                             _TRISB 0086                               _TRISD 0088  
                             _SSPIF 0063                               u98_20 08FE  
                             u98_21 08FD              __end_of_LCD_Set_Cursor 0DEF  
                             _nRBPU 040F              __size_of_I2C_Read_Char 000B  
                             _blink 0A17                               _m_day 0066  
                             edit@x 0059                               edit@y 0054  
                             _w_day 0067                               _month 0065  
                 __end_of_I2C_Start 08B4                               pclath 000A  
                  __end_of_RTC_read 0D40               __end_of_w_day_display 0CB7  
                             status 0003                               wtemp0 007E  
                    _LCD_Write_Char 07B3                     __initialization 000F  
        __end_of_external_interrupt 08A2                        __end_of_edit 1000  
                      __end_of_main 0364                     ?_decimal_to_bcd 0070  
                         ??_I2C_ACK 0072                              ??_edit 0056  
                            ??_main 005A                           ??_LCD_CMD 0073  
                   ?_LCD_Set_Cursor 0075                              ?_blink 0070  
                            _ADCON1 009F                    ___awdiv@dividend 0074  
                            i1l1671 08FE                              i1l1669 08FA  
                            _INTEDG 040E                              _SSPADD 0093  
                            _TRISC3 043B                              _TRISC4 043C  
                            _TRISD2 0442                              _TRISD3 0443  
                            _SSPCON 0014                              _SSPBUF 0013  
                            _Alarm1 0020                              _Alarm2 00A0  
                  __end_of_debounce 0ABC              __end_of_LCD_Write_Char 07FE  
                     _I2C_Read_Char 08BD                              ___bmul 092C  
                         ??___awdiv 0076                           ??___awmod 0076  
                         ??___lldiv 004C                              _on_off 0DEF  
                  ___awdiv@quotient 0078                              _minute 007A  
                            _second 0069                              blink@j 0074  
                   ___awmod@divisor 0072                     ___awmod@counter 0076  
                         ?_I2C_NACK 0070                           ?_I2C_Wait 0070  
                         ?_I2C_Stop 0070                              saved_w 007E  
                         ?_LCD_DATA 0070  alarms_read_display@temperature_lsb 0054  
alarms_read_display@temperature_msb 0053             __end_of__initialization 0039  
                         ?_LCD_Init 0070                     ?_LCD_Write_Char 0070  
               ___bmul@multiplicand 0072                      ?_I2C_Read_Char 0070  
                    __pcstackCOMMON 0070                        __pidataBANK0 09BB  
                      __pidataBANK1 08ED                       __end_of_blink 0A47  
                      ?_RTC_display 0070                           ?_RTC_read 0070  
                        ??_I2C_NACK 0072                          ??_I2C_Wait 0072  
                        ??_I2C_Stop 0072                             ??_blink 0072  
               _alarms_read_display 0364                          __pbssBANK0 005D  
                        ??_LCD_DATA 0072                          ??_LCD_Init 0075  
                        __pmaintext 003D                             ?___bmul 0072  
                        __pintentry 0004                ?_alarms_read_display 0070  
                           _I2C_ACK 08C8             __size_of_I2C_Write_Char 0010  
                           _ACKSTAT 048E                             ?_on_off 0054  
         __size_of_LCD_Write_String 0030                          ??_RTC_read 0073  
                     ??_I2C_Restart 0072                             _LCD_CMD 0941  
                         ?_debounce 0070             __size_of_bcd_to_decimal 0018  
                           _SSPCON2 0091                             _SSPSTAT 0094  
                        __stringtab 0800                           _I2C_Start 08AB  
                   ??_I2C_Read_Char 0072                    ??_decimal_to_bcd 004C  
                   __size_of___bmul 0015               ??_alarms_read_display 0050  
                           ___awdiv 0B7A                             ___awmod 0ABC  
                           ___lldiv 0BE1                         _Temperature 002D  
                     edit@parameter 0055                     __size_of_on_off 00B3  
                  ??_LCD_Set_Cursor 0076                             __ptext1 0DEF  
                           __ptext2 089B                             __ptext3 0EA2  
                           __ptext4 0A79                             __ptext5 0A17  
                           __ptext6 0CB7                             __ptext7 0631  
                           __ptext8 0C49                             __ptext9 0A47  
                      __size_of_EXT 000F                  _external_interrupt 089B  
                  ___awmod@dividend 0074                          ??_debounce 0072  
          __size_of_I2C_Master_Init 0028                       debounce@count 0075  
               __end_of_I2C_Restart 08AB                end_of_initialization 0039  
               ?_external_interrupt 0070                             on_off@x 0059  
                           on_off@y 0054                          ?_I2C_Start 0070  
                   ___lldiv@divisor 0072                     ___lldiv@counter 0051  
              ??_external_interrupt 0072                       _alarm1_minute 0063  
                     _alarm2_minute 0061                       _alarm1_status 005E  
                     _alarm2_status 005D              __size_of_w_day_display 006E  
                        LCD_CMD@CMD 0074                __size_of_RTC_display 0182  
                 __size_of_I2C_NACK 000C                   __size_of_I2C_Wait 000D  
                 __size_of_I2C_Stop 0009                   LCD_Write_String@i 004C  
                  ??_LCD_Write_Char 0073                          _status_reg 005F  
                 __size_of_LCD_DATA 0022                   __size_of_LCD_Init 0065  
                    _I2C_Write_Char 0909                      __end_of___bmul 0941  
                  _LCD_Write_String 09E7                      __end_of_on_off 0EA2  
                       _I2C_Restart 08A2                   __size_of_RTC_read 0089  
               start_initialization 000F                      _bcd_to_decimal 0959  
                       __end_of_EXT 0909                   ??_I2C_Master_Init 007A  
                     _w_day_display 0C49                         ??_I2C_Start 0072  
            __end_of_I2C_Write_Char 0919                            ??___bmul 0073  
                        init_fetch0 0919                         __pdataBANK0 0020  
                       __pdataBANK1 00A0                            ?_I2C_ACK 0070  
                          ??_on_off 0056                         _alarm1_hour 0062  
                       _alarm2_hour 0060              __end_of_bcd_to_decimal 0971  
                          ?_LCD_CMD 0070                         __pbssCOMMON 007A  
                         ___latbits 0002                       __pcstackBANK0 004C  
                 __size_of_debounce 0043      alarms_read_display@control_reg 0052  
                    ?_w_day_display 0070                     ?_I2C_Write_Char 0070  
                          ?___awdiv 0072                            ?___awmod 0072  
                          ?___lldiv 0072                           __pstrings 0800  
                          _I2C_NACK 08D4                     ?_bcd_to_decimal 0070  
                          _I2C_Wait 08E0                            _I2C_Stop 08B4  
                    __size_of_blink 0030                bcd_to_decimal@number 0077  
                          _LCD_DATA 0971                           debounce@i 0076  
                 interrupt_function 0004                            _LCD_Init 0B15  
       __end_of_alarms_read_display 0631               __end_of_I2C_Read_Char 08C8  
                  __size_of_I2C_ACK 000C                         __stringbase 080F  
                          _RTC_read 0CB7                    __size_of_LCD_CMD 0018  
              LCD_Set_Cursor@column 0075                     ??_w_day_display 0050  
          __end_of_LCD_Write_String 0A17                 LCD_Write_Char@High4 0075  
       __size_of_external_interrupt 0007                    __size_of___awdiv 0067  
                  __size_of___awmod 0059                    __size_of___lldiv 0068  
                     ??_RTC_display 0052                  __end_of__stringtab 0810  
           __size_of_decimal_to_bcd 0032                        ?_I2C_Restart 0070  
                   _I2C_Master_Init 0993                            _debounce 0A79  
                          __ptext10 0364                            __ptext11 0959  
                          __ptext20 08AB                            __ptext12 092C  
                          __ptext21 08A2                            __ptext13 0ABC  
                          __ptext30 0BE1                            __ptext22 08BD  
                          __ptext14 0B7A                            __ptext31 08FA  
                          __ptext23 08D4                            __ptext15 09E7  
                          __ptext24 08C8                            __ptext16 07B3  
                          __ptext25 08E0                            __ptext17 0D40  
                          __ptext26 0B15                            __ptext18 0909  
                          __ptext27 0941                            __ptext19 08B4  
                          __ptext28 0971                            __ptext29 0993  
           __size_of_LCD_Set_Cursor 00AF                       __size_of_edit 015E  
                     __size_of_main 0327                decimal_to_bcd@number 0051  
               LCD_Set_Cursor@High4 004E                      debounce@button 0074  
                LCD_Write_Char@Data 0076                  LCD_Write_Char@Low4 0074  
                          init_ram0 091D                 __end_of_RTC_display 07B3  
                          intlevel1 0000                            on_off@al 0055  
                  ___lldiv@dividend 0076                    ??_I2C_Write_Char 0072  
                         stringcode 080A         I2C_Master_Init@I2C_BaudRate 0052  
           __size_of_LCD_Write_Char 004B                  LCD_Set_Cursor@Low4 004D  
                LCD_Set_Cursor@Temp 004F                    ??_bcd_to_decimal 0075  
           __end_of_I2C_Master_Init 09BB                        LCD_DATA@Data 0072  
                  ___lldiv@quotient 004D                            stringdir 080A  
                          stringtab 0800                   LCD_Set_Cursor@row 004C  
                I2C_Write_Char@Data 0072  
