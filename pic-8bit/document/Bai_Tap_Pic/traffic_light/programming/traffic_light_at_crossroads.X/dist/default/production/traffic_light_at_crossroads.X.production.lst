

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jan 22 08:39:00 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179  0434                     __pidataBANK0:
   180                           
   181                           ;initializer for _number
   182  0434  34C0               	retlw	192
   183  0435  34F9               	retlw	249
   184  0436  34A4               	retlw	164
   185  0437  34B0               	retlw	176
   186  0438  3499               	retlw	153
   187  0439  3492               	retlw	146
   188  043A  3482               	retlw	130
   189  043B  34F8               	retlw	248
   190  043C  3480               	retlw	128
   191  043D  3490               	retlw	144
   192                           
   193                           ;initializer for _rush_hour_state
   194  043E  3401               	retlw	1
   195  043F  3400               	retlw	0
   196                           
   197                           ;initializer for _rain_stare
   198  0440  3401               	retlw	1
   199  0441  3400               	retlw	0
   200                           
   201                           ;initializer for _night_state
   202  0442  3401               	retlw	1
   203  0443  3400               	retlw	0
   204                           
   205                           ;initializer for _normal_state
   206  0444  3401               	retlw	1
   207  0445  3400               	retlw	0
   208                           
   209                           ;initializer for _macdinh
   210  0446  3401               	retlw	1
   211  0447  3400               	retlw	0
   212  0007                     _PORTCbits	set	7
   213  0006                     _PORTBbits	set	6
   214  0008                     _PORTD	set	8
   215  0005                     _PORTAbits	set	5
   216  0087                     _TRISCbits	set	135
   217  0086                     _TRISBbits	set	134
   218  0088                     _TRISD	set	136
   219  0085                     _TRISAbits	set	133
   220  009F                     _ADCON1	set	159
   221                           
   222                           	psect	cinit
   223  07E2                     start_initialization:	
   224                           ; #config settings
   225                           
   226  07E2                     __initialization:
   227                           
   228                           ; Initialize objects allocated to BANK0
   229  07E2  1383               	bcf	3,7	;select IRP bank0
   230  07E3  3034               	movlw	low (__pdataBANK0+20)
   231  07E4  00FD               	movwf	btemp+-1
   232  07E5  3004               	movlw	high __pidataBANK0
   233  07E6  00FE               	movwf	btemp
   234  07E7  3034               	movlw	low __pidataBANK0
   235  07E8  00FF               	movwf	btemp+1
   236  07E9  3020               	movlw	low __pdataBANK0
   237  07EA  0084               	movwf	4
   238  07EB  120A  118A  2425  120A  118A  	fcall	init_ram0
   239                           
   240                           ; Clear objects allocated to BANK0
   241  07F0  01B4               	clrf	__pbssBANK0& (0+127)
   242  07F1  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   243  07F2  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   244  07F3  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   245  07F4  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   246  07F5  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   247  07F6  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   248  07F7  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   249  07F8  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   250  07F9  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   251  07FA  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   252  07FB  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   253  07FC                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  07FC                     __end_of__initialization:
   257  07FC  0183               	clrf	3
   258  07FD  120A  118A  2E48   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	bssBANK0
   261  0034                     __pbssBANK0:
   262  0034                     _chuc2:
   263  0034                     	ds	2
   264  0036                     _donvi2:
   265  0036                     	ds	2
   266  0038                     _num2:
   267  0038                     	ds	2
   268  003A                     _chuc1:
   269  003A                     	ds	2
   270  003C                     _donvi1:
   271  003C                     	ds	2
   272  003E                     _num1:
   273  003E                     	ds	2
   274                           
   275                           	psect	dataBANK0
   276  0020                     __pdataBANK0:
   277  0020                     _number:
   278  0020                     	ds	10
   279  002A                     _rush_hour_state:
   280  002A                     	ds	2
   281  002C                     _rain_stare:
   282  002C                     	ds	2
   283  002E                     _night_state:
   284  002E                     	ds	2
   285  0030                     _normal_state:
   286  0030                     	ds	2
   287  0032                     _macdinh:
   288  0032                     	ds	2
   289                           
   290                           	psect	inittext
   291  0421                     init_fetch0:	
   292                           ;	Called with low address in FSR and high address in W
   293                           
   294  0421  087E               	movf	btemp,w
   295  0422  008A               	movwf	10
   296  0423  087F               	movf	btemp+1,w
   297  0424  0082               	movwf	2
   298  0425                     init_ram0:	
   299                           ;Called with:
   300                           ;	high address of idata address in btemp 
   301                           ;	low address of idata address in btemp+1 
   302                           ;	low address of data in FSR
   303                           ;	high address + 1 of data in btemp-1
   304                           
   305  0425  120A  118A  2421  120A  118A  	fcall	init_fetch0
   306  042A  0080               	movwf	0
   307  042B  0A84               	incf	4,f
   308  042C  0804               	movf	4,w
   309  042D  067D               	xorwf	btemp+-1,w
   310  042E  1903               	btfsc	3,2
   311  042F  3400               	retlw	0
   312  0430  0AFF               	incf	btemp+1,f
   313  0431  1903               	btfsc	3,2
   314  0432  0AFE               	incf	btemp,f
   315  0433  2C25               	goto	init_ram0
   316                           
   317                           	psect	cstackCOMMON
   318  0070                     __pcstackCOMMON:
   319  0070                     ?_init_cofig:
   320  0070                     ??_init_cofig:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_rain_mode:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_hienThi:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?___awdiv:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?___awmod:	
   336                           ; 2 bytes @ 0x0
   337                           
   338  0070                     rain_mode@value_ms:	
   339                           ; 2 bytes @ 0x0
   340                           
   341  0070                     ___awdiv@divisor:	
   342                           ; 2 bytes @ 0x0
   343                           
   344  0070                     ___awmod@divisor:	
   345                           ; 2 bytes @ 0x0
   346                           
   347                           
   348                           ; 2 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ??_rain_mode:
   351  0072                     ___awdiv@dividend:	
   352                           ; 1 bytes @ 0x2
   353                           
   354  0072                     ___awmod@dividend:	
   355                           ; 2 bytes @ 0x2
   356                           
   357                           
   358                           ; 2 bytes @ 0x2
   359  0072                     	ds	2
   360  0074                     ??___awdiv:
   361  0074                     ??___awmod:	
   362                           ; 1 bytes @ 0x4
   363                           
   364  0074                     ___awdiv@counter:	
   365                           ; 1 bytes @ 0x4
   366                           
   367  0074                     ___awmod@counter:	
   368                           ; 1 bytes @ 0x4
   369                           
   370  0074                     rain_mode@i:	
   371                           ; 1 bytes @ 0x4
   372                           
   373                           
   374                           ; 2 bytes @ 0x4
   375  0074                     	ds	1
   376  0075                     ___awdiv@sign:
   377  0075                     ___awmod@sign:	
   378                           ; 1 bytes @ 0x5
   379                           
   380                           
   381                           ; 1 bytes @ 0x5
   382  0075                     	ds	1
   383  0076                     rain_mode@i_240:
   384  0076                     ___awdiv@quotient:	
   385                           ; 2 bytes @ 0x6
   386                           
   387                           
   388                           ; 2 bytes @ 0x6
   389  0076                     	ds	2
   390  0078                     ?_night_mode:
   391  0078                     ??_hienThi:	
   392                           ; 1 bytes @ 0x8
   393                           
   394  0078                     night_mode@value:	
   395                           ; 1 bytes @ 0x8
   396                           
   397                           
   398                           ; 2 bytes @ 0x8
   399  0078                     	ds	2
   400  007A                     ??_night_mode:
   401                           
   402                           ; 1 bytes @ 0xA
   403  007A                     	ds	1
   404  007B                     hienThi@count:
   405                           
   406                           ; 2 bytes @ 0xB
   407  007B                     	ds	2
   408  007D                     ??_normal_mode:
   409  007D                     ??_rush_hour_mode:	
   410                           ; 1 bytes @ 0xD
   411                           
   412                           
   413                           	psect	cstackBANK0
   414  0040                     __pcstackBANK0:	
   415                           ; 1 bytes @ 0xD
   416                           
   417  0040                     ?_normal_mode:
   418  0040                     normal_mode@value:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423  0040                     	ds	2
   424  0042                     normal_mode@temp1:
   425                           
   426                           ; 2 bytes @ 0x2
   427  0042                     	ds	2
   428  0044                     ?_rush_hour_mode:
   429  0044                     rush_hour_mode@digit:	
   430                           ; 1 bytes @ 0x4
   431                           
   432                           
   433                           ; 2 bytes @ 0x4
   434  0044                     	ds	2
   435  0046                     ??_main:
   436                           
   437                           ; 1 bytes @ 0x6
   438  0046                     	ds	3
   439                           
   440                           	psect	maintext
   441  0648                     __pmaintext:	
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 89 in file "main_traffic_light.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : B00/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0
   463 ;;      Temps:          0       3       0       0       0
   464 ;;      Totals:         0       3       0       0       0
   465 ;;Total ram usage:        3 bytes
   466 ;; Hardware stack levels required when called:    4
   467 ;; This function calls:
   468 ;;		_init_cofig
   469 ;;		_night_mode
   470 ;;		_normal_mode
   471 ;;		_rain_mode
   472 ;;		_rush_hour_mode
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _main
   480  0648                     _main:
   481  0648                     l1254:	
   482                           ;incstack = 0
   483                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   484                           
   485                           
   486                           ;main_traffic_light.c: 91:     init_cofig();
   487  0648  120A  118A  2448  120A  118A  	fcall	_init_cofig
   488  064D                     l1256:
   489                           
   490                           ;main_traffic_light.c: 94:     {;main_traffic_light.c: 95:         if(PORTAbits.RA0 != m
      +                          acdinh)
   491  064D  1283               	bcf	3,5	;RP0=0, select bank0
   492  064E  1303               	bcf	3,6	;RP1=0, select bank0
   493  064F  0805               	movf	5,w	;volatile
   494  0650  3901               	andlw	1
   495  0651  00C6               	movwf	??_main
   496  0652  01C7               	clrf	??_main+1
   497  0653  0833               	movf	_macdinh+1,w
   498  0654  0647               	xorwf	??_main+1,w
   499  0655  1D03               	skipz
   500  0656  2E59               	goto	u855
   501  0657  0832               	movf	_macdinh,w
   502  0658  0646               	xorwf	??_main,w
   503  0659                     u855:
   504  0659  1903               	skipnz
   505  065A  2E5C               	goto	u851
   506  065B  2E5D               	goto	u850
   507  065C                     u851:
   508  065C  2E63               	goto	l1262
   509  065D                     u850:
   510  065D                     l1258:
   511                           
   512                           ;main_traffic_light.c: 96:         if( !PORTAbits.RA0 )
   513  065D  1805               	btfsc	5,0	;volatile
   514  065E  2E60               	goto	u861
   515  065F  2E61               	goto	u860
   516  0660                     u861:
   517  0660  2E63               	goto	l1262
   518  0661                     u860:
   519  0661                     l1260:
   520                           
   521                           ;main_traffic_light.c: 97:             normal_state=0;
   522  0661  01B0               	clrf	_normal_state
   523  0662  01B1               	clrf	_normal_state+1
   524  0663                     l1262:
   525                           
   526                           ;main_traffic_light.c: 98:         macdinh=PORTAbits.RA0;
   527  0663  0805               	movf	5,w	;volatile
   528  0664  3901               	andlw	1
   529  0665  00C6               	movwf	??_main
   530  0666  01C7               	clrf	??_main+1
   531  0667  0846               	movf	??_main,w
   532  0668  00B2               	movwf	_macdinh
   533  0669  0847               	movf	??_main+1,w
   534  066A  00B3               	movwf	_macdinh+1
   535  066B                     l1264:
   536                           
   537                           ;main_traffic_light.c: 100:         if(PORTAbits.RA1 != macdinh)
   538  066B  0C05               	rrf	5,w	;volatile
   539  066C  3901               	andlw	1
   540  066D  00C6               	movwf	??_main
   541  066E  01C7               	clrf	??_main+1
   542  066F  0833               	movf	_macdinh+1,w
   543  0670  0647               	xorwf	??_main+1,w
   544  0671  1D03               	skipz
   545  0672  2E75               	goto	u875
   546  0673  0832               	movf	_macdinh,w
   547  0674  0646               	xorwf	??_main,w
   548  0675                     u875:
   549  0675  1903               	skipnz
   550  0676  2E78               	goto	u871
   551  0677  2E79               	goto	u870
   552  0678                     u871:
   553  0678  2E7F               	goto	l1270
   554  0679                     u870:
   555  0679                     l1266:
   556                           
   557                           ;main_traffic_light.c: 101:         if( !PORTAbits.RA1 )
   558  0679  1885               	btfsc	5,1	;volatile
   559  067A  2E7C               	goto	u881
   560  067B  2E7D               	goto	u880
   561  067C                     u881:
   562  067C  2E7F               	goto	l1270
   563  067D                     u880:
   564  067D                     l1268:
   565                           
   566                           ;main_traffic_light.c: 102:             rush_hour_state=0;
   567  067D  01AA               	clrf	_rush_hour_state
   568  067E  01AB               	clrf	_rush_hour_state+1
   569  067F                     l1270:
   570                           
   571                           ;main_traffic_light.c: 103:         macdinh=PORTAbits.RA1;
   572  067F  0C05               	rrf	5,w	;volatile
   573  0680  3901               	andlw	1
   574  0681  00C6               	movwf	??_main
   575  0682  01C7               	clrf	??_main+1
   576  0683  0846               	movf	??_main,w
   577  0684  00B2               	movwf	_macdinh
   578  0685  0847               	movf	??_main+1,w
   579  0686  00B3               	movwf	_macdinh+1
   580  0687                     l1272:
   581                           
   582                           ;main_traffic_light.c: 105:         if(PORTAbits.RA2 != macdinh)
   583  0687  0C05               	rrf	5,w	;volatile
   584  0688  00C6               	movwf	??_main
   585  0689  0C46               	rrf	??_main,w
   586  068A  3901               	andlw	1
   587  068B  00C7               	movwf	??_main+1
   588  068C  01C8               	clrf	??_main+2
   589  068D  0833               	movf	_macdinh+1,w
   590  068E  0648               	xorwf	??_main+2,w
   591  068F  1D03               	skipz
   592  0690  2E93               	goto	u895
   593  0691  0832               	movf	_macdinh,w
   594  0692  0647               	xorwf	??_main+1,w
   595  0693                     u895:
   596  0693  1903               	skipnz
   597  0694  2E96               	goto	u891
   598  0695  2E97               	goto	u890
   599  0696                     u891:
   600  0696  2E9D               	goto	l1278
   601  0697                     u890:
   602  0697                     l1274:
   603                           
   604                           ;main_traffic_light.c: 106:         if( !PORTAbits.RA2 )
   605  0697  1905               	btfsc	5,2	;volatile
   606  0698  2E9A               	goto	u901
   607  0699  2E9B               	goto	u900
   608  069A                     u901:
   609  069A  2E9D               	goto	l1278
   610  069B                     u900:
   611  069B                     l1276:
   612                           
   613                           ;main_traffic_light.c: 107:             night_state=0;
   614  069B  01AE               	clrf	_night_state
   615  069C  01AF               	clrf	_night_state+1
   616  069D                     l1278:
   617                           
   618                           ;main_traffic_light.c: 108:         macdinh=PORTAbits.RA2;
   619  069D  0C05               	rrf	5,w	;volatile
   620  069E  00C6               	movwf	??_main
   621  069F  0C46               	rrf	??_main,w
   622  06A0  3901               	andlw	1
   623  06A1  00C7               	movwf	??_main+1
   624  06A2  01C8               	clrf	??_main+2
   625  06A3  0847               	movf	??_main+1,w
   626  06A4  00B2               	movwf	_macdinh
   627  06A5  0848               	movf	??_main+2,w
   628  06A6  00B3               	movwf	_macdinh+1
   629  06A7                     l1280:
   630                           
   631                           ;main_traffic_light.c: 110:         if(PORTAbits.RA3 != macdinh)
   632  06A7  0C05               	rrf	5,w	;volatile
   633  06A8  00C6               	movwf	??_main
   634  06A9  0CC6               	rrf	??_main,f
   635  06AA  0C46               	rrf	??_main,w
   636  06AB  3901               	andlw	1
   637  06AC  00C7               	movwf	??_main+1
   638  06AD  01C8               	clrf	??_main+2
   639  06AE  0833               	movf	_macdinh+1,w
   640  06AF  0648               	xorwf	??_main+2,w
   641  06B0  1D03               	skipz
   642  06B1  2EB4               	goto	u915
   643  06B2  0832               	movf	_macdinh,w
   644  06B3  0647               	xorwf	??_main+1,w
   645  06B4                     u915:
   646  06B4  1903               	skipnz
   647  06B5  2EB7               	goto	u911
   648  06B6  2EB8               	goto	u910
   649  06B7                     u911:
   650  06B7  2EBE               	goto	l1286
   651  06B8                     u910:
   652  06B8                     l1282:
   653                           
   654                           ;main_traffic_light.c: 111:         if( !PORTAbits.RA3 )
   655  06B8  1985               	btfsc	5,3	;volatile
   656  06B9  2EBB               	goto	u921
   657  06BA  2EBC               	goto	u920
   658  06BB                     u921:
   659  06BB  2EBE               	goto	l1286
   660  06BC                     u920:
   661  06BC                     l1284:
   662                           
   663                           ;main_traffic_light.c: 112:             rain_stare=0;
   664  06BC  01AC               	clrf	_rain_stare
   665  06BD  01AD               	clrf	_rain_stare+1
   666  06BE                     l1286:
   667                           
   668                           ;main_traffic_light.c: 113:         macdinh=PORTAbits.RA3;
   669  06BE  0C05               	rrf	5,w	;volatile
   670  06BF  00C6               	movwf	??_main
   671  06C0  0CC6               	rrf	??_main,f
   672  06C1  0C46               	rrf	??_main,w
   673  06C2  3901               	andlw	1
   674  06C3  00C7               	movwf	??_main+1
   675  06C4  01C8               	clrf	??_main+2
   676  06C5  0847               	movf	??_main+1,w
   677  06C6  00B2               	movwf	_macdinh
   678  06C7  0848               	movf	??_main+2,w
   679  06C8  00B3               	movwf	_macdinh+1
   680  06C9                     l1288:
   681                           
   682                           ;main_traffic_light.c: 115:         if(!normal_state )
   683  06C9  0830               	movf	_normal_state,w
   684  06CA  0431               	iorwf	_normal_state+1,w
   685  06CB  1D03               	btfss	3,2
   686  06CC  2ECE               	goto	u931
   687  06CD  2ECF               	goto	u930
   688  06CE                     u931:
   689  06CE  2ED8               	goto	l1292
   690  06CF                     u930:
   691  06CF                     l1290:
   692                           
   693                           ;main_traffic_light.c: 116:             normal_mode(30);
   694  06CF  301E               	movlw	30
   695  06D0  00C0               	movwf	normal_mode@value
   696  06D1  3000               	movlw	0
   697  06D2  00C1               	movwf	normal_mode@value+1
   698  06D3  120A  118A  270F  120A  118A  	fcall	_normal_mode
   699  06D8                     l1292:
   700                           
   701                           ;main_traffic_light.c: 118:         if(rush_hour_state)
   702  06D8  1283               	bcf	3,5	;RP0=0, select bank0
   703  06D9  1303               	bcf	3,6	;RP1=0, select bank0
   704  06DA  082A               	movf	_rush_hour_state,w
   705  06DB  042B               	iorwf	_rush_hour_state+1,w
   706  06DC  1903               	btfsc	3,2
   707  06DD  2EDF               	goto	u941
   708  06DE  2EE0               	goto	u940
   709  06DF                     u941:
   710  06DF  2EE9               	goto	l1296
   711  06E0                     u940:
   712  06E0                     l1294:
   713                           
   714                           ;main_traffic_light.c: 119:             rush_hour_mode(60);
   715  06E0  303C               	movlw	60
   716  06E1  00C4               	movwf	rush_hour_mode@digit
   717  06E2  3000               	movlw	0
   718  06E3  00C5               	movwf	rush_hour_mode@digit+1
   719  06E4  120A  118A  2415  120A  118A  	fcall	_rush_hour_mode
   720  06E9                     l1296:
   721                           
   722                           ;main_traffic_light.c: 121:         if(!night_state)
   723  06E9  1283               	bcf	3,5	;RP0=0, select bank0
   724  06EA  1303               	bcf	3,6	;RP1=0, select bank0
   725  06EB  082E               	movf	_night_state,w
   726  06EC  042F               	iorwf	_night_state+1,w
   727  06ED  1D03               	btfss	3,2
   728  06EE  2EF0               	goto	u951
   729  06EF  2EF1               	goto	u950
   730  06F0                     u951:
   731  06F0  2EFA               	goto	l1300
   732  06F1                     u950:
   733  06F1                     l1298:
   734                           
   735                           ;main_traffic_light.c: 122:             rain_mode(500);
   736  06F1  30F4               	movlw	244
   737  06F2  00F0               	movwf	rain_mode@value_ms
   738  06F3  3001               	movlw	1
   739  06F4  00F1               	movwf	rain_mode@value_ms+1
   740  06F5  120A  118A  2472  120A  118A  	fcall	_rain_mode
   741  06FA                     l1300:
   742                           
   743                           ;main_traffic_light.c: 124:         if(!night_state)
   744  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   745  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   746  06FC  082E               	movf	_night_state,w
   747  06FD  042F               	iorwf	_night_state+1,w
   748  06FE  1D03               	btfss	3,2
   749  06FF  2F01               	goto	u961
   750  0700  2F02               	goto	u960
   751  0701                     u961:
   752  0701  2E4D               	goto	l1256
   753  0702                     u960:
   754  0702                     l1302:
   755                           
   756                           ;main_traffic_light.c: 125:             night_mode(500);
   757  0702  30F4               	movlw	244
   758  0703  00F8               	movwf	night_mode@value
   759  0704  3001               	movlw	1
   760  0705  00F9               	movwf	night_mode@value+1
   761  0706  120A  118A  240B  120A  118A  	fcall	_night_mode
   762  070B  2E4D               	goto	l1256
   763  070C  120A  118A  2800   	ljmp	start
   764  070F                     __end_of_main:
   765                           
   766                           	psect	text1
   767  0415                     __ptext1:	
   768 ;; *************** function _rush_hour_mode *****************
   769 ;; Defined at:
   770 ;;		line 245 in file "main_traffic_light.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  digit           2    4[BANK0 ] int 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       2       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         0       2       0       0       0
   788 ;;Total ram usage:        2 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    3
   791 ;; This function calls:
   792 ;;		_normal_mode
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _rush_hour_mode
   800  0415                     _rush_hour_mode:
   801  0415                     l1250:	
   802                           ;incstack = 0
   803                           ; Regs used in _rush_hour_mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   804                           
   805                           
   806                           ;main_traffic_light.c: 246:     normal_mode(digit);
   807  0415  1283               	bcf	3,5	;RP0=0, select bank0
   808  0416  1303               	bcf	3,6	;RP1=0, select bank0
   809  0417  0845               	movf	rush_hour_mode@digit+1,w
   810  0418  00C1               	movwf	normal_mode@value+1
   811  0419  0844               	movf	rush_hour_mode@digit,w
   812  041A  00C0               	movwf	normal_mode@value
   813  041B  120A  118A  270F  120A  118A  	fcall	_normal_mode
   814  0420                     l105:
   815  0420  0008               	return
   816  0421                     __end_of_rush_hour_mode:
   817                           
   818                           	psect	text2
   819  070F                     __ptext2:	
   820 ;; *************** function _normal_mode *****************
   821 ;; Defined at:
   822 ;;		line 198 in file "main_traffic_light.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  value           2    0[BANK0 ] int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  temp1           2    2[BANK0 ] int 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       2       0       0       0
   837 ;;      Locals:         0       2       0       0       0
   838 ;;      Temps:          0       0       0       0       0
   839 ;;      Totals:         0       4       0       0       0
   840 ;;Total ram usage:        4 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    2
   843 ;; This function calls:
   844 ;;		_hienThi
   845 ;; This function is called by:
   846 ;;		_main
   847 ;;		_rush_hour_mode
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _normal_mode
   853  070F                     _normal_mode:
   854  070F                     l1128:	
   855                           ;incstack = 0
   856                           ; Regs used in _normal_mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   857                           
   858                           
   859                           ;main_traffic_light.c: 199:     int temp1 = 5;
   860  070F  3005               	movlw	5
   861  0710  1283               	bcf	3,5	;RP0=0, select bank0
   862  0711  1303               	bcf	3,6	;RP1=0, select bank0
   863  0712  00C2               	movwf	normal_mode@temp1
   864  0713  3000               	movlw	0
   865  0714  00C3               	movwf	normal_mode@temp1+1
   866  0715                     l1130:
   867                           
   868                           ;main_traffic_light.c: 200:     num1= value+temp1;
   869  0715  0840               	movf	normal_mode@value,w
   870  0716  3E05               	addlw	5
   871  0717  00BE               	movwf	_num1
   872  0718  0841               	movf	normal_mode@value+1,w
   873  0719  1803               	skipnc
   874  071A  3E01               	addlw	1
   875  071B  3E00               	addlw	0
   876  071C  00BF               	movwf	_num1+1
   877  071D                     l1132:
   878                           
   879                           ;main_traffic_light.c: 201:     num2= value;
   880  071D  0841               	movf	normal_mode@value+1,w
   881  071E  00B9               	movwf	_num2+1
   882  071F  0840               	movf	normal_mode@value,w
   883  0720  00B8               	movwf	_num2
   884  0721                     l1134:
   885                           
   886                           ;main_traffic_light.c: 203:         PORTD = 0xFF;
   887  0721  30FF               	movlw	255
   888  0722  0088               	movwf	8	;volatile
   889  0723                     l1136:
   890                           
   891                           ;main_traffic_light.c: 204:         PORTCbits.RC0 = PORTCbits.RC5 = 1;
   892  0723  1687               	bsf	7,5	;volatile
   893  0724  1A87               	btfsc	7,5	;volatile
   894  0725  2F27               	goto	u691
   895  0726  2F2B               	goto	u690
   896  0727                     u691:
   897  0727  1283               	bcf	3,5	;RP0=0, select bank0
   898  0728  1303               	bcf	3,6	;RP1=0, select bank0
   899  0729  1407               	bsf	7,0	;volatile
   900  072A  2F2E               	goto	u704
   901  072B                     u690:
   902  072B  1283               	bcf	3,5	;RP0=0, select bank0
   903  072C  1303               	bcf	3,6	;RP1=0, select bank0
   904  072D  1007               	bcf	7,0	;volatile
   905  072E                     u704:
   906  072E                     l1138:
   907                           
   908                           ;main_traffic_light.c: 205:         PORTCbits.RC1 = PORTCbits.RC2 = 0;
   909  072E  1107               	bcf	7,2	;volatile
   910  072F  1087               	bcf	7,1	;volatile
   911  0730                     l1140:
   912                           
   913                           ;main_traffic_light.c: 206:         PORTCbits.RC4 = PORTCbits.RC3 = 0;
   914  0730  1187               	bcf	7,3	;volatile
   915  0731  1207               	bcf	7,4	;volatile
   916  0732                     l1142:
   917                           
   918                           ;main_traffic_light.c: 207:         hienThi();
   919  0732  120A  118A  2588  120A  118A  	fcall	_hienThi
   920  0737                     l1144:
   921                           
   922                           ;main_traffic_light.c: 208:         num1--;
   923  0737  30FF               	movlw	255
   924  0738  1283               	bcf	3,5	;RP0=0, select bank0
   925  0739  1303               	bcf	3,6	;RP1=0, select bank0
   926  073A  07BE               	addwf	_num1,f
   927  073B  1803               	skipnc
   928  073C  0ABF               	incf	_num1+1,f
   929  073D  30FF               	movlw	255
   930  073E  07BF               	addwf	_num1+1,f
   931  073F                     l1146:
   932                           
   933                           ;main_traffic_light.c: 209:         num2--;
   934  073F  30FF               	movlw	255
   935  0740  07B8               	addwf	_num2,f
   936  0741  1803               	skipnc
   937  0742  0AB9               	incf	_num2+1,f
   938  0743  30FF               	movlw	255
   939  0744  07B9               	addwf	_num2+1,f
   940  0745                     l1148:
   941                           
   942                           ;main_traffic_light.c: 210:     }while(num2 != 0);
   943  0745  0838               	movf	_num2,w
   944  0746  0439               	iorwf	_num2+1,w
   945  0747  1D03               	btfss	3,2
   946  0748  2F4A               	goto	u711
   947  0749  2F4B               	goto	u710
   948  074A                     u711:
   949  074A  2F21               	goto	l1134
   950  074B                     u710:
   951  074B                     l1150:
   952                           
   953                           ;main_traffic_light.c: 212:     num1=num2=temp1;
   954  074B  0843               	movf	normal_mode@temp1+1,w
   955  074C  00B9               	movwf	_num2+1
   956  074D  0842               	movf	normal_mode@temp1,w
   957  074E  00B8               	movwf	_num2
   958  074F  0839               	movf	_num2+1,w
   959  0750  00BF               	movwf	_num1+1
   960  0751  0838               	movf	_num2,w
   961  0752  00BE               	movwf	_num1
   962  0753                     l1152:
   963                           
   964                           ;main_traffic_light.c: 214:         PORTCbits.RC1=PORTCbits.RC5=1;
   965  0753  1687               	bsf	7,5	;volatile
   966  0754  1A87               	btfsc	7,5	;volatile
   967  0755  2F57               	goto	u721
   968  0756  2F5B               	goto	u720
   969  0757                     u721:
   970  0757  1283               	bcf	3,5	;RP0=0, select bank0
   971  0758  1303               	bcf	3,6	;RP1=0, select bank0
   972  0759  1487               	bsf	7,1	;volatile
   973  075A  2F5E               	goto	u734
   974  075B                     u720:
   975  075B  1283               	bcf	3,5	;RP0=0, select bank0
   976  075C  1303               	bcf	3,6	;RP1=0, select bank0
   977  075D  1087               	bcf	7,1	;volatile
   978  075E                     u734:
   979  075E                     l1154:
   980                           
   981                           ;main_traffic_light.c: 215:         PORTCbits.RC2 = PORTCbits.RC0 = 0;
   982  075E  1007               	bcf	7,0	;volatile
   983  075F  1107               	bcf	7,2	;volatile
   984  0760                     l1156:
   985                           
   986                           ;main_traffic_light.c: 216:         PORTCbits.RC4 = PORTCbits.RC3 = 0;
   987  0760  1187               	bcf	7,3	;volatile
   988  0761  1207               	bcf	7,4	;volatile
   989  0762                     l1158:
   990                           
   991                           ;main_traffic_light.c: 217:         hienThi();
   992  0762  120A  118A  2588  120A  118A  	fcall	_hienThi
   993  0767                     l1160:
   994                           
   995                           ;main_traffic_light.c: 218:         num1--;
   996  0767  30FF               	movlw	255
   997  0768  1283               	bcf	3,5	;RP0=0, select bank0
   998  0769  1303               	bcf	3,6	;RP1=0, select bank0
   999  076A  07BE               	addwf	_num1,f
  1000  076B  1803               	skipnc
  1001  076C  0ABF               	incf	_num1+1,f
  1002  076D  30FF               	movlw	255
  1003  076E  07BF               	addwf	_num1+1,f
  1004  076F                     l1162:
  1005                           
  1006                           ;main_traffic_light.c: 219:         num2--;
  1007  076F  30FF               	movlw	255
  1008  0770  07B8               	addwf	_num2,f
  1009  0771  1803               	skipnc
  1010  0772  0AB9               	incf	_num2+1,f
  1011  0773  30FF               	movlw	255
  1012  0774  07B9               	addwf	_num2+1,f
  1013  0775                     l1164:
  1014                           
  1015                           ;main_traffic_light.c: 220:     }while(num2 != 0);
  1016  0775  0838               	movf	_num2,w
  1017  0776  0439               	iorwf	_num2+1,w
  1018  0777  1D03               	btfss	3,2
  1019  0778  2F7A               	goto	u741
  1020  0779  2F7B               	goto	u740
  1021  077A                     u741:
  1022  077A  2F53               	goto	l1152
  1023  077B                     u740:
  1024  077B                     l1166:
  1025                           
  1026                           ;main_traffic_light.c: 222:     num1=value;
  1027  077B  0841               	movf	normal_mode@value+1,w
  1028  077C  00BF               	movwf	_num1+1
  1029  077D  0840               	movf	normal_mode@value,w
  1030  077E  00BE               	movwf	_num1
  1031  077F                     l1168:
  1032                           
  1033                           ;main_traffic_light.c: 223:     num2=value+temp1;
  1034  077F  0842               	movf	normal_mode@temp1,w
  1035  0780  0740               	addwf	normal_mode@value,w
  1036  0781  00B8               	movwf	_num2
  1037  0782  0843               	movf	normal_mode@temp1+1,w
  1038  0783  1803               	skipnc
  1039  0784  0A43               	incf	normal_mode@temp1+1,w
  1040  0785  0741               	addwf	normal_mode@value+1,w
  1041  0786  00B9               	movwf	_num2+1
  1042  0787                     l1170:
  1043                           
  1044                           ;main_traffic_light.c: 225:         PORTD = 0xFF;
  1045  0787  30FF               	movlw	255
  1046  0788  0088               	movwf	8	;volatile
  1047  0789                     l1172:
  1048                           
  1049                           ;main_traffic_light.c: 226:         PORTCbits.RC3 = PORTCbits.RC2 = 1;
  1050  0789  1507               	bsf	7,2	;volatile
  1051  078A  1907               	btfsc	7,2	;volatile
  1052  078B  2F8D               	goto	u751
  1053  078C  2F91               	goto	u750
  1054  078D                     u751:
  1055  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1056  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1057  078F  1587               	bsf	7,3	;volatile
  1058  0790  2F94               	goto	u764
  1059  0791                     u750:
  1060  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0793  1187               	bcf	7,3	;volatile
  1063  0794                     u764:
  1064  0794                     l1174:
  1065                           
  1066                           ;main_traffic_light.c: 227:         PORTCbits.RC1 = PORTCbits.RC0 = 0;
  1067  0794  1007               	bcf	7,0	;volatile
  1068  0795  1087               	bcf	7,1	;volatile
  1069  0796                     l1176:
  1070                           
  1071                           ;main_traffic_light.c: 228:         PORTCbits.RC4 = PORTCbits.RC5 = 0;
  1072  0796  1287               	bcf	7,5	;volatile
  1073  0797  1207               	bcf	7,4	;volatile
  1074  0798                     l1178:
  1075                           
  1076                           ;main_traffic_light.c: 229:         hienThi();
  1077  0798  120A  118A  2588  120A  118A  	fcall	_hienThi
  1078  079D                     l1180:
  1079                           
  1080                           ;main_traffic_light.c: 230:         num1--;
  1081  079D  30FF               	movlw	255
  1082  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1083  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1084  07A0  07BE               	addwf	_num1,f
  1085  07A1  1803               	skipnc
  1086  07A2  0ABF               	incf	_num1+1,f
  1087  07A3  30FF               	movlw	255
  1088  07A4  07BF               	addwf	_num1+1,f
  1089  07A5                     l1182:
  1090                           
  1091                           ;main_traffic_light.c: 231:         num2--;
  1092  07A5  30FF               	movlw	255
  1093  07A6  07B8               	addwf	_num2,f
  1094  07A7  1803               	skipnc
  1095  07A8  0AB9               	incf	_num2+1,f
  1096  07A9  30FF               	movlw	255
  1097  07AA  07B9               	addwf	_num2+1,f
  1098  07AB                     l1184:
  1099                           
  1100                           ;main_traffic_light.c: 232:     }while(num1 != 0);
  1101  07AB  083E               	movf	_num1,w
  1102  07AC  043F               	iorwf	_num1+1,w
  1103  07AD  1D03               	btfss	3,2
  1104  07AE  2FB0               	goto	u771
  1105  07AF  2FB1               	goto	u770
  1106  07B0                     u771:
  1107  07B0  2F87               	goto	l1170
  1108  07B1                     u770:
  1109  07B1                     l1186:
  1110                           
  1111                           ;main_traffic_light.c: 234:     num1=num2=temp1;
  1112  07B1  0843               	movf	normal_mode@temp1+1,w
  1113  07B2  00B9               	movwf	_num2+1
  1114  07B3  0842               	movf	normal_mode@temp1,w
  1115  07B4  00B8               	movwf	_num2
  1116  07B5  0839               	movf	_num2+1,w
  1117  07B6  00BF               	movwf	_num1+1
  1118  07B7  0838               	movf	_num2,w
  1119  07B8  00BE               	movwf	_num1
  1120  07B9                     l1188:
  1121                           
  1122                           ;main_traffic_light.c: 236:         PORTCbits.RC4=PORTCbits.RC2=1;
  1123  07B9  1507               	bsf	7,2	;volatile
  1124  07BA  1907               	btfsc	7,2	;volatile
  1125  07BB  2FBD               	goto	u781
  1126  07BC  2FC1               	goto	u780
  1127  07BD                     u781:
  1128  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1129  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1130  07BF  1607               	bsf	7,4	;volatile
  1131  07C0  2FC4               	goto	u794
  1132  07C1                     u780:
  1133  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1134  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1135  07C3  1207               	bcf	7,4	;volatile
  1136  07C4                     u794:
  1137  07C4                     l1190:
  1138                           
  1139                           ;main_traffic_light.c: 237:         PORTCbits.RC1 = PORTCbits.RC0 = 0;
  1140  07C4  1007               	bcf	7,0	;volatile
  1141  07C5  1087               	bcf	7,1	;volatile
  1142  07C6                     l1192:
  1143                           
  1144                           ;main_traffic_light.c: 238:         PORTCbits.RC5 = PORTCbits.RC3 = 0;
  1145  07C6  1187               	bcf	7,3	;volatile
  1146  07C7  1287               	bcf	7,5	;volatile
  1147  07C8                     l1194:
  1148                           
  1149                           ;main_traffic_light.c: 239:         hienThi();
  1150  07C8  120A  118A  2588  120A  118A  	fcall	_hienThi
  1151  07CD                     l1196:
  1152                           
  1153                           ;main_traffic_light.c: 240:         num1--;
  1154  07CD  30FF               	movlw	255
  1155  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1156  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1157  07D0  07BE               	addwf	_num1,f
  1158  07D1  1803               	skipnc
  1159  07D2  0ABF               	incf	_num1+1,f
  1160  07D3  30FF               	movlw	255
  1161  07D4  07BF               	addwf	_num1+1,f
  1162  07D5                     l1198:
  1163                           
  1164                           ;main_traffic_light.c: 241:         num2--;
  1165  07D5  30FF               	movlw	255
  1166  07D6  07B8               	addwf	_num2,f
  1167  07D7  1803               	skipnc
  1168  07D8  0AB9               	incf	_num2+1,f
  1169  07D9  30FF               	movlw	255
  1170  07DA  07B9               	addwf	_num2+1,f
  1171  07DB                     l1200:
  1172                           
  1173                           ;main_traffic_light.c: 242:     }while(num1 != 0);
  1174  07DB  083E               	movf	_num1,w
  1175  07DC  043F               	iorwf	_num1+1,w
  1176  07DD  1D03               	btfss	3,2
  1177  07DE  2FE0               	goto	u801
  1178  07DF  2FE1               	goto	u800
  1179  07E0                     u801:
  1180  07E0  2FB9               	goto	l1188
  1181  07E1                     u800:
  1182  07E1                     l102:
  1183  07E1  0008               	return
  1184  07E2                     __end_of_normal_mode:
  1185                           
  1186                           	psect	text3
  1187  0588                     __ptext3:	
  1188 ;; *************** function _hienThi *****************
  1189 ;; Defined at:
  1190 ;;		line 157 in file "main_traffic_light.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  count           2   11[COMMON] int 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         2       0       0       0       0
  1206 ;;      Temps:          3       0       0       0       0
  1207 ;;      Totals:         5       0       0       0       0
  1208 ;;Total ram usage:        5 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    1
  1211 ;; This function calls:
  1212 ;;		___awdiv
  1213 ;;		___awmod
  1214 ;; This function is called by:
  1215 ;;		_normal_mode
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function _hienThi
  1221  0588                     _hienThi:
  1222  0588                     l1084:	
  1223                           ;incstack = 0
  1224                           ; Regs used in _hienThi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1225                           
  1226                           
  1227                           ;main_traffic_light.c: 158:     int count;;main_traffic_light.c: 160:     for(count=0; c
      +                          ount <50; count++){
  1228  0588  01FB               	clrf	hienThi@count
  1229  0589  01FC               	clrf	hienThi@count+1
  1230  058A                     l1090:
  1231                           
  1232                           ;main_traffic_light.c: 161:         chuc1 = num1/10;
  1233  058A  300A               	movlw	10
  1234  058B  00F0               	movwf	___awdiv@divisor
  1235  058C  3000               	movlw	0
  1236  058D  00F1               	movwf	___awdiv@divisor+1
  1237  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1238  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0590  083F               	movf	_num1+1,w
  1240  0591  00F3               	movwf	___awdiv@dividend+1
  1241  0592  083E               	movf	_num1,w
  1242  0593  00F2               	movwf	___awdiv@dividend
  1243  0594  120A  118A  2521  120A  118A  	fcall	___awdiv
  1244  0599  0871               	movf	?___awdiv+1,w
  1245  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1246  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1247  059C  00BB               	movwf	_chuc1+1
  1248  059D  0870               	movf	?___awdiv,w
  1249  059E  00BA               	movwf	_chuc1
  1250                           
  1251                           ;main_traffic_light.c: 162:         donvi1 = num1%10;
  1252  059F  300A               	movlw	10
  1253  05A0  00F0               	movwf	___awmod@divisor
  1254  05A1  3000               	movlw	0
  1255  05A2  00F1               	movwf	___awmod@divisor+1
  1256  05A3  083F               	movf	_num1+1,w
  1257  05A4  00F3               	movwf	___awmod@dividend+1
  1258  05A5  083E               	movf	_num1,w
  1259  05A6  00F2               	movwf	___awmod@dividend
  1260  05A7  120A  118A  24C8  120A  118A  	fcall	___awmod
  1261  05AC  0871               	movf	?___awmod+1,w
  1262  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1263  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1264  05AF  00BD               	movwf	_donvi1+1
  1265  05B0  0870               	movf	?___awmod,w
  1266  05B1  00BC               	movwf	_donvi1
  1267  05B2                     l1092:
  1268                           
  1269                           ;main_traffic_light.c: 163:         PORTD = number[chuc1];
  1270  05B2  083A               	movf	_chuc1,w
  1271  05B3  3E20               	addlw	(low (_number| 0))& (0+255)
  1272  05B4  0084               	movwf	4
  1273  05B5  1383               	bcf	3,7	;select IRP bank0
  1274  05B6  0800               	movf	0,w
  1275  05B7  0088               	movwf	8	;volatile
  1276  05B8                     l1094:
  1277                           
  1278                           ;main_traffic_light.c: 164:         PORTBbits.RB2 = 1;
  1279  05B8  1506               	bsf	6,2	;volatile
  1280  05B9                     l1096:
  1281                           
  1282                           ;main_traffic_light.c: 165:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1283  05B9  3002               	movlw	2
  1284  05BA  00FA               	movwf	??_hienThi+2
  1285  05BB  3004               	movlw	4
  1286  05BC  00F9               	movwf	??_hienThi+1
  1287  05BD  30BA               	movlw	186
  1288  05BE  00F8               	movwf	??_hienThi
  1289  05BF                     u977:
  1290  05BF  0BF8               	decfsz	??_hienThi,f
  1291  05C0  2DBF               	goto	u977
  1292  05C1  0BF9               	decfsz	??_hienThi+1,f
  1293  05C2  2DBF               	goto	u977
  1294  05C3  0BFA               	decfsz	??_hienThi+2,f
  1295  05C4  2DBF               	goto	u977
  1296  05C5  0000               	nop
  1297  05C6                     l1098:
  1298                           
  1299                           ;main_traffic_light.c: 166:         PORTBbits.RB2 = 0;
  1300  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1301  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1302  05C8  1106               	bcf	6,2	;volatile
  1303  05C9                     l1100:
  1304                           
  1305                           ;main_traffic_light.c: 167:         PORTD = number[donvi1];
  1306  05C9  083C               	movf	_donvi1,w
  1307  05CA  3E20               	addlw	(low (_number| 0))& (0+255)
  1308  05CB  0084               	movwf	4
  1309  05CC  1383               	bcf	3,7	;select IRP bank0
  1310  05CD  0800               	movf	0,w
  1311  05CE  0088               	movwf	8	;volatile
  1312  05CF                     l1102:
  1313                           
  1314                           ;main_traffic_light.c: 168:         PORTBbits.RB3 = 1;
  1315  05CF  1586               	bsf	6,3	;volatile
  1316  05D0                     l1104:
  1317                           
  1318                           ;main_traffic_light.c: 169:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1319  05D0  3002               	movlw	2
  1320  05D1  00FA               	movwf	??_hienThi+2
  1321  05D2  3004               	movlw	4
  1322  05D3  00F9               	movwf	??_hienThi+1
  1323  05D4  30BA               	movlw	186
  1324  05D5  00F8               	movwf	??_hienThi
  1325  05D6                     u987:
  1326  05D6  0BF8               	decfsz	??_hienThi,f
  1327  05D7  2DD6               	goto	u987
  1328  05D8  0BF9               	decfsz	??_hienThi+1,f
  1329  05D9  2DD6               	goto	u987
  1330  05DA  0BFA               	decfsz	??_hienThi+2,f
  1331  05DB  2DD6               	goto	u987
  1332  05DC  0000               	nop
  1333  05DD                     l1106:
  1334                           
  1335                           ;main_traffic_light.c: 170:         PORTBbits.RB3 = 0;
  1336  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1337  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1338  05DF  1186               	bcf	6,3	;volatile
  1339                           
  1340                           ;main_traffic_light.c: 172:         chuc2=num2/10;
  1341  05E0  300A               	movlw	10
  1342  05E1  00F0               	movwf	___awdiv@divisor
  1343  05E2  3000               	movlw	0
  1344  05E3  00F1               	movwf	___awdiv@divisor+1
  1345  05E4  0839               	movf	_num2+1,w
  1346  05E5  00F3               	movwf	___awdiv@dividend+1
  1347  05E6  0838               	movf	_num2,w
  1348  05E7  00F2               	movwf	___awdiv@dividend
  1349  05E8  120A  118A  2521  120A  118A  	fcall	___awdiv
  1350  05ED  0871               	movf	?___awdiv+1,w
  1351  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1352  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1353  05F0  00B5               	movwf	_chuc2+1
  1354  05F1  0870               	movf	?___awdiv,w
  1355  05F2  00B4               	movwf	_chuc2
  1356                           
  1357                           ;main_traffic_light.c: 173:         donvi2=num2%10;
  1358  05F3  300A               	movlw	10
  1359  05F4  00F0               	movwf	___awmod@divisor
  1360  05F5  3000               	movlw	0
  1361  05F6  00F1               	movwf	___awmod@divisor+1
  1362  05F7  0839               	movf	_num2+1,w
  1363  05F8  00F3               	movwf	___awmod@dividend+1
  1364  05F9  0838               	movf	_num2,w
  1365  05FA  00F2               	movwf	___awmod@dividend
  1366  05FB  120A  118A  24C8  120A  118A  	fcall	___awmod
  1367  0600  0871               	movf	?___awmod+1,w
  1368  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0603  00B7               	movwf	_donvi2+1
  1371  0604  0870               	movf	?___awmod,w
  1372  0605  00B6               	movwf	_donvi2
  1373  0606                     l1108:
  1374                           
  1375                           ;main_traffic_light.c: 174:         PORTD = number[chuc1];
  1376  0606  083A               	movf	_chuc1,w
  1377  0607  3E20               	addlw	(low (_number| 0))& (0+255)
  1378  0608  0084               	movwf	4
  1379  0609  1383               	bcf	3,7	;select IRP bank0
  1380  060A  0800               	movf	0,w
  1381  060B  0088               	movwf	8	;volatile
  1382  060C                     l1110:
  1383                           
  1384                           ;main_traffic_light.c: 175:         PORTBbits.RB0 = 1;
  1385  060C  1406               	bsf	6,0	;volatile
  1386  060D                     l1112:
  1387                           
  1388                           ;main_traffic_light.c: 176:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1389  060D  3002               	movlw	2
  1390  060E  00FA               	movwf	??_hienThi+2
  1391  060F  3004               	movlw	4
  1392  0610  00F9               	movwf	??_hienThi+1
  1393  0611  30BA               	movlw	186
  1394  0612  00F8               	movwf	??_hienThi
  1395  0613                     u997:
  1396  0613  0BF8               	decfsz	??_hienThi,f
  1397  0614  2E13               	goto	u997
  1398  0615  0BF9               	decfsz	??_hienThi+1,f
  1399  0616  2E13               	goto	u997
  1400  0617  0BFA               	decfsz	??_hienThi+2,f
  1401  0618  2E13               	goto	u997
  1402  0619  0000               	nop
  1403  061A                     l1114:
  1404                           
  1405                           ;main_traffic_light.c: 177:         PORTBbits.RB0 = 0;
  1406  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1407  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1408  061C  1006               	bcf	6,0	;volatile
  1409  061D                     l1116:
  1410                           
  1411                           ;main_traffic_light.c: 178:         PORTD = number[donvi1];
  1412  061D  083C               	movf	_donvi1,w
  1413  061E  3E20               	addlw	(low (_number| 0))& (0+255)
  1414  061F  0084               	movwf	4
  1415  0620  1383               	bcf	3,7	;select IRP bank0
  1416  0621  0800               	movf	0,w
  1417  0622  0088               	movwf	8	;volatile
  1418  0623                     l1118:
  1419                           
  1420                           ;main_traffic_light.c: 179:         PORTBbits.RB1 = 1;
  1421  0623  1486               	bsf	6,1	;volatile
  1422  0624                     l1120:
  1423                           
  1424                           ;main_traffic_light.c: 180:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1425  0624  3002               	movlw	2
  1426  0625  00FA               	movwf	??_hienThi+2
  1427  0626  3004               	movlw	4
  1428  0627  00F9               	movwf	??_hienThi+1
  1429  0628  30BA               	movlw	186
  1430  0629  00F8               	movwf	??_hienThi
  1431  062A                     u1007:
  1432  062A  0BF8               	decfsz	??_hienThi,f
  1433  062B  2E2A               	goto	u1007
  1434  062C  0BF9               	decfsz	??_hienThi+1,f
  1435  062D  2E2A               	goto	u1007
  1436  062E  0BFA               	decfsz	??_hienThi+2,f
  1437  062F  2E2A               	goto	u1007
  1438  0630  0000               	nop
  1439  0631                     l1122:
  1440                           
  1441                           ;main_traffic_light.c: 181:         PORTBbits.RB1 = 0;
  1442  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0633  1086               	bcf	6,1	;volatile
  1445  0634                     l1124:
  1446                           
  1447                           ;main_traffic_light.c: 182:     }
  1448  0634  3001               	movlw	1
  1449  0635  07FB               	addwf	hienThi@count,f
  1450  0636  1803               	skipnc
  1451  0637  0AFC               	incf	hienThi@count+1,f
  1452  0638  3000               	movlw	0
  1453  0639  07FC               	addwf	hienThi@count+1,f
  1454  063A                     l1126:
  1455  063A  087C               	movf	hienThi@count+1,w
  1456  063B  3A80               	xorlw	128
  1457  063C  00FF               	movwf	btemp+1
  1458  063D  3080               	movlw	128
  1459  063E  027F               	subwf	btemp+1,w
  1460  063F  1D03               	skipz
  1461  0640  2E43               	goto	u685
  1462  0641  3032               	movlw	50
  1463  0642  027B               	subwf	hienThi@count,w
  1464  0643                     u685:
  1465  0643  1C03               	skipc
  1466  0644  2E46               	goto	u681
  1467  0645  2E47               	goto	u680
  1468  0646                     u681:
  1469  0646  2D8A               	goto	l1090
  1470  0647                     u680:
  1471  0647                     l82:
  1472  0647  0008               	return
  1473  0648                     __end_of_hienThi:
  1474                           
  1475                           	psect	text4
  1476  04C8                     __ptext4:	
  1477 ;; *************** function ___awmod *****************
  1478 ;; Defined at:
  1479 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  divisor         2    0[COMMON] int 
  1482 ;;  dividend        2    2[COMMON] int 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  sign            1    5[COMMON] unsigned char 
  1485 ;;  counter         1    4[COMMON] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    0[COMMON] int 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, btemp+1
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         4       0       0       0       0
  1496 ;;      Locals:         2       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0
  1498 ;;      Totals:         6       0       0       0       0
  1499 ;;Total ram usage:        6 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_hienThi
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function ___awmod
  1510  04C8                     ___awmod:
  1511  04C8                     l1046:	
  1512                           ;incstack = 0
  1513                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1514                           
  1515  04C8  01F5               	clrf	___awmod@sign
  1516  04C9                     l1048:
  1517  04C9  1FF3               	btfss	___awmod@dividend+1,7
  1518  04CA  2CCC               	goto	u591
  1519  04CB  2CCD               	goto	u590
  1520  04CC                     u591:
  1521  04CC  2CD4               	goto	l1054
  1522  04CD                     u590:
  1523  04CD                     l1050:
  1524  04CD  09F2               	comf	___awmod@dividend,f
  1525  04CE  09F3               	comf	___awmod@dividend+1,f
  1526  04CF  0AF2               	incf	___awmod@dividend,f
  1527  04D0  1903               	skipnz
  1528  04D1  0AF3               	incf	___awmod@dividend+1,f
  1529  04D2                     l1052:
  1530  04D2  01F5               	clrf	___awmod@sign
  1531  04D3  0AF5               	incf	___awmod@sign,f
  1532  04D4                     l1054:
  1533  04D4  1FF1               	btfss	___awmod@divisor+1,7
  1534  04D5  2CD7               	goto	u601
  1535  04D6  2CD8               	goto	u600
  1536  04D7                     u601:
  1537  04D7  2CDD               	goto	l1058
  1538  04D8                     u600:
  1539  04D8                     l1056:
  1540  04D8  09F0               	comf	___awmod@divisor,f
  1541  04D9  09F1               	comf	___awmod@divisor+1,f
  1542  04DA  0AF0               	incf	___awmod@divisor,f
  1543  04DB  1903               	skipnz
  1544  04DC  0AF1               	incf	___awmod@divisor+1,f
  1545  04DD                     l1058:
  1546  04DD  0870               	movf	___awmod@divisor,w
  1547  04DE  0471               	iorwf	___awmod@divisor+1,w
  1548  04DF  1903               	btfsc	3,2
  1549  04E0  2CE2               	goto	u611
  1550  04E1  2CE3               	goto	u610
  1551  04E2                     u611:
  1552  04E2  2D12               	goto	l1076
  1553  04E3                     u610:
  1554  04E3                     l1060:
  1555  04E3  01F4               	clrf	___awmod@counter
  1556  04E4  0AF4               	incf	___awmod@counter,f
  1557  04E5  2CF1               	goto	l1066
  1558  04E6                     l1062:
  1559  04E6  3001               	movlw	1
  1560  04E7                     u625:
  1561  04E7  1003               	clrc
  1562  04E8  0DF0               	rlf	___awmod@divisor,f
  1563  04E9  0DF1               	rlf	___awmod@divisor+1,f
  1564  04EA  3EFF               	addlw	-1
  1565  04EB  1D03               	skipz
  1566  04EC  2CE7               	goto	u625
  1567  04ED                     l1064:
  1568  04ED  3001               	movlw	1
  1569  04EE  00FF               	movwf	btemp+1
  1570  04EF  087F               	movf	btemp+1,w
  1571  04F0  07F4               	addwf	___awmod@counter,f
  1572  04F1                     l1066:
  1573  04F1  1FF1               	btfss	___awmod@divisor+1,7
  1574  04F2  2CF4               	goto	u631
  1575  04F3  2CF5               	goto	u630
  1576  04F4                     u631:
  1577  04F4  2CE6               	goto	l1062
  1578  04F5                     u630:
  1579  04F5                     l1068:
  1580  04F5  0871               	movf	___awmod@divisor+1,w
  1581  04F6  0273               	subwf	___awmod@dividend+1,w
  1582  04F7  1D03               	skipz
  1583  04F8  2CFB               	goto	u645
  1584  04F9  0870               	movf	___awmod@divisor,w
  1585  04FA  0272               	subwf	___awmod@dividend,w
  1586  04FB                     u645:
  1587  04FB  1C03               	skipc
  1588  04FC  2CFE               	goto	u641
  1589  04FD  2CFF               	goto	u640
  1590  04FE                     u641:
  1591  04FE  2D05               	goto	l1072
  1592  04FF                     u640:
  1593  04FF                     l1070:
  1594  04FF  0870               	movf	___awmod@divisor,w
  1595  0500  02F2               	subwf	___awmod@dividend,f
  1596  0501  0871               	movf	___awmod@divisor+1,w
  1597  0502  1C03               	skipc
  1598  0503  03F3               	decf	___awmod@dividend+1,f
  1599  0504  02F3               	subwf	___awmod@dividend+1,f
  1600  0505                     l1072:
  1601  0505  3001               	movlw	1
  1602  0506                     u655:
  1603  0506  1003               	clrc
  1604  0507  0CF1               	rrf	___awmod@divisor+1,f
  1605  0508  0CF0               	rrf	___awmod@divisor,f
  1606  0509  3EFF               	addlw	-1
  1607  050A  1D03               	skipz
  1608  050B  2D06               	goto	u655
  1609  050C                     l1074:
  1610  050C  3001               	movlw	1
  1611  050D  02F4               	subwf	___awmod@counter,f
  1612  050E  1D03               	btfss	3,2
  1613  050F  2D11               	goto	u661
  1614  0510  2D12               	goto	u660
  1615  0511                     u661:
  1616  0511  2CF5               	goto	l1068
  1617  0512                     u660:
  1618  0512                     l1076:
  1619  0512  0875               	movf	___awmod@sign,w
  1620  0513  1903               	btfsc	3,2
  1621  0514  2D16               	goto	u671
  1622  0515  2D17               	goto	u670
  1623  0516                     u671:
  1624  0516  2D1C               	goto	l1080
  1625  0517                     u670:
  1626  0517                     l1078:
  1627  0517  09F2               	comf	___awmod@dividend,f
  1628  0518  09F3               	comf	___awmod@dividend+1,f
  1629  0519  0AF2               	incf	___awmod@dividend,f
  1630  051A  1903               	skipnz
  1631  051B  0AF3               	incf	___awmod@dividend+1,f
  1632  051C                     l1080:
  1633  051C  0873               	movf	___awmod@dividend+1,w
  1634  051D  00F1               	movwf	?___awmod+1
  1635  051E  0872               	movf	___awmod@dividend,w
  1636  051F  00F0               	movwf	?___awmod
  1637  0520                     l360:
  1638  0520  0008               	return
  1639  0521                     __end_of___awmod:
  1640                           
  1641                           	psect	text5
  1642  0521                     __ptext5:	
  1643 ;; *************** function ___awdiv *****************
  1644 ;; Defined at:
  1645 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  divisor         2    0[COMMON] int 
  1648 ;;  dividend        2    2[COMMON] int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  quotient        2    6[COMMON] int 
  1651 ;;  sign            1    5[COMMON] unsigned char 
  1652 ;;  counter         1    4[COMMON] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2    0[COMMON] int 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0, btemp+1
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         4       0       0       0       0
  1663 ;;      Locals:         4       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0
  1665 ;;      Totals:         8       0       0       0       0
  1666 ;;Total ram usage:        8 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_hienThi
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function ___awdiv
  1677  0521                     ___awdiv:
  1678  0521                     l1002:	
  1679                           ;incstack = 0
  1680                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1681                           
  1682  0521  01F5               	clrf	___awdiv@sign
  1683  0522                     l1004:
  1684  0522  1FF1               	btfss	___awdiv@divisor+1,7
  1685  0523  2D25               	goto	u491
  1686  0524  2D26               	goto	u490
  1687  0525                     u491:
  1688  0525  2D2D               	goto	l1010
  1689  0526                     u490:
  1690  0526                     l1006:
  1691  0526  09F0               	comf	___awdiv@divisor,f
  1692  0527  09F1               	comf	___awdiv@divisor+1,f
  1693  0528  0AF0               	incf	___awdiv@divisor,f
  1694  0529  1903               	skipnz
  1695  052A  0AF1               	incf	___awdiv@divisor+1,f
  1696  052B                     l1008:
  1697  052B  01F5               	clrf	___awdiv@sign
  1698  052C  0AF5               	incf	___awdiv@sign,f
  1699  052D                     l1010:
  1700  052D  1FF3               	btfss	___awdiv@dividend+1,7
  1701  052E  2D30               	goto	u501
  1702  052F  2D31               	goto	u500
  1703  0530                     u501:
  1704  0530  2D3A               	goto	l1016
  1705  0531                     u500:
  1706  0531                     l1012:
  1707  0531  09F2               	comf	___awdiv@dividend,f
  1708  0532  09F3               	comf	___awdiv@dividend+1,f
  1709  0533  0AF2               	incf	___awdiv@dividend,f
  1710  0534  1903               	skipnz
  1711  0535  0AF3               	incf	___awdiv@dividend+1,f
  1712  0536                     l1014:
  1713  0536  3001               	movlw	1
  1714  0537  00FF               	movwf	btemp+1
  1715  0538  087F               	movf	btemp+1,w
  1716  0539  06F5               	xorwf	___awdiv@sign,f
  1717  053A                     l1016:
  1718  053A  01F6               	clrf	___awdiv@quotient
  1719  053B  01F7               	clrf	___awdiv@quotient+1
  1720  053C                     l1018:
  1721  053C  0870               	movf	___awdiv@divisor,w
  1722  053D  0471               	iorwf	___awdiv@divisor+1,w
  1723  053E  1903               	btfsc	3,2
  1724  053F  2D41               	goto	u511
  1725  0540  2D42               	goto	u510
  1726  0541                     u511:
  1727  0541  2D79               	goto	l1038
  1728  0542                     u510:
  1729  0542                     l1020:
  1730  0542  01F4               	clrf	___awdiv@counter
  1731  0543  0AF4               	incf	___awdiv@counter,f
  1732  0544  2D50               	goto	l1026
  1733  0545                     l1022:
  1734  0545  3001               	movlw	1
  1735  0546                     u525:
  1736  0546  1003               	clrc
  1737  0547  0DF0               	rlf	___awdiv@divisor,f
  1738  0548  0DF1               	rlf	___awdiv@divisor+1,f
  1739  0549  3EFF               	addlw	-1
  1740  054A  1D03               	skipz
  1741  054B  2D46               	goto	u525
  1742  054C                     l1024:
  1743  054C  3001               	movlw	1
  1744  054D  00FF               	movwf	btemp+1
  1745  054E  087F               	movf	btemp+1,w
  1746  054F  07F4               	addwf	___awdiv@counter,f
  1747  0550                     l1026:
  1748  0550  1FF1               	btfss	___awdiv@divisor+1,7
  1749  0551  2D53               	goto	u531
  1750  0552  2D54               	goto	u530
  1751  0553                     u531:
  1752  0553  2D45               	goto	l1022
  1753  0554                     u530:
  1754  0554                     l1028:
  1755  0554  3001               	movlw	1
  1756  0555                     u545:
  1757  0555  1003               	clrc
  1758  0556  0DF6               	rlf	___awdiv@quotient,f
  1759  0557  0DF7               	rlf	___awdiv@quotient+1,f
  1760  0558  3EFF               	addlw	-1
  1761  0559  1D03               	skipz
  1762  055A  2D55               	goto	u545
  1763  055B  0871               	movf	___awdiv@divisor+1,w
  1764  055C  0273               	subwf	___awdiv@dividend+1,w
  1765  055D  1D03               	skipz
  1766  055E  2D61               	goto	u555
  1767  055F  0870               	movf	___awdiv@divisor,w
  1768  0560  0272               	subwf	___awdiv@dividend,w
  1769  0561                     u555:
  1770  0561  1C03               	skipc
  1771  0562  2D64               	goto	u551
  1772  0563  2D65               	goto	u550
  1773  0564                     u551:
  1774  0564  2D6C               	goto	l1034
  1775  0565                     u550:
  1776  0565                     l1030:
  1777  0565  0870               	movf	___awdiv@divisor,w
  1778  0566  02F2               	subwf	___awdiv@dividend,f
  1779  0567  0871               	movf	___awdiv@divisor+1,w
  1780  0568  1C03               	skipc
  1781  0569  03F3               	decf	___awdiv@dividend+1,f
  1782  056A  02F3               	subwf	___awdiv@dividend+1,f
  1783  056B                     l1032:
  1784  056B  1476               	bsf	___awdiv@quotient,0
  1785  056C                     l1034:
  1786  056C  3001               	movlw	1
  1787  056D                     u565:
  1788  056D  1003               	clrc
  1789  056E  0CF1               	rrf	___awdiv@divisor+1,f
  1790  056F  0CF0               	rrf	___awdiv@divisor,f
  1791  0570  3EFF               	addlw	-1
  1792  0571  1D03               	skipz
  1793  0572  2D6D               	goto	u565
  1794  0573                     l1036:
  1795  0573  3001               	movlw	1
  1796  0574  02F4               	subwf	___awdiv@counter,f
  1797  0575  1D03               	btfss	3,2
  1798  0576  2D78               	goto	u571
  1799  0577  2D79               	goto	u570
  1800  0578                     u571:
  1801  0578  2D54               	goto	l1028
  1802  0579                     u570:
  1803  0579                     l1038:
  1804  0579  0875               	movf	___awdiv@sign,w
  1805  057A  1903               	btfsc	3,2
  1806  057B  2D7D               	goto	u581
  1807  057C  2D7E               	goto	u580
  1808  057D                     u581:
  1809  057D  2D83               	goto	l1042
  1810  057E                     u580:
  1811  057E                     l1040:
  1812  057E  09F6               	comf	___awdiv@quotient,f
  1813  057F  09F7               	comf	___awdiv@quotient+1,f
  1814  0580  0AF6               	incf	___awdiv@quotient,f
  1815  0581  1903               	skipnz
  1816  0582  0AF7               	incf	___awdiv@quotient+1,f
  1817  0583                     l1042:
  1818  0583  0877               	movf	___awdiv@quotient+1,w
  1819  0584  00F1               	movwf	?___awdiv+1
  1820  0585  0876               	movf	___awdiv@quotient,w
  1821  0586  00F0               	movwf	?___awdiv
  1822  0587                     l347:
  1823  0587  0008               	return
  1824  0588                     __end_of___awdiv:
  1825                           
  1826                           	psect	text6
  1827  040B                     __ptext6:	
  1828 ;; *************** function _night_mode *****************
  1829 ;; Defined at:
  1830 ;;		line 249 in file "main_traffic_light.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  value           2    8[COMMON] int 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         2       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         2       0       0       0       0
  1848 ;;Total ram usage:        2 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    1
  1851 ;; This function calls:
  1852 ;;		_rain_mode
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _night_mode
  1860  040B                     _night_mode:
  1861  040B                     l1252:	
  1862                           ;incstack = 0
  1863                           ; Regs used in _night_mode: [wreg+status,2+status,0+pclath+cstack]
  1864                           
  1865                           
  1866                           ;main_traffic_light.c: 250:     rain_mode(value);
  1867  040B  0879               	movf	night_mode@value+1,w
  1868  040C  00F1               	movwf	rain_mode@value_ms+1
  1869  040D  0878               	movf	night_mode@value,w
  1870  040E  00F0               	movwf	rain_mode@value_ms
  1871  040F  120A  118A  2472  120A  118A  	fcall	_rain_mode
  1872  0414                     l108:
  1873  0414  0008               	return
  1874  0415                     __end_of_night_mode:
  1875                           
  1876                           	psect	text7
  1877  0472                     __ptext7:	
  1878 ;; *************** function _rain_mode *****************
  1879 ;; Defined at:
  1880 ;;		line 186 in file "main_traffic_light.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  value_ms        2    0[COMMON] int 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  i               2    6[COMMON] int 
  1885 ;;  i               2    4[COMMON] int 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         2       0       0       0       0
  1896 ;;      Locals:         4       0       0       0       0
  1897 ;;      Temps:          2       0       0       0       0
  1898 ;;      Totals:         8       0       0       0       0
  1899 ;;Total ram usage:        8 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;;		_night_mode
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _rain_mode
  1911  0472                     _rain_mode:
  1912  0472                     l1202:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _rain_mode: [wreg+status,2]
  1915                           
  1916                           
  1917                           ;main_traffic_light.c: 187:     PORTCbits.RC0 = PORTCbits.RC2 = 0;
  1918  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0474  1107               	bcf	7,2	;volatile
  1921  0475  1007               	bcf	7,0	;volatile
  1922                           
  1923                           ;main_traffic_light.c: 188:     PORTCbits.RC3 = PORTCbits.RC5 = 0;
  1924  0476  1287               	bcf	7,5	;volatile
  1925  0477  1187               	bcf	7,3	;volatile
  1926                           
  1927                           ;main_traffic_light.c: 190:     PORTCbits.RC1 = PORTCbits.RC4 = 1;
  1928  0478  1607               	bsf	7,4	;volatile
  1929  0479  1A07               	btfsc	7,4	;volatile
  1930  047A  2C7C               	goto	u811
  1931  047B  2C80               	goto	u810
  1932  047C                     u811:
  1933  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1934  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1935  047E  1487               	bsf	7,1	;volatile
  1936  047F  2C83               	goto	u824
  1937  0480                     u810:
  1938  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0482  1087               	bcf	7,1	;volatile
  1941  0483                     u824:
  1942  0483                     l1204:
  1943                           
  1944                           ;main_traffic_light.c: 191:     for(int i=0; i<value_ms; i++)
  1945  0483  01F4               	clrf	rain_mode@i
  1946  0484  01F5               	clrf	rain_mode@i+1
  1947  0485  2C95               	goto	l85
  1948  0486                     l1206:
  1949                           
  1950                           ;main_traffic_light.c: 192:         _delay((unsigned long)((1)*(16000000/4000.0)));
  1951  0486  3006               	movlw	6
  1952  0487  00F3               	movwf	??_rain_mode+1
  1953  0488  3030               	movlw	48
  1954  0489  00F2               	movwf	??_rain_mode
  1955  048A                     u1017:
  1956  048A  0BF2               	decfsz	??_rain_mode,f
  1957  048B  2C8A               	goto	u1017
  1958  048C  0BF3               	decfsz	??_rain_mode+1,f
  1959  048D  2C8A               	goto	u1017
  1960  048E  0000               	nop
  1961  048F  3001               	movlw	1
  1962  0490  07F4               	addwf	rain_mode@i,f
  1963  0491  1803               	skipnc
  1964  0492  0AF5               	incf	rain_mode@i+1,f
  1965  0493  3000               	movlw	0
  1966  0494  07F5               	addwf	rain_mode@i+1,f
  1967  0495                     l85:
  1968  0495  0875               	movf	rain_mode@i+1,w
  1969  0496  3A80               	xorlw	128
  1970  0497  00F2               	movwf	??_rain_mode
  1971  0498  0871               	movf	rain_mode@value_ms+1,w
  1972  0499  3A80               	xorlw	128
  1973  049A  0272               	subwf	??_rain_mode,w
  1974  049B  1D03               	skipz
  1975  049C  2C9F               	goto	u835
  1976  049D  0870               	movf	rain_mode@value_ms,w
  1977  049E  0274               	subwf	rain_mode@i,w
  1978  049F                     u835:
  1979  049F  1C03               	skipc
  1980  04A0  2CA2               	goto	u831
  1981  04A1  2CA3               	goto	u830
  1982  04A2                     u831:
  1983  04A2  2C86               	goto	l1206
  1984  04A3                     u830:
  1985  04A3                     l87:
  1986                           
  1987                           ;main_traffic_light.c: 193:     PORTCbits.RC1 = PORTCbits.RC4 = 0;
  1988  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1989  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1990  04A5  1207               	bcf	7,4	;volatile
  1991  04A6  1087               	bcf	7,1	;volatile
  1992  04A7                     l1208:
  1993                           
  1994                           ;main_traffic_light.c: 194:     for(int i=0; i<value_ms; i++)
  1995  04A7  01F6               	clrf	rain_mode@i_240
  1996  04A8  01F7               	clrf	rain_mode@i_240+1
  1997  04A9  2CB9               	goto	l88
  1998  04AA                     l1210:
  1999                           
  2000                           ;main_traffic_light.c: 195:         _delay((unsigned long)((1)*(16000000/4000.0)));
  2001  04AA  3006               	movlw	6
  2002  04AB  00F3               	movwf	??_rain_mode+1
  2003  04AC  3030               	movlw	48
  2004  04AD  00F2               	movwf	??_rain_mode
  2005  04AE                     u1027:
  2006  04AE  0BF2               	decfsz	??_rain_mode,f
  2007  04AF  2CAE               	goto	u1027
  2008  04B0  0BF3               	decfsz	??_rain_mode+1,f
  2009  04B1  2CAE               	goto	u1027
  2010  04B2  0000               	nop
  2011  04B3  3001               	movlw	1
  2012  04B4  07F6               	addwf	rain_mode@i_240,f
  2013  04B5  1803               	skipnc
  2014  04B6  0AF7               	incf	rain_mode@i_240+1,f
  2015  04B7  3000               	movlw	0
  2016  04B8  07F7               	addwf	rain_mode@i_240+1,f
  2017  04B9                     l88:
  2018  04B9  0877               	movf	rain_mode@i_240+1,w
  2019  04BA  3A80               	xorlw	128
  2020  04BB  00F2               	movwf	??_rain_mode
  2021  04BC  0871               	movf	rain_mode@value_ms+1,w
  2022  04BD  3A80               	xorlw	128
  2023  04BE  0272               	subwf	??_rain_mode,w
  2024  04BF  1D03               	skipz
  2025  04C0  2CC3               	goto	u845
  2026  04C1  0870               	movf	rain_mode@value_ms,w
  2027  04C2  0276               	subwf	rain_mode@i_240,w
  2028  04C3                     u845:
  2029  04C3  1C03               	skipc
  2030  04C4  2CC6               	goto	u841
  2031  04C5  2CC7               	goto	u840
  2032  04C6                     u841:
  2033  04C6  2CAA               	goto	l1210
  2034  04C7                     u840:
  2035  04C7                     l91:
  2036  04C7  0008               	return
  2037  04C8                     __end_of_rain_mode:
  2038                           
  2039                           	psect	text8
  2040  0448                     __ptext8:	
  2041 ;; *************** function _init_cofig *****************
  2042 ;; Defined at:
  2043 ;;		line 131 in file "main_traffic_light.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _init_cofig
  2072  0448                     _init_cofig:
  2073  0448                     l1212:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _init_cofig: [wreg+status,2]
  2076                           
  2077                           
  2078                           ;main_traffic_light.c: 132:     ADCON1 = 0x06;
  2079  0448  3006               	movlw	6
  2080  0449  1683               	bsf	3,5	;RP0=1, select bank1
  2081  044A  1303               	bcf	3,6	;RP1=0, select bank1
  2082  044B  009F               	movwf	31	;volatile
  2083  044C                     l1214:
  2084                           
  2085                           ;main_traffic_light.c: 134:     TRISAbits.TRISA0=1;
  2086  044C  1405               	bsf	5,0	;volatile
  2087  044D                     l1216:
  2088                           
  2089                           ;main_traffic_light.c: 135:     TRISAbits.TRISA1=1;
  2090  044D  1485               	bsf	5,1	;volatile
  2091  044E                     l1218:
  2092                           
  2093                           ;main_traffic_light.c: 136:     TRISAbits.TRISA2=1;
  2094  044E  1505               	bsf	5,2	;volatile
  2095  044F                     l1220:
  2096                           
  2097                           ;main_traffic_light.c: 137:     TRISAbits.TRISA3=1;
  2098  044F  1585               	bsf	5,3	;volatile
  2099  0450                     l1222:
  2100                           
  2101                           ;main_traffic_light.c: 139:     TRISD = 0x00;
  2102  0450  0188               	clrf	8	;volatile
  2103  0451                     l1224:
  2104                           
  2105                           ;main_traffic_light.c: 140:     PORTD = 0xff;
  2106  0451  30FF               	movlw	255
  2107  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0454  0088               	movwf	8	;volatile
  2110  0455                     l1226:
  2111                           
  2112                           ;main_traffic_light.c: 142:     TRISBbits.TRISB0 = 0;
  2113  0455  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0456  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0457  1006               	bcf	6,0	;volatile
  2116  0458                     l1228:
  2117                           
  2118                           ;main_traffic_light.c: 143:     TRISBbits.TRISB1 = 0;
  2119  0458  1086               	bcf	6,1	;volatile
  2120  0459                     l1230:
  2121                           
  2122                           ;main_traffic_light.c: 144:     TRISBbits.TRISB2 = 0;
  2123  0459  1106               	bcf	6,2	;volatile
  2124  045A                     l1232:
  2125                           
  2126                           ;main_traffic_light.c: 145:     TRISBbits.TRISB3 = 0;
  2127  045A  1186               	bcf	6,3	;volatile
  2128  045B                     l1234:
  2129                           
  2130                           ;main_traffic_light.c: 146:     PORTBbits.RB0=PORTBbits.RB1=PORTBbits.RB2=PORTBbits.RB3=
      +                          0;
  2131  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2132  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2133  045D  1186               	bcf	6,3	;volatile
  2134  045E  1106               	bcf	6,2	;volatile
  2135  045F  1086               	bcf	6,1	;volatile
  2136  0460  1006               	bcf	6,0	;volatile
  2137  0461                     l1236:
  2138                           
  2139                           ;main_traffic_light.c: 148:     TRISCbits.TRISC0=0;
  2140  0461  1683               	bsf	3,5	;RP0=1, select bank1
  2141  0462  1303               	bcf	3,6	;RP1=0, select bank1
  2142  0463  1007               	bcf	7,0	;volatile
  2143  0464                     l1238:
  2144                           
  2145                           ;main_traffic_light.c: 149:     TRISCbits.TRISC1=0;
  2146  0464  1087               	bcf	7,1	;volatile
  2147  0465                     l1240:
  2148                           
  2149                           ;main_traffic_light.c: 150:     TRISCbits.TRISC2=0;
  2150  0465  1107               	bcf	7,2	;volatile
  2151  0466                     l1242:
  2152                           
  2153                           ;main_traffic_light.c: 151:     TRISCbits.TRISC3=0;
  2154  0466  1187               	bcf	7,3	;volatile
  2155  0467                     l1244:
  2156                           
  2157                           ;main_traffic_light.c: 152:     TRISCbits.TRISC4=0;
  2158  0467  1207               	bcf	7,4	;volatile
  2159  0468                     l1246:
  2160                           
  2161                           ;main_traffic_light.c: 153:     TRISCbits.TRISC5=0;
  2162  0468  1287               	bcf	7,5	;volatile
  2163  0469                     l1248:
  2164                           
  2165                           ;main_traffic_light.c: 154:     PORTCbits.RC0=PORTCbits.RC3=PORTCbits.RC1=PORTCbits.RC4=
      +                          PORTCbits.RC2=PORTCbits.RC5=0;
  2166  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2167  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2168  046B  1287               	bcf	7,5	;volatile
  2169  046C  1107               	bcf	7,2	;volatile
  2170  046D  1207               	bcf	7,4	;volatile
  2171  046E  1087               	bcf	7,1	;volatile
  2172  046F  1187               	bcf	7,3	;volatile
  2173  0470  1007               	bcf	7,0	;volatile
  2174  0471                     l77:
  2175  0471  0008               	return
  2176  0472                     __end_of_init_cofig:
  2177  007E                     btemp	set	126	;btemp
  2178  007E                     wtemp0	set	126
  2179                           
  2180                           	psect	config
  2181                           
  2182                           ;Config register CONFIG @ 0x2007
  2183                           ;	Oscillator Selection bits
  2184                           ;	FOSC = HS, HS oscillator
  2185                           ;	Watchdog Timer Enable bit
  2186                           ;	WDTE = OFF, WDT disabled
  2187                           ;	Power-up Timer Enable bit
  2188                           ;	PWRTE = ON, PWRT enabled
  2189                           ;	Brown-out Reset Enable bit
  2190                           ;	BOREN = ON, BOR enabled
  2191                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2192                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2193                           ;	Data EEPROM Memory Code Protection bit
  2194                           ;	CPD = OFF, Data EEPROM code protection off
  2195                           ;	Flash Program Memory Write Enable bits
  2196                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2197                           ;	In-Circuit Debugger Mode bit
  2198                           ;	DEBUG = 0x1, unprogrammed default
  2199                           ;	Flash Program Memory Code Protection bit
  2200                           ;	CP = OFF, Code protection off
  2201  2007                     	org	8199
  2202  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      9      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _normal_mode->_hienThi
    _hienThi->___awdiv
    _night_mode->_rain_mode

Critical Paths under _main in BANK0

    _main->_rush_hour_mode
    _rush_hour_mode->_normal_mode

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3842
                                              6 BANK0      3     3      0
                         _init_cofig
                         _night_mode
                        _normal_mode
                          _rain_mode
                     _rush_hour_mode
 ---------------------------------------------------------------------------------
 (1) _rush_hour_mode                                       2     0      2    1677
                                              4 BANK0      2     0      2
                        _normal_mode
 ---------------------------------------------------------------------------------
 (2) _normal_mode                                          4     2      2    1579
                                              0 BANK0      4     2      2
                            _hienThi
 ---------------------------------------------------------------------------------
 (3) _hienThi                                              5     5      0    1250
                                              8 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     600
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _night_mode                                           2     0      2     342
                                              8 COMMON     2     0      2
                          _rain_mode
 ---------------------------------------------------------------------------------
 (1) _rain_mode                                            8     6      2     244
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _init_cofig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_cofig
   _night_mode
     _rain_mode
   _normal_mode
     _hienThi
       ___awdiv
       ___awmod
   _rain_mode
   _rush_hour_mode
     _normal_mode
       _hienThi
         ___awdiv
         ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jan 22 08:39:00 2022

                      pc 0002                       l82 0647                       l91 04C7  
                     l77 0471                       l85 0495                       l87 04A3  
                     l88 04B9             ___awdiv@sign 0075             hienThi@count 007B  
                     fsr 0004                      l102 07E1                      l105 0420  
                    l108 0414                      l360 0520                      l347 0587  
                    u500 0531                      u501 0530                      u510 0542  
                    u511 0541                      u600 04D8                      u601 04D7  
                    u530 0554                      u610 04E3                      u531 0553  
                    u611 04E2                      u525 0546                      u550 0565  
                    u630 04F5                      u710 074B                      u551 0564  
                    u631 04F4                      u711 074A                      u640 04FF  
                    u800 07E1                      u720 075B                      u704 072E  
                    u545 0555                      u641 04FE                      u625 04E7  
                    u801 07E0                      u721 0757                      u810 0480  
                    u570 0579                      u490 0526                      u811 047C  
                    u571 0578                      u555 0561                      u491 0525  
                    u580 057E                      u660 0512                      u740 077B  
                    u900 069B                      u581 057D                      u565 056D  
                    u661 0511                      u645 04FB                      u741 077A  
                    u901 069A                      u830 04A3                      u670 0517  
                    u590 04CD                      u750 0791                      u734 075E  
                    u910 06B8                      u831 04A2                      u671 0516  
                    u655 0506                      u591 04CC                      u751 078D  
                    u911 06B7                      u840 04C7                      u824 0483  
                    u680 0647                      u920 06BC                      u841 04C6  
                    u681 0646                      u921 06BB                      u770 07B1  
                    u690 072B                      u930 06CF                      u850 065D  
                    u835 049F                      u771 07B0                      u691 0727  
                    u931 06CE                      u915 06B4                      u851 065C  
                    u780 07C1                      u764 0794                      u940 06E0  
                    u860 0661                      u845 04C3                      u685 0643  
                    u781 07BD                      u941 06DF                      u861 0660  
                    u950 06F1                      u870 0679                      u951 06F0  
                    u871 0678                      u855 0659                      u960 0702  
                    u880 067D                      u961 0701                      u881 067C  
                    u794 07C4                      u890 0697                      u891 0696  
                    u875 0675                      u895 0693                      u977 05BF  
                    u987 05D6                      u997 0613                      fsr0 0004  
                    indf 0000             ___awmod@sign 0075                     l1010 052D  
                   l1002 0521                     l1020 0542                     l1012 0531  
                   l1004 0522                     l1100 05C9                     l1030 0565  
                   l1022 0545                     l1014 0536                     l1006 0526  
                   l1110 060C                     l1102 05CF                     l1040 057E  
                   l1032 056B                     l1024 054C                     l1016 053A  
                   l1008 052B                     l1120 0624                     l1112 060D  
                   l1104 05D0                     l1200 07DB                     l1210 04AA  
                   l1202 0472                     l1042 0583                     l1034 056C  
                   l1026 0550                     l1018 053C                     l1050 04CD  
                   l1122 0631                     l1114 061A                     l1106 05DD  
                   l1130 0715                     l1220 044F                     l1212 0448  
                   l1204 0483                     l1036 0573                     l1028 0554  
                   l1060 04E3                     l1052 04D2                     l1124 0634  
                   l1116 061D                     l1108 0606                     l1140 0730  
                   l1132 071D                     l1300 06FA                     l1230 0459  
                   l1222 0450                     l1214 044C                     l1206 0486  
                   l1038 0579                     l1070 04FF                     l1062 04E6  
                   l1054 04D4                     l1046 04C8                     l1126 063A  
                   l1118 0623                     l1150 074B                     l1142 0732  
                   l1134 0721                     l1302 0702                     l1240 0465  
                   l1232 045A                     l1224 0451                     l1216 044D  
                   l1208 04A7                     l1080 051C                     l1072 0505  
                   l1064 04ED                     l1056 04D8                     l1048 04C9  
                   l1160 0767                     l1152 0753                     l1144 0737  
                   l1136 0723                     l1128 070F                     l1242 0466  
                   l1234 045B                     l1226 0455                     l1218 044E  
                   l1074 050C                     l1066 04F1                     l1058 04DD  
                   l1090 058A                     l1170 0787                     l1162 076F  
                   l1154 075E                     l1146 073F                     l1138 072E  
                   l1250 0415                     l1244 0467                     l1236 0461  
                   l1228 0458                     l1252 040B                     l1068 04F5  
                   l1076 0512                     l1092 05B2                     l1084 0588  
                   l1180 079D                     l1172 0789                     l1164 0775  
                   l1156 0760                     l1148 0745                     l1260 0661  
                   l1246 0468                     l1238 0464                     l1078 0517  
                   l1094 05B8                     l1190 07C4                     l1182 07A5  
                   l1174 0794                     l1166 077B                     l1158 0762  
                   l1270 067F                     l1262 0663                     l1254 0648  
                   l1248 0469                     l1096 05B9                     l1192 07C6  
                   l1184 07AB                     l1176 0796                     l1168 077F  
                   l1280 06A7                     l1272 0687                     l1264 066B  
                   l1256 064D                     l1098 05C6                     l1194 07C8  
                   l1186 07B1                     l1178 0798                     l1290 06CF  
                   l1282 06B8                     l1274 0697                     l1266 0679  
                   l1258 065D                     l1196 07CD                     l1188 07B9  
                   l1292 06D8                     l1284 06BC                     l1276 069B  
                   l1268 067D                     l1198 07D5                     l1294 06E0  
                   l1286 06BE                     l1278 069D                     l1296 06E9  
                   l1288 06C9                     l1298 06F1                     u1007 062A  
                   u1017 048A                     u1027 04AE        rain_mode@value_ms 0070  
                   _main 0648                     _num1 003E                     _num2 0038  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 0588          __end_of___awmod 0521          ___awdiv@divisor 0070  
        ___awdiv@counter 0074                    _PORTD 0008                    _TRISD 0088  
        __end_of_hienThi 0648                    _chuc1 003A                    _chuc2 0034  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E2             __end_of_main 070F                   ??_main 0046  
                 _ADCON1 009F         ___awdiv@dividend 0072                ??___awdiv 0074  
              ??___awmod 0074             ?_normal_mode 0040                   _donvi1 003C  
                 _donvi2 0036         ___awdiv@quotient 0076          ___awmod@divisor 0070  
                 _number 0020          ___awmod@counter 0074                ??_hienThi 0078  
         rain_mode@i_240 0076  __end_of__initialization 07FC  __size_of_rush_hour_mode 000C  
         __pcstackCOMMON 0070             __pidataBANK0 0434               __pbssBANK0 0034  
     __size_of_rain_mode 0056               __pmaintext 0648          night_mode@value 0078  
                ___awdiv 0521                  ___awmod 04C8               _init_cofig 0448  
                __ptext1 0415                  __ptext2 070F                  __ptext3 0588  
                __ptext4 04C8                  __ptext5 0521                  __ptext6 040B  
                __ptext7 0472                  __ptext8 0448     __size_of_normal_mode 00D3  
                _hienThi 0588                  _macdinh 0032               _night_mode 040B  
       ___awmod@dividend 0072               _rain_stare 002C        __end_of_rain_mode 04C8  
   end_of_initialization 07FC           _rush_hour_mode 0415                _PORTAbits 0005  
              _PORTBbits 0006                _PORTCbits 0007                _TRISAbits 0085  
              _TRISBbits 0086                _TRISCbits 0087   __end_of_rush_hour_mode 0421  
            ?_init_cofig 0070              ?_night_mode 0078      start_initialization 07E2  
       normal_mode@temp1 0042         normal_mode@value 0040          ?_rush_hour_mode 0044  
             init_fetch0 0421              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 0040               rain_mode@i 0074      __size_of_init_cofig 002A  
    __size_of_night_mode 000A                 ?___awdiv 0070                 ?___awmod 0070  
               ?_hienThi 0070                _rain_mode 0472      rush_hour_mode@digit 0044  
          ??_normal_mode 007D               ?_rain_mode 0070             ??_init_cofig 0070  
       __size_of___awdiv 0067         __size_of___awmod 0059         __size_of_hienThi 00C0  
           ??_night_mode 007A      __end_of_normal_mode 07E2         ??_rush_hour_mode 007D  
     __end_of_init_cofig 0472            __size_of_main 00C7              _night_state 002E  
     __end_of_night_mode 0415             _normal_state 0030                 init_ram0 0425  
            ??_rain_mode 0072          _rush_hour_state 002A              _normal_mode 070F  
