

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Nov 24 10:06:20 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  06CD                     __pidataBANK0:
   177                           
   178                           ;initializer for _number
   179  06CD  34C0               	retlw	192
   180  06CE  34F9               	retlw	249
   181  06CF  34A4               	retlw	164
   182  06D0  34B0               	retlw	176
   183  06D1  3499               	retlw	153
   184  06D2  3492               	retlw	146
   185  06D3  3482               	retlw	130
   186  06D4  34F8               	retlw	248
   187  06D5  3480               	retlw	128
   188  06D6  3490               	retlw	144
   189                           
   190                           	psect	nvBANK0
   191  002A                     __pnvBANK0:
   192  002A                     _donvi:
   193  002A                     	ds	2
   194  002C                     _chuc:
   195  002C                     	ds	2
   196  0001                     _TMR0	set	1
   197  0006                     _PORTB	set	6
   198  0039                     _RC1	set	57
   199  0038                     _RC0	set	56
   200  0087                     _TRISCbits	set	135
   201  0086                     _TRISB	set	134
   202  009F                     _ADCON1	set	159
   203  0081                     _OPTION_REGbits	set	129
   204  040C                     _T0SE	set	1036
   205                           
   206                           	psect	cinit
   207  07E8                     start_initialization:	
   208                           ; #config settings
   209                           
   210  07E8                     __initialization:
   211                           
   212                           ; Initialize objects allocated to BANK0
   213  07E8  1383               	bcf	3,7	;select IRP bank0
   214  07E9  302A               	movlw	low (__pdataBANK0+10)
   215  07EA  00FD               	movwf	btemp+-1
   216  07EB  3006               	movlw	high __pidataBANK0
   217  07EC  00FE               	movwf	btemp
   218  07ED  30CD               	movlw	low __pidataBANK0
   219  07EE  00FF               	movwf	btemp+1
   220  07EF  3020               	movlw	low __pdataBANK0
   221  07F0  0084               	movwf	4
   222  07F1  120A  118A  26DB  120A  118A  	fcall	init_ram0
   223                           
   224                           ; Clear objects allocated to BANK0
   225  07F6  01AE               	clrf	__pbssBANK0& (0+127)
   226  07F7  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   227  07F8  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   228  07F9  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   229                           
   230                           ; Clear objects allocated to COMMON
   231  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   232  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2EEA   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  007B                     __pbssCOMMON:
   242  007B                     _dem:
   243  007B                     	ds	2
   244                           
   245                           	psect	bssBANK0
   246  002E                     __pbssBANK0:
   247  002E                     _tram:
   248  002E                     	ds	2
   249  0030                     _nghin:
   250  0030                     	ds	2
   251                           
   252                           	psect	dataBANK0
   253  0020                     __pdataBANK0:
   254  0020                     _number:
   255  0020                     	ds	10
   256                           
   257                           	psect	inittext
   258  06D7                     init_fetch0:	
   259                           ;	Called with low address in FSR and high address in W
   260                           
   261  06D7  087E               	movf	btemp,w
   262  06D8  008A               	movwf	10
   263  06D9  087F               	movf	btemp+1,w
   264  06DA  0082               	movwf	2
   265  06DB                     init_ram0:	
   266                           ;Called with:
   267                           ;	high address of idata address in btemp 
   268                           ;	low address of idata address in btemp+1 
   269                           ;	low address of data in FSR
   270                           ;	high address + 1 of data in btemp-1
   271                           
   272  06DB  120A  118A  26D7  120A  118A  	fcall	init_fetch0
   273  06E0  0080               	movwf	0
   274  06E1  0A84               	incf	4,f
   275  06E2  0804               	movf	4,w
   276  06E3  067D               	xorwf	btemp+-1,w
   277  06E4  1903               	btfsc	3,2
   278  06E5  3400               	retlw	0
   279  06E6  0AFF               	incf	btemp+1,f
   280  06E7  1903               	btfsc	3,2
   281  06E8  0AFE               	incf	btemp,f
   282  06E9  2EDB               	goto	init_ram0
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:
   286  0070                     ?_couter0:
   287  0070                     ??_couter0:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_display:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?___lwdiv:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?___lwmod:	
   300                           ; 2 bytes @ 0x0
   301                           
   302  0070                     ___lwdiv@divisor:	
   303                           ; 2 bytes @ 0x0
   304                           
   305  0070                     ___lwmod@divisor:	
   306                           ; 2 bytes @ 0x0
   307                           
   308                           
   309                           ; 2 bytes @ 0x0
   310  0070                     	ds	2
   311  0072                     ___lwdiv@dividend:
   312  0072                     ___lwmod@dividend:	
   313                           ; 2 bytes @ 0x2
   314                           
   315                           
   316                           ; 2 bytes @ 0x2
   317  0072                     	ds	2
   318  0074                     ??___lwdiv:
   319  0074                     ??___lwmod:	
   320                           ; 1 bytes @ 0x4
   321                           
   322  0074                     ___lwmod@counter:	
   323                           ; 1 bytes @ 0x4
   324                           
   325  0074                     ___lwdiv@quotient:	
   326                           ; 1 bytes @ 0x4
   327                           
   328                           
   329                           ; 2 bytes @ 0x4
   330  0074                     	ds	2
   331  0076                     ___lwdiv@counter:
   332                           
   333                           ; 1 bytes @ 0x6
   334  0076                     	ds	1
   335  0077                     ??_display:
   336                           
   337                           ; 1 bytes @ 0x7
   338  0077                     	ds	2
   339  0079                     ??_main:
   340                           
   341                           ; 1 bytes @ 0x9
   342  0079                     	ds	2
   343                           
   344                           	psect	maintext
   345  06EA                     __pmaintext:	
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 51 in file "main.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : B00/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          2       0       0       0       0
   368 ;;      Totals:         2       0       0       0       0
   369 ;;Total ram usage:        2 bytes
   370 ;; Hardware stack levels required when called:    2
   371 ;; This function calls:
   372 ;;		_couter0
   373 ;;		_display
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _main
   381  06EA                     _main:
   382  06EA                     l795:	
   383                           ;incstack = 0
   384                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   385                           
   386  06EA  3006               	movlw	6
   387  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   388  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   389  06ED  009F               	movwf	31	;volatile
   390  06EE                     l797:
   391  06EE  0186               	clrf	6	;volatile
   392  06EF                     l799:
   393  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   394  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   395  06F1  0186               	clrf	6	;volatile
   396  06F2                     l801:
   397  06F2  1683               	bsf	3,5	;RP0=1, select bank1
   398  06F3  1303               	bcf	3,6	;RP1=0, select bank1
   399  06F4  1007               	bcf	7,0	;volatile
   400  06F5                     l803:
   401  06F5  1087               	bcf	7,1	;volatile
   402  06F6                     l805:
   403  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   404  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   405  06F8  1087               	bcf	7,1	;volatile
   406  06F9  1007               	bcf	7,0	;volatile
   407  06FA                     l807:
   408  06FA  120A  118A  26C7  120A  118A  	fcall	_couter0
   409  06FF                     l809:
   410  06FF  120A  118A  279B  120A  118A  	fcall	_display
   411  0704                     l811:
   412  0704  1283               	bcf	3,5	;RP0=0, select bank0
   413  0705  1303               	bcf	3,6	;RP1=0, select bank0
   414  0706  0801               	movf	1,w	;volatile
   415  0707  00F9               	movwf	??_main
   416  0708  01FA               	clrf	??_main+1
   417  0709  0879               	movf	??_main,w
   418  070A  00FB               	movwf	_dem
   419  070B  087A               	movf	??_main+1,w
   420  070C  00FC               	movwf	_dem+1
   421  070D                     l813:
   422  070D  3000               	movlw	0
   423  070E  027C               	subwf	_dem+1,w
   424  070F  3064               	movlw	100
   425  0710  1903               	skipnz
   426  0711  027B               	subwf	_dem,w
   427  0712  1C03               	skipc
   428  0713  2F15               	goto	u281
   429  0714  2F16               	goto	u280
   430  0715                     u281:
   431  0715  2EFF               	goto	l809
   432  0716                     u280:
   433  0716                     l815:
   434  0716  0181               	clrf	1	;volatile
   435  0717  01FB               	clrf	_dem
   436  0718  01FC               	clrf	_dem+1
   437  0719  2EFF               	goto	l809
   438  071A  120A  118A  2800   	ljmp	start
   439  071D                     __end_of_main:
   440                           
   441                           	psect	text1
   442  079B                     __ptext1:	
   443 ;; *************** function _display *****************
   444 ;; Defined at:
   445 ;;		line 35 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          2       0       0       0       0
   462 ;;      Totals:         2       0       0       0       0
   463 ;;Total ram usage:        2 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:    1
   466 ;; This function calls:
   467 ;;		___lwdiv
   468 ;;		___lwmod
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _display
   476  079B                     _display:
   477  079B                     l777:	
   478                           ;incstack = 0
   479                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   480                           
   481                           
   482                           ;main.c: 37: 
   483  079B  300A               	movlw	10
   484  079C  00F0               	movwf	___lwdiv@divisor
   485  079D  3000               	movlw	0
   486  079E  00F1               	movwf	___lwdiv@divisor+1
   487  079F  087C               	movf	_dem+1,w
   488  07A0  00F3               	movwf	___lwdiv@dividend+1
   489  07A1  087B               	movf	_dem,w
   490  07A2  00F2               	movwf	___lwdiv@dividend
   491  07A3  120A  118A  2757  120A  118A  	fcall	___lwdiv
   492  07A8  0871               	movf	?___lwdiv+1,w
   493  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   494  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   495  07AB  00AD               	movwf	_chuc+1
   496  07AC  0870               	movf	?___lwdiv,w
   497  07AD  00AC               	movwf	_chuc
   498                           
   499                           ;main.c: 38:     couter0();
   500  07AE  300A               	movlw	10
   501  07AF  00F0               	movwf	___lwmod@divisor
   502  07B0  3000               	movlw	0
   503  07B1  00F1               	movwf	___lwmod@divisor+1
   504  07B2  087C               	movf	_dem+1,w
   505  07B3  00F3               	movwf	___lwmod@dividend+1
   506  07B4  087B               	movf	_dem,w
   507  07B5  00F2               	movwf	___lwmod@dividend
   508  07B6  120A  118A  271D  120A  118A  	fcall	___lwmod
   509  07BB  0871               	movf	?___lwmod+1,w
   510  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   511  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   512  07BE  00AB               	movwf	_donvi+1
   513  07BF  0870               	movf	?___lwmod,w
   514  07C0  00AA               	movwf	_donvi
   515  07C1                     l779:
   516                           
   517                           ;main.c: 40:     {
   518  07C1  082C               	movf	_chuc,w
   519  07C2  3E20               	addlw	(low (_number| 0))& (0+255)
   520  07C3  0084               	movwf	4
   521  07C4  1383               	bcf	3,7	;select IRP bank0
   522  07C5  0800               	movf	0,w
   523  07C6  0086               	movwf	6	;volatile
   524  07C7                     l781:
   525                           
   526                           ;main.c: 41:         display();
   527  07C7  1007               	bcf	7,0	;volatile
   528  07C8                     l783:
   529                           
   530                           ;main.c: 42:         dem=TMR0;
   531  07C8  3041               	movlw	65
   532  07C9  00F8               	movwf	??_display+1
   533  07CA  30EE               	movlw	238
   534  07CB  00F7               	movwf	??_display
   535  07CC                     u297:
   536  07CC  0BF7               	decfsz	??_display,f
   537  07CD  2FCC               	goto	u297
   538  07CE  0BF8               	decfsz	??_display+1,f
   539  07CF  2FCC               	goto	u297
   540  07D0  0000               	nop
   541  07D1                     l785:
   542                           
   543                           ;main.c: 43:         if(dem>=100)
   544  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   545  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   546  07D3  1407               	bsf	7,0	;volatile
   547  07D4                     l787:
   548                           
   549                           ;main.c: 45:             TMR0=0;
   550  07D4  082A               	movf	_donvi,w
   551  07D5  3E20               	addlw	(low (_number| 0))& (0+255)
   552  07D6  0084               	movwf	4
   553  07D7  1383               	bcf	3,7	;select IRP bank0
   554  07D8  0800               	movf	0,w
   555  07D9  0086               	movwf	6	;volatile
   556  07DA                     l789:
   557                           
   558                           ;main.c: 46:             dem=0;
   559  07DA  1087               	bcf	7,1	;volatile
   560  07DB                     l791:
   561                           
   562                           ;main.c: 47:         }
   563  07DB  3041               	movlw	65
   564  07DC  00F8               	movwf	??_display+1
   565  07DD  30EE               	movlw	238
   566  07DE  00F7               	movwf	??_display
   567  07DF                     u307:
   568  07DF  0BF7               	decfsz	??_display,f
   569  07E0  2FDF               	goto	u307
   570  07E1  0BF8               	decfsz	??_display+1,f
   571  07E2  2FDF               	goto	u307
   572  07E3  0000               	nop
   573  07E4                     l793:
   574                           
   575                           ;main.c: 48:     }
   576  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   577  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   578  07E6  1487               	bsf	7,1	;volatile
   579  07E7                     l38:
   580  07E7  0008               	return
   581  07E8                     __end_of_display:
   582                           
   583                           	psect	text2
   584  071D                     __ptext2:	
   585 ;; *************** function ___lwmod *****************
   586 ;; Defined at:
   587 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  divisor         2    0[COMMON] unsigned int 
   590 ;;  dividend        2    2[COMMON] unsigned int 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  counter         1    4[COMMON] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2    0[COMMON] unsigned int 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0, btemp+1
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         4       0       0       0       0
   603 ;;      Locals:         1       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         5       0       0       0       0
   606 ;;Total ram usage:        5 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_display
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function ___lwmod
   617  071D                     ___lwmod:
   618  071D                     l755:	
   619                           ;incstack = 0
   620                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   621                           
   622  071D  0870               	movf	___lwmod@divisor,w
   623  071E  0471               	iorwf	___lwmod@divisor+1,w
   624  071F  1903               	btfsc	3,2
   625  0720  2F22               	goto	u221
   626  0721  2F23               	goto	u220
   627  0722                     u221:
   628  0722  2F52               	goto	l773
   629  0723                     u220:
   630  0723                     l757:
   631  0723  01F4               	clrf	___lwmod@counter
   632  0724  0AF4               	incf	___lwmod@counter,f
   633  0725  2F31               	goto	l763
   634  0726                     l759:
   635  0726  3001               	movlw	1
   636  0727                     u235:
   637  0727  1003               	clrc
   638  0728  0DF0               	rlf	___lwmod@divisor,f
   639  0729  0DF1               	rlf	___lwmod@divisor+1,f
   640  072A  3EFF               	addlw	-1
   641  072B  1D03               	skipz
   642  072C  2F27               	goto	u235
   643  072D                     l761:
   644  072D  3001               	movlw	1
   645  072E  00FF               	movwf	btemp+1
   646  072F  087F               	movf	btemp+1,w
   647  0730  07F4               	addwf	___lwmod@counter,f
   648  0731                     l763:
   649  0731  1FF1               	btfss	___lwmod@divisor+1,7
   650  0732  2F34               	goto	u241
   651  0733  2F35               	goto	u240
   652  0734                     u241:
   653  0734  2F26               	goto	l759
   654  0735                     u240:
   655  0735                     l765:
   656  0735  0871               	movf	___lwmod@divisor+1,w
   657  0736  0273               	subwf	___lwmod@dividend+1,w
   658  0737  1D03               	skipz
   659  0738  2F3B               	goto	u255
   660  0739  0870               	movf	___lwmod@divisor,w
   661  073A  0272               	subwf	___lwmod@dividend,w
   662  073B                     u255:
   663  073B  1C03               	skipc
   664  073C  2F3E               	goto	u251
   665  073D  2F3F               	goto	u250
   666  073E                     u251:
   667  073E  2F45               	goto	l769
   668  073F                     u250:
   669  073F                     l767:
   670  073F  0870               	movf	___lwmod@divisor,w
   671  0740  02F2               	subwf	___lwmod@dividend,f
   672  0741  0871               	movf	___lwmod@divisor+1,w
   673  0742  1C03               	skipc
   674  0743  03F3               	decf	___lwmod@dividend+1,f
   675  0744  02F3               	subwf	___lwmod@dividend+1,f
   676  0745                     l769:
   677  0745  3001               	movlw	1
   678  0746                     u265:
   679  0746  1003               	clrc
   680  0747  0CF1               	rrf	___lwmod@divisor+1,f
   681  0748  0CF0               	rrf	___lwmod@divisor,f
   682  0749  3EFF               	addlw	-1
   683  074A  1D03               	skipz
   684  074B  2F46               	goto	u265
   685  074C                     l771:
   686  074C  3001               	movlw	1
   687  074D  02F4               	subwf	___lwmod@counter,f
   688  074E  1D03               	btfss	3,2
   689  074F  2F51               	goto	u271
   690  0750  2F52               	goto	u270
   691  0751                     u271:
   692  0751  2F35               	goto	l765
   693  0752                     u270:
   694  0752                     l773:
   695  0752  0873               	movf	___lwmod@dividend+1,w
   696  0753  00F1               	movwf	?___lwmod+1
   697  0754  0872               	movf	___lwmod@dividend,w
   698  0755  00F0               	movwf	?___lwmod
   699  0756                     l415:
   700  0756  0008               	return
   701  0757                     __end_of___lwmod:
   702                           
   703                           	psect	text3
   704  0757                     __ptext3:	
   705 ;; *************** function ___lwdiv *****************
   706 ;; Defined at:
   707 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  divisor         2    0[COMMON] unsigned int 
   710 ;;  dividend        2    2[COMMON] unsigned int 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  quotient        2    4[COMMON] unsigned int 
   713 ;;  counter         1    6[COMMON] unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  2    0[COMMON] unsigned int 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, btemp+1
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         4       0       0       0       0
   724 ;;      Locals:         3       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0
   726 ;;      Totals:         7       0       0       0       0
   727 ;;Total ram usage:        7 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_display
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function ___lwdiv
   738  0757                     ___lwdiv:
   739  0757                     l729:	
   740                           ;incstack = 0
   741                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   742                           
   743  0757  01F4               	clrf	___lwdiv@quotient
   744  0758  01F5               	clrf	___lwdiv@quotient+1
   745  0759                     l731:
   746  0759  0870               	movf	___lwdiv@divisor,w
   747  075A  0471               	iorwf	___lwdiv@divisor+1,w
   748  075B  1903               	btfsc	3,2
   749  075C  2F5E               	goto	u151
   750  075D  2F5F               	goto	u150
   751  075E                     u151:
   752  075E  2F96               	goto	l751
   753  075F                     u150:
   754  075F                     l733:
   755  075F  01F6               	clrf	___lwdiv@counter
   756  0760  0AF6               	incf	___lwdiv@counter,f
   757  0761  2F6D               	goto	l739
   758  0762                     l735:
   759  0762  3001               	movlw	1
   760  0763                     u165:
   761  0763  1003               	clrc
   762  0764  0DF0               	rlf	___lwdiv@divisor,f
   763  0765  0DF1               	rlf	___lwdiv@divisor+1,f
   764  0766  3EFF               	addlw	-1
   765  0767  1D03               	skipz
   766  0768  2F63               	goto	u165
   767  0769                     l737:
   768  0769  3001               	movlw	1
   769  076A  00FF               	movwf	btemp+1
   770  076B  087F               	movf	btemp+1,w
   771  076C  07F6               	addwf	___lwdiv@counter,f
   772  076D                     l739:
   773  076D  1FF1               	btfss	___lwdiv@divisor+1,7
   774  076E  2F70               	goto	u171
   775  076F  2F71               	goto	u170
   776  0770                     u171:
   777  0770  2F62               	goto	l735
   778  0771                     u170:
   779  0771                     l741:
   780  0771  3001               	movlw	1
   781  0772                     u185:
   782  0772  1003               	clrc
   783  0773  0DF4               	rlf	___lwdiv@quotient,f
   784  0774  0DF5               	rlf	___lwdiv@quotient+1,f
   785  0775  3EFF               	addlw	-1
   786  0776  1D03               	skipz
   787  0777  2F72               	goto	u185
   788  0778  0871               	movf	___lwdiv@divisor+1,w
   789  0779  0273               	subwf	___lwdiv@dividend+1,w
   790  077A  1D03               	skipz
   791  077B  2F7E               	goto	u195
   792  077C  0870               	movf	___lwdiv@divisor,w
   793  077D  0272               	subwf	___lwdiv@dividend,w
   794  077E                     u195:
   795  077E  1C03               	skipc
   796  077F  2F81               	goto	u191
   797  0780  2F82               	goto	u190
   798  0781                     u191:
   799  0781  2F89               	goto	l747
   800  0782                     u190:
   801  0782                     l743:
   802  0782  0870               	movf	___lwdiv@divisor,w
   803  0783  02F2               	subwf	___lwdiv@dividend,f
   804  0784  0871               	movf	___lwdiv@divisor+1,w
   805  0785  1C03               	skipc
   806  0786  03F3               	decf	___lwdiv@dividend+1,f
   807  0787  02F3               	subwf	___lwdiv@dividend+1,f
   808  0788                     l745:
   809  0788  1474               	bsf	___lwdiv@quotient,0
   810  0789                     l747:
   811  0789  3001               	movlw	1
   812  078A                     u205:
   813  078A  1003               	clrc
   814  078B  0CF1               	rrf	___lwdiv@divisor+1,f
   815  078C  0CF0               	rrf	___lwdiv@divisor,f
   816  078D  3EFF               	addlw	-1
   817  078E  1D03               	skipz
   818  078F  2F8A               	goto	u205
   819  0790                     l749:
   820  0790  3001               	movlw	1
   821  0791  02F6               	subwf	___lwdiv@counter,f
   822  0792  1D03               	btfss	3,2
   823  0793  2F95               	goto	u211
   824  0794  2F96               	goto	u210
   825  0795                     u211:
   826  0795  2F71               	goto	l741
   827  0796                     u210:
   828  0796                     l751:
   829  0796  0875               	movf	___lwdiv@quotient+1,w
   830  0797  00F1               	movwf	?___lwdiv+1
   831  0798  0874               	movf	___lwdiv@quotient,w
   832  0799  00F0               	movwf	?___lwdiv
   833  079A                     l405:
   834  079A  0008               	return
   835  079B                     __end_of___lwdiv:
   836                           
   837                           	psect	text4
   838  06C7                     __ptext4:	
   839 ;; *************** function _couter0 *****************
   840 ;; Defined at:
   841 ;;		line 28 in file "main.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		None
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _couter0
   870  06C7                     _couter0:
   871  06C7                     l687:	
   872                           ;incstack = 0
   873                           ; Regs used in _couter0: []
   874                           
   875                           
   876                           ;main.c: 30:     ADCON1=0x06;
   877  06C7  1683               	bsf	3,5	;RP0=1, select bank1
   878  06C8  1303               	bcf	3,6	;RP1=0, select bank1
   879  06C9  1681               	bsf	1,5	;volatile
   880                           
   881                           ;main.c: 31: 
   882  06CA  1581               	bsf	1,3	;volatile
   883                           
   884                           ;main.c: 32:     TRISB = 0;
   885  06CB  1601               	bsf	1,4	;volatile
   886  06CC                     l35:
   887  06CC  0008               	return
   888  06CD                     __end_of_couter0:
   889  007E                     btemp	set	126	;btemp
   890  007E                     wtemp0	set	126
   891                           
   892                           	psect	config
   893                           
   894                           ;Config register CONFIG @ 0x2007
   895                           ;	Oscillator Selection bits
   896                           ;	FOSC = HS, HS oscillator
   897                           ;	Watchdog Timer Enable bit
   898                           ;	WDTE = OFF, WDT disabled
   899                           ;	Power-up Timer Enable bit
   900                           ;	PWRTE = ON, PWRT enabled
   901                           ;	Brown-out Reset Enable bit
   902                           ;	BOREN = ON, BOR enabled
   903                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   904                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   905                           ;	Data EEPROM Memory Code Protection bit
   906                           ;	CPD = OFF, Data EEPROM code protection off
   907                           ;	Flash Program Memory Write Enable bits
   908                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   909                           ;	In-Circuit Debugger Mode bit
   910                           ;	DEBUG = 0x1, unprogrammed default
   911                           ;	Flash Program Memory Code Protection bit
   912                           ;	CP = OFF, Code protection off
   913  2007                     	org	8199
   914  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _display->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     625
                                              9 COMMON     2     2      0
                            _couter0
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              2     2      0     625
                                              7 COMMON     2     2      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _couter0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _couter0
   _display
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Nov 24 10:06:20 2021

                      pc 0002                       l35 06CC                       l38 07E7  
                     fsr 0004                      l405 079A                      l415 0756  
                    l801 06F2                      l731 0759                      l811 0704  
                    l803 06F5                      l741 0771                      l733 075F  
                    l813 070D                      l805 06F6                      l743 0782  
                    l735 0762                      l751 0796                      l815 0716  
                    l807 06FA                      l745 0788                      l737 0769  
                    l729 0757                      l761 072D                      l809 06FF  
                    l747 0789                      l739 076D                      l771 074C  
                    l763 0731                      l755 071D                      l749 0790  
                    l765 0735                      l757 0723                      l773 0752  
                    l781 07C7                      l687 06C7                      l767 073F  
                    l759 0726                      l791 07DB                      l783 07C8  
                    l769 0745                      l793 07E4                      l785 07D1  
                    l777 079B                      l787 07D4                      l779 07C1  
                    l795 06EA                      l789 07DA                      l797 06EE  
                    l799 06EF                      _RC0 0038                      _RC1 0039  
                    u210 0796                      u211 0795                      u220 0723  
                    u205 078A                      u221 0722                      u150 075F  
                    u151 075E                      u240 0735                      u241 0734  
                    u170 0771                      u250 073F                      u171 0770  
                    u251 073E                      u235 0727                      u307 07DF  
                    u165 0763                      u190 0782                      u270 0752  
                    u191 0781                      u271 0751                      u255 073B  
                    u280 0716                      u185 0772                      u265 0746  
                    u281 0715                      u195 077E                      u297 07CC  
                    _dem 007B                      fsr0 0004                      indf 0000  
                   _T0SE 040C                     _TMR0 0001                     _chuc 002C  
                   _main 06EA                     _tram 002E                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 079B  
        __end_of___lwmod 0757                    _PORTB 0006                    _TRISB 0086  
        __end_of_display 07E8          __end_of_couter0 06CD                    _donvi 002A  
                  _nghin 0030                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E8             __end_of_main 071D  
                 ??_main 0079                   _ADCON1 009F                ??___lwdiv 0074  
              ??___lwmod 0074                   _number 0020                ??_display 0077  
              ??_couter0 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06CD           _OPTION_REGbits 0081               __pbssBANK0 002E  
             __pmaintext 06EA                  ___lwdiv 0757                  ___lwmod 071D  
                __ptext1 079B                  __ptext2 071D                  __ptext3 0757  
                __ptext4 06C7                  _display 079B                  _couter0 06C7  
   end_of_initialization 07FC                _TRISCbits 0087      start_initialization 07E8  
             init_fetch0 06D7              __pdataBANK0 0020              __pbssCOMMON 007B  
              ___latbits 0002                __pnvBANK0 002A         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070                 ?_display 0070  
               ?_couter0 0070         ___lwdiv@quotient 0074         __size_of___lwdiv 0044  
       __size_of___lwmod 003A         __size_of_display 004D         __size_of_couter0 0006  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076            __size_of_main 0033  
               init_ram0 06DB         ___lwmod@dividend 0072          ___lwmod@divisor 0070  
        ___lwmod@counter 0074  
