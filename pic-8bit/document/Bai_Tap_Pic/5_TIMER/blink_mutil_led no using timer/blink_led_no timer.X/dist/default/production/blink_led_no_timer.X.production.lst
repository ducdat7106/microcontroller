

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Mar 11 05:17:12 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0005                     _PORTAbits	set	5
   167  0085                     _TRISAbits	set	133
   168  009F                     _ADCON1	set	159
   169                           
   170                           	psect	cinit
   171  07F0                     start_initialization:	
   172                           ; #config settings
   173                           
   174  07F0                     __initialization:
   175                           
   176                           ; Clear objects allocated to COMMON
   177  07F0  01F0               	clrf	__pbssCOMMON& (0+127)
   178  07F1  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   179  07F2  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   180  07F3  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   181  07F4  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   182  07F5  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   183  07F6  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   184  07F7  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   185  07F8  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   186  07F9  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   187  07FA  01FA               	clrf	(__pbssCOMMON+10)& (0+127)
   188  07FB  01FB               	clrf	(__pbssCOMMON+11)& (0+127)
   189  07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192  07FC                     __end_of__initialization:
   193  07FC  0183               	clrf	3
   194  07FD  120A  118A  2FAA   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197  0070                     __pbssCOMMON:
   198  0070                     _t3:
   199  0070                     	ds	4
   200  0074                     _t2:
   201  0074                     	ds	4
   202  0078                     _t1:
   203  0078                     	ds	4
   204                           
   205                           	psect	cstackCOMMON
   206  007C                     __pcstackCOMMON:
   207  007C                     ?_blinkLed:
   208  007C                     ??_blinkLed:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  007C                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  007C                     ??_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219  007C                     	ds	1
   220                           
   221                           	psect	maintext
   222  07AA                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 36 in file "main_blink_led.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          1       0       0       0       0
   245 ;;      Totals:         1       0       0       0       0
   246 ;;Total ram usage:        1 bytes
   247 ;; Hardware stack levels required when called:    1
   248 ;; This function calls:
   249 ;;		_blinkLed
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           
   256                           ;psect for function _main
   257  07AA                     _main:
   258  07AA                     l626:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   261                           
   262                           
   263                           ;main_blink_led.c: 37:     ADCON1 = 0x06;
   264  07AA  3006               	movlw	6
   265  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   266  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   267  07AD  009F               	movwf	31	;volatile
   268  07AE                     l628:
   269                           
   270                           ;main_blink_led.c: 39:     TRISAbits.TRISA3 = TRISAbits.TRISA4 = TRISAbits.TRISA5 = 0;
   271  07AE  1285               	bcf	5,5	;volatile
   272  07AF  1205               	bcf	5,4	;volatile
   273  07B0  1185               	bcf	5,3	;volatile
   274  07B1                     l630:
   275                           
   276                           ;main_blink_led.c: 40:     PORTAbits.RA3=1;PORTAbits.RA4=1;PORTAbits.RA5=1;
   277  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   278  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   279  07B3  1585               	bsf	5,3	;volatile
   280  07B4                     l632:
   281  07B4  1605               	bsf	5,4	;volatile
   282  07B5                     l634:
   283  07B5  1685               	bsf	5,5	;volatile
   284  07B6                     l21:	
   285                           ;main_blink_led.c: 42:     while(1){
   286                           
   287                           
   288                           ;main_blink_led.c: 43:         t1++; t2++; t3++;
   289  07B6  3001               	movlw	1
   290  07B7  07F8               	addwf	_t1,f
   291  07B8  3000               	movlw	0
   292  07B9  1803               	skipnc
   293  07BA  3001               	movlw	1
   294  07BB  07F9               	addwf	_t1+1,f
   295  07BC  3000               	movlw	0
   296  07BD  1803               	skipnc
   297  07BE  3001               	movlw	1
   298  07BF  07FA               	addwf	_t1+2,f
   299  07C0  3000               	movlw	0
   300  07C1  1803               	skipnc
   301  07C2  3001               	movlw	1
   302  07C3  07FB               	addwf	_t1+3,f
   303  07C4  3001               	movlw	1
   304  07C5  07F4               	addwf	_t2,f
   305  07C6  3000               	movlw	0
   306  07C7  1803               	skipnc
   307  07C8  3001               	movlw	1
   308  07C9  07F5               	addwf	_t2+1,f
   309  07CA  3000               	movlw	0
   310  07CB  1803               	skipnc
   311  07CC  3001               	movlw	1
   312  07CD  07F6               	addwf	_t2+2,f
   313  07CE  3000               	movlw	0
   314  07CF  1803               	skipnc
   315  07D0  3001               	movlw	1
   316  07D1  07F7               	addwf	_t2+3,f
   317  07D2  3001               	movlw	1
   318  07D3  07F0               	addwf	_t3,f
   319  07D4  3000               	movlw	0
   320  07D5  1803               	skipnc
   321  07D6  3001               	movlw	1
   322  07D7  07F1               	addwf	_t3+1,f
   323  07D8  3000               	movlw	0
   324  07D9  1803               	skipnc
   325  07DA  3001               	movlw	1
   326  07DB  07F2               	addwf	_t3+2,f
   327  07DC  3000               	movlw	0
   328  07DD  1803               	skipnc
   329  07DE  3001               	movlw	1
   330  07DF  07F3               	addwf	_t3+3,f
   331                           
   332                           ;main_blink_led.c: 44:         _delay((unsigned long)((950)*(4000000/4000000.0)));
   333  07E0  30BD               	movlw	189
   334  07E1  00FC               	movwf	??_main
   335  07E2                     u27:
   336  07E2  2FE3               	nop2
   337  07E3  0BFC               	decfsz	??_main,f
   338  07E4  2FE2               	goto	u27
   339  07E5  2FE6               	nop2
   340  07E6  2FE7               	nop2
   341  07E7                     l636:
   342                           
   343                           ;main_blink_led.c: 45:         blinkLed();
   344  07E7  120A  118A  277C  120A  118A  	fcall	_blinkLed
   345  07EC  2FB6               	goto	l21
   346  07ED  120A  118A  2800   	ljmp	start
   347  07F0                     __end_of_main:
   348                           
   349                           	psect	text1
   350  077C                     __ptext1:	
   351 ;; *************** function _blinkLed *****************
   352 ;; Defined at:
   353 ;;		line 50 in file "main_blink_led.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0, btemp+1
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels used:    1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           
   381                           ;psect for function _blinkLed
   382  077C                     _blinkLed:
   383  077C                     l620:	
   384                           ;incstack = 0
   385                           ; Regs used in _blinkLed: [wreg+status,2+status,0+btemp+1]
   386                           
   387                           
   388                           ;main_blink_led.c: 51:     if(t1>=100){
   389  077C  1BFB               	btfsc	_t1+3,7
   390  077D  2F8E               	goto	u11
   391  077E  087B               	movf	_t1+3,w
   392  077F  1D03               	btfss	3,2
   393  0780  2F8F               	goto	u10
   394  0781  087A               	movf	_t1+2,w
   395  0782  1D03               	btfss	3,2
   396  0783  2F8F               	goto	u10
   397  0784  0879               	movf	_t1+1,w
   398  0785  1D03               	btfss	3,2
   399  0786  2F8F               	goto	u10
   400  0787  3064               	movlw	100
   401  0788  0278               	subwf	_t1,w
   402  0789  1D03               	skipz
   403  078A  2F8B               	goto	u13
   404  078B                     u13:
   405  078B  1C03               	btfss	3,0
   406  078C  2F8E               	goto	u11
   407  078D  2F8F               	goto	u10
   408  078E                     u11:
   409  078E  2FA9               	goto	l28
   410  078F                     u10:
   411  078F                     l622:
   412                           
   413                           ;main_blink_led.c: 52:         t1=0;
   414  078F  3000               	movlw	0
   415  0790  00FB               	movwf	_t1+3
   416  0791  3000               	movlw	0
   417  0792  00FA               	movwf	_t1+2
   418  0793  3000               	movlw	0
   419  0794  00F9               	movwf	_t1+1
   420  0795  3000               	movlw	0
   421  0796  00F8               	movwf	_t1
   422  0797                     l624:
   423                           
   424                           ;main_blink_led.c: 53:         PORTAbits.RA3^=1;
   425  0797  1283               	bcf	3,5	;RP0=0, select bank0
   426  0798  1303               	bcf	3,6	;RP1=0, select bank0
   427  0799  0C05               	rrf	5,w	;volatile
   428  079A  00FF               	movwf	btemp+1
   429  079B  0CFF               	rrf	btemp+1,f
   430  079C  0C7F               	rrf	btemp+1,w
   431  079D  3901               	andlw	1
   432  079E  00FF               	movwf	btemp+1
   433  079F  3001               	movlw	1
   434  07A0  06FF               	xorwf	btemp+1,f
   435  07A1  0DFF               	rlf	btemp+1,f
   436  07A2  0DFF               	rlf	btemp+1,f
   437  07A3  0DFF               	rlf	btemp+1,f
   438  07A4  0805               	movf	5,w	;volatile
   439  07A5  067F               	xorwf	btemp+1,w
   440  07A6  39F7               	andlw	-9
   441  07A7  067F               	xorwf	btemp+1,w
   442  07A8  0085               	movwf	5	;volatile
   443  07A9                     l28:
   444  07A9  0008               	return
   445  07AA                     __end_of_blinkLed:
   446  007E                     btemp	set	126	;btemp
   447  007E                     wtemp0	set	126
   448                           
   449                           	psect	config
   450                           
   451                           ;Config register CONFIG @ 0x2007
   452                           ;	Oscillator Selection bits
   453                           ;	FOSC = HS, HS oscillator
   454                           ;	Watchdog Timer Enable bit
   455                           ;	WDTE = OFF, WDT disabled
   456                           ;	Power-up Timer Enable bit
   457                           ;	PWRTE = ON, PWRT enabled
   458                           ;	Brown-out Reset Enable bit
   459                           ;	BOREN = ON, BOR enabled
   460                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   461                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   462                           ;	Data EEPROM Memory Code Protection bit
   463                           ;	CPD = OFF, Data EEPROM code protection off
   464                           ;	Flash Program Memory Write Enable bits
   465                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   466                           ;	In-Circuit Debugger Mode bit
   467                           ;	DEBUG = 0x1, unprogrammed default
   468                           ;	Flash Program Memory Code Protection bit
   469                           ;	CP = OFF, Code protection off
   470  2007                     	org	8199
   471  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMMON     1     1      0
                           _blinkLed
 ---------------------------------------------------------------------------------
 (1) _blinkLed                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blinkLed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Mar 11 05:17:12 2022

                     l21 07B6                       l28 07A9                       u10 078F  
                     u11 078E                       u13 078B                       u27 07E2  
                     _t1 0078                       _t2 0074                       _t3 0070  
                    l620 077C                      l622 078F                      l630 07B1  
                    l624 0797                      l632 07B4                      l634 07B5  
                    l626 07AA                      l636 07E7                      l628 07AE  
                   _main 07AA                     btemp 007E                     start 0000  
                  ?_main 007C                    status 0003                    wtemp0 007E  
        __initialization 07F0             __end_of_main 07F0                   ??_main 007C  
                 _ADCON1 009F         __end_of_blinkLed 07AA  __end_of__initialization 07FC  
         __pcstackCOMMON 007C               __pmaintext 07AA                ?_blinkLed 007C  
                __ptext1 077C               ??_blinkLed 007C     end_of_initialization 07FC  
              _PORTAbits 0005                _TRISAbits 0085      start_initialization 07F0  
            __pbssCOMMON 0070                ___latbits 0002        __size_of_blinkLed 002E  
               _blinkLed 077C            __size_of_main 0046  
