

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Nov 24 10:53:52 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  061A                     __pidataBANK0:
   177                           
   178                           ;initializer for _maled
   179  061A  34C0               	retlw	192
   180  061B  34F9               	retlw	249
   181  061C  34A4               	retlw	164
   182  061D  34B0               	retlw	176
   183  061E  3499               	retlw	153
   184  061F  3492               	retlw	146
   185  0620  3482               	retlw	130
   186  0621  34F8               	retlw	248
   187  0622  3480               	retlw	128
   188  0623  3490               	retlw	144
   189                           
   190                           	psect	nvBANK0
   191  002A                     __pnvBANK0:
   192  002A                     _donvi:
   193  002A                     	ds	2
   194  002C                     _chuc:
   195  002C                     	ds	2
   196  002E                     _tram:
   197  002E                     	ds	2
   198  0030                     _nghin:
   199  0030                     	ds	2
   200  000E                     _TMR1	set	14
   201  0008                     _PORTD	set	8
   202  0006                     _PORTB	set	6
   203  0010                     _T1CONbits	set	16
   204  0043                     _RD3	set	67
   205  0042                     _RD2	set	66
   206  0041                     _RD1	set	65
   207  0040                     _RD0	set	64
   208  0088                     _TRISDbits	set	136
   209  0086                     _TRISB	set	134
   210  009F                     _ADCON1	set	159
   211                           
   212                           	psect	cinit
   213  07EC                     start_initialization:	
   214                           ; #config settings
   215                           
   216  07EC                     __initialization:
   217                           
   218                           ; Initialize objects allocated to BANK0
   219  07EC  1383               	bcf	3,7	;select IRP bank0
   220  07ED  302A               	movlw	low (__pdataBANK0+10)
   221  07EE  00FD               	movwf	btemp+-1
   222  07EF  3006               	movlw	high __pidataBANK0
   223  07F0  00FE               	movwf	btemp
   224  07F1  301A               	movlw	low __pidataBANK0
   225  07F2  00FF               	movwf	btemp+1
   226  07F3  3020               	movlw	low __pdataBANK0
   227  07F4  0084               	movwf	4
   228  07F5  120A  118A  2628  120A  118A  	fcall	init_ram0
   229                           
   230                           ; Clear objects allocated to BANK0
   231  07FA  01B8               	clrf	__pbssBANK0& (0+127)
   232  07FB  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2E5C   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssBANK0
   241  0038                     __pbssBANK0:
   242  0038                     _dem:
   243  0038                     	ds	2
   244                           
   245                           	psect	dataBANK0
   246  0020                     __pdataBANK0:
   247  0020                     _maled:
   248  0020                     	ds	10
   249                           
   250                           	psect	inittext
   251  0624                     init_fetch0:	
   252                           ;	Called with low address in FSR and high address in W
   253                           
   254  0624  087E               	movf	btemp,w
   255  0625  008A               	movwf	10
   256  0626  087F               	movf	btemp+1,w
   257  0627  0082               	movwf	2
   258  0628                     init_ram0:	
   259                           ;Called with:
   260                           ;	high address of idata address in btemp 
   261                           ;	low address of idata address in btemp+1 
   262                           ;	low address of data in FSR
   263                           ;	high address + 1 of data in btemp-1
   264                           
   265  0628  120A  118A  2624  120A  118A  	fcall	init_fetch0
   266  062D  0080               	movwf	0
   267  062E  0A84               	incf	4,f
   268  062F  0804               	movf	4,w
   269  0630  067D               	xorwf	btemp+-1,w
   270  0631  1903               	btfsc	3,2
   271  0632  3400               	retlw	0
   272  0633  0AFF               	incf	btemp+1,f
   273  0634  1903               	btfsc	3,2
   274  0635  0AFE               	incf	btemp,f
   275  0636  2E28               	goto	init_ram0
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_counter1:
   280  0070                     ??_counter1:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_display:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?___wmul:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ___wmul@multiplier:	
   293                           ; 2 bytes @ 0x0
   294                           
   295                           
   296                           ; 2 bytes @ 0x0
   297  0070                     	ds	2
   298  0072                     ___wmul@multiplicand:
   299                           
   300                           ; 2 bytes @ 0x2
   301  0072                     	ds	2
   302  0074                     ??___wmul:
   303  0074                     ___wmul@product:	
   304                           ; 1 bytes @ 0x4
   305                           
   306                           
   307                           ; 2 bytes @ 0x4
   308  0074                     	ds	2
   309  0076                     ?___lwdiv:
   310  0076                     ___lwdiv@divisor:	
   311                           ; 2 bytes @ 0x6
   312                           
   313                           
   314                           ; 2 bytes @ 0x6
   315  0076                     	ds	2
   316  0078                     ___lwdiv@dividend:
   317                           
   318                           ; 2 bytes @ 0x8
   319  0078                     	ds	2
   320  007A                     ??___lwdiv:
   321  007A                     ___lwdiv@quotient:	
   322                           ; 1 bytes @ 0xA
   323                           
   324                           
   325                           ; 2 bytes @ 0xA
   326  007A                     	ds	2
   327  007C                     ___lwdiv@counter:
   328                           
   329                           ; 1 bytes @ 0xC
   330  007C                     	ds	1
   331  007D                     ??_main:
   332                           
   333                           	psect	cstackBANK0
   334  0032                     __pcstackBANK0:	
   335                           ; 1 bytes @ 0xD
   336                           
   337  0032                     ??_display:
   338                           
   339                           ; 1 bytes @ 0x0
   340  0032                     	ds	6
   341                           
   342                           	psect	maintext
   343  065C                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 62 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : B00/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels required when called:    2
   369 ;; This function calls:
   370 ;;		_counter1
   371 ;;		_display
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           
   378                           ;psect for function _main
   379  065C                     _main:
   380  065C                     l825:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   383                           
   384                           
   385                           ;main.c: 64: }
   386  065C  3006               	movlw	6
   387  065D  1683               	bsf	3,5	;RP0=1, select bank1
   388  065E  1303               	bcf	3,6	;RP1=0, select bank1
   389  065F  009F               	movwf	31	;volatile
   390  0660                     l827:
   391  0660  0186               	clrf	6	;volatile
   392  0661                     l829:
   393  0661  1283               	bcf	3,5	;RP0=0, select bank0
   394  0662  1303               	bcf	3,6	;RP1=0, select bank0
   395  0663  0186               	clrf	6	;volatile
   396  0664                     l831:
   397  0664  1683               	bsf	3,5	;RP0=1, select bank1
   398  0665  1303               	bcf	3,6	;RP1=0, select bank1
   399  0666  1008               	bcf	8,0	;volatile
   400  0667                     l833:
   401  0667  1088               	bcf	8,1	;volatile
   402  0668                     l835:
   403  0668  1108               	bcf	8,2	;volatile
   404  0669                     l837:
   405  0669  1188               	bcf	8,3	;volatile
   406  066A                     l839:
   407  066A  1283               	bcf	3,5	;RP0=0, select bank0
   408  066B  1303               	bcf	3,6	;RP1=0, select bank0
   409  066C  0188               	clrf	8	;volatile
   410  066D                     l841:
   411  066D  120A  118A  2614  120A  118A  	fcall	_counter1
   412  0672                     l843:
   413  0672  120A  118A  26D2  120A  118A  	fcall	_display
   414  0677                     l845:
   415  0677  1283               	bcf	3,5	;RP0=0, select bank0
   416  0678  1303               	bcf	3,6	;RP1=0, select bank0
   417  0679  080F               	movf	15,w	;volatile
   418  067A  00B9               	movwf	_dem+1
   419  067B  080E               	movf	14,w	;volatile
   420  067C  00B8               	movwf	_dem
   421  067D                     l847:
   422  067D  3005               	movlw	5
   423  067E  0239               	subwf	_dem+1,w
   424  067F  30DC               	movlw	220
   425  0680  1903               	skipnz
   426  0681  0238               	subwf	_dem,w
   427  0682  1C03               	skipc
   428  0683  2E85               	goto	u241
   429  0684  2E86               	goto	u240
   430  0685                     u241:
   431  0685  2E72               	goto	l843
   432  0686                     u240:
   433  0686                     l849:
   434  0686  018E               	clrf	14	;volatile
   435  0687  018F               	clrf	15	;volatile
   436  0688  01B8               	clrf	_dem
   437  0689  01B9               	clrf	_dem+1
   438  068A  2E72               	goto	l843
   439  068B  120A  118A  2800   	ljmp	start
   440  068E                     __end_of_main:
   441                           
   442                           	psect	text1
   443  06D2                     __ptext1:	
   444 ;; *************** function _display *****************
   445 ;; Defined at:
   446 ;;		line 34 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0
   462 ;;      Temps:          0       6       0       0       0
   463 ;;      Totals:         0       6       0       0       0
   464 ;;Total ram usage:        6 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    1
   467 ;; This function calls:
   468 ;;		___lwdiv
   469 ;;		___wmul
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           
   476                           ;psect for function _display
   477  06D2                     _display:
   478  06D2                     l789:	
   479                           ;incstack = 0
   480                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   481                           
   482                           
   483                           ;main.c: 36:     _delay((unsigned long)((5)*(20000000/4000.0)));
   484  06D2  30E8               	movlw	232
   485  06D3  00F6               	movwf	___lwdiv@divisor
   486  06D4  3003               	movlw	3
   487  06D5  00F7               	movwf	___lwdiv@divisor+1
   488  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   489  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   490  06D8  0839               	movf	_dem+1,w
   491  06D9  00F9               	movwf	___lwdiv@dividend+1
   492  06DA  0838               	movf	_dem,w
   493  06DB  00F8               	movwf	___lwdiv@dividend
   494  06DC  120A  118A  268E  120A  118A  	fcall	___lwdiv
   495  06E1  0877               	movf	?___lwdiv+1,w
   496  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   497  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   498  06E4  00B1               	movwf	_nghin+1
   499  06E5  0876               	movf	?___lwdiv,w
   500  06E6  00B0               	movwf	_nghin
   501                           
   502                           ;main.c: 37:     RD3=1;
   503  06E7  3064               	movlw	100
   504  06E8  00F6               	movwf	___lwdiv@divisor
   505  06E9  3000               	movlw	0
   506  06EA  00F7               	movwf	___lwdiv@divisor+1
   507  06EB  0831               	movf	_nghin+1,w
   508  06EC  00F1               	movwf	___wmul@multiplier+1
   509  06ED  0830               	movf	_nghin,w
   510  06EE  00F0               	movwf	___wmul@multiplier
   511  06EF  3018               	movlw	24
   512  06F0  00F2               	movwf	___wmul@multiplicand
   513  06F1  30FC               	movlw	252
   514  06F2  00F3               	movwf	___wmul@multiplicand+1
   515  06F3  120A  118A  2637  120A  118A  	fcall	___wmul
   516  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   517  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   518  06FA  0838               	movf	_dem,w
   519  06FB  0770               	addwf	?___wmul,w
   520  06FC  00F8               	movwf	___lwdiv@dividend
   521  06FD  0839               	movf	_dem+1,w
   522  06FE  1803               	skipnc
   523  06FF  0A39               	incf	_dem+1,w
   524  0700  0771               	addwf	?___wmul+1,w
   525  0701  00F9               	movwf	___lwdiv@dividend+1
   526  0702  120A  118A  268E  120A  118A  	fcall	___lwdiv
   527  0707  0877               	movf	?___lwdiv+1,w
   528  0708  1283               	bcf	3,5	;RP0=0, select bank0
   529  0709  1303               	bcf	3,6	;RP1=0, select bank0
   530  070A  00AF               	movwf	_tram+1
   531  070B  0876               	movf	?___lwdiv,w
   532  070C  00AE               	movwf	_tram
   533                           
   534                           ;main.c: 38: }
   535  070D  300A               	movlw	10
   536  070E  00F6               	movwf	___lwdiv@divisor
   537  070F  3000               	movlw	0
   538  0710  00F7               	movwf	___lwdiv@divisor+1
   539  0711  0831               	movf	_nghin+1,w
   540  0712  00F1               	movwf	___wmul@multiplier+1
   541  0713  0830               	movf	_nghin,w
   542  0714  00F0               	movwf	___wmul@multiplier
   543  0715  3018               	movlw	24
   544  0716  00F2               	movwf	___wmul@multiplicand
   545  0717  30FC               	movlw	252
   546  0718  00F3               	movwf	___wmul@multiplicand+1
   547  0719  120A  118A  2637  120A  118A  	fcall	___wmul
   548  071E  0870               	movf	?___wmul,w
   549  071F  1283               	bcf	3,5	;RP0=0, select bank0
   550  0720  1303               	bcf	3,6	;RP1=0, select bank0
   551  0721  00B2               	movwf	??_display
   552  0722  0871               	movf	?___wmul+1,w
   553  0723  00B3               	movwf	??_display+1
   554  0724  082F               	movf	_tram+1,w
   555  0725  00F1               	movwf	___wmul@multiplier+1
   556  0726  082E               	movf	_tram,w
   557  0727  00F0               	movwf	___wmul@multiplier
   558  0728  309C               	movlw	156
   559  0729  00F2               	movwf	___wmul@multiplicand
   560  072A  30FF               	movlw	255
   561  072B  00F3               	movwf	___wmul@multiplicand+1
   562  072C  120A  118A  2637  120A  118A  	fcall	___wmul
   563  0731  0870               	movf	?___wmul,w
   564  0732  1283               	bcf	3,5	;RP0=0, select bank0
   565  0733  1303               	bcf	3,6	;RP1=0, select bank0
   566  0734  0732               	addwf	??_display,w
   567  0735  00B4               	movwf	??_display+2
   568  0736  0871               	movf	?___wmul+1,w
   569  0737  1803               	skipnc
   570  0738  0A71               	incf	?___wmul+1,w
   571  0739  0733               	addwf	??_display+1,w
   572  073A  00B5               	movwf	??_display+3
   573  073B  0838               	movf	_dem,w
   574  073C  0734               	addwf	??_display+2,w
   575  073D  00F8               	movwf	___lwdiv@dividend
   576  073E  0839               	movf	_dem+1,w
   577  073F  1803               	skipnc
   578  0740  0A39               	incf	_dem+1,w
   579  0741  0735               	addwf	??_display+3,w
   580  0742  00F9               	movwf	___lwdiv@dividend+1
   581  0743  120A  118A  268E  120A  118A  	fcall	___lwdiv
   582  0748  0877               	movf	?___lwdiv+1,w
   583  0749  1283               	bcf	3,5	;RP0=0, select bank0
   584  074A  1303               	bcf	3,6	;RP1=0, select bank0
   585  074B  00AD               	movwf	_chuc+1
   586  074C  0876               	movf	?___lwdiv,w
   587  074D  00AC               	movwf	_chuc
   588  074E                     l791:
   589                           
   590                           ;main.c: 39: 
   591  074E  0831               	movf	_nghin+1,w
   592  074F  00F1               	movwf	___wmul@multiplier+1
   593  0750  0830               	movf	_nghin,w
   594  0751  00F0               	movwf	___wmul@multiplier
   595  0752  3018               	movlw	24
   596  0753  00F2               	movwf	___wmul@multiplicand
   597  0754  30FC               	movlw	252
   598  0755  00F3               	movwf	___wmul@multiplicand+1
   599  0756  120A  118A  2637  120A  118A  	fcall	___wmul
   600  075B  0870               	movf	?___wmul,w
   601  075C  1283               	bcf	3,5	;RP0=0, select bank0
   602  075D  1303               	bcf	3,6	;RP1=0, select bank0
   603  075E  00B2               	movwf	??_display
   604  075F  0871               	movf	?___wmul+1,w
   605  0760  00B3               	movwf	??_display+1
   606  0761  082F               	movf	_tram+1,w
   607  0762  00F1               	movwf	___wmul@multiplier+1
   608  0763  082E               	movf	_tram,w
   609  0764  00F0               	movwf	___wmul@multiplier
   610  0765  309C               	movlw	156
   611  0766  00F2               	movwf	___wmul@multiplicand
   612  0767  30FF               	movlw	255
   613  0768  00F3               	movwf	___wmul@multiplicand+1
   614  0769  120A  118A  2637  120A  118A  	fcall	___wmul
   615  076E  0870               	movf	?___wmul,w
   616  076F  1283               	bcf	3,5	;RP0=0, select bank0
   617  0770  1303               	bcf	3,6	;RP1=0, select bank0
   618  0771  0732               	addwf	??_display,w
   619  0772  00B4               	movwf	??_display+2
   620  0773  0871               	movf	?___wmul+1,w
   621  0774  1803               	skipnc
   622  0775  0A71               	incf	?___wmul+1,w
   623  0776  0733               	addwf	??_display+1,w
   624  0777  00B5               	movwf	??_display+3
   625  0778  082D               	movf	_chuc+1,w
   626  0779  00F1               	movwf	___wmul@multiplier+1
   627  077A  082C               	movf	_chuc,w
   628  077B  00F0               	movwf	___wmul@multiplier
   629  077C  30F6               	movlw	246
   630  077D  00F2               	movwf	___wmul@multiplicand
   631  077E  30FF               	movlw	255
   632  077F  00F3               	movwf	___wmul@multiplicand+1
   633  0780  120A  118A  2637  120A  118A  	fcall	___wmul
   634  0785  0870               	movf	?___wmul,w
   635  0786  1283               	bcf	3,5	;RP0=0, select bank0
   636  0787  1303               	bcf	3,6	;RP1=0, select bank0
   637  0788  0734               	addwf	??_display+2,w
   638  0789  00B6               	movwf	??_display+4
   639  078A  0871               	movf	?___wmul+1,w
   640  078B  1803               	skipnc
   641  078C  0A71               	incf	?___wmul+1,w
   642  078D  0735               	addwf	??_display+3,w
   643  078E  00B7               	movwf	??_display+5
   644  078F  0838               	movf	_dem,w
   645  0790  0736               	addwf	??_display+4,w
   646  0791  00AA               	movwf	_donvi
   647  0792  0839               	movf	_dem+1,w
   648  0793  1803               	skipnc
   649  0794  0A39               	incf	_dem+1,w
   650  0795  0737               	addwf	??_display+5,w
   651  0796  00AB               	movwf	_donvi+1
   652  0797                     l793:
   653                           
   654                           ;main.c: 41: {
   655  0797  0830               	movf	_nghin,w
   656  0798  3E20               	addlw	(low (_maled| 0))& (0+255)
   657  0799  0084               	movwf	4
   658  079A  1383               	bcf	3,7	;select IRP bank0
   659  079B  0800               	movf	0,w
   660  079C  0086               	movwf	6	;volatile
   661  079D                     l795:
   662                           
   663                           ;main.c: 42:     ADCON1=0x06;
   664  079D  1008               	bcf	8,0	;volatile
   665  079E                     l797:
   666                           
   667                           ;main.c: 43: 
   668  079E  3021               	movlw	33
   669  079F  1283               	bcf	3,5	;RP0=0, select bank0
   670  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   671  07A1  00B3               	movwf	??_display+1
   672  07A2  3075               	movlw	117
   673  07A3  00B2               	movwf	??_display
   674  07A4                     u257:
   675  07A4  0BB2               	decfsz	??_display,f
   676  07A5  2FA4               	goto	u257
   677  07A6  0BB3               	decfsz	??_display+1,f
   678  07A7  2FA4               	goto	u257
   679  07A8  2FA9               	nop2
   680  07A9                     l799:
   681                           
   682                           ;main.c: 44:     TRISB = 0;
   683  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   684  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   685  07AB  1408               	bsf	8,0	;volatile
   686  07AC                     l801:
   687                           
   688                           ;main.c: 46:     TRISDbits.TRISD0 = 0;
   689  07AC  082E               	movf	_tram,w
   690  07AD  3E20               	addlw	(low (_maled| 0))& (0+255)
   691  07AE  0084               	movwf	4
   692  07AF  1383               	bcf	3,7	;select IRP bank0
   693  07B0  0800               	movf	0,w
   694  07B1  0086               	movwf	6	;volatile
   695  07B2                     l803:
   696                           
   697                           ;main.c: 47:     TRISDbits.TRISD1 = 0;
   698  07B2  1088               	bcf	8,1	;volatile
   699  07B3                     l805:
   700                           
   701                           ;main.c: 48:     TRISDbits.TRISD2 = 0;
   702  07B3  3021               	movlw	33
   703  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   704  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   705  07B6  00B3               	movwf	??_display+1
   706  07B7  3075               	movlw	117
   707  07B8  00B2               	movwf	??_display
   708  07B9                     u267:
   709  07B9  0BB2               	decfsz	??_display,f
   710  07BA  2FB9               	goto	u267
   711  07BB  0BB3               	decfsz	??_display+1,f
   712  07BC  2FB9               	goto	u267
   713  07BD  2FBE               	nop2
   714  07BE                     l807:
   715                           
   716                           ;main.c: 49:     TRISDbits.TRISD3 = 0;
   717  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   718  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   719  07C0  1488               	bsf	8,1	;volatile
   720  07C1                     l809:
   721                           
   722                           ;main.c: 51: 
   723  07C1  082C               	movf	_chuc,w
   724  07C2  3E20               	addlw	(low (_maled| 0))& (0+255)
   725  07C3  0084               	movwf	4
   726  07C4  1383               	bcf	3,7	;select IRP bank0
   727  07C5  0800               	movf	0,w
   728  07C6  0086               	movwf	6	;volatile
   729  07C7                     l811:
   730                           
   731                           ;main.c: 52:     counter1();
   732  07C7  1108               	bcf	8,2	;volatile
   733  07C8                     l813:
   734                           
   735                           ;main.c: 53:     while(1)
   736  07C8  3021               	movlw	33
   737  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   738  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   739  07CB  00B3               	movwf	??_display+1
   740  07CC  3075               	movlw	117
   741  07CD  00B2               	movwf	??_display
   742  07CE                     u277:
   743  07CE  0BB2               	decfsz	??_display,f
   744  07CF  2FCE               	goto	u277
   745  07D0  0BB3               	decfsz	??_display+1,f
   746  07D1  2FCE               	goto	u277
   747  07D2  2FD3               	nop2
   748  07D3                     l815:
   749                           
   750                           ;main.c: 54:     {
   751  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   752  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   753  07D5  1508               	bsf	8,2	;volatile
   754  07D6                     l817:
   755                           
   756                           ;main.c: 56:         dem=TMR1;
   757  07D6  082A               	movf	_donvi,w
   758  07D7  3E20               	addlw	(low (_maled| 0))& (0+255)
   759  07D8  0084               	movwf	4
   760  07D9  1383               	bcf	3,7	;select IRP bank0
   761  07DA  0800               	movf	0,w
   762  07DB  0086               	movwf	6	;volatile
   763  07DC                     l819:
   764                           
   765                           ;main.c: 57:         if(dem>=1500)
   766  07DC  1188               	bcf	8,3	;volatile
   767  07DD                     l821:
   768                           
   769                           ;main.c: 58:         {
   770  07DD  3021               	movlw	33
   771  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   772  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   773  07E0  00B3               	movwf	??_display+1
   774  07E1  3075               	movlw	117
   775  07E2  00B2               	movwf	??_display
   776  07E3                     u287:
   777  07E3  0BB2               	decfsz	??_display,f
   778  07E4  2FE3               	goto	u287
   779  07E5  0BB3               	decfsz	??_display+1,f
   780  07E6  2FE3               	goto	u287
   781  07E7  2FE8               	nop2
   782  07E8                     l823:
   783                           
   784                           ;main.c: 59:             TMR1=0;
   785  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   786  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   787  07EA  1588               	bsf	8,3	;volatile
   788  07EB                     l42:
   789  07EB  0008               	return
   790  07EC                     __end_of_display:
   791                           
   792                           	psect	text2
   793  0637                     __ptext2:	
   794 ;; *************** function ___wmul *****************
   795 ;; Defined at:
   796 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  multiplier      2    0[COMMON] unsigned int 
   799 ;;  multiplicand    2    2[COMMON] unsigned int 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  product         2    4[COMMON] unsigned int 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2    0[COMMON] unsigned int 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         4       0       0       0       0
   812 ;;      Locals:         2       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0
   814 ;;      Totals:         6       0       0       0       0
   815 ;;Total ram usage:        6 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_display
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function ___wmul
   826  0637                     ___wmul:
   827  0637                     l747:	
   828                           ;incstack = 0
   829                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   830                           
   831  0637  01F4               	clrf	___wmul@product
   832  0638  01F5               	clrf	___wmul@product+1
   833  0639                     l749:
   834  0639  1C70               	btfss	___wmul@multiplier,0
   835  063A  2E3C               	goto	u131
   836  063B  2E3D               	goto	u130
   837  063C                     u131:
   838  063C  2E43               	goto	l137
   839  063D                     u130:
   840  063D                     l751:
   841  063D  0872               	movf	___wmul@multiplicand,w
   842  063E  07F4               	addwf	___wmul@product,f
   843  063F  1803               	skipnc
   844  0640  0AF5               	incf	___wmul@product+1,f
   845  0641  0873               	movf	___wmul@multiplicand+1,w
   846  0642  07F5               	addwf	___wmul@product+1,f
   847  0643                     l137:
   848  0643  3001               	movlw	1
   849  0644                     u145:
   850  0644  1003               	clrc
   851  0645  0DF2               	rlf	___wmul@multiplicand,f
   852  0646  0DF3               	rlf	___wmul@multiplicand+1,f
   853  0647  3EFF               	addlw	-1
   854  0648  1D03               	skipz
   855  0649  2E44               	goto	u145
   856  064A                     l753:
   857  064A  3001               	movlw	1
   858  064B                     u155:
   859  064B  1003               	clrc
   860  064C  0CF1               	rrf	___wmul@multiplier+1,f
   861  064D  0CF0               	rrf	___wmul@multiplier,f
   862  064E  3EFF               	addlw	-1
   863  064F  1D03               	skipz
   864  0650  2E4B               	goto	u155
   865  0651                     l755:
   866  0651  0870               	movf	___wmul@multiplier,w
   867  0652  0471               	iorwf	___wmul@multiplier+1,w
   868  0653  1D03               	btfss	3,2
   869  0654  2E56               	goto	u161
   870  0655  2E57               	goto	u160
   871  0656                     u161:
   872  0656  2E39               	goto	l749
   873  0657                     u160:
   874  0657                     l757:
   875  0657  0875               	movf	___wmul@product+1,w
   876  0658  00F1               	movwf	?___wmul+1
   877  0659  0874               	movf	___wmul@product,w
   878  065A  00F0               	movwf	?___wmul
   879  065B                     l139:
   880  065B  0008               	return
   881  065C                     __end_of___wmul:
   882                           
   883                           	psect	text3
   884  068E                     __ptext3:	
   885 ;; *************** function ___lwdiv *****************
   886 ;; Defined at:
   887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  divisor         2    6[COMMON] unsigned int 
   890 ;;  dividend        2    8[COMMON] unsigned int 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  quotient        2   10[COMMON] unsigned int 
   893 ;;  counter         1   12[COMMON] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2    6[COMMON] unsigned int 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, btemp+1
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         4       0       0       0       0
   904 ;;      Locals:         3       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0
   906 ;;      Totals:         7       0       0       0       0
   907 ;;Total ram usage:        7 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_display
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function ___lwdiv
   918  068E                     ___lwdiv:
   919  068E                     l761:	
   920                           ;incstack = 0
   921                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   922                           
   923  068E  01FA               	clrf	___lwdiv@quotient
   924  068F  01FB               	clrf	___lwdiv@quotient+1
   925  0690                     l763:
   926  0690  0876               	movf	___lwdiv@divisor,w
   927  0691  0477               	iorwf	___lwdiv@divisor+1,w
   928  0692  1903               	btfsc	3,2
   929  0693  2E95               	goto	u171
   930  0694  2E96               	goto	u170
   931  0695                     u171:
   932  0695  2ECD               	goto	l783
   933  0696                     u170:
   934  0696                     l765:
   935  0696  01FC               	clrf	___lwdiv@counter
   936  0697  0AFC               	incf	___lwdiv@counter,f
   937  0698  2EA4               	goto	l771
   938  0699                     l767:
   939  0699  3001               	movlw	1
   940  069A                     u185:
   941  069A  1003               	clrc
   942  069B  0DF6               	rlf	___lwdiv@divisor,f
   943  069C  0DF7               	rlf	___lwdiv@divisor+1,f
   944  069D  3EFF               	addlw	-1
   945  069E  1D03               	skipz
   946  069F  2E9A               	goto	u185
   947  06A0                     l769:
   948  06A0  3001               	movlw	1
   949  06A1  00FF               	movwf	btemp+1
   950  06A2  087F               	movf	btemp+1,w
   951  06A3  07FC               	addwf	___lwdiv@counter,f
   952  06A4                     l771:
   953  06A4  1FF7               	btfss	___lwdiv@divisor+1,7
   954  06A5  2EA7               	goto	u191
   955  06A6  2EA8               	goto	u190
   956  06A7                     u191:
   957  06A7  2E99               	goto	l767
   958  06A8                     u190:
   959  06A8                     l773:
   960  06A8  3001               	movlw	1
   961  06A9                     u205:
   962  06A9  1003               	clrc
   963  06AA  0DFA               	rlf	___lwdiv@quotient,f
   964  06AB  0DFB               	rlf	___lwdiv@quotient+1,f
   965  06AC  3EFF               	addlw	-1
   966  06AD  1D03               	skipz
   967  06AE  2EA9               	goto	u205
   968  06AF  0877               	movf	___lwdiv@divisor+1,w
   969  06B0  0279               	subwf	___lwdiv@dividend+1,w
   970  06B1  1D03               	skipz
   971  06B2  2EB5               	goto	u215
   972  06B3  0876               	movf	___lwdiv@divisor,w
   973  06B4  0278               	subwf	___lwdiv@dividend,w
   974  06B5                     u215:
   975  06B5  1C03               	skipc
   976  06B6  2EB8               	goto	u211
   977  06B7  2EB9               	goto	u210
   978  06B8                     u211:
   979  06B8  2EC0               	goto	l779
   980  06B9                     u210:
   981  06B9                     l775:
   982  06B9  0876               	movf	___lwdiv@divisor,w
   983  06BA  02F8               	subwf	___lwdiv@dividend,f
   984  06BB  0877               	movf	___lwdiv@divisor+1,w
   985  06BC  1C03               	skipc
   986  06BD  03F9               	decf	___lwdiv@dividend+1,f
   987  06BE  02F9               	subwf	___lwdiv@dividend+1,f
   988  06BF                     l777:
   989  06BF  147A               	bsf	___lwdiv@quotient,0
   990  06C0                     l779:
   991  06C0  3001               	movlw	1
   992  06C1                     u225:
   993  06C1  1003               	clrc
   994  06C2  0CF7               	rrf	___lwdiv@divisor+1,f
   995  06C3  0CF6               	rrf	___lwdiv@divisor,f
   996  06C4  3EFF               	addlw	-1
   997  06C5  1D03               	skipz
   998  06C6  2EC1               	goto	u225
   999  06C7                     l781:
  1000  06C7  3001               	movlw	1
  1001  06C8  02FC               	subwf	___lwdiv@counter,f
  1002  06C9  1D03               	btfss	3,2
  1003  06CA  2ECC               	goto	u231
  1004  06CB  2ECD               	goto	u230
  1005  06CC                     u231:
  1006  06CC  2EA8               	goto	l773
  1007  06CD                     u230:
  1008  06CD                     l783:
  1009  06CD  087B               	movf	___lwdiv@quotient+1,w
  1010  06CE  00F7               	movwf	?___lwdiv+1
  1011  06CF  087A               	movf	___lwdiv@quotient,w
  1012  06D0  00F6               	movwf	?___lwdiv
  1013  06D1                     l409:
  1014  06D1  0008               	return
  1015  06D2                     __end_of___lwdiv:
  1016                           
  1017                           	psect	text4
  1018  0614                     __ptext4:	
  1019 ;; *************** function _counter1 *****************
  1020 ;; Defined at:
  1021 ;;		line 27 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		None
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function _counter1
  1050  0614                     _counter1:
  1051  0614                     l787:	
  1052                           ;incstack = 0
  1053                           ; Regs used in _counter1: []
  1054                           
  1055                           
  1056                           ;main.c: 29:     PORTB = maled[chuc];
  1057  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0616  1490               	bsf	16,1	;volatile
  1060                           
  1061                           ;main.c: 30:     RD2=0;
  1062  0617  1110               	bcf	16,2	;volatile
  1063                           
  1064                           ;main.c: 31:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1065  0618  1410               	bsf	16,0	;volatile
  1066  0619                     l39:
  1067  0619  0008               	return
  1068  061A                     __end_of_counter1:
  1069  007E                     btemp	set	126	;btemp
  1070  007E                     wtemp0	set	126
  1071                           
  1072                           	psect	config
  1073                           
  1074                           ;Config register CONFIG @ 0x2007
  1075                           ;	Oscillator Selection bits
  1076                           ;	FOSC = HS, HS oscillator
  1077                           ;	Watchdog Timer Enable bit
  1078                           ;	WDTE = OFF, WDT disabled
  1079                           ;	Power-up Timer Enable bit
  1080                           ;	PWRTE = ON, PWRT enabled
  1081                           ;	Brown-out Reset Enable bit
  1082                           ;	BOREN = ON, BOR enabled
  1083                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1084                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1085                           ;	Data EEPROM Memory Code Protection bit
  1086                           ;	CPD = OFF, Data EEPROM code protection off
  1087                           ;	Flash Program Memory Write Enable bits
  1088                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1089                           ;	In-Circuit Debugger Mode bit
  1090                           ;	DEBUG = 0x1, unprogrammed default
  1091                           ;	Flash Program Memory Code Protection bit
  1092                           ;	CP = OFF, Code protection off
  1093  2007                     	org	8199
  1094  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      6      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1622
                           _counter1
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              6     6      0    1622
                                              0 BANK0      6     6      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _counter1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _counter1
   _display
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Nov 24 10:53:52 2021

                      pc 0002                       l42 07EB                       l39 0619  
                     fsr 0004      ___wmul@multiplicand 0072                      l137 0643  
                    l139 065B                      l409 06D1                      l801 07AC  
                    l811 07C7                      l803 07B2                      l821 07DD  
                    l813 07C8                      l805 07B3                      l751 063D  
                    l823 07E8                      l815 07D3                      l807 07BE  
                    l831 0664                      l761 068E                      l753 064A  
                    l817 07D6                      l809 07C1                      l841 066D  
                    l833 0667                      l825 065C                      l771 06A4  
                    l763 0690                      l755 0651                      l747 0637  
                    l819 07DC                      l843 0672                      l835 0668  
                    l827 0660                      l781 06C7                      l773 06A8  
                    l765 0696                      l757 0657                      l749 0639  
                    l845 0677                      l837 0669                      l829 0661  
                    l775 06B9                      l767 0699                      l783 06CD  
                    l791 074E                      l847 067D                      l839 066A  
                    l777 06BF                      l769 06A0                      l793 0797  
                    l849 0686                      l787 0614                      l779 06C0  
                    l795 079D                      l797 079E                      l789 06D2  
                    l799 07A9                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      u210 06B9  
                    u130 063D                      u211 06B8                      u131 063C  
                    u205 06A9                      u230 06CD                      u231 06CC  
                    u215 06B5                      u160 0657                      u240 0686  
                    u225 06C1                      u161 0656                      u145 0644  
                    u241 0685                      u170 0696                      u171 0695  
                    u155 064B                      u190 06A8                      u191 06A7  
                    u185 069A                      u257 07A4                      u267 07B9  
                    u277 07CE                      u287 07E3                      _dem 0038  
                    fsr0 0004                      indf 0000                     _TMR1 000E  
                   _chuc 002C                     _main 065C                     _tram 002E  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___lwdiv 06D2                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086          __end_of_display 07EC                    _maled 0020  
                  _donvi 002A                    _nghin 0030                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EC  
           __end_of_main 068E                   ??_main 007D                   _ADCON1 009F  
                 ___wmul 0637         __end_of_counter1 061A                ??___lwdiv 007A  
              ??_display 0032  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 061A               __pbssBANK0 0038               __pmaintext 065C  
                ?___wmul 0070                ?_counter1 0070          __size_of___wmul 0025  
                ___lwdiv 068E                  __ptext1 06D2                  __ptext2 0637  
                __ptext3 068E                  __ptext4 0614                  _display 06D2  
              _T1CONbits 0010     end_of_initialization 07FC               ??_counter1 0070  
              _TRISDbits 0088           __end_of___wmul 065C      start_initialization 07EC  
               ??___wmul 0074               init_fetch0 0624              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 0032        __size_of_counter1 0006  
              __pnvBANK0 002A         ___lwdiv@dividend 0078                 ?___lwdiv 0076  
               ?_display 0070         ___lwdiv@quotient 007A           ___wmul@product 0074  
      ___wmul@multiplier 0070         __size_of___lwdiv 0044         __size_of_display 011A  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007C                 _counter1 0614  
          __size_of_main 0032                 init_ram0 0628  
