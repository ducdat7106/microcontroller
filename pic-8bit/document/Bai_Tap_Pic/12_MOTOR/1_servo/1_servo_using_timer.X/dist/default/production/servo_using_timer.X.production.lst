

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jan 03 09:03:29 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172                           
   173                           	psect	idataCOMMON
   174  0109                     __pidataCOMMON:
   175                           
   176                           ;initializer for _count_s
   177  0109  3405               	retlw	5
   178  010A  3400               	retlw	0
   179                           
   180                           ;initializer for _degree
   181  010B  34FF               	retlw	255
   182  010C  34FF               	retlw	255
   183  0001                     _TMR0	set	1
   184  0047                     _RD7	set	71
   185  005A                     _TMR0IF	set	90
   186  0036                     _RB6	set	54
   187  0035                     _RB5	set	53
   188  0034                     _RB4	set	52
   189  0058                     _RBIF	set	88
   190  005B                     _RBIE	set	91
   191  005D                     _TMR0IE	set	93
   192  005F                     _GIE	set	95
   193  009F                     _ADCON1	set	159
   194  0447                     _TRISD7	set	1095
   195  040D                     _T0CS	set	1037
   196  040C                     _T0SE	set	1036
   197  040B                     _PSA	set	1035
   198  0408                     _PS0	set	1032
   199  0409                     _PS1	set	1033
   200  040A                     _PS2	set	1034
   201                           
   202                           	psect	cinit
   203  0013                     start_initialization:	
   204                           ; #config settings
   205                           
   206  0013                     __initialization:
   207                           
   208                           ; Initialize objects allocated to COMMON
   209  0013  120A  118A  2109  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   210  0018  00FA               	movwf	__pdataCOMMON& (0+127)
   211  0019  120A  118A  210A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   212  001E  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   213  001F  120A  118A  210B  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   214  0024  00FC               	movwf	(__pdataCOMMON+2)& (0+127)
   215  0025  120A  118A  210C  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   216  002A  00FD               	movwf	(__pdataCOMMON+3)& (0+127)
   217                           
   218                           ; Clear objects allocated to COMMON
   219  002B  01F6               	clrf	__pbssCOMMON& (0+127)
   220  002C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   221  002D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   222  002E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   223  002F                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226  002F                     __end_of__initialization:
   227  002F  0183               	clrf	3
   228  0030  120A  118A  28E2   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMMON
   231  0076                     __pbssCOMMON:
   232  0076                     _value:
   233  0076                     	ds	2
   234  0078                     _count:
   235  0078                     	ds	2
   236                           
   237                           	psect	dataCOMMON
   238  007A                     __pdataCOMMON:
   239  007A                     _count_s:
   240  007A                     	ds	2
   241  007C                     _degree:
   242  007C                     	ds	2
   243                           
   244                           	psect	cstackCOMMON
   245  0070                     __pcstackCOMMON:
   246  0070                     ?_roundDegree:
   247  0070                     ?_timer0:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_change:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_time:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_time:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	3
   265  0073                     ??_roundDegree:
   266  0073                     ??_timer0:	
   267                           ; 1 bytes @ 0x3
   268                           
   269  0073                     ??_change:	
   270                           ; 1 bytes @ 0x3
   271                           
   272                           
   273                           ; 1 bytes @ 0x3
   274  0073                     	ds	1
   275  0074                     roundDegree@m:
   276                           
   277                           ; 2 bytes @ 0x4
   278  0074                     	ds	2
   279  0076                     ??_main:
   280                           
   281                           	psect	maintext
   282  00E2                     __pmaintext:	
   283                           ; 1 bytes @ 0x6
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 95 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called:    2
   309 ;; This function calls:
   310 ;;		_change
   311 ;;		_roundDegree
   312 ;;		_timer0
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           
   319                           ;psect for function _main
   320  00E2                     _main:
   321  00E2                     l756:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   324                           
   325                           
   326                           ;main.c: 97:     ADCON1=0x06;
   327  00E2  3006               	movlw	6
   328  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   329  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   330  00E5  009F               	movwf	31	;volatile
   331  00E6                     l758:
   332                           
   333                           ;main.c: 98:     TRISD7=0;
   334  00E6  1388               	bcf	8,7	;volatile
   335  00E7                     l760:
   336                           
   337                           ;main.c: 100:     timer0();
   338  00E7  120A  118A  20FA  120A  118A  	fcall	_timer0
   339                           
   340                           ;main.c: 101:     change();
   341  00EC  120A  118A  210D  120A  118A  	fcall	_change
   342  00F1                     l762:
   343                           
   344                           ;main.c: 104:     {;main.c: 113:         roundDegree();
   345  00F1  120A  118A  20A9  120A  118A  	fcall	_roundDegree
   346  00F6  28F1               	goto	l762
   347  00F7  120A  118A  2810   	ljmp	start
   348  00FA                     __end_of_main:
   349                           
   350                           	psect	text1
   351  00FA                     __ptext1:	
   352 ;; *************** function _timer0 *****************
   353 ;; Defined at:
   354 ;;		line 36 in file "main.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   368 ;;      Params:         0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0
   371 ;;      Totals:         0       0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels used:    1
   374 ;; Hardware stack levels required when called:    1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _timer0
   384  00FA                     _timer0:
   385  00FA                     l688:	
   386                           ;incstack = 0
   387                           ; Regs used in _timer0: [wreg]
   388                           
   389                           
   390                           ;main.c: 38:     PS2=1; PS1=0; PS0=0;
   391  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   392  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   393  00FC  1501               	bsf	1,2	;volatile
   394  00FD  1081               	bcf	1,1	;volatile
   395  00FE  1001               	bcf	1,0	;volatile
   396                           
   397                           ;main.c: 40:     PSA=0;
   398  00FF  1181               	bcf	1,3	;volatile
   399                           
   400                           ;main.c: 41:     T0SE=0;
   401  0100  1201               	bcf	1,4	;volatile
   402                           
   403                           ;main.c: 42:     T0CS=0;
   404  0101  1281               	bcf	1,5	;volatile
   405                           
   406                           ;main.c: 44:     GIE=1;
   407  0102  178B               	bsf	11,7	;volatile
   408  0103                     l690:
   409                           
   410                           ;main.c: 46:     TMR0=241;
   411  0103  30F1               	movlw	241
   412  0104  1283               	bcf	3,5	;RP0=0, select bank0
   413  0105  1303               	bcf	3,6	;RP1=0, select bank0
   414  0106  0081               	movwf	1	;volatile
   415  0107                     l692:
   416                           
   417                           ;main.c: 48:     TMR0IE=1;
   418  0107  168B               	bsf	11,5	;volatile
   419  0108                     l49:
   420  0108  0008               	return
   421  0109                     __end_of_timer0:
   422                           
   423                           	psect	text2
   424  00A9                     __ptext2:	
   425 ;; *************** function _roundDegree *****************
   426 ;; Defined at:
   427 ;;		line 144 in file "main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  m               2    4[COMMON] int 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, status,2, btemp+1
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         2       0       0       0       0
   443 ;;      Temps:          1       0       0       0       0
   444 ;;      Totals:         3       0       0       0       0
   445 ;;Total ram usage:        3 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _roundDegree
   457  00A9                     _roundDegree:
   458  00A9                     l696:	
   459                           ;incstack = 0
   460                           ; Regs used in _roundDegree: [wreg+status,2+btemp+1]
   461                           
   462                           
   463                           ;main.c: 146:     for(int m = 0; m <= 50; m++)
   464  00A9  01F4               	clrf	roundDegree@m
   465  00AA  01F5               	clrf	roundDegree@m+1
   466  00AB                     l702:
   467                           
   468                           ;main.c: 147:     {;main.c: 148:         if(count <= count_s)
   469  00AB  087B               	movf	_count_s+1,w
   470  00AC  3A80               	xorlw	128
   471  00AD  00F3               	movwf	??_roundDegree
   472  00AE  0879               	movf	_count+1,w
   473  00AF  3A80               	xorlw	128
   474  00B0  0273               	subwf	??_roundDegree,w
   475  00B1  1D03               	skipz
   476  00B2  28B5               	goto	u15
   477  00B3  0878               	movf	_count,w
   478  00B4  027A               	subwf	_count_s,w
   479  00B5                     u15:
   480  00B5  1C03               	skipc
   481  00B6  28B8               	goto	u11
   482  00B7  28B9               	goto	u10
   483  00B8                     u11:
   484  00B8  28BD               	goto	l706
   485  00B9                     u10:
   486  00B9                     l704:
   487                           
   488                           ;main.c: 149:             RD7 = 1;
   489  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   490  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   491  00BB  1788               	bsf	8,7	;volatile
   492  00BC  28CE               	goto	l710
   493  00BD                     l706:
   494  00BD  087B               	movf	_count_s+1,w
   495  00BE  3A80               	xorlw	128
   496  00BF  00F3               	movwf	??_roundDegree
   497  00C0  0879               	movf	_count+1,w
   498  00C1  3A80               	xorlw	128
   499  00C2  0273               	subwf	??_roundDegree,w
   500  00C3  1D03               	skipz
   501  00C4  28C7               	goto	u25
   502  00C5  0878               	movf	_count,w
   503  00C6  027A               	subwf	_count_s,w
   504  00C7                     u25:
   505  00C7  1803               	skipnc
   506  00C8  28CA               	goto	u21
   507  00C9  28CB               	goto	u20
   508  00CA                     u21:
   509  00CA  28CE               	goto	l710
   510  00CB                     u20:
   511  00CB                     l708:
   512                           
   513                           ;main.c: 151:             RD7 = 0;
   514  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   515  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   516  00CD  1388               	bcf	8,7	;volatile
   517  00CE                     l710:
   518                           
   519                           ;main.c: 152:     }
   520  00CE  3001               	movlw	1
   521  00CF  07F4               	addwf	roundDegree@m,f
   522  00D0  1803               	skipnc
   523  00D1  0AF5               	incf	roundDegree@m+1,f
   524  00D2  3000               	movlw	0
   525  00D3  07F5               	addwf	roundDegree@m+1,f
   526  00D4                     l712:
   527  00D4  0875               	movf	roundDegree@m+1,w
   528  00D5  3A80               	xorlw	128
   529  00D6  00FF               	movwf	btemp+1
   530  00D7  3080               	movlw	128
   531  00D8  027F               	subwf	btemp+1,w
   532  00D9  1D03               	skipz
   533  00DA  28DD               	goto	u35
   534  00DB  3033               	movlw	51
   535  00DC  0274               	subwf	roundDegree@m,w
   536  00DD                     u35:
   537  00DD  1C03               	skipc
   538  00DE  28E0               	goto	u31
   539  00DF  28E1               	goto	u30
   540  00E0                     u31:
   541  00E0  28AB               	goto	l702
   542  00E1                     u30:
   543  00E1                     l96:
   544  00E1  0008               	return
   545  00E2                     __end_of_roundDegree:
   546                           
   547                           	psect	text3
   548  010D                     __ptext3:	
   549 ;; *************** function _change *****************
   550 ;; Defined at:
   551 ;;		line 51 in file "main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		None
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _change
   581  010D                     _change:
   582  010D                     l694:	
   583                           ;incstack = 0
   584                           ; Regs used in _change: []
   585                           
   586                           
   587                           ;main.c: 53:     RBIE=1;
   588  010D  158B               	bsf	11,3	;volatile
   589                           
   590                           ;main.c: 54:     RBIF=0;
   591  010E  100B               	bcf	11,0	;volatile
   592                           
   593                           ;main.c: 55:     GIE=1;
   594  010F  178B               	bsf	11,7	;volatile
   595  0110                     l52:
   596  0110  0008               	return
   597  0111                     __end_of_change:
   598                           
   599                           	psect	text4
   600  0033                     __ptext4:	
   601 ;; *************** function _time *****************
   602 ;; Defined at:
   603 ;;		line 58 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, btemp+1
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0
   619 ;;      Temps:          3       0       0       0       0
   620 ;;      Totals:         3       0       0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		Interrupt level 1
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _time
   632  0033                     _time:
   633  0033                     i1l714:
   634                           
   635                           ;main.c: 60:     if(RBIE && RBIF)
   636  0033  1D8B               	btfss	11,3	;volatile
   637  0034  2836               	goto	u4_21
   638  0035  2837               	goto	u4_20
   639  0036                     u4_21:
   640  0036  2852               	goto	i1l732
   641  0037                     u4_20:
   642  0037                     i1l716:
   643  0037  1C0B               	btfss	11,0	;volatile
   644  0038  283A               	goto	u5_21
   645  0039  283B               	goto	u5_20
   646  003A                     u5_21:
   647  003A  2852               	goto	i1l732
   648  003B                     u5_20:
   649  003B                     i1l718:
   650                           
   651                           ;main.c: 61:     {;main.c: 62:         if(!RB4)
   652  003B  1A06               	btfsc	6,4	;volatile
   653  003C  283E               	goto	u6_21
   654  003D  283F               	goto	u6_20
   655  003E                     u6_21:
   656  003E  2841               	goto	i1l722
   657  003F                     u6_20:
   658  003F                     i1l720:
   659                           
   660                           ;main.c: 63:             degree = 0;
   661  003F  01FC               	clrf	_degree
   662  0040  01FD               	clrf	_degree+1
   663  0041                     i1l722:
   664                           
   665                           ;main.c: 64:         if(!RB5)
   666  0041  1A86               	btfsc	6,5	;volatile
   667  0042  2844               	goto	u7_21
   668  0043  2845               	goto	u7_20
   669  0044                     u7_21:
   670  0044  2849               	goto	i1l726
   671  0045                     u7_20:
   672  0045                     i1l724:
   673                           
   674                           ;main.c: 65:             degree = 90;
   675  0045  305A               	movlw	90
   676  0046  00FC               	movwf	_degree
   677  0047  3000               	movlw	0
   678  0048  00FD               	movwf	_degree+1
   679  0049                     i1l726:
   680                           
   681                           ;main.c: 66:         if(!RB6)
   682  0049  1B06               	btfsc	6,6	;volatile
   683  004A  284C               	goto	u8_21
   684  004B  284D               	goto	u8_20
   685  004C                     u8_21:
   686  004C  2851               	goto	i1l730
   687  004D                     u8_20:
   688  004D                     i1l728:
   689                           
   690                           ;main.c: 67:             degree = 180;
   691  004D  30B4               	movlw	180
   692  004E  00FC               	movwf	_degree
   693  004F  3000               	movlw	0
   694  0050  00FD               	movwf	_degree+1
   695  0051                     i1l730:
   696                           
   697                           ;main.c: 68:         RBIF=0;
   698  0051  100B               	bcf	11,0	;volatile
   699  0052                     i1l732:
   700                           
   701                           ;main.c: 71:     if(TMR0IE&&TMR0IF)
   702  0052  1E8B               	btfss	11,5	;volatile
   703  0053  2855               	goto	u9_21
   704  0054  2856               	goto	u9_20
   705  0055                     u9_21:
   706  0055  28A0               	goto	i1l65
   707  0056                     u9_20:
   708  0056                     i1l734:
   709  0056  1D0B               	btfss	11,2	;volatile
   710  0057  2859               	goto	u10_21
   711  0058  285A               	goto	u10_20
   712  0059                     u10_21:
   713  0059  28A0               	goto	i1l65
   714  005A                     u10_20:
   715  005A                     i1l736:
   716                           
   717                           ;main.c: 72:     {;main.c: 73:         count++;
   718  005A  3001               	movlw	1
   719  005B  07F8               	addwf	_count,f
   720  005C  1803               	skipnc
   721  005D  0AF9               	incf	_count+1,f
   722  005E  3000               	movlw	0
   723  005F  07F9               	addwf	_count+1,f
   724  0060                     i1l738:
   725                           
   726                           ;main.c: 74:         if(count>=200)
   727  0060  0879               	movf	_count+1,w
   728  0061  3A80               	xorlw	128
   729  0062  00FF               	movwf	btemp+1
   730  0063  3080               	movlw	128
   731  0064  027F               	subwf	btemp+1,w
   732  0065  1D03               	skipz
   733  0066  2869               	goto	u11_25
   734  0067  30C8               	movlw	200
   735  0068  0278               	subwf	_count,w
   736  0069                     u11_25:
   737  0069  1C03               	skipc
   738  006A  286C               	goto	u11_21
   739  006B  286D               	goto	u11_20
   740  006C                     u11_21:
   741  006C  289B               	goto	i1l62
   742  006D                     u11_20:
   743  006D                     i1l740:
   744                           
   745                           ;main.c: 75:         {;main.c: 76:             count=0;
   746  006D  01F8               	clrf	_count
   747  006E  01F9               	clrf	_count+1
   748  006F                     i1l742:
   749                           
   750                           ;main.c: 79:             value++;
   751  006F  3001               	movlw	1
   752  0070  07F6               	addwf	_value,f
   753  0071  1803               	skipnc
   754  0072  0AF7               	incf	_value+1,f
   755  0073  3000               	movlw	0
   756  0074  07F7               	addwf	_value+1,f
   757  0075                     i1l744:
   758                           
   759                           ;main.c: 80:             if(value >= 50)
   760  0075  0877               	movf	_value+1,w
   761  0076  3A80               	xorlw	128
   762  0077  00FF               	movwf	btemp+1
   763  0078  3080               	movlw	128
   764  0079  027F               	subwf	btemp+1,w
   765  007A  1D03               	skipz
   766  007B  287E               	goto	u12_25
   767  007C  3032               	movlw	50
   768  007D  0276               	subwf	_value,w
   769  007E                     u12_25:
   770  007E  1C03               	skipc
   771  007F  2881               	goto	u12_21
   772  0080  2882               	goto	u12_20
   773  0081                     u12_21:
   774  0081  289B               	goto	i1l62
   775  0082                     u12_20:
   776  0082                     i1l746:
   777                           
   778                           ;main.c: 81:             {;main.c: 82:                 value=0;
   779  0082  01F6               	clrf	_value
   780  0083  01F7               	clrf	_value+1
   781  0084                     i1l748:
   782                           
   783                           ;main.c: 83:                 count_s++;
   784  0084  3001               	movlw	1
   785  0085  07FA               	addwf	_count_s,f
   786  0086  1803               	skipnc
   787  0087  0AFB               	incf	_count_s+1,f
   788  0088  3000               	movlw	0
   789  0089  07FB               	addwf	_count_s+1,f
   790  008A                     i1l750:
   791                           
   792                           ;main.c: 84:                 if(count_s >= 20)
   793  008A  087B               	movf	_count_s+1,w
   794  008B  3A80               	xorlw	128
   795  008C  00FF               	movwf	btemp+1
   796  008D  3080               	movlw	128
   797  008E  027F               	subwf	btemp+1,w
   798  008F  1D03               	skipz
   799  0090  2893               	goto	u13_25
   800  0091  3014               	movlw	20
   801  0092  027A               	subwf	_count_s,w
   802  0093                     u13_25:
   803  0093  1C03               	skipc
   804  0094  2896               	goto	u13_21
   805  0095  2897               	goto	u13_20
   806  0096                     u13_21:
   807  0096  289B               	goto	i1l62
   808  0097                     u13_20:
   809  0097                     i1l752:
   810                           
   811                           ;main.c: 85:                     count_s = 5;
   812  0097  3005               	movlw	5
   813  0098  00FA               	movwf	_count_s
   814  0099  3000               	movlw	0
   815  009A  00FB               	movwf	_count_s+1
   816  009B                     i1l62:	
   817                           ;main.c: 87:         }
   818                           
   819                           
   820                           ;main.c: 89:         TMR0 = 241;
   821  009B  30F1               	movlw	241
   822  009C  1283               	bcf	3,5	;RP0=0, select bank0
   823  009D  1303               	bcf	3,6	;RP1=0, select bank0
   824  009E  0081               	movwf	1	;volatile
   825  009F                     i1l754:
   826                           
   827                           ;main.c: 91:         TMR0IF=0;
   828  009F  110B               	bcf	11,2	;volatile
   829  00A0                     i1l65:
   830  00A0  0872               	movf	??_time+2,w
   831  00A1  00FF               	movwf	btemp+1
   832  00A2  0871               	movf	??_time+1,w
   833  00A3  008A               	movwf	10
   834  00A4  0E70               	swapf	??_time^(0+4294967168),w
   835  00A5  0083               	movwf	3
   836  00A6  0EFE               	swapf	btemp,f
   837  00A7  0E7E               	swapf	btemp,w
   838  00A8  0009               	retfie
   839  00A9                     __end_of_time:
   840  007E                     btemp	set	126	;btemp
   841  007E                     wtemp0	set	126
   842                           
   843                           	psect	intentry
   844  0004                     __pintentry:	
   845                           ;incstack = 0
   846                           ; Regs used in _time: [wreg+status,2+btemp+1]
   847                           
   848  0004                     interrupt_function:
   849  007E                     saved_w	set	btemp
   850  0004  00FE               	movwf	btemp
   851  0005  0E03               	swapf	3,w
   852  0006  00F0               	movwf	??_time
   853  0007  080A               	movf	10,w
   854  0008  00F1               	movwf	??_time+1
   855  0009  1283               	bcf	3,5	;RP0=0, select bank0
   856  000A  1303               	bcf	3,6	;RP1=0, select bank0
   857  000B  087F               	movf	btemp+1,w
   858  000C  00F2               	movwf	??_time+2
   859  000D  120A  118A  2833   	ljmp	_time
   860                           
   861                           	psect	config
   862                           
   863                           ;Config register CONFIG @ 0x2007
   864                           ;	Oscillator Selection bits
   865                           ;	FOSC = HS, HS oscillator
   866                           ;	Watchdog Timer Enable bit
   867                           ;	WDTE = OFF, WDT disabled
   868                           ;	Power-up Timer Enable bit
   869                           ;	PWRTE = ON, PWRT enabled
   870                           ;	Brown-out Reset Enable bit
   871                           ;	BOREN = ON, BOR enabled
   872                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   873                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   874                           ;	Data EEPROM Memory Code Protection bit
   875                           ;	CPD = OFF, Data EEPROM code protection off
   876                           ;	Flash Program Memory Write Enable bits
   877                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   878                           ;	In-Circuit Debugger Mode bit
   879                           ;	DEBUG = 0x1, unprogrammed default
   880                           ;	Flash Program Memory Code Protection bit
   881                           ;	CP = OFF, Code protection off
   882  2007                     	org	8199
   883  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_roundDegree

Critical Paths under _time in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _time in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _time in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _time in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _time in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                             _change
                        _roundDegree
                             _timer0
 ---------------------------------------------------------------------------------
 (1) _timer0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _roundDegree                                          3     3      0      30
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _change                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _time                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change
   _roundDegree
   _timer0

 _time (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jan 03 09:03:29 2022

            _roundDegree 00A9                       l52 0110                       l49 0108  
                     l96 00E1                       u10 00B9                       u11 00B8  
                     u20 00CB                       u21 00CA                       u30 00E1  
                     u31 00E0                       u15 00B5                       u25 00C7  
                     u35 00DD                      l710 00CE                      l702 00AB  
                    l712 00D4                      l704 00B9                      l706 00BD  
                    l708 00CB                      l760 00E7                      l690 0103  
                    l762 00F1                      l692 0107                      l756 00E2  
                    l694 010D                      l758 00E6                      l696 00A9  
                    l688 00FA                      _GIE 005F                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RD7 0047  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    _PSA 040B                     _T0CS 040D                     _T0SE 040C  
                   _RBIE 005B                     _RBIF 0058                     i1l62 009B  
                   i1l65 00A0                     _TMR0 0001                     u4_20 0037  
                   u4_21 0036                     u5_20 003B                     u5_21 003A  
                   u6_20 003F                     u6_21 003E                     u7_20 0045  
                   u7_21 0044                     u8_20 004D                     u8_21 004C  
                   u9_20 0056                     u9_21 0055                     _main 00E2  
                   _time 0033                     btemp 007E                     start 0010  
                  ?_main 0070                    ?_time 0070                    i1l720 003F  
                  i1l730 0051                    i1l722 0041                    i1l714 0033  
                  i1l740 006D                    i1l724 0045                    i1l716 0037  
                  i1l732 0052                    i1l750 008A                    i1l742 006F  
                  i1l734 0056                    i1l726 0049                    i1l718 003B  
                  i1l752 0097                    i1l744 0075                    i1l736 005A  
                  i1l728 004D                    i1l754 009F                    i1l746 0082  
                  i1l738 0060                    i1l748 0084                    u10_20 005A  
                  u10_21 0059                    u11_20 006D                    u11_21 006C  
                  u11_25 0069                    u12_20 0082                    u12_21 0081  
                  u12_25 007E                    u13_20 0097                    u13_21 0096  
                  u13_25 0093                    _count 0078                    _value 0076  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0013             __end_of_main 00FA             __end_of_time 00A9  
                 ??_main 0076                   ??_time 0070                   _ADCON1 009F  
           roundDegree@m 0074                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISD7 0447                   _change 010D                   _degree 007C  
                 _timer0 00FA             __pdataCOMMON 007A                   saved_w 007E  
__end_of__initialization 002F           __pcstackCOMMON 0070             ?_roundDegree 0070  
             __pmaintext 00E2                  ?_change 0070               __pintentry 0004  
                ?_timer0 0070          __size_of_change 0004                  __ptext1 00FA  
                __ptext2 00A9                  __ptext3 010D                  __ptext4 0033  
        __size_of_timer0 000F                  _count_s 007A     end_of_initialization 002F  
   __size_of_roundDegree 0039           __end_of_change 0111            __pidataCOMMON 0109  
         __end_of_timer0 0109      start_initialization 0013                 ??_change 0073  
               ??_timer0 0073              __pbssCOMMON 0076                ___latbits 0002  
      interrupt_function 0004            ??_roundDegree 0073            __size_of_main 0018  
          __size_of_time 0076      __end_of_roundDegree 00E2                 intlevel1 0000  
