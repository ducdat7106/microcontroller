

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jan 02 15:38:44 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataCOMMON
   176  00F7                     __pidataCOMMON:
   177                           
   178                           ;initializer for _degree
   179  00F7  34FF               	retlw	255
   180  00F8  34FF               	retlw	255
   181  0001                     _TMR0	set	1
   182  0047                     _RD7	set	71
   183  005A                     _TMR0IF	set	90
   184  0036                     _RB6	set	54
   185  0035                     _RB5	set	53
   186  0034                     _RB4	set	52
   187  0058                     _RBIF	set	88
   188  005B                     _RBIE	set	91
   189  005D                     _TMR0IE	set	93
   190  005F                     _GIE	set	95
   191  009F                     _ADCON1	set	159
   192  0447                     _TRISD7	set	1095
   193  040D                     _T0CS	set	1037
   194  040C                     _T0SE	set	1036
   195  040B                     _PSA	set	1035
   196  0408                     _PS0	set	1032
   197  0409                     _PS1	set	1033
   198  040A                     _PS2	set	1034
   199                           
   200                           	psect	cinit
   201  0013                     start_initialization:	
   202                           ; #config settings
   203                           
   204  0013                     __initialization:
   205                           
   206                           ; Initialize objects allocated to COMMON
   207  0013  120A  118A  20F7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   208  0018  00F5               	movwf	__pdataCOMMON& (0+127)
   209  0019  120A  118A  20F8  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   210  001E  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   211                           
   212                           ; Clear objects allocated to COMMON
   213  001F  01F3               	clrf	__pbssCOMMON& (0+127)
   214  0020  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   215  0021                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  0021                     __end_of__initialization:
   219  0021  0183               	clrf	3
   220  0022  120A  118A  286F   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMMON
   223  0073                     __pbssCOMMON:
   224  0073                     _count:
   225  0073                     	ds	2
   226                           
   227                           	psect	dataCOMMON
   228  0075                     __pdataCOMMON:
   229  0075                     _degree:
   230  0075                     	ds	2
   231                           
   232                           	psect	cstackCOMMON
   233  0070                     __pcstackCOMMON:
   234  0070                     ?_servoRotate0:
   235  0070                     ?_servoRotate90:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_servoRotate180:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_timer0:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_change:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_time:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_time:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258  0070                     	ds	3
   259  0073                     ??_servoRotate0:
   260  0073                     ??_servoRotate90:	
   261                           ; 1 bytes @ 0x3
   262                           
   263  0073                     ??_servoRotate180:	
   264                           ; 1 bytes @ 0x3
   265                           
   266  0073                     ??_timer0:	
   267                           ; 1 bytes @ 0x3
   268                           
   269  0073                     ??_change:	
   270                           ; 1 bytes @ 0x3
   271                           
   272  0073                     ??_main:	
   273                           ; 1 bytes @ 0x3
   274                           
   275                           
   276                           	psect	maintext
   277  006F                     __pmaintext:	
   278                           ; 1 bytes @ 0x3
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 80 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   298 ;;      Params:         0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels required when called:    2
   304 ;; This function calls:
   305 ;;		_change
   306 ;;		_servoRotate0
   307 ;;		_servoRotate180
   308 ;;		_servoRotate90
   309 ;;		_timer0
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           
   316                           ;psect for function _main
   317  006F                     _main:
   318  006F                     l733:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   321                           
   322                           
   323                           ;main.c: 82:     ADCON1=0x06;
   324  006F  3006               	movlw	6
   325  0070  1683               	bsf	3,5	;RP0=1, select bank1
   326  0071  1303               	bcf	3,6	;RP1=0, select bank1
   327  0072  009F               	movwf	31	;volatile
   328  0073                     l735:
   329                           
   330                           ;main.c: 83:     TRISD7=0;
   331  0073  1388               	bcf	8,7	;volatile
   332  0074                     l737:
   333                           
   334                           ;main.c: 85:     timer0();
   335  0074  120A  118A  20E4  120A  118A  	fcall	_timer0
   336                           
   337                           ;main.c: 86:     change();
   338  0079  120A  118A  20F3  120A  118A  	fcall	_change
   339  007E                     l739:
   340                           
   341                           ;main.c: 89:     {;main.c: 90:         if(degree == 0)
   342  007E  0875               	movf	_degree,w
   343  007F  0476               	iorwf	_degree+1,w
   344  0080  1D03               	btfss	3,2
   345  0081  2883               	goto	u121
   346  0082  2884               	goto	u120
   347  0083                     u121:
   348  0083  2889               	goto	l743
   349  0084                     u120:
   350  0084                     l741:
   351                           
   352                           ;main.c: 91:           servoRotate0();
   353  0084  120A  118A  20CF  120A  118A  	fcall	_servoRotate0
   354  0089                     l743:
   355                           
   356                           ;main.c: 92:         if(degree == 90)
   357  0089  305A               	movlw	90
   358  008A  0675               	xorwf	_degree,w
   359  008B  0476               	iorwf	_degree+1,w
   360  008C  1D03               	btfss	3,2
   361  008D  288F               	goto	u131
   362  008E  2890               	goto	u130
   363  008F                     u131:
   364  008F  2895               	goto	l747
   365  0090                     u130:
   366  0090                     l745:
   367                           
   368                           ;main.c: 93:           servoRotate90();
   369  0090  120A  118A  20A5  120A  118A  	fcall	_servoRotate90
   370  0095                     l747:
   371                           
   372                           ;main.c: 94:         if(degree == 180)
   373  0095  30B4               	movlw	180
   374  0096  0675               	xorwf	_degree,w
   375  0097  0476               	iorwf	_degree+1,w
   376  0098  1D03               	btfss	3,2
   377  0099  289B               	goto	u141
   378  009A  289C               	goto	u140
   379  009B                     u141:
   380  009B  287E               	goto	l739
   381  009C                     u140:
   382  009C                     l749:
   383                           
   384                           ;main.c: 95:           servoRotate180();
   385  009C  120A  118A  20BA  120A  118A  	fcall	_servoRotate180
   386  00A1  287E               	goto	l739
   387  00A2  120A  118A  2810   	ljmp	start
   388  00A5                     __end_of_main:
   389                           
   390                           	psect	text1
   391  00E4                     __ptext1:	
   392 ;; *************** function _timer0 *****************
   393 ;; Defined at:
   394 ;;		line 33 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; Hardware stack levels required when called:    1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _timer0
   424  00E4                     _timer0:
   425  00E4                     l681:	
   426                           ;incstack = 0
   427                           ; Regs used in _timer0: [wreg]
   428                           
   429                           
   430                           ;main.c: 35:     PS2=1; PS1=0; PS0=0;
   431  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   432  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   433  00E6  1501               	bsf	1,2	;volatile
   434  00E7  1081               	bcf	1,1	;volatile
   435  00E8  1001               	bcf	1,0	;volatile
   436                           
   437                           ;main.c: 37:     PSA=0;
   438  00E9  1181               	bcf	1,3	;volatile
   439                           
   440                           ;main.c: 38:     T0SE=0;
   441  00EA  1201               	bcf	1,4	;volatile
   442                           
   443                           ;main.c: 39:     T0CS=0;
   444  00EB  1281               	bcf	1,5	;volatile
   445                           
   446                           ;main.c: 41:     GIE=1;
   447  00EC  178B               	bsf	11,7	;volatile
   448  00ED                     l683:
   449                           
   450                           ;main.c: 43:     TMR0=241;
   451  00ED  30F1               	movlw	241
   452  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   453  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   454  00F0  0081               	movwf	1	;volatile
   455  00F1                     l685:
   456                           
   457                           ;main.c: 45:     TMR0IE=1;
   458  00F1  168B               	bsf	11,5	;volatile
   459  00F2                     l49:
   460  00F2  0008               	return
   461  00F3                     __end_of_timer0:
   462                           
   463                           	psect	text2
   464  00A5                     __ptext2:	
   465 ;; *************** function _servoRotate90 *****************
   466 ;; Defined at:
   467 ;;		line 109 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, btemp+1
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _servoRotate90
   497  00A5                     _servoRotate90:
   498  00A5                     l693:	
   499                           ;incstack = 0
   500                           ; Regs used in _servoRotate90: [wreg+btemp+1]
   501                           
   502                           
   503                           ;main.c: 111:     if(count<14)
   504  00A5  0874               	movf	_count+1,w
   505  00A6  3A80               	xorlw	128
   506  00A7  00FF               	movwf	btemp+1
   507  00A8  3080               	movlw	128
   508  00A9  027F               	subwf	btemp+1,w
   509  00AA  1D03               	skipz
   510  00AB  28AE               	goto	u25
   511  00AC  300E               	movlw	14
   512  00AD  0273               	subwf	_count,w
   513  00AE                     u25:
   514  00AE  1803               	skipnc
   515  00AF  28B1               	goto	u21
   516  00B0  28B2               	goto	u20
   517  00B1                     u21:
   518  00B1  28B6               	goto	l82
   519  00B2                     u20:
   520  00B2                     l695:
   521                           
   522                           ;main.c: 112:         RD7 = 1;
   523  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   524  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   525  00B4  1788               	bsf	8,7	;volatile
   526  00B5  28B9               	goto	l84
   527  00B6                     l82:	
   528                           ;main.c: 113:     else
   529                           
   530                           
   531                           ;main.c: 114:         RD7 = 0;
   532  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   533  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   534  00B8  1388               	bcf	8,7	;volatile
   535  00B9                     l84:
   536  00B9  0008               	return
   537  00BA                     __end_of_servoRotate90:
   538                           
   539                           	psect	text3
   540  00BA                     __ptext3:	
   541 ;; *************** function _servoRotate180 *****************
   542 ;; Defined at:
   543 ;;		line 117 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, btemp+1
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    1
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _servoRotate180
   573  00BA                     _servoRotate180:
   574  00BA                     l697:	
   575                           ;incstack = 0
   576                           ; Regs used in _servoRotate180: [wreg+btemp+1]
   577                           
   578                           
   579                           ;main.c: 119:     if(count<25)
   580  00BA  0874               	movf	_count+1,w
   581  00BB  3A80               	xorlw	128
   582  00BC  00FF               	movwf	btemp+1
   583  00BD  3080               	movlw	128
   584  00BE  027F               	subwf	btemp+1,w
   585  00BF  1D03               	skipz
   586  00C0  28C3               	goto	u35
   587  00C1  3019               	movlw	25
   588  00C2  0273               	subwf	_count,w
   589  00C3                     u35:
   590  00C3  1803               	skipnc
   591  00C4  28C6               	goto	u31
   592  00C5  28C7               	goto	u30
   593  00C6                     u31:
   594  00C6  28CB               	goto	l87
   595  00C7                     u30:
   596  00C7                     l699:
   597                           
   598                           ;main.c: 120:         RD7 = 1;
   599  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   600  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   601  00C9  1788               	bsf	8,7	;volatile
   602  00CA  28CE               	goto	l89
   603  00CB                     l87:	
   604                           ;main.c: 121:     else
   605                           
   606                           
   607                           ;main.c: 122:         RD7 = 0;
   608  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   609  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   610  00CD  1388               	bcf	8,7	;volatile
   611  00CE                     l89:
   612  00CE  0008               	return
   613  00CF                     __end_of_servoRotate180:
   614                           
   615                           	psect	text4
   616  00CF                     __ptext4:	
   617 ;; *************** function _servoRotate0 *****************
   618 ;; Defined at:
   619 ;;		line 101 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, btemp+1
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _servoRotate0
   649  00CF                     _servoRotate0:
   650  00CF                     l689:	
   651                           ;incstack = 0
   652                           ; Regs used in _servoRotate0: [wreg+btemp+1]
   653                           
   654                           
   655                           ;main.c: 103:     if(count<5)
   656  00CF  0874               	movf	_count+1,w
   657  00D0  3A80               	xorlw	128
   658  00D1  00FF               	movwf	btemp+1
   659  00D2  3080               	movlw	128
   660  00D3  027F               	subwf	btemp+1,w
   661  00D4  1D03               	skipz
   662  00D5  28D8               	goto	u15
   663  00D6  3005               	movlw	5
   664  00D7  0273               	subwf	_count,w
   665  00D8                     u15:
   666  00D8  1803               	skipnc
   667  00D9  28DB               	goto	u11
   668  00DA  28DC               	goto	u10
   669  00DB                     u11:
   670  00DB  28E0               	goto	l77
   671  00DC                     u10:
   672  00DC                     l691:
   673                           
   674                           ;main.c: 104:         RD7 = 1;
   675  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   676  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   677  00DE  1788               	bsf	8,7	;volatile
   678  00DF  28E3               	goto	l79
   679  00E0                     l77:	
   680                           ;main.c: 105:     else
   681                           
   682                           
   683                           ;main.c: 106:         RD7 = 0;
   684  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   685  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   686  00E2  1388               	bcf	8,7	;volatile
   687  00E3                     l79:
   688  00E3  0008               	return
   689  00E4                     __end_of_servoRotate0:
   690                           
   691                           	psect	text5
   692  00F3                     __ptext5:	
   693 ;; *************** function _change *****************
   694 ;; Defined at:
   695 ;;		line 48 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		None
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0
   712 ;;      Totals:         0       0       0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _change
   725  00F3                     _change:
   726  00F3                     l687:	
   727                           ;incstack = 0
   728                           ; Regs used in _change: []
   729                           
   730                           
   731                           ;main.c: 50:     RBIE=1;
   732  00F3  158B               	bsf	11,3	;volatile
   733                           
   734                           ;main.c: 51:     RBIF=0;
   735  00F4  100B               	bcf	11,0	;volatile
   736                           
   737                           ;main.c: 52:     GIE=1;
   738  00F5  178B               	bsf	11,7	;volatile
   739  00F6                     l52:
   740  00F6  0008               	return
   741  00F7                     __end_of_change:
   742                           
   743                           	psect	text6
   744  0025                     __ptext6:	
   745 ;; *************** function _time *****************
   746 ;; Defined at:
   747 ;;		line 55 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, btemp+1
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          3       0       0       0       0
   764 ;;      Totals:         3       0       0       0       0
   765 ;;Total ram usage:        3 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		Interrupt level 1
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _time
   776  0025                     _time:
   777  0025                     i1l701:
   778                           
   779                           ;main.c: 57:     if(RBIE && RBIF)
   780  0025  1D8B               	btfss	11,3	;volatile
   781  0026  2828               	goto	u4_21
   782  0027  2829               	goto	u4_20
   783  0028                     u4_21:
   784  0028  2844               	goto	i1l719
   785  0029                     u4_20:
   786  0029                     i1l703:
   787  0029  1C0B               	btfss	11,0	;volatile
   788  002A  282C               	goto	u5_21
   789  002B  282D               	goto	u5_20
   790  002C                     u5_21:
   791  002C  2844               	goto	i1l719
   792  002D                     u5_20:
   793  002D                     i1l705:
   794                           
   795                           ;main.c: 58:     {;main.c: 59:         if(!RB4)
   796  002D  1A06               	btfsc	6,4	;volatile
   797  002E  2830               	goto	u6_21
   798  002F  2831               	goto	u6_20
   799  0030                     u6_21:
   800  0030  2833               	goto	i1l709
   801  0031                     u6_20:
   802  0031                     i1l707:
   803                           
   804                           ;main.c: 60:             degree = 0;
   805  0031  01F5               	clrf	_degree
   806  0032  01F6               	clrf	_degree+1
   807  0033                     i1l709:
   808                           
   809                           ;main.c: 61:         if(!RB5)
   810  0033  1A86               	btfsc	6,5	;volatile
   811  0034  2836               	goto	u7_21
   812  0035  2837               	goto	u7_20
   813  0036                     u7_21:
   814  0036  283B               	goto	i1l713
   815  0037                     u7_20:
   816  0037                     i1l711:
   817                           
   818                           ;main.c: 62:             degree = 90;
   819  0037  305A               	movlw	90
   820  0038  00F5               	movwf	_degree
   821  0039  3000               	movlw	0
   822  003A  00F6               	movwf	_degree+1
   823  003B                     i1l713:
   824                           
   825                           ;main.c: 63:         if(!RB6)
   826  003B  1B06               	btfsc	6,6	;volatile
   827  003C  283E               	goto	u8_21
   828  003D  283F               	goto	u8_20
   829  003E                     u8_21:
   830  003E  2843               	goto	i1l717
   831  003F                     u8_20:
   832  003F                     i1l715:
   833                           
   834                           ;main.c: 64:             degree = 180;
   835  003F  30B4               	movlw	180
   836  0040  00F5               	movwf	_degree
   837  0041  3000               	movlw	0
   838  0042  00F6               	movwf	_degree+1
   839  0043                     i1l717:
   840                           
   841                           ;main.c: 65:         RBIF=0;
   842  0043  100B               	bcf	11,0	;volatile
   843  0044                     i1l719:
   844                           
   845                           ;main.c: 68:     if(TMR0IE&&TMR0IF)
   846  0044  1E8B               	btfss	11,5	;volatile
   847  0045  2847               	goto	u9_21
   848  0046  2848               	goto	u9_20
   849  0047                     u9_21:
   850  0047  2866               	goto	i1l63
   851  0048                     u9_20:
   852  0048                     i1l721:
   853  0048  1D0B               	btfss	11,2	;volatile
   854  0049  284B               	goto	u10_21
   855  004A  284C               	goto	u10_20
   856  004B                     u10_21:
   857  004B  2866               	goto	i1l63
   858  004C                     u10_20:
   859  004C                     i1l723:
   860                           
   861                           ;main.c: 69:     {;main.c: 70:         count++;
   862  004C  3001               	movlw	1
   863  004D  07F3               	addwf	_count,f
   864  004E  1803               	skipnc
   865  004F  0AF4               	incf	_count+1,f
   866  0050  3000               	movlw	0
   867  0051  07F4               	addwf	_count+1,f
   868  0052                     i1l725:
   869                           
   870                           ;main.c: 71:         if(count>=200)
   871  0052  0874               	movf	_count+1,w
   872  0053  3A80               	xorlw	128
   873  0054  00FF               	movwf	btemp+1
   874  0055  3080               	movlw	128
   875  0056  027F               	subwf	btemp+1,w
   876  0057  1D03               	skipz
   877  0058  285B               	goto	u11_25
   878  0059  30C8               	movlw	200
   879  005A  0273               	subwf	_count,w
   880  005B                     u11_25:
   881  005B  1C03               	skipc
   882  005C  285E               	goto	u11_21
   883  005D  285F               	goto	u11_20
   884  005E                     u11_21:
   885  005E  2861               	goto	i1l729
   886  005F                     u11_20:
   887  005F                     i1l727:
   888                           
   889                           ;main.c: 72:             count=0;
   890  005F  01F3               	clrf	_count
   891  0060  01F4               	clrf	_count+1
   892  0061                     i1l729:
   893                           
   894                           ;main.c: 73:         TMR0 = 241;
   895  0061  30F1               	movlw	241
   896  0062  1283               	bcf	3,5	;RP0=0, select bank0
   897  0063  1303               	bcf	3,6	;RP1=0, select bank0
   898  0064  0081               	movwf	1	;volatile
   899  0065                     i1l731:
   900                           
   901                           ;main.c: 76:         TMR0IF=0;
   902  0065  110B               	bcf	11,2	;volatile
   903  0066                     i1l63:
   904  0066  0872               	movf	??_time+2,w
   905  0067  00FF               	movwf	btemp+1
   906  0068  0871               	movf	??_time+1,w
   907  0069  008A               	movwf	10
   908  006A  0E70               	swapf	??_time^(0+4294967168),w
   909  006B  0083               	movwf	3
   910  006C  0EFE               	swapf	btemp,f
   911  006D  0E7E               	swapf	btemp,w
   912  006E  0009               	retfie
   913  006F                     __end_of_time:
   914  007E                     btemp	set	126	;btemp
   915  007E                     wtemp0	set	126
   916                           
   917                           	psect	intentry
   918  0004                     __pintentry:	
   919                           ;incstack = 0
   920                           ; Regs used in _time: [wreg+status,2+btemp+1]
   921                           
   922  0004                     interrupt_function:
   923  007E                     saved_w	set	btemp
   924  0004  00FE               	movwf	btemp
   925  0005  0E03               	swapf	3,w
   926  0006  00F0               	movwf	??_time
   927  0007  080A               	movf	10,w
   928  0008  00F1               	movwf	??_time+1
   929  0009  1283               	bcf	3,5	;RP0=0, select bank0
   930  000A  1303               	bcf	3,6	;RP1=0, select bank0
   931  000B  087F               	movf	btemp+1,w
   932  000C  00F2               	movwf	??_time+2
   933  000D  120A  118A  2825   	ljmp	_time
   934                           
   935                           	psect	config
   936                           
   937                           ;Config register CONFIG @ 0x2007
   938                           ;	Oscillator Selection bits
   939                           ;	FOSC = HS, HS oscillator
   940                           ;	Watchdog Timer Enable bit
   941                           ;	WDTE = OFF, WDT disabled
   942                           ;	Power-up Timer Enable bit
   943                           ;	PWRTE = ON, PWRT enabled
   944                           ;	Brown-out Reset Enable bit
   945                           ;	BOREN = ON, BOR enabled
   946                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   947                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   948                           ;	Data EEPROM Memory Code Protection bit
   949                           ;	CPD = OFF, Data EEPROM code protection off
   950                           ;	Flash Program Memory Write Enable bits
   951                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   952                           ;	In-Circuit Debugger Mode bit
   953                           ;	DEBUG = 0x1, unprogrammed default
   954                           ;	Flash Program Memory Code Protection bit
   955                           ;	CP = OFF, Code protection off
   956  2007                     	org	8199
   957  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _time in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _time in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _time in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _time in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _time in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _change
                       _servoRotate0
                     _servoRotate180
                      _servoRotate90
                             _timer0
 ---------------------------------------------------------------------------------
 (1) _timer0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _servoRotate180                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _time                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change
   _servoRotate0
   _servoRotate180
   _servoRotate90
   _timer0

 _time (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       7      12        0.0%
ABS                  0      0       7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jan 02 15:38:44 2022

                     l52 00F6                       l49 00F2                       l82 00B6  
                     l84 00B9                       l77 00E0                       l79 00E3  
                     l87 00CB                       l89 00CE                       u10 00DC  
                     u11 00DB                       u20 00B2                       u21 00B1  
                     u30 00C7                       u15 00D8                       u31 00C6  
                     u25 00AE                       u35 00C3                      l741 0084  
                    l733 006F                      l743 0089                      l735 0073  
                    l681 00E4                      l745 0090                      l737 0074  
                    l691 00DC                      l683 00ED                      l747 0095  
                    l739 007E                      l693 00A5                      l685 00F1  
                    l749 009C                      l687 00F3                      l695 00B2  
                    l689 00CF                      l697 00BA                      l699 00C7  
                    _GIE 005F                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RD7 0047                      u120 0084  
                    u121 0083                      u130 0090                      u131 008F  
                    u140 009C                      u141 009B                      _PS0 0408  
                    _PS1 0409                      _PS2 040A                      _PSA 040B  
                   _T0CS 040D                     _T0SE 040C                     _RBIE 005B  
                   _RBIF 0058                     i1l63 0066                     _TMR0 0001  
                   u4_20 0029                     u4_21 0028                     u5_20 002D  
                   u5_21 002C                     u6_20 0031                     u6_21 0030  
                   u7_20 0037                     u7_21 0036                     u8_20 003F  
                   u8_21 003E                     u9_20 0048                     u9_21 0047  
                   _main 006F                     _time 0025                     btemp 007E  
                   start 0010          ??_servoRotate90 0073                    ?_main 0070  
                  ?_time 0070                    i1l701 0025                    i1l711 0037  
                  i1l703 0029                    i1l721 0048                    i1l713 003B  
                  i1l705 002D                    i1l731 0065                    i1l723 004C  
                  i1l715 003F                    i1l707 0031                    i1l725 0052  
                  i1l717 0043                    i1l709 0033                    i1l727 005F  
                  i1l719 0044                    i1l729 0061                    u10_20 004C  
                  u10_21 004B                    u11_20 005F                    u11_21 005E  
                  u11_25 005B                    _count 0073                    pclath 000A  
                  status 0003                    wtemp0 007E         ??_servoRotate180 0073  
        __initialization 0013             __end_of_main 00A5             __end_of_time 006F  
                 ??_main 0073                   ??_time 0070                   _ADCON1 009F  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TRISD7 0447  
                 _change 00F3                   _degree 0075                   _timer0 00E4  
           __pdataCOMMON 0075                   saved_w 007E  __end_of__initialization 0021  
         __pcstackCOMMON 0070               __pmaintext 006F                  ?_change 0070  
             __pintentry 0004                  ?_timer0 0070    __end_of_servoRotate90 00BA  
        __size_of_change 0004                  __ptext1 00E4                  __ptext2 00A5  
                __ptext3 00BA                  __ptext4 00CF                  __ptext5 00F3  
                __ptext6 0025          __size_of_timer0 000F     end_of_initialization 0021  
          ?_servoRotate0 0070           ??_servoRotate0 0073           __end_of_change 00F7  
__size_of_servoRotate180 0015            __pidataCOMMON 00F7           __end_of_timer0 00F3  
    start_initialization 0013                 ??_change 0073                 ??_timer0 0073  
            __pbssCOMMON 0073                ___latbits 0002     __end_of_servoRotate0 00E4  
      interrupt_function 0004           _servoRotate180 00BA   __size_of_servoRotate90 0015  
 __end_of_servoRotate180 00CF            __size_of_main 0036            __size_of_time 004A  
        ?_servoRotate180 0070            _servoRotate90 00A5    __size_of_servoRotate0 0015  
               intlevel1 0000           ?_servoRotate90 0070             _servoRotate0 00CF  
